[
  {
    "name": "roles/accessapproval.approver",
    "title": "Access Approval Approver",
    "description": "Ability to view or act on access approval requests and view configuration",
    "includedPermissions": [
      "accessapproval.requests.approve",
      "accessapproval.requests.dismiss",
      "accessapproval.requests.get",
      "accessapproval.requests.invalidate",
      "accessapproval.requests.list",
      "accessapproval.serviceAccounts.get",
      "accessapproval.settings.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/accessapproval.configEditor",
    "title": "Access Approval Config Editor",
    "description": "Ability to update the Access Approval configuration",
    "includedPermissions": [
      "accessapproval.serviceAccounts.get",
      "accessapproval.settings.delete",
      "accessapproval.settings.get",
      "accessapproval.settings.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/accessapproval.invalidator",
    "title": "Access Approval Invalidator",
    "description": "Ability to invalidate existing approved approval requests",
    "includedPermissions": [
      "accessapproval.requests.invalidate",
      "accessapproval.serviceAccounts.get",
      "accessapproval.settings.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/accessapproval.viewer",
    "title": "Access Approval Viewer",
    "description": "Ability to view access approval requests and configuration",
    "includedPermissions": [
      "accessapproval.requests.get",
      "accessapproval.requests.list",
      "accessapproval.serviceAccounts.get",
      "accessapproval.settings.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/accesscontextmanager.gcpAccessAdmin",
    "title": "Cloud Access Binding Admin",
    "description": "Create, edit, and change Cloud access bindings.",
    "includedPermissions": [
      "accesscontextmanager.gcpUserAccessBindings.create",
      "accesscontextmanager.gcpUserAccessBindings.delete",
      "accesscontextmanager.gcpUserAccessBindings.get",
      "accesscontextmanager.gcpUserAccessBindings.list",
      "accesscontextmanager.gcpUserAccessBindings.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/accesscontextmanager.gcpAccessReader",
    "title": "Cloud Access Binding Reader",
    "description": "Read access to Cloud access bindings.",
    "includedPermissions": [
      "accesscontextmanager.gcpUserAccessBindings.get",
      "accesscontextmanager.gcpUserAccessBindings.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/accesscontextmanager.policyAdmin",
    "title": "Access Context Manager Admin",
    "description": "Full access to policies, access levels, access zones and authorized orgs descs.",
    "includedPermissions": [
      "accesscontextmanager.accessLevels.create",
      "accesscontextmanager.accessLevels.delete",
      "accesscontextmanager.accessLevels.get",
      "accesscontextmanager.accessLevels.list",
      "accesscontextmanager.accessLevels.replaceAll",
      "accesscontextmanager.accessLevels.update",
      "accesscontextmanager.accessPolicies.create",
      "accesscontextmanager.accessPolicies.delete",
      "accesscontextmanager.accessPolicies.get",
      "accesscontextmanager.accessPolicies.getIamPolicy",
      "accesscontextmanager.accessPolicies.list",
      "accesscontextmanager.accessPolicies.setIamPolicy",
      "accesscontextmanager.accessPolicies.update",
      "accesscontextmanager.accessZones.create",
      "accesscontextmanager.accessZones.delete",
      "accesscontextmanager.accessZones.get",
      "accesscontextmanager.accessZones.list",
      "accesscontextmanager.accessZones.update",
      "accesscontextmanager.authorizedOrgsDescs.create",
      "accesscontextmanager.authorizedOrgsDescs.delete",
      "accesscontextmanager.authorizedOrgsDescs.get",
      "accesscontextmanager.authorizedOrgsDescs.list",
      "accesscontextmanager.authorizedOrgsDescs.update",
      "accesscontextmanager.policies.create",
      "accesscontextmanager.policies.delete",
      "accesscontextmanager.policies.get",
      "accesscontextmanager.policies.getIamPolicy",
      "accesscontextmanager.policies.list",
      "accesscontextmanager.policies.setIamPolicy",
      "accesscontextmanager.policies.update",
      "accesscontextmanager.servicePerimeters.commit",
      "accesscontextmanager.servicePerimeters.create",
      "accesscontextmanager.servicePerimeters.delete",
      "accesscontextmanager.servicePerimeters.get",
      "accesscontextmanager.servicePerimeters.list",
      "accesscontextmanager.servicePerimeters.replaceAll",
      "accesscontextmanager.servicePerimeters.update",
      "cloudasset.assets.searchAllResources",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/accesscontextmanager.policyEditor",
    "title": "Access Context Manager Editor",
    "description": "Edit access to policies.  Create, edit, and change access levels, access zones and authorized orgs descs.",
    "includedPermissions": [
      "accesscontextmanager.accessLevels.create",
      "accesscontextmanager.accessLevels.delete",
      "accesscontextmanager.accessLevels.get",
      "accesscontextmanager.accessLevels.list",
      "accesscontextmanager.accessLevels.replaceAll",
      "accesscontextmanager.accessLevels.update",
      "accesscontextmanager.accessPolicies.create",
      "accesscontextmanager.accessPolicies.delete",
      "accesscontextmanager.accessPolicies.get",
      "accesscontextmanager.accessPolicies.getIamPolicy",
      "accesscontextmanager.accessPolicies.list",
      "accesscontextmanager.accessPolicies.update",
      "accesscontextmanager.accessZones.create",
      "accesscontextmanager.accessZones.delete",
      "accesscontextmanager.accessZones.get",
      "accesscontextmanager.accessZones.list",
      "accesscontextmanager.accessZones.update",
      "accesscontextmanager.authorizedOrgsDescs.create",
      "accesscontextmanager.authorizedOrgsDescs.delete",
      "accesscontextmanager.authorizedOrgsDescs.get",
      "accesscontextmanager.authorizedOrgsDescs.list",
      "accesscontextmanager.authorizedOrgsDescs.update",
      "accesscontextmanager.policies.create",
      "accesscontextmanager.policies.delete",
      "accesscontextmanager.policies.get",
      "accesscontextmanager.policies.getIamPolicy",
      "accesscontextmanager.policies.list",
      "accesscontextmanager.policies.update",
      "accesscontextmanager.servicePerimeters.commit",
      "accesscontextmanager.servicePerimeters.create",
      "accesscontextmanager.servicePerimeters.delete",
      "accesscontextmanager.servicePerimeters.get",
      "accesscontextmanager.servicePerimeters.list",
      "accesscontextmanager.servicePerimeters.replaceAll",
      "accesscontextmanager.servicePerimeters.update",
      "cloudasset.assets.searchAllResources",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/accesscontextmanager.policyReader",
    "title": "Access Context Manager Reader",
    "description": "Read access to policies, access levels, access zones and authorized orgs descs.",
    "includedPermissions": [
      "accesscontextmanager.accessLevels.get",
      "accesscontextmanager.accessLevels.list",
      "accesscontextmanager.accessPolicies.get",
      "accesscontextmanager.accessPolicies.getIamPolicy",
      "accesscontextmanager.accessPolicies.list",
      "accesscontextmanager.accessZones.get",
      "accesscontextmanager.accessZones.list",
      "accesscontextmanager.authorizedOrgsDescs.get",
      "accesscontextmanager.authorizedOrgsDescs.list",
      "accesscontextmanager.policies.get",
      "accesscontextmanager.policies.getIamPolicy",
      "accesscontextmanager.policies.list",
      "accesscontextmanager.servicePerimeters.get",
      "accesscontextmanager.servicePerimeters.list",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/accesscontextmanager.vpcScTroubleshooterViewer",
    "title": "VPC Service Controls Troubleshooter Viewer",
    "includedPermissions": [
      "accesscontextmanager.accessLevels.get",
      "accesscontextmanager.accessLevels.list",
      "accesscontextmanager.authorizedOrgsDescs.get",
      "accesscontextmanager.authorizedOrgsDescs.list",
      "accesscontextmanager.policies.get",
      "accesscontextmanager.policies.getIamPolicy",
      "accesscontextmanager.policies.list",
      "accesscontextmanager.servicePerimeters.get",
      "accesscontextmanager.servicePerimeters.list",
      "logging.exclusions.get",
      "logging.exclusions.list",
      "logging.logEntries.list",
      "logging.logMetrics.get",
      "logging.logMetrics.list",
      "logging.logServiceIndexes.list",
      "logging.logServices.list",
      "logging.logs.list",
      "logging.sinks.get",
      "logging.sinks.list",
      "logging.usage.get",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/actions.Admin",
    "title": "Actions Admin",
    "description": "Access to edit and deploy an action",
    "includedPermissions": [
      "actions.agent.claimContentProvider",
      "actions.agent.get",
      "actions.agent.update",
      "actions.agentVersions.create",
      "actions.agentVersions.delete",
      "actions.agentVersions.deploy",
      "actions.agentVersions.get",
      "actions.agentVersions.list",
      "firebase.projects.get",
      "firebase.projects.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/actions.Viewer",
    "title": "Actions Viewer",
    "description": "Access to view an action",
    "includedPermissions": [
      "actions.agent.get",
      "actions.agentVersions.get",
      "actions.agentVersions.list",
      "firebase.projects.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/advisorynotifications.viewer",
    "title": "Advisory Notifications Viewer",
    "description": "Grants view access in Advisory Notifications",
    "includedPermissions": [
      "advisorynotifications.notifications.get",
      "advisorynotifications.notifications.list",
      "resourcemanager.organizations.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/aiplatform.admin",
    "title": "Vertex AI Administrator",
    "description": "Grants full access to all resources in Vertex AI",
    "includedPermissions": [
      "aiplatform.annotationSpecs.create",
      "aiplatform.annotationSpecs.delete",
      "aiplatform.annotationSpecs.get",
      "aiplatform.annotationSpecs.list",
      "aiplatform.annotationSpecs.update",
      "aiplatform.annotations.create",
      "aiplatform.annotations.delete",
      "aiplatform.annotations.get",
      "aiplatform.annotations.list",
      "aiplatform.annotations.update",
      "aiplatform.artifacts.create",
      "aiplatform.artifacts.delete",
      "aiplatform.artifacts.get",
      "aiplatform.artifacts.list",
      "aiplatform.artifacts.update",
      "aiplatform.batchPredictionJobs.cancel",
      "aiplatform.batchPredictionJobs.create",
      "aiplatform.batchPredictionJobs.delete",
      "aiplatform.batchPredictionJobs.get",
      "aiplatform.batchPredictionJobs.list",
      "aiplatform.contexts.addContextArtifactsAndExecutions",
      "aiplatform.contexts.addContextChildren",
      "aiplatform.contexts.create",
      "aiplatform.contexts.delete",
      "aiplatform.contexts.get",
      "aiplatform.contexts.list",
      "aiplatform.contexts.queryContextLineageSubgraph",
      "aiplatform.contexts.update",
      "aiplatform.customJobs.cancel",
      "aiplatform.customJobs.create",
      "aiplatform.customJobs.delete",
      "aiplatform.customJobs.get",
      "aiplatform.customJobs.list",
      "aiplatform.dataItems.create",
      "aiplatform.dataItems.delete",
      "aiplatform.dataItems.get",
      "aiplatform.dataItems.list",
      "aiplatform.dataItems.update",
      "aiplatform.dataLabelingJobs.cancel",
      "aiplatform.dataLabelingJobs.create",
      "aiplatform.dataLabelingJobs.delete",
      "aiplatform.dataLabelingJobs.get",
      "aiplatform.dataLabelingJobs.list",
      "aiplatform.datasets.create",
      "aiplatform.datasets.delete",
      "aiplatform.datasets.export",
      "aiplatform.datasets.get",
      "aiplatform.datasets.import",
      "aiplatform.datasets.list",
      "aiplatform.datasets.update",
      "aiplatform.deploymentResourcePools.create",
      "aiplatform.deploymentResourcePools.delete",
      "aiplatform.deploymentResourcePools.get",
      "aiplatform.deploymentResourcePools.list",
      "aiplatform.deploymentResourcePools.queryDeployedModels",
      "aiplatform.deploymentResourcePools.update",
      "aiplatform.edgeDeploymentJobs.create",
      "aiplatform.edgeDeploymentJobs.delete",
      "aiplatform.edgeDeploymentJobs.get",
      "aiplatform.edgeDeploymentJobs.list",
      "aiplatform.edgeDeviceDebugInfo.get",
      "aiplatform.edgeDevices.create",
      "aiplatform.edgeDevices.delete",
      "aiplatform.edgeDevices.get",
      "aiplatform.edgeDevices.list",
      "aiplatform.edgeDevices.update",
      "aiplatform.endpoints.create",
      "aiplatform.endpoints.delete",
      "aiplatform.endpoints.deploy",
      "aiplatform.endpoints.explain",
      "aiplatform.endpoints.get",
      "aiplatform.endpoints.list",
      "aiplatform.endpoints.predict",
      "aiplatform.endpoints.undeploy",
      "aiplatform.endpoints.update",
      "aiplatform.entityTypes.create",
      "aiplatform.entityTypes.delete",
      "aiplatform.entityTypes.deleteFeatureValues",
      "aiplatform.entityTypes.exportFeatureValues",
      "aiplatform.entityTypes.get",
      "aiplatform.entityTypes.getIamPolicy",
      "aiplatform.entityTypes.importFeatureValues",
      "aiplatform.entityTypes.list",
      "aiplatform.entityTypes.readFeatureValues",
      "aiplatform.entityTypes.setIamPolicy",
      "aiplatform.entityTypes.streamingReadFeatureValues",
      "aiplatform.entityTypes.update",
      "aiplatform.entityTypes.writeFeatureValues",
      "aiplatform.executions.addExecutionEvents",
      "aiplatform.executions.create",
      "aiplatform.executions.delete",
      "aiplatform.executions.get",
      "aiplatform.executions.list",
      "aiplatform.executions.queryExecutionInputsAndOutputs",
      "aiplatform.executions.update",
      "aiplatform.featureOnlineStores.create",
      "aiplatform.featureOnlineStores.delete",
      "aiplatform.featureOnlineStores.get",
      "aiplatform.featureOnlineStores.list",
      "aiplatform.featureOnlineStores.update",
      "aiplatform.featureViewSyncs.get",
      "aiplatform.featureViewSyncs.list",
      "aiplatform.featureViews.create",
      "aiplatform.featureViews.delete",
      "aiplatform.featureViews.fetchFeatureValues",
      "aiplatform.featureViews.get",
      "aiplatform.featureViews.list",
      "aiplatform.featureViews.searchNearestEntities",
      "aiplatform.featureViews.sync",
      "aiplatform.featureViews.update",
      "aiplatform.features.create",
      "aiplatform.features.delete",
      "aiplatform.features.get",
      "aiplatform.features.list",
      "aiplatform.features.update",
      "aiplatform.featurestores.batchReadFeatureValues",
      "aiplatform.featurestores.create",
      "aiplatform.featurestores.delete",
      "aiplatform.featurestores.exportFeatures",
      "aiplatform.featurestores.get",
      "aiplatform.featurestores.getIamPolicy",
      "aiplatform.featurestores.importFeatures",
      "aiplatform.featurestores.list",
      "aiplatform.featurestores.readFeatures",
      "aiplatform.featurestores.setIamPolicy",
      "aiplatform.featurestores.update",
      "aiplatform.featurestores.writeFeatures",
      "aiplatform.humanInTheLoops.cancel",
      "aiplatform.humanInTheLoops.create",
      "aiplatform.humanInTheLoops.delete",
      "aiplatform.humanInTheLoops.get",
      "aiplatform.humanInTheLoops.list",
      "aiplatform.humanInTheLoops.queryAnnotationStats",
      "aiplatform.humanInTheLoops.send",
      "aiplatform.humanInTheLoops.update",
      "aiplatform.hyperparameterTuningJobs.cancel",
      "aiplatform.hyperparameterTuningJobs.create",
      "aiplatform.hyperparameterTuningJobs.delete",
      "aiplatform.hyperparameterTuningJobs.get",
      "aiplatform.hyperparameterTuningJobs.list",
      "aiplatform.indexEndpoints.create",
      "aiplatform.indexEndpoints.delete",
      "aiplatform.indexEndpoints.deploy",
      "aiplatform.indexEndpoints.get",
      "aiplatform.indexEndpoints.list",
      "aiplatform.indexEndpoints.queryVectors",
      "aiplatform.indexEndpoints.undeploy",
      "aiplatform.indexEndpoints.update",
      "aiplatform.indexes.create",
      "aiplatform.indexes.delete",
      "aiplatform.indexes.get",
      "aiplatform.indexes.list",
      "aiplatform.indexes.update",
      "aiplatform.locations.get",
      "aiplatform.locations.list",
      "aiplatform.metadataSchemas.create",
      "aiplatform.metadataSchemas.delete",
      "aiplatform.metadataSchemas.get",
      "aiplatform.metadataSchemas.list",
      "aiplatform.metadataStores.create",
      "aiplatform.metadataStores.delete",
      "aiplatform.metadataStores.get",
      "aiplatform.metadataStores.list",
      "aiplatform.migratableResources.migrate",
      "aiplatform.migratableResources.search",
      "aiplatform.modelDeploymentMonitoringJobs.create",
      "aiplatform.modelDeploymentMonitoringJobs.delete",
      "aiplatform.modelDeploymentMonitoringJobs.get",
      "aiplatform.modelDeploymentMonitoringJobs.list",
      "aiplatform.modelDeploymentMonitoringJobs.pause",
      "aiplatform.modelDeploymentMonitoringJobs.resume",
      "aiplatform.modelDeploymentMonitoringJobs.searchStatsAnomalies",
      "aiplatform.modelDeploymentMonitoringJobs.update",
      "aiplatform.modelEvaluationSlices.get",
      "aiplatform.modelEvaluationSlices.import",
      "aiplatform.modelEvaluationSlices.list",
      "aiplatform.modelEvaluations.exportEvaluatedDataItems",
      "aiplatform.modelEvaluations.get",
      "aiplatform.modelEvaluations.import",
      "aiplatform.modelEvaluations.list",
      "aiplatform.models.delete",
      "aiplatform.models.export",
      "aiplatform.models.get",
      "aiplatform.models.list",
      "aiplatform.models.update",
      "aiplatform.models.upload",
      "aiplatform.nasJobs.cancel",
      "aiplatform.nasJobs.create",
      "aiplatform.nasJobs.delete",
      "aiplatform.nasJobs.get",
      "aiplatform.nasJobs.list",
      "aiplatform.nasTrialDetails.get",
      "aiplatform.nasTrialDetails.list",
      "aiplatform.operations.list",
      "aiplatform.persistentResources.create",
      "aiplatform.persistentResources.delete",
      "aiplatform.persistentResources.get",
      "aiplatform.persistentResources.list",
      "aiplatform.pipelineJobs.cancel",
      "aiplatform.pipelineJobs.create",
      "aiplatform.pipelineJobs.delete",
      "aiplatform.pipelineJobs.get",
      "aiplatform.pipelineJobs.list",
      "aiplatform.schedules.create",
      "aiplatform.schedules.delete",
      "aiplatform.schedules.get",
      "aiplatform.schedules.list",
      "aiplatform.schedules.update",
      "aiplatform.specialistPools.create",
      "aiplatform.specialistPools.delete",
      "aiplatform.specialistPools.get",
      "aiplatform.specialistPools.list",
      "aiplatform.specialistPools.update",
      "aiplatform.studies.create",
      "aiplatform.studies.delete",
      "aiplatform.studies.get",
      "aiplatform.studies.list",
      "aiplatform.studies.update",
      "aiplatform.tensorboardExperiments.create",
      "aiplatform.tensorboardExperiments.delete",
      "aiplatform.tensorboardExperiments.get",
      "aiplatform.tensorboardExperiments.list",
      "aiplatform.tensorboardExperiments.update",
      "aiplatform.tensorboardExperiments.write",
      "aiplatform.tensorboardRuns.batchCreate",
      "aiplatform.tensorboardRuns.create",
      "aiplatform.tensorboardRuns.delete",
      "aiplatform.tensorboardRuns.get",
      "aiplatform.tensorboardRuns.list",
      "aiplatform.tensorboardRuns.update",
      "aiplatform.tensorboardRuns.write",
      "aiplatform.tensorboardTimeSeries.batchCreate",
      "aiplatform.tensorboardTimeSeries.batchRead",
      "aiplatform.tensorboardTimeSeries.create",
      "aiplatform.tensorboardTimeSeries.delete",
      "aiplatform.tensorboardTimeSeries.get",
      "aiplatform.tensorboardTimeSeries.list",
      "aiplatform.tensorboardTimeSeries.read",
      "aiplatform.tensorboardTimeSeries.update",
      "aiplatform.tensorboards.create",
      "aiplatform.tensorboards.delete",
      "aiplatform.tensorboards.get",
      "aiplatform.tensorboards.list",
      "aiplatform.tensorboards.recordAccess",
      "aiplatform.tensorboards.update",
      "aiplatform.trainingPipelines.cancel",
      "aiplatform.trainingPipelines.create",
      "aiplatform.trainingPipelines.delete",
      "aiplatform.trainingPipelines.get",
      "aiplatform.trainingPipelines.list",
      "aiplatform.trials.create",
      "aiplatform.trials.delete",
      "aiplatform.trials.get",
      "aiplatform.trials.list",
      "aiplatform.trials.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/aiplatform.customCodeServiceAgent",
    "title": "Vertex AI Custom Code Service Agent",
    "description": "Gives Vertex AI Custom Code the proper permissions.",
    "includedPermissions": [
      "aiplatform.annotationSpecs.create",
      "aiplatform.annotationSpecs.delete",
      "aiplatform.annotationSpecs.get",
      "aiplatform.annotationSpecs.list",
      "aiplatform.annotationSpecs.update",
      "aiplatform.annotations.create",
      "aiplatform.annotations.delete",
      "aiplatform.annotations.get",
      "aiplatform.annotations.list",
      "aiplatform.annotations.update",
      "aiplatform.artifacts.create",
      "aiplatform.artifacts.delete",
      "aiplatform.artifacts.get",
      "aiplatform.artifacts.list",
      "aiplatform.artifacts.update",
      "aiplatform.batchPredictionJobs.cancel",
      "aiplatform.batchPredictionJobs.create",
      "aiplatform.batchPredictionJobs.delete",
      "aiplatform.batchPredictionJobs.get",
      "aiplatform.batchPredictionJobs.list",
      "aiplatform.contexts.addContextArtifactsAndExecutions",
      "aiplatform.contexts.addContextChildren",
      "aiplatform.contexts.create",
      "aiplatform.contexts.delete",
      "aiplatform.contexts.get",
      "aiplatform.contexts.list",
      "aiplatform.contexts.queryContextLineageSubgraph",
      "aiplatform.contexts.update",
      "aiplatform.customJobs.cancel",
      "aiplatform.customJobs.create",
      "aiplatform.customJobs.delete",
      "aiplatform.customJobs.get",
      "aiplatform.customJobs.list",
      "aiplatform.dataItems.create",
      "aiplatform.dataItems.delete",
      "aiplatform.dataItems.get",
      "aiplatform.dataItems.list",
      "aiplatform.dataItems.update",
      "aiplatform.dataLabelingJobs.cancel",
      "aiplatform.dataLabelingJobs.create",
      "aiplatform.dataLabelingJobs.delete",
      "aiplatform.dataLabelingJobs.get",
      "aiplatform.dataLabelingJobs.list",
      "aiplatform.datasets.create",
      "aiplatform.datasets.delete",
      "aiplatform.datasets.export",
      "aiplatform.datasets.get",
      "aiplatform.datasets.import",
      "aiplatform.datasets.list",
      "aiplatform.datasets.update",
      "aiplatform.deploymentResourcePools.create",
      "aiplatform.deploymentResourcePools.delete",
      "aiplatform.deploymentResourcePools.get",
      "aiplatform.deploymentResourcePools.list",
      "aiplatform.deploymentResourcePools.queryDeployedModels",
      "aiplatform.deploymentResourcePools.update",
      "aiplatform.edgeDeploymentJobs.create",
      "aiplatform.edgeDeploymentJobs.delete",
      "aiplatform.edgeDeploymentJobs.get",
      "aiplatform.edgeDeploymentJobs.list",
      "aiplatform.edgeDeviceDebugInfo.get",
      "aiplatform.edgeDevices.create",
      "aiplatform.edgeDevices.delete",
      "aiplatform.edgeDevices.get",
      "aiplatform.edgeDevices.list",
      "aiplatform.edgeDevices.update",
      "aiplatform.endpoints.create",
      "aiplatform.endpoints.delete",
      "aiplatform.endpoints.deploy",
      "aiplatform.endpoints.explain",
      "aiplatform.endpoints.get",
      "aiplatform.endpoints.list",
      "aiplatform.endpoints.predict",
      "aiplatform.endpoints.undeploy",
      "aiplatform.endpoints.update",
      "aiplatform.entityTypes.create",
      "aiplatform.entityTypes.delete",
      "aiplatform.entityTypes.deleteFeatureValues",
      "aiplatform.entityTypes.exportFeatureValues",
      "aiplatform.entityTypes.get",
      "aiplatform.entityTypes.importFeatureValues",
      "aiplatform.entityTypes.list",
      "aiplatform.entityTypes.readFeatureValues",
      "aiplatform.entityTypes.streamingReadFeatureValues",
      "aiplatform.entityTypes.update",
      "aiplatform.entityTypes.writeFeatureValues",
      "aiplatform.executions.addExecutionEvents",
      "aiplatform.executions.create",
      "aiplatform.executions.delete",
      "aiplatform.executions.get",
      "aiplatform.executions.list",
      "aiplatform.executions.queryExecutionInputsAndOutputs",
      "aiplatform.executions.update",
      "aiplatform.featureOnlineStores.create",
      "aiplatform.featureOnlineStores.delete",
      "aiplatform.featureOnlineStores.get",
      "aiplatform.featureOnlineStores.list",
      "aiplatform.featureOnlineStores.update",
      "aiplatform.featureViewSyncs.get",
      "aiplatform.featureViewSyncs.list",
      "aiplatform.featureViews.create",
      "aiplatform.featureViews.delete",
      "aiplatform.featureViews.fetchFeatureValues",
      "aiplatform.featureViews.get",
      "aiplatform.featureViews.list",
      "aiplatform.featureViews.searchNearestEntities",
      "aiplatform.featureViews.sync",
      "aiplatform.featureViews.update",
      "aiplatform.features.create",
      "aiplatform.features.delete",
      "aiplatform.features.get",
      "aiplatform.features.list",
      "aiplatform.features.update",
      "aiplatform.featurestores.batchReadFeatureValues",
      "aiplatform.featurestores.create",
      "aiplatform.featurestores.delete",
      "aiplatform.featurestores.exportFeatures",
      "aiplatform.featurestores.get",
      "aiplatform.featurestores.importFeatures",
      "aiplatform.featurestores.list",
      "aiplatform.featurestores.readFeatures",
      "aiplatform.featurestores.update",
      "aiplatform.featurestores.writeFeatures",
      "aiplatform.humanInTheLoops.cancel",
      "aiplatform.humanInTheLoops.create",
      "aiplatform.humanInTheLoops.delete",
      "aiplatform.humanInTheLoops.get",
      "aiplatform.humanInTheLoops.list",
      "aiplatform.humanInTheLoops.queryAnnotationStats",
      "aiplatform.humanInTheLoops.send",
      "aiplatform.humanInTheLoops.update",
      "aiplatform.hyperparameterTuningJobs.cancel",
      "aiplatform.hyperparameterTuningJobs.create",
      "aiplatform.hyperparameterTuningJobs.delete",
      "aiplatform.hyperparameterTuningJobs.get",
      "aiplatform.hyperparameterTuningJobs.list",
      "aiplatform.indexEndpoints.create",
      "aiplatform.indexEndpoints.delete",
      "aiplatform.indexEndpoints.deploy",
      "aiplatform.indexEndpoints.get",
      "aiplatform.indexEndpoints.list",
      "aiplatform.indexEndpoints.queryVectors",
      "aiplatform.indexEndpoints.undeploy",
      "aiplatform.indexEndpoints.update",
      "aiplatform.indexes.create",
      "aiplatform.indexes.delete",
      "aiplatform.indexes.get",
      "aiplatform.indexes.list",
      "aiplatform.indexes.update",
      "aiplatform.locations.get",
      "aiplatform.locations.list",
      "aiplatform.metadataSchemas.create",
      "aiplatform.metadataSchemas.delete",
      "aiplatform.metadataSchemas.get",
      "aiplatform.metadataSchemas.list",
      "aiplatform.metadataStores.create",
      "aiplatform.metadataStores.delete",
      "aiplatform.metadataStores.get",
      "aiplatform.metadataStores.list",
      "aiplatform.modelDeploymentMonitoringJobs.create",
      "aiplatform.modelDeploymentMonitoringJobs.delete",
      "aiplatform.modelDeploymentMonitoringJobs.get",
      "aiplatform.modelDeploymentMonitoringJobs.list",
      "aiplatform.modelDeploymentMonitoringJobs.pause",
      "aiplatform.modelDeploymentMonitoringJobs.resume",
      "aiplatform.modelDeploymentMonitoringJobs.searchStatsAnomalies",
      "aiplatform.modelDeploymentMonitoringJobs.update",
      "aiplatform.modelEvaluationSlices.get",
      "aiplatform.modelEvaluationSlices.import",
      "aiplatform.modelEvaluationSlices.list",
      "aiplatform.modelEvaluations.exportEvaluatedDataItems",
      "aiplatform.modelEvaluations.get",
      "aiplatform.modelEvaluations.import",
      "aiplatform.modelEvaluations.list",
      "aiplatform.models.delete",
      "aiplatform.models.export",
      "aiplatform.models.get",
      "aiplatform.models.list",
      "aiplatform.models.update",
      "aiplatform.models.upload",
      "aiplatform.nasJobs.cancel",
      "aiplatform.nasJobs.create",
      "aiplatform.nasJobs.delete",
      "aiplatform.nasJobs.get",
      "aiplatform.nasJobs.list",
      "aiplatform.nasTrialDetails.get",
      "aiplatform.nasTrialDetails.list",
      "aiplatform.operations.list",
      "aiplatform.persistentResources.get",
      "aiplatform.persistentResources.list",
      "aiplatform.pipelineJobs.cancel",
      "aiplatform.pipelineJobs.create",
      "aiplatform.pipelineJobs.delete",
      "aiplatform.pipelineJobs.get",
      "aiplatform.pipelineJobs.list",
      "aiplatform.schedules.create",
      "aiplatform.schedules.delete",
      "aiplatform.schedules.get",
      "aiplatform.schedules.list",
      "aiplatform.schedules.update",
      "aiplatform.specialistPools.create",
      "aiplatform.specialistPools.delete",
      "aiplatform.specialistPools.get",
      "aiplatform.specialistPools.list",
      "aiplatform.specialistPools.update",
      "aiplatform.studies.create",
      "aiplatform.studies.delete",
      "aiplatform.studies.get",
      "aiplatform.studies.list",
      "aiplatform.studies.update",
      "aiplatform.tensorboardExperiments.create",
      "aiplatform.tensorboardExperiments.delete",
      "aiplatform.tensorboardExperiments.get",
      "aiplatform.tensorboardExperiments.list",
      "aiplatform.tensorboardExperiments.update",
      "aiplatform.tensorboardExperiments.write",
      "aiplatform.tensorboardRuns.batchCreate",
      "aiplatform.tensorboardRuns.create",
      "aiplatform.tensorboardRuns.delete",
      "aiplatform.tensorboardRuns.get",
      "aiplatform.tensorboardRuns.list",
      "aiplatform.tensorboardRuns.update",
      "aiplatform.tensorboardRuns.write",
      "aiplatform.tensorboardTimeSeries.batchCreate",
      "aiplatform.tensorboardTimeSeries.batchRead",
      "aiplatform.tensorboardTimeSeries.create",
      "aiplatform.tensorboardTimeSeries.delete",
      "aiplatform.tensorboardTimeSeries.get",
      "aiplatform.tensorboardTimeSeries.list",
      "aiplatform.tensorboardTimeSeries.read",
      "aiplatform.tensorboardTimeSeries.update",
      "aiplatform.tensorboards.create",
      "aiplatform.tensorboards.delete",
      "aiplatform.tensorboards.get",
      "aiplatform.tensorboards.list",
      "aiplatform.tensorboards.update",
      "aiplatform.trainingPipelines.cancel",
      "aiplatform.trainingPipelines.create",
      "aiplatform.trainingPipelines.delete",
      "aiplatform.trainingPipelines.get",
      "aiplatform.trainingPipelines.list",
      "aiplatform.trials.create",
      "aiplatform.trials.delete",
      "aiplatform.trials.get",
      "aiplatform.trials.list",
      "aiplatform.trials.update",
      "artifactregistry.repositories.downloadArtifacts",
      "artifactregistry.repositories.get",
      "artifactregistry.repositories.list",
      "artifactregistry.tags.get",
      "artifactregistry.versions.get",
      "bigquery.datasets.create",
      "bigquery.datasets.get",
      "bigquery.jobs.create",
      "bigquery.jobs.get",
      "bigquery.readsessions.create",
      "bigquery.readsessions.getData",
      "bigquery.tables.create",
      "bigquery.tables.export",
      "bigquery.tables.get",
      "bigquery.tables.getData",
      "bigquery.tables.update",
      "bigquery.tables.updateData",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.getAccessToken",
      "iam.serviceAccounts.getOpenIdToken",
      "iam.serviceAccounts.implicitDelegation",
      "iam.serviceAccounts.list",
      "iam.serviceAccounts.signBlob",
      "iam.serviceAccounts.signJwt",
      "logging.logEntries.create",
      "logging.logEntries.route",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.use",
      "storage.buckets.create",
      "storage.buckets.delete",
      "storage.buckets.get",
      "storage.buckets.list",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/aiplatform.entityTypeOwner",
    "title": "Vertex AI Feature Store EntityType owner",
    "description": "Provides full access to all permissions for a particular entity type resource.",
    "includedPermissions": [
      "aiplatform.entityTypes.delete",
      "aiplatform.entityTypes.deleteFeatureValues",
      "aiplatform.entityTypes.exportFeatureValues",
      "aiplatform.entityTypes.get",
      "aiplatform.entityTypes.getIamPolicy",
      "aiplatform.entityTypes.importFeatureValues",
      "aiplatform.entityTypes.readFeatureValues",
      "aiplatform.entityTypes.setIamPolicy",
      "aiplatform.entityTypes.streamingReadFeatureValues",
      "aiplatform.entityTypes.update",
      "aiplatform.entityTypes.writeFeatureValues",
      "aiplatform.featureOnlineStores.get",
      "aiplatform.featureOnlineStores.list",
      "aiplatform.featureViewSyncs.get",
      "aiplatform.featureViewSyncs.list",
      "aiplatform.featureViews.fetchFeatureValues",
      "aiplatform.featureViews.get",
      "aiplatform.featureViews.list",
      "aiplatform.features.create",
      "aiplatform.features.delete",
      "aiplatform.features.get",
      "aiplatform.features.list",
      "aiplatform.features.update",
      "aiplatform.featurestores.batchReadFeatureValues",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/aiplatform.featurestoreAdmin",
    "title": "Vertex AI Feature Store Admin",
    "description": "Grants full access to all resources in Vertex AI Feature Store",
    "includedPermissions": [
      "aiplatform.entityTypes.create",
      "aiplatform.entityTypes.delete",
      "aiplatform.entityTypes.deleteFeatureValues",
      "aiplatform.entityTypes.exportFeatureValues",
      "aiplatform.entityTypes.get",
      "aiplatform.entityTypes.getIamPolicy",
      "aiplatform.entityTypes.importFeatureValues",
      "aiplatform.entityTypes.list",
      "aiplatform.entityTypes.readFeatureValues",
      "aiplatform.entityTypes.setIamPolicy",
      "aiplatform.entityTypes.streamingReadFeatureValues",
      "aiplatform.entityTypes.update",
      "aiplatform.entityTypes.writeFeatureValues",
      "aiplatform.featureOnlineStores.create",
      "aiplatform.featureOnlineStores.delete",
      "aiplatform.featureOnlineStores.get",
      "aiplatform.featureOnlineStores.list",
      "aiplatform.featureOnlineStores.update",
      "aiplatform.featureViewSyncs.get",
      "aiplatform.featureViewSyncs.list",
      "aiplatform.featureViews.create",
      "aiplatform.featureViews.delete",
      "aiplatform.featureViews.fetchFeatureValues",
      "aiplatform.featureViews.get",
      "aiplatform.featureViews.list",
      "aiplatform.featureViews.sync",
      "aiplatform.featureViews.update",
      "aiplatform.features.create",
      "aiplatform.features.delete",
      "aiplatform.features.get",
      "aiplatform.features.list",
      "aiplatform.features.update",
      "aiplatform.featurestores.batchReadFeatureValues",
      "aiplatform.featurestores.create",
      "aiplatform.featurestores.delete",
      "aiplatform.featurestores.exportFeatures",
      "aiplatform.featurestores.get",
      "aiplatform.featurestores.getIamPolicy",
      "aiplatform.featurestores.importFeatures",
      "aiplatform.featurestores.list",
      "aiplatform.featurestores.readFeatures",
      "aiplatform.featurestores.setIamPolicy",
      "aiplatform.featurestores.update",
      "aiplatform.featurestores.writeFeatures",
      "aiplatform.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/aiplatform.featurestoreDataViewer",
    "title": "Vertex AI Feature Store Data Viewer",
    "description": "This role provides permissions to read Feature data.",
    "includedPermissions": [
      "aiplatform.entityTypes.exportFeatureValues",
      "aiplatform.entityTypes.get",
      "aiplatform.entityTypes.readFeatureValues",
      "aiplatform.entityTypes.streamingReadFeatureValues",
      "aiplatform.featureOnlineStores.get",
      "aiplatform.featureOnlineStores.list",
      "aiplatform.featureViewSyncs.get",
      "aiplatform.featureViewSyncs.list",
      "aiplatform.featureViews.fetchFeatureValues",
      "aiplatform.featureViews.get",
      "aiplatform.featureViews.list",
      "aiplatform.features.get",
      "aiplatform.features.list",
      "aiplatform.featurestores.batchReadFeatureValues",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/aiplatform.featurestoreDataWriter",
    "title": "Vertex AI Feature Store Data Writer",
    "description": "This role provides permissions to read and write Feature data.",
    "includedPermissions": [
      "aiplatform.entityTypes.deleteFeatureValues",
      "aiplatform.entityTypes.exportFeatureValues",
      "aiplatform.entityTypes.get",
      "aiplatform.entityTypes.importFeatureValues",
      "aiplatform.entityTypes.readFeatureValues",
      "aiplatform.entityTypes.streamingReadFeatureValues",
      "aiplatform.entityTypes.writeFeatureValues",
      "aiplatform.featureOnlineStores.get",
      "aiplatform.featureOnlineStores.list",
      "aiplatform.featureViewSyncs.get",
      "aiplatform.featureViewSyncs.list",
      "aiplatform.featureViews.fetchFeatureValues",
      "aiplatform.featureViews.get",
      "aiplatform.featureViews.list",
      "aiplatform.features.get",
      "aiplatform.features.list",
      "aiplatform.featurestores.batchReadFeatureValues",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/aiplatform.featurestoreInstanceCreator",
    "title": "Vertex AI Feature Store Instance Creator",
    "description": "Administrator of Featurestore resources, but not the child resources under Featurestores.",
    "includedPermissions": [
      "aiplatform.featurestores.create",
      "aiplatform.featurestores.delete",
      "aiplatform.featurestores.get",
      "aiplatform.featurestores.list",
      "aiplatform.featurestores.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/aiplatform.featurestoreResourceViewer",
    "title": "Vertex AI Feature Store Resource Viewer",
    "description": "Viewer of all resources in Vertex AI Feature Store but cannot make changes.",
    "includedPermissions": [
      "aiplatform.entityTypes.get",
      "aiplatform.entityTypes.list",
      "aiplatform.features.get",
      "aiplatform.features.list",
      "aiplatform.featurestores.get",
      "aiplatform.featurestores.list",
      "aiplatform.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/aiplatform.featurestoreUser",
    "title": "Vertex AI Feature Store User",
    "description": "Deprecated. Use featurestoreAdmin instead.",
    "includedPermissions": [
      "aiplatform.entityTypes.create",
      "aiplatform.entityTypes.delete",
      "aiplatform.entityTypes.deleteFeatureValues",
      "aiplatform.entityTypes.exportFeatureValues",
      "aiplatform.entityTypes.get",
      "aiplatform.entityTypes.getIamPolicy",
      "aiplatform.entityTypes.importFeatureValues",
      "aiplatform.entityTypes.list",
      "aiplatform.entityTypes.readFeatureValues",
      "aiplatform.entityTypes.setIamPolicy",
      "aiplatform.entityTypes.streamingReadFeatureValues",
      "aiplatform.entityTypes.update",
      "aiplatform.entityTypes.writeFeatureValues",
      "aiplatform.features.create",
      "aiplatform.features.delete",
      "aiplatform.features.get",
      "aiplatform.features.list",
      "aiplatform.features.update",
      "aiplatform.featurestores.batchReadFeatureValues",
      "aiplatform.featurestores.create",
      "aiplatform.featurestores.delete",
      "aiplatform.featurestores.exportFeatures",
      "aiplatform.featurestores.get",
      "aiplatform.featurestores.getIamPolicy",
      "aiplatform.featurestores.importFeatures",
      "aiplatform.featurestores.list",
      "aiplatform.featurestores.readFeatures",
      "aiplatform.featurestores.setIamPolicy",
      "aiplatform.featurestores.update",
      "aiplatform.featurestores.writeFeatures",
      "aiplatform.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/aiplatform.migrator",
    "title": "Vertex AI Migration Service User",
    "description": "Grants access to use migration service in Vertex AI",
    "includedPermissions": [
      "aiplatform.migratableResources.migrate",
      "aiplatform.migratableResources.search"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/aiplatform.notebookServiceAgent",
    "title": "Vertex AI Notebook Service Agent",
    "description": "Vertex AI Service Agent used to run Notebook managed resources in user project with restricted permissions.",
    "includedPermissions": [
      "logging.logEntries.create",
      "logging.logEntries.route",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.timeSeries.create"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/aiplatform.serviceAgent",
    "title": "Vertex AI Service Agent",
    "description": "Gives Vertex AI the permissions it needs to function.",
    "includedPermissions": [
      "aiplatform.annotationSpecs.create",
      "aiplatform.annotationSpecs.delete",
      "aiplatform.annotationSpecs.get",
      "aiplatform.annotationSpecs.list",
      "aiplatform.annotationSpecs.update",
      "aiplatform.annotations.create",
      "aiplatform.annotations.delete",
      "aiplatform.annotations.get",
      "aiplatform.annotations.list",
      "aiplatform.annotations.update",
      "aiplatform.artifacts.create",
      "aiplatform.artifacts.delete",
      "aiplatform.artifacts.get",
      "aiplatform.artifacts.list",
      "aiplatform.artifacts.update",
      "aiplatform.batchPredictionJobs.cancel",
      "aiplatform.batchPredictionJobs.create",
      "aiplatform.batchPredictionJobs.delete",
      "aiplatform.batchPredictionJobs.get",
      "aiplatform.batchPredictionJobs.list",
      "aiplatform.contexts.addContextArtifactsAndExecutions",
      "aiplatform.contexts.addContextChildren",
      "aiplatform.contexts.create",
      "aiplatform.contexts.delete",
      "aiplatform.contexts.get",
      "aiplatform.contexts.list",
      "aiplatform.contexts.queryContextLineageSubgraph",
      "aiplatform.contexts.update",
      "aiplatform.customJobs.cancel",
      "aiplatform.customJobs.create",
      "aiplatform.customJobs.delete",
      "aiplatform.customJobs.get",
      "aiplatform.customJobs.list",
      "aiplatform.dataItems.create",
      "aiplatform.dataItems.delete",
      "aiplatform.dataItems.get",
      "aiplatform.dataItems.list",
      "aiplatform.dataItems.update",
      "aiplatform.dataLabelingJobs.cancel",
      "aiplatform.dataLabelingJobs.create",
      "aiplatform.dataLabelingJobs.delete",
      "aiplatform.dataLabelingJobs.get",
      "aiplatform.dataLabelingJobs.list",
      "aiplatform.datasets.create",
      "aiplatform.datasets.delete",
      "aiplatform.datasets.export",
      "aiplatform.datasets.get",
      "aiplatform.datasets.import",
      "aiplatform.datasets.list",
      "aiplatform.datasets.update",
      "aiplatform.deploymentResourcePools.create",
      "aiplatform.deploymentResourcePools.delete",
      "aiplatform.deploymentResourcePools.get",
      "aiplatform.deploymentResourcePools.list",
      "aiplatform.deploymentResourcePools.queryDeployedModels",
      "aiplatform.deploymentResourcePools.update",
      "aiplatform.edgeDeploymentJobs.create",
      "aiplatform.edgeDeploymentJobs.delete",
      "aiplatform.edgeDeploymentJobs.get",
      "aiplatform.edgeDeploymentJobs.list",
      "aiplatform.edgeDeviceDebugInfo.get",
      "aiplatform.edgeDevices.create",
      "aiplatform.edgeDevices.delete",
      "aiplatform.edgeDevices.get",
      "aiplatform.edgeDevices.list",
      "aiplatform.edgeDevices.update",
      "aiplatform.endpoints.create",
      "aiplatform.endpoints.delete",
      "aiplatform.endpoints.deploy",
      "aiplatform.endpoints.explain",
      "aiplatform.endpoints.get",
      "aiplatform.endpoints.list",
      "aiplatform.endpoints.predict",
      "aiplatform.endpoints.undeploy",
      "aiplatform.endpoints.update",
      "aiplatform.entityTypes.create",
      "aiplatform.entityTypes.delete",
      "aiplatform.entityTypes.deleteFeatureValues",
      "aiplatform.entityTypes.exportFeatureValues",
      "aiplatform.entityTypes.get",
      "aiplatform.entityTypes.importFeatureValues",
      "aiplatform.entityTypes.list",
      "aiplatform.entityTypes.readFeatureValues",
      "aiplatform.entityTypes.streamingReadFeatureValues",
      "aiplatform.entityTypes.update",
      "aiplatform.entityTypes.writeFeatureValues",
      "aiplatform.executions.addExecutionEvents",
      "aiplatform.executions.create",
      "aiplatform.executions.delete",
      "aiplatform.executions.get",
      "aiplatform.executions.list",
      "aiplatform.executions.queryExecutionInputsAndOutputs",
      "aiplatform.executions.update",
      "aiplatform.featureOnlineStores.create",
      "aiplatform.featureOnlineStores.delete",
      "aiplatform.featureOnlineStores.get",
      "aiplatform.featureOnlineStores.list",
      "aiplatform.featureOnlineStores.update",
      "aiplatform.featureViewSyncs.get",
      "aiplatform.featureViewSyncs.list",
      "aiplatform.featureViews.create",
      "aiplatform.featureViews.delete",
      "aiplatform.featureViews.fetchFeatureValues",
      "aiplatform.featureViews.get",
      "aiplatform.featureViews.list",
      "aiplatform.featureViews.searchNearestEntities",
      "aiplatform.featureViews.sync",
      "aiplatform.featureViews.update",
      "aiplatform.features.create",
      "aiplatform.features.delete",
      "aiplatform.features.get",
      "aiplatform.features.list",
      "aiplatform.features.update",
      "aiplatform.featurestores.batchReadFeatureValues",
      "aiplatform.featurestores.create",
      "aiplatform.featurestores.delete",
      "aiplatform.featurestores.exportFeatures",
      "aiplatform.featurestores.get",
      "aiplatform.featurestores.importFeatures",
      "aiplatform.featurestores.list",
      "aiplatform.featurestores.readFeatures",
      "aiplatform.featurestores.update",
      "aiplatform.featurestores.writeFeatures",
      "aiplatform.humanInTheLoops.cancel",
      "aiplatform.humanInTheLoops.create",
      "aiplatform.humanInTheLoops.delete",
      "aiplatform.humanInTheLoops.get",
      "aiplatform.humanInTheLoops.list",
      "aiplatform.humanInTheLoops.queryAnnotationStats",
      "aiplatform.humanInTheLoops.send",
      "aiplatform.humanInTheLoops.update",
      "aiplatform.hyperparameterTuningJobs.cancel",
      "aiplatform.hyperparameterTuningJobs.create",
      "aiplatform.hyperparameterTuningJobs.delete",
      "aiplatform.hyperparameterTuningJobs.get",
      "aiplatform.hyperparameterTuningJobs.list",
      "aiplatform.indexEndpoints.create",
      "aiplatform.indexEndpoints.delete",
      "aiplatform.indexEndpoints.deploy",
      "aiplatform.indexEndpoints.get",
      "aiplatform.indexEndpoints.list",
      "aiplatform.indexEndpoints.queryVectors",
      "aiplatform.indexEndpoints.undeploy",
      "aiplatform.indexEndpoints.update",
      "aiplatform.indexes.create",
      "aiplatform.indexes.delete",
      "aiplatform.indexes.get",
      "aiplatform.indexes.list",
      "aiplatform.indexes.update",
      "aiplatform.locations.get",
      "aiplatform.locations.list",
      "aiplatform.metadataSchemas.create",
      "aiplatform.metadataSchemas.delete",
      "aiplatform.metadataSchemas.get",
      "aiplatform.metadataSchemas.list",
      "aiplatform.metadataStores.create",
      "aiplatform.metadataStores.delete",
      "aiplatform.metadataStores.get",
      "aiplatform.metadataStores.list",
      "aiplatform.modelDeploymentMonitoringJobs.create",
      "aiplatform.modelDeploymentMonitoringJobs.delete",
      "aiplatform.modelDeploymentMonitoringJobs.get",
      "aiplatform.modelDeploymentMonitoringJobs.list",
      "aiplatform.modelDeploymentMonitoringJobs.pause",
      "aiplatform.modelDeploymentMonitoringJobs.resume",
      "aiplatform.modelDeploymentMonitoringJobs.searchStatsAnomalies",
      "aiplatform.modelDeploymentMonitoringJobs.update",
      "aiplatform.modelEvaluationSlices.get",
      "aiplatform.modelEvaluationSlices.import",
      "aiplatform.modelEvaluationSlices.list",
      "aiplatform.modelEvaluations.exportEvaluatedDataItems",
      "aiplatform.modelEvaluations.get",
      "aiplatform.modelEvaluations.import",
      "aiplatform.modelEvaluations.list",
      "aiplatform.models.delete",
      "aiplatform.models.export",
      "aiplatform.models.get",
      "aiplatform.models.list",
      "aiplatform.models.update",
      "aiplatform.models.upload",
      "aiplatform.nasJobs.cancel",
      "aiplatform.nasJobs.create",
      "aiplatform.nasJobs.delete",
      "aiplatform.nasJobs.get",
      "aiplatform.nasJobs.list",
      "aiplatform.nasTrialDetails.get",
      "aiplatform.nasTrialDetails.list",
      "aiplatform.operations.list",
      "aiplatform.persistentResources.get",
      "aiplatform.persistentResources.list",
      "aiplatform.pipelineJobs.cancel",
      "aiplatform.pipelineJobs.create",
      "aiplatform.pipelineJobs.delete",
      "aiplatform.pipelineJobs.get",
      "aiplatform.pipelineJobs.list",
      "aiplatform.schedules.create",
      "aiplatform.schedules.delete",
      "aiplatform.schedules.get",
      "aiplatform.schedules.list",
      "aiplatform.schedules.update",
      "aiplatform.specialistPools.create",
      "aiplatform.specialistPools.delete",
      "aiplatform.specialistPools.get",
      "aiplatform.specialistPools.list",
      "aiplatform.specialistPools.update",
      "aiplatform.studies.create",
      "aiplatform.studies.delete",
      "aiplatform.studies.get",
      "aiplatform.studies.list",
      "aiplatform.studies.update",
      "aiplatform.tensorboardExperiments.create",
      "aiplatform.tensorboardExperiments.delete",
      "aiplatform.tensorboardExperiments.get",
      "aiplatform.tensorboardExperiments.list",
      "aiplatform.tensorboardExperiments.update",
      "aiplatform.tensorboardExperiments.write",
      "aiplatform.tensorboardRuns.batchCreate",
      "aiplatform.tensorboardRuns.create",
      "aiplatform.tensorboardRuns.delete",
      "aiplatform.tensorboardRuns.get",
      "aiplatform.tensorboardRuns.list",
      "aiplatform.tensorboardRuns.update",
      "aiplatform.tensorboardRuns.write",
      "aiplatform.tensorboardTimeSeries.batchCreate",
      "aiplatform.tensorboardTimeSeries.batchRead",
      "aiplatform.tensorboardTimeSeries.create",
      "aiplatform.tensorboardTimeSeries.delete",
      "aiplatform.tensorboardTimeSeries.get",
      "aiplatform.tensorboardTimeSeries.list",
      "aiplatform.tensorboardTimeSeries.read",
      "aiplatform.tensorboardTimeSeries.update",
      "aiplatform.tensorboards.create",
      "aiplatform.tensorboards.delete",
      "aiplatform.tensorboards.get",
      "aiplatform.tensorboards.list",
      "aiplatform.tensorboards.update",
      "aiplatform.trainingPipelines.cancel",
      "aiplatform.trainingPipelines.create",
      "aiplatform.trainingPipelines.delete",
      "aiplatform.trainingPipelines.get",
      "aiplatform.trainingPipelines.list",
      "aiplatform.trials.create",
      "aiplatform.trials.delete",
      "aiplatform.trials.get",
      "aiplatform.trials.list",
      "aiplatform.trials.update",
      "artifactregistry.repositories.create",
      "artifactregistry.repositories.downloadArtifacts",
      "artifactregistry.repositories.get",
      "artifactregistry.repositories.list",
      "artifactregistry.repositories.uploadArtifacts",
      "artifactregistry.tags.get",
      "artifactregistry.versions.get",
      "automl.datasets.export",
      "automl.datasets.get",
      "automl.datasets.list",
      "automl.modelEvaluations.list",
      "automl.models.get",
      "automl.models.list",
      "automl.operations.get",
      "automl.tableSpecs.get",
      "bigquery.datasets.create",
      "bigquery.datasets.get",
      "bigquery.jobs.create",
      "bigquery.jobs.get",
      "bigquery.models.create",
      "bigquery.models.export",
      "bigquery.models.getData",
      "bigquery.readsessions.create",
      "bigquery.readsessions.getData",
      "bigquery.tables.create",
      "bigquery.tables.export",
      "bigquery.tables.get",
      "bigquery.tables.getData",
      "bigquery.tables.update",
      "bigquery.tables.updateData",
      "bigtable.tables.get",
      "bigtable.tables.list",
      "bigtable.tables.readRows",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.addresses.use",
      "compute.addresses.useInternal",
      "compute.disks.create",
      "compute.disks.createTagBinding",
      "compute.disks.delete",
      "compute.disks.get",
      "compute.disks.setLabels",
      "compute.disks.use",
      "compute.disks.useReadOnly",
      "compute.instances.attachDisk",
      "compute.instances.create",
      "compute.instances.createTagBinding",
      "compute.instances.delete",
      "compute.instances.detachDisk",
      "compute.instances.get",
      "compute.instances.setLabels",
      "compute.instances.setMetadata",
      "compute.instances.setServiceAccount",
      "compute.instances.setTags",
      "compute.instances.start",
      "compute.instances.stop",
      "compute.machineTypes.get",
      "compute.networks.get",
      "compute.networks.use",
      "compute.networks.useExternalIp",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.zoneOperations.get",
      "dataflow.jobs.cancel",
      "dataflow.jobs.create",
      "dataflow.jobs.get",
      "dataflow.jobs.list",
      "dataflow.jobs.snapshot",
      "dataflow.jobs.updateContents",
      "dataflow.messages.list",
      "dataflow.metrics.get",
      "dataflow.snapshots.delete",
      "dataflow.snapshots.get",
      "dataflow.snapshots.list",
      "datalabeling.annotateddatasets.get",
      "datalabeling.datasets.export",
      "datalabeling.datasets.get",
      "datalabeling.datasets.list",
      "datalabeling.operations.get",
      "iam.serviceAccounts.actAs",
      "iam.serviceAccounts.getAccessToken",
      "logging.logEntries.create",
      "logging.logEntries.route",
      "ml.models.list",
      "ml.operations.get",
      "ml.versions.get",
      "ml.versions.list",
      "monitoring.notificationChannels.get",
      "notebooks.instances.create",
      "notebooks.instances.delete",
      "notebooks.instances.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "run.routes.invoke",
      "run.services.create",
      "run.services.delete",
      "run.services.get",
      "serviceusage.services.use",
      "storage.buckets.create",
      "storage.buckets.delete",
      "storage.buckets.get",
      "storage.buckets.list",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/aiplatform.tensorboardWebAppUser",
    "title": "Vertex AI Tensorboard Web App User",
    "description": "Grants access to the Vertex AI Tensorboard web app. Using the web app will incur charges.",
    "includedPermissions": [
      "aiplatform.tensorboards.recordAccess"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/aiplatform.user",
    "title": "Vertex AI User",
    "description": "Grants access to use all resource in Vertex AI",
    "includedPermissions": [
      "aiplatform.annotationSpecs.create",
      "aiplatform.annotationSpecs.delete",
      "aiplatform.annotationSpecs.get",
      "aiplatform.annotationSpecs.list",
      "aiplatform.annotationSpecs.update",
      "aiplatform.annotations.create",
      "aiplatform.annotations.delete",
      "aiplatform.annotations.get",
      "aiplatform.annotations.list",
      "aiplatform.annotations.update",
      "aiplatform.artifacts.create",
      "aiplatform.artifacts.delete",
      "aiplatform.artifacts.get",
      "aiplatform.artifacts.list",
      "aiplatform.artifacts.update",
      "aiplatform.batchPredictionJobs.cancel",
      "aiplatform.batchPredictionJobs.create",
      "aiplatform.batchPredictionJobs.delete",
      "aiplatform.batchPredictionJobs.get",
      "aiplatform.batchPredictionJobs.list",
      "aiplatform.contexts.addContextArtifactsAndExecutions",
      "aiplatform.contexts.addContextChildren",
      "aiplatform.contexts.create",
      "aiplatform.contexts.delete",
      "aiplatform.contexts.get",
      "aiplatform.contexts.list",
      "aiplatform.contexts.queryContextLineageSubgraph",
      "aiplatform.contexts.update",
      "aiplatform.customJobs.cancel",
      "aiplatform.customJobs.create",
      "aiplatform.customJobs.delete",
      "aiplatform.customJobs.get",
      "aiplatform.customJobs.list",
      "aiplatform.dataItems.create",
      "aiplatform.dataItems.delete",
      "aiplatform.dataItems.get",
      "aiplatform.dataItems.list",
      "aiplatform.dataItems.update",
      "aiplatform.dataLabelingJobs.cancel",
      "aiplatform.dataLabelingJobs.create",
      "aiplatform.dataLabelingJobs.delete",
      "aiplatform.dataLabelingJobs.get",
      "aiplatform.dataLabelingJobs.list",
      "aiplatform.datasets.create",
      "aiplatform.datasets.delete",
      "aiplatform.datasets.export",
      "aiplatform.datasets.get",
      "aiplatform.datasets.import",
      "aiplatform.datasets.list",
      "aiplatform.datasets.update",
      "aiplatform.deploymentResourcePools.create",
      "aiplatform.deploymentResourcePools.delete",
      "aiplatform.deploymentResourcePools.get",
      "aiplatform.deploymentResourcePools.list",
      "aiplatform.deploymentResourcePools.queryDeployedModels",
      "aiplatform.deploymentResourcePools.update",
      "aiplatform.edgeDeploymentJobs.create",
      "aiplatform.edgeDeploymentJobs.delete",
      "aiplatform.edgeDeploymentJobs.get",
      "aiplatform.edgeDeploymentJobs.list",
      "aiplatform.edgeDeviceDebugInfo.get",
      "aiplatform.edgeDevices.create",
      "aiplatform.edgeDevices.delete",
      "aiplatform.edgeDevices.get",
      "aiplatform.edgeDevices.list",
      "aiplatform.edgeDevices.update",
      "aiplatform.endpoints.create",
      "aiplatform.endpoints.delete",
      "aiplatform.endpoints.deploy",
      "aiplatform.endpoints.explain",
      "aiplatform.endpoints.get",
      "aiplatform.endpoints.list",
      "aiplatform.endpoints.predict",
      "aiplatform.endpoints.undeploy",
      "aiplatform.endpoints.update",
      "aiplatform.entityTypes.create",
      "aiplatform.entityTypes.delete",
      "aiplatform.entityTypes.deleteFeatureValues",
      "aiplatform.entityTypes.exportFeatureValues",
      "aiplatform.entityTypes.get",
      "aiplatform.entityTypes.importFeatureValues",
      "aiplatform.entityTypes.list",
      "aiplatform.entityTypes.readFeatureValues",
      "aiplatform.entityTypes.streamingReadFeatureValues",
      "aiplatform.entityTypes.update",
      "aiplatform.entityTypes.writeFeatureValues",
      "aiplatform.executions.addExecutionEvents",
      "aiplatform.executions.create",
      "aiplatform.executions.delete",
      "aiplatform.executions.get",
      "aiplatform.executions.list",
      "aiplatform.executions.queryExecutionInputsAndOutputs",
      "aiplatform.executions.update",
      "aiplatform.featureOnlineStores.create",
      "aiplatform.featureOnlineStores.delete",
      "aiplatform.featureOnlineStores.get",
      "aiplatform.featureOnlineStores.list",
      "aiplatform.featureOnlineStores.update",
      "aiplatform.featureViewSyncs.get",
      "aiplatform.featureViewSyncs.list",
      "aiplatform.featureViews.create",
      "aiplatform.featureViews.delete",
      "aiplatform.featureViews.fetchFeatureValues",
      "aiplatform.featureViews.get",
      "aiplatform.featureViews.list",
      "aiplatform.featureViews.searchNearestEntities",
      "aiplatform.featureViews.sync",
      "aiplatform.featureViews.update",
      "aiplatform.features.create",
      "aiplatform.features.delete",
      "aiplatform.features.get",
      "aiplatform.features.list",
      "aiplatform.features.update",
      "aiplatform.featurestores.batchReadFeatureValues",
      "aiplatform.featurestores.create",
      "aiplatform.featurestores.delete",
      "aiplatform.featurestores.exportFeatures",
      "aiplatform.featurestores.get",
      "aiplatform.featurestores.importFeatures",
      "aiplatform.featurestores.list",
      "aiplatform.featurestores.readFeatures",
      "aiplatform.featurestores.update",
      "aiplatform.featurestores.writeFeatures",
      "aiplatform.humanInTheLoops.cancel",
      "aiplatform.humanInTheLoops.create",
      "aiplatform.humanInTheLoops.delete",
      "aiplatform.humanInTheLoops.get",
      "aiplatform.humanInTheLoops.list",
      "aiplatform.humanInTheLoops.queryAnnotationStats",
      "aiplatform.humanInTheLoops.send",
      "aiplatform.humanInTheLoops.update",
      "aiplatform.hyperparameterTuningJobs.cancel",
      "aiplatform.hyperparameterTuningJobs.create",
      "aiplatform.hyperparameterTuningJobs.delete",
      "aiplatform.hyperparameterTuningJobs.get",
      "aiplatform.hyperparameterTuningJobs.list",
      "aiplatform.indexEndpoints.create",
      "aiplatform.indexEndpoints.delete",
      "aiplatform.indexEndpoints.deploy",
      "aiplatform.indexEndpoints.get",
      "aiplatform.indexEndpoints.list",
      "aiplatform.indexEndpoints.queryVectors",
      "aiplatform.indexEndpoints.undeploy",
      "aiplatform.indexEndpoints.update",
      "aiplatform.indexes.create",
      "aiplatform.indexes.delete",
      "aiplatform.indexes.get",
      "aiplatform.indexes.list",
      "aiplatform.indexes.update",
      "aiplatform.locations.get",
      "aiplatform.locations.list",
      "aiplatform.metadataSchemas.create",
      "aiplatform.metadataSchemas.delete",
      "aiplatform.metadataSchemas.get",
      "aiplatform.metadataSchemas.list",
      "aiplatform.metadataStores.create",
      "aiplatform.metadataStores.delete",
      "aiplatform.metadataStores.get",
      "aiplatform.metadataStores.list",
      "aiplatform.modelDeploymentMonitoringJobs.create",
      "aiplatform.modelDeploymentMonitoringJobs.delete",
      "aiplatform.modelDeploymentMonitoringJobs.get",
      "aiplatform.modelDeploymentMonitoringJobs.list",
      "aiplatform.modelDeploymentMonitoringJobs.pause",
      "aiplatform.modelDeploymentMonitoringJobs.resume",
      "aiplatform.modelDeploymentMonitoringJobs.searchStatsAnomalies",
      "aiplatform.modelDeploymentMonitoringJobs.update",
      "aiplatform.modelEvaluationSlices.get",
      "aiplatform.modelEvaluationSlices.import",
      "aiplatform.modelEvaluationSlices.list",
      "aiplatform.modelEvaluations.exportEvaluatedDataItems",
      "aiplatform.modelEvaluations.get",
      "aiplatform.modelEvaluations.import",
      "aiplatform.modelEvaluations.list",
      "aiplatform.models.delete",
      "aiplatform.models.export",
      "aiplatform.models.get",
      "aiplatform.models.list",
      "aiplatform.models.update",
      "aiplatform.models.upload",
      "aiplatform.nasJobs.cancel",
      "aiplatform.nasJobs.create",
      "aiplatform.nasJobs.delete",
      "aiplatform.nasJobs.get",
      "aiplatform.nasJobs.list",
      "aiplatform.nasTrialDetails.get",
      "aiplatform.nasTrialDetails.list",
      "aiplatform.operations.list",
      "aiplatform.persistentResources.get",
      "aiplatform.persistentResources.list",
      "aiplatform.pipelineJobs.cancel",
      "aiplatform.pipelineJobs.create",
      "aiplatform.pipelineJobs.delete",
      "aiplatform.pipelineJobs.get",
      "aiplatform.pipelineJobs.list",
      "aiplatform.schedules.create",
      "aiplatform.schedules.delete",
      "aiplatform.schedules.get",
      "aiplatform.schedules.list",
      "aiplatform.schedules.update",
      "aiplatform.specialistPools.create",
      "aiplatform.specialistPools.delete",
      "aiplatform.specialistPools.get",
      "aiplatform.specialistPools.list",
      "aiplatform.specialistPools.update",
      "aiplatform.studies.create",
      "aiplatform.studies.delete",
      "aiplatform.studies.get",
      "aiplatform.studies.list",
      "aiplatform.studies.update",
      "aiplatform.tensorboardExperiments.create",
      "aiplatform.tensorboardExperiments.delete",
      "aiplatform.tensorboardExperiments.get",
      "aiplatform.tensorboardExperiments.list",
      "aiplatform.tensorboardExperiments.update",
      "aiplatform.tensorboardExperiments.write",
      "aiplatform.tensorboardRuns.batchCreate",
      "aiplatform.tensorboardRuns.create",
      "aiplatform.tensorboardRuns.delete",
      "aiplatform.tensorboardRuns.get",
      "aiplatform.tensorboardRuns.list",
      "aiplatform.tensorboardRuns.update",
      "aiplatform.tensorboardRuns.write",
      "aiplatform.tensorboardTimeSeries.batchCreate",
      "aiplatform.tensorboardTimeSeries.batchRead",
      "aiplatform.tensorboardTimeSeries.create",
      "aiplatform.tensorboardTimeSeries.delete",
      "aiplatform.tensorboardTimeSeries.get",
      "aiplatform.tensorboardTimeSeries.list",
      "aiplatform.tensorboardTimeSeries.read",
      "aiplatform.tensorboardTimeSeries.update",
      "aiplatform.tensorboards.create",
      "aiplatform.tensorboards.delete",
      "aiplatform.tensorboards.get",
      "aiplatform.tensorboards.list",
      "aiplatform.tensorboards.update",
      "aiplatform.trainingPipelines.cancel",
      "aiplatform.trainingPipelines.create",
      "aiplatform.trainingPipelines.delete",
      "aiplatform.trainingPipelines.get",
      "aiplatform.trainingPipelines.list",
      "aiplatform.trials.create",
      "aiplatform.trials.delete",
      "aiplatform.trials.get",
      "aiplatform.trials.list",
      "aiplatform.trials.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/aiplatform.viewer",
    "title": "Vertex AI Viewer",
    "description": "Grants access to view all resource in Vertex AI",
    "includedPermissions": [
      "aiplatform.annotationSpecs.get",
      "aiplatform.annotationSpecs.list",
      "aiplatform.annotations.get",
      "aiplatform.annotations.list",
      "aiplatform.artifacts.get",
      "aiplatform.artifacts.list",
      "aiplatform.batchPredictionJobs.get",
      "aiplatform.batchPredictionJobs.list",
      "aiplatform.contexts.get",
      "aiplatform.contexts.list",
      "aiplatform.contexts.queryContextLineageSubgraph",
      "aiplatform.customJobs.get",
      "aiplatform.customJobs.list",
      "aiplatform.dataItems.get",
      "aiplatform.dataItems.list",
      "aiplatform.dataLabelingJobs.get",
      "aiplatform.dataLabelingJobs.list",
      "aiplatform.datasets.get",
      "aiplatform.datasets.list",
      "aiplatform.deploymentResourcePools.get",
      "aiplatform.deploymentResourcePools.list",
      "aiplatform.deploymentResourcePools.queryDeployedModels",
      "aiplatform.edgeDeploymentJobs.get",
      "aiplatform.edgeDeploymentJobs.list",
      "aiplatform.edgeDeviceDebugInfo.get",
      "aiplatform.edgeDevices.get",
      "aiplatform.edgeDevices.list",
      "aiplatform.endpoints.get",
      "aiplatform.endpoints.list",
      "aiplatform.entityTypes.get",
      "aiplatform.entityTypes.list",
      "aiplatform.executions.get",
      "aiplatform.executions.list",
      "aiplatform.executions.queryExecutionInputsAndOutputs",
      "aiplatform.featureOnlineStores.get",
      "aiplatform.featureOnlineStores.list",
      "aiplatform.featureViewSyncs.get",
      "aiplatform.featureViewSyncs.list",
      "aiplatform.featureViews.fetchFeatureValues",
      "aiplatform.featureViews.get",
      "aiplatform.featureViews.list",
      "aiplatform.featureViews.searchNearestEntities",
      "aiplatform.features.get",
      "aiplatform.features.list",
      "aiplatform.featurestores.get",
      "aiplatform.featurestores.list",
      "aiplatform.humanInTheLoops.get",
      "aiplatform.humanInTheLoops.list",
      "aiplatform.hyperparameterTuningJobs.get",
      "aiplatform.hyperparameterTuningJobs.list",
      "aiplatform.indexEndpoints.get",
      "aiplatform.indexEndpoints.list",
      "aiplatform.indexEndpoints.queryVectors",
      "aiplatform.indexes.get",
      "aiplatform.indexes.list",
      "aiplatform.locations.get",
      "aiplatform.locations.list",
      "aiplatform.metadataSchemas.get",
      "aiplatform.metadataSchemas.list",
      "aiplatform.metadataStores.get",
      "aiplatform.metadataStores.list",
      "aiplatform.modelDeploymentMonitoringJobs.get",
      "aiplatform.modelDeploymentMonitoringJobs.list",
      "aiplatform.modelDeploymentMonitoringJobs.searchStatsAnomalies",
      "aiplatform.modelEvaluationSlices.get",
      "aiplatform.modelEvaluationSlices.list",
      "aiplatform.modelEvaluations.get",
      "aiplatform.modelEvaluations.list",
      "aiplatform.models.get",
      "aiplatform.models.list",
      "aiplatform.nasJobs.get",
      "aiplatform.nasJobs.list",
      "aiplatform.nasTrialDetails.get",
      "aiplatform.nasTrialDetails.list",
      "aiplatform.operations.list",
      "aiplatform.persistentResources.get",
      "aiplatform.persistentResources.list",
      "aiplatform.pipelineJobs.get",
      "aiplatform.pipelineJobs.list",
      "aiplatform.schedules.get",
      "aiplatform.schedules.list",
      "aiplatform.specialistPools.get",
      "aiplatform.specialistPools.list",
      "aiplatform.specialistPools.update",
      "aiplatform.studies.get",
      "aiplatform.studies.list",
      "aiplatform.tensorboardExperiments.get",
      "aiplatform.tensorboardExperiments.list",
      "aiplatform.tensorboardRuns.get",
      "aiplatform.tensorboardRuns.list",
      "aiplatform.tensorboardTimeSeries.batchRead",
      "aiplatform.tensorboardTimeSeries.get",
      "aiplatform.tensorboardTimeSeries.list",
      "aiplatform.tensorboardTimeSeries.read",
      "aiplatform.tensorboards.get",
      "aiplatform.tensorboards.list",
      "aiplatform.trainingPipelines.get",
      "aiplatform.trainingPipelines.list",
      "aiplatform.trials.get",
      "aiplatform.trials.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/alloydb.admin",
    "title": "Cloud AlloyDB Admin",
    "description": "Full access to Cloud AlloyDB all resources.",
    "includedPermissions": [
      "alloydb.backups.create",
      "alloydb.backups.delete",
      "alloydb.backups.get",
      "alloydb.backups.list",
      "alloydb.backups.update",
      "alloydb.clusters.create",
      "alloydb.clusters.delete",
      "alloydb.clusters.generateClientCertificate",
      "alloydb.clusters.get",
      "alloydb.clusters.list",
      "alloydb.clusters.update",
      "alloydb.instances.connect",
      "alloydb.instances.create",
      "alloydb.instances.delete",
      "alloydb.instances.failover",
      "alloydb.instances.get",
      "alloydb.instances.injectFault",
      "alloydb.instances.list",
      "alloydb.instances.restart",
      "alloydb.instances.update",
      "alloydb.locations.get",
      "alloydb.locations.list",
      "alloydb.operations.cancel",
      "alloydb.operations.delete",
      "alloydb.operations.get",
      "alloydb.operations.list",
      "alloydb.supportedDatabaseFlags.get",
      "alloydb.supportedDatabaseFlags.list",
      "alloydb.users.create",
      "alloydb.users.delete",
      "alloydb.users.get",
      "alloydb.users.list",
      "alloydb.users.login",
      "alloydb.users.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/alloydb.client",
    "title": "Cloud AlloyDB Client",
    "description": "Connectivity access to Cloud AlloyDB instances.",
    "includedPermissions": [
      "alloydb.clusters.generateClientCertificate",
      "alloydb.clusters.get",
      "alloydb.instances.connect",
      "alloydb.instances.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/alloydb.databaseUser",
    "title": "Cloud AlloyDB Database User",
    "description": "Role allowing access to login as a database user.",
    "includedPermissions": [
      "alloydb.clusters.get",
      "alloydb.instances.get",
      "alloydb.users.login",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/alloydb.serviceAgent",
    "title": "AlloyDB Service Agent",
    "description": "Gives the AlloyDB service account permission to manage customer resources",
    "includedPermissions": [
      "alloydb.clusters.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/alloydb.viewer",
    "title": "Cloud AlloyDB Viewer",
    "description": "Read-only access to Cloud AlloyDB all resources.",
    "includedPermissions": [
      "alloydb.backups.get",
      "alloydb.backups.list",
      "alloydb.clusters.get",
      "alloydb.clusters.list",
      "alloydb.instances.get",
      "alloydb.instances.list",
      "alloydb.locations.get",
      "alloydb.locations.list",
      "alloydb.operations.get",
      "alloydb.operations.list",
      "alloydb.supportedDatabaseFlags.get",
      "alloydb.supportedDatabaseFlags.list",
      "alloydb.users.get",
      "alloydb.users.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/analyticshub.admin",
    "title": "Analytics Hub Admin",
    "description": "Administer Data Exchanges and Listings",
    "includedPermissions": [
      "analyticshub.dataExchanges.create",
      "analyticshub.dataExchanges.delete",
      "analyticshub.dataExchanges.get",
      "analyticshub.dataExchanges.getIamPolicy",
      "analyticshub.dataExchanges.list",
      "analyticshub.dataExchanges.setIamPolicy",
      "analyticshub.dataExchanges.update",
      "analyticshub.dataExchanges.viewSubscriptions",
      "analyticshub.listings.create",
      "analyticshub.listings.delete",
      "analyticshub.listings.get",
      "analyticshub.listings.getIamPolicy",
      "analyticshub.listings.list",
      "analyticshub.listings.setIamPolicy",
      "analyticshub.listings.update",
      "analyticshub.listings.viewSubscriptions",
      "analyticshub.subscriptions.create",
      "analyticshub.subscriptions.delete",
      "analyticshub.subscriptions.get",
      "analyticshub.subscriptions.list",
      "analyticshub.subscriptions.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/analyticshub.listingAdmin",
    "title": "Analytics Hub Listing Admin",
    "description": "Grants full control over the Listing, including updating, deleting and setting ACLs",
    "includedPermissions": [
      "analyticshub.dataExchanges.get",
      "analyticshub.dataExchanges.getIamPolicy",
      "analyticshub.dataExchanges.list",
      "analyticshub.listings.delete",
      "analyticshub.listings.get",
      "analyticshub.listings.getIamPolicy",
      "analyticshub.listings.list",
      "analyticshub.listings.setIamPolicy",
      "analyticshub.listings.update",
      "analyticshub.listings.viewSubscriptions",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/analyticshub.publisher",
    "title": "Analytics Hub Publisher",
    "description": "Can publish to Data Exchanges thus creating Listings",
    "includedPermissions": [
      "analyticshub.dataExchanges.get",
      "analyticshub.dataExchanges.getIamPolicy",
      "analyticshub.dataExchanges.list",
      "analyticshub.listings.create",
      "analyticshub.listings.get",
      "analyticshub.listings.getIamPolicy",
      "analyticshub.listings.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/analyticshub.subscriber",
    "title": "Analytics Hub Subscriber",
    "description": "Can browse Data Exchanges and subscribe to Listings",
    "includedPermissions": [
      "analyticshub.dataExchanges.get",
      "analyticshub.dataExchanges.getIamPolicy",
      "analyticshub.dataExchanges.list",
      "analyticshub.dataExchanges.subscribe",
      "analyticshub.listings.get",
      "analyticshub.listings.getIamPolicy",
      "analyticshub.listings.list",
      "analyticshub.listings.subscribe",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/analyticshub.subscriptionOwner",
    "title": "Analytics Hub Subscription Owner",
    "description": "Grants full control over the Subscription, including updating and deleting",
    "includedPermissions": [
      "analyticshub.dataExchanges.get",
      "analyticshub.dataExchanges.getIamPolicy",
      "analyticshub.dataExchanges.list",
      "analyticshub.listings.get",
      "analyticshub.listings.getIamPolicy",
      "analyticshub.listings.list",
      "analyticshub.subscriptions.create",
      "analyticshub.subscriptions.delete",
      "analyticshub.subscriptions.get",
      "analyticshub.subscriptions.list",
      "analyticshub.subscriptions.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/analyticshub.viewer",
    "title": "Analytics Hub Viewer",
    "description": "Can browse Data Exchanges and Listings",
    "includedPermissions": [
      "analyticshub.dataExchanges.get",
      "analyticshub.dataExchanges.getIamPolicy",
      "analyticshub.dataExchanges.list",
      "analyticshub.listings.get",
      "analyticshub.listings.getIamPolicy",
      "analyticshub.listings.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/androidmanagement.user",
    "title": "Android Management User",
    "description": "Full access to manage devices.",
    "includedPermissions": [
      "androidmanagement.enterprises.manage",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/anthos.serviceAgent",
    "title": "Anthos Service Agent",
    "description": "Gives the Anthos service agent access to Cloud Platformresources.",
    "includedPermissions": [
      "gkehub.features.get",
      "gkehub.locations.get",
      "gkehub.locations.list",
      "gkehub.memberships.get",
      "gkehub.memberships.list",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/anthosaudit.serviceAgent",
    "title": "Anthos Audit Service Agent",
    "description": "Gives the Anthos Audit service agent access toCloud Platform resources.",
    "includedPermissions": [
      "gkehub.features.get",
      "gkehub.locations.get",
      "gkehub.locations.list",
      "gkehub.memberships.get",
      "gkehub.memberships.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/anthosconfigmanagement.serviceAgent",
    "title": "Anthos Config Management Service Agent",
    "description": "Gives the Anthos Config Management service agent access toCloud Platform resources.",
    "includedPermissions": [
      "container.clusters.get",
      "gkehub.features.get",
      "gkehub.locations.get",
      "gkehub.locations.list",
      "gkehub.memberships.get",
      "gkehub.memberships.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/anthosidentityservice.serviceAgent",
    "title": "Anthos Identity Service Agent",
    "description": "Gives the Anthos Identity service agent access to Cloud Platform resources.",
    "includedPermissions": [
      "gkehub.features.get",
      "gkehub.locations.get",
      "gkehub.locations.list",
      "gkehub.memberships.get",
      "gkehub.memberships.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/anthosservicemesh.serviceAgent",
    "title": "Anthos Service Mesh Service Agent",
    "description": "Gives the Anthos Service Mesh service agent access to Cloud Platform resources.",
    "includedPermissions": [
      "container.backendConfigs.create",
      "container.backendConfigs.delete",
      "container.backendConfigs.get",
      "container.backendConfigs.list",
      "container.backendConfigs.update",
      "container.clusterRoleBindings.create",
      "container.clusterRoleBindings.delete",
      "container.clusterRoleBindings.get",
      "container.clusterRoleBindings.list",
      "container.clusterRoleBindings.update",
      "container.clusterRoles.bind",
      "container.clusterRoles.create",
      "container.clusterRoles.delete",
      "container.clusterRoles.escalate",
      "container.clusterRoles.get",
      "container.clusterRoles.list",
      "container.clusterRoles.update",
      "container.clusters.get",
      "container.clusters.update",
      "container.configMaps.create",
      "container.configMaps.delete",
      "container.configMaps.get",
      "container.configMaps.list",
      "container.configMaps.update",
      "container.customResourceDefinitions.create",
      "container.customResourceDefinitions.get",
      "container.customResourceDefinitions.list",
      "container.customResourceDefinitions.update",
      "container.daemonSets.create",
      "container.daemonSets.delete",
      "container.daemonSets.get",
      "container.daemonSets.getStatus",
      "container.daemonSets.list",
      "container.daemonSets.update",
      "container.deployments.get",
      "container.deployments.list",
      "container.events.get",
      "container.events.list",
      "container.jobs.create",
      "container.jobs.delete",
      "container.jobs.get",
      "container.jobs.list",
      "container.jobs.update",
      "container.mutatingWebhookConfigurations.create",
      "container.mutatingWebhookConfigurations.get",
      "container.mutatingWebhookConfigurations.list",
      "container.mutatingWebhookConfigurations.update",
      "container.namespaces.create",
      "container.namespaces.get",
      "container.namespaces.list",
      "container.operations.get",
      "container.pods.get",
      "container.pods.list",
      "container.secrets.create",
      "container.secrets.delete",
      "container.secrets.get",
      "container.secrets.list",
      "container.secrets.update",
      "container.serviceAccounts.create",
      "container.serviceAccounts.delete",
      "container.serviceAccounts.get",
      "container.serviceAccounts.list",
      "container.serviceAccounts.update",
      "container.services.get",
      "container.services.list",
      "container.thirdPartyObjects.create",
      "container.thirdPartyObjects.get",
      "container.thirdPartyObjects.list",
      "container.thirdPartyObjects.update",
      "container.validatingWebhookConfigurations.create",
      "container.validatingWebhookConfigurations.delete",
      "container.validatingWebhookConfigurations.get",
      "container.validatingWebhookConfigurations.list",
      "container.validatingWebhookConfigurations.update",
      "gkehub.features.get",
      "gkehub.gateway.delete",
      "gkehub.gateway.get",
      "gkehub.gateway.patch",
      "gkehub.gateway.post",
      "gkehub.gateway.put",
      "gkehub.locations.get",
      "gkehub.locations.list",
      "gkehub.memberships.get",
      "gkehub.memberships.list",
      "logging.logEntries.create",
      "meshconfig.projects.init",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.timeSeries.create",
      "serviceusage.services.get",
      "serviceusage.services.use",
      "workloadcertificate.locations.get",
      "workloadcertificate.locations.list",
      "workloadcertificate.operations.get",
      "workloadcertificate.workloadCertificateFeature.get",
      "workloadcertificate.workloadRegistrations.create",
      "workloadcertificate.workloadRegistrations.get",
      "workloadcertificate.workloadRegistrations.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/anthossupport.serviceAgent",
    "title": "Anthos Support Service Agent",
    "description": " Gives the Anthos Support Service Agent access to Cloud Platform resource.",
    "includedPermissions": [
      "gkehub.features.get",
      "gkehub.features.getIamPolicy",
      "gkehub.features.list",
      "gkehub.fleet.get",
      "gkehub.gateway.get",
      "gkehub.locations.get",
      "gkehub.locations.list",
      "gkehub.membershipbindings.get",
      "gkehub.membershipbindings.list",
      "gkehub.memberships.generateConnectManifest",
      "gkehub.memberships.get",
      "gkehub.memberships.getIamPolicy",
      "gkehub.memberships.list",
      "gkehub.namespaces.get",
      "gkehub.namespaces.list",
      "gkehub.operations.get",
      "gkehub.operations.list",
      "gkehub.rbacrolebindings.get",
      "gkehub.rbacrolebindings.list",
      "gkehub.scopes.get",
      "gkehub.scopes.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/apigateway.admin",
    "title": "ApiGateway Admin",
    "description": "Full access to ApiGateway and related resources.",
    "includedPermissions": [
      "apigateway.apiconfigs.create",
      "apigateway.apiconfigs.delete",
      "apigateway.apiconfigs.get",
      "apigateway.apiconfigs.getIamPolicy",
      "apigateway.apiconfigs.list",
      "apigateway.apiconfigs.setIamPolicy",
      "apigateway.apiconfigs.update",
      "apigateway.apis.create",
      "apigateway.apis.delete",
      "apigateway.apis.get",
      "apigateway.apis.getIamPolicy",
      "apigateway.apis.list",
      "apigateway.apis.setIamPolicy",
      "apigateway.apis.update",
      "apigateway.gateways.create",
      "apigateway.gateways.delete",
      "apigateway.gateways.get",
      "apigateway.gateways.getIamPolicy",
      "apigateway.gateways.list",
      "apigateway.gateways.setIamPolicy",
      "apigateway.gateways.update",
      "apigateway.locations.get",
      "apigateway.locations.list",
      "apigateway.operations.cancel",
      "apigateway.operations.delete",
      "apigateway.operations.get",
      "apigateway.operations.list",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.timeSeries.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "servicemanagement.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/apigateway.serviceAgent",
    "title": "Cloud API Gateway Service Agent",
    "description": "Gives Cloud API Gateway service account access to Service Management check and reports as well as impersonation on user-specified service accounts.",
    "includedPermissions": [
      "iam.serviceAccounts.getAccessToken",
      "iam.serviceAccounts.getOpenIdToken",
      "servicemanagement.services.check",
      "servicemanagement.services.quota",
      "servicemanagement.services.report"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/apigateway.viewer",
    "title": "ApiGateway Viewer",
    "description": "Read-only access to ApiGateway and related resources.",
    "includedPermissions": [
      "apigateway.apiconfigs.get",
      "apigateway.apiconfigs.getIamPolicy",
      "apigateway.apiconfigs.list",
      "apigateway.apis.get",
      "apigateway.apis.getIamPolicy",
      "apigateway.apis.list",
      "apigateway.gateways.get",
      "apigateway.gateways.getIamPolicy",
      "apigateway.gateways.list",
      "apigateway.locations.get",
      "apigateway.locations.list",
      "apigateway.operations.get",
      "apigateway.operations.list",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.timeSeries.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "servicemanagement.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/apigateway_management.serviceAgent",
    "title": "Cloud API Gateway Management Service Agent",
    "description": "Gives Cloud API Gateway service account access to retrieve aService configuration.",
    "includedPermissions": [
      "iam.serviceAccounts.get",
      "servicemanagement.services.create",
      "servicemanagement.services.delete",
      "servicemanagement.services.get",
      "servicemanagement.services.list",
      "servicemanagement.services.update",
      "serviceusage.services.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/apigee.admin",
    "title": "Apigee Organization Admin",
    "description": "Full access to all apigee resource features",
    "includedPermissions": [
      "apigee.apiproductattributes.createOrUpdateAll",
      "apigee.apiproductattributes.delete",
      "apigee.apiproductattributes.get",
      "apigee.apiproductattributes.list",
      "apigee.apiproductattributes.update",
      "apigee.apiproducts.create",
      "apigee.apiproducts.delete",
      "apigee.apiproducts.get",
      "apigee.apiproducts.list",
      "apigee.apiproducts.update",
      "apigee.appgroupapps.create",
      "apigee.appgroupapps.delete",
      "apigee.appgroupapps.get",
      "apigee.appgroupapps.list",
      "apigee.appgroupapps.manage",
      "apigee.appgroups.create",
      "apigee.appgroups.delete",
      "apigee.appgroups.get",
      "apigee.appgroups.list",
      "apigee.appgroups.update",
      "apigee.appkeys.create",
      "apigee.appkeys.delete",
      "apigee.appkeys.get",
      "apigee.appkeys.manage",
      "apigee.apps.get",
      "apigee.apps.list",
      "apigee.archivedeployments.create",
      "apigee.archivedeployments.delete",
      "apigee.archivedeployments.download",
      "apigee.archivedeployments.get",
      "apigee.archivedeployments.list",
      "apigee.archivedeployments.update",
      "apigee.archivedeployments.upload",
      "apigee.caches.delete",
      "apigee.caches.list",
      "apigee.canaryevaluations.create",
      "apigee.canaryevaluations.get",
      "apigee.datacollectors.create",
      "apigee.datacollectors.delete",
      "apigee.datacollectors.get",
      "apigee.datacollectors.list",
      "apigee.datacollectors.update",
      "apigee.datalocation.get",
      "apigee.datastores.create",
      "apigee.datastores.delete",
      "apigee.datastores.get",
      "apigee.datastores.list",
      "apigee.datastores.update",
      "apigee.deployments.create",
      "apigee.deployments.delete",
      "apigee.deployments.get",
      "apigee.deployments.list",
      "apigee.deployments.update",
      "apigee.developerappattributes.createOrUpdateAll",
      "apigee.developerappattributes.delete",
      "apigee.developerappattributes.get",
      "apigee.developerappattributes.list",
      "apigee.developerappattributes.update",
      "apigee.developerapps.create",
      "apigee.developerapps.delete",
      "apigee.developerapps.get",
      "apigee.developerapps.list",
      "apigee.developerapps.manage",
      "apigee.developerattributes.createOrUpdateAll",
      "apigee.developerattributes.delete",
      "apigee.developerattributes.get",
      "apigee.developerattributes.list",
      "apigee.developerattributes.update",
      "apigee.developerbalances.adjust",
      "apigee.developerbalances.get",
      "apigee.developerbalances.update",
      "apigee.developermonetizationconfigs.get",
      "apigee.developermonetizationconfigs.update",
      "apigee.developers.create",
      "apigee.developers.delete",
      "apigee.developers.get",
      "apigee.developers.list",
      "apigee.developers.update",
      "apigee.developersubscriptions.create",
      "apigee.developersubscriptions.get",
      "apigee.developersubscriptions.list",
      "apigee.developersubscriptions.update",
      "apigee.endpointattachments.create",
      "apigee.endpointattachments.delete",
      "apigee.endpointattachments.get",
      "apigee.endpointattachments.list",
      "apigee.entitlements.get",
      "apigee.envgroupattachments.create",
      "apigee.envgroupattachments.delete",
      "apigee.envgroupattachments.get",
      "apigee.envgroupattachments.list",
      "apigee.envgroups.create",
      "apigee.envgroups.delete",
      "apigee.envgroups.get",
      "apigee.envgroups.list",
      "apigee.envgroups.update",
      "apigee.environments.create",
      "apigee.environments.delete",
      "apigee.environments.get",
      "apigee.environments.getDataLocation",
      "apigee.environments.getIamPolicy",
      "apigee.environments.getStats",
      "apigee.environments.list",
      "apigee.environments.manageRuntime",
      "apigee.environments.setIamPolicy",
      "apigee.environments.update",
      "apigee.exports.create",
      "apigee.exports.get",
      "apigee.exports.list",
      "apigee.flowhooks.attachSharedFlow",
      "apigee.flowhooks.detachSharedFlow",
      "apigee.flowhooks.getSharedFlow",
      "apigee.flowhooks.list",
      "apigee.hostqueries.create",
      "apigee.hostqueries.get",
      "apigee.hostqueries.list",
      "apigee.hostsecurityreports.create",
      "apigee.hostsecurityreports.get",
      "apigee.hostsecurityreports.list",
      "apigee.hoststats.get",
      "apigee.ingressconfigs.get",
      "apigee.instanceattachments.create",
      "apigee.instanceattachments.delete",
      "apigee.instanceattachments.get",
      "apigee.instanceattachments.list",
      "apigee.instances.create",
      "apigee.instances.delete",
      "apigee.instances.get",
      "apigee.instances.list",
      "apigee.instances.reportStatus",
      "apigee.instances.update",
      "apigee.keystorealiases.create",
      "apigee.keystorealiases.delete",
      "apigee.keystorealiases.exportCertificate",
      "apigee.keystorealiases.generateCSR",
      "apigee.keystorealiases.get",
      "apigee.keystorealiases.list",
      "apigee.keystorealiases.update",
      "apigee.keystores.create",
      "apigee.keystores.delete",
      "apigee.keystores.export",
      "apigee.keystores.get",
      "apigee.keystores.list",
      "apigee.keyvaluemapentries.create",
      "apigee.keyvaluemapentries.delete",
      "apigee.keyvaluemapentries.get",
      "apigee.keyvaluemapentries.list",
      "apigee.keyvaluemaps.create",
      "apigee.keyvaluemaps.delete",
      "apigee.keyvaluemaps.list",
      "apigee.maskconfigs.get",
      "apigee.maskconfigs.update",
      "apigee.nataddresses.activate",
      "apigee.nataddresses.create",
      "apigee.nataddresses.delete",
      "apigee.nataddresses.get",
      "apigee.nataddresses.list",
      "apigee.operations.get",
      "apigee.operations.list",
      "apigee.organizations.create",
      "apigee.organizations.delete",
      "apigee.organizations.get",
      "apigee.organizations.list",
      "apigee.organizations.update",
      "apigee.portals.create",
      "apigee.portals.delete",
      "apigee.portals.get",
      "apigee.portals.list",
      "apigee.portals.update",
      "apigee.projectorganizations.get",
      "apigee.projects.migrate",
      "apigee.projects.previewMigration",
      "apigee.projects.update",
      "apigee.proxies.create",
      "apigee.proxies.delete",
      "apigee.proxies.get",
      "apigee.proxies.list",
      "apigee.proxies.update",
      "apigee.proxyrevisions.delete",
      "apigee.proxyrevisions.deploy",
      "apigee.proxyrevisions.get",
      "apigee.proxyrevisions.list",
      "apigee.proxyrevisions.undeploy",
      "apigee.proxyrevisions.update",
      "apigee.queries.create",
      "apigee.queries.get",
      "apigee.queries.list",
      "apigee.rateplans.create",
      "apigee.rateplans.delete",
      "apigee.rateplans.get",
      "apigee.rateplans.list",
      "apigee.rateplans.update",
      "apigee.references.create",
      "apigee.references.delete",
      "apigee.references.get",
      "apigee.references.list",
      "apigee.references.update",
      "apigee.reports.create",
      "apigee.reports.delete",
      "apigee.reports.get",
      "apigee.reports.list",
      "apigee.reports.update",
      "apigee.resourcefiles.create",
      "apigee.resourcefiles.delete",
      "apigee.resourcefiles.get",
      "apigee.resourcefiles.list",
      "apigee.resourcefiles.update",
      "apigee.runtimeconfigs.get",
      "apigee.securityActions.create",
      "apigee.securityActions.get",
      "apigee.securityActions.list",
      "apigee.securityActions.update",
      "apigee.securityActionsConfig.get",
      "apigee.securityActionsConfig.update",
      "apigee.securityIncidents.get",
      "apigee.securityIncidents.list",
      "apigee.securityProfileEnvironments.computeScore",
      "apigee.securityProfileEnvironments.create",
      "apigee.securityProfileEnvironments.delete",
      "apigee.securityProfiles.create",
      "apigee.securityProfiles.delete",
      "apigee.securityProfiles.get",
      "apigee.securityProfiles.list",
      "apigee.securityProfiles.update",
      "apigee.securityStats.queryTabularStats",
      "apigee.securityStats.queryTimeSeriesStats",
      "apigee.securityreports.create",
      "apigee.securityreports.get",
      "apigee.securityreports.list",
      "apigee.setupcontexts.get",
      "apigee.setupcontexts.update",
      "apigee.sharedflowrevisions.delete",
      "apigee.sharedflowrevisions.deploy",
      "apigee.sharedflowrevisions.get",
      "apigee.sharedflowrevisions.list",
      "apigee.sharedflowrevisions.undeploy",
      "apigee.sharedflowrevisions.update",
      "apigee.sharedflows.create",
      "apigee.sharedflows.delete",
      "apigee.sharedflows.get",
      "apigee.sharedflows.list",
      "apigee.targetservers.create",
      "apigee.targetservers.delete",
      "apigee.targetservers.get",
      "apigee.targetservers.list",
      "apigee.targetservers.update",
      "apigee.traceconfig.get",
      "apigee.traceconfig.update",
      "apigee.traceconfigoverrides.create",
      "apigee.traceconfigoverrides.delete",
      "apigee.traceconfigoverrides.get",
      "apigee.traceconfigoverrides.list",
      "apigee.traceconfigoverrides.update",
      "apigee.tracesessions.create",
      "apigee.tracesessions.delete",
      "apigee.tracesessions.get",
      "apigee.tracesessions.list",
      "monitoring.timeSeries.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/apigee.analyticsAgent",
    "title": "Apigee Analytics Agent",
    "description": "Curated set of permissions for Apigee Universal Data Collection Agent to manage analytics for an Apigee Organization",
    "includedPermissions": [
      "apigee.datalocation.get",
      "apigee.environments.getDataLocation",
      "apigee.runtimeconfigs.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/apigee.analyticsEditor",
    "title": "Apigee Analytics Editor",
    "description": "Analytics editor for an Apigee Organization",
    "includedPermissions": [
      "apigee.datacollectors.create",
      "apigee.datacollectors.delete",
      "apigee.datacollectors.get",
      "apigee.datacollectors.list",
      "apigee.datacollectors.update",
      "apigee.datastores.create",
      "apigee.datastores.delete",
      "apigee.datastores.get",
      "apigee.datastores.list",
      "apigee.datastores.update",
      "apigee.entitlements.get",
      "apigee.envgroupattachments.get",
      "apigee.envgroupattachments.list",
      "apigee.envgroups.get",
      "apigee.envgroups.list",
      "apigee.environments.get",
      "apigee.environments.getStats",
      "apigee.environments.list",
      "apigee.exports.create",
      "apigee.exports.get",
      "apigee.exports.list",
      "apigee.hostqueries.create",
      "apigee.hostqueries.get",
      "apigee.hostqueries.list",
      "apigee.hoststats.get",
      "apigee.organizations.get",
      "apigee.organizations.list",
      "apigee.projectorganizations.get",
      "apigee.queries.create",
      "apigee.queries.get",
      "apigee.queries.list",
      "apigee.reports.create",
      "apigee.reports.delete",
      "apigee.reports.get",
      "apigee.reports.list",
      "apigee.reports.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/apigee.analyticsViewer",
    "title": "Apigee Analytics Viewer",
    "description": "Analytics viewer for an Apigee Organization",
    "includedPermissions": [
      "apigee.datacollectors.get",
      "apigee.datacollectors.list",
      "apigee.datastores.get",
      "apigee.datastores.list",
      "apigee.entitlements.get",
      "apigee.envgroupattachments.get",
      "apigee.envgroupattachments.list",
      "apigee.envgroups.get",
      "apigee.envgroups.list",
      "apigee.environments.get",
      "apigee.environments.getStats",
      "apigee.environments.list",
      "apigee.exports.get",
      "apigee.exports.list",
      "apigee.hostqueries.get",
      "apigee.hostqueries.list",
      "apigee.hoststats.get",
      "apigee.organizations.get",
      "apigee.organizations.list",
      "apigee.projectorganizations.get",
      "apigee.queries.get",
      "apigee.queries.list",
      "apigee.reports.get",
      "apigee.reports.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/apigee.apiAdminV2",
    "title": "Apigee API Admin",
    "description": "Full read/write access to all apigee API resources",
    "includedPermissions": [
      "apigee.apiproductattributes.createOrUpdateAll",
      "apigee.apiproductattributes.delete",
      "apigee.apiproductattributes.get",
      "apigee.apiproductattributes.list",
      "apigee.apiproductattributes.update",
      "apigee.apiproducts.create",
      "apigee.apiproducts.delete",
      "apigee.apiproducts.get",
      "apigee.apiproducts.list",
      "apigee.apiproducts.update",
      "apigee.entitlements.get",
      "apigee.envgroupattachments.get",
      "apigee.envgroupattachments.list",
      "apigee.envgroups.get",
      "apigee.envgroups.list",
      "apigee.environments.get",
      "apigee.environments.getStats",
      "apigee.environments.list",
      "apigee.keyvaluemapentries.create",
      "apigee.keyvaluemapentries.delete",
      "apigee.keyvaluemapentries.get",
      "apigee.keyvaluemapentries.list",
      "apigee.keyvaluemaps.create",
      "apigee.keyvaluemaps.delete",
      "apigee.keyvaluemaps.list",
      "apigee.organizations.get",
      "apigee.organizations.list",
      "apigee.projectorganizations.get",
      "apigee.proxies.create",
      "apigee.proxies.delete",
      "apigee.proxies.get",
      "apigee.proxies.list",
      "apigee.proxies.update",
      "apigee.proxyrevisions.delete",
      "apigee.proxyrevisions.deploy",
      "apigee.proxyrevisions.get",
      "apigee.proxyrevisions.list",
      "apigee.proxyrevisions.undeploy",
      "apigee.proxyrevisions.update",
      "apigee.sharedflowrevisions.delete",
      "apigee.sharedflowrevisions.deploy",
      "apigee.sharedflowrevisions.get",
      "apigee.sharedflowrevisions.list",
      "apigee.sharedflowrevisions.undeploy",
      "apigee.sharedflowrevisions.update",
      "apigee.sharedflows.create",
      "apigee.sharedflows.delete",
      "apigee.sharedflows.get",
      "apigee.sharedflows.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/apigee.apiReaderV2",
    "title": "Apigee API Reader",
    "description": "Reader of apigee resources",
    "includedPermissions": [
      "apigee.apiproductattributes.get",
      "apigee.apiproductattributes.list",
      "apigee.apiproducts.get",
      "apigee.apiproducts.list",
      "apigee.entitlements.get",
      "apigee.envgroupattachments.get",
      "apigee.envgroupattachments.list",
      "apigee.envgroups.get",
      "apigee.envgroups.list",
      "apigee.environments.get",
      "apigee.environments.getStats",
      "apigee.environments.list",
      "apigee.keyvaluemapentries.get",
      "apigee.keyvaluemapentries.list",
      "apigee.keyvaluemaps.list",
      "apigee.organizations.get",
      "apigee.organizations.list",
      "apigee.projectorganizations.get",
      "apigee.proxies.get",
      "apigee.proxies.list",
      "apigee.proxyrevisions.deploy",
      "apigee.proxyrevisions.get",
      "apigee.proxyrevisions.list",
      "apigee.proxyrevisions.undeploy",
      "apigee.sharedflowrevisions.deploy",
      "apigee.sharedflowrevisions.get",
      "apigee.sharedflowrevisions.list",
      "apigee.sharedflowrevisions.undeploy",
      "apigee.sharedflows.get",
      "apigee.sharedflows.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/apigee.developerAdmin",
    "title": "Apigee Developer Admin",
    "description": "Developer admin of apigee resources",
    "includedPermissions": [
      "apigee.apiproductattributes.get",
      "apigee.apiproductattributes.list",
      "apigee.apiproducts.get",
      "apigee.apiproducts.list",
      "apigee.appgroupapps.create",
      "apigee.appgroupapps.delete",
      "apigee.appgroupapps.get",
      "apigee.appgroupapps.list",
      "apigee.appgroupapps.manage",
      "apigee.appgroups.create",
      "apigee.appgroups.delete",
      "apigee.appgroups.get",
      "apigee.appgroups.list",
      "apigee.appgroups.update",
      "apigee.appkeys.create",
      "apigee.appkeys.delete",
      "apigee.appkeys.get",
      "apigee.appkeys.manage",
      "apigee.apps.get",
      "apigee.apps.list",
      "apigee.datacollectors.create",
      "apigee.datacollectors.delete",
      "apigee.datacollectors.get",
      "apigee.datacollectors.list",
      "apigee.datacollectors.update",
      "apigee.developerappattributes.createOrUpdateAll",
      "apigee.developerappattributes.delete",
      "apigee.developerappattributes.get",
      "apigee.developerappattributes.list",
      "apigee.developerappattributes.update",
      "apigee.developerapps.create",
      "apigee.developerapps.delete",
      "apigee.developerapps.get",
      "apigee.developerapps.list",
      "apigee.developerapps.manage",
      "apigee.developerattributes.createOrUpdateAll",
      "apigee.developerattributes.delete",
      "apigee.developerattributes.get",
      "apigee.developerattributes.list",
      "apigee.developerattributes.update",
      "apigee.developerbalances.adjust",
      "apigee.developerbalances.get",
      "apigee.developerbalances.update",
      "apigee.developermonetizationconfigs.get",
      "apigee.developermonetizationconfigs.update",
      "apigee.developers.create",
      "apigee.developers.delete",
      "apigee.developers.get",
      "apigee.developers.list",
      "apigee.developers.update",
      "apigee.developersubscriptions.create",
      "apigee.developersubscriptions.get",
      "apigee.developersubscriptions.list",
      "apigee.developersubscriptions.update",
      "apigee.entitlements.get",
      "apigee.environments.get",
      "apigee.environments.getStats",
      "apigee.environments.list",
      "apigee.hoststats.get",
      "apigee.organizations.get",
      "apigee.organizations.list",
      "apigee.projectorganizations.get",
      "apigee.rateplans.get",
      "apigee.rateplans.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/apigee.environmentAdmin",
    "title": "Apigee Environment Admin",
    "description": "Full read/write access to apigee environment resources, including deployments.",
    "includedPermissions": [
      "apigee.archivedeployments.create",
      "apigee.archivedeployments.delete",
      "apigee.archivedeployments.download",
      "apigee.archivedeployments.get",
      "apigee.archivedeployments.list",
      "apigee.archivedeployments.update",
      "apigee.archivedeployments.upload",
      "apigee.datacollectors.get",
      "apigee.datacollectors.list",
      "apigee.deployments.create",
      "apigee.deployments.delete",
      "apigee.deployments.get",
      "apigee.deployments.list",
      "apigee.deployments.update",
      "apigee.entitlements.get",
      "apigee.envgroupattachments.get",
      "apigee.envgroupattachments.list",
      "apigee.envgroups.get",
      "apigee.envgroups.list",
      "apigee.environments.get",
      "apigee.environments.getIamPolicy",
      "apigee.environments.getStats",
      "apigee.environments.list",
      "apigee.environments.setIamPolicy",
      "apigee.environments.update",
      "apigee.flowhooks.attachSharedFlow",
      "apigee.flowhooks.detachSharedFlow",
      "apigee.flowhooks.getSharedFlow",
      "apigee.flowhooks.list",
      "apigee.ingressconfigs.get",
      "apigee.keystorealiases.create",
      "apigee.keystorealiases.delete",
      "apigee.keystorealiases.exportCertificate",
      "apigee.keystorealiases.generateCSR",
      "apigee.keystorealiases.get",
      "apigee.keystorealiases.list",
      "apigee.keystorealiases.update",
      "apigee.keystores.create",
      "apigee.keystores.delete",
      "apigee.keystores.export",
      "apigee.keystores.get",
      "apigee.keystores.list",
      "apigee.keyvaluemapentries.create",
      "apigee.keyvaluemapentries.delete",
      "apigee.keyvaluemapentries.get",
      "apigee.keyvaluemapentries.list",
      "apigee.keyvaluemaps.create",
      "apigee.keyvaluemaps.delete",
      "apigee.keyvaluemaps.list",
      "apigee.maskconfigs.get",
      "apigee.maskconfigs.update",
      "apigee.organizations.get",
      "apigee.organizations.list",
      "apigee.projectorganizations.get",
      "apigee.proxies.get",
      "apigee.proxies.list",
      "apigee.proxyrevisions.deploy",
      "apigee.proxyrevisions.get",
      "apigee.proxyrevisions.list",
      "apigee.proxyrevisions.undeploy",
      "apigee.references.create",
      "apigee.references.delete",
      "apigee.references.get",
      "apigee.references.list",
      "apigee.references.update",
      "apigee.resourcefiles.create",
      "apigee.resourcefiles.delete",
      "apigee.resourcefiles.get",
      "apigee.resourcefiles.list",
      "apigee.resourcefiles.update",
      "apigee.sharedflowrevisions.deploy",
      "apigee.sharedflowrevisions.get",
      "apigee.sharedflowrevisions.list",
      "apigee.sharedflowrevisions.undeploy",
      "apigee.sharedflows.get",
      "apigee.sharedflows.list",
      "apigee.targetservers.create",
      "apigee.targetservers.delete",
      "apigee.targetservers.get",
      "apigee.targetservers.list",
      "apigee.targetservers.update",
      "apigee.traceconfig.get",
      "apigee.traceconfig.update",
      "apigee.traceconfigoverrides.create",
      "apigee.traceconfigoverrides.delete",
      "apigee.traceconfigoverrides.get",
      "apigee.traceconfigoverrides.list",
      "apigee.traceconfigoverrides.update",
      "apigee.tracesessions.create",
      "apigee.tracesessions.delete",
      "apigee.tracesessions.get",
      "apigee.tracesessions.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/apigee.monetizationAdmin",
    "title": "Apigee Monetization Admin",
    "description": "All permissions related to monetization",
    "includedPermissions": [
      "apigee.apiproducts.get",
      "apigee.apiproducts.list",
      "apigee.developerbalances.adjust",
      "apigee.developerbalances.get",
      "apigee.developerbalances.update",
      "apigee.developermonetizationconfigs.get",
      "apigee.developermonetizationconfigs.update",
      "apigee.developersubscriptions.create",
      "apigee.developersubscriptions.get",
      "apigee.developersubscriptions.list",
      "apigee.developersubscriptions.update",
      "apigee.entitlements.get",
      "apigee.organizations.get",
      "apigee.organizations.list",
      "apigee.projectorganizations.get",
      "apigee.rateplans.create",
      "apigee.rateplans.delete",
      "apigee.rateplans.get",
      "apigee.rateplans.list",
      "apigee.rateplans.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/apigee.portalAdmin",
    "title": "Apigee Portal Admin",
    "description": "Portal admin for an Apigee Organization",
    "includedPermissions": [
      "apigee.entitlements.get",
      "apigee.organizations.get",
      "apigee.organizations.list",
      "apigee.portals.create",
      "apigee.portals.delete",
      "apigee.portals.get",
      "apigee.portals.list",
      "apigee.portals.update",
      "apigee.projectorganizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/apigee.readOnlyAdmin",
    "title": "Apigee Read-only Admin",
    "description": "Viewer of all apigee resources",
    "includedPermissions": [
      "apigee.apiproductattributes.get",
      "apigee.apiproductattributes.list",
      "apigee.apiproducts.get",
      "apigee.apiproducts.list",
      "apigee.appgroupapps.get",
      "apigee.appgroupapps.list",
      "apigee.appgroups.get",
      "apigee.appgroups.list",
      "apigee.appkeys.get",
      "apigee.apps.get",
      "apigee.apps.list",
      "apigee.archivedeployments.download",
      "apigee.archivedeployments.get",
      "apigee.archivedeployments.list",
      "apigee.caches.list",
      "apigee.canaryevaluations.get",
      "apigee.datacollectors.get",
      "apigee.datacollectors.list",
      "apigee.datalocation.get",
      "apigee.datastores.get",
      "apigee.datastores.list",
      "apigee.deployments.get",
      "apigee.deployments.list",
      "apigee.developerappattributes.get",
      "apigee.developerappattributes.list",
      "apigee.developerapps.get",
      "apigee.developerapps.list",
      "apigee.developerattributes.get",
      "apigee.developerattributes.list",
      "apigee.developerbalances.get",
      "apigee.developermonetizationconfigs.get",
      "apigee.developers.get",
      "apigee.developers.list",
      "apigee.developersubscriptions.get",
      "apigee.developersubscriptions.list",
      "apigee.endpointattachments.get",
      "apigee.endpointattachments.list",
      "apigee.entitlements.get",
      "apigee.envgroupattachments.get",
      "apigee.envgroupattachments.list",
      "apigee.envgroups.get",
      "apigee.envgroups.list",
      "apigee.environments.get",
      "apigee.environments.getDataLocation",
      "apigee.environments.getIamPolicy",
      "apigee.environments.getStats",
      "apigee.environments.list",
      "apigee.exports.get",
      "apigee.exports.list",
      "apigee.flowhooks.getSharedFlow",
      "apigee.flowhooks.list",
      "apigee.hostqueries.get",
      "apigee.hostqueries.list",
      "apigee.hostsecurityreports.get",
      "apigee.hostsecurityreports.list",
      "apigee.hoststats.get",
      "apigee.ingressconfigs.get",
      "apigee.instanceattachments.get",
      "apigee.instanceattachments.list",
      "apigee.instances.get",
      "apigee.instances.list",
      "apigee.keystorealiases.get",
      "apigee.keystorealiases.list",
      "apigee.keystores.get",
      "apigee.keystores.list",
      "apigee.keyvaluemapentries.get",
      "apigee.keyvaluemapentries.list",
      "apigee.keyvaluemaps.list",
      "apigee.maskconfigs.get",
      "apigee.nataddresses.get",
      "apigee.nataddresses.list",
      "apigee.operations.get",
      "apigee.operations.list",
      "apigee.organizations.get",
      "apigee.organizations.list",
      "apigee.portals.get",
      "apigee.portals.list",
      "apigee.projectorganizations.get",
      "apigee.proxies.get",
      "apigee.proxies.list",
      "apigee.proxyrevisions.get",
      "apigee.proxyrevisions.list",
      "apigee.queries.get",
      "apigee.queries.list",
      "apigee.rateplans.get",
      "apigee.rateplans.list",
      "apigee.references.get",
      "apigee.references.list",
      "apigee.reports.get",
      "apigee.reports.list",
      "apigee.resourcefiles.get",
      "apigee.resourcefiles.list",
      "apigee.runtimeconfigs.get",
      "apigee.securityActions.get",
      "apigee.securityActions.list",
      "apigee.securityActionsConfig.get",
      "apigee.securityIncidents.get",
      "apigee.securityIncidents.list",
      "apigee.securityProfileEnvironments.computeScore",
      "apigee.securityProfiles.get",
      "apigee.securityProfiles.list",
      "apigee.securityStats.queryTabularStats",
      "apigee.securityStats.queryTimeSeriesStats",
      "apigee.securityreports.get",
      "apigee.securityreports.list",
      "apigee.setupcontexts.get",
      "apigee.sharedflowrevisions.get",
      "apigee.sharedflowrevisions.list",
      "apigee.sharedflows.get",
      "apigee.sharedflows.list",
      "apigee.targetservers.get",
      "apigee.targetservers.list",
      "apigee.traceconfig.get",
      "apigee.traceconfigoverrides.get",
      "apigee.traceconfigoverrides.list",
      "apigee.tracesessions.get",
      "apigee.tracesessions.list",
      "monitoring.timeSeries.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/apigee.runtimeAgent",
    "title": "Apigee Runtime Agent",
    "description": "Curated set of permissions for a runtime agent to access Apigee Organization resources",
    "includedPermissions": [
      "apigee.canaryevaluations.create",
      "apigee.canaryevaluations.get",
      "apigee.entitlements.get",
      "apigee.ingressconfigs.get",
      "apigee.instances.reportStatus",
      "apigee.operations.get",
      "apigee.operations.list",
      "apigee.organizations.get",
      "apigee.projectorganizations.get",
      "apigee.runtimeconfigs.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/apigee.securityAdmin",
    "title": "Apigee Security Admin",
    "description": "Security admin for an Apigee Organization",
    "includedPermissions": [
      "apigee.entitlements.get",
      "apigee.envgroupattachments.get",
      "apigee.envgroupattachments.list",
      "apigee.envgroups.get",
      "apigee.envgroups.list",
      "apigee.environments.get",
      "apigee.environments.list",
      "apigee.hostsecurityreports.create",
      "apigee.hostsecurityreports.get",
      "apigee.hostsecurityreports.list",
      "apigee.organizations.get",
      "apigee.organizations.list",
      "apigee.projectorganizations.get",
      "apigee.securityActions.create",
      "apigee.securityActions.get",
      "apigee.securityActions.list",
      "apigee.securityActions.update",
      "apigee.securityActionsConfig.get",
      "apigee.securityActionsConfig.update",
      "apigee.securityIncidents.get",
      "apigee.securityIncidents.list",
      "apigee.securityProfileEnvironments.computeScore",
      "apigee.securityProfileEnvironments.create",
      "apigee.securityProfileEnvironments.delete",
      "apigee.securityProfiles.create",
      "apigee.securityProfiles.delete",
      "apigee.securityProfiles.get",
      "apigee.securityProfiles.list",
      "apigee.securityProfiles.update",
      "apigee.securityStats.queryTabularStats",
      "apigee.securityStats.queryTimeSeriesStats",
      "apigee.securityreports.create",
      "apigee.securityreports.get",
      "apigee.securityreports.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/apigee.securityViewer",
    "title": "Apigee Security Viewer",
    "description": "Security viewer for an Apigee Organization",
    "includedPermissions": [
      "apigee.entitlements.get",
      "apigee.envgroupattachments.get",
      "apigee.envgroupattachments.list",
      "apigee.envgroups.get",
      "apigee.envgroups.list",
      "apigee.environments.get",
      "apigee.environments.list",
      "apigee.hostsecurityreports.get",
      "apigee.hostsecurityreports.list",
      "apigee.organizations.get",
      "apigee.organizations.list",
      "apigee.projectorganizations.get",
      "apigee.securityActions.get",
      "apigee.securityActions.list",
      "apigee.securityActionsConfig.get",
      "apigee.securityIncidents.get",
      "apigee.securityIncidents.list",
      "apigee.securityProfileEnvironments.computeScore",
      "apigee.securityProfiles.get",
      "apigee.securityProfiles.list",
      "apigee.securityStats.queryTabularStats",
      "apigee.securityStats.queryTimeSeriesStats",
      "apigee.securityreports.get",
      "apigee.securityreports.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/apigee.serviceAgent",
    "title": "Apigee Service Agent",
    "description": "Service agent that grants access to Apigee resources - API Products, Developers, Developer Apps, and App Keys.",
    "includedPermissions": [
      "apigee.apiproducts.get",
      "apigee.apiproducts.list",
      "apigee.appkeys.create",
      "apigee.appkeys.delete",
      "apigee.appkeys.manage",
      "apigee.apps.get",
      "apigee.canaryevaluations.create",
      "apigee.canaryevaluations.get",
      "apigee.developerapps.create",
      "apigee.developerapps.delete",
      "apigee.developerapps.get",
      "apigee.developerapps.list",
      "apigee.developerapps.manage",
      "apigee.developers.create",
      "apigee.developers.delete",
      "apigee.developers.get",
      "apigee.environments.get",
      "apigee.environments.getDataLocation",
      "apigee.environments.manageRuntime",
      "apigee.ingressconfigs.get",
      "apigee.instances.reportStatus",
      "apigee.operations.get",
      "apigee.operations.list",
      "apigee.organizations.get",
      "apigee.proxyrevisions.get",
      "apigee.runtimeconfigs.get",
      "cloudtrace.traces.patch",
      "iam.serviceAccounts.getAccessToken",
      "iam.serviceAccounts.getOpenIdToken",
      "logging.buckets.create",
      "logging.buckets.get",
      "logging.buckets.list",
      "logging.views.create",
      "logging.views.get",
      "logging.views.list",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.timeSeries.create"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/apigee.synchronizerManager",
    "title": "Apigee Synchronizer Manager",
    "description": "Curated set of permissions for a Synchronizer to manage environments in an Apigee Organization",
    "includedPermissions": [
      "apigee.environments.get",
      "apigee.environments.manageRuntime",
      "apigee.ingressconfigs.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/apigeeconnect.Admin",
    "title": "Apigee Connect Admin",
    "description": "Admin of Apigee Connect",
    "includedPermissions": [
      "apigeeconnect.connections.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/apigeeconnect.Agent",
    "title": "Apigee Connect Agent",
    "description": "Ability to set up Apigee Connect agent between external clusters and Google.",
    "includedPermissions": [
      "apigeeconnect.endpoints.connect"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/apigeeregistry.admin",
    "title": "Cloud Apigee Registry Admin",
    "description": "Full access to Cloud Apigee Registry Registry and Runtime resources.",
    "includedPermissions": [
      "apigeeregistry.apis.create",
      "apigeeregistry.apis.delete",
      "apigeeregistry.apis.get",
      "apigeeregistry.apis.getIamPolicy",
      "apigeeregistry.apis.list",
      "apigeeregistry.apis.setIamPolicy",
      "apigeeregistry.apis.update",
      "apigeeregistry.artifacts.create",
      "apigeeregistry.artifacts.delete",
      "apigeeregistry.artifacts.get",
      "apigeeregistry.artifacts.getIamPolicy",
      "apigeeregistry.artifacts.list",
      "apigeeregistry.artifacts.setIamPolicy",
      "apigeeregistry.artifacts.update",
      "apigeeregistry.deployments.create",
      "apigeeregistry.deployments.delete",
      "apigeeregistry.deployments.get",
      "apigeeregistry.deployments.list",
      "apigeeregistry.deployments.update",
      "apigeeregistry.instances.get",
      "apigeeregistry.instances.update",
      "apigeeregistry.locations.get",
      "apigeeregistry.locations.list",
      "apigeeregistry.operations.cancel",
      "apigeeregistry.operations.delete",
      "apigeeregistry.operations.get",
      "apigeeregistry.operations.list",
      "apigeeregistry.specs.create",
      "apigeeregistry.specs.delete",
      "apigeeregistry.specs.get",
      "apigeeregistry.specs.getIamPolicy",
      "apigeeregistry.specs.list",
      "apigeeregistry.specs.setIamPolicy",
      "apigeeregistry.specs.update",
      "apigeeregistry.versions.create",
      "apigeeregistry.versions.delete",
      "apigeeregistry.versions.get",
      "apigeeregistry.versions.getIamPolicy",
      "apigeeregistry.versions.list",
      "apigeeregistry.versions.setIamPolicy",
      "apigeeregistry.versions.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/apigeeregistry.editor",
    "title": "Cloud Apigee Registry Editor",
    "description": "Edit access to Cloud Apigee Registry Registry resources.",
    "includedPermissions": [
      "apigeeregistry.apis.create",
      "apigeeregistry.apis.delete",
      "apigeeregistry.apis.get",
      "apigeeregistry.apis.getIamPolicy",
      "apigeeregistry.apis.list",
      "apigeeregistry.apis.update",
      "apigeeregistry.artifacts.create",
      "apigeeregistry.artifacts.delete",
      "apigeeregistry.artifacts.get",
      "apigeeregistry.artifacts.getIamPolicy",
      "apigeeregistry.artifacts.list",
      "apigeeregistry.artifacts.update",
      "apigeeregistry.deployments.create",
      "apigeeregistry.deployments.delete",
      "apigeeregistry.deployments.get",
      "apigeeregistry.deployments.list",
      "apigeeregistry.deployments.update",
      "apigeeregistry.specs.create",
      "apigeeregistry.specs.delete",
      "apigeeregistry.specs.get",
      "apigeeregistry.specs.getIamPolicy",
      "apigeeregistry.specs.list",
      "apigeeregistry.specs.update",
      "apigeeregistry.versions.create",
      "apigeeregistry.versions.delete",
      "apigeeregistry.versions.get",
      "apigeeregistry.versions.getIamPolicy",
      "apigeeregistry.versions.list",
      "apigeeregistry.versions.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/apigeeregistry.viewer",
    "title": "Cloud Apigee Registry Viewer",
    "description": "Read-only access to Cloud Apigee Registry Registry resources.",
    "includedPermissions": [
      "apigeeregistry.apis.get",
      "apigeeregistry.apis.list",
      "apigeeregistry.artifacts.get",
      "apigeeregistry.artifacts.list",
      "apigeeregistry.deployments.get",
      "apigeeregistry.deployments.list",
      "apigeeregistry.specs.get",
      "apigeeregistry.specs.list",
      "apigeeregistry.versions.get",
      "apigeeregistry.versions.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/apigeeregistry.worker",
    "title": "Cloud Apigee Registry Worker",
    "description": "The role used by Apigee Registry application workers to read and update Apigee Registry Artifacts.",
    "includedPermissions": [
      "apigeeregistry.apis.get",
      "apigeeregistry.apis.list",
      "apigeeregistry.apis.update",
      "apigeeregistry.artifacts.create",
      "apigeeregistry.artifacts.delete",
      "apigeeregistry.artifacts.get",
      "apigeeregistry.artifacts.list",
      "apigeeregistry.artifacts.update",
      "apigeeregistry.deployments.get",
      "apigeeregistry.deployments.list",
      "apigeeregistry.deployments.update",
      "apigeeregistry.specs.get",
      "apigeeregistry.specs.list",
      "apigeeregistry.specs.update",
      "apigeeregistry.versions.get",
      "apigeeregistry.versions.list",
      "apigeeregistry.versions.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/appdevelopmentexperience.serviceAgent",
    "title": "App Development Experience Service Agent",
    "description": "Give the App Development Experience service agent access toCloud Platform resources.",
    "includedPermissions": [
      "container.clusters.get",
      "container.clusters.update",
      "gkehub.features.get",
      "gkehub.locations.get",
      "gkehub.locations.list",
      "gkehub.memberships.get",
      "gkehub.memberships.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/appengine.appAdmin",
    "title": "App Engine Admin",
    "description": "Full management of App Engine apps (but not storage).",
    "includedPermissions": [
      "appengine.applications.get",
      "appengine.applications.update",
      "appengine.instances.delete",
      "appengine.instances.enableDebug",
      "appengine.instances.get",
      "appengine.instances.list",
      "appengine.memcache.addKey",
      "appengine.memcache.flush",
      "appengine.memcache.get",
      "appengine.memcache.update",
      "appengine.operations.get",
      "appengine.operations.list",
      "appengine.runtimes.actAsAdmin",
      "appengine.services.delete",
      "appengine.services.get",
      "appengine.services.list",
      "appengine.services.update",
      "appengine.versions.create",
      "appengine.versions.delete",
      "appengine.versions.get",
      "appengine.versions.list",
      "appengine.versions.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/appengine.appCreator",
    "title": "App Engine Creator",
    "description": "Ability to create the App Engine resource for the project.",
    "includedPermissions": [
      "appengine.applications.create",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/appengine.appViewer",
    "title": "App Engine Viewer",
    "description": "Ability to view App Engine app status.",
    "includedPermissions": [
      "appengine.applications.get",
      "appengine.instances.get",
      "appengine.instances.list",
      "appengine.operations.get",
      "appengine.operations.list",
      "appengine.services.get",
      "appengine.services.list",
      "appengine.versions.get",
      "appengine.versions.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/appengine.codeViewer",
    "title": "App Engine Code Viewer",
    "description": "Ability to view App Engine app status and deployed source code.",
    "includedPermissions": [
      "appengine.applications.get",
      "appengine.instances.get",
      "appengine.instances.list",
      "appengine.operations.get",
      "appengine.operations.list",
      "appengine.services.get",
      "appengine.services.list",
      "appengine.versions.get",
      "appengine.versions.getFileContents",
      "appengine.versions.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/appengine.debugger",
    "title": "App Engine Managed VM Debug Access",
    "description": "Ability to read or manage v2 instances.",
    "includedPermissions": [
      "appengine.applications.get",
      "appengine.instances.delete",
      "appengine.instances.enableDebug",
      "appengine.instances.get",
      "appengine.instances.list",
      "appengine.operations.get",
      "appengine.operations.list",
      "appengine.services.get",
      "appengine.services.list",
      "appengine.versions.get",
      "appengine.versions.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/appengine.deployer",
    "title": "App Engine Deployer",
    "description": "Necessary permissions to deploy new code to App Engine, and remove old versions.",
    "includedPermissions": [
      "appengine.applications.get",
      "appengine.instances.get",
      "appengine.instances.list",
      "appengine.operations.get",
      "appengine.operations.list",
      "appengine.services.get",
      "appengine.services.list",
      "appengine.versions.create",
      "appengine.versions.delete",
      "appengine.versions.get",
      "appengine.versions.list",
      "artifactregistry.repositories.deleteArtifacts",
      "artifactregistry.repositories.downloadArtifacts",
      "artifactregistry.repositories.uploadArtifacts",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/appengine.memcacheDataAdmin",
    "title": "App Engine Memcache Data Admin",
    "description": "Can get, set, delete, and flush App Engine Memcache items.",
    "includedPermissions": [
      "appengine.applications.get",
      "appengine.memcache.addKey",
      "appengine.memcache.flush",
      "appengine.memcache.get",
      "appengine.memcache.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/appengine.serviceAdmin",
    "title": "App Engine Service Admin",
    "description": "Can view and change traffic splits, scaling settings, and delete old versions; can't create new versions.",
    "includedPermissions": [
      "appengine.applications.get",
      "appengine.instances.delete",
      "appengine.instances.get",
      "appengine.instances.list",
      "appengine.operations.get",
      "appengine.operations.list",
      "appengine.services.delete",
      "appengine.services.get",
      "appengine.services.list",
      "appengine.services.update",
      "appengine.versions.delete",
      "appengine.versions.get",
      "appengine.versions.list",
      "appengine.versions.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/appengine.serviceAgent",
    "title": "App Engine Standard Environment Service Agent",
    "description": "Give App Engine Standard Enviroment service account access to managed resources. Includes access to service accounts.",
    "includedPermissions": [
      "appengine.versions.delete",
      "appengine.versions.get",
      "appengine.versions.list",
      "appengine.versions.update",
      "datastore.databases.get",
      "datastore.entities.create",
      "datastore.entities.delete",
      "datastore.entities.get",
      "datastore.entities.list",
      "datastore.entities.update",
      "datastore.indexes.list",
      "datastore.namespaces.get",
      "datastore.namespaces.list",
      "datastore.statistics.get",
      "datastore.statistics.list",
      "iam.serviceAccounts.getAccessToken",
      "iam.serviceAccounts.getOpenIdToken",
      "iam.serviceAccounts.signBlob",
      "serviceusage.services.enable",
      "serviceusage.services.get",
      "storage.buckets.create",
      "storage.buckets.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/appengineflex.serviceAgent",
    "title": "App Engine flexible environment Service Agent",
    "description": "Can edit and manage App Engine Flexible Environment apps. Includes access to service accounts.",
    "includedPermissions": [
      "billing.accounts.get",
      "cloudbuild.builds.create",
      "cloudbuild.builds.get",
      "compute.addresses.create",
      "compute.addresses.delete",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.addresses.use",
      "compute.autoscalers.create",
      "compute.autoscalers.delete",
      "compute.autoscalers.get",
      "compute.autoscalers.update",
      "compute.backendServices.create",
      "compute.backendServices.delete",
      "compute.backendServices.get",
      "compute.backendServices.list",
      "compute.backendServices.update",
      "compute.backendServices.use",
      "compute.disks.create",
      "compute.disks.list",
      "compute.firewalls.create",
      "compute.firewalls.delete",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.update",
      "compute.forwardingRules.create",
      "compute.forwardingRules.delete",
      "compute.forwardingRules.get",
      "compute.globalAddresses.create",
      "compute.globalAddresses.delete",
      "compute.globalAddresses.get",
      "compute.globalAddresses.use",
      "compute.globalForwardingRules.create",
      "compute.globalForwardingRules.delete",
      "compute.globalForwardingRules.get",
      "compute.globalOperations.get",
      "compute.healthChecks.create",
      "compute.healthChecks.delete",
      "compute.healthChecks.get",
      "compute.healthChecks.update",
      "compute.healthChecks.useReadOnly",
      "compute.httpHealthChecks.create",
      "compute.httpHealthChecks.delete",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.use",
      "compute.httpHealthChecks.useReadOnly",
      "compute.httpsHealthChecks.create",
      "compute.httpsHealthChecks.delete",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.update",
      "compute.httpsHealthChecks.use",
      "compute.httpsHealthChecks.useReadOnly",
      "compute.images.get",
      "compute.images.useReadOnly",
      "compute.instanceGroupManagers.create",
      "compute.instanceGroupManagers.delete",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.update",
      "compute.instanceGroupManagers.use",
      "compute.instanceGroups.create",
      "compute.instanceGroups.delete",
      "compute.instanceGroups.get",
      "compute.instanceGroups.update",
      "compute.instanceGroups.use",
      "compute.instanceTemplates.create",
      "compute.instanceTemplates.delete",
      "compute.instanceTemplates.get",
      "compute.instanceTemplates.useReadOnly",
      "compute.instances.attachDisk",
      "compute.instances.create",
      "compute.instances.delete",
      "compute.instances.detachDisk",
      "compute.instances.get",
      "compute.instances.getGuestAttributes",
      "compute.instances.getSerialPortOutput",
      "compute.instances.list",
      "compute.instances.reset",
      "compute.instances.setLabels",
      "compute.instances.setMetadata",
      "compute.instances.setTags",
      "compute.instances.start",
      "compute.instances.stop",
      "compute.instances.use",
      "compute.machineTypes.get",
      "compute.networks.create",
      "compute.networks.delete",
      "compute.networks.get",
      "compute.networks.updatePolicy",
      "compute.networks.use",
      "compute.networks.useExternalIp",
      "compute.projects.get",
      "compute.projects.setCommonInstanceMetadata",
      "compute.regionBackendServices.create",
      "compute.regionBackendServices.delete",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.update",
      "compute.regionBackendServices.use",
      "compute.regionOperations.get",
      "compute.regions.get",
      "compute.routes.create",
      "compute.routes.delete",
      "compute.routes.get",
      "compute.routes.list",
      "compute.subnetworks.delete",
      "compute.subnetworks.get",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.targetHttpProxies.create",
      "compute.targetHttpProxies.delete",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.use",
      "compute.targetHttpsProxies.create",
      "compute.targetHttpsProxies.delete",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.setSslCertificates",
      "compute.targetHttpsProxies.use",
      "compute.urlMaps.create",
      "compute.urlMaps.delete",
      "compute.urlMaps.get",
      "compute.urlMaps.update",
      "compute.urlMaps.use",
      "compute.zoneOperations.get",
      "compute.zoneOperations.list",
      "compute.zones.get",
      "compute.zones.list",
      "deploymentmanager.compositeTypes.get",
      "deploymentmanager.deployments.create",
      "deploymentmanager.deployments.delete",
      "deploymentmanager.deployments.get",
      "deploymentmanager.deployments.list",
      "deploymentmanager.deployments.update",
      "deploymentmanager.manifests.get",
      "deploymentmanager.manifests.list",
      "deploymentmanager.operations.get",
      "deploymentmanager.operations.list",
      "deploymentmanager.typeProviders.create",
      "deploymentmanager.typeProviders.get",
      "iam.serviceAccounts.actAs",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.getAccessToken",
      "iam.serviceAccounts.signBlob",
      "iam.serviceAccounts.signJwt",
      "logging.logEntries.create",
      "logging.logMetrics.create",
      "logging.logMetrics.delete",
      "logging.logMetrics.get",
      "logging.logMetrics.update",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.setIamPolicy",
      "storage.buckets.create",
      "storage.buckets.delete",
      "storage.buckets.get",
      "storage.buckets.getIamPolicy",
      "storage.buckets.setIamPolicy",
      "storage.buckets.update",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.getIamPolicy",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/applianceactivation.approver",
    "title": "Appliance troubleshooting commands approver",
    "description": "Grants access to approve commands to run on appliances",
    "includedPermissions": [
      "applianceactivation.rttCommands.approve",
      "applianceactivation.rttCommands.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/applianceactivation.client",
    "title": "On-appliance troubleshooting client",
    "description": "Grants access to read commands for an appliance and send its result.",
    "includedPermissions": [
      "applianceactivation.rttCommands.get",
      "applianceactivation.rttCommands.sendResult"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/applianceactivation.troubleshooter",
    "title": "Appliance troubleshooter",
    "description": "Grants access to send new commands to run on appliances and view the outputs",
    "includedPermissions": [
      "applianceactivation.rttCommands.create",
      "applianceactivation.rttCommands.get",
      "applianceactivation.rttCommands.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/artifactregistry.admin",
    "title": "Artifact Registry Administrator",
    "description": "Administrator access to create and manage repositories.",
    "includedPermissions": [
      "artifactregistry.aptartifacts.create",
      "artifactregistry.dockerimages.get",
      "artifactregistry.dockerimages.list",
      "artifactregistry.files.get",
      "artifactregistry.files.list",
      "artifactregistry.kfpartifacts.create",
      "artifactregistry.locations.get",
      "artifactregistry.locations.list",
      "artifactregistry.mavenartifacts.get",
      "artifactregistry.mavenartifacts.list",
      "artifactregistry.npmpackages.get",
      "artifactregistry.npmpackages.list",
      "artifactregistry.packages.delete",
      "artifactregistry.packages.get",
      "artifactregistry.packages.list",
      "artifactregistry.projectsettings.get",
      "artifactregistry.projectsettings.update",
      "artifactregistry.pythonpackages.get",
      "artifactregistry.pythonpackages.list",
      "artifactregistry.repositories.create",
      "artifactregistry.repositories.createTagBinding",
      "artifactregistry.repositories.delete",
      "artifactregistry.repositories.deleteArtifacts",
      "artifactregistry.repositories.deleteTagBinding",
      "artifactregistry.repositories.downloadArtifacts",
      "artifactregistry.repositories.get",
      "artifactregistry.repositories.getIamPolicy",
      "artifactregistry.repositories.list",
      "artifactregistry.repositories.listEffectiveTags",
      "artifactregistry.repositories.listTagBindings",
      "artifactregistry.repositories.readViaVirtualRepository",
      "artifactregistry.repositories.setIamPolicy",
      "artifactregistry.repositories.update",
      "artifactregistry.repositories.uploadArtifacts",
      "artifactregistry.tags.create",
      "artifactregistry.tags.delete",
      "artifactregistry.tags.get",
      "artifactregistry.tags.list",
      "artifactregistry.tags.update",
      "artifactregistry.versions.delete",
      "artifactregistry.versions.get",
      "artifactregistry.versions.list",
      "artifactregistry.yumartifacts.create"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/artifactregistry.createOnPushRepoAdmin",
    "description": "Access to manage artifacts in repositories, as well as create new repositories on push",
    "includedPermissions": [
      "artifactregistry.aptartifacts.create",
      "artifactregistry.dockerimages.get",
      "artifactregistry.dockerimages.list",
      "artifactregistry.files.get",
      "artifactregistry.files.list",
      "artifactregistry.kfpartifacts.create",
      "artifactregistry.locations.get",
      "artifactregistry.locations.list",
      "artifactregistry.mavenartifacts.get",
      "artifactregistry.mavenartifacts.list",
      "artifactregistry.npmpackages.get",
      "artifactregistry.npmpackages.list",
      "artifactregistry.packages.delete",
      "artifactregistry.packages.get",
      "artifactregistry.packages.list",
      "artifactregistry.projectsettings.get",
      "artifactregistry.pythonpackages.get",
      "artifactregistry.pythonpackages.list",
      "artifactregistry.repositories.createOnPush",
      "artifactregistry.repositories.deleteArtifacts",
      "artifactregistry.repositories.downloadArtifacts",
      "artifactregistry.repositories.get",
      "artifactregistry.repositories.list",
      "artifactregistry.repositories.listEffectiveTags",
      "artifactregistry.repositories.listTagBindings",
      "artifactregistry.repositories.readViaVirtualRepository",
      "artifactregistry.repositories.uploadArtifacts",
      "artifactregistry.tags.create",
      "artifactregistry.tags.delete",
      "artifactregistry.tags.get",
      "artifactregistry.tags.list",
      "artifactregistry.tags.update",
      "artifactregistry.versions.delete",
      "artifactregistry.versions.get",
      "artifactregistry.versions.list",
      "artifactregistry.yumartifacts.create"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/artifactregistry.createOnPushWriter",
    "description": "Access to read and write repository items, as well as create new repositories on push",
    "includedPermissions": [
      "artifactregistry.aptartifacts.create",
      "artifactregistry.dockerimages.get",
      "artifactregistry.dockerimages.list",
      "artifactregistry.files.get",
      "artifactregistry.files.list",
      "artifactregistry.kfpartifacts.create",
      "artifactregistry.locations.get",
      "artifactregistry.locations.list",
      "artifactregistry.mavenartifacts.get",
      "artifactregistry.mavenartifacts.list",
      "artifactregistry.npmpackages.get",
      "artifactregistry.npmpackages.list",
      "artifactregistry.packages.get",
      "artifactregistry.packages.list",
      "artifactregistry.projectsettings.get",
      "artifactregistry.pythonpackages.get",
      "artifactregistry.pythonpackages.list",
      "artifactregistry.repositories.createOnPush",
      "artifactregistry.repositories.downloadArtifacts",
      "artifactregistry.repositories.get",
      "artifactregistry.repositories.list",
      "artifactregistry.repositories.listEffectiveTags",
      "artifactregistry.repositories.listTagBindings",
      "artifactregistry.repositories.readViaVirtualRepository",
      "artifactregistry.repositories.uploadArtifacts",
      "artifactregistry.tags.create",
      "artifactregistry.tags.get",
      "artifactregistry.tags.list",
      "artifactregistry.tags.update",
      "artifactregistry.versions.get",
      "artifactregistry.versions.list",
      "artifactregistry.yumartifacts.create"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/artifactregistry.reader",
    "title": "Artifact Registry Reader",
    "description": "Access to read repository items.",
    "includedPermissions": [
      "artifactregistry.dockerimages.get",
      "artifactregistry.dockerimages.list",
      "artifactregistry.files.get",
      "artifactregistry.files.list",
      "artifactregistry.locations.get",
      "artifactregistry.locations.list",
      "artifactregistry.mavenartifacts.get",
      "artifactregistry.mavenartifacts.list",
      "artifactregistry.npmpackages.get",
      "artifactregistry.npmpackages.list",
      "artifactregistry.packages.get",
      "artifactregistry.packages.list",
      "artifactregistry.projectsettings.get",
      "artifactregistry.pythonpackages.get",
      "artifactregistry.pythonpackages.list",
      "artifactregistry.repositories.downloadArtifacts",
      "artifactregistry.repositories.get",
      "artifactregistry.repositories.list",
      "artifactregistry.repositories.listEffectiveTags",
      "artifactregistry.repositories.listTagBindings",
      "artifactregistry.repositories.readViaVirtualRepository",
      "artifactregistry.tags.get",
      "artifactregistry.tags.list",
      "artifactregistry.versions.get",
      "artifactregistry.versions.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/artifactregistry.repoAdmin",
    "title": "Artifact Registry Repository Administrator",
    "description": "Access to manage artifacts in repositories.",
    "includedPermissions": [
      "artifactregistry.aptartifacts.create",
      "artifactregistry.dockerimages.get",
      "artifactregistry.dockerimages.list",
      "artifactregistry.files.get",
      "artifactregistry.files.list",
      "artifactregistry.kfpartifacts.create",
      "artifactregistry.locations.get",
      "artifactregistry.locations.list",
      "artifactregistry.mavenartifacts.get",
      "artifactregistry.mavenartifacts.list",
      "artifactregistry.npmpackages.get",
      "artifactregistry.npmpackages.list",
      "artifactregistry.packages.delete",
      "artifactregistry.packages.get",
      "artifactregistry.packages.list",
      "artifactregistry.projectsettings.get",
      "artifactregistry.pythonpackages.get",
      "artifactregistry.pythonpackages.list",
      "artifactregistry.repositories.deleteArtifacts",
      "artifactregistry.repositories.downloadArtifacts",
      "artifactregistry.repositories.get",
      "artifactregistry.repositories.list",
      "artifactregistry.repositories.listEffectiveTags",
      "artifactregistry.repositories.listTagBindings",
      "artifactregistry.repositories.readViaVirtualRepository",
      "artifactregistry.repositories.uploadArtifacts",
      "artifactregistry.tags.create",
      "artifactregistry.tags.delete",
      "artifactregistry.tags.get",
      "artifactregistry.tags.list",
      "artifactregistry.tags.update",
      "artifactregistry.versions.delete",
      "artifactregistry.versions.get",
      "artifactregistry.versions.list",
      "artifactregistry.yumartifacts.create"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/artifactregistry.serviceAgent",
    "title": "Artifact Registry Service Agent",
    "description": "Gives the Artifact Registry service account access to managed resources.",
    "includedPermissions": [
      "artifactregistry.repositories.downloadArtifacts",
      "artifactregistry.repositories.readViaVirtualRepository",
      "artifactregistry.versions.delete",
      "pubsub.topics.publish"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/artifactregistry.writer",
    "title": "Artifact Registry Writer",
    "description": "Access to read and write repository items.",
    "includedPermissions": [
      "artifactregistry.aptartifacts.create",
      "artifactregistry.dockerimages.get",
      "artifactregistry.dockerimages.list",
      "artifactregistry.files.get",
      "artifactregistry.files.list",
      "artifactregistry.kfpartifacts.create",
      "artifactregistry.locations.get",
      "artifactregistry.locations.list",
      "artifactregistry.mavenartifacts.get",
      "artifactregistry.mavenartifacts.list",
      "artifactregistry.npmpackages.get",
      "artifactregistry.npmpackages.list",
      "artifactregistry.packages.get",
      "artifactregistry.packages.list",
      "artifactregistry.projectsettings.get",
      "artifactregistry.pythonpackages.get",
      "artifactregistry.pythonpackages.list",
      "artifactregistry.repositories.downloadArtifacts",
      "artifactregistry.repositories.get",
      "artifactregistry.repositories.list",
      "artifactregistry.repositories.listEffectiveTags",
      "artifactregistry.repositories.listTagBindings",
      "artifactregistry.repositories.readViaVirtualRepository",
      "artifactregistry.repositories.uploadArtifacts",
      "artifactregistry.tags.create",
      "artifactregistry.tags.get",
      "artifactregistry.tags.list",
      "artifactregistry.tags.update",
      "artifactregistry.versions.get",
      "artifactregistry.versions.list",
      "artifactregistry.yumartifacts.create"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/assuredworkloads.admin",
    "title": "Assured Workloads Administrator",
    "description": "Grants full access to Assured Workloads resources, CRM resources - project/folder and Organization Policy administration",
    "includedPermissions": [
      "assuredworkloads.operations.get",
      "assuredworkloads.operations.list",
      "assuredworkloads.violations.get",
      "assuredworkloads.violations.list",
      "assuredworkloads.violations.update",
      "assuredworkloads.workload.create",
      "assuredworkloads.workload.delete",
      "assuredworkloads.workload.get",
      "assuredworkloads.workload.list",
      "assuredworkloads.workload.update",
      "bigquery.config.update",
      "logging.settings.update",
      "orgpolicy.policy.get",
      "orgpolicy.policy.set",
      "resourcemanager.folders.create",
      "resourcemanager.folders.get",
      "resourcemanager.folders.list",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.create",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/assuredworkloads.editor",
    "title": "Assured Workloads Editor",
    "description": "Grants read, write access to Assured Workloads resources, CRM resources - project/folder and Organization Policy administration",
    "includedPermissions": [
      "assuredworkloads.operations.get",
      "assuredworkloads.operations.list",
      "assuredworkloads.violations.get",
      "assuredworkloads.violations.list",
      "assuredworkloads.violations.update",
      "assuredworkloads.workload.create",
      "assuredworkloads.workload.delete",
      "assuredworkloads.workload.get",
      "assuredworkloads.workload.list",
      "assuredworkloads.workload.update",
      "bigquery.config.update",
      "logging.settings.update",
      "orgpolicy.policy.get",
      "orgpolicy.policy.set",
      "resourcemanager.folders.create",
      "resourcemanager.folders.get",
      "resourcemanager.folders.list",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.create",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/assuredworkloads.reader",
    "title": "Assured Workloads Reader",
    "description": "Grants read access to all Assured Workloads resources and CRM resources - project/folder",
    "includedPermissions": [
      "assuredworkloads.operations.get",
      "assuredworkloads.operations.list",
      "assuredworkloads.violations.get",
      "assuredworkloads.violations.list",
      "assuredworkloads.workload.get",
      "assuredworkloads.workload.list",
      "resourcemanager.folders.get",
      "resourcemanager.folders.list",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/assuredworkloads.serviceAgent",
    "title": "Assured Workloads Service Agent",
    "description": "Gives the Assured Workloads service account access to create KMS keyrings and keys, and to monitor Assured Workloads.",
    "includedPermissions": [
      "cloudkms.cryptoKeys.create",
      "cloudkms.keyRings.create",
      "serviceusage.services.enable",
      "serviceusage.services.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/automl.admin",
    "title": "AutoML Admin",
    "description": "Full access to all AutoML resources",
    "includedPermissions": [
      "automl.annotationSpecs.create",
      "automl.annotationSpecs.delete",
      "automl.annotationSpecs.get",
      "automl.annotationSpecs.list",
      "automl.annotationSpecs.update",
      "automl.annotations.approve",
      "automl.annotations.create",
      "automl.annotations.list",
      "automl.annotations.manipulate",
      "automl.annotations.reject",
      "automl.columnSpecs.get",
      "automl.columnSpecs.list",
      "automl.columnSpecs.update",
      "automl.datasets.create",
      "automl.datasets.delete",
      "automl.datasets.export",
      "automl.datasets.get",
      "automl.datasets.getIamPolicy",
      "automl.datasets.import",
      "automl.datasets.list",
      "automl.datasets.setIamPolicy",
      "automl.datasets.update",
      "automl.examples.delete",
      "automl.examples.get",
      "automl.examples.list",
      "automl.examples.update",
      "automl.files.delete",
      "automl.files.list",
      "automl.humanAnnotationTasks.create",
      "automl.humanAnnotationTasks.delete",
      "automl.humanAnnotationTasks.get",
      "automl.humanAnnotationTasks.list",
      "automl.locations.get",
      "automl.locations.getIamPolicy",
      "automl.locations.list",
      "automl.locations.setIamPolicy",
      "automl.modelEvaluations.create",
      "automl.modelEvaluations.get",
      "automl.modelEvaluations.list",
      "automl.models.create",
      "automl.models.delete",
      "automl.models.deploy",
      "automl.models.export",
      "automl.models.get",
      "automl.models.getIamPolicy",
      "automl.models.list",
      "automl.models.predict",
      "automl.models.setIamPolicy",
      "automl.models.undeploy",
      "automl.operations.cancel",
      "automl.operations.delete",
      "automl.operations.get",
      "automl.operations.list",
      "automl.tableSpecs.get",
      "automl.tableSpecs.list",
      "automl.tableSpecs.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/automl.editor",
    "title": "AutoML Editor",
    "description": "Editor of all AutoML resources",
    "includedPermissions": [
      "automl.annotationSpecs.create",
      "automl.annotationSpecs.delete",
      "automl.annotationSpecs.get",
      "automl.annotationSpecs.list",
      "automl.annotationSpecs.update",
      "automl.annotations.approve",
      "automl.annotations.create",
      "automl.annotations.list",
      "automl.annotations.manipulate",
      "automl.annotations.reject",
      "automl.columnSpecs.get",
      "automl.columnSpecs.list",
      "automl.columnSpecs.update",
      "automl.datasets.create",
      "automl.datasets.delete",
      "automl.datasets.export",
      "automl.datasets.get",
      "automl.datasets.import",
      "automl.datasets.list",
      "automl.datasets.update",
      "automl.examples.delete",
      "automl.examples.get",
      "automl.examples.list",
      "automl.examples.update",
      "automl.files.delete",
      "automl.files.list",
      "automl.humanAnnotationTasks.create",
      "automl.humanAnnotationTasks.delete",
      "automl.humanAnnotationTasks.get",
      "automl.humanAnnotationTasks.list",
      "automl.locations.get",
      "automl.locations.list",
      "automl.modelEvaluations.create",
      "automl.modelEvaluations.get",
      "automl.modelEvaluations.list",
      "automl.models.create",
      "automl.models.delete",
      "automl.models.deploy",
      "automl.models.export",
      "automl.models.get",
      "automl.models.list",
      "automl.models.predict",
      "automl.models.undeploy",
      "automl.operations.cancel",
      "automl.operations.delete",
      "automl.operations.get",
      "automl.operations.list",
      "automl.tableSpecs.get",
      "automl.tableSpecs.list",
      "automl.tableSpecs.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/automl.predictor",
    "title": "AutoML Predictor",
    "description": "Predict using models",
    "includedPermissions": [
      "automl.models.predict",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/automl.serviceAgent",
    "title": "AutoML Service Agent",
    "description": "AutoML service agent can act as Cloud Storage admin and export BigQuery tables, which can be backed by Cloud Storage and Cloud Bigtable.",
    "includedPermissions": [
      "bigquery.datasets.create",
      "bigquery.datasets.get",
      "bigquery.jobs.create",
      "bigquery.tables.create",
      "bigquery.tables.export",
      "bigquery.tables.get",
      "bigquery.tables.getData",
      "bigquery.tables.update",
      "bigquery.tables.updateData",
      "bigtable.tables.get",
      "bigtable.tables.list",
      "bigtable.tables.readRows",
      "serviceusage.services.use",
      "storage.buckets.get",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/automl.viewer",
    "title": "AutoML Viewer",
    "description": "Viewer of all AutoML resources",
    "includedPermissions": [
      "automl.annotationSpecs.get",
      "automl.annotationSpecs.list",
      "automl.annotations.list",
      "automl.columnSpecs.get",
      "automl.columnSpecs.list",
      "automl.datasets.get",
      "automl.datasets.list",
      "automl.examples.get",
      "automl.examples.list",
      "automl.files.list",
      "automl.humanAnnotationTasks.get",
      "automl.humanAnnotationTasks.list",
      "automl.locations.get",
      "automl.locations.list",
      "automl.modelEvaluations.get",
      "automl.modelEvaluations.list",
      "automl.models.get",
      "automl.models.list",
      "automl.operations.get",
      "automl.operations.list",
      "automl.tableSpecs.get",
      "automl.tableSpecs.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/automlrecommendations.admin",
    "title": "Recommendations AI Admin",
    "description": "Full access to all Recommendations AI resources.",
    "includedPermissions": [
      "automlrecommendations.apiKeys.create",
      "automlrecommendations.apiKeys.delete",
      "automlrecommendations.apiKeys.list",
      "automlrecommendations.catalogItems.create",
      "automlrecommendations.catalogItems.delete",
      "automlrecommendations.catalogItems.get",
      "automlrecommendations.catalogItems.list",
      "automlrecommendations.catalogItems.update",
      "automlrecommendations.catalogs.getStats",
      "automlrecommendations.catalogs.list",
      "automlrecommendations.catalogs.update",
      "automlrecommendations.eventStores.getStats",
      "automlrecommendations.eventStores.list",
      "automlrecommendations.events.create",
      "automlrecommendations.events.get",
      "automlrecommendations.events.list",
      "automlrecommendations.events.purge",
      "automlrecommendations.events.rejoin",
      "automlrecommendations.placements.create",
      "automlrecommendations.placements.delete",
      "automlrecommendations.placements.getStats",
      "automlrecommendations.placements.list",
      "automlrecommendations.recommendations.create",
      "automlrecommendations.recommendations.delete",
      "automlrecommendations.recommendations.list",
      "automlrecommendations.recommendations.pause",
      "automlrecommendations.recommendations.resume",
      "automlrecommendations.recommendations.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "retail.catalogs.list",
      "retail.catalogs.update",
      "retail.operations.get",
      "retail.operations.list",
      "retail.placements.predict",
      "retail.placements.search",
      "retail.products.create",
      "retail.products.delete",
      "retail.products.export",
      "retail.products.get",
      "retail.products.import",
      "retail.products.list",
      "retail.products.purge",
      "retail.products.update",
      "retail.retailProjects.get",
      "retail.userEvents.create",
      "retail.userEvents.import",
      "retail.userEvents.purge",
      "retail.userEvents.rejoin",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/automlrecommendations.adminViewer",
    "title": "Recommendations AI Admin Viewer",
    "description": "Viewer of all Recommendations AI resources.",
    "includedPermissions": [
      "automlrecommendations.apiKeys.list",
      "automlrecommendations.catalogItems.get",
      "automlrecommendations.catalogItems.list",
      "automlrecommendations.catalogs.getStats",
      "automlrecommendations.catalogs.list",
      "automlrecommendations.eventStores.getStats",
      "automlrecommendations.eventStores.list",
      "automlrecommendations.events.get",
      "automlrecommendations.events.list",
      "automlrecommendations.placements.getStats",
      "automlrecommendations.placements.list",
      "automlrecommendations.recommendations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "retail.catalogs.list",
      "retail.operations.get",
      "retail.operations.list",
      "retail.placements.predict",
      "retail.placements.search",
      "retail.products.export",
      "retail.products.get",
      "retail.products.list",
      "retail.retailProjects.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/automlrecommendations.editor",
    "title": "Recommendations AI Editor",
    "description": "Editor of all Recommendations AI resources.",
    "includedPermissions": [
      "automlrecommendations.apiKeys.create",
      "automlrecommendations.apiKeys.list",
      "automlrecommendations.catalogItems.create",
      "automlrecommendations.catalogItems.delete",
      "automlrecommendations.catalogItems.get",
      "automlrecommendations.catalogItems.list",
      "automlrecommendations.catalogItems.update",
      "automlrecommendations.catalogs.getStats",
      "automlrecommendations.catalogs.list",
      "automlrecommendations.eventStores.getStats",
      "automlrecommendations.eventStores.list",
      "automlrecommendations.events.create",
      "automlrecommendations.events.get",
      "automlrecommendations.events.list",
      "automlrecommendations.placements.create",
      "automlrecommendations.placements.getStats",
      "automlrecommendations.placements.list",
      "automlrecommendations.recommendations.create",
      "automlrecommendations.recommendations.list",
      "automlrecommendations.recommendations.pause",
      "automlrecommendations.recommendations.resume",
      "automlrecommendations.recommendations.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "retail.catalogs.list",
      "retail.catalogs.update",
      "retail.operations.get",
      "retail.operations.list",
      "retail.placements.predict",
      "retail.placements.search",
      "retail.products.create",
      "retail.products.delete",
      "retail.products.export",
      "retail.products.get",
      "retail.products.import",
      "retail.products.list",
      "retail.products.update",
      "retail.retailProjects.get",
      "retail.userEvents.create",
      "retail.userEvents.import",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/automlrecommendations.serviceAgent",
    "title": "Recommendations AI Service Agent",
    "description": "Recommendations AI service uploads catalog feeds from Cloud Storage, reports results to the customer Cloud Storage bucket, writes logs to customer projects, and writes and reads Stackdriver metrics for customer projects.",
    "includedPermissions": [
      "bigquery.datasets.create",
      "bigquery.datasets.get",
      "bigquery.jobs.create",
      "bigquery.jobs.get",
      "bigquery.jobs.list",
      "bigquery.jobs.update",
      "bigquery.tables.create",
      "bigquery.tables.export",
      "bigquery.tables.get",
      "bigquery.tables.getData",
      "bigquery.tables.list",
      "bigquery.tables.update",
      "bigquery.tables.updateData",
      "cloudnotifications.activities.list",
      "dataflow.jobs.cancel",
      "dataflow.jobs.create",
      "dataflow.jobs.get",
      "dataflow.jobs.list",
      "dataflow.jobs.snapshot",
      "dataflow.jobs.updateContents",
      "dataflow.messages.list",
      "dataflow.metrics.get",
      "logging.logEntries.create",
      "logging.logEntries.route",
      "monitoring.alertPolicies.get",
      "monitoring.alertPolicies.list",
      "monitoring.dashboards.get",
      "monitoring.dashboards.list",
      "monitoring.groups.get",
      "monitoring.groups.list",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.notificationChannelDescriptors.get",
      "monitoring.notificationChannelDescriptors.list",
      "monitoring.notificationChannels.get",
      "monitoring.notificationChannels.list",
      "monitoring.publicWidgets.get",
      "monitoring.publicWidgets.list",
      "monitoring.services.get",
      "monitoring.services.list",
      "monitoring.slos.get",
      "monitoring.slos.list",
      "monitoring.snoozes.get",
      "monitoring.snoozes.list",
      "monitoring.timeSeries.create",
      "monitoring.timeSeries.list",
      "monitoring.uptimeCheckConfigs.get",
      "monitoring.uptimeCheckConfigs.list",
      "opsconfigmonitoring.resourceMetadata.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "stackdriver.projects.get",
      "stackdriver.resourceMetadata.list",
      "storage.buckets.create",
      "storage.buckets.get",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/automlrecommendations.viewer",
    "title": "Recommendations AI Viewer",
    "description": "Viewer of all Recommendations AI resources except automlrecommendations.apiKeys. To have all read access use Recommendations AI Admin Viewer role instead.",
    "includedPermissions": [
      "automlrecommendations.catalogItems.get",
      "automlrecommendations.catalogItems.list",
      "automlrecommendations.catalogs.getStats",
      "automlrecommendations.catalogs.list",
      "automlrecommendations.eventStores.getStats",
      "automlrecommendations.eventStores.list",
      "automlrecommendations.events.get",
      "automlrecommendations.events.list",
      "automlrecommendations.placements.getStats",
      "automlrecommendations.placements.list",
      "automlrecommendations.recommendations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "retail.catalogs.list",
      "retail.operations.get",
      "retail.operations.list",
      "retail.placements.predict",
      "retail.placements.search",
      "retail.products.export",
      "retail.products.get",
      "retail.products.list",
      "retail.retailProjects.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/autoscaling.metricsWriter",
    "title": "Autoscaling Metrics Writer",
    "description": "Access to write metrics for autoscaling site",
    "includedPermissions": [
      "autoscaling.sites.writeMetrics"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/autoscaling.recommendationsReader",
    "title": "Autoscaling Recommendations Reader",
    "description": "Access to read recommendations from autoscaling site",
    "includedPermissions": [
      "autoscaling.sites.readRecommendations"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/autoscaling.sitesAdmin",
    "title": "Autoscaling Site Admin",
    "description": "Full access to all autoscaling site features",
    "includedPermissions": [
      "autoscaling.sites.getIamPolicy",
      "autoscaling.sites.readRecommendations",
      "autoscaling.sites.setIamPolicy",
      "autoscaling.sites.writeMetrics",
      "autoscaling.sites.writeState",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/autoscaling.stateWriter",
    "title": "Autoscaling State Writer",
    "description": "Access to write state for autoscaling site",
    "includedPermissions": [
      "autoscaling.sites.writeState"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/axt.admin",
    "title": "Access Transparency Admin",
    "description": "Enable Access Transparency for Organization",
    "includedPermissions": [
      "axt.labels.get",
      "axt.labels.set",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/backupdr.admin",
    "title": "Backup and DR Admin",
    "description": "Provides full access to all Backup and DR resources. ",
    "includedPermissions": [
      "backupdr.locations.get",
      "backupdr.locations.list",
      "backupdr.managementServers.access",
      "backupdr.managementServers.accessSensitiveData",
      "backupdr.managementServers.assignBackupPlans",
      "backupdr.managementServers.backupAccess",
      "backupdr.managementServers.create",
      "backupdr.managementServers.delete",
      "backupdr.managementServers.get",
      "backupdr.managementServers.getIamPolicy",
      "backupdr.managementServers.list",
      "backupdr.managementServers.manageApplications",
      "backupdr.managementServers.manageBackupPlans",
      "backupdr.managementServers.manageBackupServers",
      "backupdr.managementServers.manageBackups",
      "backupdr.managementServers.manageClones",
      "backupdr.managementServers.manageExpiration",
      "backupdr.managementServers.manageHosts",
      "backupdr.managementServers.manageInternalACL",
      "backupdr.managementServers.manageJobs",
      "backupdr.managementServers.manageLiveClones",
      "backupdr.managementServers.manageMigrations",
      "backupdr.managementServers.manageMirroring",
      "backupdr.managementServers.manageMounts",
      "backupdr.managementServers.manageRestores",
      "backupdr.managementServers.manageSensitiveData",
      "backupdr.managementServers.manageStorage",
      "backupdr.managementServers.manageSystem",
      "backupdr.managementServers.manageWorkflows",
      "backupdr.managementServers.refreshWorkflows",
      "backupdr.managementServers.runWorkflows",
      "backupdr.managementServers.setIamPolicy",
      "backupdr.managementServers.testFailOvers",
      "backupdr.managementServers.viewBackupPlans",
      "backupdr.managementServers.viewBackupServers",
      "backupdr.managementServers.viewReports",
      "backupdr.managementServers.viewStorage",
      "backupdr.managementServers.viewSystem",
      "backupdr.managementServers.viewWorkflows",
      "backupdr.operations.cancel",
      "backupdr.operations.delete",
      "backupdr.operations.get",
      "backupdr.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/backupdr.backupUser",
    "title": "Backup and DR Backup User",
    "description": "Allows the user to apply existing backup plans. This role cannot create backup plans or restore from a backup.",
    "includedPermissions": [
      "backupdr.locations.get",
      "backupdr.locations.list",
      "backupdr.managementServers.access",
      "backupdr.managementServers.assignBackupPlans",
      "backupdr.managementServers.get",
      "backupdr.managementServers.list",
      "backupdr.managementServers.manageApplications",
      "backupdr.managementServers.manageBackups",
      "backupdr.managementServers.manageHosts",
      "backupdr.managementServers.viewBackupPlans",
      "backupdr.managementServers.viewReports",
      "backupdr.managementServers.viewStorage",
      "backupdr.managementServers.viewSystem",
      "backupdr.operations.get",
      "backupdr.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/backupdr.cloudStorageOperator",
    "title": "Backup and DR Cloud Storage Operator",
    "description": "Allows a Backup and DR service account to store and manage data (backups or metadata) in Cloud Storage.",
    "includedPermissions": [
      "storage.buckets.create",
      "storage.buckets.get",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/backupdr.computeEngineOperator",
    "title": "Backup and DR Compute Engine Operator",
    "description": "Allows a Backup and DR service account to discover, back up, and restore Compute Engine VM instances.",
    "includedPermissions": [
      "compute.addresses.list",
      "compute.diskTypes.get",
      "compute.diskTypes.list",
      "compute.disks.create",
      "compute.disks.createSnapshot",
      "compute.disks.delete",
      "compute.disks.get",
      "compute.disks.setLabels",
      "compute.disks.use",
      "compute.firewalls.list",
      "compute.globalOperations.get",
      "compute.images.create",
      "compute.images.delete",
      "compute.images.get",
      "compute.images.useReadOnly",
      "compute.instances.attachDisk",
      "compute.instances.create",
      "compute.instances.delete",
      "compute.instances.detachDisk",
      "compute.instances.get",
      "compute.instances.list",
      "compute.instances.setLabels",
      "compute.instances.setMetadata",
      "compute.instances.setServiceAccount",
      "compute.instances.setTags",
      "compute.instances.start",
      "compute.instances.stop",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.networks.list",
      "compute.nodeGroups.get",
      "compute.nodeGroups.list",
      "compute.nodeTemplates.get",
      "compute.projects.get",
      "compute.regionOperations.get",
      "compute.regions.get",
      "compute.regions.list",
      "compute.snapshots.create",
      "compute.snapshots.delete",
      "compute.snapshots.get",
      "compute.snapshots.setLabels",
      "compute.snapshots.useReadOnly",
      "compute.subnetworks.list",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.zoneOperations.get",
      "compute.zones.list",
      "iam.serviceAccounts.actAs",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/backupdr.mountUser",
    "title": "Backup and DR Mount User",
    "description": "Allows the user to mount from a backup. This role cannot create a backup plan or restore from a backup.",
    "includedPermissions": [
      "backupdr.locations.get",
      "backupdr.locations.list",
      "backupdr.managementServers.access",
      "backupdr.managementServers.get",
      "backupdr.managementServers.list",
      "backupdr.managementServers.manageApplications",
      "backupdr.managementServers.manageClones",
      "backupdr.managementServers.manageHosts",
      "backupdr.managementServers.manageLiveClones",
      "backupdr.managementServers.manageMirroring",
      "backupdr.managementServers.manageMounts",
      "backupdr.managementServers.manageWorkflows",
      "backupdr.managementServers.refreshWorkflows",
      "backupdr.managementServers.runWorkflows",
      "backupdr.managementServers.viewBackupPlans",
      "backupdr.managementServers.viewReports",
      "backupdr.managementServers.viewStorage",
      "backupdr.managementServers.viewSystem",
      "backupdr.managementServers.viewWorkflows",
      "backupdr.operations.get",
      "backupdr.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/backupdr.restoreUser",
    "title": "Backup and DR Restore User",
    "description": "Allows the user to restore or mount from a backup. This role cannot create a backup plan.",
    "includedPermissions": [
      "backupdr.locations.get",
      "backupdr.locations.list",
      "backupdr.managementServers.access",
      "backupdr.managementServers.get",
      "backupdr.managementServers.list",
      "backupdr.managementServers.manageApplications",
      "backupdr.managementServers.manageClones",
      "backupdr.managementServers.manageHosts",
      "backupdr.managementServers.manageLiveClones",
      "backupdr.managementServers.manageMigrations",
      "backupdr.managementServers.manageMirroring",
      "backupdr.managementServers.manageMounts",
      "backupdr.managementServers.manageRestores",
      "backupdr.managementServers.manageWorkflows",
      "backupdr.managementServers.refreshWorkflows",
      "backupdr.managementServers.runWorkflows",
      "backupdr.managementServers.testFailOvers",
      "backupdr.managementServers.viewBackupPlans",
      "backupdr.managementServers.viewReports",
      "backupdr.managementServers.viewStorage",
      "backupdr.managementServers.viewSystem",
      "backupdr.managementServers.viewWorkflows",
      "backupdr.operations.get",
      "backupdr.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/backupdr.serviceAgent",
    "title": "Backup and DR Service Agent",
    "description": "Grants the Backup and DR Service access to protect GCE instances.",
    "includedPermissions": [
      "compute.addresses.list",
      "compute.diskTypes.get",
      "compute.diskTypes.list",
      "compute.disks.create",
      "compute.disks.createSnapshot",
      "compute.disks.delete",
      "compute.disks.get",
      "compute.disks.setLabels",
      "compute.disks.use",
      "compute.firewalls.list",
      "compute.globalOperations.get",
      "compute.images.create",
      "compute.images.delete",
      "compute.images.get",
      "compute.images.useReadOnly",
      "compute.instances.attachDisk",
      "compute.instances.create",
      "compute.instances.delete",
      "compute.instances.detachDisk",
      "compute.instances.get",
      "compute.instances.list",
      "compute.instances.setLabels",
      "compute.instances.setMetadata",
      "compute.instances.setServiceAccount",
      "compute.instances.setTags",
      "compute.instances.start",
      "compute.instances.stop",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.networks.list",
      "compute.nodeGroups.get",
      "compute.nodeGroups.list",
      "compute.nodeTemplates.get",
      "compute.projects.get",
      "compute.regionOperations.get",
      "compute.regions.get",
      "compute.regions.list",
      "compute.snapshots.create",
      "compute.snapshots.delete",
      "compute.snapshots.get",
      "compute.snapshots.setLabels",
      "compute.snapshots.useReadOnly",
      "compute.subnetworks.list",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.zoneOperations.get",
      "compute.zones.list",
      "iam.serviceAccounts.actAs",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/backupdr.user",
    "title": "Backup and DR User",
    "description": "Provides access to management console. Granular Backup and DR permissions depend on ACL configuration provided by Backup and DR admin within the management console.",
    "includedPermissions": [
      "backupdr.managementServers.access",
      "backupdr.managementServers.backupAccess",
      "backupdr.managementServers.get",
      "backupdr.managementServers.getIamPolicy",
      "backupdr.managementServers.list",
      "backupdr.managementServers.viewBackupPlans",
      "backupdr.managementServers.viewBackupServers",
      "backupdr.managementServers.viewReports",
      "backupdr.managementServers.viewStorage",
      "backupdr.managementServers.viewSystem",
      "backupdr.managementServers.viewWorkflows",
      "backupdr.operations.get",
      "backupdr.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/backupdr.userv2",
    "title": "Backup and DR User V2",
    "description": "Provides full access to Backup and DR resources except deploying and managing backup infrastructure, expiring backups, changing data sensitivity and configuring on-premises billing.",
    "includedPermissions": [
      "backupdr.locations.get",
      "backupdr.locations.list",
      "backupdr.managementServers.access",
      "backupdr.managementServers.assignBackupPlans",
      "backupdr.managementServers.backupAccess",
      "backupdr.managementServers.get",
      "backupdr.managementServers.getIamPolicy",
      "backupdr.managementServers.list",
      "backupdr.managementServers.manageApplications",
      "backupdr.managementServers.manageBackupPlans",
      "backupdr.managementServers.manageBackups",
      "backupdr.managementServers.manageClones",
      "backupdr.managementServers.manageHosts",
      "backupdr.managementServers.manageJobs",
      "backupdr.managementServers.manageLiveClones",
      "backupdr.managementServers.manageMigrations",
      "backupdr.managementServers.manageMirroring",
      "backupdr.managementServers.manageMounts",
      "backupdr.managementServers.manageRestores",
      "backupdr.managementServers.manageWorkflows",
      "backupdr.managementServers.refreshWorkflows",
      "backupdr.managementServers.runWorkflows",
      "backupdr.managementServers.testFailOvers",
      "backupdr.managementServers.viewBackupPlans",
      "backupdr.managementServers.viewBackupServers",
      "backupdr.managementServers.viewReports",
      "backupdr.managementServers.viewStorage",
      "backupdr.managementServers.viewSystem",
      "backupdr.managementServers.viewWorkflows",
      "backupdr.operations.get",
      "backupdr.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/backupdr.viewer",
    "title": "Backup and DR Viewer",
    "description": "Provides read-only access to all Backup and DR resources.",
    "includedPermissions": [
      "backupdr.locations.get",
      "backupdr.locations.list",
      "backupdr.managementServers.access",
      "backupdr.managementServers.backupAccess",
      "backupdr.managementServers.get",
      "backupdr.managementServers.getIamPolicy",
      "backupdr.managementServers.list",
      "backupdr.managementServers.viewBackupPlans",
      "backupdr.managementServers.viewBackupServers",
      "backupdr.managementServers.viewReports",
      "backupdr.managementServers.viewStorage",
      "backupdr.managementServers.viewSystem",
      "backupdr.managementServers.viewWorkflows",
      "backupdr.operations.get",
      "backupdr.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/baremetalsolution.admin",
    "title": "Bare Metal Solution Admin",
    "description": "Administrator of Bare Metal Solution resources",
    "includedPermissions": [
      "baremetalsolution.instancequotas.list",
      "baremetalsolution.instances.attachNetwork",
      "baremetalsolution.instances.attachVolume",
      "baremetalsolution.instances.create",
      "baremetalsolution.instances.detachLun",
      "baremetalsolution.instances.detachNetwork",
      "baremetalsolution.instances.detachVolume",
      "baremetalsolution.instances.disableInteractiveSerialConsole",
      "baremetalsolution.instances.enableInteractiveSerialConsole",
      "baremetalsolution.instances.get",
      "baremetalsolution.instances.list",
      "baremetalsolution.instances.rename",
      "baremetalsolution.instances.reset",
      "baremetalsolution.instances.start",
      "baremetalsolution.instances.stop",
      "baremetalsolution.instances.update",
      "baremetalsolution.luns.create",
      "baremetalsolution.luns.delete",
      "baremetalsolution.luns.evict",
      "baremetalsolution.luns.get",
      "baremetalsolution.luns.list",
      "baremetalsolution.luns.update",
      "baremetalsolution.maintenanceevents.addProposal",
      "baremetalsolution.maintenanceevents.approve",
      "baremetalsolution.maintenanceevents.get",
      "baremetalsolution.maintenanceevents.list",
      "baremetalsolution.networkquotas.list",
      "baremetalsolution.networks.create",
      "baremetalsolution.networks.delete",
      "baremetalsolution.networks.get",
      "baremetalsolution.networks.list",
      "baremetalsolution.networks.rename",
      "baremetalsolution.networks.update",
      "baremetalsolution.nfsshares.create",
      "baremetalsolution.nfsshares.delete",
      "baremetalsolution.nfsshares.get",
      "baremetalsolution.nfsshares.list",
      "baremetalsolution.nfsshares.rename",
      "baremetalsolution.nfsshares.update",
      "baremetalsolution.operations.get",
      "baremetalsolution.osimages.list",
      "baremetalsolution.procurements.get",
      "baremetalsolution.procurements.list",
      "baremetalsolution.skus.list",
      "baremetalsolution.snapshotschedulepolicies.create",
      "baremetalsolution.snapshotschedulepolicies.delete",
      "baremetalsolution.snapshotschedulepolicies.get",
      "baremetalsolution.snapshotschedulepolicies.list",
      "baremetalsolution.snapshotschedulepolicies.update",
      "baremetalsolution.sshKeys.create",
      "baremetalsolution.sshKeys.delete",
      "baremetalsolution.sshKeys.list",
      "baremetalsolution.storageaggregatepools.list",
      "baremetalsolution.volumequotas.list",
      "baremetalsolution.volumes.create",
      "baremetalsolution.volumes.delete",
      "baremetalsolution.volumes.evict",
      "baremetalsolution.volumes.get",
      "baremetalsolution.volumes.list",
      "baremetalsolution.volumes.rename",
      "baremetalsolution.volumes.resize",
      "baremetalsolution.volumes.update",
      "baremetalsolution.volumesnapshots.create",
      "baremetalsolution.volumesnapshots.delete",
      "baremetalsolution.volumesnapshots.get",
      "baremetalsolution.volumesnapshots.list",
      "baremetalsolution.volumesnapshots.restore",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/baremetalsolution.editor",
    "title": "Bare Metal Solution Editor",
    "description": "Editor of Bare Metal Solution resources",
    "includedPermissions": [
      "baremetalsolution.instancequotas.list",
      "baremetalsolution.instances.attachNetwork",
      "baremetalsolution.instances.attachVolume",
      "baremetalsolution.instances.create",
      "baremetalsolution.instances.detachLun",
      "baremetalsolution.instances.detachNetwork",
      "baremetalsolution.instances.detachVolume",
      "baremetalsolution.instances.disableInteractiveSerialConsole",
      "baremetalsolution.instances.enableInteractiveSerialConsole",
      "baremetalsolution.instances.get",
      "baremetalsolution.instances.list",
      "baremetalsolution.instances.rename",
      "baremetalsolution.instances.reset",
      "baremetalsolution.instances.start",
      "baremetalsolution.instances.stop",
      "baremetalsolution.instances.update",
      "baremetalsolution.luns.create",
      "baremetalsolution.luns.delete",
      "baremetalsolution.luns.evict",
      "baremetalsolution.luns.get",
      "baremetalsolution.luns.list",
      "baremetalsolution.luns.update",
      "baremetalsolution.maintenanceevents.addProposal",
      "baremetalsolution.maintenanceevents.approve",
      "baremetalsolution.maintenanceevents.get",
      "baremetalsolution.maintenanceevents.list",
      "baremetalsolution.networkquotas.list",
      "baremetalsolution.networks.create",
      "baremetalsolution.networks.delete",
      "baremetalsolution.networks.get",
      "baremetalsolution.networks.list",
      "baremetalsolution.networks.rename",
      "baremetalsolution.networks.update",
      "baremetalsolution.nfsshares.create",
      "baremetalsolution.nfsshares.delete",
      "baremetalsolution.nfsshares.get",
      "baremetalsolution.nfsshares.list",
      "baremetalsolution.nfsshares.rename",
      "baremetalsolution.nfsshares.update",
      "baremetalsolution.operations.get",
      "baremetalsolution.procurements.get",
      "baremetalsolution.procurements.list",
      "baremetalsolution.skus.list",
      "baremetalsolution.snapshotschedulepolicies.create",
      "baremetalsolution.snapshotschedulepolicies.delete",
      "baremetalsolution.snapshotschedulepolicies.get",
      "baremetalsolution.snapshotschedulepolicies.list",
      "baremetalsolution.snapshotschedulepolicies.update",
      "baremetalsolution.sshKeys.create",
      "baremetalsolution.sshKeys.delete",
      "baremetalsolution.sshKeys.list",
      "baremetalsolution.storageaggregatepools.list",
      "baremetalsolution.volumequotas.list",
      "baremetalsolution.volumes.create",
      "baremetalsolution.volumes.delete",
      "baremetalsolution.volumes.evict",
      "baremetalsolution.volumes.get",
      "baremetalsolution.volumes.list",
      "baremetalsolution.volumes.rename",
      "baremetalsolution.volumes.resize",
      "baremetalsolution.volumes.update",
      "baremetalsolution.volumesnapshots.create",
      "baremetalsolution.volumesnapshots.delete",
      "baremetalsolution.volumesnapshots.get",
      "baremetalsolution.volumesnapshots.list",
      "baremetalsolution.volumesnapshots.restore",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/baremetalsolution.instancesadmin",
    "title": "Bare Metal Solution Instances Admin",
    "description": "Admin of Bare Metal Solution Instance resources",
    "includedPermissions": [
      "baremetalsolution.instances.attachNetwork",
      "baremetalsolution.instances.attachVolume",
      "baremetalsolution.instances.create",
      "baremetalsolution.instances.detachLun",
      "baremetalsolution.instances.detachNetwork",
      "baremetalsolution.instances.detachVolume",
      "baremetalsolution.instances.disableInteractiveSerialConsole",
      "baremetalsolution.instances.enableInteractiveSerialConsole",
      "baremetalsolution.instances.get",
      "baremetalsolution.instances.list",
      "baremetalsolution.instances.rename",
      "baremetalsolution.instances.reset",
      "baremetalsolution.instances.start",
      "baremetalsolution.instances.stop",
      "baremetalsolution.instances.update",
      "baremetalsolution.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/baremetalsolution.instancesviewer",
    "title": "Bare Metal Solution Instances Viewer",
    "description": "Viewer of Bare Metal Solution Instance resources",
    "includedPermissions": [
      "baremetalsolution.instancequotas.list",
      "baremetalsolution.instances.get",
      "baremetalsolution.instances.list",
      "baremetalsolution.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/baremetalsolution.lunsadmin",
    "title": "Luns Admin",
    "description": "Administrator of Bare Metal Solution Lun resources",
    "includedPermissions": [
      "baremetalsolution.luns.get",
      "baremetalsolution.luns.list",
      "baremetalsolution.operations.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/baremetalsolution.lunsviewer",
    "title": "Luns Viewer",
    "description": "Viewer of Bare Metal Solution Lun resources",
    "includedPermissions": [
      "baremetalsolution.luns.get",
      "baremetalsolution.luns.list",
      "baremetalsolution.operations.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/baremetalsolution.maintenanceeventsadmin",
    "title": "Maintenance Events Admin",
    "description": "Administrator of Bare Metal Solution maintenance events resources",
    "includedPermissions": [
      "baremetalsolution.maintenanceevents.addProposal",
      "baremetalsolution.maintenanceevents.approve",
      "baremetalsolution.maintenanceevents.get",
      "baremetalsolution.maintenanceevents.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/baremetalsolution.maintenanceeventseditor",
    "title": "Maintenance Events Editor",
    "description": "Editor of Bare Metal Solution maintenance events resources",
    "includedPermissions": [
      "baremetalsolution.maintenanceevents.addProposal",
      "baremetalsolution.maintenanceevents.approve",
      "baremetalsolution.maintenanceevents.get",
      "baremetalsolution.maintenanceevents.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/baremetalsolution.maintenanceeventsviewer",
    "title": "Maintenance Events Viewer",
    "description": "Viewer of Bare Metal Solution maintenance events resources",
    "includedPermissions": [
      "baremetalsolution.maintenanceevents.get",
      "baremetalsolution.maintenanceevents.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/baremetalsolution.networksadmin",
    "title": "Networks Admin",
    "description": "Admin of Bare Metal Solution networks resources",
    "includedPermissions": [
      "baremetalsolution.networkquotas.list",
      "baremetalsolution.networks.create",
      "baremetalsolution.networks.delete",
      "baremetalsolution.networks.get",
      "baremetalsolution.networks.list",
      "baremetalsolution.networks.rename",
      "baremetalsolution.networks.update",
      "baremetalsolution.operations.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/baremetalsolution.nfssharesadmin",
    "title": "NFS Shares Admin",
    "description": "Administrator of Bare Metal Solution NFS Share resources",
    "includedPermissions": [
      "baremetalsolution.nfsshares.create",
      "baremetalsolution.nfsshares.delete",
      "baremetalsolution.nfsshares.get",
      "baremetalsolution.nfsshares.list",
      "baremetalsolution.nfsshares.rename",
      "baremetalsolution.nfsshares.update",
      "baremetalsolution.operations.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/baremetalsolution.nfsshareseditor",
    "title": "NFS Shares Editor",
    "description": "Editor of Bare Metal Solution NFS Share resources",
    "includedPermissions": [
      "baremetalsolution.nfsshares.create",
      "baremetalsolution.nfsshares.delete",
      "baremetalsolution.nfsshares.get",
      "baremetalsolution.nfsshares.list",
      "baremetalsolution.nfsshares.rename",
      "baremetalsolution.nfsshares.update",
      "baremetalsolution.operations.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/baremetalsolution.nfssharesviewer",
    "title": "NFS Shares Viewer",
    "description": "Viewer of Bare Metal Solution NFS Share resources",
    "includedPermissions": [
      "baremetalsolution.nfsshares.get",
      "baremetalsolution.nfsshares.list",
      "baremetalsolution.operations.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/baremetalsolution.osimagesviewer",
    "title": "OS Images Viewer",
    "description": "Viewer of Bare Metal Solution OS images resources",
    "includedPermissions": [
      "baremetalsolution.osimages.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/baremetalsolution.procurementsadmin",
    "title": "Procurements Admin",
    "description": "Administrator of Bare Metal Solution Procurements",
    "includedPermissions": [
      "baremetalsolution.procurements.create",
      "baremetalsolution.procurements.get",
      "baremetalsolution.procurements.list",
      "baremetalsolution.skus.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/baremetalsolution.procurementseditor",
    "title": "Procurements Editor",
    "description": "Editor of Bare Metal Solution Procurements",
    "includedPermissions": [
      "baremetalsolution.procurements.create",
      "baremetalsolution.procurements.get",
      "baremetalsolution.procurements.list",
      "baremetalsolution.skus.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/baremetalsolution.procurementsviewer",
    "title": "Procurements Viewer",
    "description": "Viewer of Bare Metal Solution Procurements",
    "includedPermissions": [
      "baremetalsolution.procurements.get",
      "baremetalsolution.procurements.list",
      "baremetalsolution.skus.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/baremetalsolution.serviceAgent",
    "title": "Bare Metal Solution Service Agent",
    "description": "Gives permission to manage network resources such as interconnect pairing keys, required for Bare Metal Solution.",
    "includedPermissions": [
      "compute.interconnectAttachments.get",
      "compute.interconnectAttachments.list",
      "compute.interconnects.get",
      "compute.interconnects.list",
      "compute.networks.get",
      "compute.networks.list",
      "compute.projects.get",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/baremetalsolution.storageadmin",
    "title": "Bare Metal Solution Storage Admin",
    "description": "Administrator of Bare Metal Solution storage resources",
    "includedPermissions": [
      "baremetalsolution.luns.create",
      "baremetalsolution.luns.delete",
      "baremetalsolution.luns.evict",
      "baremetalsolution.luns.get",
      "baremetalsolution.luns.list",
      "baremetalsolution.luns.update",
      "baremetalsolution.nfsshares.create",
      "baremetalsolution.nfsshares.delete",
      "baremetalsolution.nfsshares.get",
      "baremetalsolution.nfsshares.list",
      "baremetalsolution.nfsshares.rename",
      "baremetalsolution.nfsshares.update",
      "baremetalsolution.operations.get",
      "baremetalsolution.snapshotschedulepolicies.create",
      "baremetalsolution.snapshotschedulepolicies.delete",
      "baremetalsolution.snapshotschedulepolicies.get",
      "baremetalsolution.snapshotschedulepolicies.list",
      "baremetalsolution.snapshotschedulepolicies.update",
      "baremetalsolution.storageaggregatepools.list",
      "baremetalsolution.volumequotas.list",
      "baremetalsolution.volumes.create",
      "baremetalsolution.volumes.delete",
      "baremetalsolution.volumes.evict",
      "baremetalsolution.volumes.get",
      "baremetalsolution.volumes.list",
      "baremetalsolution.volumes.rename",
      "baremetalsolution.volumes.resize",
      "baremetalsolution.volumes.update",
      "baremetalsolution.volumesnapshots.create",
      "baremetalsolution.volumesnapshots.delete",
      "baremetalsolution.volumesnapshots.get",
      "baremetalsolution.volumesnapshots.list",
      "baremetalsolution.volumesnapshots.restore",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/baremetalsolution.viewer",
    "title": "Bare Metal Solution Viewer",
    "description": "Viewer of Bare Metal Solution resources",
    "includedPermissions": [
      "baremetalsolution.instancequotas.list",
      "baremetalsolution.instances.get",
      "baremetalsolution.instances.list",
      "baremetalsolution.luns.get",
      "baremetalsolution.luns.list",
      "baremetalsolution.maintenanceevents.get",
      "baremetalsolution.maintenanceevents.list",
      "baremetalsolution.networkquotas.list",
      "baremetalsolution.networks.get",
      "baremetalsolution.networks.list",
      "baremetalsolution.nfsshares.get",
      "baremetalsolution.nfsshares.list",
      "baremetalsolution.operations.get",
      "baremetalsolution.osimages.list",
      "baremetalsolution.procurements.get",
      "baremetalsolution.procurements.list",
      "baremetalsolution.skus.list",
      "baremetalsolution.snapshotschedulepolicies.get",
      "baremetalsolution.snapshotschedulepolicies.list",
      "baremetalsolution.sshKeys.list",
      "baremetalsolution.storageaggregatepools.list",
      "baremetalsolution.volumequotas.list",
      "baremetalsolution.volumes.get",
      "baremetalsolution.volumes.list",
      "baremetalsolution.volumesnapshots.get",
      "baremetalsolution.volumesnapshots.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/baremetalsolution.volumesadmin",
    "title": "Volume Admin",
    "description": "Administrator of Bare Metal Solution volume resources",
    "includedPermissions": [
      "baremetalsolution.operations.get",
      "baremetalsolution.volumes.create",
      "baremetalsolution.volumes.delete",
      "baremetalsolution.volumes.evict",
      "baremetalsolution.volumes.get",
      "baremetalsolution.volumes.list",
      "baremetalsolution.volumes.rename",
      "baremetalsolution.volumes.resize",
      "baremetalsolution.volumes.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/baremetalsolution.volumeseditor",
    "title": "Volumes Editor",
    "description": "Editor of Bare Metal Solution volumes resources",
    "includedPermissions": [
      "baremetalsolution.operations.get",
      "baremetalsolution.volumequotas.list",
      "baremetalsolution.volumes.create",
      "baremetalsolution.volumes.delete",
      "baremetalsolution.volumes.get",
      "baremetalsolution.volumes.list",
      "baremetalsolution.volumes.rename",
      "baremetalsolution.volumes.resize",
      "baremetalsolution.volumes.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/baremetalsolution.volumesnapshotsadmin",
    "title": "Snapshots Admin",
    "description": "Administrator of Bare Metal Solution snapshots resources",
    "includedPermissions": [
      "baremetalsolution.operations.get",
      "baremetalsolution.volumesnapshots.create",
      "baremetalsolution.volumesnapshots.delete",
      "baremetalsolution.volumesnapshots.get",
      "baremetalsolution.volumesnapshots.list",
      "baremetalsolution.volumesnapshots.restore"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/baremetalsolution.volumesnapshotseditor",
    "title": "Snapshots Editor",
    "description": "Editor of Bare Metal Solution snapshots resources",
    "includedPermissions": [
      "baremetalsolution.operations.get",
      "baremetalsolution.volumesnapshots.create",
      "baremetalsolution.volumesnapshots.delete",
      "baremetalsolution.volumesnapshots.get",
      "baremetalsolution.volumesnapshots.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/baremetalsolution.volumesnapshotsviewer",
    "title": "Snapshots Viewer",
    "description": "Viewer of Bare Metal Solution snapshots resources",
    "includedPermissions": [
      "baremetalsolution.operations.get",
      "baremetalsolution.volumesnapshots.get",
      "baremetalsolution.volumesnapshots.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/baremetalsolution.volumessviewer",
    "title": "Volumes Viewer",
    "description": "Viewer of Bare Metal Solution volumes resources",
    "includedPermissions": [
      "baremetalsolution.operations.get",
      "baremetalsolution.volumes.get",
      "baremetalsolution.volumes.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/batch.agentReporter",
    "title": "Batch Agent Reporter",
    "description": "Reporter of batch agent states.",
    "includedPermissions": [
      "batch.states.report"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/batch.jobsEditor",
    "title": "Batch Job Editor",
    "description": "Editor of batch Jobs",
    "includedPermissions": [
      "batch.jobs.create",
      "batch.jobs.delete",
      "batch.jobs.get",
      "batch.jobs.list",
      "batch.locations.get",
      "batch.locations.list",
      "batch.operations.get",
      "batch.operations.list",
      "batch.tasks.get",
      "batch.tasks.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/batch.jobsViewer",
    "title": "Batch Job Viewer",
    "description": "Viewer of Batch Jobs, Task Groups and Tasks",
    "includedPermissions": [
      "batch.jobs.get",
      "batch.jobs.list",
      "batch.locations.get",
      "batch.locations.list",
      "batch.operations.get",
      "batch.operations.list",
      "batch.tasks.get",
      "batch.tasks.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/batch.serviceAgent",
    "title": "Google Batch Service Agent",
    "description": "Gives Google Batch account access to manage customer resources.",
    "includedPermissions": [
      "compute.acceleratorTypes.get",
      "compute.acceleratorTypes.list",
      "compute.addresses.createInternal",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.addresses.use",
      "compute.addresses.useInternal",
      "compute.autoscalers.create",
      "compute.autoscalers.delete",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.autoscalers.update",
      "compute.backendBuckets.get",
      "compute.backendBuckets.list",
      "compute.backendBuckets.listEffectiveTags",
      "compute.backendBuckets.listTagBindings",
      "compute.backendServices.get",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.diskTypes.get",
      "compute.diskTypes.list",
      "compute.disks.addResourcePolicies",
      "compute.disks.create",
      "compute.disks.createSnapshot",
      "compute.disks.createTagBinding",
      "compute.disks.delete",
      "compute.disks.deleteTagBinding",
      "compute.disks.get",
      "compute.disks.getIamPolicy",
      "compute.disks.list",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.disks.removeResourcePolicies",
      "compute.disks.resize",
      "compute.disks.setLabels",
      "compute.disks.startAsyncReplication",
      "compute.disks.stopAsyncReplication",
      "compute.disks.stopGroupAsyncReplication",
      "compute.disks.update",
      "compute.disks.use",
      "compute.disks.useReadOnly",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.list",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalAddresses.use",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalForwardingRules.pscGet",
      "compute.globalNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.create",
      "compute.globalNetworkEndpointGroups.createTagBinding",
      "compute.globalNetworkEndpointGroups.delete",
      "compute.globalNetworkEndpointGroups.deleteTagBinding",
      "compute.globalNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.get",
      "compute.globalNetworkEndpointGroups.list",
      "compute.globalNetworkEndpointGroups.listEffectiveTags",
      "compute.globalNetworkEndpointGroups.listTagBindings",
      "compute.globalNetworkEndpointGroups.use",
      "compute.globalOperations.get",
      "compute.globalOperations.list",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.images.create",
      "compute.images.createTagBinding",
      "compute.images.delete",
      "compute.images.deleteTagBinding",
      "compute.images.deprecate",
      "compute.images.get",
      "compute.images.getFromFamily",
      "compute.images.getIamPolicy",
      "compute.images.list",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.images.setLabels",
      "compute.images.update",
      "compute.images.useReadOnly",
      "compute.instanceGroupManagers.create",
      "compute.instanceGroupManagers.delete",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroupManagers.update",
      "compute.instanceGroupManagers.use",
      "compute.instanceGroups.create",
      "compute.instanceGroups.delete",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instanceGroups.update",
      "compute.instanceGroups.use",
      "compute.instanceTemplates.create",
      "compute.instanceTemplates.delete",
      "compute.instanceTemplates.get",
      "compute.instanceTemplates.getIamPolicy",
      "compute.instanceTemplates.list",
      "compute.instanceTemplates.useReadOnly",
      "compute.instances.addAccessConfig",
      "compute.instances.addMaintenancePolicies",
      "compute.instances.addResourcePolicies",
      "compute.instances.attachDisk",
      "compute.instances.create",
      "compute.instances.createTagBinding",
      "compute.instances.delete",
      "compute.instances.deleteAccessConfig",
      "compute.instances.deleteTagBinding",
      "compute.instances.detachDisk",
      "compute.instances.get",
      "compute.instances.getEffectiveFirewalls",
      "compute.instances.getGuestAttributes",
      "compute.instances.getIamPolicy",
      "compute.instances.getScreenshot",
      "compute.instances.getSerialPortOutput",
      "compute.instances.getShieldedInstanceIdentity",
      "compute.instances.getShieldedVmIdentity",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listReferrers",
      "compute.instances.listTagBindings",
      "compute.instances.osAdminLogin",
      "compute.instances.osLogin",
      "compute.instances.removeMaintenancePolicies",
      "compute.instances.removeResourcePolicies",
      "compute.instances.reset",
      "compute.instances.resume",
      "compute.instances.sendDiagnosticInterrupt",
      "compute.instances.setDeletionProtection",
      "compute.instances.setDiskAutoDelete",
      "compute.instances.setLabels",
      "compute.instances.setMachineResources",
      "compute.instances.setMachineType",
      "compute.instances.setMetadata",
      "compute.instances.setMinCpuPlatform",
      "compute.instances.setName",
      "compute.instances.setScheduling",
      "compute.instances.setSecurityPolicy",
      "compute.instances.setServiceAccount",
      "compute.instances.setShieldedInstanceIntegrityPolicy",
      "compute.instances.setShieldedVmIntegrityPolicy",
      "compute.instances.setTags",
      "compute.instances.simulateMaintenanceEvent",
      "compute.instances.start",
      "compute.instances.startWithEncryptionKey",
      "compute.instances.stop",
      "compute.instances.suspend",
      "compute.instances.update",
      "compute.instances.updateAccessConfig",
      "compute.instances.updateDisplayDevice",
      "compute.instances.updateNetworkInterface",
      "compute.instances.updateSecurity",
      "compute.instances.updateShieldedInstanceConfig",
      "compute.instances.updateShieldedVmConfig",
      "compute.instances.use",
      "compute.instances.useReadOnly",
      "compute.instantSnapshots.create",
      "compute.instantSnapshots.delete",
      "compute.instantSnapshots.export",
      "compute.instantSnapshots.get",
      "compute.instantSnapshots.getIamPolicy",
      "compute.instantSnapshots.list",
      "compute.instantSnapshots.setLabels",
      "compute.instantSnapshots.useReadOnly",
      "compute.interconnectAttachments.get",
      "compute.interconnectAttachments.list",
      "compute.interconnectLocations.get",
      "compute.interconnectLocations.list",
      "compute.interconnectRemoteLocations.get",
      "compute.interconnectRemoteLocations.list",
      "compute.interconnects.get",
      "compute.interconnects.list",
      "compute.licenseCodes.get",
      "compute.licenseCodes.getIamPolicy",
      "compute.licenseCodes.list",
      "compute.licenseCodes.update",
      "compute.licenseCodes.use",
      "compute.licenses.create",
      "compute.licenses.delete",
      "compute.licenses.get",
      "compute.licenses.getIamPolicy",
      "compute.licenses.list",
      "compute.machineImages.create",
      "compute.machineImages.delete",
      "compute.machineImages.get",
      "compute.machineImages.getIamPolicy",
      "compute.machineImages.list",
      "compute.machineImages.useReadOnly",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.networkAttachments.get",
      "compute.networkAttachments.list",
      "compute.networkEndpointGroups.attachNetworkEndpoints",
      "compute.networkEndpointGroups.create",
      "compute.networkEndpointGroups.createTagBinding",
      "compute.networkEndpointGroups.delete",
      "compute.networkEndpointGroups.deleteTagBinding",
      "compute.networkEndpointGroups.detachNetworkEndpoints",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.getIamPolicy",
      "compute.networkEndpointGroups.list",
      "compute.networkEndpointGroups.listEffectiveTags",
      "compute.networkEndpointGroups.listTagBindings",
      "compute.networkEndpointGroups.use",
      "compute.networks.get",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listTagBindings",
      "compute.networks.use",
      "compute.networks.useExternalIp",
      "compute.projects.get",
      "compute.projects.setCommonInstanceMetadata",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionHealthCheckServices.get",
      "compute.regionHealthCheckServices.list",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.create",
      "compute.regionNetworkEndpointGroups.createTagBinding",
      "compute.regionNetworkEndpointGroups.delete",
      "compute.regionNetworkEndpointGroups.deleteTagBinding",
      "compute.regionNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionNetworkEndpointGroups.listEffectiveTags",
      "compute.regionNetworkEndpointGroups.listTagBindings",
      "compute.regionNetworkEndpointGroups.use",
      "compute.regionNotificationEndpoints.get",
      "compute.regionNotificationEndpoints.list",
      "compute.regionOperations.get",
      "compute.regionOperations.list",
      "compute.regionSslCertificates.get",
      "compute.regionSslCertificates.list",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionSslPolicies.get",
      "compute.regionSslPolicies.list",
      "compute.regionSslPolicies.listAvailableFeatures",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionTargetTcpProxies.get",
      "compute.regionTargetTcpProxies.list",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.list",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.regions.get",
      "compute.regions.list",
      "compute.reservations.get",
      "compute.reservations.list",
      "compute.resourcePolicies.create",
      "compute.resourcePolicies.delete",
      "compute.resourcePolicies.get",
      "compute.resourcePolicies.getIamPolicy",
      "compute.resourcePolicies.list",
      "compute.resourcePolicies.update",
      "compute.resourcePolicies.use",
      "compute.resourcePolicies.useReadOnly",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routes.get",
      "compute.routes.list",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.serviceAttachments.get",
      "compute.serviceAttachments.list",
      "compute.snapshots.create",
      "compute.snapshots.createTagBinding",
      "compute.snapshots.delete",
      "compute.snapshots.deleteTagBinding",
      "compute.snapshots.get",
      "compute.snapshots.getIamPolicy",
      "compute.snapshots.list",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.snapshots.setLabels",
      "compute.snapshots.useReadOnly",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.get",
      "compute.sslPolicies.list",
      "compute.sslPolicies.listAvailableFeatures",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.targetGrpcProxies.get",
      "compute.targetGrpcProxies.list",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetInstances.get",
      "compute.targetInstances.list",
      "compute.targetInstances.listEffectiveTags",
      "compute.targetInstances.listTagBindings",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetSslProxies.listEffectiveTags",
      "compute.targetSslProxies.listTagBindings",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.targetVpnGateways.get",
      "compute.targetVpnGateways.list",
      "compute.urlMaps.get",
      "compute.urlMaps.list",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "compute.vpnGateways.get",
      "compute.vpnGateways.list",
      "compute.vpnTunnels.get",
      "compute.vpnTunnels.list",
      "compute.zoneOperations.get",
      "compute.zoneOperations.list",
      "compute.zones.get",
      "compute.zones.list",
      "iam.serviceAccounts.actAs",
      "pubsub.topics.publish",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "serviceusage.services.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/beyondcorp.admin",
    "title": "Cloud BeyondCorp Admin",
    "description": "Full access to all Cloud BeyondCorp resources.",
    "includedPermissions": [
      "beyondcorp.appConnections.create",
      "beyondcorp.appConnections.delete",
      "beyondcorp.appConnections.get",
      "beyondcorp.appConnections.getIamPolicy",
      "beyondcorp.appConnections.list",
      "beyondcorp.appConnections.setIamPolicy",
      "beyondcorp.appConnections.update",
      "beyondcorp.appConnectors.create",
      "beyondcorp.appConnectors.delete",
      "beyondcorp.appConnectors.get",
      "beyondcorp.appConnectors.getIamPolicy",
      "beyondcorp.appConnectors.list",
      "beyondcorp.appConnectors.reportStatus",
      "beyondcorp.appConnectors.setIamPolicy",
      "beyondcorp.appConnectors.update",
      "beyondcorp.appGateways.create",
      "beyondcorp.appGateways.delete",
      "beyondcorp.appGateways.get",
      "beyondcorp.appGateways.getIamPolicy",
      "beyondcorp.appGateways.list",
      "beyondcorp.appGateways.setIamPolicy",
      "beyondcorp.appGateways.update",
      "beyondcorp.clientConnectorServices.create",
      "beyondcorp.clientConnectorServices.delete",
      "beyondcorp.clientConnectorServices.get",
      "beyondcorp.clientConnectorServices.getIamPolicy",
      "beyondcorp.clientConnectorServices.list",
      "beyondcorp.clientConnectorServices.setIamPolicy",
      "beyondcorp.clientConnectorServices.update",
      "beyondcorp.clientGateways.create",
      "beyondcorp.clientGateways.delete",
      "beyondcorp.clientGateways.get",
      "beyondcorp.clientGateways.getIamPolicy",
      "beyondcorp.clientGateways.list",
      "beyondcorp.clientGateways.setIamPolicy",
      "beyondcorp.locations.get",
      "beyondcorp.locations.list",
      "beyondcorp.operations.cancel",
      "beyondcorp.operations.delete",
      "beyondcorp.operations.get",
      "beyondcorp.operations.list",
      "beyondcorp.subscriptions.create",
      "beyondcorp.subscriptions.get",
      "beyondcorp.subscriptions.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/beyondcorp.clientConnectorAdmin",
    "title": "Cloud BeyondCorp Client Connector Admin",
    "description": "Full access to all BeyondCorp Client Connector resources.",
    "includedPermissions": [
      "beyondcorp.clientConnectorServices.create",
      "beyondcorp.clientConnectorServices.delete",
      "beyondcorp.clientConnectorServices.get",
      "beyondcorp.clientConnectorServices.getIamPolicy",
      "beyondcorp.clientConnectorServices.list",
      "beyondcorp.clientConnectorServices.setIamPolicy",
      "beyondcorp.clientConnectorServices.update",
      "beyondcorp.clientGateways.create",
      "beyondcorp.clientGateways.delete",
      "beyondcorp.clientGateways.get",
      "beyondcorp.clientGateways.getIamPolicy",
      "beyondcorp.clientGateways.list",
      "beyondcorp.clientGateways.setIamPolicy",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/beyondcorp.clientConnectorServiceUser",
    "title": "Cloud BeyondCorp Client Connector Service User",
    "description": "Access Client Connector Service",
    "includedPermissions": [
      "beyondcorp.clientConnectorServices.access"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/beyondcorp.clientConnectorViewer",
    "title": "Cloud BeyondCorp Client Connector Viewer",
    "description": "Read-only access to all BeyondCorp Client Connector resources.",
    "includedPermissions": [
      "beyondcorp.clientConnectorServices.get",
      "beyondcorp.clientConnectorServices.getIamPolicy",
      "beyondcorp.clientConnectorServices.list",
      "beyondcorp.clientGateways.get",
      "beyondcorp.clientGateways.getIamPolicy",
      "beyondcorp.clientGateways.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/beyondcorp.subscriptionAdmin",
    "title": "Cloud BeyondCorp Subscription Admin",
    "description": "Full access to all BeyondCorp Subscription resources.",
    "includedPermissions": [
      "beyondcorp.subscriptions.create",
      "beyondcorp.subscriptions.get",
      "beyondcorp.subscriptions.list",
      "resourcemanager.organizations.get"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/beyondcorp.subscriptionViewer",
    "title": "Cloud BeyondCorp Subscription Viewer",
    "description": "Read-only access to all BeyondCorp Subscription resources.",
    "includedPermissions": [
      "beyondcorp.subscriptions.get",
      "beyondcorp.subscriptions.list",
      "resourcemanager.organizations.get"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/beyondcorp.viewer",
    "title": "Cloud BeyondCorp Viewer",
    "description": "Read-only access to all Cloud BeyondCorp resources.",
    "includedPermissions": [
      "beyondcorp.appConnections.get",
      "beyondcorp.appConnections.getIamPolicy",
      "beyondcorp.appConnections.list",
      "beyondcorp.appConnectors.get",
      "beyondcorp.appConnectors.getIamPolicy",
      "beyondcorp.appConnectors.list",
      "beyondcorp.appGateways.get",
      "beyondcorp.appGateways.getIamPolicy",
      "beyondcorp.appGateways.list",
      "beyondcorp.clientConnectorServices.get",
      "beyondcorp.clientConnectorServices.getIamPolicy",
      "beyondcorp.clientConnectorServices.list",
      "beyondcorp.clientGateways.get",
      "beyondcorp.clientGateways.getIamPolicy",
      "beyondcorp.clientGateways.list",
      "beyondcorp.locations.get",
      "beyondcorp.locations.list",
      "beyondcorp.operations.get",
      "beyondcorp.operations.list",
      "beyondcorp.subscriptions.get",
      "beyondcorp.subscriptions.list",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/biglake.admin",
    "title": "BigLake Admin",
    "description": "Provides full access to all BigLake resources.",
    "includedPermissions": [
      "biglake.catalogs.create",
      "biglake.catalogs.delete",
      "biglake.catalogs.get",
      "biglake.catalogs.list",
      "biglake.databases.create",
      "biglake.databases.delete",
      "biglake.databases.get",
      "biglake.databases.list",
      "biglake.databases.update",
      "biglake.locks.check",
      "biglake.locks.create",
      "biglake.locks.delete",
      "biglake.locks.list",
      "biglake.tables.create",
      "biglake.tables.delete",
      "biglake.tables.get",
      "biglake.tables.list",
      "biglake.tables.lock",
      "biglake.tables.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/biglake.viewer",
    "title": "BigLake Viewer",
    "description": "Provides read-only access to all BigLake resources.",
    "includedPermissions": [
      "biglake.catalogs.get",
      "biglake.catalogs.list",
      "biglake.databases.get",
      "biglake.databases.list",
      "biglake.locks.list",
      "biglake.tables.get",
      "biglake.tables.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigquery.admin",
    "title": "BigQuery Admin",
    "description": "Administer all BigQuery resources and data",
    "includedPermissions": [
      "bigquery.bireservations.get",
      "bigquery.bireservations.update",
      "bigquery.capacityCommitments.create",
      "bigquery.capacityCommitments.delete",
      "bigquery.capacityCommitments.get",
      "bigquery.capacityCommitments.list",
      "bigquery.capacityCommitments.update",
      "bigquery.config.get",
      "bigquery.config.update",
      "bigquery.connections.create",
      "bigquery.connections.delegate",
      "bigquery.connections.delete",
      "bigquery.connections.get",
      "bigquery.connections.getIamPolicy",
      "bigquery.connections.list",
      "bigquery.connections.setIamPolicy",
      "bigquery.connections.update",
      "bigquery.connections.updateTag",
      "bigquery.connections.use",
      "bigquery.dataPolicies.create",
      "bigquery.dataPolicies.delete",
      "bigquery.dataPolicies.get",
      "bigquery.dataPolicies.getIamPolicy",
      "bigquery.dataPolicies.list",
      "bigquery.dataPolicies.setIamPolicy",
      "bigquery.dataPolicies.update",
      "bigquery.datasets.create",
      "bigquery.datasets.createTagBinding",
      "bigquery.datasets.delete",
      "bigquery.datasets.deleteTagBinding",
      "bigquery.datasets.get",
      "bigquery.datasets.getIamPolicy",
      "bigquery.datasets.link",
      "bigquery.datasets.listEffectiveTags",
      "bigquery.datasets.listSharedDatasetUsage",
      "bigquery.datasets.listTagBindings",
      "bigquery.datasets.setIamPolicy",
      "bigquery.datasets.update",
      "bigquery.datasets.updateTag",
      "bigquery.jobs.create",
      "bigquery.jobs.delete",
      "bigquery.jobs.get",
      "bigquery.jobs.list",
      "bigquery.jobs.listAll",
      "bigquery.jobs.listExecutionMetadata",
      "bigquery.jobs.update",
      "bigquery.models.create",
      "bigquery.models.delete",
      "bigquery.models.export",
      "bigquery.models.getData",
      "bigquery.models.getMetadata",
      "bigquery.models.list",
      "bigquery.models.updateData",
      "bigquery.models.updateMetadata",
      "bigquery.models.updateTag",
      "bigquery.readsessions.create",
      "bigquery.readsessions.getData",
      "bigquery.readsessions.update",
      "bigquery.reservationAssignments.create",
      "bigquery.reservationAssignments.delete",
      "bigquery.reservationAssignments.list",
      "bigquery.reservationAssignments.search",
      "bigquery.reservations.create",
      "bigquery.reservations.delete",
      "bigquery.reservations.get",
      "bigquery.reservations.list",
      "bigquery.reservations.update",
      "bigquery.routines.create",
      "bigquery.routines.delete",
      "bigquery.routines.get",
      "bigquery.routines.list",
      "bigquery.routines.update",
      "bigquery.routines.updateTag",
      "bigquery.rowAccessPolicies.create",
      "bigquery.rowAccessPolicies.delete",
      "bigquery.rowAccessPolicies.getIamPolicy",
      "bigquery.rowAccessPolicies.list",
      "bigquery.rowAccessPolicies.overrideTimeTravelRestrictions",
      "bigquery.rowAccessPolicies.setIamPolicy",
      "bigquery.rowAccessPolicies.update",
      "bigquery.savedqueries.create",
      "bigquery.savedqueries.delete",
      "bigquery.savedqueries.get",
      "bigquery.savedqueries.list",
      "bigquery.savedqueries.update",
      "bigquery.tables.create",
      "bigquery.tables.createIndex",
      "bigquery.tables.createSnapshot",
      "bigquery.tables.delete",
      "bigquery.tables.deleteIndex",
      "bigquery.tables.deleteSnapshot",
      "bigquery.tables.export",
      "bigquery.tables.get",
      "bigquery.tables.getData",
      "bigquery.tables.getIamPolicy",
      "bigquery.tables.list",
      "bigquery.tables.replicateData",
      "bigquery.tables.restoreSnapshot",
      "bigquery.tables.setCategory",
      "bigquery.tables.setIamPolicy",
      "bigquery.tables.update",
      "bigquery.tables.updateData",
      "bigquery.tables.updateTag",
      "bigquery.transfers.get",
      "bigquery.transfers.update",
      "bigquerymigration.translation.translate",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigquery.connectionAdmin",
    "title": "BigQuery Connection Admin",
    "includedPermissions": [
      "bigquery.connections.create",
      "bigquery.connections.delegate",
      "bigquery.connections.delete",
      "bigquery.connections.get",
      "bigquery.connections.getIamPolicy",
      "bigquery.connections.list",
      "bigquery.connections.setIamPolicy",
      "bigquery.connections.update",
      "bigquery.connections.updateTag",
      "bigquery.connections.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigquery.connectionUser",
    "title": "BigQuery Connection User",
    "includedPermissions": [
      "bigquery.connections.get",
      "bigquery.connections.getIamPolicy",
      "bigquery.connections.list",
      "bigquery.connections.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigquery.dataEditor",
    "title": "BigQuery Data Editor",
    "description": "Access to edit all the contents of datasets",
    "includedPermissions": [
      "bigquery.config.get",
      "bigquery.datasets.create",
      "bigquery.datasets.get",
      "bigquery.datasets.getIamPolicy",
      "bigquery.datasets.updateTag",
      "bigquery.models.create",
      "bigquery.models.delete",
      "bigquery.models.export",
      "bigquery.models.getData",
      "bigquery.models.getMetadata",
      "bigquery.models.list",
      "bigquery.models.updateData",
      "bigquery.models.updateMetadata",
      "bigquery.models.updateTag",
      "bigquery.routines.create",
      "bigquery.routines.delete",
      "bigquery.routines.get",
      "bigquery.routines.list",
      "bigquery.routines.update",
      "bigquery.routines.updateTag",
      "bigquery.tables.create",
      "bigquery.tables.createIndex",
      "bigquery.tables.createSnapshot",
      "bigquery.tables.delete",
      "bigquery.tables.deleteIndex",
      "bigquery.tables.export",
      "bigquery.tables.get",
      "bigquery.tables.getData",
      "bigquery.tables.getIamPolicy",
      "bigquery.tables.list",
      "bigquery.tables.replicateData",
      "bigquery.tables.restoreSnapshot",
      "bigquery.tables.update",
      "bigquery.tables.updateData",
      "bigquery.tables.updateTag",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigquery.dataOwner",
    "title": "BigQuery Data Owner",
    "description": "Full access to datasets and all of their contents",
    "includedPermissions": [
      "bigquery.config.get",
      "bigquery.dataPolicies.create",
      "bigquery.dataPolicies.delete",
      "bigquery.dataPolicies.get",
      "bigquery.dataPolicies.getIamPolicy",
      "bigquery.dataPolicies.list",
      "bigquery.dataPolicies.setIamPolicy",
      "bigquery.dataPolicies.update",
      "bigquery.datasets.create",
      "bigquery.datasets.createTagBinding",
      "bigquery.datasets.delete",
      "bigquery.datasets.deleteTagBinding",
      "bigquery.datasets.get",
      "bigquery.datasets.getIamPolicy",
      "bigquery.datasets.link",
      "bigquery.datasets.listEffectiveTags",
      "bigquery.datasets.listSharedDatasetUsage",
      "bigquery.datasets.listTagBindings",
      "bigquery.datasets.setIamPolicy",
      "bigquery.datasets.update",
      "bigquery.datasets.updateTag",
      "bigquery.models.create",
      "bigquery.models.delete",
      "bigquery.models.export",
      "bigquery.models.getData",
      "bigquery.models.getMetadata",
      "bigquery.models.list",
      "bigquery.models.updateData",
      "bigquery.models.updateMetadata",
      "bigquery.models.updateTag",
      "bigquery.routines.create",
      "bigquery.routines.delete",
      "bigquery.routines.get",
      "bigquery.routines.list",
      "bigquery.routines.update",
      "bigquery.routines.updateTag",
      "bigquery.rowAccessPolicies.create",
      "bigquery.rowAccessPolicies.delete",
      "bigquery.rowAccessPolicies.getIamPolicy",
      "bigquery.rowAccessPolicies.list",
      "bigquery.rowAccessPolicies.setIamPolicy",
      "bigquery.rowAccessPolicies.update",
      "bigquery.tables.create",
      "bigquery.tables.createIndex",
      "bigquery.tables.createSnapshot",
      "bigquery.tables.delete",
      "bigquery.tables.deleteIndex",
      "bigquery.tables.deleteSnapshot",
      "bigquery.tables.export",
      "bigquery.tables.get",
      "bigquery.tables.getData",
      "bigquery.tables.getIamPolicy",
      "bigquery.tables.list",
      "bigquery.tables.replicateData",
      "bigquery.tables.restoreSnapshot",
      "bigquery.tables.setCategory",
      "bigquery.tables.setIamPolicy",
      "bigquery.tables.update",
      "bigquery.tables.updateData",
      "bigquery.tables.updateTag",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigquery.dataViewer",
    "title": "BigQuery Data Viewer",
    "description": "Access to view datasets and all of their contents",
    "includedPermissions": [
      "bigquery.datasets.get",
      "bigquery.datasets.getIamPolicy",
      "bigquery.models.export",
      "bigquery.models.getData",
      "bigquery.models.getMetadata",
      "bigquery.models.list",
      "bigquery.routines.get",
      "bigquery.routines.list",
      "bigquery.tables.createSnapshot",
      "bigquery.tables.export",
      "bigquery.tables.get",
      "bigquery.tables.getData",
      "bigquery.tables.getIamPolicy",
      "bigquery.tables.list",
      "bigquery.tables.replicateData",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigquery.filteredDataViewer",
    "title": "BigQuery Filtered Data Viewer",
    "description": "Access to view filtered table data defined by a row access policy",
    "includedPermissions": [
      "bigquery.rowAccessPolicies.getFilteredData"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigquery.jobUser",
    "title": "BigQuery Job User",
    "description": "Access to run jobs",
    "includedPermissions": [
      "bigquery.config.get",
      "bigquery.jobs.create",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigquery.metadataViewer",
    "title": "BigQuery Metadata Viewer",
    "description": "Access to view table and dataset metadata",
    "includedPermissions": [
      "bigquery.datasets.get",
      "bigquery.datasets.getIamPolicy",
      "bigquery.models.getMetadata",
      "bigquery.models.list",
      "bigquery.routines.get",
      "bigquery.routines.list",
      "bigquery.tables.get",
      "bigquery.tables.getIamPolicy",
      "bigquery.tables.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigquery.readSessionUser",
    "title": "BigQuery Read Session User",
    "description": "Access to create and use read sessions",
    "includedPermissions": [
      "bigquery.readsessions.create",
      "bigquery.readsessions.getData",
      "bigquery.readsessions.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigquery.resourceAdmin",
    "title": "BigQuery Resource Admin",
    "description": "Administer all BigQuery resources.",
    "includedPermissions": [
      "bigquery.bireservations.get",
      "bigquery.bireservations.update",
      "bigquery.capacityCommitments.create",
      "bigquery.capacityCommitments.delete",
      "bigquery.capacityCommitments.get",
      "bigquery.capacityCommitments.list",
      "bigquery.capacityCommitments.update",
      "bigquery.jobs.get",
      "bigquery.jobs.list",
      "bigquery.jobs.listAll",
      "bigquery.jobs.listExecutionMetadata",
      "bigquery.reservationAssignments.create",
      "bigquery.reservationAssignments.delete",
      "bigquery.reservationAssignments.list",
      "bigquery.reservationAssignments.search",
      "bigquery.reservations.create",
      "bigquery.reservations.delete",
      "bigquery.reservations.get",
      "bigquery.reservations.list",
      "bigquery.reservations.update",
      "recommender.bigqueryCapacityCommitmentsInsights.get",
      "recommender.bigqueryCapacityCommitmentsInsights.list",
      "recommender.bigqueryCapacityCommitmentsInsights.update",
      "recommender.bigqueryCapacityCommitmentsRecommendations.get",
      "recommender.bigqueryCapacityCommitmentsRecommendations.list",
      "recommender.bigqueryCapacityCommitmentsRecommendations.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigquery.resourceEditor",
    "title": "BigQuery Resource Editor",
    "description": "Manage all BigQuery resources, but cannot make purchasing decisions.",
    "includedPermissions": [
      "bigquery.bireservations.get",
      "bigquery.capacityCommitments.get",
      "bigquery.capacityCommitments.list",
      "bigquery.jobs.get",
      "bigquery.jobs.list",
      "bigquery.jobs.listAll",
      "bigquery.jobs.listExecutionMetadata",
      "bigquery.reservationAssignments.create",
      "bigquery.reservationAssignments.delete",
      "bigquery.reservationAssignments.list",
      "bigquery.reservationAssignments.search",
      "bigquery.reservations.create",
      "bigquery.reservations.delete",
      "bigquery.reservations.get",
      "bigquery.reservations.list",
      "bigquery.reservations.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigquery.resourceViewer",
    "title": "BigQuery Resource Viewer",
    "description": "View all BigQuery resources but cannot make changes or purchasing decisions.",
    "includedPermissions": [
      "bigquery.bireservations.get",
      "bigquery.capacityCommitments.get",
      "bigquery.capacityCommitments.list",
      "bigquery.jobs.get",
      "bigquery.jobs.list",
      "bigquery.jobs.listAll",
      "bigquery.jobs.listExecutionMetadata",
      "bigquery.reservationAssignments.list",
      "bigquery.reservationAssignments.search",
      "bigquery.reservations.get",
      "bigquery.reservations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigquery.user",
    "title": "BigQuery User",
    "description": "When applied to a project, access to run queries, create datasets, read dataset metadata, and list tables. When applied to a dataset, access to read dataset metadata and list tables within the dataset.",
    "includedPermissions": [
      "bigquery.bireservations.get",
      "bigquery.capacityCommitments.get",
      "bigquery.capacityCommitments.list",
      "bigquery.config.get",
      "bigquery.datasets.create",
      "bigquery.datasets.get",
      "bigquery.datasets.getIamPolicy",
      "bigquery.jobs.create",
      "bigquery.jobs.list",
      "bigquery.models.list",
      "bigquery.readsessions.create",
      "bigquery.readsessions.getData",
      "bigquery.readsessions.update",
      "bigquery.reservationAssignments.list",
      "bigquery.reservationAssignments.search",
      "bigquery.reservations.get",
      "bigquery.reservations.list",
      "bigquery.routines.list",
      "bigquery.savedqueries.get",
      "bigquery.savedqueries.list",
      "bigquery.tables.list",
      "bigquery.transfers.get",
      "bigquerymigration.translation.translate",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigqueryconnection.serviceAgent",
    "title": "BigQuery Connection Service Agent",
    "description": "Gives BigQuery Connection Service access to Cloud SQL instances in user projects.",
    "includedPermissions": [
      "cloudsql.instances.connect",
      "cloudsql.instances.get",
      "logging.logEntries.create",
      "logging.logEntries.route",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.timeSeries.create"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigquerydatapolicy.maskedReader",
    "title": "Masked Reader",
    "description": "Masked read access to sub-resources tagged by the policy tag associated with a data policy, for example, BigQuery columns",
    "includedPermissions": [
      "bigquery.dataPolicies.maskedGet"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigquerydatatransfer.serviceAgent",
    "title": "BigQuery Data Transfer Service Agent",
    "description": "Gives BigQuery Data Transfer Service access to start bigquery jobs in consumer project. ",
    "includedPermissions": [
      "bigquery.config.get",
      "bigquery.jobs.create",
      "iam.serviceAccounts.getAccessToken",
      "logging.logEntries.create",
      "logging.logEntries.route",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigquerymigration.editor",
    "title": "MigrationWorkflow Editor",
    "description": "Editor of EDW migration workflows.",
    "includedPermissions": [
      "bigquerymigration.locations.get",
      "bigquerymigration.locations.list",
      "bigquerymigration.subtasks.get",
      "bigquerymigration.subtasks.list",
      "bigquerymigration.workflows.create",
      "bigquerymigration.workflows.delete",
      "bigquerymigration.workflows.get",
      "bigquerymigration.workflows.list",
      "bigquerymigration.workflows.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigquerymigration.orchestrator",
    "title": "Task Orchestrator",
    "description": "Orchestrator of EDW migration tasks.",
    "includedPermissions": [
      "bigquerymigration.subtasks.create",
      "bigquerymigration.taskTypes.orchestrateTask",
      "bigquerymigration.workflows.orchestrateTask",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigquerymigration.translationUser",
    "title": "Migration Translation User",
    "description": "User of EDW migration interactive SQL translation service.",
    "includedPermissions": [
      "bigquerymigration.translation.translate"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigquerymigration.viewer",
    "title": "MigrationWorkflow Viewer",
    "description": "Viewer of EDW migration MigrationWorkflow.",
    "includedPermissions": [
      "bigquerymigration.locations.get",
      "bigquerymigration.locations.list",
      "bigquerymigration.subtasks.get",
      "bigquerymigration.subtasks.list",
      "bigquerymigration.workflows.get",
      "bigquerymigration.workflows.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigquerymigration.worker",
    "title": "Task Worker",
    "description": "Worker that executes EDW migration subtasks.",
    "includedPermissions": [
      "bigquerymigration.subtaskTypes.executeTask",
      "bigquerymigration.subtasks.executeTask",
      "storage.objects.create",
      "storage.objects.get",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigqueryomni.serviceAgent",
    "title": "BigQuery Omni Service Agent",
    "description": "Gives BigQuery Omni access to tables in user projects.",
    "includedPermissions": [
      "bigquery.jobs.create",
      "bigquery.tables.updateData"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigtable.admin",
    "title": "Bigtable Administrator",
    "description": "Full access to all Bigtable resources and ability to assign Bigtable IAM roles.",
    "includedPermissions": [
      "bigtable.appProfiles.create",
      "bigtable.appProfiles.delete",
      "bigtable.appProfiles.get",
      "bigtable.appProfiles.list",
      "bigtable.appProfiles.update",
      "bigtable.backups.create",
      "bigtable.backups.delete",
      "bigtable.backups.get",
      "bigtable.backups.getIamPolicy",
      "bigtable.backups.list",
      "bigtable.backups.read",
      "bigtable.backups.restore",
      "bigtable.backups.setIamPolicy",
      "bigtable.backups.update",
      "bigtable.clusters.create",
      "bigtable.clusters.delete",
      "bigtable.clusters.get",
      "bigtable.clusters.list",
      "bigtable.clusters.update",
      "bigtable.hotTablets.list",
      "bigtable.instances.create",
      "bigtable.instances.createTagBinding",
      "bigtable.instances.delete",
      "bigtable.instances.deleteTagBinding",
      "bigtable.instances.get",
      "bigtable.instances.getIamPolicy",
      "bigtable.instances.list",
      "bigtable.instances.listEffectiveTags",
      "bigtable.instances.listTagBindings",
      "bigtable.instances.ping",
      "bigtable.instances.setIamPolicy",
      "bigtable.instances.update",
      "bigtable.keyvisualizer.get",
      "bigtable.keyvisualizer.list",
      "bigtable.locations.list",
      "bigtable.tables.checkConsistency",
      "bigtable.tables.create",
      "bigtable.tables.delete",
      "bigtable.tables.generateConsistencyToken",
      "bigtable.tables.get",
      "bigtable.tables.getIamPolicy",
      "bigtable.tables.list",
      "bigtable.tables.mutateRows",
      "bigtable.tables.readRows",
      "bigtable.tables.sampleRowKeys",
      "bigtable.tables.setIamPolicy",
      "bigtable.tables.undelete",
      "bigtable.tables.update",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.timeSeries.create",
      "monitoring.timeSeries.list",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigtable.reader",
    "title": "Bigtable Reader",
    "description": "Read access to data in existing tables; read access to metadata for instances, clusters, and tables, including column families.",
    "includedPermissions": [
      "bigtable.appProfiles.get",
      "bigtable.appProfiles.list",
      "bigtable.backups.get",
      "bigtable.backups.list",
      "bigtable.clusters.get",
      "bigtable.clusters.list",
      "bigtable.hotTablets.list",
      "bigtable.instances.get",
      "bigtable.instances.list",
      "bigtable.instances.ping",
      "bigtable.keyvisualizer.get",
      "bigtable.keyvisualizer.list",
      "bigtable.locations.list",
      "bigtable.tables.checkConsistency",
      "bigtable.tables.generateConsistencyToken",
      "bigtable.tables.get",
      "bigtable.tables.list",
      "bigtable.tables.readRows",
      "bigtable.tables.sampleRowKeys",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.timeSeries.create",
      "monitoring.timeSeries.list",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigtable.user",
    "title": "Bigtable User",
    "description": "Read and write access to data in existing tables; read access to metadata for instances, clusters, and tables, including column families.",
    "includedPermissions": [
      "bigtable.appProfiles.get",
      "bigtable.appProfiles.list",
      "bigtable.backups.get",
      "bigtable.backups.list",
      "bigtable.clusters.get",
      "bigtable.clusters.list",
      "bigtable.hotTablets.list",
      "bigtable.instances.get",
      "bigtable.instances.list",
      "bigtable.instances.ping",
      "bigtable.keyvisualizer.get",
      "bigtable.keyvisualizer.list",
      "bigtable.locations.list",
      "bigtable.tables.checkConsistency",
      "bigtable.tables.generateConsistencyToken",
      "bigtable.tables.get",
      "bigtable.tables.list",
      "bigtable.tables.mutateRows",
      "bigtable.tables.readRows",
      "bigtable.tables.sampleRowKeys",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.timeSeries.create",
      "monitoring.timeSeries.list",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/bigtable.viewer",
    "title": "Bigtable Viewer",
    "description": "Read access to metadata for instances, clusters, and tables, including column families.",
    "includedPermissions": [
      "bigtable.appProfiles.get",
      "bigtable.appProfiles.list",
      "bigtable.backups.get",
      "bigtable.backups.list",
      "bigtable.clusters.get",
      "bigtable.clusters.list",
      "bigtable.hotTablets.list",
      "bigtable.instances.get",
      "bigtable.instances.list",
      "bigtable.instances.listEffectiveTags",
      "bigtable.instances.listTagBindings",
      "bigtable.locations.list",
      "bigtable.tables.checkConsistency",
      "bigtable.tables.generateConsistencyToken",
      "bigtable.tables.get",
      "bigtable.tables.list",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.timeSeries.list",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/billing.admin",
    "title": "Billing Account Administrator",
    "description": "Authorized to see and manage all aspects of billing accounts.",
    "includedPermissions": [
      "billing.accounts.close",
      "billing.accounts.get",
      "billing.accounts.getCarbonInformation",
      "billing.accounts.getIamPolicy",
      "billing.accounts.getPaymentInfo",
      "billing.accounts.getPricing",
      "billing.accounts.getSpendingInformation",
      "billing.accounts.getUsageExportSpec",
      "billing.accounts.list",
      "billing.accounts.move",
      "billing.accounts.redeemPromotion",
      "billing.accounts.removeFromOrganization",
      "billing.accounts.reopen",
      "billing.accounts.setIamPolicy",
      "billing.accounts.update",
      "billing.accounts.updatePaymentInfo",
      "billing.accounts.updateUsageExportSpec",
      "billing.billingAccountPrice.get",
      "billing.billingAccountServices.get",
      "billing.billingAccountServices.list",
      "billing.billingAccountSkuGroupSkus.get",
      "billing.billingAccountSkuGroupSkus.list",
      "billing.billingAccountSkuGroups.get",
      "billing.billingAccountSkuGroups.list",
      "billing.billingAccountSkus.get",
      "billing.billingAccountSkus.list",
      "billing.budgets.create",
      "billing.budgets.delete",
      "billing.budgets.get",
      "billing.budgets.list",
      "billing.budgets.update",
      "billing.credits.list",
      "billing.finOpsBenchmarkInformation.get",
      "billing.finOpsHealthInformation.get",
      "billing.resourceAssociations.create",
      "billing.resourceAssociations.delete",
      "billing.resourceAssociations.list",
      "billing.subscriptions.create",
      "billing.subscriptions.get",
      "billing.subscriptions.list",
      "billing.subscriptions.update",
      "cloudasset.assets.searchAllResources",
      "cloudnotifications.activities.list",
      "cloudsupport.properties.get",
      "cloudsupport.techCases.create",
      "cloudsupport.techCases.escalate",
      "cloudsupport.techCases.get",
      "cloudsupport.techCases.list",
      "cloudsupport.techCases.update",
      "commerceoffercatalog.agreements.get",
      "commerceoffercatalog.agreements.list",
      "commerceoffercatalog.documents.get",
      "commerceoffercatalog.documents.list",
      "commerceoffercatalog.offers.get",
      "compute.commitments.create",
      "compute.commitments.get",
      "compute.commitments.list",
      "compute.commitments.update",
      "compute.commitments.updateReservations",
      "consumerprocurement.accounts.create",
      "consumerprocurement.accounts.delete",
      "consumerprocurement.accounts.get",
      "consumerprocurement.accounts.list",
      "consumerprocurement.consents.check",
      "consumerprocurement.consents.grant",
      "consumerprocurement.consents.list",
      "consumerprocurement.consents.revoke",
      "consumerprocurement.events.get",
      "consumerprocurement.events.list",
      "consumerprocurement.orderAttributions.get",
      "consumerprocurement.orderAttributions.list",
      "consumerprocurement.orderAttributions.update",
      "consumerprocurement.orders.cancel",
      "consumerprocurement.orders.get",
      "consumerprocurement.orders.list",
      "consumerprocurement.orders.modify",
      "consumerprocurement.orders.place",
      "dataprocessing.datasources.get",
      "dataprocessing.datasources.list",
      "dataprocessing.groupcontrols.get",
      "dataprocessing.groupcontrols.list",
      "logging.logEntries.list",
      "logging.logServiceIndexes.list",
      "logging.logServices.list",
      "logging.logs.list",
      "logging.privateLogEntries.list",
      "recommender.cloudsqlIdleInstanceRecommendations.get",
      "recommender.cloudsqlIdleInstanceRecommendations.list",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.get",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
      "recommender.commitmentUtilizationInsights.get",
      "recommender.commitmentUtilizationInsights.list",
      "recommender.commitmentUtilizationInsights.update",
      "recommender.computeAddressIdleResourceRecommendations.get",
      "recommender.computeAddressIdleResourceRecommendations.list",
      "recommender.computeDiskIdleResourceRecommendations.get",
      "recommender.computeDiskIdleResourceRecommendations.list",
      "recommender.computeImageIdleResourceRecommendations.get",
      "recommender.computeImageIdleResourceRecommendations.list",
      "recommender.computeInstanceGroupManagerMachineTypeRecommendations.get",
      "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list",
      "recommender.computeInstanceIdleResourceRecommendations.get",
      "recommender.computeInstanceIdleResourceRecommendations.list",
      "recommender.computeInstanceMachineTypeRecommendations.get",
      "recommender.computeInstanceMachineTypeRecommendations.list",
      "recommender.costInsights.get",
      "recommender.costInsights.list",
      "recommender.costInsights.update",
      "recommender.resourcemanagerProjectUtilizationRecommendations.get",
      "recommender.resourcemanagerProjectUtilizationRecommendations.list",
      "recommender.spendBasedCommitmentInsights.get",
      "recommender.spendBasedCommitmentInsights.list",
      "recommender.spendBasedCommitmentInsights.update",
      "recommender.spendBasedCommitmentRecommendations.get",
      "recommender.spendBasedCommitmentRecommendations.list",
      "recommender.spendBasedCommitmentRecommendations.update",
      "recommender.spendBasedCommitmentRecommenderConfig.get",
      "recommender.spendBasedCommitmentRecommenderConfig.update",
      "recommender.usageCommitmentRecommendations.get",
      "recommender.usageCommitmentRecommendations.list",
      "recommender.usageCommitmentRecommendations.update",
      "resourcemanager.projects.createBillingAssignment",
      "resourcemanager.projects.deleteBillingAssignment",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/billing.carbonViewer",
    "title": "Carbon Footprint Viewer",
    "includedPermissions": [
      "billing.accounts.get",
      "billing.accounts.getCarbonInformation",
      "billing.accounts.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/billing.costsManager",
    "title": "Billing Account Costs Manager",
    "description": "Can view and export cost information of billing accounts.",
    "includedPermissions": [
      "billing.accounts.get",
      "billing.accounts.getIamPolicy",
      "billing.accounts.getSpendingInformation",
      "billing.accounts.getUsageExportSpec",
      "billing.accounts.list",
      "billing.accounts.updateUsageExportSpec",
      "billing.budgets.create",
      "billing.budgets.delete",
      "billing.budgets.get",
      "billing.budgets.list",
      "billing.budgets.update",
      "billing.resourceAssociations.list",
      "recommender.costInsights.get",
      "recommender.costInsights.list",
      "recommender.costInsights.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/billing.creator",
    "title": "Billing Account Creator",
    "description": "Creator of billing accounts.",
    "includedPermissions": [
      "billing.accounts.create",
      "resourcemanager.organizations.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/billing.projectManager",
    "title": "Project Billing Manager",
    "description": "Can assign a project's billing account or disable its billing.",
    "includedPermissions": [
      "resourcemanager.projects.createBillingAssignment",
      "resourcemanager.projects.deleteBillingAssignment"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/billing.user",
    "title": "Billing Account User",
    "description": "Can associate projects with billing accounts",
    "includedPermissions": [
      "billing.accounts.get",
      "billing.accounts.getIamPolicy",
      "billing.accounts.list",
      "billing.accounts.redeemPromotion",
      "billing.credits.list",
      "billing.resourceAssociations.create"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/billing.viewer",
    "title": "Billing Account Viewer",
    "description": "Can view information about billing accounts.",
    "includedPermissions": [
      "billing.accounts.get",
      "billing.accounts.getCarbonInformation",
      "billing.accounts.getIamPolicy",
      "billing.accounts.getPaymentInfo",
      "billing.accounts.getPricing",
      "billing.accounts.getSpendingInformation",
      "billing.accounts.getUsageExportSpec",
      "billing.accounts.list",
      "billing.billingAccountPrice.get",
      "billing.billingAccountServices.get",
      "billing.billingAccountServices.list",
      "billing.billingAccountSkuGroupSkus.get",
      "billing.billingAccountSkuGroupSkus.list",
      "billing.billingAccountSkuGroups.get",
      "billing.billingAccountSkuGroups.list",
      "billing.billingAccountSkus.get",
      "billing.billingAccountSkus.list",
      "billing.budgets.get",
      "billing.budgets.list",
      "billing.credits.list",
      "billing.finOpsBenchmarkInformation.get",
      "billing.finOpsHealthInformation.get",
      "billing.resourceAssociations.list",
      "billing.subscriptions.get",
      "billing.subscriptions.list",
      "commerceoffercatalog.agreements.get",
      "commerceoffercatalog.agreements.list",
      "commerceoffercatalog.documents.get",
      "commerceoffercatalog.documents.list",
      "commerceoffercatalog.offers.get",
      "consumerprocurement.accounts.get",
      "consumerprocurement.accounts.list",
      "consumerprocurement.consents.check",
      "consumerprocurement.consents.list",
      "consumerprocurement.orderAttributions.get",
      "consumerprocurement.orderAttributions.list",
      "consumerprocurement.orders.get",
      "consumerprocurement.orders.list",
      "dataprocessing.datasources.get",
      "dataprocessing.datasources.list",
      "dataprocessing.groupcontrols.get",
      "dataprocessing.groupcontrols.list",
      "recommender.commitmentUtilizationInsights.get",
      "recommender.commitmentUtilizationInsights.list",
      "recommender.costInsights.get",
      "recommender.costInsights.list",
      "recommender.spendBasedCommitmentInsights.get",
      "recommender.spendBasedCommitmentInsights.list",
      "recommender.spendBasedCommitmentRecommendations.get",
      "recommender.spendBasedCommitmentRecommendations.list",
      "recommender.spendBasedCommitmentRecommenderConfig.get",
      "recommender.usageCommitmentRecommendations.get",
      "recommender.usageCommitmentRecommendations.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/binaryauthorization.attestorsAdmin",
    "title": "Binary Authorization Attestor Admin",
    "description": "Adminstrator of Binary Authorization Attestors",
    "includedPermissions": [
      "binaryauthorization.attestors.create",
      "binaryauthorization.attestors.delete",
      "binaryauthorization.attestors.get",
      "binaryauthorization.attestors.getIamPolicy",
      "binaryauthorization.attestors.list",
      "binaryauthorization.attestors.setIamPolicy",
      "binaryauthorization.attestors.update",
      "binaryauthorization.attestors.verifyImageAttested",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/binaryauthorization.attestorsEditor",
    "title": "Binary Authorization Attestor Editor",
    "description": "Editor of Binary Authorization Attestors",
    "includedPermissions": [
      "binaryauthorization.attestors.create",
      "binaryauthorization.attestors.delete",
      "binaryauthorization.attestors.get",
      "binaryauthorization.attestors.list",
      "binaryauthorization.attestors.update",
      "binaryauthorization.attestors.verifyImageAttested",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/binaryauthorization.attestorsVerifier",
    "title": "Binary Authorization Attestor Image Verifier",
    "description": "Caller of Binary Authorization Attestors VerifyImageAttested",
    "includedPermissions": [
      "binaryauthorization.attestors.get",
      "binaryauthorization.attestors.list",
      "binaryauthorization.attestors.verifyImageAttested",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/binaryauthorization.attestorsViewer",
    "title": "Binary Authorization Attestor Viewer",
    "description": "Viewer of Binary Authorization Attestors",
    "includedPermissions": [
      "binaryauthorization.attestors.get",
      "binaryauthorization.attestors.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/binaryauthorization.policyAdmin",
    "title": "Binary Authorization Policy Administrator",
    "description": "Administrator of Binary Authorization Policy",
    "includedPermissions": [
      "binaryauthorization.continuousValidationConfig.get",
      "binaryauthorization.continuousValidationConfig.getIamPolicy",
      "binaryauthorization.continuousValidationConfig.setIamPolicy",
      "binaryauthorization.continuousValidationConfig.update",
      "binaryauthorization.platformPolicies.create",
      "binaryauthorization.platformPolicies.delete",
      "binaryauthorization.platformPolicies.evaluatePolicy",
      "binaryauthorization.platformPolicies.get",
      "binaryauthorization.platformPolicies.list",
      "binaryauthorization.platformPolicies.replace",
      "binaryauthorization.policy.evaluatePolicy",
      "binaryauthorization.policy.get",
      "binaryauthorization.policy.getIamPolicy",
      "binaryauthorization.policy.setIamPolicy",
      "binaryauthorization.policy.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/binaryauthorization.policyEditor",
    "title": "Binary Authorization Policy Editor",
    "description": "Editor of Binary Authorization Policy",
    "includedPermissions": [
      "binaryauthorization.continuousValidationConfig.get",
      "binaryauthorization.continuousValidationConfig.update",
      "binaryauthorization.platformPolicies.create",
      "binaryauthorization.platformPolicies.delete",
      "binaryauthorization.platformPolicies.evaluatePolicy",
      "binaryauthorization.platformPolicies.get",
      "binaryauthorization.platformPolicies.list",
      "binaryauthorization.platformPolicies.replace",
      "binaryauthorization.policy.evaluatePolicy",
      "binaryauthorization.policy.get",
      "binaryauthorization.policy.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/binaryauthorization.policyEvaluator",
    "title": "Binary Authorization Policy Evaluator",
    "description": "Evaluator of Binary Authorization Policy",
    "includedPermissions": [
      "binaryauthorization.platformPolicies.evaluatePolicy",
      "binaryauthorization.platformPolicies.get",
      "binaryauthorization.platformPolicies.list",
      "binaryauthorization.policy.evaluatePolicy",
      "binaryauthorization.policy.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/binaryauthorization.policyViewer",
    "title": "Binary Authorization Policy Viewer",
    "description": "Viewer of Binary Authorization Policy",
    "includedPermissions": [
      "binaryauthorization.continuousValidationConfig.get",
      "binaryauthorization.platformPolicies.get",
      "binaryauthorization.platformPolicies.list",
      "binaryauthorization.policy.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/binaryauthorization.serviceAgent",
    "title": "Binary Authorization Service Agent",
    "description": "Can read Notes and Occurrences from the Container Analysis Service to find and verify signatures.",
    "includedPermissions": [
      "artifactregistry.repositories.downloadArtifacts",
      "binaryauthorization.attestors.get",
      "binaryauthorization.attestors.list",
      "binaryauthorization.attestors.verifyImageAttested",
      "binaryauthorization.platformPolicies.evaluatePolicy",
      "binaryauthorization.policy.evaluatePolicy",
      "cloudasset.assets.exportResource",
      "cloudasset.feeds.create",
      "cloudasset.feeds.delete",
      "cloudasset.feeds.get",
      "cloudasset.feeds.update",
      "containeranalysis.notes.get",
      "containeranalysis.notes.list",
      "containeranalysis.notes.listOccurrences",
      "containeranalysis.occurrences.get",
      "containeranalysis.occurrences.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/blockchainnodeengine.admin",
    "title": "Blockchain Node Engine Admin",
    "description": "Full access to Blockchain Node Engine resources.",
    "includedPermissions": [
      "blockchainnodeengine.blockchainNodes.create",
      "blockchainnodeengine.blockchainNodes.delete",
      "blockchainnodeengine.blockchainNodes.get",
      "blockchainnodeengine.blockchainNodes.list",
      "blockchainnodeengine.blockchainNodes.update",
      "blockchainnodeengine.locations.get",
      "blockchainnodeengine.locations.list",
      "blockchainnodeengine.operations.cancel",
      "blockchainnodeengine.operations.delete",
      "blockchainnodeengine.operations.get",
      "blockchainnodeengine.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/blockchainnodeengine.viewer",
    "title": "Blockchain Node Engine Viewer",
    "description": "Readonly access to Blockchain Node Engine resources.",
    "includedPermissions": [
      "blockchainnodeengine.blockchainNodes.get",
      "blockchainnodeengine.blockchainNodes.list",
      "blockchainnodeengine.locations.get",
      "blockchainnodeengine.locations.list",
      "blockchainnodeengine.operations.get",
      "blockchainnodeengine.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/browser",
    "title": "Browser",
    "description": "Access to browse GCP resources.",
    "includedPermissions": [
      "resourcemanager.folders.get",
      "resourcemanager.folders.list",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/carestudio.viewer",
    "title": "Care Studio Patients Viewer",
    "description": "This role can view all properties of Patients.",
    "includedPermissions": [
      "carestudio.patients.get",
      "carestudio.patients.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/certificatemanager.editor",
    "title": "Certificate Manager Editor",
    "description": "Edit access to Certificate Manager all resources.",
    "includedPermissions": [
      "certificatemanager.certissuanceconfigs.create",
      "certificatemanager.certissuanceconfigs.get",
      "certificatemanager.certissuanceconfigs.list",
      "certificatemanager.certissuanceconfigs.update",
      "certificatemanager.certissuanceconfigs.use",
      "certificatemanager.certmapentries.create",
      "certificatemanager.certmapentries.get",
      "certificatemanager.certmapentries.getIamPolicy",
      "certificatemanager.certmapentries.list",
      "certificatemanager.certmapentries.update",
      "certificatemanager.certmaps.create",
      "certificatemanager.certmaps.get",
      "certificatemanager.certmaps.getIamPolicy",
      "certificatemanager.certmaps.list",
      "certificatemanager.certmaps.update",
      "certificatemanager.certmaps.use",
      "certificatemanager.certs.create",
      "certificatemanager.certs.get",
      "certificatemanager.certs.getIamPolicy",
      "certificatemanager.certs.list",
      "certificatemanager.certs.update",
      "certificatemanager.certs.use",
      "certificatemanager.dnsauthorizations.create",
      "certificatemanager.dnsauthorizations.get",
      "certificatemanager.dnsauthorizations.getIamPolicy",
      "certificatemanager.dnsauthorizations.list",
      "certificatemanager.dnsauthorizations.update",
      "certificatemanager.dnsauthorizations.use",
      "certificatemanager.locations.get",
      "certificatemanager.locations.list",
      "certificatemanager.operations.get",
      "certificatemanager.operations.list",
      "certificatemanager.trustconfigs.create",
      "certificatemanager.trustconfigs.get",
      "certificatemanager.trustconfigs.list",
      "certificatemanager.trustconfigs.update",
      "certificatemanager.trustconfigs.use",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/certificatemanager.owner",
    "title": "Certificate Manager Owner",
    "description": "Full access to Certificate Manager all resources.",
    "includedPermissions": [
      "certificatemanager.certissuanceconfigs.create",
      "certificatemanager.certissuanceconfigs.delete",
      "certificatemanager.certissuanceconfigs.get",
      "certificatemanager.certissuanceconfigs.list",
      "certificatemanager.certissuanceconfigs.update",
      "certificatemanager.certissuanceconfigs.use",
      "certificatemanager.certmapentries.create",
      "certificatemanager.certmapentries.delete",
      "certificatemanager.certmapentries.get",
      "certificatemanager.certmapentries.getIamPolicy",
      "certificatemanager.certmapentries.list",
      "certificatemanager.certmapentries.setIamPolicy",
      "certificatemanager.certmapentries.update",
      "certificatemanager.certmaps.create",
      "certificatemanager.certmaps.delete",
      "certificatemanager.certmaps.get",
      "certificatemanager.certmaps.getIamPolicy",
      "certificatemanager.certmaps.list",
      "certificatemanager.certmaps.setIamPolicy",
      "certificatemanager.certmaps.update",
      "certificatemanager.certmaps.use",
      "certificatemanager.certs.create",
      "certificatemanager.certs.delete",
      "certificatemanager.certs.get",
      "certificatemanager.certs.getIamPolicy",
      "certificatemanager.certs.list",
      "certificatemanager.certs.setIamPolicy",
      "certificatemanager.certs.update",
      "certificatemanager.certs.use",
      "certificatemanager.dnsauthorizations.create",
      "certificatemanager.dnsauthorizations.delete",
      "certificatemanager.dnsauthorizations.get",
      "certificatemanager.dnsauthorizations.getIamPolicy",
      "certificatemanager.dnsauthorizations.list",
      "certificatemanager.dnsauthorizations.setIamPolicy",
      "certificatemanager.dnsauthorizations.update",
      "certificatemanager.dnsauthorizations.use",
      "certificatemanager.locations.get",
      "certificatemanager.locations.list",
      "certificatemanager.operations.cancel",
      "certificatemanager.operations.delete",
      "certificatemanager.operations.get",
      "certificatemanager.operations.list",
      "certificatemanager.trustconfigs.create",
      "certificatemanager.trustconfigs.delete",
      "certificatemanager.trustconfigs.get",
      "certificatemanager.trustconfigs.list",
      "certificatemanager.trustconfigs.update",
      "certificatemanager.trustconfigs.use",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/certificatemanager.serviceAgent",
    "title": "Certificate Manager Service Agent",
    "description": "Grants Certificate Manager access to services and APIs in the user project.",
    "includedPermissions": [
      "certificatemanager.locations.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/certificatemanager.viewer",
    "title": "Certificate Manager Viewer",
    "description": "Read-only access to Certificate Manager all resources.",
    "includedPermissions": [
      "certificatemanager.certissuanceconfigs.get",
      "certificatemanager.certissuanceconfigs.list",
      "certificatemanager.certmapentries.get",
      "certificatemanager.certmapentries.getIamPolicy",
      "certificatemanager.certmapentries.list",
      "certificatemanager.certmaps.get",
      "certificatemanager.certmaps.getIamPolicy",
      "certificatemanager.certmaps.list",
      "certificatemanager.certs.get",
      "certificatemanager.certs.getIamPolicy",
      "certificatemanager.certs.list",
      "certificatemanager.dnsauthorizations.get",
      "certificatemanager.dnsauthorizations.getIamPolicy",
      "certificatemanager.dnsauthorizations.list",
      "certificatemanager.locations.get",
      "certificatemanager.locations.list",
      "certificatemanager.operations.get",
      "certificatemanager.operations.list",
      "certificatemanager.trustconfigs.get",
      "certificatemanager.trustconfigs.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/chat.owner",
    "title": "Chat Bots Owner",
    "description": "Can view and modify bot configurations",
    "includedPermissions": [
      "chat.bots.get",
      "chat.bots.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/chat.reader",
    "title": "Chat Bots Viewer",
    "description": "Can view bot configurations",
    "includedPermissions": [
      "chat.bots.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/chronicle.admin",
    "title": "Chronicle API Admin",
    "description": "Full access to the Chronicle API services, including global settings.",
    "includedPermissions": [
      "chronicle.collectors.create",
      "chronicle.collectors.delete",
      "chronicle.collectors.get",
      "chronicle.collectors.list",
      "chronicle.collectors.update",
      "chronicle.curatedRuleSetCategories.countAllCuratedRuleSetDetections",
      "chronicle.curatedRuleSetCategories.get",
      "chronicle.curatedRuleSetCategories.list",
      "chronicle.curatedRuleSetDeployments.batchUpdate",
      "chronicle.curatedRuleSetDeployments.get",
      "chronicle.curatedRuleSetDeployments.list",
      "chronicle.curatedRuleSetDeployments.update",
      "chronicle.curatedRuleSets.countCuratedRuleSetDetections",
      "chronicle.curatedRuleSets.get",
      "chronicle.curatedRuleSets.list",
      "chronicle.curatedRules.get",
      "chronicle.curatedRules.list",
      "chronicle.dashboards.copy",
      "chronicle.dashboards.create",
      "chronicle.dashboards.delete",
      "chronicle.dashboards.edit",
      "chronicle.dashboards.get",
      "chronicle.dashboards.list",
      "chronicle.dashboards.schedule",
      "chronicle.extensionValidationReports.get",
      "chronicle.extensionValidationReports.list",
      "chronicle.feedSourceTypeSchemas.list",
      "chronicle.feeds.create",
      "chronicle.feeds.delete",
      "chronicle.feeds.disable",
      "chronicle.feeds.enable",
      "chronicle.feeds.get",
      "chronicle.feeds.list",
      "chronicle.feeds.update",
      "chronicle.forwarders.create",
      "chronicle.forwarders.delete",
      "chronicle.forwarders.generate",
      "chronicle.forwarders.get",
      "chronicle.forwarders.list",
      "chronicle.forwarders.update",
      "chronicle.instances.get",
      "chronicle.instances.report",
      "chronicle.legacies.legacyGetCuratedRulesTrends",
      "chronicle.legacies.legacyGetRuleCounts",
      "chronicle.legacies.legacyGetRulesTrends",
      "chronicle.legacies.legacyUpdateFinding",
      "chronicle.logTypeSchemas.list",
      "chronicle.multitenantDirectories.get",
      "chronicle.operations.cancel",
      "chronicle.operations.delete",
      "chronicle.operations.get",
      "chronicle.operations.list",
      "chronicle.operations.wait",
      "chronicle.parserExtensions.activate",
      "chronicle.parserExtensions.create",
      "chronicle.parserExtensions.delete",
      "chronicle.parserExtensions.generateKeyValueMappings",
      "chronicle.parserExtensions.get",
      "chronicle.parserExtensions.legacySubmitParserExtension",
      "chronicle.parserExtensions.list",
      "chronicle.parserExtensions.removeSyslog",
      "chronicle.parsers.activate",
      "chronicle.parsers.activateReleaseCandidate",
      "chronicle.parsers.copyPrebuiltParser",
      "chronicle.parsers.create",
      "chronicle.parsers.deactivate",
      "chronicle.parsers.delete",
      "chronicle.parsers.get",
      "chronicle.parsers.list",
      "chronicle.parsers.runParser",
      "chronicle.parsingErrors.list",
      "chronicle.referenceLists.create",
      "chronicle.referenceLists.get",
      "chronicle.referenceLists.list",
      "chronicle.referenceLists.update",
      "chronicle.referenceLists.verifyReferenceList",
      "chronicle.retrohunts.create",
      "chronicle.retrohunts.get",
      "chronicle.retrohunts.list",
      "chronicle.ruleDeployments.get",
      "chronicle.ruleDeployments.list",
      "chronicle.ruleDeployments.update",
      "chronicle.ruleExecutionErrors.list",
      "chronicle.rules.create",
      "chronicle.rules.get",
      "chronicle.rules.list",
      "chronicle.rules.listRevisions",
      "chronicle.rules.update",
      "chronicle.rules.verifyRuleText",
      "chronicle.validationErrors.list",
      "chronicle.validationReports.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/chronicle.editor",
    "title": "Chronicle API Editor",
    "description": "Modify Access to Chronicle API resources.",
    "includedPermissions": [
      "chronicle.collectors.get",
      "chronicle.collectors.list",
      "chronicle.curatedRuleSetCategories.countAllCuratedRuleSetDetections",
      "chronicle.curatedRuleSetCategories.get",
      "chronicle.curatedRuleSetCategories.list",
      "chronicle.curatedRuleSetDeployments.batchUpdate",
      "chronicle.curatedRuleSetDeployments.get",
      "chronicle.curatedRuleSetDeployments.list",
      "chronicle.curatedRuleSetDeployments.update",
      "chronicle.curatedRuleSets.countCuratedRuleSetDetections",
      "chronicle.curatedRuleSets.get",
      "chronicle.curatedRuleSets.list",
      "chronicle.curatedRules.get",
      "chronicle.curatedRules.list",
      "chronicle.dashboards.copy",
      "chronicle.dashboards.create",
      "chronicle.dashboards.delete",
      "chronicle.dashboards.edit",
      "chronicle.dashboards.get",
      "chronicle.dashboards.list",
      "chronicle.dashboards.schedule",
      "chronicle.forwarders.generate",
      "chronicle.forwarders.get",
      "chronicle.forwarders.list",
      "chronicle.instances.get",
      "chronicle.instances.report",
      "chronicle.legacies.legacyGetCuratedRulesTrends",
      "chronicle.legacies.legacyGetRuleCounts",
      "chronicle.legacies.legacyGetRulesTrends",
      "chronicle.legacies.legacyUpdateFinding",
      "chronicle.logTypeSchemas.list",
      "chronicle.multitenantDirectories.get",
      "chronicle.operations.cancel",
      "chronicle.operations.delete",
      "chronicle.operations.get",
      "chronicle.operations.list",
      "chronicle.operations.wait",
      "chronicle.referenceLists.create",
      "chronicle.referenceLists.get",
      "chronicle.referenceLists.list",
      "chronicle.referenceLists.update",
      "chronicle.referenceLists.verifyReferenceList",
      "chronicle.retrohunts.create",
      "chronicle.retrohunts.get",
      "chronicle.retrohunts.list",
      "chronicle.ruleDeployments.get",
      "chronicle.ruleDeployments.list",
      "chronicle.ruleDeployments.update",
      "chronicle.ruleExecutionErrors.list",
      "chronicle.rules.create",
      "chronicle.rules.get",
      "chronicle.rules.list",
      "chronicle.rules.listRevisions",
      "chronicle.rules.update",
      "chronicle.rules.verifyRuleText",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/chronicle.limitedViewer",
    "title": "Chronicle API Limited Viewer",
    "description": "Grants readonly access to Chronicle API resources, excluding Rules and Retrohunts.",
    "includedPermissions": [
      "chronicle.dashboards.get",
      "chronicle.dashboards.list",
      "chronicle.instances.get",
      "chronicle.multitenantDirectories.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/chronicle.serviceAgent",
    "title": "Chronicle Service Agent",
    "description": "Grants Chronicle scoped access to customer project",
    "includedPermissions": [
      "chronicle.instances.get",
      "monitoring.alertPolicies.create",
      "monitoring.alertPolicies.delete",
      "monitoring.alertPolicies.get",
      "monitoring.alertPolicies.list",
      "monitoring.alertPolicies.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/chronicle.viewer",
    "title": "Chronicle API Viewer",
    "description": "Readonly access to the Chronicle API resources.",
    "includedPermissions": [
      "chronicle.collectors.get",
      "chronicle.collectors.list",
      "chronicle.curatedRuleSetCategories.countAllCuratedRuleSetDetections",
      "chronicle.curatedRuleSetCategories.get",
      "chronicle.curatedRuleSetCategories.list",
      "chronicle.curatedRuleSetDeployments.get",
      "chronicle.curatedRuleSetDeployments.list",
      "chronicle.curatedRuleSets.countCuratedRuleSetDetections",
      "chronicle.curatedRuleSets.get",
      "chronicle.curatedRuleSets.list",
      "chronicle.curatedRules.get",
      "chronicle.curatedRules.list",
      "chronicle.dashboards.get",
      "chronicle.dashboards.list",
      "chronicle.dashboards.schedule",
      "chronicle.forwarders.generate",
      "chronicle.forwarders.get",
      "chronicle.forwarders.list",
      "chronicle.instances.get",
      "chronicle.instances.report",
      "chronicle.legacies.legacyGetCuratedRulesTrends",
      "chronicle.legacies.legacyGetRuleCounts",
      "chronicle.legacies.legacyGetRulesTrends",
      "chronicle.logTypeSchemas.list",
      "chronicle.multitenantDirectories.get",
      "chronicle.operations.get",
      "chronicle.operations.list",
      "chronicle.operations.wait",
      "chronicle.referenceLists.get",
      "chronicle.referenceLists.list",
      "chronicle.referenceLists.verifyReferenceList",
      "chronicle.retrohunts.get",
      "chronicle.retrohunts.list",
      "chronicle.ruleDeployments.get",
      "chronicle.ruleDeployments.list",
      "chronicle.ruleExecutionErrors.list",
      "chronicle.rules.get",
      "chronicle.rules.list",
      "chronicle.rules.listRevisions",
      "chronicle.rules.verifyRuleText",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/chroniclesm.admin",
    "title": "Chronicle Service Admin",
    "description": "Admins can view and modify Chronicle service details.",
    "includedPermissions": [
      "chroniclesm.gcpAssociations.create",
      "chroniclesm.gcpAssociations.delete",
      "chroniclesm.gcpAssociations.get",
      "chroniclesm.gcpSettings.get",
      "chroniclesm.gcpSettings.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/chroniclesm.viewer",
    "title": "Chronicle Service Viewer",
    "description": "Viewers can see Chronicle service details but not change them.",
    "includedPermissions": [
      "chroniclesm.gcpAssociations.get",
      "chroniclesm.gcpSettings.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloud.locationReader",
    "title": "Location reader",
    "description": "Read and enumerate locations available for resource creation.",
    "includedPermissions": [
      "cloud.locations.get",
      "cloud.locations.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudasset.effectivePolicyServiceAgent",
    "title": "Effective Policies Service Agent",
    "description": "Give effective policy service account access to search all resources and IAM policies.",
    "includedPermissions": [
      "cloudasset.assets.searchAllIamPolicies",
      "cloudasset.assets.searchAllResources"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudasset.owner",
    "title": "Cloud Asset Owner",
    "description": "Full access to cloud assets metadata",
    "includedPermissions": [
      "cloudasset.assets.analyzeIamPolicy",
      "cloudasset.assets.analyzeMove",
      "cloudasset.assets.analyzeOrgPolicy",
      "cloudasset.assets.exportAccessLevel",
      "cloudasset.assets.exportAccessPolicy",
      "cloudasset.assets.exportAiplatformBatchPredictionJobs",
      "cloudasset.assets.exportAiplatformCustomJobs",
      "cloudasset.assets.exportAiplatformDataLabelingJobs",
      "cloudasset.assets.exportAiplatformDatasets",
      "cloudasset.assets.exportAiplatformEndpoints",
      "cloudasset.assets.exportAiplatformHyperparameterTuningJobs",
      "cloudasset.assets.exportAiplatformMetadataStores",
      "cloudasset.assets.exportAiplatformModelDeploymentMonitoringJobs",
      "cloudasset.assets.exportAiplatformModels",
      "cloudasset.assets.exportAiplatformPipelineJobs",
      "cloudasset.assets.exportAiplatformSpecialistPools",
      "cloudasset.assets.exportAiplatformTrainingPipelines",
      "cloudasset.assets.exportAllAccessPolicy",
      "cloudasset.assets.exportAnthosConnectedCluster",
      "cloudasset.assets.exportAnthosedgeCluster",
      "cloudasset.assets.exportApigatewayApi",
      "cloudasset.assets.exportApigatewayApiConfig",
      "cloudasset.assets.exportApigatewayGateway",
      "cloudasset.assets.exportApikeysKeys",
      "cloudasset.assets.exportAppengineApplications",
      "cloudasset.assets.exportAppengineServices",
      "cloudasset.assets.exportAppengineVersions",
      "cloudasset.assets.exportArtifactregistryDockerImages",
      "cloudasset.assets.exportArtifactregistryRepositories",
      "cloudasset.assets.exportAssuredWorkloadsWorkloads",
      "cloudasset.assets.exportBeyondCorpApiGateways",
      "cloudasset.assets.exportBeyondCorpAppConnections",
      "cloudasset.assets.exportBeyondCorpAppConnectors",
      "cloudasset.assets.exportBeyondCorpAppGateways",
      "cloudasset.assets.exportBeyondCorpClientConnectorServices",
      "cloudasset.assets.exportBeyondCorpClientGateways",
      "cloudasset.assets.exportBigqueryDatasets",
      "cloudasset.assets.exportBigqueryModels",
      "cloudasset.assets.exportBigqueryTables",
      "cloudasset.assets.exportBigtableAppProfile",
      "cloudasset.assets.exportBigtableBackup",
      "cloudasset.assets.exportBigtableCluster",
      "cloudasset.assets.exportBigtableInstance",
      "cloudasset.assets.exportBigtableTable",
      "cloudasset.assets.exportCloudAssetFeeds",
      "cloudasset.assets.exportCloudDeployDeliveryPipelines",
      "cloudasset.assets.exportCloudDeployReleases",
      "cloudasset.assets.exportCloudDeployRollouts",
      "cloudasset.assets.exportCloudDeployTargets",
      "cloudasset.assets.exportCloudDocumentAIEvaluation",
      "cloudasset.assets.exportCloudDocumentAIHumanReviewConfig",
      "cloudasset.assets.exportCloudDocumentAILabelerPool",
      "cloudasset.assets.exportCloudDocumentAIProcessor",
      "cloudasset.assets.exportCloudDocumentAIProcessorVersion",
      "cloudasset.assets.exportCloudbillingBillingAccounts",
      "cloudasset.assets.exportCloudbillingProjectBillingInfos",
      "cloudasset.assets.exportCloudfunctionsFunctions",
      "cloudasset.assets.exportCloudfunctionsGen2Functions",
      "cloudasset.assets.exportCloudkmsCryptoKeyVersions",
      "cloudasset.assets.exportCloudkmsCryptoKeys",
      "cloudasset.assets.exportCloudkmsEkmConnections",
      "cloudasset.assets.exportCloudkmsImportJobs",
      "cloudasset.assets.exportCloudkmsKeyRings",
      "cloudasset.assets.exportCloudmemcacheInstances",
      "cloudasset.assets.exportCloudresourcemanagerFolders",
      "cloudasset.assets.exportCloudresourcemanagerOrganizations",
      "cloudasset.assets.exportCloudresourcemanagerProjects",
      "cloudasset.assets.exportCloudresourcemanagerTagBindings",
      "cloudasset.assets.exportCloudresourcemanagerTagKeys",
      "cloudasset.assets.exportCloudresourcemanagerTagValues",
      "cloudasset.assets.exportComposerEnvironments",
      "cloudasset.assets.exportComputeAddress",
      "cloudasset.assets.exportComputeAutoscalers",
      "cloudasset.assets.exportComputeBackendBuckets",
      "cloudasset.assets.exportComputeBackendServices",
      "cloudasset.assets.exportComputeCommitments",
      "cloudasset.assets.exportComputeDisks",
      "cloudasset.assets.exportComputeExternalVpnGateways",
      "cloudasset.assets.exportComputeFirewallPolicies",
      "cloudasset.assets.exportComputeFirewalls",
      "cloudasset.assets.exportComputeForwardingRules",
      "cloudasset.assets.exportComputeGlobalAddress",
      "cloudasset.assets.exportComputeGlobalForwardingRules",
      "cloudasset.assets.exportComputeHealthChecks",
      "cloudasset.assets.exportComputeHttpHealthChecks",
      "cloudasset.assets.exportComputeHttpsHealthChecks",
      "cloudasset.assets.exportComputeImages",
      "cloudasset.assets.exportComputeInstanceGroupManagers",
      "cloudasset.assets.exportComputeInstanceGroups",
      "cloudasset.assets.exportComputeInstanceTemplates",
      "cloudasset.assets.exportComputeInstances",
      "cloudasset.assets.exportComputeInterconnect",
      "cloudasset.assets.exportComputeInterconnectAttachment",
      "cloudasset.assets.exportComputeLicenses",
      "cloudasset.assets.exportComputeNetworkEndpointGroups",
      "cloudasset.assets.exportComputeNetworks",
      "cloudasset.assets.exportComputeNodeGroups",
      "cloudasset.assets.exportComputeNodeTemplates",
      "cloudasset.assets.exportComputePacketMirrorings",
      "cloudasset.assets.exportComputeProjects",
      "cloudasset.assets.exportComputeRegionAutoscaler",
      "cloudasset.assets.exportComputeRegionBackendServices",
      "cloudasset.assets.exportComputeRegionDisk",
      "cloudasset.assets.exportComputeRegionInstanceGroup",
      "cloudasset.assets.exportComputeRegionInstanceGroupManager",
      "cloudasset.assets.exportComputeReservations",
      "cloudasset.assets.exportComputeResourcePolicies",
      "cloudasset.assets.exportComputeRouters",
      "cloudasset.assets.exportComputeRoutes",
      "cloudasset.assets.exportComputeSecurityPolicy",
      "cloudasset.assets.exportComputeServiceAttachments",
      "cloudasset.assets.exportComputeSnapshots",
      "cloudasset.assets.exportComputeSslCertificates",
      "cloudasset.assets.exportComputeSslPolicies",
      "cloudasset.assets.exportComputeSubnetworks",
      "cloudasset.assets.exportComputeTargetHttpProxies",
      "cloudasset.assets.exportComputeTargetHttpsProxies",
      "cloudasset.assets.exportComputeTargetInstances",
      "cloudasset.assets.exportComputeTargetPools",
      "cloudasset.assets.exportComputeTargetSslProxies",
      "cloudasset.assets.exportComputeTargetTcpProxies",
      "cloudasset.assets.exportComputeTargetVpnGateways",
      "cloudasset.assets.exportComputeUrlMaps",
      "cloudasset.assets.exportComputeVpnGateways",
      "cloudasset.assets.exportComputeVpnTunnels",
      "cloudasset.assets.exportConnectorsConnections",
      "cloudasset.assets.exportConnectorsConnectorVersions",
      "cloudasset.assets.exportConnectorsConnectors",
      "cloudasset.assets.exportConnectorsProviders",
      "cloudasset.assets.exportConnectorsRuntimeConfigs",
      "cloudasset.assets.exportContainerAppsDeployment",
      "cloudasset.assets.exportContainerAppsReplicaSets",
      "cloudasset.assets.exportContainerBatchJobs",
      "cloudasset.assets.exportContainerClusterrole",
      "cloudasset.assets.exportContainerClusterrolebinding",
      "cloudasset.assets.exportContainerClusters",
      "cloudasset.assets.exportContainerExtensionsIngresses",
      "cloudasset.assets.exportContainerJobs",
      "cloudasset.assets.exportContainerNamespace",
      "cloudasset.assets.exportContainerNetworkingIngresses",
      "cloudasset.assets.exportContainerNetworkingNetworkPolicies",
      "cloudasset.assets.exportContainerNode",
      "cloudasset.assets.exportContainerNodepool",
      "cloudasset.assets.exportContainerPod",
      "cloudasset.assets.exportContainerReplicaSets",
      "cloudasset.assets.exportContainerRole",
      "cloudasset.assets.exportContainerRolebinding",
      "cloudasset.assets.exportContainerServices",
      "cloudasset.assets.exportContainerregistryImage",
      "cloudasset.assets.exportDataMigrationConnectionProfiles",
      "cloudasset.assets.exportDataMigrationMigrationJobs",
      "cloudasset.assets.exportDataflowJobs",
      "cloudasset.assets.exportDatafusionInstance",
      "cloudasset.assets.exportDataplexAssets",
      "cloudasset.assets.exportDataplexLakes",
      "cloudasset.assets.exportDataplexTasks",
      "cloudasset.assets.exportDataplexZones",
      "cloudasset.assets.exportDataprocAutoscalingPolicies",
      "cloudasset.assets.exportDataprocBatches",
      "cloudasset.assets.exportDataprocClusters",
      "cloudasset.assets.exportDataprocJobs",
      "cloudasset.assets.exportDataprocSessions",
      "cloudasset.assets.exportDataprocWorkflowTemplates",
      "cloudasset.assets.exportDatastreamConnectionProfile",
      "cloudasset.assets.exportDatastreamPrivateConnection",
      "cloudasset.assets.exportDatastreamStream",
      "cloudasset.assets.exportDialogflowAgents",
      "cloudasset.assets.exportDialogflowConversationProfiles",
      "cloudasset.assets.exportDialogflowKnowledgeBases",
      "cloudasset.assets.exportDialogflowLocationSettings",
      "cloudasset.assets.exportDlpDeidentifyTemplates",
      "cloudasset.assets.exportDlpDlpJobs",
      "cloudasset.assets.exportDlpInspectTemplates",
      "cloudasset.assets.exportDlpJobTriggers",
      "cloudasset.assets.exportDlpStoredInfoTypes",
      "cloudasset.assets.exportDnsManagedZones",
      "cloudasset.assets.exportDnsPolicies",
      "cloudasset.assets.exportDomainsRegistrations",
      "cloudasset.assets.exportEventarcTriggers",
      "cloudasset.assets.exportFileBackups",
      "cloudasset.assets.exportFileInstances",
      "cloudasset.assets.exportFirebaseAppInfos",
      "cloudasset.assets.exportFirebaseProjects",
      "cloudasset.assets.exportFirestoreDatabases",
      "cloudasset.assets.exportGKEHubFeatures",
      "cloudasset.assets.exportGKEHubMemberships",
      "cloudasset.assets.exportGameservicesGameServerClusters",
      "cloudasset.assets.exportGameservicesGameServerConfigs",
      "cloudasset.assets.exportGameservicesGameServerDeployments",
      "cloudasset.assets.exportGameservicesRealms",
      "cloudasset.assets.exportGkeBackupBackupPlans",
      "cloudasset.assets.exportGkeBackupBackups",
      "cloudasset.assets.exportGkeBackupRestorePlans",
      "cloudasset.assets.exportGkeBackupRestores",
      "cloudasset.assets.exportGkeBackupVolumeBackups",
      "cloudasset.assets.exportGkeBackupVolumeRestores",
      "cloudasset.assets.exportHealthcareConsentStores",
      "cloudasset.assets.exportHealthcareDatasets",
      "cloudasset.assets.exportHealthcareDicomStores",
      "cloudasset.assets.exportHealthcareFhirStores",
      "cloudasset.assets.exportHealthcareHl7V2Stores",
      "cloudasset.assets.exportIamPolicy",
      "cloudasset.assets.exportIamRoles",
      "cloudasset.assets.exportIamServiceAccountKeys",
      "cloudasset.assets.exportIamServiceAccounts",
      "cloudasset.assets.exportIapTunnel",
      "cloudasset.assets.exportIapTunnelInstances",
      "cloudasset.assets.exportIapTunnelZones",
      "cloudasset.assets.exportIapWeb",
      "cloudasset.assets.exportIapWebServiceVersion",
      "cloudasset.assets.exportIapWebServices",
      "cloudasset.assets.exportIapWebType",
      "cloudasset.assets.exportIdsEndpoints",
      "cloudasset.assets.exportIntegrationsAuthConfigs",
      "cloudasset.assets.exportIntegrationsCertificates",
      "cloudasset.assets.exportIntegrationsExecutions",
      "cloudasset.assets.exportIntegrationsIntegrationVersions",
      "cloudasset.assets.exportIntegrationsIntegrations",
      "cloudasset.assets.exportIntegrationsSfdcChannels",
      "cloudasset.assets.exportIntegrationsSfdcInstances",
      "cloudasset.assets.exportIntegrationsSuspensions",
      "cloudasset.assets.exportLoggingLogMetrics",
      "cloudasset.assets.exportLoggingLogSinks",
      "cloudasset.assets.exportManagedidentitiesDomain",
      "cloudasset.assets.exportMetastoreBackups",
      "cloudasset.assets.exportMetastoreMetadataImports",
      "cloudasset.assets.exportMetastoreServices",
      "cloudasset.assets.exportMonitoringAlertPolicies",
      "cloudasset.assets.exportNetworkConnectivityHubs",
      "cloudasset.assets.exportNetworkConnectivitySpokes",
      "cloudasset.assets.exportNetworkManagementConnectivityTests",
      "cloudasset.assets.exportNetworkServicesEndpointPolicies",
      "cloudasset.assets.exportNetworkServicesGateways",
      "cloudasset.assets.exportNetworkServicesGrpcRoutes",
      "cloudasset.assets.exportNetworkServicesHttpRoutes",
      "cloudasset.assets.exportNetworkServicesMeshes",
      "cloudasset.assets.exportNetworkServicesServiceBindings",
      "cloudasset.assets.exportNetworkServicesTcpRoutes",
      "cloudasset.assets.exportNetworkServicesTlsRoutes",
      "cloudasset.assets.exportOSConfigOSPolicyAssignmentReports",
      "cloudasset.assets.exportOSConfigOSPolicyAssignments",
      "cloudasset.assets.exportOSConfigVulnerabilityReports",
      "cloudasset.assets.exportOSInventories",
      "cloudasset.assets.exportOrgPolicy",
      "cloudasset.assets.exportPatchDeployments",
      "cloudasset.assets.exportPubsubSnapshots",
      "cloudasset.assets.exportPubsubSubscriptions",
      "cloudasset.assets.exportPubsubTopics",
      "cloudasset.assets.exportRedisInstances",
      "cloudasset.assets.exportResource",
      "cloudasset.assets.exportSecretManagerSecretVersions",
      "cloudasset.assets.exportSecretManagerSecrets",
      "cloudasset.assets.exportServiceDirectoryNamespaces",
      "cloudasset.assets.exportServicePerimeter",
      "cloudasset.assets.exportServiceconsumermanagementConsumerProperty",
      "cloudasset.assets.exportServiceconsumermanagementConsumerQuotaLimits",
      "cloudasset.assets.exportServiceconsumermanagementConsumers",
      "cloudasset.assets.exportServiceconsumermanagementProducerOverrides",
      "cloudasset.assets.exportServiceconsumermanagementTenancyUnits",
      "cloudasset.assets.exportServiceconsumermanagementVisibility",
      "cloudasset.assets.exportServicemanagementServices",
      "cloudasset.assets.exportServiceusageAdminOverrides",
      "cloudasset.assets.exportServiceusageConsumerOverrides",
      "cloudasset.assets.exportServiceusageServices",
      "cloudasset.assets.exportSpannerBackups",
      "cloudasset.assets.exportSpannerDatabases",
      "cloudasset.assets.exportSpannerInstances",
      "cloudasset.assets.exportSpeakerIdPhrases",
      "cloudasset.assets.exportSpeakerIdSettings",
      "cloudasset.assets.exportSpeakerIdSpeakers",
      "cloudasset.assets.exportSpeechCustomClasses",
      "cloudasset.assets.exportSpeechPhraseSets",
      "cloudasset.assets.exportSqladminBackupRuns",
      "cloudasset.assets.exportSqladminInstances",
      "cloudasset.assets.exportStorageBuckets",
      "cloudasset.assets.exportTpuNodes",
      "cloudasset.assets.exportVpcaccessConnector",
      "cloudasset.assets.listAccessLevel",
      "cloudasset.assets.listAccessPolicy",
      "cloudasset.assets.listAiplatformBatchPredictionJobs",
      "cloudasset.assets.listAiplatformCustomJobs",
      "cloudasset.assets.listAiplatformDataLabelingJobs",
      "cloudasset.assets.listAiplatformDatasets",
      "cloudasset.assets.listAiplatformEndpoints",
      "cloudasset.assets.listAiplatformHyperparameterTuningJobs",
      "cloudasset.assets.listAiplatformMetadataStores",
      "cloudasset.assets.listAiplatformModelDeploymentMonitoringJobs",
      "cloudasset.assets.listAiplatformModels",
      "cloudasset.assets.listAiplatformPipelineJobs",
      "cloudasset.assets.listAiplatformSpecialistPools",
      "cloudasset.assets.listAiplatformTrainingPipelines",
      "cloudasset.assets.listAllAccessPolicy",
      "cloudasset.assets.listAnthosConnectedCluster",
      "cloudasset.assets.listAnthosedgeCluster",
      "cloudasset.assets.listApigatewayApi",
      "cloudasset.assets.listApigatewayApiConfig",
      "cloudasset.assets.listApigatewayGateway",
      "cloudasset.assets.listApikeysKeys",
      "cloudasset.assets.listAppengineApplications",
      "cloudasset.assets.listAppengineServices",
      "cloudasset.assets.listAppengineVersions",
      "cloudasset.assets.listArtifactregistryDockerImages",
      "cloudasset.assets.listArtifactregistryRepositories",
      "cloudasset.assets.listAssuredWorkloadsWorkloads",
      "cloudasset.assets.listBeyondCorpApiGateways",
      "cloudasset.assets.listBeyondCorpAppConnections",
      "cloudasset.assets.listBeyondCorpAppConnectors",
      "cloudasset.assets.listBeyondCorpAppGateways",
      "cloudasset.assets.listBeyondCorpClientConnectorServices",
      "cloudasset.assets.listBeyondCorpClientGateways",
      "cloudasset.assets.listBigqueryDatasets",
      "cloudasset.assets.listBigqueryModels",
      "cloudasset.assets.listBigqueryTables",
      "cloudasset.assets.listBigtableAppProfile",
      "cloudasset.assets.listBigtableBackup",
      "cloudasset.assets.listBigtableCluster",
      "cloudasset.assets.listBigtableInstance",
      "cloudasset.assets.listBigtableTable",
      "cloudasset.assets.listCloudAssetFeeds",
      "cloudasset.assets.listCloudDeployDeliveryPipelines",
      "cloudasset.assets.listCloudDeployReleases",
      "cloudasset.assets.listCloudDeployRollouts",
      "cloudasset.assets.listCloudDeployTargets",
      "cloudasset.assets.listCloudDocumentAIEvaluation",
      "cloudasset.assets.listCloudDocumentAIHumanReviewConfig",
      "cloudasset.assets.listCloudDocumentAILabelerPool",
      "cloudasset.assets.listCloudDocumentAIProcessor",
      "cloudasset.assets.listCloudDocumentAIProcessorVersion",
      "cloudasset.assets.listCloudbillingBillingAccounts",
      "cloudasset.assets.listCloudbillingProjectBillingInfos",
      "cloudasset.assets.listCloudfunctionsFunctions",
      "cloudasset.assets.listCloudfunctionsGen2Functions",
      "cloudasset.assets.listCloudkmsCryptoKeyVersions",
      "cloudasset.assets.listCloudkmsCryptoKeys",
      "cloudasset.assets.listCloudkmsEkmConnections",
      "cloudasset.assets.listCloudkmsImportJobs",
      "cloudasset.assets.listCloudkmsKeyRings",
      "cloudasset.assets.listCloudmemcacheInstances",
      "cloudasset.assets.listCloudresourcemanagerFolders",
      "cloudasset.assets.listCloudresourcemanagerOrganizations",
      "cloudasset.assets.listCloudresourcemanagerProjects",
      "cloudasset.assets.listCloudresourcemanagerTagBindings",
      "cloudasset.assets.listCloudresourcemanagerTagKeys",
      "cloudasset.assets.listCloudresourcemanagerTagValues",
      "cloudasset.assets.listComposerEnvironments",
      "cloudasset.assets.listComputeAddress",
      "cloudasset.assets.listComputeAutoscalers",
      "cloudasset.assets.listComputeBackendBuckets",
      "cloudasset.assets.listComputeBackendServices",
      "cloudasset.assets.listComputeCommitments",
      "cloudasset.assets.listComputeDisks",
      "cloudasset.assets.listComputeExternalVpnGateways",
      "cloudasset.assets.listComputeFirewallPolicies",
      "cloudasset.assets.listComputeFirewalls",
      "cloudasset.assets.listComputeForwardingRules",
      "cloudasset.assets.listComputeGlobalAddress",
      "cloudasset.assets.listComputeGlobalForwardingRules",
      "cloudasset.assets.listComputeHealthChecks",
      "cloudasset.assets.listComputeHttpHealthChecks",
      "cloudasset.assets.listComputeHttpsHealthChecks",
      "cloudasset.assets.listComputeImages",
      "cloudasset.assets.listComputeInstanceGroupManagers",
      "cloudasset.assets.listComputeInstanceGroups",
      "cloudasset.assets.listComputeInstanceTemplates",
      "cloudasset.assets.listComputeInstances",
      "cloudasset.assets.listComputeInterconnect",
      "cloudasset.assets.listComputeInterconnectAttachment",
      "cloudasset.assets.listComputeLicenses",
      "cloudasset.assets.listComputeNetworkEndpointGroups",
      "cloudasset.assets.listComputeNetworks",
      "cloudasset.assets.listComputeNodeGroups",
      "cloudasset.assets.listComputeNodeTemplates",
      "cloudasset.assets.listComputePacketMirrorings",
      "cloudasset.assets.listComputeProjects",
      "cloudasset.assets.listComputeRegionAutoscaler",
      "cloudasset.assets.listComputeRegionBackendServices",
      "cloudasset.assets.listComputeRegionDisk",
      "cloudasset.assets.listComputeRegionInstanceGroup",
      "cloudasset.assets.listComputeRegionInstanceGroupManager",
      "cloudasset.assets.listComputeReservations",
      "cloudasset.assets.listComputeResourcePolicies",
      "cloudasset.assets.listComputeRouters",
      "cloudasset.assets.listComputeRoutes",
      "cloudasset.assets.listComputeSecurityPolicy",
      "cloudasset.assets.listComputeServiceAttachments",
      "cloudasset.assets.listComputeSnapshots",
      "cloudasset.assets.listComputeSslCertificates",
      "cloudasset.assets.listComputeSslPolicies",
      "cloudasset.assets.listComputeSubnetworks",
      "cloudasset.assets.listComputeTargetHttpProxies",
      "cloudasset.assets.listComputeTargetHttpsProxies",
      "cloudasset.assets.listComputeTargetInstances",
      "cloudasset.assets.listComputeTargetPools",
      "cloudasset.assets.listComputeTargetSslProxies",
      "cloudasset.assets.listComputeTargetTcpProxies",
      "cloudasset.assets.listComputeTargetVpnGateways",
      "cloudasset.assets.listComputeUrlMaps",
      "cloudasset.assets.listComputeVpnGateways",
      "cloudasset.assets.listComputeVpnTunnels",
      "cloudasset.assets.listConnectorsConnections",
      "cloudasset.assets.listConnectorsConnectorVersions",
      "cloudasset.assets.listConnectorsConnectors",
      "cloudasset.assets.listConnectorsProviders",
      "cloudasset.assets.listConnectorsRuntimeConfigs",
      "cloudasset.assets.listContainerAppsDeployment",
      "cloudasset.assets.listContainerAppsReplicaSets",
      "cloudasset.assets.listContainerBatchJobs",
      "cloudasset.assets.listContainerClusterrole",
      "cloudasset.assets.listContainerClusterrolebinding",
      "cloudasset.assets.listContainerClusters",
      "cloudasset.assets.listContainerExtensionsIngresses",
      "cloudasset.assets.listContainerJobs",
      "cloudasset.assets.listContainerNamespace",
      "cloudasset.assets.listContainerNetworkingIngresses",
      "cloudasset.assets.listContainerNetworkingNetworkPolicies",
      "cloudasset.assets.listContainerNode",
      "cloudasset.assets.listContainerNodepool",
      "cloudasset.assets.listContainerPod",
      "cloudasset.assets.listContainerReplicaSets",
      "cloudasset.assets.listContainerRole",
      "cloudasset.assets.listContainerRolebinding",
      "cloudasset.assets.listContainerServices",
      "cloudasset.assets.listContainerregistryImage",
      "cloudasset.assets.listDataMigrationConnectionProfiles",
      "cloudasset.assets.listDataMigrationMigrationJobs",
      "cloudasset.assets.listDataflowJobs",
      "cloudasset.assets.listDatafusionInstance",
      "cloudasset.assets.listDataplexAssets",
      "cloudasset.assets.listDataplexLakes",
      "cloudasset.assets.listDataplexTasks",
      "cloudasset.assets.listDataplexZones",
      "cloudasset.assets.listDataprocAutoscalingPolicies",
      "cloudasset.assets.listDataprocBatches",
      "cloudasset.assets.listDataprocClusters",
      "cloudasset.assets.listDataprocJobs",
      "cloudasset.assets.listDataprocSessions",
      "cloudasset.assets.listDataprocWorkflowTemplates",
      "cloudasset.assets.listDatastreamConnectionProfile",
      "cloudasset.assets.listDatastreamPrivateConnection",
      "cloudasset.assets.listDatastreamStream",
      "cloudasset.assets.listDialogflowAgents",
      "cloudasset.assets.listDialogflowConversationProfiles",
      "cloudasset.assets.listDialogflowKnowledgeBases",
      "cloudasset.assets.listDialogflowLocationSettings",
      "cloudasset.assets.listDlpDeidentifyTemplates",
      "cloudasset.assets.listDlpDlpJobs",
      "cloudasset.assets.listDlpInspectTemplates",
      "cloudasset.assets.listDlpJobTriggers",
      "cloudasset.assets.listDlpStoredInfoTypes",
      "cloudasset.assets.listDnsManagedZones",
      "cloudasset.assets.listDnsPolicies",
      "cloudasset.assets.listDomainsRegistrations",
      "cloudasset.assets.listEventarcTriggers",
      "cloudasset.assets.listFileBackups",
      "cloudasset.assets.listFileInstances",
      "cloudasset.assets.listFirebaseAppInfos",
      "cloudasset.assets.listFirebaseProjects",
      "cloudasset.assets.listFirestoreDatabases",
      "cloudasset.assets.listGKEHubFeatures",
      "cloudasset.assets.listGKEHubMemberships",
      "cloudasset.assets.listGameservicesGameServerClusters",
      "cloudasset.assets.listGameservicesGameServerConfigs",
      "cloudasset.assets.listGameservicesGameServerDeployments",
      "cloudasset.assets.listGameservicesRealms",
      "cloudasset.assets.listGkeBackupBackupPlans",
      "cloudasset.assets.listGkeBackupBackups",
      "cloudasset.assets.listGkeBackupRestorePlans",
      "cloudasset.assets.listGkeBackupRestores",
      "cloudasset.assets.listGkeBackupVolumeBackups",
      "cloudasset.assets.listGkeBackupVolumeRestores",
      "cloudasset.assets.listHealthcareConsentStores",
      "cloudasset.assets.listHealthcareDatasets",
      "cloudasset.assets.listHealthcareDicomStores",
      "cloudasset.assets.listHealthcareFhirStores",
      "cloudasset.assets.listHealthcareHl7V2Stores",
      "cloudasset.assets.listIamPolicy",
      "cloudasset.assets.listIamRoles",
      "cloudasset.assets.listIamServiceAccountKeys",
      "cloudasset.assets.listIamServiceAccounts",
      "cloudasset.assets.listIapTunnel",
      "cloudasset.assets.listIapTunnelInstances",
      "cloudasset.assets.listIapTunnelZones",
      "cloudasset.assets.listIapWeb",
      "cloudasset.assets.listIapWebServiceVersion",
      "cloudasset.assets.listIapWebServices",
      "cloudasset.assets.listIapWebType",
      "cloudasset.assets.listIdsEndpoints",
      "cloudasset.assets.listIntegrationsAuthConfigs",
      "cloudasset.assets.listIntegrationsCertificates",
      "cloudasset.assets.listIntegrationsExecutions",
      "cloudasset.assets.listIntegrationsIntegrationVersions",
      "cloudasset.assets.listIntegrationsIntegrations",
      "cloudasset.assets.listIntegrationsSfdcChannels",
      "cloudasset.assets.listIntegrationsSfdcInstances",
      "cloudasset.assets.listIntegrationsSuspensions",
      "cloudasset.assets.listLoggingLogMetrics",
      "cloudasset.assets.listLoggingLogSinks",
      "cloudasset.assets.listManagedidentitiesDomain",
      "cloudasset.assets.listMetastoreBackups",
      "cloudasset.assets.listMetastoreMetadataImports",
      "cloudasset.assets.listMetastoreServices",
      "cloudasset.assets.listMonitoringAlertPolicies",
      "cloudasset.assets.listNetworkConnectivityHubs",
      "cloudasset.assets.listNetworkConnectivitySpokes",
      "cloudasset.assets.listNetworkManagementConnectivityTests",
      "cloudasset.assets.listNetworkServicesEndpointPolicies",
      "cloudasset.assets.listNetworkServicesGateways",
      "cloudasset.assets.listNetworkServicesGrpcRoutes",
      "cloudasset.assets.listNetworkServicesHttpRoutes",
      "cloudasset.assets.listNetworkServicesMeshes",
      "cloudasset.assets.listNetworkServicesServiceBindings",
      "cloudasset.assets.listNetworkServicesTcpRoutes",
      "cloudasset.assets.listNetworkServicesTlsRoutes",
      "cloudasset.assets.listOSConfigOSPolicyAssignmentReports",
      "cloudasset.assets.listOSConfigOSPolicyAssignments",
      "cloudasset.assets.listOSConfigVulnerabilityReports",
      "cloudasset.assets.listOSInventories",
      "cloudasset.assets.listOrgPolicy",
      "cloudasset.assets.listPatchDeployments",
      "cloudasset.assets.listPubsubSnapshots",
      "cloudasset.assets.listPubsubSubscriptions",
      "cloudasset.assets.listPubsubTopics",
      "cloudasset.assets.listRedisInstances",
      "cloudasset.assets.listResource",
      "cloudasset.assets.listRunDomainMapping",
      "cloudasset.assets.listRunRevision",
      "cloudasset.assets.listRunService",
      "cloudasset.assets.listSecretManagerSecretVersions",
      "cloudasset.assets.listSecretManagerSecrets",
      "cloudasset.assets.listServiceDirectoryNamespaces",
      "cloudasset.assets.listServicePerimeter",
      "cloudasset.assets.listServiceconsumermanagementConsumerProperty",
      "cloudasset.assets.listServiceconsumermanagementConsumerQuotaLimits",
      "cloudasset.assets.listServiceconsumermanagementConsumers",
      "cloudasset.assets.listServiceconsumermanagementProducerOverrides",
      "cloudasset.assets.listServiceconsumermanagementTenancyUnits",
      "cloudasset.assets.listServiceconsumermanagementVisibility",
      "cloudasset.assets.listServicemanagementServices",
      "cloudasset.assets.listServiceusageAdminOverrides",
      "cloudasset.assets.listServiceusageConsumerOverrides",
      "cloudasset.assets.listServiceusageServices",
      "cloudasset.assets.listSpannerBackups",
      "cloudasset.assets.listSpannerDatabases",
      "cloudasset.assets.listSpannerInstances",
      "cloudasset.assets.listSpeakerIdPhrases",
      "cloudasset.assets.listSpeakerIdSettings",
      "cloudasset.assets.listSpeakerIdSpeakers",
      "cloudasset.assets.listSpeechCustomClasses",
      "cloudasset.assets.listSpeechPhraseSets",
      "cloudasset.assets.listSqladminBackupRuns",
      "cloudasset.assets.listSqladminInstances",
      "cloudasset.assets.listStorageBuckets",
      "cloudasset.assets.listTpuNodes",
      "cloudasset.assets.listVpcaccessConnector",
      "cloudasset.assets.queryAccessPolicy",
      "cloudasset.assets.queryIamPolicy",
      "cloudasset.assets.queryOSInventories",
      "cloudasset.assets.queryResource",
      "cloudasset.assets.searchAllIamPolicies",
      "cloudasset.assets.searchAllResources",
      "cloudasset.feeds.create",
      "cloudasset.feeds.delete",
      "cloudasset.feeds.get",
      "cloudasset.feeds.list",
      "cloudasset.feeds.update",
      "cloudasset.savedqueries.create",
      "cloudasset.savedqueries.delete",
      "cloudasset.savedqueries.get",
      "cloudasset.savedqueries.list",
      "cloudasset.savedqueries.update",
      "recommender.cloudAssetInsights.get",
      "recommender.cloudAssetInsights.list",
      "recommender.cloudAssetInsights.update",
      "recommender.locations.get",
      "recommender.locations.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudasset.serviceAgent",
    "title": "Cloud Asset Service Agent",
    "description": "Gives Cloud Asset service agent permissions to Cloud Storage and BigQuery for exporting Assets, and permission to publish to Cloud Pub/Sub topics for Asset Real Time Feed.",
    "includedPermissions": [
      "bigquery.datasets.get",
      "bigquery.jobs.create",
      "bigquery.jobs.get",
      "bigquery.tables.create",
      "bigquery.tables.delete",
      "bigquery.tables.get",
      "bigquery.tables.update",
      "bigquery.tables.updateData",
      "pubsub.topics.publish",
      "storage.buckets.create",
      "storage.buckets.get",
      "storage.buckets.getIamPolicy",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudasset.viewer",
    "title": "Cloud Asset Viewer",
    "description": "Read only access to cloud assets metadata",
    "includedPermissions": [
      "cloudasset.assets.analyzeIamPolicy",
      "cloudasset.assets.analyzeMove",
      "cloudasset.assets.analyzeOrgPolicy",
      "cloudasset.assets.exportAccessLevel",
      "cloudasset.assets.exportAccessPolicy",
      "cloudasset.assets.exportAiplatformBatchPredictionJobs",
      "cloudasset.assets.exportAiplatformCustomJobs",
      "cloudasset.assets.exportAiplatformDataLabelingJobs",
      "cloudasset.assets.exportAiplatformDatasets",
      "cloudasset.assets.exportAiplatformEndpoints",
      "cloudasset.assets.exportAiplatformHyperparameterTuningJobs",
      "cloudasset.assets.exportAiplatformMetadataStores",
      "cloudasset.assets.exportAiplatformModelDeploymentMonitoringJobs",
      "cloudasset.assets.exportAiplatformModels",
      "cloudasset.assets.exportAiplatformPipelineJobs",
      "cloudasset.assets.exportAiplatformSpecialistPools",
      "cloudasset.assets.exportAiplatformTrainingPipelines",
      "cloudasset.assets.exportAllAccessPolicy",
      "cloudasset.assets.exportAnthosConnectedCluster",
      "cloudasset.assets.exportAnthosedgeCluster",
      "cloudasset.assets.exportApigatewayApi",
      "cloudasset.assets.exportApigatewayApiConfig",
      "cloudasset.assets.exportApigatewayGateway",
      "cloudasset.assets.exportApikeysKeys",
      "cloudasset.assets.exportAppengineApplications",
      "cloudasset.assets.exportAppengineServices",
      "cloudasset.assets.exportAppengineVersions",
      "cloudasset.assets.exportArtifactregistryDockerImages",
      "cloudasset.assets.exportArtifactregistryRepositories",
      "cloudasset.assets.exportAssuredWorkloadsWorkloads",
      "cloudasset.assets.exportBeyondCorpApiGateways",
      "cloudasset.assets.exportBeyondCorpAppConnections",
      "cloudasset.assets.exportBeyondCorpAppConnectors",
      "cloudasset.assets.exportBeyondCorpAppGateways",
      "cloudasset.assets.exportBeyondCorpClientConnectorServices",
      "cloudasset.assets.exportBeyondCorpClientGateways",
      "cloudasset.assets.exportBigqueryDatasets",
      "cloudasset.assets.exportBigqueryModels",
      "cloudasset.assets.exportBigqueryTables",
      "cloudasset.assets.exportBigtableAppProfile",
      "cloudasset.assets.exportBigtableBackup",
      "cloudasset.assets.exportBigtableCluster",
      "cloudasset.assets.exportBigtableInstance",
      "cloudasset.assets.exportBigtableTable",
      "cloudasset.assets.exportCloudAssetFeeds",
      "cloudasset.assets.exportCloudDeployDeliveryPipelines",
      "cloudasset.assets.exportCloudDeployReleases",
      "cloudasset.assets.exportCloudDeployRollouts",
      "cloudasset.assets.exportCloudDeployTargets",
      "cloudasset.assets.exportCloudDocumentAIEvaluation",
      "cloudasset.assets.exportCloudDocumentAIHumanReviewConfig",
      "cloudasset.assets.exportCloudDocumentAILabelerPool",
      "cloudasset.assets.exportCloudDocumentAIProcessor",
      "cloudasset.assets.exportCloudDocumentAIProcessorVersion",
      "cloudasset.assets.exportCloudbillingBillingAccounts",
      "cloudasset.assets.exportCloudbillingProjectBillingInfos",
      "cloudasset.assets.exportCloudfunctionsFunctions",
      "cloudasset.assets.exportCloudfunctionsGen2Functions",
      "cloudasset.assets.exportCloudkmsCryptoKeyVersions",
      "cloudasset.assets.exportCloudkmsCryptoKeys",
      "cloudasset.assets.exportCloudkmsEkmConnections",
      "cloudasset.assets.exportCloudkmsImportJobs",
      "cloudasset.assets.exportCloudkmsKeyRings",
      "cloudasset.assets.exportCloudmemcacheInstances",
      "cloudasset.assets.exportCloudresourcemanagerFolders",
      "cloudasset.assets.exportCloudresourcemanagerOrganizations",
      "cloudasset.assets.exportCloudresourcemanagerProjects",
      "cloudasset.assets.exportCloudresourcemanagerTagBindings",
      "cloudasset.assets.exportCloudresourcemanagerTagKeys",
      "cloudasset.assets.exportCloudresourcemanagerTagValues",
      "cloudasset.assets.exportComposerEnvironments",
      "cloudasset.assets.exportComputeAddress",
      "cloudasset.assets.exportComputeAutoscalers",
      "cloudasset.assets.exportComputeBackendBuckets",
      "cloudasset.assets.exportComputeBackendServices",
      "cloudasset.assets.exportComputeCommitments",
      "cloudasset.assets.exportComputeDisks",
      "cloudasset.assets.exportComputeExternalVpnGateways",
      "cloudasset.assets.exportComputeFirewallPolicies",
      "cloudasset.assets.exportComputeFirewalls",
      "cloudasset.assets.exportComputeForwardingRules",
      "cloudasset.assets.exportComputeGlobalAddress",
      "cloudasset.assets.exportComputeGlobalForwardingRules",
      "cloudasset.assets.exportComputeHealthChecks",
      "cloudasset.assets.exportComputeHttpHealthChecks",
      "cloudasset.assets.exportComputeHttpsHealthChecks",
      "cloudasset.assets.exportComputeImages",
      "cloudasset.assets.exportComputeInstanceGroupManagers",
      "cloudasset.assets.exportComputeInstanceGroups",
      "cloudasset.assets.exportComputeInstanceTemplates",
      "cloudasset.assets.exportComputeInstances",
      "cloudasset.assets.exportComputeInterconnect",
      "cloudasset.assets.exportComputeInterconnectAttachment",
      "cloudasset.assets.exportComputeLicenses",
      "cloudasset.assets.exportComputeNetworkEndpointGroups",
      "cloudasset.assets.exportComputeNetworks",
      "cloudasset.assets.exportComputeNodeGroups",
      "cloudasset.assets.exportComputeNodeTemplates",
      "cloudasset.assets.exportComputePacketMirrorings",
      "cloudasset.assets.exportComputeProjects",
      "cloudasset.assets.exportComputeRegionAutoscaler",
      "cloudasset.assets.exportComputeRegionBackendServices",
      "cloudasset.assets.exportComputeRegionDisk",
      "cloudasset.assets.exportComputeRegionInstanceGroup",
      "cloudasset.assets.exportComputeRegionInstanceGroupManager",
      "cloudasset.assets.exportComputeReservations",
      "cloudasset.assets.exportComputeResourcePolicies",
      "cloudasset.assets.exportComputeRouters",
      "cloudasset.assets.exportComputeRoutes",
      "cloudasset.assets.exportComputeSecurityPolicy",
      "cloudasset.assets.exportComputeServiceAttachments",
      "cloudasset.assets.exportComputeSnapshots",
      "cloudasset.assets.exportComputeSslCertificates",
      "cloudasset.assets.exportComputeSslPolicies",
      "cloudasset.assets.exportComputeSubnetworks",
      "cloudasset.assets.exportComputeTargetHttpProxies",
      "cloudasset.assets.exportComputeTargetHttpsProxies",
      "cloudasset.assets.exportComputeTargetInstances",
      "cloudasset.assets.exportComputeTargetPools",
      "cloudasset.assets.exportComputeTargetSslProxies",
      "cloudasset.assets.exportComputeTargetTcpProxies",
      "cloudasset.assets.exportComputeTargetVpnGateways",
      "cloudasset.assets.exportComputeUrlMaps",
      "cloudasset.assets.exportComputeVpnGateways",
      "cloudasset.assets.exportComputeVpnTunnels",
      "cloudasset.assets.exportConnectorsConnections",
      "cloudasset.assets.exportConnectorsConnectorVersions",
      "cloudasset.assets.exportConnectorsConnectors",
      "cloudasset.assets.exportConnectorsProviders",
      "cloudasset.assets.exportConnectorsRuntimeConfigs",
      "cloudasset.assets.exportContainerAppsDeployment",
      "cloudasset.assets.exportContainerAppsReplicaSets",
      "cloudasset.assets.exportContainerBatchJobs",
      "cloudasset.assets.exportContainerClusterrole",
      "cloudasset.assets.exportContainerClusterrolebinding",
      "cloudasset.assets.exportContainerClusters",
      "cloudasset.assets.exportContainerExtensionsIngresses",
      "cloudasset.assets.exportContainerJobs",
      "cloudasset.assets.exportContainerNamespace",
      "cloudasset.assets.exportContainerNetworkingIngresses",
      "cloudasset.assets.exportContainerNetworkingNetworkPolicies",
      "cloudasset.assets.exportContainerNode",
      "cloudasset.assets.exportContainerNodepool",
      "cloudasset.assets.exportContainerPod",
      "cloudasset.assets.exportContainerReplicaSets",
      "cloudasset.assets.exportContainerRole",
      "cloudasset.assets.exportContainerRolebinding",
      "cloudasset.assets.exportContainerServices",
      "cloudasset.assets.exportContainerregistryImage",
      "cloudasset.assets.exportDataMigrationConnectionProfiles",
      "cloudasset.assets.exportDataMigrationMigrationJobs",
      "cloudasset.assets.exportDataflowJobs",
      "cloudasset.assets.exportDatafusionInstance",
      "cloudasset.assets.exportDataplexAssets",
      "cloudasset.assets.exportDataplexLakes",
      "cloudasset.assets.exportDataplexTasks",
      "cloudasset.assets.exportDataplexZones",
      "cloudasset.assets.exportDataprocAutoscalingPolicies",
      "cloudasset.assets.exportDataprocBatches",
      "cloudasset.assets.exportDataprocClusters",
      "cloudasset.assets.exportDataprocJobs",
      "cloudasset.assets.exportDataprocSessions",
      "cloudasset.assets.exportDataprocWorkflowTemplates",
      "cloudasset.assets.exportDatastreamConnectionProfile",
      "cloudasset.assets.exportDatastreamPrivateConnection",
      "cloudasset.assets.exportDatastreamStream",
      "cloudasset.assets.exportDialogflowAgents",
      "cloudasset.assets.exportDialogflowConversationProfiles",
      "cloudasset.assets.exportDialogflowKnowledgeBases",
      "cloudasset.assets.exportDialogflowLocationSettings",
      "cloudasset.assets.exportDlpDeidentifyTemplates",
      "cloudasset.assets.exportDlpDlpJobs",
      "cloudasset.assets.exportDlpInspectTemplates",
      "cloudasset.assets.exportDlpJobTriggers",
      "cloudasset.assets.exportDlpStoredInfoTypes",
      "cloudasset.assets.exportDnsManagedZones",
      "cloudasset.assets.exportDnsPolicies",
      "cloudasset.assets.exportDomainsRegistrations",
      "cloudasset.assets.exportEventarcTriggers",
      "cloudasset.assets.exportFileBackups",
      "cloudasset.assets.exportFileInstances",
      "cloudasset.assets.exportFirebaseAppInfos",
      "cloudasset.assets.exportFirebaseProjects",
      "cloudasset.assets.exportFirestoreDatabases",
      "cloudasset.assets.exportGKEHubFeatures",
      "cloudasset.assets.exportGKEHubMemberships",
      "cloudasset.assets.exportGameservicesGameServerClusters",
      "cloudasset.assets.exportGameservicesGameServerConfigs",
      "cloudasset.assets.exportGameservicesGameServerDeployments",
      "cloudasset.assets.exportGameservicesRealms",
      "cloudasset.assets.exportGkeBackupBackupPlans",
      "cloudasset.assets.exportGkeBackupBackups",
      "cloudasset.assets.exportGkeBackupRestorePlans",
      "cloudasset.assets.exportGkeBackupRestores",
      "cloudasset.assets.exportGkeBackupVolumeBackups",
      "cloudasset.assets.exportGkeBackupVolumeRestores",
      "cloudasset.assets.exportHealthcareConsentStores",
      "cloudasset.assets.exportHealthcareDatasets",
      "cloudasset.assets.exportHealthcareDicomStores",
      "cloudasset.assets.exportHealthcareFhirStores",
      "cloudasset.assets.exportHealthcareHl7V2Stores",
      "cloudasset.assets.exportIamPolicy",
      "cloudasset.assets.exportIamRoles",
      "cloudasset.assets.exportIamServiceAccountKeys",
      "cloudasset.assets.exportIamServiceAccounts",
      "cloudasset.assets.exportIapTunnel",
      "cloudasset.assets.exportIapTunnelInstances",
      "cloudasset.assets.exportIapTunnelZones",
      "cloudasset.assets.exportIapWeb",
      "cloudasset.assets.exportIapWebServiceVersion",
      "cloudasset.assets.exportIapWebServices",
      "cloudasset.assets.exportIapWebType",
      "cloudasset.assets.exportIdsEndpoints",
      "cloudasset.assets.exportIntegrationsAuthConfigs",
      "cloudasset.assets.exportIntegrationsCertificates",
      "cloudasset.assets.exportIntegrationsExecutions",
      "cloudasset.assets.exportIntegrationsIntegrationVersions",
      "cloudasset.assets.exportIntegrationsIntegrations",
      "cloudasset.assets.exportIntegrationsSfdcChannels",
      "cloudasset.assets.exportIntegrationsSfdcInstances",
      "cloudasset.assets.exportIntegrationsSuspensions",
      "cloudasset.assets.exportLoggingLogMetrics",
      "cloudasset.assets.exportLoggingLogSinks",
      "cloudasset.assets.exportManagedidentitiesDomain",
      "cloudasset.assets.exportMetastoreBackups",
      "cloudasset.assets.exportMetastoreMetadataImports",
      "cloudasset.assets.exportMetastoreServices",
      "cloudasset.assets.exportMonitoringAlertPolicies",
      "cloudasset.assets.exportNetworkConnectivityHubs",
      "cloudasset.assets.exportNetworkConnectivitySpokes",
      "cloudasset.assets.exportNetworkManagementConnectivityTests",
      "cloudasset.assets.exportNetworkServicesEndpointPolicies",
      "cloudasset.assets.exportNetworkServicesGateways",
      "cloudasset.assets.exportNetworkServicesGrpcRoutes",
      "cloudasset.assets.exportNetworkServicesHttpRoutes",
      "cloudasset.assets.exportNetworkServicesMeshes",
      "cloudasset.assets.exportNetworkServicesServiceBindings",
      "cloudasset.assets.exportNetworkServicesTcpRoutes",
      "cloudasset.assets.exportNetworkServicesTlsRoutes",
      "cloudasset.assets.exportOSConfigOSPolicyAssignmentReports",
      "cloudasset.assets.exportOSConfigOSPolicyAssignments",
      "cloudasset.assets.exportOSConfigVulnerabilityReports",
      "cloudasset.assets.exportOSInventories",
      "cloudasset.assets.exportOrgPolicy",
      "cloudasset.assets.exportPatchDeployments",
      "cloudasset.assets.exportPubsubSnapshots",
      "cloudasset.assets.exportPubsubSubscriptions",
      "cloudasset.assets.exportPubsubTopics",
      "cloudasset.assets.exportRedisInstances",
      "cloudasset.assets.exportResource",
      "cloudasset.assets.exportSecretManagerSecretVersions",
      "cloudasset.assets.exportSecretManagerSecrets",
      "cloudasset.assets.exportServiceDirectoryNamespaces",
      "cloudasset.assets.exportServicePerimeter",
      "cloudasset.assets.exportServiceconsumermanagementConsumerProperty",
      "cloudasset.assets.exportServiceconsumermanagementConsumerQuotaLimits",
      "cloudasset.assets.exportServiceconsumermanagementConsumers",
      "cloudasset.assets.exportServiceconsumermanagementProducerOverrides",
      "cloudasset.assets.exportServiceconsumermanagementTenancyUnits",
      "cloudasset.assets.exportServiceconsumermanagementVisibility",
      "cloudasset.assets.exportServicemanagementServices",
      "cloudasset.assets.exportServiceusageAdminOverrides",
      "cloudasset.assets.exportServiceusageConsumerOverrides",
      "cloudasset.assets.exportServiceusageServices",
      "cloudasset.assets.exportSpannerBackups",
      "cloudasset.assets.exportSpannerDatabases",
      "cloudasset.assets.exportSpannerInstances",
      "cloudasset.assets.exportSpeakerIdPhrases",
      "cloudasset.assets.exportSpeakerIdSettings",
      "cloudasset.assets.exportSpeakerIdSpeakers",
      "cloudasset.assets.exportSpeechCustomClasses",
      "cloudasset.assets.exportSpeechPhraseSets",
      "cloudasset.assets.exportSqladminBackupRuns",
      "cloudasset.assets.exportSqladminInstances",
      "cloudasset.assets.exportStorageBuckets",
      "cloudasset.assets.exportTpuNodes",
      "cloudasset.assets.exportVpcaccessConnector",
      "cloudasset.assets.listAccessLevel",
      "cloudasset.assets.listAccessPolicy",
      "cloudasset.assets.listAiplatformBatchPredictionJobs",
      "cloudasset.assets.listAiplatformCustomJobs",
      "cloudasset.assets.listAiplatformDataLabelingJobs",
      "cloudasset.assets.listAiplatformDatasets",
      "cloudasset.assets.listAiplatformEndpoints",
      "cloudasset.assets.listAiplatformHyperparameterTuningJobs",
      "cloudasset.assets.listAiplatformMetadataStores",
      "cloudasset.assets.listAiplatformModelDeploymentMonitoringJobs",
      "cloudasset.assets.listAiplatformModels",
      "cloudasset.assets.listAiplatformPipelineJobs",
      "cloudasset.assets.listAiplatformSpecialistPools",
      "cloudasset.assets.listAiplatformTrainingPipelines",
      "cloudasset.assets.listAllAccessPolicy",
      "cloudasset.assets.listAnthosConnectedCluster",
      "cloudasset.assets.listAnthosedgeCluster",
      "cloudasset.assets.listApigatewayApi",
      "cloudasset.assets.listApigatewayApiConfig",
      "cloudasset.assets.listApigatewayGateway",
      "cloudasset.assets.listApikeysKeys",
      "cloudasset.assets.listAppengineApplications",
      "cloudasset.assets.listAppengineServices",
      "cloudasset.assets.listAppengineVersions",
      "cloudasset.assets.listArtifactregistryDockerImages",
      "cloudasset.assets.listArtifactregistryRepositories",
      "cloudasset.assets.listAssuredWorkloadsWorkloads",
      "cloudasset.assets.listBeyondCorpApiGateways",
      "cloudasset.assets.listBeyondCorpAppConnections",
      "cloudasset.assets.listBeyondCorpAppConnectors",
      "cloudasset.assets.listBeyondCorpAppGateways",
      "cloudasset.assets.listBeyondCorpClientConnectorServices",
      "cloudasset.assets.listBeyondCorpClientGateways",
      "cloudasset.assets.listBigqueryDatasets",
      "cloudasset.assets.listBigqueryModels",
      "cloudasset.assets.listBigqueryTables",
      "cloudasset.assets.listBigtableAppProfile",
      "cloudasset.assets.listBigtableBackup",
      "cloudasset.assets.listBigtableCluster",
      "cloudasset.assets.listBigtableInstance",
      "cloudasset.assets.listBigtableTable",
      "cloudasset.assets.listCloudAssetFeeds",
      "cloudasset.assets.listCloudDeployDeliveryPipelines",
      "cloudasset.assets.listCloudDeployReleases",
      "cloudasset.assets.listCloudDeployRollouts",
      "cloudasset.assets.listCloudDeployTargets",
      "cloudasset.assets.listCloudDocumentAIEvaluation",
      "cloudasset.assets.listCloudDocumentAIHumanReviewConfig",
      "cloudasset.assets.listCloudDocumentAILabelerPool",
      "cloudasset.assets.listCloudDocumentAIProcessor",
      "cloudasset.assets.listCloudDocumentAIProcessorVersion",
      "cloudasset.assets.listCloudbillingBillingAccounts",
      "cloudasset.assets.listCloudbillingProjectBillingInfos",
      "cloudasset.assets.listCloudfunctionsFunctions",
      "cloudasset.assets.listCloudfunctionsGen2Functions",
      "cloudasset.assets.listCloudkmsCryptoKeyVersions",
      "cloudasset.assets.listCloudkmsCryptoKeys",
      "cloudasset.assets.listCloudkmsEkmConnections",
      "cloudasset.assets.listCloudkmsImportJobs",
      "cloudasset.assets.listCloudkmsKeyRings",
      "cloudasset.assets.listCloudmemcacheInstances",
      "cloudasset.assets.listCloudresourcemanagerFolders",
      "cloudasset.assets.listCloudresourcemanagerOrganizations",
      "cloudasset.assets.listCloudresourcemanagerProjects",
      "cloudasset.assets.listCloudresourcemanagerTagBindings",
      "cloudasset.assets.listCloudresourcemanagerTagKeys",
      "cloudasset.assets.listCloudresourcemanagerTagValues",
      "cloudasset.assets.listComposerEnvironments",
      "cloudasset.assets.listComputeAddress",
      "cloudasset.assets.listComputeAutoscalers",
      "cloudasset.assets.listComputeBackendBuckets",
      "cloudasset.assets.listComputeBackendServices",
      "cloudasset.assets.listComputeCommitments",
      "cloudasset.assets.listComputeDisks",
      "cloudasset.assets.listComputeExternalVpnGateways",
      "cloudasset.assets.listComputeFirewallPolicies",
      "cloudasset.assets.listComputeFirewalls",
      "cloudasset.assets.listComputeForwardingRules",
      "cloudasset.assets.listComputeGlobalAddress",
      "cloudasset.assets.listComputeGlobalForwardingRules",
      "cloudasset.assets.listComputeHealthChecks",
      "cloudasset.assets.listComputeHttpHealthChecks",
      "cloudasset.assets.listComputeHttpsHealthChecks",
      "cloudasset.assets.listComputeImages",
      "cloudasset.assets.listComputeInstanceGroupManagers",
      "cloudasset.assets.listComputeInstanceGroups",
      "cloudasset.assets.listComputeInstanceTemplates",
      "cloudasset.assets.listComputeInstances",
      "cloudasset.assets.listComputeInterconnect",
      "cloudasset.assets.listComputeInterconnectAttachment",
      "cloudasset.assets.listComputeLicenses",
      "cloudasset.assets.listComputeNetworkEndpointGroups",
      "cloudasset.assets.listComputeNetworks",
      "cloudasset.assets.listComputeNodeGroups",
      "cloudasset.assets.listComputeNodeTemplates",
      "cloudasset.assets.listComputePacketMirrorings",
      "cloudasset.assets.listComputeProjects",
      "cloudasset.assets.listComputeRegionAutoscaler",
      "cloudasset.assets.listComputeRegionBackendServices",
      "cloudasset.assets.listComputeRegionDisk",
      "cloudasset.assets.listComputeRegionInstanceGroup",
      "cloudasset.assets.listComputeRegionInstanceGroupManager",
      "cloudasset.assets.listComputeReservations",
      "cloudasset.assets.listComputeResourcePolicies",
      "cloudasset.assets.listComputeRouters",
      "cloudasset.assets.listComputeRoutes",
      "cloudasset.assets.listComputeSecurityPolicy",
      "cloudasset.assets.listComputeServiceAttachments",
      "cloudasset.assets.listComputeSnapshots",
      "cloudasset.assets.listComputeSslCertificates",
      "cloudasset.assets.listComputeSslPolicies",
      "cloudasset.assets.listComputeSubnetworks",
      "cloudasset.assets.listComputeTargetHttpProxies",
      "cloudasset.assets.listComputeTargetHttpsProxies",
      "cloudasset.assets.listComputeTargetInstances",
      "cloudasset.assets.listComputeTargetPools",
      "cloudasset.assets.listComputeTargetSslProxies",
      "cloudasset.assets.listComputeTargetTcpProxies",
      "cloudasset.assets.listComputeTargetVpnGateways",
      "cloudasset.assets.listComputeUrlMaps",
      "cloudasset.assets.listComputeVpnGateways",
      "cloudasset.assets.listComputeVpnTunnels",
      "cloudasset.assets.listConnectorsConnections",
      "cloudasset.assets.listConnectorsConnectorVersions",
      "cloudasset.assets.listConnectorsConnectors",
      "cloudasset.assets.listConnectorsProviders",
      "cloudasset.assets.listConnectorsRuntimeConfigs",
      "cloudasset.assets.listContainerAppsDeployment",
      "cloudasset.assets.listContainerAppsReplicaSets",
      "cloudasset.assets.listContainerBatchJobs",
      "cloudasset.assets.listContainerClusterrole",
      "cloudasset.assets.listContainerClusterrolebinding",
      "cloudasset.assets.listContainerClusters",
      "cloudasset.assets.listContainerExtensionsIngresses",
      "cloudasset.assets.listContainerJobs",
      "cloudasset.assets.listContainerNamespace",
      "cloudasset.assets.listContainerNetworkingIngresses",
      "cloudasset.assets.listContainerNetworkingNetworkPolicies",
      "cloudasset.assets.listContainerNode",
      "cloudasset.assets.listContainerNodepool",
      "cloudasset.assets.listContainerPod",
      "cloudasset.assets.listContainerReplicaSets",
      "cloudasset.assets.listContainerRole",
      "cloudasset.assets.listContainerRolebinding",
      "cloudasset.assets.listContainerServices",
      "cloudasset.assets.listContainerregistryImage",
      "cloudasset.assets.listDataMigrationConnectionProfiles",
      "cloudasset.assets.listDataMigrationMigrationJobs",
      "cloudasset.assets.listDataflowJobs",
      "cloudasset.assets.listDatafusionInstance",
      "cloudasset.assets.listDataplexAssets",
      "cloudasset.assets.listDataplexLakes",
      "cloudasset.assets.listDataplexTasks",
      "cloudasset.assets.listDataplexZones",
      "cloudasset.assets.listDataprocAutoscalingPolicies",
      "cloudasset.assets.listDataprocBatches",
      "cloudasset.assets.listDataprocClusters",
      "cloudasset.assets.listDataprocJobs",
      "cloudasset.assets.listDataprocSessions",
      "cloudasset.assets.listDataprocWorkflowTemplates",
      "cloudasset.assets.listDatastreamConnectionProfile",
      "cloudasset.assets.listDatastreamPrivateConnection",
      "cloudasset.assets.listDatastreamStream",
      "cloudasset.assets.listDialogflowAgents",
      "cloudasset.assets.listDialogflowConversationProfiles",
      "cloudasset.assets.listDialogflowKnowledgeBases",
      "cloudasset.assets.listDialogflowLocationSettings",
      "cloudasset.assets.listDlpDeidentifyTemplates",
      "cloudasset.assets.listDlpDlpJobs",
      "cloudasset.assets.listDlpInspectTemplates",
      "cloudasset.assets.listDlpJobTriggers",
      "cloudasset.assets.listDlpStoredInfoTypes",
      "cloudasset.assets.listDnsManagedZones",
      "cloudasset.assets.listDnsPolicies",
      "cloudasset.assets.listDomainsRegistrations",
      "cloudasset.assets.listEventarcTriggers",
      "cloudasset.assets.listFileBackups",
      "cloudasset.assets.listFileInstances",
      "cloudasset.assets.listFirebaseAppInfos",
      "cloudasset.assets.listFirebaseProjects",
      "cloudasset.assets.listFirestoreDatabases",
      "cloudasset.assets.listGKEHubFeatures",
      "cloudasset.assets.listGKEHubMemberships",
      "cloudasset.assets.listGameservicesGameServerClusters",
      "cloudasset.assets.listGameservicesGameServerConfigs",
      "cloudasset.assets.listGameservicesGameServerDeployments",
      "cloudasset.assets.listGameservicesRealms",
      "cloudasset.assets.listGkeBackupBackupPlans",
      "cloudasset.assets.listGkeBackupBackups",
      "cloudasset.assets.listGkeBackupRestorePlans",
      "cloudasset.assets.listGkeBackupRestores",
      "cloudasset.assets.listGkeBackupVolumeBackups",
      "cloudasset.assets.listGkeBackupVolumeRestores",
      "cloudasset.assets.listHealthcareConsentStores",
      "cloudasset.assets.listHealthcareDatasets",
      "cloudasset.assets.listHealthcareDicomStores",
      "cloudasset.assets.listHealthcareFhirStores",
      "cloudasset.assets.listHealthcareHl7V2Stores",
      "cloudasset.assets.listIamPolicy",
      "cloudasset.assets.listIamRoles",
      "cloudasset.assets.listIamServiceAccountKeys",
      "cloudasset.assets.listIamServiceAccounts",
      "cloudasset.assets.listIapTunnel",
      "cloudasset.assets.listIapTunnelInstances",
      "cloudasset.assets.listIapTunnelZones",
      "cloudasset.assets.listIapWeb",
      "cloudasset.assets.listIapWebServiceVersion",
      "cloudasset.assets.listIapWebServices",
      "cloudasset.assets.listIapWebType",
      "cloudasset.assets.listIdsEndpoints",
      "cloudasset.assets.listIntegrationsAuthConfigs",
      "cloudasset.assets.listIntegrationsCertificates",
      "cloudasset.assets.listIntegrationsExecutions",
      "cloudasset.assets.listIntegrationsIntegrationVersions",
      "cloudasset.assets.listIntegrationsIntegrations",
      "cloudasset.assets.listIntegrationsSfdcChannels",
      "cloudasset.assets.listIntegrationsSfdcInstances",
      "cloudasset.assets.listIntegrationsSuspensions",
      "cloudasset.assets.listLoggingLogMetrics",
      "cloudasset.assets.listLoggingLogSinks",
      "cloudasset.assets.listManagedidentitiesDomain",
      "cloudasset.assets.listMetastoreBackups",
      "cloudasset.assets.listMetastoreMetadataImports",
      "cloudasset.assets.listMetastoreServices",
      "cloudasset.assets.listMonitoringAlertPolicies",
      "cloudasset.assets.listNetworkConnectivityHubs",
      "cloudasset.assets.listNetworkConnectivitySpokes",
      "cloudasset.assets.listNetworkManagementConnectivityTests",
      "cloudasset.assets.listNetworkServicesEndpointPolicies",
      "cloudasset.assets.listNetworkServicesGateways",
      "cloudasset.assets.listNetworkServicesGrpcRoutes",
      "cloudasset.assets.listNetworkServicesHttpRoutes",
      "cloudasset.assets.listNetworkServicesMeshes",
      "cloudasset.assets.listNetworkServicesServiceBindings",
      "cloudasset.assets.listNetworkServicesTcpRoutes",
      "cloudasset.assets.listNetworkServicesTlsRoutes",
      "cloudasset.assets.listOSConfigOSPolicyAssignmentReports",
      "cloudasset.assets.listOSConfigOSPolicyAssignments",
      "cloudasset.assets.listOSConfigVulnerabilityReports",
      "cloudasset.assets.listOSInventories",
      "cloudasset.assets.listOrgPolicy",
      "cloudasset.assets.listPatchDeployments",
      "cloudasset.assets.listPubsubSnapshots",
      "cloudasset.assets.listPubsubSubscriptions",
      "cloudasset.assets.listPubsubTopics",
      "cloudasset.assets.listRedisInstances",
      "cloudasset.assets.listResource",
      "cloudasset.assets.listRunDomainMapping",
      "cloudasset.assets.listRunRevision",
      "cloudasset.assets.listRunService",
      "cloudasset.assets.listSecretManagerSecretVersions",
      "cloudasset.assets.listSecretManagerSecrets",
      "cloudasset.assets.listServiceDirectoryNamespaces",
      "cloudasset.assets.listServicePerimeter",
      "cloudasset.assets.listServiceconsumermanagementConsumerProperty",
      "cloudasset.assets.listServiceconsumermanagementConsumerQuotaLimits",
      "cloudasset.assets.listServiceconsumermanagementConsumers",
      "cloudasset.assets.listServiceconsumermanagementProducerOverrides",
      "cloudasset.assets.listServiceconsumermanagementTenancyUnits",
      "cloudasset.assets.listServiceconsumermanagementVisibility",
      "cloudasset.assets.listServicemanagementServices",
      "cloudasset.assets.listServiceusageAdminOverrides",
      "cloudasset.assets.listServiceusageConsumerOverrides",
      "cloudasset.assets.listServiceusageServices",
      "cloudasset.assets.listSpannerBackups",
      "cloudasset.assets.listSpannerDatabases",
      "cloudasset.assets.listSpannerInstances",
      "cloudasset.assets.listSpeakerIdPhrases",
      "cloudasset.assets.listSpeakerIdSettings",
      "cloudasset.assets.listSpeakerIdSpeakers",
      "cloudasset.assets.listSpeechCustomClasses",
      "cloudasset.assets.listSpeechPhraseSets",
      "cloudasset.assets.listSqladminBackupRuns",
      "cloudasset.assets.listSqladminInstances",
      "cloudasset.assets.listStorageBuckets",
      "cloudasset.assets.listTpuNodes",
      "cloudasset.assets.listVpcaccessConnector",
      "cloudasset.assets.queryAccessPolicy",
      "cloudasset.assets.queryIamPolicy",
      "cloudasset.assets.queryOSInventories",
      "cloudasset.assets.queryResource",
      "cloudasset.assets.searchAllIamPolicies",
      "cloudasset.assets.searchAllResources",
      "recommender.cloudAssetInsights.get",
      "recommender.cloudAssetInsights.list",
      "recommender.locations.get",
      "recommender.locations.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudbuild.builds.approver",
    "title": "Cloud Build Approver",
    "description": "Can approve or reject pending builds.",
    "includedPermissions": [
      "cloudbuild.builds.approve",
      "cloudbuild.builds.get",
      "cloudbuild.builds.list",
      "cloudbuild.operations.get",
      "cloudbuild.operations.list",
      "remotebuildexecution.blobs.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudbuild.builds.builder",
    "title": "Cloud Build Service Account",
    "description": "Can perform builds",
    "includedPermissions": [
      "artifactregistry.aptartifacts.create",
      "artifactregistry.dockerimages.get",
      "artifactregistry.dockerimages.list",
      "artifactregistry.files.get",
      "artifactregistry.files.list",
      "artifactregistry.kfpartifacts.create",
      "artifactregistry.locations.get",
      "artifactregistry.locations.list",
      "artifactregistry.mavenartifacts.get",
      "artifactregistry.mavenartifacts.list",
      "artifactregistry.npmpackages.get",
      "artifactregistry.npmpackages.list",
      "artifactregistry.packages.get",
      "artifactregistry.packages.list",
      "artifactregistry.projectsettings.get",
      "artifactregistry.pythonpackages.get",
      "artifactregistry.pythonpackages.list",
      "artifactregistry.repositories.createOnPush",
      "artifactregistry.repositories.deleteArtifacts",
      "artifactregistry.repositories.downloadArtifacts",
      "artifactregistry.repositories.get",
      "artifactregistry.repositories.list",
      "artifactregistry.repositories.listEffectiveTags",
      "artifactregistry.repositories.listTagBindings",
      "artifactregistry.repositories.readViaVirtualRepository",
      "artifactregistry.repositories.uploadArtifacts",
      "artifactregistry.tags.create",
      "artifactregistry.tags.get",
      "artifactregistry.tags.list",
      "artifactregistry.tags.update",
      "artifactregistry.versions.get",
      "artifactregistry.versions.list",
      "artifactregistry.yumartifacts.create",
      "cloudbuild.builds.create",
      "cloudbuild.builds.get",
      "cloudbuild.builds.list",
      "cloudbuild.builds.update",
      "cloudbuild.operations.get",
      "cloudbuild.operations.list",
      "cloudbuild.workerpools.use",
      "containeranalysis.occurrences.create",
      "containeranalysis.occurrences.delete",
      "containeranalysis.occurrences.get",
      "containeranalysis.occurrences.list",
      "containeranalysis.occurrences.update",
      "logging.logEntries.create",
      "logging.logEntries.list",
      "logging.views.access",
      "pubsub.topics.create",
      "pubsub.topics.publish",
      "remotebuildexecution.blobs.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "source.repos.get",
      "source.repos.list",
      "storage.buckets.create",
      "storage.buckets.get",
      "storage.buckets.list",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudbuild.builds.editor",
    "title": "Cloud Build Editor",
    "description": "Can create and cancel builds",
    "includedPermissions": [
      "cloudbuild.builds.create",
      "cloudbuild.builds.get",
      "cloudbuild.builds.list",
      "cloudbuild.builds.update",
      "cloudbuild.operations.get",
      "cloudbuild.operations.list",
      "remotebuildexecution.blobs.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudbuild.builds.viewer",
    "title": "Cloud Build Viewer",
    "description": "Can view builds",
    "includedPermissions": [
      "cloudbuild.builds.get",
      "cloudbuild.builds.list",
      "cloudbuild.operations.get",
      "cloudbuild.operations.list",
      "remotebuildexecution.blobs.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudbuild.connectionAdmin",
    "title": "Cloud Build Connection Admin",
    "description": "Can manage connections and repositories.",
    "includedPermissions": [
      "cloudbuild.connections.create",
      "cloudbuild.connections.delete",
      "cloudbuild.connections.fetchLinkableRepositories",
      "cloudbuild.connections.get",
      "cloudbuild.connections.getIamPolicy",
      "cloudbuild.connections.list",
      "cloudbuild.connections.setIamPolicy",
      "cloudbuild.connections.update",
      "cloudbuild.operations.get",
      "cloudbuild.operations.list",
      "cloudbuild.repositories.create",
      "cloudbuild.repositories.delete",
      "cloudbuild.repositories.fetchGitRefs",
      "cloudbuild.repositories.get",
      "cloudbuild.repositories.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudbuild.connectionViewer",
    "title": "Cloud Build Connection Viewer",
    "description": "Can view and list connections and repositories.",
    "includedPermissions": [
      "cloudbuild.connections.fetchLinkableRepositories",
      "cloudbuild.connections.get",
      "cloudbuild.connections.getIamPolicy",
      "cloudbuild.connections.list",
      "cloudbuild.repositories.fetchGitRefs",
      "cloudbuild.repositories.get",
      "cloudbuild.repositories.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudbuild.integrationsEditor",
    "title": "Cloud Build Integrations Editor",
    "description": "Can update Integrations",
    "includedPermissions": [
      "cloudbuild.integrations.get",
      "cloudbuild.integrations.list",
      "cloudbuild.integrations.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudbuild.integrationsOwner",
    "title": "Cloud Build Integrations Owner",
    "description": "Can create/delete Integrations",
    "includedPermissions": [
      "cloudbuild.integrations.create",
      "cloudbuild.integrations.delete",
      "cloudbuild.integrations.get",
      "cloudbuild.integrations.list",
      "cloudbuild.integrations.update",
      "compute.firewalls.create",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.networks.get",
      "compute.networks.updatePolicy",
      "compute.regions.get",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudbuild.integrationsViewer",
    "title": "Cloud Build Integrations Viewer",
    "description": "Can view Integrations",
    "includedPermissions": [
      "cloudbuild.integrations.get",
      "cloudbuild.integrations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudbuild.loggingServiceAgent",
    "title": "Cloud Build Logging Service Agent",
    "description": "Gives the Cloud Build logging-specific service account access to write logs.",
    "includedPermissions": [
      "logging.buckets.write"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudbuild.readTokenAccessor",
    "title": "Cloud Build Read Only Token Accessor",
    "description": "Can view the connection and access its read-only token.",
    "includedPermissions": [
      "cloudbuild.connections.get",
      "cloudbuild.repositories.accessReadToken",
      "cloudbuild.repositories.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudbuild.serviceAgent",
    "title": "Cloud Build Service Agent",
    "description": "Gives Cloud Build service account access to managed resources.",
    "includedPermissions": [
      "artifactregistry.aptartifacts.create",
      "artifactregistry.dockerimages.get",
      "artifactregistry.dockerimages.list",
      "artifactregistry.files.get",
      "artifactregistry.files.list",
      "artifactregistry.kfpartifacts.create",
      "artifactregistry.locations.get",
      "artifactregistry.locations.list",
      "artifactregistry.mavenartifacts.get",
      "artifactregistry.mavenartifacts.list",
      "artifactregistry.npmpackages.get",
      "artifactregistry.npmpackages.list",
      "artifactregistry.packages.get",
      "artifactregistry.packages.list",
      "artifactregistry.projectsettings.get",
      "artifactregistry.pythonpackages.get",
      "artifactregistry.pythonpackages.list",
      "artifactregistry.repositories.createOnPush",
      "artifactregistry.repositories.deleteArtifacts",
      "artifactregistry.repositories.downloadArtifacts",
      "artifactregistry.repositories.get",
      "artifactregistry.repositories.list",
      "artifactregistry.repositories.listEffectiveTags",
      "artifactregistry.repositories.listTagBindings",
      "artifactregistry.repositories.readViaVirtualRepository",
      "artifactregistry.repositories.uploadArtifacts",
      "artifactregistry.tags.create",
      "artifactregistry.tags.get",
      "artifactregistry.tags.list",
      "artifactregistry.tags.update",
      "artifactregistry.versions.get",
      "artifactregistry.versions.list",
      "artifactregistry.yumartifacts.create",
      "binaryauthorization.attestors.create",
      "binaryauthorization.attestors.delete",
      "binaryauthorization.attestors.get",
      "binaryauthorization.attestors.list",
      "binaryauthorization.attestors.update",
      "binaryauthorization.attestors.verifyImageAttested",
      "cloudbuild.builds.create",
      "cloudbuild.builds.get",
      "cloudbuild.builds.list",
      "cloudbuild.builds.update",
      "cloudbuild.connections.get",
      "cloudbuild.operations.get",
      "cloudbuild.operations.list",
      "cloudbuild.repositories.accessReadToken",
      "cloudbuild.repositories.accessReadWriteToken",
      "cloudbuild.repositories.get",
      "cloudbuild.repositories.list",
      "cloudbuild.workerpools.use",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.networks.get",
      "compute.subnetworks.get",
      "containeranalysis.notes.attachOccurrence",
      "containeranalysis.notes.create",
      "containeranalysis.notes.delete",
      "containeranalysis.notes.get",
      "containeranalysis.notes.list",
      "containeranalysis.notes.update",
      "containeranalysis.occurrences.create",
      "containeranalysis.occurrences.delete",
      "containeranalysis.occurrences.get",
      "containeranalysis.occurrences.list",
      "containeranalysis.occurrences.update",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.getAccessToken",
      "iam.serviceAccounts.getOpenIdToken",
      "logging.buckets.create",
      "logging.buckets.get",
      "logging.buckets.list",
      "logging.logEntries.create",
      "logging.logEntries.list",
      "logging.views.access",
      "pubsub.subscriptions.create",
      "pubsub.subscriptions.delete",
      "pubsub.subscriptions.get",
      "pubsub.subscriptions.update",
      "pubsub.topics.attachSubscription",
      "pubsub.topics.create",
      "pubsub.topics.get",
      "pubsub.topics.publish",
      "remotebuildexecution.blobs.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "servicedirectory.endpoints.get",
      "servicedirectory.endpoints.getIamPolicy",
      "servicedirectory.endpoints.list",
      "servicedirectory.locations.get",
      "servicedirectory.locations.list",
      "servicedirectory.namespaces.get",
      "servicedirectory.namespaces.getIamPolicy",
      "servicedirectory.namespaces.list",
      "servicedirectory.networks.access",
      "servicedirectory.services.get",
      "servicedirectory.services.getIamPolicy",
      "servicedirectory.services.list",
      "servicedirectory.services.resolve",
      "serviceusage.services.use",
      "source.repos.get",
      "source.repos.list",
      "storage.buckets.create",
      "storage.buckets.get",
      "storage.buckets.list",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudbuild.tokenAccessor",
    "title": "Cloud Build Token Accessor",
    "description": "Can view the connection and access its read/write and read-only tokens.",
    "includedPermissions": [
      "cloudbuild.connections.get",
      "cloudbuild.repositories.accessReadToken",
      "cloudbuild.repositories.accessReadWriteToken",
      "cloudbuild.repositories.get",
      "cloudbuild.repositories.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudbuild.workerPoolEditor",
    "title": "Cloud Build WorkerPool Editor",
    "description": "Can update and view WorkerPools",
    "includedPermissions": [
      "cloudbuild.workerpools.get",
      "cloudbuild.workerpools.list",
      "cloudbuild.workerpools.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudbuild.workerPoolOwner",
    "title": "Cloud Build WorkerPool Owner",
    "description": "Can create, delete, update, and view WorkerPools",
    "includedPermissions": [
      "cloudbuild.workerpools.create",
      "cloudbuild.workerpools.delete",
      "cloudbuild.workerpools.get",
      "cloudbuild.workerpools.list",
      "cloudbuild.workerpools.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudbuild.workerPoolUser",
    "title": "Cloud Build WorkerPool User",
    "description": "Can run builds in the WorkerPool",
    "includedPermissions": [
      "cloudbuild.workerpools.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudbuild.workerPoolViewer",
    "title": "Cloud Build WorkerPool Viewer",
    "description": "Can view WorkerPools",
    "includedPermissions": [
      "cloudbuild.workerpools.get",
      "cloudbuild.workerpools.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudconfig.admin",
    "title": "Firebase Remote Config Admin",
    "description": "Full access to Firebase Remote Config resources.",
    "includedPermissions": [
      "cloudconfig.configs.get",
      "cloudconfig.configs.update",
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudconfig.serviceAgent",
    "title": "Cloud Config Service Agent",
    "description": "Gives Cloud Config account access to manage account resources. This includes CloudBuild and GCS.",
    "includedPermissions": [
      "cloudbuild.builds.create",
      "cloudbuild.builds.get",
      "cloudbuild.builds.list",
      "cloudbuild.builds.update",
      "cloudbuild.workerpools.use",
      "iam.serviceAccounts.actAs",
      "iam.serviceAccounts.getAccessToken",
      "logging.logEntries.create",
      "logging.logEntries.route",
      "serviceusage.services.use",
      "storage.buckets.create",
      "storage.buckets.delete",
      "storage.buckets.get",
      "storage.buckets.list",
      "storage.buckets.update",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudconfig.viewer",
    "title": "Firebase Remote Config Viewer",
    "description": "Read access to Firebase Remote Config resources.",
    "includedPermissions": [
      "cloudconfig.configs.get",
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudcontrolspartner.admin",
    "title": "Cloud Controls Partner Admin",
    "description": "Full access to Cloud Controls Partner resources.",
    "includedPermissions": [
      "cloudcontrolspartner.customers.list",
      "cloudcontrolspartner.ekmconnections.get",
      "cloudcontrolspartner.partners.get",
      "cloudcontrolspartner.violations.list",
      "cloudcontrolspartner.workloads.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudcontrolspartner.editor",
    "title": "Cloud Controls Partner Editor",
    "description": "Editor access to Cloud Controls Partner resources.",
    "includedPermissions": [
      "cloudcontrolspartner.customers.get",
      "cloudcontrolspartner.customers.list",
      "cloudcontrolspartner.ekmconnections.get",
      "cloudcontrolspartner.inspectabilityevents.get",
      "cloudcontrolspartner.partners.get",
      "cloudcontrolspartner.platformcontrols.get",
      "cloudcontrolspartner.violations.get",
      "cloudcontrolspartner.violations.list",
      "cloudcontrolspartner.workloads.get",
      "cloudcontrolspartner.workloads.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudcontrolspartner.ekmServiceAgent",
    "title": "Cloud Controls Partner EKM Service Agent",
    "description": "Gives Cloud Controls Partner service agent permission to list EKM connections, get EKM connection status, and provide EKM diagnostic information.",
    "includedPermissions": [
      "cloudkms.ekmConnections.get",
      "cloudkms.ekmConnections.getIamPolicy",
      "cloudkms.ekmConnections.list",
      "cloudkms.ekmConnections.verifyConnectivity"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudcontrolspartner.inspectabilityReader",
    "title": "Cloud Controls Partner Inspectability Reader",
    "description": "Readonly access to Cloud Controls Partner inspectability resources.",
    "includedPermissions": [
      "cloudcontrolspartner.customers.get",
      "cloudcontrolspartner.customers.list",
      "cloudcontrolspartner.inspectabilityevents.get",
      "cloudcontrolspartner.platformcontrols.get"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudcontrolspartner.monitoringReader",
    "title": "Cloud Controls Partner Monitoring Reader",
    "description": "Readonly access to Cloud Controls Partner monitoring resources.",
    "includedPermissions": [
      "cloudcontrolspartner.customers.get",
      "cloudcontrolspartner.customers.list",
      "cloudcontrolspartner.violations.get",
      "cloudcontrolspartner.violations.list",
      "cloudcontrolspartner.workloads.get",
      "cloudcontrolspartner.workloads.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudcontrolspartner.monitoringServiceAgent",
    "title": "Cloud Controls Partner Monitoring Service Agent",
    "description": "Gives Cloud Controls Partner monitoring service agent permission to view and list Assured Workload violations. The role is assigned to enable partner monitoring capability.",
    "includedPermissions": [
      "assuredworkloads.violations.get",
      "assuredworkloads.violations.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudcontrolspartner.reader",
    "title": "Cloud Controls Partner Reader",
    "description": "Readonly access to Cloud Controls Partner resources.",
    "includedPermissions": [
      "cloudcontrolspartner.customers.get",
      "cloudcontrolspartner.customers.list",
      "cloudcontrolspartner.ekmconnections.get",
      "cloudcontrolspartner.inspectabilityevents.get",
      "cloudcontrolspartner.partners.get",
      "cloudcontrolspartner.platformcontrols.get",
      "cloudcontrolspartner.violations.get",
      "cloudcontrolspartner.violations.list",
      "cloudcontrolspartner.workloads.get",
      "cloudcontrolspartner.workloads.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/clouddebugger.agent",
    "title": "Cloud Debugger Agent",
    "description": "Cloud Debugger agents are allowed to register and provide debug snapshot data.",
    "includedPermissions": [
      "clouddebugger.breakpoints.list",
      "clouddebugger.breakpoints.listActive",
      "clouddebugger.breakpoints.update",
      "clouddebugger.debuggees.create"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/clouddebugger.user",
    "title": "Cloud Debugger User",
    "description": "User Access to Cloud Debugger.  Can create, delete and view snapshots and logpoints.",
    "includedPermissions": [
      "clouddebugger.breakpoints.create",
      "clouddebugger.breakpoints.delete",
      "clouddebugger.breakpoints.get",
      "clouddebugger.breakpoints.list",
      "clouddebugger.debuggees.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/clouddeploy.admin",
    "title": "Cloud Deploy Admin",
    "description": "Full control of Cloud Deploy resources.",
    "includedPermissions": [
      "clouddeploy.config.get",
      "clouddeploy.deliveryPipelines.create",
      "clouddeploy.deliveryPipelines.delete",
      "clouddeploy.deliveryPipelines.get",
      "clouddeploy.deliveryPipelines.getIamPolicy",
      "clouddeploy.deliveryPipelines.list",
      "clouddeploy.deliveryPipelines.setIamPolicy",
      "clouddeploy.deliveryPipelines.update",
      "clouddeploy.jobRuns.get",
      "clouddeploy.jobRuns.list",
      "clouddeploy.jobRuns.terminate",
      "clouddeploy.locations.get",
      "clouddeploy.locations.list",
      "clouddeploy.operations.cancel",
      "clouddeploy.operations.delete",
      "clouddeploy.operations.get",
      "clouddeploy.operations.list",
      "clouddeploy.releases.abandon",
      "clouddeploy.releases.create",
      "clouddeploy.releases.delete",
      "clouddeploy.releases.get",
      "clouddeploy.releases.list",
      "clouddeploy.rollouts.advance",
      "clouddeploy.rollouts.approve",
      "clouddeploy.rollouts.cancel",
      "clouddeploy.rollouts.create",
      "clouddeploy.rollouts.get",
      "clouddeploy.rollouts.ignoreJob",
      "clouddeploy.rollouts.list",
      "clouddeploy.rollouts.retryJob",
      "clouddeploy.targets.create",
      "clouddeploy.targets.delete",
      "clouddeploy.targets.get",
      "clouddeploy.targets.getIamPolicy",
      "clouddeploy.targets.list",
      "clouddeploy.targets.setIamPolicy",
      "clouddeploy.targets.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/clouddeploy.approver",
    "title": "Cloud Deploy Approver",
    "description": "Permission to approve or reject rollouts.",
    "includedPermissions": [
      "clouddeploy.jobRuns.get",
      "clouddeploy.jobRuns.list",
      "clouddeploy.locations.get",
      "clouddeploy.locations.list",
      "clouddeploy.operations.cancel",
      "clouddeploy.operations.delete",
      "clouddeploy.operations.get",
      "clouddeploy.operations.list",
      "clouddeploy.rollouts.approve",
      "clouddeploy.rollouts.get",
      "clouddeploy.rollouts.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/clouddeploy.developer",
    "title": "Cloud Deploy Developer",
    "description": "Permission to manage deployment configuration without permission to access operational resources, such as targets.",
    "includedPermissions": [
      "clouddeploy.deliveryPipelines.create",
      "clouddeploy.deliveryPipelines.delete",
      "clouddeploy.deliveryPipelines.get",
      "clouddeploy.deliveryPipelines.getIamPolicy",
      "clouddeploy.deliveryPipelines.list",
      "clouddeploy.deliveryPipelines.update",
      "clouddeploy.jobRuns.get",
      "clouddeploy.jobRuns.list",
      "clouddeploy.locations.get",
      "clouddeploy.locations.list",
      "clouddeploy.operations.cancel",
      "clouddeploy.operations.delete",
      "clouddeploy.operations.get",
      "clouddeploy.operations.list",
      "clouddeploy.releases.abandon",
      "clouddeploy.releases.create",
      "clouddeploy.releases.delete",
      "clouddeploy.releases.get",
      "clouddeploy.releases.list",
      "clouddeploy.rollouts.get",
      "clouddeploy.rollouts.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/clouddeploy.jobRunner",
    "title": "Cloud Deploy Runner",
    "description": "Permission to execute Cloud Deploy work without permission to deliver to a target.",
    "includedPermissions": [
      "logging.logEntries.create",
      "storage.objects.create",
      "storage.objects.get",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/clouddeploy.operator",
    "title": "Cloud Deploy Operator",
    "description": "Permission to manage deployment configuration.",
    "includedPermissions": [
      "clouddeploy.deliveryPipelines.create",
      "clouddeploy.deliveryPipelines.delete",
      "clouddeploy.deliveryPipelines.get",
      "clouddeploy.deliveryPipelines.getIamPolicy",
      "clouddeploy.deliveryPipelines.list",
      "clouddeploy.deliveryPipelines.update",
      "clouddeploy.jobRuns.get",
      "clouddeploy.jobRuns.list",
      "clouddeploy.jobRuns.terminate",
      "clouddeploy.locations.get",
      "clouddeploy.locations.list",
      "clouddeploy.operations.cancel",
      "clouddeploy.operations.delete",
      "clouddeploy.operations.get",
      "clouddeploy.operations.list",
      "clouddeploy.releases.abandon",
      "clouddeploy.releases.create",
      "clouddeploy.releases.delete",
      "clouddeploy.releases.get",
      "clouddeploy.releases.list",
      "clouddeploy.rollouts.advance",
      "clouddeploy.rollouts.cancel",
      "clouddeploy.rollouts.create",
      "clouddeploy.rollouts.get",
      "clouddeploy.rollouts.ignoreJob",
      "clouddeploy.rollouts.list",
      "clouddeploy.rollouts.retryJob",
      "clouddeploy.targets.create",
      "clouddeploy.targets.delete",
      "clouddeploy.targets.get",
      "clouddeploy.targets.getIamPolicy",
      "clouddeploy.targets.list",
      "clouddeploy.targets.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/clouddeploy.releaser",
    "title": "Cloud Deploy Releaser",
    "description": "Permission to create Cloud Deploy releases and rollouts.",
    "includedPermissions": [
      "clouddeploy.deliveryPipelines.get",
      "clouddeploy.jobRuns.get",
      "clouddeploy.jobRuns.list",
      "clouddeploy.locations.get",
      "clouddeploy.locations.list",
      "clouddeploy.operations.cancel",
      "clouddeploy.operations.delete",
      "clouddeploy.operations.get",
      "clouddeploy.operations.list",
      "clouddeploy.releases.create",
      "clouddeploy.releases.get",
      "clouddeploy.releases.list",
      "clouddeploy.rollouts.advance",
      "clouddeploy.rollouts.cancel",
      "clouddeploy.rollouts.create",
      "clouddeploy.rollouts.get",
      "clouddeploy.rollouts.list",
      "clouddeploy.targets.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/clouddeploy.serviceAgent",
    "title": "Cloud Deploy Service Agent",
    "description": "Gives Cloud Deploy Service Account access to managed resources.",
    "includedPermissions": [
      "cloudbuild.builds.create",
      "cloudbuild.builds.get",
      "cloudbuild.builds.list",
      "cloudbuild.builds.update",
      "cloudbuild.workerpools.use",
      "iam.serviceAccounts.actAs",
      "logging.logEntries.create",
      "pubsub.topics.get",
      "pubsub.topics.publish",
      "servicemanagement.services.report",
      "serviceusage.services.use",
      "storage.buckets.create",
      "storage.buckets.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/clouddeploy.viewer",
    "title": "Cloud Deploy Viewer",
    "description": "Can view Cloud Deploy resources.",
    "includedPermissions": [
      "clouddeploy.config.get",
      "clouddeploy.deliveryPipelines.get",
      "clouddeploy.deliveryPipelines.getIamPolicy",
      "clouddeploy.deliveryPipelines.list",
      "clouddeploy.jobRuns.get",
      "clouddeploy.jobRuns.list",
      "clouddeploy.locations.get",
      "clouddeploy.locations.list",
      "clouddeploy.operations.get",
      "clouddeploy.operations.list",
      "clouddeploy.releases.get",
      "clouddeploy.releases.list",
      "clouddeploy.rollouts.get",
      "clouddeploy.rollouts.list",
      "clouddeploy.targets.get",
      "clouddeploy.targets.getIamPolicy",
      "clouddeploy.targets.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudfunctions.admin",
    "title": "Cloud Functions Admin",
    "description": "Full access to functions, operations and locations.",
    "includedPermissions": [
      "cloudbuild.builds.get",
      "cloudbuild.builds.list",
      "cloudbuild.operations.get",
      "cloudbuild.operations.list",
      "cloudfunctions.functions.call",
      "cloudfunctions.functions.create",
      "cloudfunctions.functions.delete",
      "cloudfunctions.functions.get",
      "cloudfunctions.functions.getIamPolicy",
      "cloudfunctions.functions.invoke",
      "cloudfunctions.functions.list",
      "cloudfunctions.functions.setIamPolicy",
      "cloudfunctions.functions.sourceCodeGet",
      "cloudfunctions.functions.sourceCodeSet",
      "cloudfunctions.functions.update",
      "cloudfunctions.locations.get",
      "cloudfunctions.locations.list",
      "cloudfunctions.operations.get",
      "cloudfunctions.operations.list",
      "cloudfunctions.runtimes.list",
      "eventarc.channelConnections.create",
      "eventarc.channelConnections.delete",
      "eventarc.channelConnections.get",
      "eventarc.channelConnections.getIamPolicy",
      "eventarc.channelConnections.list",
      "eventarc.channelConnections.publish",
      "eventarc.channelConnections.setIamPolicy",
      "eventarc.channels.attach",
      "eventarc.channels.create",
      "eventarc.channels.delete",
      "eventarc.channels.get",
      "eventarc.channels.getIamPolicy",
      "eventarc.channels.list",
      "eventarc.channels.publish",
      "eventarc.channels.setIamPolicy",
      "eventarc.channels.undelete",
      "eventarc.channels.update",
      "eventarc.events.receiveAuditLogWritten",
      "eventarc.events.receiveEvent",
      "eventarc.googleChannelConfigs.get",
      "eventarc.googleChannelConfigs.update",
      "eventarc.locations.get",
      "eventarc.locations.list",
      "eventarc.operations.cancel",
      "eventarc.operations.delete",
      "eventarc.operations.get",
      "eventarc.operations.list",
      "eventarc.providers.get",
      "eventarc.providers.list",
      "eventarc.triggers.create",
      "eventarc.triggers.delete",
      "eventarc.triggers.get",
      "eventarc.triggers.getIamPolicy",
      "eventarc.triggers.list",
      "eventarc.triggers.setIamPolicy",
      "eventarc.triggers.undelete",
      "eventarc.triggers.update",
      "recommender.cloudFunctionsPerformanceInsights.get",
      "recommender.cloudFunctionsPerformanceInsights.list",
      "recommender.cloudFunctionsPerformanceInsights.update",
      "recommender.cloudFunctionsPerformanceRecommendations.get",
      "recommender.cloudFunctionsPerformanceRecommendations.list",
      "recommender.cloudFunctionsPerformanceRecommendations.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.runServiceCostInsights.get",
      "recommender.runServiceCostInsights.list",
      "recommender.runServiceCostInsights.update",
      "recommender.runServiceCostRecommendations.get",
      "recommender.runServiceCostRecommendations.list",
      "recommender.runServiceCostRecommendations.update",
      "recommender.runServiceIdentityInsights.get",
      "recommender.runServiceIdentityInsights.list",
      "recommender.runServiceIdentityInsights.update",
      "recommender.runServiceIdentityRecommendations.get",
      "recommender.runServiceIdentityRecommendations.list",
      "recommender.runServiceIdentityRecommendations.update",
      "recommender.runServiceSecurityInsights.get",
      "recommender.runServiceSecurityInsights.list",
      "recommender.runServiceSecurityInsights.update",
      "recommender.runServiceSecurityRecommendations.get",
      "recommender.runServiceSecurityRecommendations.list",
      "recommender.runServiceSecurityRecommendations.update",
      "remotebuildexecution.blobs.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "run.configurations.get",
      "run.configurations.list",
      "run.executions.delete",
      "run.executions.get",
      "run.executions.list",
      "run.jobs.create",
      "run.jobs.delete",
      "run.jobs.get",
      "run.jobs.getIamPolicy",
      "run.jobs.list",
      "run.jobs.run",
      "run.jobs.runWithOverrides",
      "run.jobs.setIamPolicy",
      "run.jobs.update",
      "run.locations.list",
      "run.operations.delete",
      "run.operations.get",
      "run.operations.list",
      "run.revisions.delete",
      "run.revisions.get",
      "run.revisions.list",
      "run.routes.get",
      "run.routes.invoke",
      "run.routes.list",
      "run.services.create",
      "run.services.createTagBinding",
      "run.services.delete",
      "run.services.deleteTagBinding",
      "run.services.get",
      "run.services.getIamPolicy",
      "run.services.list",
      "run.services.listEffectiveTags",
      "run.services.listTagBindings",
      "run.services.setIamPolicy",
      "run.services.update",
      "run.tasks.get",
      "run.tasks.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudfunctions.developer",
    "title": "Cloud Functions Developer",
    "description": "Read and write access to all functions-related resources.",
    "includedPermissions": [
      "cloudbuild.builds.get",
      "cloudbuild.builds.list",
      "cloudbuild.operations.get",
      "cloudbuild.operations.list",
      "cloudfunctions.functions.call",
      "cloudfunctions.functions.create",
      "cloudfunctions.functions.delete",
      "cloudfunctions.functions.get",
      "cloudfunctions.functions.invoke",
      "cloudfunctions.functions.list",
      "cloudfunctions.functions.sourceCodeGet",
      "cloudfunctions.functions.sourceCodeSet",
      "cloudfunctions.functions.update",
      "cloudfunctions.locations.get",
      "cloudfunctions.locations.list",
      "cloudfunctions.operations.get",
      "cloudfunctions.operations.list",
      "cloudfunctions.runtimes.list",
      "eventarc.channelConnections.create",
      "eventarc.channelConnections.delete",
      "eventarc.channelConnections.get",
      "eventarc.channelConnections.getIamPolicy",
      "eventarc.channelConnections.list",
      "eventarc.channelConnections.publish",
      "eventarc.channels.attach",
      "eventarc.channels.create",
      "eventarc.channels.delete",
      "eventarc.channels.get",
      "eventarc.channels.getIamPolicy",
      "eventarc.channels.list",
      "eventarc.channels.publish",
      "eventarc.channels.undelete",
      "eventarc.channels.update",
      "eventarc.googleChannelConfigs.get",
      "eventarc.googleChannelConfigs.update",
      "eventarc.locations.get",
      "eventarc.locations.list",
      "eventarc.operations.cancel",
      "eventarc.operations.delete",
      "eventarc.operations.get",
      "eventarc.operations.list",
      "eventarc.providers.get",
      "eventarc.providers.list",
      "eventarc.triggers.create",
      "eventarc.triggers.delete",
      "eventarc.triggers.get",
      "eventarc.triggers.getIamPolicy",
      "eventarc.triggers.list",
      "eventarc.triggers.undelete",
      "eventarc.triggers.update",
      "recommender.cloudFunctionsPerformanceInsights.get",
      "recommender.cloudFunctionsPerformanceInsights.list",
      "recommender.cloudFunctionsPerformanceInsights.update",
      "recommender.cloudFunctionsPerformanceRecommendations.get",
      "recommender.cloudFunctionsPerformanceRecommendations.list",
      "recommender.cloudFunctionsPerformanceRecommendations.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.runServiceCostInsights.get",
      "recommender.runServiceCostInsights.list",
      "recommender.runServiceCostInsights.update",
      "recommender.runServiceCostRecommendations.get",
      "recommender.runServiceCostRecommendations.list",
      "recommender.runServiceCostRecommendations.update",
      "recommender.runServiceIdentityInsights.get",
      "recommender.runServiceIdentityInsights.list",
      "recommender.runServiceIdentityInsights.update",
      "recommender.runServiceIdentityRecommendations.get",
      "recommender.runServiceIdentityRecommendations.list",
      "recommender.runServiceIdentityRecommendations.update",
      "recommender.runServiceSecurityInsights.get",
      "recommender.runServiceSecurityInsights.list",
      "recommender.runServiceSecurityInsights.update",
      "recommender.runServiceSecurityRecommendations.get",
      "recommender.runServiceSecurityRecommendations.list",
      "recommender.runServiceSecurityRecommendations.update",
      "remotebuildexecution.blobs.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "run.configurations.get",
      "run.configurations.list",
      "run.executions.delete",
      "run.executions.get",
      "run.executions.list",
      "run.jobs.create",
      "run.jobs.delete",
      "run.jobs.get",
      "run.jobs.getIamPolicy",
      "run.jobs.list",
      "run.jobs.run",
      "run.jobs.runWithOverrides",
      "run.jobs.update",
      "run.locations.list",
      "run.operations.delete",
      "run.operations.get",
      "run.operations.list",
      "run.revisions.delete",
      "run.revisions.get",
      "run.revisions.list",
      "run.routes.get",
      "run.routes.invoke",
      "run.routes.list",
      "run.services.create",
      "run.services.delete",
      "run.services.get",
      "run.services.getIamPolicy",
      "run.services.list",
      "run.services.listEffectiveTags",
      "run.services.listTagBindings",
      "run.services.update",
      "run.tasks.get",
      "run.tasks.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudfunctions.invoker",
    "title": "Cloud Functions Invoker",
    "description": "Ability to invoke HTTP functions with restricted access.",
    "includedPermissions": [
      "cloudfunctions.functions.invoke"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudfunctions.serviceAgent",
    "title": "Cloud Functions Service Agent",
    "description": "Gives Cloud Functions service account access to managed resources.",
    "includedPermissions": [
      "artifactregistry.aptartifacts.create",
      "artifactregistry.dockerimages.get",
      "artifactregistry.dockerimages.list",
      "artifactregistry.files.get",
      "artifactregistry.files.list",
      "artifactregistry.kfpartifacts.create",
      "artifactregistry.locations.get",
      "artifactregistry.locations.list",
      "artifactregistry.mavenartifacts.get",
      "artifactregistry.mavenartifacts.list",
      "artifactregistry.npmpackages.get",
      "artifactregistry.npmpackages.list",
      "artifactregistry.packages.delete",
      "artifactregistry.packages.get",
      "artifactregistry.packages.list",
      "artifactregistry.projectsettings.get",
      "artifactregistry.projectsettings.update",
      "artifactregistry.pythonpackages.get",
      "artifactregistry.pythonpackages.list",
      "artifactregistry.repositories.create",
      "artifactregistry.repositories.createTagBinding",
      "artifactregistry.repositories.delete",
      "artifactregistry.repositories.deleteArtifacts",
      "artifactregistry.repositories.deleteTagBinding",
      "artifactregistry.repositories.downloadArtifacts",
      "artifactregistry.repositories.get",
      "artifactregistry.repositories.getIamPolicy",
      "artifactregistry.repositories.list",
      "artifactregistry.repositories.listEffectiveTags",
      "artifactregistry.repositories.listTagBindings",
      "artifactregistry.repositories.readViaVirtualRepository",
      "artifactregistry.repositories.setIamPolicy",
      "artifactregistry.repositories.update",
      "artifactregistry.repositories.uploadArtifacts",
      "artifactregistry.tags.create",
      "artifactregistry.tags.delete",
      "artifactregistry.tags.get",
      "artifactregistry.tags.list",
      "artifactregistry.tags.update",
      "artifactregistry.versions.delete",
      "artifactregistry.versions.get",
      "artifactregistry.versions.list",
      "artifactregistry.yumartifacts.create",
      "clientauthconfig.clients.list",
      "cloudbuild.builds.create",
      "cloudbuild.builds.get",
      "cloudbuild.builds.list",
      "cloudbuild.builds.update",
      "cloudbuild.operations.get",
      "cloudbuild.operations.list",
      "cloudbuild.workerpools.use",
      "cloudfunctions.functions.get",
      "cloudfunctions.functions.invoke",
      "cloudfunctions.functions.list",
      "cloudfunctions.operations.get",
      "cloudfunctions.operations.list",
      "compute.globalOperations.get",
      "compute.networks.access",
      "eventarc.channelConnections.create",
      "eventarc.channelConnections.delete",
      "eventarc.channelConnections.get",
      "eventarc.channelConnections.getIamPolicy",
      "eventarc.channelConnections.list",
      "eventarc.channelConnections.publish",
      "eventarc.channels.attach",
      "eventarc.channels.create",
      "eventarc.channels.delete",
      "eventarc.channels.get",
      "eventarc.channels.getIamPolicy",
      "eventarc.channels.list",
      "eventarc.channels.publish",
      "eventarc.channels.undelete",
      "eventarc.channels.update",
      "eventarc.googleChannelConfigs.get",
      "eventarc.googleChannelConfigs.update",
      "eventarc.locations.get",
      "eventarc.locations.list",
      "eventarc.operations.cancel",
      "eventarc.operations.delete",
      "eventarc.operations.get",
      "eventarc.operations.list",
      "eventarc.providers.get",
      "eventarc.providers.list",
      "eventarc.triggers.create",
      "eventarc.triggers.delete",
      "eventarc.triggers.get",
      "eventarc.triggers.getIamPolicy",
      "eventarc.triggers.list",
      "eventarc.triggers.undelete",
      "eventarc.triggers.update",
      "firebasedatabase.instances.get",
      "firebasedatabase.instances.update",
      "iam.serviceAccounts.actAs",
      "iam.serviceAccounts.getAccessToken",
      "iam.serviceAccounts.getOpenIdToken",
      "iam.serviceAccounts.signBlob",
      "pubsub.subscriptions.consume",
      "pubsub.subscriptions.create",
      "pubsub.subscriptions.delete",
      "pubsub.subscriptions.get",
      "pubsub.subscriptions.getIamPolicy",
      "pubsub.subscriptions.list",
      "pubsub.subscriptions.setIamPolicy",
      "pubsub.subscriptions.update",
      "pubsub.topics.attachSubscription",
      "pubsub.topics.create",
      "pubsub.topics.get",
      "pubsub.topics.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.runServiceCostInsights.get",
      "recommender.runServiceCostInsights.list",
      "recommender.runServiceCostInsights.update",
      "recommender.runServiceCostRecommendations.get",
      "recommender.runServiceCostRecommendations.list",
      "recommender.runServiceCostRecommendations.update",
      "recommender.runServiceIdentityInsights.get",
      "recommender.runServiceIdentityInsights.list",
      "recommender.runServiceIdentityInsights.update",
      "recommender.runServiceIdentityRecommendations.get",
      "recommender.runServiceIdentityRecommendations.list",
      "recommender.runServiceIdentityRecommendations.update",
      "recommender.runServiceSecurityInsights.get",
      "recommender.runServiceSecurityInsights.list",
      "recommender.runServiceSecurityInsights.update",
      "recommender.runServiceSecurityRecommendations.get",
      "recommender.runServiceSecurityRecommendations.list",
      "recommender.runServiceSecurityRecommendations.update",
      "remotebuildexecution.blobs.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list",
      "run.configurations.get",
      "run.configurations.list",
      "run.executions.delete",
      "run.executions.get",
      "run.executions.list",
      "run.jobs.create",
      "run.jobs.delete",
      "run.jobs.get",
      "run.jobs.getIamPolicy",
      "run.jobs.list",
      "run.jobs.run",
      "run.jobs.runWithOverrides",
      "run.jobs.update",
      "run.locations.list",
      "run.operations.delete",
      "run.operations.get",
      "run.operations.list",
      "run.revisions.delete",
      "run.revisions.get",
      "run.revisions.list",
      "run.routes.get",
      "run.routes.invoke",
      "run.routes.list",
      "run.services.create",
      "run.services.delete",
      "run.services.get",
      "run.services.getIamPolicy",
      "run.services.list",
      "run.services.listEffectiveTags",
      "run.services.listTagBindings",
      "run.services.update",
      "run.tasks.get",
      "run.tasks.list",
      "serviceusage.quotas.get",
      "serviceusage.services.disable",
      "serviceusage.services.enable",
      "serviceusage.services.use",
      "source.repos.get",
      "source.repos.list",
      "storage.buckets.create",
      "storage.buckets.delete",
      "storage.buckets.get",
      "storage.buckets.update",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list",
      "vpcaccess.connectors.get",
      "vpcaccess.connectors.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudfunctions.viewer",
    "title": "Cloud Functions Viewer",
    "description": "Read-only access to functions and locations.",
    "includedPermissions": [
      "cloudbuild.builds.get",
      "cloudbuild.builds.list",
      "cloudbuild.operations.get",
      "cloudbuild.operations.list",
      "cloudfunctions.functions.get",
      "cloudfunctions.functions.getIamPolicy",
      "cloudfunctions.functions.list",
      "cloudfunctions.locations.get",
      "cloudfunctions.locations.list",
      "cloudfunctions.operations.get",
      "cloudfunctions.operations.list",
      "cloudfunctions.runtimes.list",
      "eventarc.channelConnections.get",
      "eventarc.channelConnections.getIamPolicy",
      "eventarc.channelConnections.list",
      "eventarc.channels.get",
      "eventarc.channels.getIamPolicy",
      "eventarc.channels.list",
      "eventarc.googleChannelConfigs.get",
      "eventarc.locations.get",
      "eventarc.locations.list",
      "eventarc.operations.get",
      "eventarc.operations.list",
      "eventarc.providers.get",
      "eventarc.providers.list",
      "eventarc.triggers.get",
      "eventarc.triggers.getIamPolicy",
      "eventarc.triggers.list",
      "recommender.cloudFunctionsPerformanceInsights.get",
      "recommender.cloudFunctionsPerformanceInsights.list",
      "recommender.cloudFunctionsPerformanceRecommendations.get",
      "recommender.cloudFunctionsPerformanceRecommendations.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.runServiceCostInsights.get",
      "recommender.runServiceCostInsights.list",
      "recommender.runServiceCostRecommendations.get",
      "recommender.runServiceCostRecommendations.list",
      "recommender.runServiceIdentityInsights.get",
      "recommender.runServiceIdentityInsights.list",
      "recommender.runServiceIdentityRecommendations.get",
      "recommender.runServiceIdentityRecommendations.list",
      "recommender.runServiceSecurityInsights.get",
      "recommender.runServiceSecurityInsights.list",
      "recommender.runServiceSecurityRecommendations.get",
      "recommender.runServiceSecurityRecommendations.list",
      "remotebuildexecution.blobs.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "run.configurations.get",
      "run.configurations.list",
      "run.executions.get",
      "run.executions.list",
      "run.jobs.get",
      "run.jobs.getIamPolicy",
      "run.jobs.list",
      "run.locations.list",
      "run.operations.get",
      "run.operations.list",
      "run.revisions.get",
      "run.revisions.list",
      "run.routes.get",
      "run.routes.list",
      "run.services.get",
      "run.services.getIamPolicy",
      "run.services.list",
      "run.services.listEffectiveTags",
      "run.services.listTagBindings",
      "run.tasks.get",
      "run.tasks.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudiot.admin",
    "title": "Cloud IoT Admin",
    "description": "Full control of all Cloud IoT resources and permissions.",
    "includedPermissions": [
      "cloudiot.devices.bindGateway",
      "cloudiot.devices.create",
      "cloudiot.devices.delete",
      "cloudiot.devices.get",
      "cloudiot.devices.list",
      "cloudiot.devices.sendCommand",
      "cloudiot.devices.unbindGateway",
      "cloudiot.devices.update",
      "cloudiot.devices.updateConfig",
      "cloudiot.registries.create",
      "cloudiot.registries.delete",
      "cloudiot.registries.get",
      "cloudiot.registries.getIamPolicy",
      "cloudiot.registries.list",
      "cloudiot.registries.setIamPolicy",
      "cloudiot.registries.update",
      "cloudiottoken.tokensettings.get",
      "cloudiottoken.tokensettings.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudiot.deviceController",
    "title": "Cloud IoT Device Controller",
    "description": "Access to update the device configuration, but not to create or delete devices.",
    "includedPermissions": [
      "cloudiot.devices.get",
      "cloudiot.devices.list",
      "cloudiot.devices.sendCommand",
      "cloudiot.devices.updateConfig",
      "cloudiot.registries.get",
      "cloudiot.registries.list",
      "cloudiottoken.tokensettings.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudiot.editor",
    "title": "Cloud IoT Editor",
    "description": "Read-write access to all Cloud IoT resources.",
    "includedPermissions": [
      "cloudiot.devices.bindGateway",
      "cloudiot.devices.create",
      "cloudiot.devices.delete",
      "cloudiot.devices.get",
      "cloudiot.devices.list",
      "cloudiot.devices.sendCommand",
      "cloudiot.devices.unbindGateway",
      "cloudiot.devices.update",
      "cloudiot.devices.updateConfig",
      "cloudiot.registries.create",
      "cloudiot.registries.delete",
      "cloudiot.registries.get",
      "cloudiot.registries.list",
      "cloudiot.registries.update",
      "cloudiottoken.tokensettings.get",
      "cloudiottoken.tokensettings.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudiot.provisioner",
    "title": "Cloud IoT Provisioner",
    "description": "Access to create and delete devices from registries, but not to modify the registries, and enable devices to publish to topics associated with IoT registry.",
    "includedPermissions": [
      "cloudiot.devices.bindGateway",
      "cloudiot.devices.create",
      "cloudiot.devices.delete",
      "cloudiot.devices.get",
      "cloudiot.devices.list",
      "cloudiot.devices.sendCommand",
      "cloudiot.devices.unbindGateway",
      "cloudiot.devices.update",
      "cloudiot.devices.updateConfig",
      "cloudiot.registries.get",
      "cloudiot.registries.list",
      "cloudiottoken.tokensettings.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudiot.serviceAgent",
    "title": "Cloud IoT Core Service Agent",
    "description": "Grants the ability to manage Cloud IoT Core resources, including publishing data to Cloud Pub/Sub and writing device activity logs to Stackdriver. Warning: If this role is removed from the Cloud IoT service account, Cloud IoT Core will be unable to publish data or write device activity logs.",
    "includedPermissions": [
      "logging.logEntries.create",
      "logging.logEntries.route",
      "pubsub.topics.publish"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudiot.viewer",
    "title": "Cloud IoT Viewer",
    "description": "Read-only access to all Cloud IoT resources.",
    "includedPermissions": [
      "cloudiot.devices.get",
      "cloudiot.devices.list",
      "cloudiot.registries.get",
      "cloudiot.registries.list",
      "cloudiottoken.tokensettings.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudjobdiscovery.admin",
    "title": "Admin",
    "description": "Access to Cloud Talent Solution Self-Service Tools.",
    "includedPermissions": [
      "cloudjobdiscovery.tools.access",
      "iam.serviceAccounts.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudjobdiscovery.jobsEditor",
    "title": "Job Editor",
    "description": "Write access to all job data in Cloud Talent Solution.",
    "includedPermissions": [
      "cloudjobdiscovery.companies.create",
      "cloudjobdiscovery.companies.delete",
      "cloudjobdiscovery.companies.get",
      "cloudjobdiscovery.companies.list",
      "cloudjobdiscovery.companies.update",
      "cloudjobdiscovery.events.create",
      "cloudjobdiscovery.jobs.create",
      "cloudjobdiscovery.jobs.delete",
      "cloudjobdiscovery.jobs.get",
      "cloudjobdiscovery.jobs.search",
      "cloudjobdiscovery.jobs.update",
      "cloudjobdiscovery.tenants.create",
      "cloudjobdiscovery.tenants.delete",
      "cloudjobdiscovery.tenants.get",
      "cloudjobdiscovery.tenants.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudjobdiscovery.jobsViewer",
    "title": "Job Viewer",
    "description": "Read access to all job data in Cloud Talent Solution.",
    "includedPermissions": [
      "cloudjobdiscovery.companies.get",
      "cloudjobdiscovery.companies.list",
      "cloudjobdiscovery.jobs.get",
      "cloudjobdiscovery.jobs.search",
      "cloudjobdiscovery.tenants.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudjobdiscovery.profilesEditor",
    "title": "Profile Editor",
    "description": "Write access to all profile data in Cloud Talent Solution.",
    "includedPermissions": [
      "cloudjobdiscovery.events.create",
      "cloudjobdiscovery.profiles.create",
      "cloudjobdiscovery.profiles.delete",
      "cloudjobdiscovery.profiles.get",
      "cloudjobdiscovery.profiles.search",
      "cloudjobdiscovery.profiles.update",
      "cloudjobdiscovery.tenants.create",
      "cloudjobdiscovery.tenants.delete",
      "cloudjobdiscovery.tenants.get",
      "cloudjobdiscovery.tenants.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudjobdiscovery.profilesViewer",
    "title": "Profile Viewer",
    "description": "Read access to all profile data in Cloud Talent Solution.",
    "includedPermissions": [
      "cloudjobdiscovery.profiles.get",
      "cloudjobdiscovery.profiles.search",
      "cloudjobdiscovery.tenants.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudkms.admin",
    "title": "Cloud KMS Admin",
    "description": "Enables management of crypto resources.",
    "includedPermissions": [
      "cloudkms.cryptoKeyVersions.create",
      "cloudkms.cryptoKeyVersions.destroy",
      "cloudkms.cryptoKeyVersions.get",
      "cloudkms.cryptoKeyVersions.list",
      "cloudkms.cryptoKeyVersions.restore",
      "cloudkms.cryptoKeyVersions.update",
      "cloudkms.cryptoKeyVersions.useToDecryptViaDelegation",
      "cloudkms.cryptoKeyVersions.useToEncryptViaDelegation",
      "cloudkms.cryptoKeys.create",
      "cloudkms.cryptoKeys.get",
      "cloudkms.cryptoKeys.getIamPolicy",
      "cloudkms.cryptoKeys.list",
      "cloudkms.cryptoKeys.setIamPolicy",
      "cloudkms.cryptoKeys.update",
      "cloudkms.ekmConfigs.get",
      "cloudkms.ekmConfigs.getIamPolicy",
      "cloudkms.ekmConfigs.setIamPolicy",
      "cloudkms.ekmConfigs.update",
      "cloudkms.ekmConnections.create",
      "cloudkms.ekmConnections.get",
      "cloudkms.ekmConnections.getIamPolicy",
      "cloudkms.ekmConnections.list",
      "cloudkms.ekmConnections.setIamPolicy",
      "cloudkms.ekmConnections.update",
      "cloudkms.ekmConnections.use",
      "cloudkms.ekmConnections.verifyConnectivity",
      "cloudkms.importJobs.create",
      "cloudkms.importJobs.get",
      "cloudkms.importJobs.getIamPolicy",
      "cloudkms.importJobs.list",
      "cloudkms.importJobs.setIamPolicy",
      "cloudkms.importJobs.useToImport",
      "cloudkms.keyRings.create",
      "cloudkms.keyRings.createTagBinding",
      "cloudkms.keyRings.deleteTagBinding",
      "cloudkms.keyRings.get",
      "cloudkms.keyRings.getIamPolicy",
      "cloudkms.keyRings.list",
      "cloudkms.keyRings.listEffectiveTags",
      "cloudkms.keyRings.listTagBindings",
      "cloudkms.keyRings.setIamPolicy",
      "cloudkms.locations.get",
      "cloudkms.locations.list",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudkms.cryptoKeyDecrypter",
    "title": "Cloud KMS CryptoKey Decrypter",
    "description": "Enables Decrypt operations",
    "includedPermissions": [
      "cloudkms.cryptoKeyVersions.useToDecrypt",
      "cloudkms.locations.get",
      "cloudkms.locations.list",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudkms.cryptoKeyDecrypterViaDelegation",
    "title": "Cloud KMS CryptoKey Decrypter Via Delegation",
    "description": "Enables Decrypt operations via other GCP services",
    "includedPermissions": [
      "cloudkms.cryptoKeyVersions.useToDecryptViaDelegation",
      "cloudkms.locations.get",
      "cloudkms.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudkms.cryptoKeyEncrypter",
    "title": "Cloud KMS CryptoKey Encrypter",
    "description": "Enables Encrypt operations",
    "includedPermissions": [
      "cloudkms.cryptoKeyVersions.useToEncrypt",
      "cloudkms.locations.get",
      "cloudkms.locations.list",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudkms.cryptoKeyEncrypterDecrypter",
    "title": "Cloud KMS CryptoKey Encrypter/Decrypter",
    "description": "Enables Encrypt and Decrypt operations",
    "includedPermissions": [
      "cloudkms.cryptoKeyVersions.useToDecrypt",
      "cloudkms.cryptoKeyVersions.useToEncrypt",
      "cloudkms.locations.get",
      "cloudkms.locations.list",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudkms.cryptoKeyEncrypterDecrypterViaDelegation",
    "title": "Cloud KMS CryptoKey Encrypter/Decrypter Via Delegation",
    "description": "Enables Encrypt and Decrypt operations via other GCP services",
    "includedPermissions": [
      "cloudkms.cryptoKeyVersions.useToDecryptViaDelegation",
      "cloudkms.cryptoKeyVersions.useToEncryptViaDelegation",
      "cloudkms.locations.get",
      "cloudkms.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudkms.cryptoKeyEncrypterViaDelegation",
    "title": "Cloud KMS CryptoKey Encrypter Via Delegation",
    "description": "Enables Encrypt operations via other GCP services",
    "includedPermissions": [
      "cloudkms.cryptoKeyVersions.useToEncryptViaDelegation",
      "cloudkms.locations.get",
      "cloudkms.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudkms.cryptoOperator",
    "title": "Cloud KMS Crypto Operator",
    "description": "Enables all Crypto Operations.",
    "includedPermissions": [
      "cloudkms.cryptoKeyVersions.useToDecrypt",
      "cloudkms.cryptoKeyVersions.useToEncrypt",
      "cloudkms.cryptoKeyVersions.useToSign",
      "cloudkms.cryptoKeyVersions.useToVerify",
      "cloudkms.cryptoKeyVersions.viewPublicKey",
      "cloudkms.locations.generateRandomBytes",
      "cloudkms.locations.get",
      "cloudkms.locations.list",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudkms.ekmConnectionsAdmin",
    "title": "Cloud KMS EkmConnections Admin",
    "description": "Enables management of EkmConnections.",
    "includedPermissions": [
      "cloudkms.ekmConfigs.get",
      "cloudkms.ekmConfigs.update",
      "cloudkms.ekmConnections.create",
      "cloudkms.ekmConnections.get",
      "cloudkms.ekmConnections.list",
      "cloudkms.ekmConnections.update",
      "cloudkms.ekmConnections.verifyConnectivity",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudkms.expertRawAesCbc",
    "title": "Cloud KMS Expert Raw AES-CBC Key Manager",
    "description": "Enables raw AES-CBC keys management.",
    "includedPermissions": [
      "cloudkms.cryptoKeyVersions.manageRawAesCbcKeys",
      "cloudkms.locations.get",
      "cloudkms.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudkms.expertRawAesCtr",
    "title": "Cloud KMS Expert Raw AES-CTR Key Manager",
    "description": "Enables raw AES-CTR keys management.",
    "includedPermissions": [
      "cloudkms.cryptoKeyVersions.manageRawAesCtrKeys",
      "cloudkms.locations.get",
      "cloudkms.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudkms.expertRawPKCS1",
    "title": "Cloud KMS Expert Raw PKCS#1 Key Manager",
    "description": "Enables raw PKCS#1 keys management.",
    "includedPermissions": [
      "cloudkms.cryptoKeyVersions.manageRawPKCS1Keys",
      "cloudkms.locations.get",
      "cloudkms.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudkms.importer",
    "title": "Cloud KMS Importer",
    "description": "Enables ImportCryptoKeyVersion, CreateImportJob, ListImportJobs, and GetImportJob operations",
    "includedPermissions": [
      "cloudkms.importJobs.create",
      "cloudkms.importJobs.get",
      "cloudkms.importJobs.list",
      "cloudkms.importJobs.useToImport",
      "cloudkms.locations.get",
      "cloudkms.locations.list",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudkms.orgServiceAgent",
    "title": "Cloud KMS Organization Service Agent",
    "description": "Gives Cloud KMS organization-level service account access to managed resources.",
    "includedPermissions": [
      "cloudasset.assets.searchAllResources"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudkms.protectedResourcesViewer",
    "title": "Cloud KMS Protected Resources Viewer",
    "description": "Enables viewing protected resources.",
    "includedPermissions": [
      "cloudkms.protectedResources.search"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudkms.publicKeyViewer",
    "title": "Cloud KMS CryptoKey Public Key Viewer",
    "description": "Enables GetPublicKey operations",
    "includedPermissions": [
      "cloudkms.cryptoKeyVersions.viewPublicKey",
      "cloudkms.locations.get",
      "cloudkms.locations.list",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudkms.serviceAgent",
    "title": "Cloud KMS Service Agent",
    "description": "Gives Cloud KMS service account access to managed resources.",
    "includedPermissions": [
      "cloudasset.assets.listCloudkmsCryptoKeys"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudkms.signer",
    "title": "Cloud KMS CryptoKey Signer",
    "description": "Enables Sign operations",
    "includedPermissions": [
      "cloudkms.cryptoKeyVersions.useToSign",
      "cloudkms.locations.get",
      "cloudkms.locations.list",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudkms.signerVerifier",
    "title": "Cloud KMS CryptoKey Signer/Verifier",
    "description": "Enables Sign, Verify, and GetPublicKey operations",
    "includedPermissions": [
      "cloudkms.cryptoKeyVersions.useToSign",
      "cloudkms.cryptoKeyVersions.useToVerify",
      "cloudkms.cryptoKeyVersions.viewPublicKey",
      "cloudkms.locations.get",
      "cloudkms.locations.list",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudkms.verifier",
    "title": "Cloud KMS CryptoKey Verifier",
    "description": "Enables Verify and GetPublicKey operations",
    "includedPermissions": [
      "cloudkms.cryptoKeyVersions.useToVerify",
      "cloudkms.cryptoKeyVersions.viewPublicKey",
      "cloudkms.locations.get",
      "cloudkms.locations.list",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudkms.viewer",
    "title": "Cloud KMS Viewer",
    "description": "Enables Get and List operations.",
    "includedPermissions": [
      "cloudkms.cryptoKeyVersions.get",
      "cloudkms.cryptoKeyVersions.list",
      "cloudkms.cryptoKeys.get",
      "cloudkms.cryptoKeys.list",
      "cloudkms.ekmConfigs.get",
      "cloudkms.ekmConnections.get",
      "cloudkms.ekmConnections.list",
      "cloudkms.importJobs.get",
      "cloudkms.importJobs.list",
      "cloudkms.keyRings.get",
      "cloudkms.keyRings.list",
      "cloudkms.locations.get",
      "cloudkms.locations.list",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudmigration.inframanager",
    "title": "Velostrata Manager",
    "description": "Ability to create and manage Compute VMs to run Velostrata Infrastructure",
    "includedPermissions": [
      "cloudmigration.velostrataendpoints.connect",
      "compute.addresses.create",
      "compute.addresses.createInternal",
      "compute.addresses.delete",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.addresses.setLabels",
      "compute.addresses.use",
      "compute.addresses.useInternal",
      "compute.diskTypes.get",
      "compute.diskTypes.list",
      "compute.disks.create",
      "compute.disks.createSnapshot",
      "compute.disks.delete",
      "compute.disks.get",
      "compute.disks.list",
      "compute.disks.setLabels",
      "compute.disks.update",
      "compute.disks.use",
      "compute.disks.useReadOnly",
      "compute.globalOperations.get",
      "compute.images.get",
      "compute.images.list",
      "compute.images.useReadOnly",
      "compute.instances.attachDisk",
      "compute.instances.create",
      "compute.instances.delete",
      "compute.instances.detachDisk",
      "compute.instances.get",
      "compute.instances.getSerialPortOutput",
      "compute.instances.list",
      "compute.instances.reset",
      "compute.instances.setDiskAutoDelete",
      "compute.instances.setLabels",
      "compute.instances.setMachineType",
      "compute.instances.setMetadata",
      "compute.instances.setMinCpuPlatform",
      "compute.instances.setScheduling",
      "compute.instances.setServiceAccount",
      "compute.instances.setTags",
      "compute.instances.start",
      "compute.instances.startWithEncryptionKey",
      "compute.instances.stop",
      "compute.instances.update",
      "compute.instances.updateNetworkInterface",
      "compute.instances.updateShieldedInstanceConfig",
      "compute.instances.use",
      "compute.licenseCodes.get",
      "compute.licenseCodes.list",
      "compute.licenseCodes.update",
      "compute.licenseCodes.use",
      "compute.licenses.get",
      "compute.licenses.list",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.networks.get",
      "compute.networks.list",
      "compute.networks.use",
      "compute.networks.useExternalIp",
      "compute.nodeGroups.get",
      "compute.nodeGroups.list",
      "compute.nodeTemplates.list",
      "compute.projects.get",
      "compute.regionOperations.get",
      "compute.regions.get",
      "compute.regions.list",
      "compute.snapshots.create",
      "compute.snapshots.delete",
      "compute.snapshots.get",
      "compute.snapshots.setLabels",
      "compute.snapshots.useReadOnly",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.zoneOperations.get",
      "compute.zones.get",
      "compute.zones.list",
      "gkehub.endpoints.connect",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.list",
      "resourcemanager.projects.get",
      "storage.buckets.create",
      "storage.buckets.delete",
      "storage.buckets.get",
      "storage.buckets.list",
      "storage.buckets.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudmigration.storageaccess",
    "title": "Velostrata Storage Access",
    "description": "Ability to access migration storage",
    "includedPermissions": [
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list",
      "storage.objects.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudmigration.velostrataconnect",
    "title": "Velostrata Manager Connection Agent",
    "description": "Ability to set up connection between Velostrata Manager and Google",
    "includedPermissions": [
      "cloudmigration.velostrataendpoints.connect",
      "gkehub.endpoints.connect"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudoptimization.admin",
    "title": "Cloud Optimization AI Admin",
    "description": "Administrator of Cloud Optimization AI resources",
    "includedPermissions": [
      "cloudoptimization.operations.create",
      "cloudoptimization.operations.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudoptimization.editor",
    "title": "Cloud Optimization AI Editor",
    "description": "Editor of Cloud Optimization AI resources",
    "includedPermissions": [
      "cloudoptimization.operations.create",
      "cloudoptimization.operations.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudoptimization.serviceAgent",
    "title": "Cloud Optimization Service Agent",
    "description": "Grants Cloud Optimization Service Account access to read and write data in the user project.",
    "includedPermissions": [
      "storage.buckets.get",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudoptimization.viewer",
    "title": "Cloud Optimization AI Viewer",
    "description": "Viewer of Cloud Optimization AI resources",
    "includedPermissions": [
      "cloudoptimization.operations.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudprivatecatalog.consumer",
    "title": "Catalog Consumer",
    "description": "Can browse catalogs in the target resource context.",
    "includedPermissions": [
      "cloudprivatecatalog.targets.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudprivatecatalogproducer.admin",
    "title": "Catalog Admin",
    "description": "Can manage catalog and view its associations.",
    "includedPermissions": [
      "cloudprivatecatalog.targets.get",
      "cloudprivatecatalogproducer.associations.create",
      "cloudprivatecatalogproducer.associations.delete",
      "cloudprivatecatalogproducer.associations.get",
      "cloudprivatecatalogproducer.associations.list",
      "cloudprivatecatalogproducer.catalogAssociations.create",
      "cloudprivatecatalogproducer.catalogAssociations.delete",
      "cloudprivatecatalogproducer.catalogAssociations.get",
      "cloudprivatecatalogproducer.catalogAssociations.list",
      "cloudprivatecatalogproducer.catalogs.create",
      "cloudprivatecatalogproducer.catalogs.delete",
      "cloudprivatecatalogproducer.catalogs.get",
      "cloudprivatecatalogproducer.catalogs.getIamPolicy",
      "cloudprivatecatalogproducer.catalogs.list",
      "cloudprivatecatalogproducer.catalogs.setIamPolicy",
      "cloudprivatecatalogproducer.catalogs.undelete",
      "cloudprivatecatalogproducer.catalogs.update",
      "cloudprivatecatalogproducer.producerCatalogs.attachProduct",
      "cloudprivatecatalogproducer.producerCatalogs.create",
      "cloudprivatecatalogproducer.producerCatalogs.delete",
      "cloudprivatecatalogproducer.producerCatalogs.detachProduct",
      "cloudprivatecatalogproducer.producerCatalogs.get",
      "cloudprivatecatalogproducer.producerCatalogs.getIamPolicy",
      "cloudprivatecatalogproducer.producerCatalogs.list",
      "cloudprivatecatalogproducer.producerCatalogs.setIamPolicy",
      "cloudprivatecatalogproducer.producerCatalogs.update",
      "cloudprivatecatalogproducer.products.create",
      "cloudprivatecatalogproducer.products.delete",
      "cloudprivatecatalogproducer.products.get",
      "cloudprivatecatalogproducer.products.getIamPolicy",
      "cloudprivatecatalogproducer.products.list",
      "cloudprivatecatalogproducer.products.setIamPolicy",
      "cloudprivatecatalogproducer.products.update",
      "cloudprivatecatalogproducer.targets.associate",
      "cloudprivatecatalogproducer.targets.unassociate",
      "resourcemanager.folders.get",
      "resourcemanager.folders.list",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudprivatecatalogproducer.manager",
    "title": "Catalog Manager",
    "description": "Can manage associations between a catalog and a target resource.",
    "includedPermissions": [
      "cloudprivatecatalog.targets.get",
      "cloudprivatecatalogproducer.associations.create",
      "cloudprivatecatalogproducer.associations.delete",
      "cloudprivatecatalogproducer.associations.get",
      "cloudprivatecatalogproducer.associations.list",
      "cloudprivatecatalogproducer.catalogAssociations.create",
      "cloudprivatecatalogproducer.catalogAssociations.delete",
      "cloudprivatecatalogproducer.catalogAssociations.get",
      "cloudprivatecatalogproducer.catalogAssociations.list",
      "cloudprivatecatalogproducer.catalogs.get",
      "cloudprivatecatalogproducer.catalogs.list",
      "cloudprivatecatalogproducer.producerCatalogs.get",
      "cloudprivatecatalogproducer.producerCatalogs.list",
      "cloudprivatecatalogproducer.targets.associate",
      "cloudprivatecatalogproducer.targets.unassociate",
      "resourcemanager.folders.get",
      "resourcemanager.folders.list",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudprivatecatalogproducer.orgAdmin",
    "title": "Catalog Org Admin",
    "description": "Can manage catalog org settings.",
    "includedPermissions": [
      "cloudprivatecatalog.targets.get",
      "cloudprivatecatalogproducer.associations.create",
      "cloudprivatecatalogproducer.associations.delete",
      "cloudprivatecatalogproducer.associations.get",
      "cloudprivatecatalogproducer.associations.list",
      "cloudprivatecatalogproducer.catalogAssociations.create",
      "cloudprivatecatalogproducer.catalogAssociations.delete",
      "cloudprivatecatalogproducer.catalogAssociations.get",
      "cloudprivatecatalogproducer.catalogAssociations.list",
      "cloudprivatecatalogproducer.catalogs.create",
      "cloudprivatecatalogproducer.catalogs.delete",
      "cloudprivatecatalogproducer.catalogs.get",
      "cloudprivatecatalogproducer.catalogs.getIamPolicy",
      "cloudprivatecatalogproducer.catalogs.list",
      "cloudprivatecatalogproducer.catalogs.setIamPolicy",
      "cloudprivatecatalogproducer.catalogs.undelete",
      "cloudprivatecatalogproducer.catalogs.update",
      "cloudprivatecatalogproducer.producerCatalogs.attachProduct",
      "cloudprivatecatalogproducer.producerCatalogs.create",
      "cloudprivatecatalogproducer.producerCatalogs.delete",
      "cloudprivatecatalogproducer.producerCatalogs.detachProduct",
      "cloudprivatecatalogproducer.producerCatalogs.get",
      "cloudprivatecatalogproducer.producerCatalogs.getIamPolicy",
      "cloudprivatecatalogproducer.producerCatalogs.list",
      "cloudprivatecatalogproducer.producerCatalogs.setIamPolicy",
      "cloudprivatecatalogproducer.producerCatalogs.update",
      "cloudprivatecatalogproducer.products.create",
      "cloudprivatecatalogproducer.products.delete",
      "cloudprivatecatalogproducer.products.get",
      "cloudprivatecatalogproducer.products.getIamPolicy",
      "cloudprivatecatalogproducer.products.list",
      "cloudprivatecatalogproducer.products.setIamPolicy",
      "cloudprivatecatalogproducer.products.update",
      "cloudprivatecatalogproducer.settings.get",
      "cloudprivatecatalogproducer.settings.update",
      "cloudprivatecatalogproducer.targets.associate",
      "cloudprivatecatalogproducer.targets.unassociate",
      "commerceorggovernance.organizationSettings.get",
      "commerceorggovernance.organizationSettings.update",
      "resourcemanager.folders.get",
      "resourcemanager.folders.list",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudprofiler.agent",
    "title": "Cloud Profiler Agent",
    "description": "Cloud Profiler agents are allowed to register and provide the profiling data.",
    "includedPermissions": [
      "cloudprofiler.profiles.create",
      "cloudprofiler.profiles.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudprofiler.user",
    "title": "Cloud Profiler User",
    "description": "Cloud Profiler users are allowed to query and view the profiling data.",
    "includedPermissions": [
      "cloudprofiler.profiles.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudscheduler.admin",
    "title": "Cloud Scheduler Admin",
    "description": "Full access to jobs and executions.",
    "includedPermissions": [
      "appengine.applications.get",
      "cloudscheduler.jobs.create",
      "cloudscheduler.jobs.delete",
      "cloudscheduler.jobs.enable",
      "cloudscheduler.jobs.fullView",
      "cloudscheduler.jobs.get",
      "cloudscheduler.jobs.list",
      "cloudscheduler.jobs.pause",
      "cloudscheduler.jobs.run",
      "cloudscheduler.jobs.update",
      "cloudscheduler.locations.get",
      "cloudscheduler.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudscheduler.jobRunner",
    "title": "Cloud Scheduler Job Runner",
    "description": "Access to run jobs.",
    "includedPermissions": [
      "appengine.applications.get",
      "cloudscheduler.jobs.fullView",
      "cloudscheduler.jobs.run",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudscheduler.serviceAgent",
    "title": "Cloud Scheduler Service Agent",
    "description": "Grants Cloud Scheduler Service Account access to manage resources.",
    "includedPermissions": [
      "iam.serviceAccounts.getAccessToken",
      "iam.serviceAccounts.getOpenIdToken",
      "logging.logEntries.create",
      "logging.logEntries.route",
      "pubsub.topics.publish"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudscheduler.viewer",
    "title": "Cloud Scheduler Viewer",
    "description": "Get and list access to jobs, executions, and locations.",
    "includedPermissions": [
      "appengine.applications.get",
      "cloudscheduler.jobs.fullView",
      "cloudscheduler.jobs.get",
      "cloudscheduler.jobs.list",
      "cloudscheduler.locations.get",
      "cloudscheduler.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudsecurityscanner.editor",
    "title": "Web Security Scanner Editor",
    "description": "Full access to all Web Security Scanner resources",
    "includedPermissions": [
      "appengine.applications.get",
      "cloudsecurityscanner.crawledurls.list",
      "cloudsecurityscanner.results.get",
      "cloudsecurityscanner.results.list",
      "cloudsecurityscanner.scanruns.get",
      "cloudsecurityscanner.scanruns.getSummary",
      "cloudsecurityscanner.scanruns.list",
      "cloudsecurityscanner.scanruns.stop",
      "cloudsecurityscanner.scans.create",
      "cloudsecurityscanner.scans.delete",
      "cloudsecurityscanner.scans.get",
      "cloudsecurityscanner.scans.list",
      "cloudsecurityscanner.scans.run",
      "cloudsecurityscanner.scans.update",
      "compute.addresses.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudsecurityscanner.runner",
    "title": "Web Security Scanner Runner",
    "description": "Read access to Scan and ScanRun, plus the ability to start scans",
    "includedPermissions": [
      "cloudsecurityscanner.crawledurls.list",
      "cloudsecurityscanner.scanruns.get",
      "cloudsecurityscanner.scanruns.list",
      "cloudsecurityscanner.scanruns.stop",
      "cloudsecurityscanner.scans.get",
      "cloudsecurityscanner.scans.list",
      "cloudsecurityscanner.scans.run"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudsecurityscanner.viewer",
    "title": "Web Security Scanner Viewer",
    "description": "Read access to all Web Security Scanner resources",
    "includedPermissions": [
      "cloudsecurityscanner.crawledurls.list",
      "cloudsecurityscanner.results.get",
      "cloudsecurityscanner.results.list",
      "cloudsecurityscanner.scanruns.get",
      "cloudsecurityscanner.scanruns.getSummary",
      "cloudsecurityscanner.scanruns.list",
      "cloudsecurityscanner.scans.get",
      "cloudsecurityscanner.scans.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudsql.admin",
    "title": "Cloud SQL Admin",
    "description": "Full control of Cloud SQL resources.",
    "includedPermissions": [
      "cloudsql.backupRuns.create",
      "cloudsql.backupRuns.delete",
      "cloudsql.backupRuns.get",
      "cloudsql.backupRuns.list",
      "cloudsql.databases.create",
      "cloudsql.databases.delete",
      "cloudsql.databases.get",
      "cloudsql.databases.list",
      "cloudsql.databases.update",
      "cloudsql.instances.addServerCa",
      "cloudsql.instances.clone",
      "cloudsql.instances.connect",
      "cloudsql.instances.create",
      "cloudsql.instances.createTagBinding",
      "cloudsql.instances.delete",
      "cloudsql.instances.deleteTagBinding",
      "cloudsql.instances.demoteMaster",
      "cloudsql.instances.export",
      "cloudsql.instances.failover",
      "cloudsql.instances.get",
      "cloudsql.instances.getDiskShrinkConfig",
      "cloudsql.instances.import",
      "cloudsql.instances.list",
      "cloudsql.instances.listEffectiveTags",
      "cloudsql.instances.listServerCas",
      "cloudsql.instances.listTagBindings",
      "cloudsql.instances.login",
      "cloudsql.instances.migrate",
      "cloudsql.instances.performDiskShrink",
      "cloudsql.instances.promoteReplica",
      "cloudsql.instances.reencrypt",
      "cloudsql.instances.resetReplicaSize",
      "cloudsql.instances.resetSslConfig",
      "cloudsql.instances.restart",
      "cloudsql.instances.restoreBackup",
      "cloudsql.instances.rotateServerCa",
      "cloudsql.instances.startReplica",
      "cloudsql.instances.stopReplica",
      "cloudsql.instances.truncateLog",
      "cloudsql.instances.update",
      "cloudsql.sslCerts.create",
      "cloudsql.sslCerts.createEphemeral",
      "cloudsql.sslCerts.delete",
      "cloudsql.sslCerts.get",
      "cloudsql.sslCerts.list",
      "cloudsql.users.create",
      "cloudsql.users.delete",
      "cloudsql.users.get",
      "cloudsql.users.list",
      "cloudsql.users.update",
      "recommender.cloudsqlIdleInstanceRecommendations.get",
      "recommender.cloudsqlIdleInstanceRecommendations.list",
      "recommender.cloudsqlIdleInstanceRecommendations.update",
      "recommender.cloudsqlInstanceActivityInsights.get",
      "recommender.cloudsqlInstanceActivityInsights.list",
      "recommender.cloudsqlInstanceActivityInsights.update",
      "recommender.cloudsqlInstanceCpuUsageInsights.get",
      "recommender.cloudsqlInstanceCpuUsageInsights.list",
      "recommender.cloudsqlInstanceCpuUsageInsights.update",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.get",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.list",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.update",
      "recommender.cloudsqlInstanceMemoryUsageInsights.get",
      "recommender.cloudsqlInstanceMemoryUsageInsights.list",
      "recommender.cloudsqlInstanceMemoryUsageInsights.update",
      "recommender.cloudsqlInstanceOomProbabilityInsights.get",
      "recommender.cloudsqlInstanceOomProbabilityInsights.list",
      "recommender.cloudsqlInstanceOomProbabilityInsights.update",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.get",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.list",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.update",
      "recommender.cloudsqlInstancePerformanceInsights.get",
      "recommender.cloudsqlInstancePerformanceInsights.list",
      "recommender.cloudsqlInstancePerformanceInsights.update",
      "recommender.cloudsqlInstancePerformanceRecommendations.get",
      "recommender.cloudsqlInstancePerformanceRecommendations.list",
      "recommender.cloudsqlInstancePerformanceRecommendations.update",
      "recommender.cloudsqlInstanceReliabilityInsights.get",
      "recommender.cloudsqlInstanceReliabilityInsights.list",
      "recommender.cloudsqlInstanceReliabilityInsights.update",
      "recommender.cloudsqlInstanceReliabilityRecommendations.get",
      "recommender.cloudsqlInstanceReliabilityRecommendations.list",
      "recommender.cloudsqlInstanceReliabilityRecommendations.update",
      "recommender.cloudsqlInstanceSecurityInsights.get",
      "recommender.cloudsqlInstanceSecurityInsights.list",
      "recommender.cloudsqlInstanceSecurityInsights.update",
      "recommender.cloudsqlInstanceSecurityRecommendations.get",
      "recommender.cloudsqlInstanceSecurityRecommendations.list",
      "recommender.cloudsqlInstanceSecurityRecommendations.update",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.get",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.list",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.update",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.get",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.list",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.update",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.get",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.update",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.get",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.list",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudsql.client",
    "title": "Cloud SQL Client",
    "description": "Connectivity access to Cloud SQL instances.",
    "includedPermissions": [
      "cloudsql.instances.connect",
      "cloudsql.instances.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudsql.editor",
    "title": "Cloud SQL Editor",
    "description": "Full control of existing Cloud SQL instances excluding modifying users, SSL certificates or deleting resources.",
    "includedPermissions": [
      "cloudsql.backupRuns.create",
      "cloudsql.backupRuns.get",
      "cloudsql.backupRuns.list",
      "cloudsql.databases.create",
      "cloudsql.databases.get",
      "cloudsql.databases.list",
      "cloudsql.databases.update",
      "cloudsql.instances.addServerCa",
      "cloudsql.instances.connect",
      "cloudsql.instances.export",
      "cloudsql.instances.failover",
      "cloudsql.instances.get",
      "cloudsql.instances.getDiskShrinkConfig",
      "cloudsql.instances.list",
      "cloudsql.instances.listEffectiveTags",
      "cloudsql.instances.listServerCas",
      "cloudsql.instances.listTagBindings",
      "cloudsql.instances.migrate",
      "cloudsql.instances.performDiskShrink",
      "cloudsql.instances.reencrypt",
      "cloudsql.instances.resetReplicaSize",
      "cloudsql.instances.restart",
      "cloudsql.instances.rotateServerCa",
      "cloudsql.instances.truncateLog",
      "cloudsql.instances.update",
      "cloudsql.sslCerts.get",
      "cloudsql.sslCerts.list",
      "cloudsql.users.get",
      "cloudsql.users.list",
      "recommender.cloudsqlIdleInstanceRecommendations.get",
      "recommender.cloudsqlIdleInstanceRecommendations.list",
      "recommender.cloudsqlIdleInstanceRecommendations.update",
      "recommender.cloudsqlInstanceActivityInsights.get",
      "recommender.cloudsqlInstanceActivityInsights.list",
      "recommender.cloudsqlInstanceActivityInsights.update",
      "recommender.cloudsqlInstanceCpuUsageInsights.get",
      "recommender.cloudsqlInstanceCpuUsageInsights.list",
      "recommender.cloudsqlInstanceCpuUsageInsights.update",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.get",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.list",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.update",
      "recommender.cloudsqlInstanceMemoryUsageInsights.get",
      "recommender.cloudsqlInstanceMemoryUsageInsights.list",
      "recommender.cloudsqlInstanceMemoryUsageInsights.update",
      "recommender.cloudsqlInstanceOomProbabilityInsights.get",
      "recommender.cloudsqlInstanceOomProbabilityInsights.list",
      "recommender.cloudsqlInstanceOomProbabilityInsights.update",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.get",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.list",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.update",
      "recommender.cloudsqlInstancePerformanceInsights.get",
      "recommender.cloudsqlInstancePerformanceInsights.list",
      "recommender.cloudsqlInstancePerformanceInsights.update",
      "recommender.cloudsqlInstancePerformanceRecommendations.get",
      "recommender.cloudsqlInstancePerformanceRecommendations.list",
      "recommender.cloudsqlInstancePerformanceRecommendations.update",
      "recommender.cloudsqlInstanceReliabilityInsights.get",
      "recommender.cloudsqlInstanceReliabilityInsights.list",
      "recommender.cloudsqlInstanceReliabilityInsights.update",
      "recommender.cloudsqlInstanceReliabilityRecommendations.get",
      "recommender.cloudsqlInstanceReliabilityRecommendations.list",
      "recommender.cloudsqlInstanceReliabilityRecommendations.update",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.get",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.list",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.update",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.get",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.list",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.update",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.get",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.update",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.get",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.list",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudsql.instanceUser",
    "title": "Cloud SQL Instance User",
    "description": "Role allowing access to a Cloud SQL instance",
    "includedPermissions": [
      "cloudsql.instances.get",
      "cloudsql.instances.login"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudsql.serviceAgent",
    "title": "Cloud SQL Service Agent",
    "description": "Grants Cloud SQL access to services and APIs in the user project",
    "includedPermissions": [
      "cloudsql.instances.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudsql.viewer",
    "title": "Cloud SQL Viewer",
    "description": "Read-only access to Cloud SQL resources.",
    "includedPermissions": [
      "cloudsql.backupRuns.get",
      "cloudsql.backupRuns.list",
      "cloudsql.databases.get",
      "cloudsql.databases.list",
      "cloudsql.instances.export",
      "cloudsql.instances.get",
      "cloudsql.instances.getDiskShrinkConfig",
      "cloudsql.instances.list",
      "cloudsql.instances.listEffectiveTags",
      "cloudsql.instances.listServerCas",
      "cloudsql.instances.listTagBindings",
      "cloudsql.sslCerts.get",
      "cloudsql.sslCerts.list",
      "cloudsql.users.get",
      "cloudsql.users.list",
      "recommender.cloudsqlIdleInstanceRecommendations.get",
      "recommender.cloudsqlIdleInstanceRecommendations.list",
      "recommender.cloudsqlInstanceActivityInsights.get",
      "recommender.cloudsqlInstanceActivityInsights.list",
      "recommender.cloudsqlInstanceCpuUsageInsights.get",
      "recommender.cloudsqlInstanceCpuUsageInsights.list",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.get",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.list",
      "recommender.cloudsqlInstanceMemoryUsageInsights.get",
      "recommender.cloudsqlInstanceMemoryUsageInsights.list",
      "recommender.cloudsqlInstanceOomProbabilityInsights.get",
      "recommender.cloudsqlInstanceOomProbabilityInsights.list",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.get",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.list",
      "recommender.cloudsqlInstancePerformanceInsights.get",
      "recommender.cloudsqlInstancePerformanceInsights.list",
      "recommender.cloudsqlInstancePerformanceRecommendations.get",
      "recommender.cloudsqlInstancePerformanceRecommendations.list",
      "recommender.cloudsqlInstanceReliabilityInsights.get",
      "recommender.cloudsqlInstanceReliabilityInsights.list",
      "recommender.cloudsqlInstanceReliabilityRecommendations.get",
      "recommender.cloudsqlInstanceReliabilityRecommendations.list",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.get",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.list",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.get",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.list",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.get",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.get",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudsupport.admin",
    "title": "Support Account Administrator",
    "description": "Allows management of a support account without giving access to support cases.",
    "includedPermissions": [
      "cloudsupport.accounts.create",
      "cloudsupport.accounts.delete",
      "cloudsupport.accounts.get",
      "cloudsupport.accounts.getIamPolicy",
      "cloudsupport.accounts.getUserRoles",
      "cloudsupport.accounts.list",
      "cloudsupport.accounts.purchase",
      "cloudsupport.accounts.setIamPolicy",
      "cloudsupport.accounts.update",
      "cloudsupport.accounts.updateUserRoles",
      "cloudsupport.operations.get",
      "cloudsupport.properties.get",
      "resourcemanager.organizations.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudsupport.techSupportEditor",
    "title": "Tech Support Editor",
    "description": "Full read-write access to technical support cases (applicable for GCP Customer Care and Maps support).",
    "includedPermissions": [
      "cloudasset.assets.searchAllResources",
      "cloudsupport.properties.get",
      "cloudsupport.techCases.create",
      "cloudsupport.techCases.escalate",
      "cloudsupport.techCases.get",
      "cloudsupport.techCases.list",
      "cloudsupport.techCases.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudsupport.techSupportViewer",
    "title": "Tech Support Viewer",
    "description": "Read-only access to technical support cases (applicable for GCP Customer Care and Maps support).",
    "includedPermissions": [
      "cloudsupport.properties.get",
      "cloudsupport.techCases.get",
      "cloudsupport.techCases.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudsupport.viewer",
    "title": "Support Account Viewer",
    "description": "Read-only access to details of a support account. This does not allow viewing cases.",
    "includedPermissions": [
      "cloudsupport.accounts.get",
      "cloudsupport.accounts.getUserRoles",
      "cloudsupport.accounts.list",
      "cloudsupport.properties.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudtasks.admin",
    "title": "Cloud Tasks Admin",
    "description": "Full access to queues and tasks.",
    "includedPermissions": [
      "cloudtasks.locations.get",
      "cloudtasks.locations.list",
      "cloudtasks.queues.create",
      "cloudtasks.queues.delete",
      "cloudtasks.queues.get",
      "cloudtasks.queues.getIamPolicy",
      "cloudtasks.queues.list",
      "cloudtasks.queues.pause",
      "cloudtasks.queues.purge",
      "cloudtasks.queues.resume",
      "cloudtasks.queues.setIamPolicy",
      "cloudtasks.queues.update",
      "cloudtasks.tasks.create",
      "cloudtasks.tasks.delete",
      "cloudtasks.tasks.fullView",
      "cloudtasks.tasks.get",
      "cloudtasks.tasks.list",
      "cloudtasks.tasks.run",
      "monitoring.timeSeries.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudtasks.enqueuer",
    "title": "Cloud Tasks Enqueuer",
    "description": "Access to create tasks.",
    "includedPermissions": [
      "cloudtasks.tasks.create",
      "cloudtasks.tasks.fullView",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudtasks.queueAdmin",
    "title": "Cloud Tasks Queue Admin",
    "description": "Admin access to queues.",
    "includedPermissions": [
      "cloudtasks.locations.get",
      "cloudtasks.locations.list",
      "cloudtasks.queues.create",
      "cloudtasks.queues.delete",
      "cloudtasks.queues.get",
      "cloudtasks.queues.getIamPolicy",
      "cloudtasks.queues.list",
      "cloudtasks.queues.pause",
      "cloudtasks.queues.purge",
      "cloudtasks.queues.resume",
      "cloudtasks.queues.setIamPolicy",
      "cloudtasks.queues.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudtasks.serviceAgent",
    "title": "Cloud Tasks Service Agent",
    "description": "Grants Cloud Tasks Service Account access to manage resources.",
    "includedPermissions": [
      "iam.serviceAccounts.getAccessToken",
      "iam.serviceAccounts.getOpenIdToken",
      "logging.logEntries.create"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudtasks.taskDeleter",
    "title": "Cloud Tasks Task Deleter",
    "description": "Access to delete tasks.",
    "includedPermissions": [
      "cloudtasks.tasks.delete",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudtasks.taskRunner",
    "title": "Cloud Tasks Task Runner",
    "description": "Access to run tasks.",
    "includedPermissions": [
      "cloudtasks.tasks.fullView",
      "cloudtasks.tasks.run",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudtasks.viewer",
    "title": "Cloud Tasks Viewer",
    "description": "Get and list access to tasks, queues, and locations.",
    "includedPermissions": [
      "cloudtasks.locations.get",
      "cloudtasks.locations.list",
      "cloudtasks.queues.get",
      "cloudtasks.queues.list",
      "cloudtasks.tasks.fullView",
      "cloudtasks.tasks.get",
      "cloudtasks.tasks.list",
      "monitoring.timeSeries.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudtestservice.testAdmin",
    "title": "Firebase Test Lab Admin",
    "description": "Full access to all Test Lab features",
    "includedPermissions": [
      "cloudtestservice.environmentcatalog.get",
      "cloudtestservice.matrices.create",
      "cloudtestservice.matrices.get",
      "cloudtestservice.matrices.update",
      "cloudtoolresults.executions.create",
      "cloudtoolresults.executions.get",
      "cloudtoolresults.executions.list",
      "cloudtoolresults.executions.update",
      "cloudtoolresults.histories.create",
      "cloudtoolresults.histories.get",
      "cloudtoolresults.histories.list",
      "cloudtoolresults.settings.create",
      "cloudtoolresults.settings.get",
      "cloudtoolresults.settings.update",
      "cloudtoolresults.steps.create",
      "cloudtoolresults.steps.get",
      "cloudtoolresults.steps.list",
      "cloudtoolresults.steps.update",
      "firebase.billingPlans.get",
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storage.buckets.create",
      "storage.buckets.get",
      "storage.buckets.update",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudtestservice.testViewer",
    "title": "Firebase Test Lab Viewer",
    "description": "Read access to Test Lab features",
    "includedPermissions": [
      "cloudtestservice.environmentcatalog.get",
      "cloudtestservice.matrices.get",
      "cloudtoolresults.executions.get",
      "cloudtoolresults.executions.list",
      "cloudtoolresults.histories.get",
      "cloudtoolresults.histories.list",
      "cloudtoolresults.settings.get",
      "cloudtoolresults.steps.get",
      "cloudtoolresults.steps.list",
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storage.objects.get",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudtpu.serviceAgent",
    "title": "Cloud TPU V2 API Service Agent",
    "description": "Give Cloud TPUs service account access to managed resources",
    "includedPermissions": [
      "compute.acceleratorTypes.get",
      "compute.acceleratorTypes.list",
      "compute.addresses.create",
      "compute.addresses.createInternal",
      "compute.addresses.delete",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.addresses.setLabels",
      "compute.addresses.use",
      "compute.addresses.useInternal",
      "compute.autoscalers.create",
      "compute.autoscalers.delete",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.autoscalers.update",
      "compute.backendBuckets.addSignedUrlKey",
      "compute.backendBuckets.create",
      "compute.backendBuckets.createTagBinding",
      "compute.backendBuckets.delete",
      "compute.backendBuckets.deleteSignedUrlKey",
      "compute.backendBuckets.deleteTagBinding",
      "compute.backendBuckets.get",
      "compute.backendBuckets.getIamPolicy",
      "compute.backendBuckets.list",
      "compute.backendBuckets.listEffectiveTags",
      "compute.backendBuckets.listTagBindings",
      "compute.backendBuckets.setIamPolicy",
      "compute.backendBuckets.setSecurityPolicy",
      "compute.backendBuckets.update",
      "compute.backendBuckets.use",
      "compute.backendServices.addSignedUrlKey",
      "compute.backendServices.create",
      "compute.backendServices.createTagBinding",
      "compute.backendServices.delete",
      "compute.backendServices.deleteSignedUrlKey",
      "compute.backendServices.deleteTagBinding",
      "compute.backendServices.get",
      "compute.backendServices.getIamPolicy",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.backendServices.setIamPolicy",
      "compute.backendServices.setSecurityPolicy",
      "compute.backendServices.update",
      "compute.backendServices.use",
      "compute.diskTypes.get",
      "compute.diskTypes.list",
      "compute.disks.addResourcePolicies",
      "compute.disks.create",
      "compute.disks.createSnapshot",
      "compute.disks.createTagBinding",
      "compute.disks.delete",
      "compute.disks.deleteTagBinding",
      "compute.disks.get",
      "compute.disks.getIamPolicy",
      "compute.disks.list",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.disks.removeResourcePolicies",
      "compute.disks.resize",
      "compute.disks.setIamPolicy",
      "compute.disks.setLabels",
      "compute.disks.startAsyncReplication",
      "compute.disks.stopAsyncReplication",
      "compute.disks.stopGroupAsyncReplication",
      "compute.disks.update",
      "compute.disks.use",
      "compute.disks.useReadOnly",
      "compute.externalVpnGateways.create",
      "compute.externalVpnGateways.delete",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.list",
      "compute.externalVpnGateways.setLabels",
      "compute.externalVpnGateways.use",
      "compute.firewallPolicies.get",
      "compute.firewallPolicies.list",
      "compute.firewallPolicies.listEffectiveTags",
      "compute.firewallPolicies.listTagBindings",
      "compute.firewallPolicies.use",
      "compute.firewalls.create",
      "compute.firewalls.delete",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.firewalls.update",
      "compute.forwardingRules.create",
      "compute.forwardingRules.createTagBinding",
      "compute.forwardingRules.delete",
      "compute.forwardingRules.deleteTagBinding",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.forwardingRules.pscCreate",
      "compute.forwardingRules.pscDelete",
      "compute.forwardingRules.pscSetLabels",
      "compute.forwardingRules.pscSetTarget",
      "compute.forwardingRules.pscUpdate",
      "compute.forwardingRules.setLabels",
      "compute.forwardingRules.setTarget",
      "compute.forwardingRules.update",
      "compute.forwardingRules.use",
      "compute.globalAddresses.create",
      "compute.globalAddresses.createInternal",
      "compute.globalAddresses.delete",
      "compute.globalAddresses.deleteInternal",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalAddresses.setLabels",
      "compute.globalAddresses.use",
      "compute.globalForwardingRules.create",
      "compute.globalForwardingRules.createTagBinding",
      "compute.globalForwardingRules.delete",
      "compute.globalForwardingRules.deleteTagBinding",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalForwardingRules.pscCreate",
      "compute.globalForwardingRules.pscDelete",
      "compute.globalForwardingRules.pscGet",
      "compute.globalForwardingRules.pscSetLabels",
      "compute.globalForwardingRules.pscSetTarget",
      "compute.globalForwardingRules.pscUpdate",
      "compute.globalForwardingRules.setLabels",
      "compute.globalForwardingRules.setTarget",
      "compute.globalForwardingRules.update",
      "compute.globalNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.create",
      "compute.globalNetworkEndpointGroups.createTagBinding",
      "compute.globalNetworkEndpointGroups.delete",
      "compute.globalNetworkEndpointGroups.deleteTagBinding",
      "compute.globalNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.get",
      "compute.globalNetworkEndpointGroups.list",
      "compute.globalNetworkEndpointGroups.listEffectiveTags",
      "compute.globalNetworkEndpointGroups.listTagBindings",
      "compute.globalNetworkEndpointGroups.use",
      "compute.globalOperations.get",
      "compute.globalOperations.list",
      "compute.globalPublicDelegatedPrefixes.delete",
      "compute.globalPublicDelegatedPrefixes.get",
      "compute.globalPublicDelegatedPrefixes.list",
      "compute.globalPublicDelegatedPrefixes.update",
      "compute.globalPublicDelegatedPrefixes.updatePolicy",
      "compute.healthChecks.create",
      "compute.healthChecks.createTagBinding",
      "compute.healthChecks.delete",
      "compute.healthChecks.deleteTagBinding",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.healthChecks.update",
      "compute.healthChecks.use",
      "compute.healthChecks.useReadOnly",
      "compute.httpHealthChecks.create",
      "compute.httpHealthChecks.createTagBinding",
      "compute.httpHealthChecks.delete",
      "compute.httpHealthChecks.deleteTagBinding",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpHealthChecks.update",
      "compute.httpHealthChecks.use",
      "compute.httpHealthChecks.useReadOnly",
      "compute.httpsHealthChecks.create",
      "compute.httpsHealthChecks.createTagBinding",
      "compute.httpsHealthChecks.delete",
      "compute.httpsHealthChecks.deleteTagBinding",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.update",
      "compute.httpsHealthChecks.use",
      "compute.httpsHealthChecks.useReadOnly",
      "compute.images.create",
      "compute.images.createTagBinding",
      "compute.images.delete",
      "compute.images.deleteTagBinding",
      "compute.images.deprecate",
      "compute.images.get",
      "compute.images.getFromFamily",
      "compute.images.getIamPolicy",
      "compute.images.list",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.images.setIamPolicy",
      "compute.images.setLabels",
      "compute.images.update",
      "compute.images.useReadOnly",
      "compute.instanceGroupManagers.create",
      "compute.instanceGroupManagers.delete",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroupManagers.update",
      "compute.instanceGroupManagers.use",
      "compute.instanceGroups.create",
      "compute.instanceGroups.delete",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instanceGroups.update",
      "compute.instanceGroups.use",
      "compute.instanceTemplates.create",
      "compute.instanceTemplates.delete",
      "compute.instanceTemplates.get",
      "compute.instanceTemplates.getIamPolicy",
      "compute.instanceTemplates.list",
      "compute.instanceTemplates.setIamPolicy",
      "compute.instanceTemplates.useReadOnly",
      "compute.instances.addAccessConfig",
      "compute.instances.addMaintenancePolicies",
      "compute.instances.addResourcePolicies",
      "compute.instances.attachDisk",
      "compute.instances.create",
      "compute.instances.createTagBinding",
      "compute.instances.delete",
      "compute.instances.deleteAccessConfig",
      "compute.instances.deleteTagBinding",
      "compute.instances.detachDisk",
      "compute.instances.get",
      "compute.instances.getEffectiveFirewalls",
      "compute.instances.getGuestAttributes",
      "compute.instances.getIamPolicy",
      "compute.instances.getScreenshot",
      "compute.instances.getSerialPortOutput",
      "compute.instances.getShieldedInstanceIdentity",
      "compute.instances.getShieldedVmIdentity",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listReferrers",
      "compute.instances.listTagBindings",
      "compute.instances.osAdminLogin",
      "compute.instances.osLogin",
      "compute.instances.removeMaintenancePolicies",
      "compute.instances.removeResourcePolicies",
      "compute.instances.reset",
      "compute.instances.resume",
      "compute.instances.sendDiagnosticInterrupt",
      "compute.instances.setDeletionProtection",
      "compute.instances.setDiskAutoDelete",
      "compute.instances.setIamPolicy",
      "compute.instances.setLabels",
      "compute.instances.setMachineResources",
      "compute.instances.setMachineType",
      "compute.instances.setMetadata",
      "compute.instances.setMinCpuPlatform",
      "compute.instances.setName",
      "compute.instances.setScheduling",
      "compute.instances.setSecurityPolicy",
      "compute.instances.setServiceAccount",
      "compute.instances.setShieldedInstanceIntegrityPolicy",
      "compute.instances.setShieldedVmIntegrityPolicy",
      "compute.instances.setTags",
      "compute.instances.simulateMaintenanceEvent",
      "compute.instances.start",
      "compute.instances.startWithEncryptionKey",
      "compute.instances.stop",
      "compute.instances.suspend",
      "compute.instances.update",
      "compute.instances.updateAccessConfig",
      "compute.instances.updateDisplayDevice",
      "compute.instances.updateNetworkInterface",
      "compute.instances.updateSecurity",
      "compute.instances.updateShieldedInstanceConfig",
      "compute.instances.updateShieldedVmConfig",
      "compute.instances.use",
      "compute.instances.useReadOnly",
      "compute.instantSnapshots.create",
      "compute.instantSnapshots.delete",
      "compute.instantSnapshots.export",
      "compute.instantSnapshots.get",
      "compute.instantSnapshots.getIamPolicy",
      "compute.instantSnapshots.list",
      "compute.instantSnapshots.setIamPolicy",
      "compute.instantSnapshots.setLabels",
      "compute.instantSnapshots.useReadOnly",
      "compute.interconnectAttachments.create",
      "compute.interconnectAttachments.delete",
      "compute.interconnectAttachments.get",
      "compute.interconnectAttachments.list",
      "compute.interconnectAttachments.setLabels",
      "compute.interconnectAttachments.update",
      "compute.interconnectAttachments.use",
      "compute.interconnectLocations.get",
      "compute.interconnectLocations.list",
      "compute.interconnectRemoteLocations.get",
      "compute.interconnectRemoteLocations.list",
      "compute.interconnects.create",
      "compute.interconnects.delete",
      "compute.interconnects.get",
      "compute.interconnects.list",
      "compute.interconnects.setLabels",
      "compute.interconnects.update",
      "compute.interconnects.use",
      "compute.licenseCodes.get",
      "compute.licenseCodes.getIamPolicy",
      "compute.licenseCodes.list",
      "compute.licenseCodes.setIamPolicy",
      "compute.licenseCodes.update",
      "compute.licenseCodes.use",
      "compute.licenses.create",
      "compute.licenses.delete",
      "compute.licenses.get",
      "compute.licenses.getIamPolicy",
      "compute.licenses.list",
      "compute.licenses.setIamPolicy",
      "compute.machineImages.create",
      "compute.machineImages.delete",
      "compute.machineImages.get",
      "compute.machineImages.getIamPolicy",
      "compute.machineImages.list",
      "compute.machineImages.setIamPolicy",
      "compute.machineImages.useReadOnly",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.networkAttachments.create",
      "compute.networkAttachments.delete",
      "compute.networkAttachments.get",
      "compute.networkAttachments.getIamPolicy",
      "compute.networkAttachments.list",
      "compute.networkAttachments.setIamPolicy",
      "compute.networkEndpointGroups.attachNetworkEndpoints",
      "compute.networkEndpointGroups.create",
      "compute.networkEndpointGroups.createTagBinding",
      "compute.networkEndpointGroups.delete",
      "compute.networkEndpointGroups.deleteTagBinding",
      "compute.networkEndpointGroups.detachNetworkEndpoints",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.getIamPolicy",
      "compute.networkEndpointGroups.list",
      "compute.networkEndpointGroups.listEffectiveTags",
      "compute.networkEndpointGroups.listTagBindings",
      "compute.networkEndpointGroups.setIamPolicy",
      "compute.networkEndpointGroups.use",
      "compute.networks.access",
      "compute.networks.addPeering",
      "compute.networks.create",
      "compute.networks.createTagBinding",
      "compute.networks.delete",
      "compute.networks.deleteTagBinding",
      "compute.networks.get",
      "compute.networks.getEffectiveFirewalls",
      "compute.networks.getRegionEffectiveFirewalls",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listPeeringRoutes",
      "compute.networks.listTagBindings",
      "compute.networks.mirror",
      "compute.networks.removePeering",
      "compute.networks.setFirewallPolicy",
      "compute.networks.switchToCustomMode",
      "compute.networks.update",
      "compute.networks.updatePeering",
      "compute.networks.updatePolicy",
      "compute.networks.use",
      "compute.networks.useExternalIp",
      "compute.packetMirrorings.get",
      "compute.packetMirrorings.list",
      "compute.projects.get",
      "compute.projects.setCommonInstanceMetadata",
      "compute.publicDelegatedPrefixes.delete",
      "compute.publicDelegatedPrefixes.get",
      "compute.publicDelegatedPrefixes.list",
      "compute.publicDelegatedPrefixes.update",
      "compute.publicDelegatedPrefixes.updatePolicy",
      "compute.regionBackendServices.create",
      "compute.regionBackendServices.createTagBinding",
      "compute.regionBackendServices.delete",
      "compute.regionBackendServices.deleteTagBinding",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.getIamPolicy",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionBackendServices.setIamPolicy",
      "compute.regionBackendServices.setSecurityPolicy",
      "compute.regionBackendServices.update",
      "compute.regionBackendServices.use",
      "compute.regionFirewallPolicies.get",
      "compute.regionFirewallPolicies.list",
      "compute.regionFirewallPolicies.listEffectiveTags",
      "compute.regionFirewallPolicies.listTagBindings",
      "compute.regionFirewallPolicies.use",
      "compute.regionHealthCheckServices.create",
      "compute.regionHealthCheckServices.delete",
      "compute.regionHealthCheckServices.get",
      "compute.regionHealthCheckServices.list",
      "compute.regionHealthCheckServices.update",
      "compute.regionHealthCheckServices.use",
      "compute.regionHealthChecks.create",
      "compute.regionHealthChecks.createTagBinding",
      "compute.regionHealthChecks.delete",
      "compute.regionHealthChecks.deleteTagBinding",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionHealthChecks.update",
      "compute.regionHealthChecks.use",
      "compute.regionHealthChecks.useReadOnly",
      "compute.regionNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.create",
      "compute.regionNetworkEndpointGroups.createTagBinding",
      "compute.regionNetworkEndpointGroups.delete",
      "compute.regionNetworkEndpointGroups.deleteTagBinding",
      "compute.regionNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionNetworkEndpointGroups.listEffectiveTags",
      "compute.regionNetworkEndpointGroups.listTagBindings",
      "compute.regionNetworkEndpointGroups.use",
      "compute.regionNotificationEndpoints.create",
      "compute.regionNotificationEndpoints.delete",
      "compute.regionNotificationEndpoints.get",
      "compute.regionNotificationEndpoints.list",
      "compute.regionNotificationEndpoints.update",
      "compute.regionNotificationEndpoints.use",
      "compute.regionOperations.get",
      "compute.regionOperations.list",
      "compute.regionSecurityPolicies.get",
      "compute.regionSecurityPolicies.list",
      "compute.regionSecurityPolicies.listEffectiveTags",
      "compute.regionSecurityPolicies.listTagBindings",
      "compute.regionSecurityPolicies.use",
      "compute.regionSslCertificates.get",
      "compute.regionSslCertificates.list",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionSslPolicies.create",
      "compute.regionSslPolicies.delete",
      "compute.regionSslPolicies.get",
      "compute.regionSslPolicies.list",
      "compute.regionSslPolicies.listAvailableFeatures",
      "compute.regionSslPolicies.update",
      "compute.regionSslPolicies.use",
      "compute.regionTargetHttpProxies.create",
      "compute.regionTargetHttpProxies.createTagBinding",
      "compute.regionTargetHttpProxies.delete",
      "compute.regionTargetHttpProxies.deleteTagBinding",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpProxies.setUrlMap",
      "compute.regionTargetHttpProxies.update",
      "compute.regionTargetHttpProxies.use",
      "compute.regionTargetHttpsProxies.create",
      "compute.regionTargetHttpsProxies.createTagBinding",
      "compute.regionTargetHttpsProxies.delete",
      "compute.regionTargetHttpsProxies.deleteTagBinding",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.setSslCertificates",
      "compute.regionTargetHttpsProxies.setUrlMap",
      "compute.regionTargetHttpsProxies.update",
      "compute.regionTargetHttpsProxies.use",
      "compute.regionTargetTcpProxies.create",
      "compute.regionTargetTcpProxies.delete",
      "compute.regionTargetTcpProxies.get",
      "compute.regionTargetTcpProxies.list",
      "compute.regionTargetTcpProxies.use",
      "compute.regionUrlMaps.create",
      "compute.regionUrlMaps.createTagBinding",
      "compute.regionUrlMaps.delete",
      "compute.regionUrlMaps.deleteTagBinding",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.invalidateCache",
      "compute.regionUrlMaps.list",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.regionUrlMaps.update",
      "compute.regionUrlMaps.use",
      "compute.regionUrlMaps.validate",
      "compute.regions.get",
      "compute.regions.list",
      "compute.reservations.get",
      "compute.reservations.list",
      "compute.resourcePolicies.create",
      "compute.resourcePolicies.delete",
      "compute.resourcePolicies.get",
      "compute.resourcePolicies.getIamPolicy",
      "compute.resourcePolicies.list",
      "compute.resourcePolicies.setIamPolicy",
      "compute.resourcePolicies.update",
      "compute.resourcePolicies.use",
      "compute.resourcePolicies.useReadOnly",
      "compute.routers.create",
      "compute.routers.delete",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routers.update",
      "compute.routers.use",
      "compute.routes.create",
      "compute.routes.createTagBinding",
      "compute.routes.delete",
      "compute.routes.deleteTagBinding",
      "compute.routes.get",
      "compute.routes.list",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.securityPolicies.get",
      "compute.securityPolicies.list",
      "compute.securityPolicies.listEffectiveTags",
      "compute.securityPolicies.listTagBindings",
      "compute.securityPolicies.use",
      "compute.serviceAttachments.create",
      "compute.serviceAttachments.delete",
      "compute.serviceAttachments.get",
      "compute.serviceAttachments.getIamPolicy",
      "compute.serviceAttachments.list",
      "compute.serviceAttachments.setIamPolicy",
      "compute.serviceAttachments.update",
      "compute.serviceAttachments.use",
      "compute.snapshots.create",
      "compute.snapshots.createTagBinding",
      "compute.snapshots.delete",
      "compute.snapshots.deleteTagBinding",
      "compute.snapshots.get",
      "compute.snapshots.getIamPolicy",
      "compute.snapshots.list",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.snapshots.setIamPolicy",
      "compute.snapshots.setLabels",
      "compute.snapshots.useReadOnly",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.create",
      "compute.sslPolicies.createTagBinding",
      "compute.sslPolicies.delete",
      "compute.sslPolicies.deleteTagBinding",
      "compute.sslPolicies.get",
      "compute.sslPolicies.list",
      "compute.sslPolicies.listAvailableFeatures",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.sslPolicies.update",
      "compute.sslPolicies.use",
      "compute.subnetworks.create",
      "compute.subnetworks.createTagBinding",
      "compute.subnetworks.delete",
      "compute.subnetworks.deleteTagBinding",
      "compute.subnetworks.expandIpCidrRange",
      "compute.subnetworks.get",
      "compute.subnetworks.getIamPolicy",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.subnetworks.mirror",
      "compute.subnetworks.setIamPolicy",
      "compute.subnetworks.setPrivateIpGoogleAccess",
      "compute.subnetworks.update",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.targetGrpcProxies.create",
      "compute.targetGrpcProxies.delete",
      "compute.targetGrpcProxies.get",
      "compute.targetGrpcProxies.list",
      "compute.targetGrpcProxies.update",
      "compute.targetGrpcProxies.use",
      "compute.targetHttpProxies.create",
      "compute.targetHttpProxies.createTagBinding",
      "compute.targetHttpProxies.delete",
      "compute.targetHttpProxies.deleteTagBinding",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpProxies.setUrlMap",
      "compute.targetHttpProxies.update",
      "compute.targetHttpProxies.use",
      "compute.targetHttpsProxies.create",
      "compute.targetHttpsProxies.createTagBinding",
      "compute.targetHttpsProxies.delete",
      "compute.targetHttpsProxies.deleteTagBinding",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetHttpsProxies.setCertificateMap",
      "compute.targetHttpsProxies.setQuicOverride",
      "compute.targetHttpsProxies.setSslCertificates",
      "compute.targetHttpsProxies.setSslPolicy",
      "compute.targetHttpsProxies.setUrlMap",
      "compute.targetHttpsProxies.update",
      "compute.targetHttpsProxies.use",
      "compute.targetInstances.create",
      "compute.targetInstances.createTagBinding",
      "compute.targetInstances.delete",
      "compute.targetInstances.deleteTagBinding",
      "compute.targetInstances.get",
      "compute.targetInstances.list",
      "compute.targetInstances.listEffectiveTags",
      "compute.targetInstances.listTagBindings",
      "compute.targetInstances.setSecurityPolicy",
      "compute.targetInstances.use",
      "compute.targetPools.addHealthCheck",
      "compute.targetPools.addInstance",
      "compute.targetPools.create",
      "compute.targetPools.createTagBinding",
      "compute.targetPools.delete",
      "compute.targetPools.deleteTagBinding",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.targetPools.removeHealthCheck",
      "compute.targetPools.removeInstance",
      "compute.targetPools.setSecurityPolicy",
      "compute.targetPools.update",
      "compute.targetPools.use",
      "compute.targetSslProxies.create",
      "compute.targetSslProxies.createTagBinding",
      "compute.targetSslProxies.delete",
      "compute.targetSslProxies.deleteTagBinding",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetSslProxies.listEffectiveTags",
      "compute.targetSslProxies.listTagBindings",
      "compute.targetSslProxies.setBackendService",
      "compute.targetSslProxies.setCertificateMap",
      "compute.targetSslProxies.setProxyHeader",
      "compute.targetSslProxies.setSslCertificates",
      "compute.targetSslProxies.setSslPolicy",
      "compute.targetSslProxies.update",
      "compute.targetSslProxies.use",
      "compute.targetTcpProxies.create",
      "compute.targetTcpProxies.createTagBinding",
      "compute.targetTcpProxies.delete",
      "compute.targetTcpProxies.deleteTagBinding",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.targetTcpProxies.update",
      "compute.targetTcpProxies.use",
      "compute.targetVpnGateways.create",
      "compute.targetVpnGateways.delete",
      "compute.targetVpnGateways.get",
      "compute.targetVpnGateways.list",
      "compute.targetVpnGateways.setLabels",
      "compute.targetVpnGateways.use",
      "compute.urlMaps.create",
      "compute.urlMaps.createTagBinding",
      "compute.urlMaps.delete",
      "compute.urlMaps.deleteTagBinding",
      "compute.urlMaps.get",
      "compute.urlMaps.invalidateCache",
      "compute.urlMaps.list",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "compute.urlMaps.update",
      "compute.urlMaps.use",
      "compute.urlMaps.validate",
      "compute.vpnGateways.create",
      "compute.vpnGateways.delete",
      "compute.vpnGateways.get",
      "compute.vpnGateways.list",
      "compute.vpnGateways.setLabels",
      "compute.vpnGateways.use",
      "compute.vpnTunnels.create",
      "compute.vpnTunnels.delete",
      "compute.vpnTunnels.get",
      "compute.vpnTunnels.list",
      "compute.vpnTunnels.setLabels",
      "compute.zoneOperations.get",
      "compute.zoneOperations.list",
      "compute.zones.get",
      "compute.zones.list",
      "iam.serviceAccounts.actAs",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.list",
      "logging.logEntries.create",
      "logging.logEntries.route",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.timeSeries.create",
      "networkconnectivity.internalRanges.create",
      "networkconnectivity.internalRanges.delete",
      "networkconnectivity.internalRanges.get",
      "networkconnectivity.internalRanges.getIamPolicy",
      "networkconnectivity.internalRanges.list",
      "networkconnectivity.internalRanges.setIamPolicy",
      "networkconnectivity.internalRanges.update",
      "networkconnectivity.locations.get",
      "networkconnectivity.locations.list",
      "networkconnectivity.operations.cancel",
      "networkconnectivity.operations.delete",
      "networkconnectivity.operations.get",
      "networkconnectivity.operations.list",
      "networkconnectivity.policyBasedRoutes.create",
      "networkconnectivity.policyBasedRoutes.delete",
      "networkconnectivity.policyBasedRoutes.get",
      "networkconnectivity.policyBasedRoutes.getIamPolicy",
      "networkconnectivity.policyBasedRoutes.list",
      "networkconnectivity.policyBasedRoutes.setIamPolicy",
      "networkconnectivity.serviceClasses.create",
      "networkconnectivity.serviceClasses.delete",
      "networkconnectivity.serviceClasses.get",
      "networkconnectivity.serviceClasses.list",
      "networkconnectivity.serviceClasses.update",
      "networkconnectivity.serviceClasses.use",
      "networkconnectivity.serviceConnectionMaps.create",
      "networkconnectivity.serviceConnectionMaps.delete",
      "networkconnectivity.serviceConnectionMaps.get",
      "networkconnectivity.serviceConnectionMaps.list",
      "networkconnectivity.serviceConnectionMaps.update",
      "networkconnectivity.serviceConnectionPolicies.create",
      "networkconnectivity.serviceConnectionPolicies.delete",
      "networkconnectivity.serviceConnectionPolicies.get",
      "networkconnectivity.serviceConnectionPolicies.list",
      "networkconnectivity.serviceConnectionPolicies.update",
      "networksecurity.authorizationPolicies.create",
      "networksecurity.authorizationPolicies.delete",
      "networksecurity.authorizationPolicies.get",
      "networksecurity.authorizationPolicies.getIamPolicy",
      "networksecurity.authorizationPolicies.list",
      "networksecurity.authorizationPolicies.setIamPolicy",
      "networksecurity.authorizationPolicies.update",
      "networksecurity.authorizationPolicies.use",
      "networksecurity.clientTlsPolicies.create",
      "networksecurity.clientTlsPolicies.delete",
      "networksecurity.clientTlsPolicies.get",
      "networksecurity.clientTlsPolicies.getIamPolicy",
      "networksecurity.clientTlsPolicies.list",
      "networksecurity.clientTlsPolicies.setIamPolicy",
      "networksecurity.clientTlsPolicies.update",
      "networksecurity.clientTlsPolicies.use",
      "networksecurity.firewallEndpointAssociations.create",
      "networksecurity.firewallEndpointAssociations.delete",
      "networksecurity.firewallEndpointAssociations.get",
      "networksecurity.firewallEndpointAssociations.list",
      "networksecurity.firewallEndpointAssociations.update",
      "networksecurity.firewallEndpoints.create",
      "networksecurity.firewallEndpoints.delete",
      "networksecurity.firewallEndpoints.get",
      "networksecurity.firewallEndpoints.list",
      "networksecurity.firewallEndpoints.update",
      "networksecurity.firewallEndpoints.use",
      "networksecurity.gatewaySecurityPolicies.create",
      "networksecurity.gatewaySecurityPolicies.delete",
      "networksecurity.gatewaySecurityPolicies.get",
      "networksecurity.gatewaySecurityPolicies.list",
      "networksecurity.gatewaySecurityPolicies.update",
      "networksecurity.gatewaySecurityPolicies.use",
      "networksecurity.gatewaySecurityPolicyRules.create",
      "networksecurity.gatewaySecurityPolicyRules.delete",
      "networksecurity.gatewaySecurityPolicyRules.get",
      "networksecurity.gatewaySecurityPolicyRules.list",
      "networksecurity.gatewaySecurityPolicyRules.update",
      "networksecurity.gatewaySecurityPolicyRules.use",
      "networksecurity.locations.get",
      "networksecurity.locations.list",
      "networksecurity.operations.cancel",
      "networksecurity.operations.delete",
      "networksecurity.operations.get",
      "networksecurity.operations.list",
      "networksecurity.securityProfileGroups.create",
      "networksecurity.securityProfileGroups.delete",
      "networksecurity.securityProfileGroups.get",
      "networksecurity.securityProfileGroups.list",
      "networksecurity.securityProfileGroups.update",
      "networksecurity.securityProfileGroups.use",
      "networksecurity.securityProfiles.create",
      "networksecurity.securityProfiles.delete",
      "networksecurity.securityProfiles.get",
      "networksecurity.securityProfiles.list",
      "networksecurity.securityProfiles.update",
      "networksecurity.securityProfiles.use",
      "networksecurity.serverTlsPolicies.create",
      "networksecurity.serverTlsPolicies.delete",
      "networksecurity.serverTlsPolicies.get",
      "networksecurity.serverTlsPolicies.getIamPolicy",
      "networksecurity.serverTlsPolicies.list",
      "networksecurity.serverTlsPolicies.setIamPolicy",
      "networksecurity.serverTlsPolicies.update",
      "networksecurity.serverTlsPolicies.use",
      "networksecurity.tlsInspectionPolicies.create",
      "networksecurity.tlsInspectionPolicies.delete",
      "networksecurity.tlsInspectionPolicies.get",
      "networksecurity.tlsInspectionPolicies.list",
      "networksecurity.tlsInspectionPolicies.update",
      "networksecurity.tlsInspectionPolicies.use",
      "networksecurity.urlLists.create",
      "networksecurity.urlLists.delete",
      "networksecurity.urlLists.get",
      "networksecurity.urlLists.list",
      "networksecurity.urlLists.update",
      "networksecurity.urlLists.use",
      "networkservices.endpointConfigSelectors.create",
      "networkservices.endpointConfigSelectors.delete",
      "networkservices.endpointConfigSelectors.get",
      "networkservices.endpointConfigSelectors.getIamPolicy",
      "networkservices.endpointConfigSelectors.list",
      "networkservices.endpointConfigSelectors.setIamPolicy",
      "networkservices.endpointConfigSelectors.update",
      "networkservices.endpointConfigSelectors.use",
      "networkservices.endpointPolicies.create",
      "networkservices.endpointPolicies.delete",
      "networkservices.endpointPolicies.get",
      "networkservices.endpointPolicies.getIamPolicy",
      "networkservices.endpointPolicies.list",
      "networkservices.endpointPolicies.setIamPolicy",
      "networkservices.endpointPolicies.update",
      "networkservices.endpointPolicies.use",
      "networkservices.gateways.create",
      "networkservices.gateways.delete",
      "networkservices.gateways.get",
      "networkservices.gateways.list",
      "networkservices.gateways.update",
      "networkservices.gateways.use",
      "networkservices.grpcRoutes.create",
      "networkservices.grpcRoutes.delete",
      "networkservices.grpcRoutes.get",
      "networkservices.grpcRoutes.getIamPolicy",
      "networkservices.grpcRoutes.list",
      "networkservices.grpcRoutes.setIamPolicy",
      "networkservices.grpcRoutes.update",
      "networkservices.grpcRoutes.use",
      "networkservices.httpFilters.create",
      "networkservices.httpFilters.delete",
      "networkservices.httpFilters.get",
      "networkservices.httpFilters.getIamPolicy",
      "networkservices.httpFilters.list",
      "networkservices.httpFilters.setIamPolicy",
      "networkservices.httpFilters.update",
      "networkservices.httpFilters.use",
      "networkservices.httpRoutes.create",
      "networkservices.httpRoutes.delete",
      "networkservices.httpRoutes.get",
      "networkservices.httpRoutes.getIamPolicy",
      "networkservices.httpRoutes.list",
      "networkservices.httpRoutes.setIamPolicy",
      "networkservices.httpRoutes.update",
      "networkservices.httpRoutes.use",
      "networkservices.httpfilters.create",
      "networkservices.httpfilters.delete",
      "networkservices.httpfilters.get",
      "networkservices.httpfilters.getIamPolicy",
      "networkservices.httpfilters.list",
      "networkservices.httpfilters.setIamPolicy",
      "networkservices.httpfilters.update",
      "networkservices.httpfilters.use",
      "networkservices.locations.get",
      "networkservices.locations.list",
      "networkservices.meshes.create",
      "networkservices.meshes.delete",
      "networkservices.meshes.get",
      "networkservices.meshes.getIamPolicy",
      "networkservices.meshes.list",
      "networkservices.meshes.setIamPolicy",
      "networkservices.meshes.update",
      "networkservices.meshes.use",
      "networkservices.operations.cancel",
      "networkservices.operations.delete",
      "networkservices.operations.get",
      "networkservices.operations.list",
      "networkservices.serviceBindings.create",
      "networkservices.serviceBindings.delete",
      "networkservices.serviceBindings.get",
      "networkservices.serviceBindings.list",
      "networkservices.serviceBindings.update",
      "networkservices.tcpRoutes.create",
      "networkservices.tcpRoutes.delete",
      "networkservices.tcpRoutes.get",
      "networkservices.tcpRoutes.getIamPolicy",
      "networkservices.tcpRoutes.list",
      "networkservices.tcpRoutes.setIamPolicy",
      "networkservices.tcpRoutes.update",
      "networkservices.tcpRoutes.use",
      "networkservices.tlsRoutes.create",
      "networkservices.tlsRoutes.delete",
      "networkservices.tlsRoutes.get",
      "networkservices.tlsRoutes.list",
      "networkservices.tlsRoutes.update",
      "networkservices.tlsRoutes.use",
      "pubsub.schemas.attach",
      "pubsub.schemas.commit",
      "pubsub.schemas.create",
      "pubsub.schemas.delete",
      "pubsub.schemas.get",
      "pubsub.schemas.getIamPolicy",
      "pubsub.schemas.list",
      "pubsub.schemas.listRevisions",
      "pubsub.schemas.rollback",
      "pubsub.schemas.setIamPolicy",
      "pubsub.schemas.validate",
      "pubsub.snapshots.create",
      "pubsub.snapshots.delete",
      "pubsub.snapshots.get",
      "pubsub.snapshots.getIamPolicy",
      "pubsub.snapshots.list",
      "pubsub.snapshots.seek",
      "pubsub.snapshots.setIamPolicy",
      "pubsub.snapshots.update",
      "pubsub.subscriptions.consume",
      "pubsub.subscriptions.create",
      "pubsub.subscriptions.delete",
      "pubsub.subscriptions.get",
      "pubsub.subscriptions.getIamPolicy",
      "pubsub.subscriptions.list",
      "pubsub.subscriptions.setIamPolicy",
      "pubsub.subscriptions.update",
      "pubsub.topics.attachSubscription",
      "pubsub.topics.create",
      "pubsub.topics.delete",
      "pubsub.topics.detachSubscription",
      "pubsub.topics.get",
      "pubsub.topics.getIamPolicy",
      "pubsub.topics.list",
      "pubsub.topics.publish",
      "pubsub.topics.setIamPolicy",
      "pubsub.topics.update",
      "pubsub.topics.updateTag",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "servicedirectory.namespaces.create",
      "servicedirectory.namespaces.delete",
      "servicedirectory.services.create",
      "servicedirectory.services.delete",
      "servicenetworking.operations.get",
      "servicenetworking.services.addPeering",
      "servicenetworking.services.createPeeredDnsDomain",
      "servicenetworking.services.deleteConnection",
      "servicenetworking.services.deletePeeredDnsDomain",
      "servicenetworking.services.disableVpcServiceControls",
      "servicenetworking.services.enableVpcServiceControls",
      "servicenetworking.services.get",
      "servicenetworking.services.listPeeredDnsDomains",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "trafficdirector.networks.getConfigs",
      "trafficdirector.networks.reportMetrics"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudtrace.admin",
    "title": "Cloud Trace Admin",
    "description": "Admin access to Cloud Trace.",
    "includedPermissions": [
      "cloudtrace.insights.get",
      "cloudtrace.insights.list",
      "cloudtrace.stats.get",
      "cloudtrace.tasks.create",
      "cloudtrace.tasks.delete",
      "cloudtrace.tasks.get",
      "cloudtrace.tasks.list",
      "cloudtrace.traces.get",
      "cloudtrace.traces.list",
      "cloudtrace.traces.patch",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudtrace.agent",
    "title": "Cloud Trace Agent",
    "description": "Agent access to Cloud Trace. Can write trace data.",
    "includedPermissions": [
      "cloudtrace.traces.patch"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudtrace.user",
    "title": "Cloud Trace User",
    "description": "User access to Cloud Trace. Can view traces, insights and stats. Can create, list, view, and delete tasks.",
    "includedPermissions": [
      "cloudtrace.insights.get",
      "cloudtrace.insights.list",
      "cloudtrace.stats.get",
      "cloudtrace.tasks.create",
      "cloudtrace.tasks.delete",
      "cloudtrace.tasks.get",
      "cloudtrace.tasks.list",
      "cloudtrace.traces.get",
      "cloudtrace.traces.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudtranslate.admin",
    "title": "Cloud Translation API Admin",
    "description": "Full access to all Cloud Translation resources",
    "includedPermissions": [
      "automl.models.get",
      "automl.models.predict",
      "cloudtranslate.customModels.create",
      "cloudtranslate.customModels.delete",
      "cloudtranslate.customModels.get",
      "cloudtranslate.customModels.list",
      "cloudtranslate.customModels.predict",
      "cloudtranslate.datasets.create",
      "cloudtranslate.datasets.delete",
      "cloudtranslate.datasets.export",
      "cloudtranslate.datasets.get",
      "cloudtranslate.datasets.import",
      "cloudtranslate.datasets.list",
      "cloudtranslate.generalModels.batchDocPredict",
      "cloudtranslate.generalModels.batchPredict",
      "cloudtranslate.generalModels.docPredict",
      "cloudtranslate.generalModels.get",
      "cloudtranslate.generalModels.predict",
      "cloudtranslate.glossaries.batchDocPredict",
      "cloudtranslate.glossaries.batchPredict",
      "cloudtranslate.glossaries.create",
      "cloudtranslate.glossaries.delete",
      "cloudtranslate.glossaries.docPredict",
      "cloudtranslate.glossaries.get",
      "cloudtranslate.glossaries.list",
      "cloudtranslate.glossaries.predict",
      "cloudtranslate.glossaries.update",
      "cloudtranslate.glossaryentries.create",
      "cloudtranslate.glossaryentries.delete",
      "cloudtranslate.glossaryentries.get",
      "cloudtranslate.glossaryentries.list",
      "cloudtranslate.glossaryentries.update",
      "cloudtranslate.languageDetectionModels.predict",
      "cloudtranslate.locations.get",
      "cloudtranslate.locations.list",
      "cloudtranslate.operations.cancel",
      "cloudtranslate.operations.delete",
      "cloudtranslate.operations.get",
      "cloudtranslate.operations.list",
      "cloudtranslate.operations.wait",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudtranslate.editor",
    "title": "Cloud Translation API Editor",
    "description": "Editor of all Cloud Translation resources",
    "includedPermissions": [
      "automl.models.get",
      "automl.models.predict",
      "cloudtranslate.customModels.create",
      "cloudtranslate.customModels.delete",
      "cloudtranslate.customModels.get",
      "cloudtranslate.customModels.list",
      "cloudtranslate.customModels.predict",
      "cloudtranslate.datasets.create",
      "cloudtranslate.datasets.delete",
      "cloudtranslate.datasets.export",
      "cloudtranslate.datasets.get",
      "cloudtranslate.datasets.import",
      "cloudtranslate.datasets.list",
      "cloudtranslate.generalModels.batchDocPredict",
      "cloudtranslate.generalModels.batchPredict",
      "cloudtranslate.generalModels.docPredict",
      "cloudtranslate.generalModels.get",
      "cloudtranslate.generalModels.predict",
      "cloudtranslate.glossaries.batchDocPredict",
      "cloudtranslate.glossaries.batchPredict",
      "cloudtranslate.glossaries.create",
      "cloudtranslate.glossaries.delete",
      "cloudtranslate.glossaries.docPredict",
      "cloudtranslate.glossaries.get",
      "cloudtranslate.glossaries.list",
      "cloudtranslate.glossaries.predict",
      "cloudtranslate.glossaries.update",
      "cloudtranslate.glossaryentries.create",
      "cloudtranslate.glossaryentries.delete",
      "cloudtranslate.glossaryentries.get",
      "cloudtranslate.glossaryentries.list",
      "cloudtranslate.glossaryentries.update",
      "cloudtranslate.languageDetectionModels.predict",
      "cloudtranslate.locations.get",
      "cloudtranslate.locations.list",
      "cloudtranslate.operations.cancel",
      "cloudtranslate.operations.delete",
      "cloudtranslate.operations.get",
      "cloudtranslate.operations.list",
      "cloudtranslate.operations.wait",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudtranslate.serviceAgent",
    "title": "Cloud Translation API Service Agent",
    "description": "Gives Cloud Translation Service Account access to consumer resources.",
    "includedPermissions": [
      "automl.datasets.export",
      "automl.datasets.get",
      "automl.datasets.list",
      "automl.models.get",
      "automl.models.list",
      "automl.operations.get",
      "storage.buckets.get",
      "storage.objects.create",
      "storage.objects.get",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudtranslate.user",
    "title": "Cloud Translation API User",
    "description": "User of Cloud Translation and AutoML models",
    "includedPermissions": [
      "automl.models.get",
      "automl.models.predict",
      "cloudtranslate.customModels.get",
      "cloudtranslate.customModels.list",
      "cloudtranslate.customModels.predict",
      "cloudtranslate.datasets.get",
      "cloudtranslate.datasets.list",
      "cloudtranslate.generalModels.batchDocPredict",
      "cloudtranslate.generalModels.batchPredict",
      "cloudtranslate.generalModels.docPredict",
      "cloudtranslate.generalModels.get",
      "cloudtranslate.generalModels.predict",
      "cloudtranslate.glossaries.batchDocPredict",
      "cloudtranslate.glossaries.batchPredict",
      "cloudtranslate.glossaries.docPredict",
      "cloudtranslate.glossaries.get",
      "cloudtranslate.glossaries.list",
      "cloudtranslate.glossaries.predict",
      "cloudtranslate.glossaryentries.get",
      "cloudtranslate.glossaryentries.list",
      "cloudtranslate.languageDetectionModels.predict",
      "cloudtranslate.locations.get",
      "cloudtranslate.locations.list",
      "cloudtranslate.operations.get",
      "cloudtranslate.operations.list",
      "cloudtranslate.operations.wait",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/cloudtranslate.viewer",
    "title": "Cloud Translation API Viewer",
    "description": "Viewer of all Translation resources",
    "includedPermissions": [
      "automl.models.get",
      "cloudtranslate.customModels.get",
      "cloudtranslate.customModels.list",
      "cloudtranslate.datasets.get",
      "cloudtranslate.datasets.list",
      "cloudtranslate.generalModels.get",
      "cloudtranslate.glossaries.get",
      "cloudtranslate.glossaries.list",
      "cloudtranslate.glossaryentries.get",
      "cloudtranslate.glossaryentries.list",
      "cloudtranslate.locations.get",
      "cloudtranslate.locations.list",
      "cloudtranslate.operations.get",
      "cloudtranslate.operations.list",
      "cloudtranslate.operations.wait",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/commerceagreementpublishing.admin",
    "title": "Commerce Agreement Publishing Admin",
    "description": "Admin of Commerce Agreement Publishing service",
    "includedPermissions": [
      "commerceagreementpublishing.agreements.create",
      "commerceagreementpublishing.agreements.delete",
      "commerceagreementpublishing.agreements.get",
      "commerceagreementpublishing.agreements.list",
      "commerceagreementpublishing.agreements.update",
      "commerceagreementpublishing.documents.create",
      "commerceagreementpublishing.documents.delete",
      "commerceagreementpublishing.documents.get",
      "commerceagreementpublishing.documents.list",
      "commerceagreementpublishing.documents.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/commerceagreementpublishing.viewer",
    "title": "Commerce Agreement Publishing Viewer",
    "description": "Viewer of Commerce Agreement Publishing service",
    "includedPermissions": [
      "commerceagreementpublishing.agreements.get",
      "commerceagreementpublishing.agreements.list",
      "commerceagreementpublishing.documents.get",
      "commerceagreementpublishing.documents.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/commercebusinessenablement.admin",
    "title": "Commerce Business Enablement Configuration Admin",
    "description": "Admin of Various Provider Configuration resources",
    "includedPermissions": [
      "commercebusinessenablement.leadgenConfig.get",
      "commercebusinessenablement.leadgenConfig.update",
      "commercebusinessenablement.partnerAccounts.get",
      "commercebusinessenablement.partnerAccounts.list",
      "commercebusinessenablement.partnerInfo.get",
      "commercebusinessenablement.resellerConfig.get",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/commercebusinessenablement.paymentConfigAdmin",
    "title": "Commerce Business Enablement PaymentConfig Admin",
    "description": "Administration of Payment Configuration resource",
    "includedPermissions": [
      "commercebusinessenablement.partnerInfo.get",
      "commercebusinessenablement.paymentConfig.get",
      "commercebusinessenablement.paymentConfig.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/commercebusinessenablement.paymentConfigViewer",
    "title": "Commerce Business Enablement PaymentConfig Viewer",
    "description": "Viewer of Payment Configuration resource",
    "includedPermissions": [
      "commercebusinessenablement.partnerInfo.get",
      "commercebusinessenablement.paymentConfig.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/commercebusinessenablement.resellerDiscountAdmin",
    "title": "Commerce Business Enablement Reseller Discount Admin",
    "description": "Provides admin access to reseller discount offers",
    "includedPermissions": [
      "commercebusinessenablement.partnerAccounts.get",
      "commercebusinessenablement.partnerAccounts.list",
      "commercebusinessenablement.partnerInfo.get",
      "commercebusinessenablement.resellerConfig.get",
      "commercebusinessenablement.resellerDiscountOffers.cancel",
      "commercebusinessenablement.resellerDiscountOffers.create",
      "commercebusinessenablement.resellerDiscountOffers.list",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/commercebusinessenablement.resellerDiscountViewer",
    "title": "Commerce Business Enablement Reseller Discount Viewer",
    "description": "Provides read-only access to reseller discount offers",
    "includedPermissions": [
      "commercebusinessenablement.partnerAccounts.get",
      "commercebusinessenablement.partnerAccounts.list",
      "commercebusinessenablement.partnerInfo.get",
      "commercebusinessenablement.resellerConfig.get",
      "commercebusinessenablement.resellerDiscountOffers.list",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/commercebusinessenablement.viewer",
    "title": "Commerce Business Enablement Configuration Viewer",
    "description": "Viewer of Various Provider Configuration resource",
    "includedPermissions": [
      "commercebusinessenablement.leadgenConfig.get",
      "commercebusinessenablement.partnerAccounts.get",
      "commercebusinessenablement.partnerAccounts.list",
      "commercebusinessenablement.partnerInfo.get",
      "commercebusinessenablement.resellerConfig.get",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/commerceoffercatalog.offersViewer",
    "title": "Commerce Offer Catalog Offers Viewer",
    "description": "Allows viewing offers",
    "includedPermissions": [
      "commerceoffercatalog.agreements.get",
      "commerceoffercatalog.agreements.list",
      "commerceoffercatalog.documents.get",
      "commerceoffercatalog.documents.list",
      "commerceoffercatalog.offers.get"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/commerceorggovernance.admin",
    "title": "Commerce Organization Governance Admin",
    "description": "Full access to Organization Governance APIs",
    "includedPermissions": [
      "commerceorggovernance.collections.create",
      "commerceorggovernance.collections.delete",
      "commerceorggovernance.collections.get",
      "commerceorggovernance.collections.list",
      "commerceorggovernance.collections.update",
      "commerceorggovernance.consumerSharingPolicies.get",
      "commerceorggovernance.consumerSharingPolicies.update",
      "commerceorggovernance.organizationSettings.get",
      "commerceorggovernance.organizationSettings.update",
      "commerceorggovernance.services.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/commerceorggovernance.viewer",
    "title": "Commerce Organization Governance Viewer",
    "description": "Full access to Organization Governance read-only APIs.",
    "includedPermissions": [
      "commerceorggovernance.collections.get",
      "commerceorggovernance.collections.list",
      "commerceorggovernance.consumerSharingPolicies.get",
      "commerceorggovernance.organizationSettings.get",
      "commerceorggovernance.services.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/commercepricemanagement.eventsViewer",
    "title": "Commerce Price Management Events Viewer",
    "description": "Allows viewing key events for an offer",
    "includedPermissions": [
      "commerceprice.events.get",
      "commerceprice.events.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/commercepricemanagement.privateOffersAdmin",
    "title": "Commerce Price Management Private Offers Admin",
    "description": "Allows managing private offers",
    "includedPermissions": [
      "commerceagreementpublishing.agreements.create",
      "commerceagreementpublishing.agreements.delete",
      "commerceagreementpublishing.agreements.get",
      "commerceagreementpublishing.agreements.list",
      "commerceagreementpublishing.agreements.update",
      "commerceagreementpublishing.documents.create",
      "commerceagreementpublishing.documents.delete",
      "commerceagreementpublishing.documents.get",
      "commerceagreementpublishing.documents.list",
      "commerceagreementpublishing.documents.update",
      "commerceprice.events.get",
      "commerceprice.events.list",
      "commerceprice.privateoffers.cancel",
      "commerceprice.privateoffers.create",
      "commerceprice.privateoffers.delete",
      "commerceprice.privateoffers.get",
      "commerceprice.privateoffers.list",
      "commerceprice.privateoffers.publish",
      "commerceprice.privateoffers.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/commercepricemanagement.viewer",
    "title": "Commerce Price Management Viewer",
    "description": "Allows viewing offers, free trials, skus",
    "includedPermissions": [
      "commerceagreementpublishing.agreements.get",
      "commerceagreementpublishing.agreements.list",
      "commerceagreementpublishing.documents.get",
      "commerceagreementpublishing.documents.list",
      "commerceprice.privateoffers.get",
      "commerceprice.privateoffers.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/commerceproducer.admin",
    "title": "Commerce Producer Admin",
    "description": "Grants full access to all resources in Cloud Commerce Producer API.",
    "includedPermissions": [
      "commercebusinessenablement.partnerInfo.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/commerceproducer.viewer",
    "title": "Commerce Producer Viewer",
    "description": "Grants read access to all resources in Cloud Commerce Producer API.",
    "includedPermissions": [
      "commercebusinessenablement.partnerInfo.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/compliancescanning.ServiceAgent",
    "title": "Compliance Scanning Service Agent",
    "description": "Gives Compliance Scanning the access it needs to analyze containers and VMs for compliance and create occurrences using the Container Analysis API",
    "includedPermissions": [
      "artifactregistry.dockerimages.get",
      "artifactregistry.dockerimages.list",
      "artifactregistry.files.get",
      "artifactregistry.files.list",
      "artifactregistry.locations.get",
      "artifactregistry.locations.list",
      "artifactregistry.mavenartifacts.get",
      "artifactregistry.mavenartifacts.list",
      "artifactregistry.npmpackages.get",
      "artifactregistry.npmpackages.list",
      "artifactregistry.packages.get",
      "artifactregistry.packages.list",
      "artifactregistry.projectsettings.get",
      "artifactregistry.pythonpackages.get",
      "artifactregistry.pythonpackages.list",
      "artifactregistry.repositories.downloadArtifacts",
      "artifactregistry.repositories.get",
      "artifactregistry.repositories.list",
      "artifactregistry.repositories.listEffectiveTags",
      "artifactregistry.repositories.listTagBindings",
      "artifactregistry.repositories.readViaVirtualRepository",
      "artifactregistry.tags.get",
      "artifactregistry.tags.list",
      "artifactregistry.versions.get",
      "artifactregistry.versions.list",
      "compute.images.get",
      "compute.images.list",
      "compute.images.useReadOnly",
      "compute.instances.get",
      "compute.instances.getGuestAttributes",
      "compute.instances.list",
      "compute.zones.get",
      "compute.zones.list",
      "containeranalysis.notes.attachOccurrence",
      "containeranalysis.notes.create",
      "containeranalysis.notes.delete",
      "containeranalysis.notes.get",
      "containeranalysis.notes.list",
      "containeranalysis.notes.update",
      "containeranalysis.occurrences.create",
      "containeranalysis.occurrences.delete",
      "containeranalysis.occurrences.get",
      "containeranalysis.occurrences.list",
      "containeranalysis.occurrences.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storage.objects.get",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/composer.ServiceAgentV2Ext",
    "title": "Cloud Composer v2 API Service Agent Extension",
    "description": "Cloud Composer v2 API Service Agent Extension is a supplementary role required to manage Composer v2 environments.",
    "includedPermissions": [
      "iam.serviceAccounts.getIamPolicy",
      "iam.serviceAccounts.setIamPolicy"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/composer.admin",
    "title": "Composer Administrator",
    "description": "Full control of Composer resources.",
    "includedPermissions": [
      "composer.dags.execute",
      "composer.dags.get",
      "composer.dags.getSourceCode",
      "composer.dags.list",
      "composer.environments.create",
      "composer.environments.delete",
      "composer.environments.executeAirflowCommand",
      "composer.environments.get",
      "composer.environments.list",
      "composer.environments.update",
      "composer.imageversions.list",
      "composer.operations.delete",
      "composer.operations.get",
      "composer.operations.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/composer.environmentAndStorageObjectAdmin",
    "title": "Environment and Storage Object Administrator",
    "description": "Full control of Cloud Composer environments and Cloud Storage objects.",
    "includedPermissions": [
      "composer.dags.execute",
      "composer.dags.get",
      "composer.dags.getSourceCode",
      "composer.dags.list",
      "composer.environments.create",
      "composer.environments.delete",
      "composer.environments.executeAirflowCommand",
      "composer.environments.get",
      "composer.environments.list",
      "composer.environments.update",
      "composer.imageversions.list",
      "composer.operations.delete",
      "composer.operations.get",
      "composer.operations.list",
      "orgpolicy.policy.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "storage.multipartUploads.abort",
      "storage.multipartUploads.create",
      "storage.multipartUploads.list",
      "storage.multipartUploads.listParts",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.getIamPolicy",
      "storage.objects.list",
      "storage.objects.setIamPolicy",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/composer.environmentAndStorageObjectUser",
    "title": "Environment and Storage Object User",
    "description": "Read and use access to Cloud Composer resources and read access Cloud Storage objects.",
    "includedPermissions": [
      "composer.dags.execute",
      "composer.dags.get",
      "composer.dags.getSourceCode",
      "composer.dags.list",
      "composer.environments.get",
      "composer.environments.list",
      "composer.imageversions.list",
      "composer.operations.get",
      "composer.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "storage.objects.get",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/composer.environmentAndStorageObjectViewer",
    "title": "Environment and Storage Object Viewer",
    "description": "Read access to Cloud Composer environments and Cloud Storage objects.",
    "includedPermissions": [
      "composer.dags.execute",
      "composer.dags.get",
      "composer.dags.getSourceCode",
      "composer.dags.list",
      "composer.environments.get",
      "composer.environments.list",
      "composer.imageversions.list",
      "composer.operations.get",
      "composer.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "storage.objects.get",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/composer.serviceAgent",
    "title": "Cloud Composer API Service Agent",
    "description": "Cloud Composer API service agent can manage environments.",
    "includedPermissions": [
      "appengine.applications.get",
      "appengine.applications.update",
      "appengine.instances.delete",
      "appengine.instances.enableDebug",
      "appengine.instances.get",
      "appengine.instances.list",
      "appengine.memcache.addKey",
      "appengine.memcache.flush",
      "appengine.memcache.get",
      "appengine.memcache.update",
      "appengine.operations.get",
      "appengine.operations.list",
      "appengine.runtimes.actAsAdmin",
      "appengine.services.delete",
      "appengine.services.get",
      "appengine.services.list",
      "appengine.services.update",
      "appengine.versions.create",
      "appengine.versions.delete",
      "appengine.versions.get",
      "appengine.versions.list",
      "appengine.versions.update",
      "artifactregistry.repositories.create",
      "artifactregistry.repositories.delete",
      "artifactregistry.repositories.get",
      "artifactregistry.repositories.list",
      "artifactregistry.repositories.update",
      "cloudnotifications.activities.list",
      "cloudsql.backupRuns.create",
      "cloudsql.backupRuns.delete",
      "cloudsql.backupRuns.get",
      "cloudsql.backupRuns.list",
      "cloudsql.databases.create",
      "cloudsql.databases.delete",
      "cloudsql.databases.get",
      "cloudsql.databases.list",
      "cloudsql.databases.update",
      "cloudsql.instances.addServerCa",
      "cloudsql.instances.clone",
      "cloudsql.instances.connect",
      "cloudsql.instances.create",
      "cloudsql.instances.createTagBinding",
      "cloudsql.instances.delete",
      "cloudsql.instances.deleteTagBinding",
      "cloudsql.instances.demoteMaster",
      "cloudsql.instances.export",
      "cloudsql.instances.failover",
      "cloudsql.instances.get",
      "cloudsql.instances.getDiskShrinkConfig",
      "cloudsql.instances.import",
      "cloudsql.instances.list",
      "cloudsql.instances.listEffectiveTags",
      "cloudsql.instances.listServerCas",
      "cloudsql.instances.listTagBindings",
      "cloudsql.instances.login",
      "cloudsql.instances.migrate",
      "cloudsql.instances.performDiskShrink",
      "cloudsql.instances.promoteReplica",
      "cloudsql.instances.reencrypt",
      "cloudsql.instances.resetReplicaSize",
      "cloudsql.instances.resetSslConfig",
      "cloudsql.instances.restart",
      "cloudsql.instances.restoreBackup",
      "cloudsql.instances.rotateServerCa",
      "cloudsql.instances.startReplica",
      "cloudsql.instances.stopReplica",
      "cloudsql.instances.truncateLog",
      "cloudsql.instances.update",
      "cloudsql.sslCerts.create",
      "cloudsql.sslCerts.createEphemeral",
      "cloudsql.sslCerts.delete",
      "cloudsql.sslCerts.get",
      "cloudsql.sslCerts.list",
      "cloudsql.users.create",
      "cloudsql.users.delete",
      "cloudsql.users.get",
      "cloudsql.users.list",
      "cloudsql.users.update",
      "compute.acceleratorTypes.get",
      "compute.acceleratorTypes.list",
      "compute.addresses.create",
      "compute.addresses.createInternal",
      "compute.addresses.delete",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.addresses.setLabels",
      "compute.addresses.use",
      "compute.addresses.useInternal",
      "compute.autoscalers.create",
      "compute.autoscalers.delete",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.autoscalers.update",
      "compute.backendBuckets.addSignedUrlKey",
      "compute.backendBuckets.create",
      "compute.backendBuckets.createTagBinding",
      "compute.backendBuckets.delete",
      "compute.backendBuckets.deleteSignedUrlKey",
      "compute.backendBuckets.deleteTagBinding",
      "compute.backendBuckets.get",
      "compute.backendBuckets.getIamPolicy",
      "compute.backendBuckets.list",
      "compute.backendBuckets.listEffectiveTags",
      "compute.backendBuckets.listTagBindings",
      "compute.backendBuckets.setIamPolicy",
      "compute.backendBuckets.setSecurityPolicy",
      "compute.backendBuckets.update",
      "compute.backendBuckets.use",
      "compute.backendServices.addSignedUrlKey",
      "compute.backendServices.create",
      "compute.backendServices.createTagBinding",
      "compute.backendServices.delete",
      "compute.backendServices.deleteSignedUrlKey",
      "compute.backendServices.deleteTagBinding",
      "compute.backendServices.get",
      "compute.backendServices.getIamPolicy",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.backendServices.setIamPolicy",
      "compute.backendServices.setSecurityPolicy",
      "compute.backendServices.update",
      "compute.backendServices.use",
      "compute.diskTypes.get",
      "compute.diskTypes.list",
      "compute.disks.addResourcePolicies",
      "compute.disks.create",
      "compute.disks.createSnapshot",
      "compute.disks.createTagBinding",
      "compute.disks.delete",
      "compute.disks.deleteTagBinding",
      "compute.disks.get",
      "compute.disks.getIamPolicy",
      "compute.disks.list",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.disks.removeResourcePolicies",
      "compute.disks.resize",
      "compute.disks.setIamPolicy",
      "compute.disks.setLabels",
      "compute.disks.startAsyncReplication",
      "compute.disks.stopAsyncReplication",
      "compute.disks.stopGroupAsyncReplication",
      "compute.disks.update",
      "compute.disks.use",
      "compute.disks.useReadOnly",
      "compute.externalVpnGateways.create",
      "compute.externalVpnGateways.delete",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.list",
      "compute.externalVpnGateways.setLabels",
      "compute.externalVpnGateways.use",
      "compute.firewallPolicies.get",
      "compute.firewallPolicies.list",
      "compute.firewallPolicies.listEffectiveTags",
      "compute.firewallPolicies.listTagBindings",
      "compute.firewallPolicies.use",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.forwardingRules.create",
      "compute.forwardingRules.createTagBinding",
      "compute.forwardingRules.delete",
      "compute.forwardingRules.deleteTagBinding",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.forwardingRules.pscCreate",
      "compute.forwardingRules.pscDelete",
      "compute.forwardingRules.pscSetLabels",
      "compute.forwardingRules.pscSetTarget",
      "compute.forwardingRules.pscUpdate",
      "compute.forwardingRules.setLabels",
      "compute.forwardingRules.setTarget",
      "compute.forwardingRules.update",
      "compute.forwardingRules.use",
      "compute.globalAddresses.create",
      "compute.globalAddresses.createInternal",
      "compute.globalAddresses.delete",
      "compute.globalAddresses.deleteInternal",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalAddresses.setLabels",
      "compute.globalAddresses.use",
      "compute.globalForwardingRules.create",
      "compute.globalForwardingRules.createTagBinding",
      "compute.globalForwardingRules.delete",
      "compute.globalForwardingRules.deleteTagBinding",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalForwardingRules.pscCreate",
      "compute.globalForwardingRules.pscDelete",
      "compute.globalForwardingRules.pscGet",
      "compute.globalForwardingRules.pscSetLabels",
      "compute.globalForwardingRules.pscSetTarget",
      "compute.globalForwardingRules.pscUpdate",
      "compute.globalForwardingRules.setLabels",
      "compute.globalForwardingRules.setTarget",
      "compute.globalForwardingRules.update",
      "compute.globalNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.create",
      "compute.globalNetworkEndpointGroups.createTagBinding",
      "compute.globalNetworkEndpointGroups.delete",
      "compute.globalNetworkEndpointGroups.deleteTagBinding",
      "compute.globalNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.get",
      "compute.globalNetworkEndpointGroups.list",
      "compute.globalNetworkEndpointGroups.listEffectiveTags",
      "compute.globalNetworkEndpointGroups.listTagBindings",
      "compute.globalNetworkEndpointGroups.use",
      "compute.globalOperations.get",
      "compute.globalOperations.list",
      "compute.globalPublicDelegatedPrefixes.delete",
      "compute.globalPublicDelegatedPrefixes.get",
      "compute.globalPublicDelegatedPrefixes.list",
      "compute.globalPublicDelegatedPrefixes.update",
      "compute.globalPublicDelegatedPrefixes.updatePolicy",
      "compute.healthChecks.create",
      "compute.healthChecks.createTagBinding",
      "compute.healthChecks.delete",
      "compute.healthChecks.deleteTagBinding",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.healthChecks.update",
      "compute.healthChecks.use",
      "compute.healthChecks.useReadOnly",
      "compute.httpHealthChecks.create",
      "compute.httpHealthChecks.createTagBinding",
      "compute.httpHealthChecks.delete",
      "compute.httpHealthChecks.deleteTagBinding",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpHealthChecks.update",
      "compute.httpHealthChecks.use",
      "compute.httpHealthChecks.useReadOnly",
      "compute.httpsHealthChecks.create",
      "compute.httpsHealthChecks.createTagBinding",
      "compute.httpsHealthChecks.delete",
      "compute.httpsHealthChecks.deleteTagBinding",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.update",
      "compute.httpsHealthChecks.use",
      "compute.httpsHealthChecks.useReadOnly",
      "compute.images.create",
      "compute.images.createTagBinding",
      "compute.images.delete",
      "compute.images.deleteTagBinding",
      "compute.images.deprecate",
      "compute.images.get",
      "compute.images.getFromFamily",
      "compute.images.getIamPolicy",
      "compute.images.list",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.images.setIamPolicy",
      "compute.images.setLabels",
      "compute.images.update",
      "compute.images.useReadOnly",
      "compute.instanceGroupManagers.create",
      "compute.instanceGroupManagers.delete",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroupManagers.update",
      "compute.instanceGroupManagers.use",
      "compute.instanceGroups.create",
      "compute.instanceGroups.delete",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instanceGroups.update",
      "compute.instanceGroups.use",
      "compute.instanceTemplates.create",
      "compute.instanceTemplates.delete",
      "compute.instanceTemplates.get",
      "compute.instanceTemplates.getIamPolicy",
      "compute.instanceTemplates.list",
      "compute.instanceTemplates.setIamPolicy",
      "compute.instanceTemplates.useReadOnly",
      "compute.instances.addAccessConfig",
      "compute.instances.addMaintenancePolicies",
      "compute.instances.addResourcePolicies",
      "compute.instances.attachDisk",
      "compute.instances.create",
      "compute.instances.createTagBinding",
      "compute.instances.delete",
      "compute.instances.deleteAccessConfig",
      "compute.instances.deleteTagBinding",
      "compute.instances.detachDisk",
      "compute.instances.get",
      "compute.instances.getEffectiveFirewalls",
      "compute.instances.getGuestAttributes",
      "compute.instances.getIamPolicy",
      "compute.instances.getScreenshot",
      "compute.instances.getSerialPortOutput",
      "compute.instances.getShieldedInstanceIdentity",
      "compute.instances.getShieldedVmIdentity",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listReferrers",
      "compute.instances.listTagBindings",
      "compute.instances.osAdminLogin",
      "compute.instances.osLogin",
      "compute.instances.removeMaintenancePolicies",
      "compute.instances.removeResourcePolicies",
      "compute.instances.reset",
      "compute.instances.resume",
      "compute.instances.sendDiagnosticInterrupt",
      "compute.instances.setDeletionProtection",
      "compute.instances.setDiskAutoDelete",
      "compute.instances.setIamPolicy",
      "compute.instances.setLabels",
      "compute.instances.setMachineResources",
      "compute.instances.setMachineType",
      "compute.instances.setMetadata",
      "compute.instances.setMinCpuPlatform",
      "compute.instances.setName",
      "compute.instances.setScheduling",
      "compute.instances.setSecurityPolicy",
      "compute.instances.setServiceAccount",
      "compute.instances.setShieldedInstanceIntegrityPolicy",
      "compute.instances.setShieldedVmIntegrityPolicy",
      "compute.instances.setTags",
      "compute.instances.simulateMaintenanceEvent",
      "compute.instances.start",
      "compute.instances.startWithEncryptionKey",
      "compute.instances.stop",
      "compute.instances.suspend",
      "compute.instances.update",
      "compute.instances.updateAccessConfig",
      "compute.instances.updateDisplayDevice",
      "compute.instances.updateNetworkInterface",
      "compute.instances.updateSecurity",
      "compute.instances.updateShieldedInstanceConfig",
      "compute.instances.updateShieldedVmConfig",
      "compute.instances.use",
      "compute.instances.useReadOnly",
      "compute.instantSnapshots.create",
      "compute.instantSnapshots.delete",
      "compute.instantSnapshots.export",
      "compute.instantSnapshots.get",
      "compute.instantSnapshots.getIamPolicy",
      "compute.instantSnapshots.list",
      "compute.instantSnapshots.setIamPolicy",
      "compute.instantSnapshots.setLabels",
      "compute.instantSnapshots.useReadOnly",
      "compute.interconnectAttachments.create",
      "compute.interconnectAttachments.delete",
      "compute.interconnectAttachments.get",
      "compute.interconnectAttachments.list",
      "compute.interconnectAttachments.setLabels",
      "compute.interconnectAttachments.update",
      "compute.interconnectAttachments.use",
      "compute.interconnectLocations.get",
      "compute.interconnectLocations.list",
      "compute.interconnectRemoteLocations.get",
      "compute.interconnectRemoteLocations.list",
      "compute.interconnects.create",
      "compute.interconnects.delete",
      "compute.interconnects.get",
      "compute.interconnects.list",
      "compute.interconnects.setLabels",
      "compute.interconnects.update",
      "compute.interconnects.use",
      "compute.licenseCodes.get",
      "compute.licenseCodes.getIamPolicy",
      "compute.licenseCodes.list",
      "compute.licenseCodes.setIamPolicy",
      "compute.licenseCodes.update",
      "compute.licenseCodes.use",
      "compute.licenses.create",
      "compute.licenses.delete",
      "compute.licenses.get",
      "compute.licenses.getIamPolicy",
      "compute.licenses.list",
      "compute.licenses.setIamPolicy",
      "compute.machineImages.create",
      "compute.machineImages.delete",
      "compute.machineImages.get",
      "compute.machineImages.getIamPolicy",
      "compute.machineImages.list",
      "compute.machineImages.setIamPolicy",
      "compute.machineImages.useReadOnly",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.networkAttachments.create",
      "compute.networkAttachments.delete",
      "compute.networkAttachments.get",
      "compute.networkAttachments.getIamPolicy",
      "compute.networkAttachments.list",
      "compute.networkAttachments.setIamPolicy",
      "compute.networkEndpointGroups.attachNetworkEndpoints",
      "compute.networkEndpointGroups.create",
      "compute.networkEndpointGroups.createTagBinding",
      "compute.networkEndpointGroups.delete",
      "compute.networkEndpointGroups.deleteTagBinding",
      "compute.networkEndpointGroups.detachNetworkEndpoints",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.getIamPolicy",
      "compute.networkEndpointGroups.list",
      "compute.networkEndpointGroups.listEffectiveTags",
      "compute.networkEndpointGroups.listTagBindings",
      "compute.networkEndpointGroups.setIamPolicy",
      "compute.networkEndpointGroups.use",
      "compute.networks.access",
      "compute.networks.addPeering",
      "compute.networks.create",
      "compute.networks.createTagBinding",
      "compute.networks.delete",
      "compute.networks.deleteTagBinding",
      "compute.networks.get",
      "compute.networks.getEffectiveFirewalls",
      "compute.networks.getRegionEffectiveFirewalls",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listPeeringRoutes",
      "compute.networks.listTagBindings",
      "compute.networks.mirror",
      "compute.networks.removePeering",
      "compute.networks.setFirewallPolicy",
      "compute.networks.switchToCustomMode",
      "compute.networks.update",
      "compute.networks.updatePeering",
      "compute.networks.updatePolicy",
      "compute.networks.use",
      "compute.networks.useExternalIp",
      "compute.packetMirrorings.get",
      "compute.packetMirrorings.list",
      "compute.projects.get",
      "compute.projects.setCommonInstanceMetadata",
      "compute.publicDelegatedPrefixes.delete",
      "compute.publicDelegatedPrefixes.get",
      "compute.publicDelegatedPrefixes.list",
      "compute.publicDelegatedPrefixes.update",
      "compute.publicDelegatedPrefixes.updatePolicy",
      "compute.regionBackendServices.create",
      "compute.regionBackendServices.createTagBinding",
      "compute.regionBackendServices.delete",
      "compute.regionBackendServices.deleteTagBinding",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.getIamPolicy",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionBackendServices.setIamPolicy",
      "compute.regionBackendServices.setSecurityPolicy",
      "compute.regionBackendServices.update",
      "compute.regionBackendServices.use",
      "compute.regionFirewallPolicies.get",
      "compute.regionFirewallPolicies.list",
      "compute.regionFirewallPolicies.listEffectiveTags",
      "compute.regionFirewallPolicies.listTagBindings",
      "compute.regionFirewallPolicies.use",
      "compute.regionHealthCheckServices.create",
      "compute.regionHealthCheckServices.delete",
      "compute.regionHealthCheckServices.get",
      "compute.regionHealthCheckServices.list",
      "compute.regionHealthCheckServices.update",
      "compute.regionHealthCheckServices.use",
      "compute.regionHealthChecks.create",
      "compute.regionHealthChecks.createTagBinding",
      "compute.regionHealthChecks.delete",
      "compute.regionHealthChecks.deleteTagBinding",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionHealthChecks.update",
      "compute.regionHealthChecks.use",
      "compute.regionHealthChecks.useReadOnly",
      "compute.regionNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.create",
      "compute.regionNetworkEndpointGroups.createTagBinding",
      "compute.regionNetworkEndpointGroups.delete",
      "compute.regionNetworkEndpointGroups.deleteTagBinding",
      "compute.regionNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionNetworkEndpointGroups.listEffectiveTags",
      "compute.regionNetworkEndpointGroups.listTagBindings",
      "compute.regionNetworkEndpointGroups.use",
      "compute.regionNotificationEndpoints.create",
      "compute.regionNotificationEndpoints.delete",
      "compute.regionNotificationEndpoints.get",
      "compute.regionNotificationEndpoints.list",
      "compute.regionNotificationEndpoints.update",
      "compute.regionNotificationEndpoints.use",
      "compute.regionOperations.get",
      "compute.regionOperations.list",
      "compute.regionSecurityPolicies.get",
      "compute.regionSecurityPolicies.list",
      "compute.regionSecurityPolicies.listEffectiveTags",
      "compute.regionSecurityPolicies.listTagBindings",
      "compute.regionSecurityPolicies.use",
      "compute.regionSslCertificates.get",
      "compute.regionSslCertificates.list",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionSslPolicies.create",
      "compute.regionSslPolicies.delete",
      "compute.regionSslPolicies.get",
      "compute.regionSslPolicies.list",
      "compute.regionSslPolicies.listAvailableFeatures",
      "compute.regionSslPolicies.update",
      "compute.regionSslPolicies.use",
      "compute.regionTargetHttpProxies.create",
      "compute.regionTargetHttpProxies.createTagBinding",
      "compute.regionTargetHttpProxies.delete",
      "compute.regionTargetHttpProxies.deleteTagBinding",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpProxies.setUrlMap",
      "compute.regionTargetHttpProxies.update",
      "compute.regionTargetHttpProxies.use",
      "compute.regionTargetHttpsProxies.create",
      "compute.regionTargetHttpsProxies.createTagBinding",
      "compute.regionTargetHttpsProxies.delete",
      "compute.regionTargetHttpsProxies.deleteTagBinding",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.setSslCertificates",
      "compute.regionTargetHttpsProxies.setUrlMap",
      "compute.regionTargetHttpsProxies.update",
      "compute.regionTargetHttpsProxies.use",
      "compute.regionTargetTcpProxies.create",
      "compute.regionTargetTcpProxies.delete",
      "compute.regionTargetTcpProxies.get",
      "compute.regionTargetTcpProxies.list",
      "compute.regionTargetTcpProxies.use",
      "compute.regionUrlMaps.create",
      "compute.regionUrlMaps.createTagBinding",
      "compute.regionUrlMaps.delete",
      "compute.regionUrlMaps.deleteTagBinding",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.invalidateCache",
      "compute.regionUrlMaps.list",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.regionUrlMaps.update",
      "compute.regionUrlMaps.use",
      "compute.regionUrlMaps.validate",
      "compute.regions.get",
      "compute.regions.list",
      "compute.reservations.get",
      "compute.reservations.list",
      "compute.resourcePolicies.create",
      "compute.resourcePolicies.delete",
      "compute.resourcePolicies.get",
      "compute.resourcePolicies.getIamPolicy",
      "compute.resourcePolicies.list",
      "compute.resourcePolicies.setIamPolicy",
      "compute.resourcePolicies.update",
      "compute.resourcePolicies.use",
      "compute.resourcePolicies.useReadOnly",
      "compute.routers.create",
      "compute.routers.delete",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routers.update",
      "compute.routers.use",
      "compute.routes.create",
      "compute.routes.createTagBinding",
      "compute.routes.delete",
      "compute.routes.deleteTagBinding",
      "compute.routes.get",
      "compute.routes.list",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.securityPolicies.get",
      "compute.securityPolicies.list",
      "compute.securityPolicies.listEffectiveTags",
      "compute.securityPolicies.listTagBindings",
      "compute.securityPolicies.use",
      "compute.serviceAttachments.create",
      "compute.serviceAttachments.delete",
      "compute.serviceAttachments.get",
      "compute.serviceAttachments.getIamPolicy",
      "compute.serviceAttachments.list",
      "compute.serviceAttachments.setIamPolicy",
      "compute.serviceAttachments.update",
      "compute.serviceAttachments.use",
      "compute.snapshots.create",
      "compute.snapshots.createTagBinding",
      "compute.snapshots.delete",
      "compute.snapshots.deleteTagBinding",
      "compute.snapshots.get",
      "compute.snapshots.getIamPolicy",
      "compute.snapshots.list",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.snapshots.setIamPolicy",
      "compute.snapshots.setLabels",
      "compute.snapshots.useReadOnly",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.create",
      "compute.sslPolicies.createTagBinding",
      "compute.sslPolicies.delete",
      "compute.sslPolicies.deleteTagBinding",
      "compute.sslPolicies.get",
      "compute.sslPolicies.list",
      "compute.sslPolicies.listAvailableFeatures",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.sslPolicies.update",
      "compute.sslPolicies.use",
      "compute.subnetworks.create",
      "compute.subnetworks.createTagBinding",
      "compute.subnetworks.delete",
      "compute.subnetworks.deleteTagBinding",
      "compute.subnetworks.expandIpCidrRange",
      "compute.subnetworks.get",
      "compute.subnetworks.getIamPolicy",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.subnetworks.mirror",
      "compute.subnetworks.setIamPolicy",
      "compute.subnetworks.setPrivateIpGoogleAccess",
      "compute.subnetworks.update",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.targetGrpcProxies.create",
      "compute.targetGrpcProxies.delete",
      "compute.targetGrpcProxies.get",
      "compute.targetGrpcProxies.list",
      "compute.targetGrpcProxies.update",
      "compute.targetGrpcProxies.use",
      "compute.targetHttpProxies.create",
      "compute.targetHttpProxies.createTagBinding",
      "compute.targetHttpProxies.delete",
      "compute.targetHttpProxies.deleteTagBinding",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpProxies.setUrlMap",
      "compute.targetHttpProxies.update",
      "compute.targetHttpProxies.use",
      "compute.targetHttpsProxies.create",
      "compute.targetHttpsProxies.createTagBinding",
      "compute.targetHttpsProxies.delete",
      "compute.targetHttpsProxies.deleteTagBinding",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetHttpsProxies.setCertificateMap",
      "compute.targetHttpsProxies.setQuicOverride",
      "compute.targetHttpsProxies.setSslCertificates",
      "compute.targetHttpsProxies.setSslPolicy",
      "compute.targetHttpsProxies.setUrlMap",
      "compute.targetHttpsProxies.update",
      "compute.targetHttpsProxies.use",
      "compute.targetInstances.create",
      "compute.targetInstances.createTagBinding",
      "compute.targetInstances.delete",
      "compute.targetInstances.deleteTagBinding",
      "compute.targetInstances.get",
      "compute.targetInstances.list",
      "compute.targetInstances.listEffectiveTags",
      "compute.targetInstances.listTagBindings",
      "compute.targetInstances.setSecurityPolicy",
      "compute.targetInstances.use",
      "compute.targetPools.addHealthCheck",
      "compute.targetPools.addInstance",
      "compute.targetPools.create",
      "compute.targetPools.createTagBinding",
      "compute.targetPools.delete",
      "compute.targetPools.deleteTagBinding",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.targetPools.removeHealthCheck",
      "compute.targetPools.removeInstance",
      "compute.targetPools.setSecurityPolicy",
      "compute.targetPools.update",
      "compute.targetPools.use",
      "compute.targetSslProxies.create",
      "compute.targetSslProxies.createTagBinding",
      "compute.targetSslProxies.delete",
      "compute.targetSslProxies.deleteTagBinding",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetSslProxies.listEffectiveTags",
      "compute.targetSslProxies.listTagBindings",
      "compute.targetSslProxies.setBackendService",
      "compute.targetSslProxies.setCertificateMap",
      "compute.targetSslProxies.setProxyHeader",
      "compute.targetSslProxies.setSslCertificates",
      "compute.targetSslProxies.setSslPolicy",
      "compute.targetSslProxies.update",
      "compute.targetSslProxies.use",
      "compute.targetTcpProxies.create",
      "compute.targetTcpProxies.createTagBinding",
      "compute.targetTcpProxies.delete",
      "compute.targetTcpProxies.deleteTagBinding",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.targetTcpProxies.update",
      "compute.targetTcpProxies.use",
      "compute.targetVpnGateways.create",
      "compute.targetVpnGateways.delete",
      "compute.targetVpnGateways.get",
      "compute.targetVpnGateways.list",
      "compute.targetVpnGateways.setLabels",
      "compute.targetVpnGateways.use",
      "compute.urlMaps.create",
      "compute.urlMaps.createTagBinding",
      "compute.urlMaps.delete",
      "compute.urlMaps.deleteTagBinding",
      "compute.urlMaps.get",
      "compute.urlMaps.invalidateCache",
      "compute.urlMaps.list",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "compute.urlMaps.update",
      "compute.urlMaps.use",
      "compute.urlMaps.validate",
      "compute.vpnGateways.create",
      "compute.vpnGateways.delete",
      "compute.vpnGateways.get",
      "compute.vpnGateways.list",
      "compute.vpnGateways.setLabels",
      "compute.vpnGateways.use",
      "compute.vpnTunnels.create",
      "compute.vpnTunnels.delete",
      "compute.vpnTunnels.get",
      "compute.vpnTunnels.list",
      "compute.vpnTunnels.setLabels",
      "compute.zoneOperations.get",
      "compute.zoneOperations.list",
      "compute.zones.get",
      "compute.zones.list",
      "container.apiServices.create",
      "container.apiServices.delete",
      "container.apiServices.get",
      "container.apiServices.getStatus",
      "container.apiServices.list",
      "container.apiServices.update",
      "container.apiServices.updateStatus",
      "container.auditSinks.create",
      "container.auditSinks.delete",
      "container.auditSinks.get",
      "container.auditSinks.list",
      "container.auditSinks.update",
      "container.backendConfigs.create",
      "container.backendConfigs.delete",
      "container.backendConfigs.get",
      "container.backendConfigs.list",
      "container.backendConfigs.update",
      "container.bindings.create",
      "container.bindings.delete",
      "container.bindings.get",
      "container.bindings.list",
      "container.bindings.update",
      "container.certificateSigningRequests.approve",
      "container.certificateSigningRequests.create",
      "container.certificateSigningRequests.delete",
      "container.certificateSigningRequests.get",
      "container.certificateSigningRequests.getStatus",
      "container.certificateSigningRequests.list",
      "container.certificateSigningRequests.update",
      "container.certificateSigningRequests.updateStatus",
      "container.clusterRoleBindings.create",
      "container.clusterRoleBindings.delete",
      "container.clusterRoleBindings.get",
      "container.clusterRoleBindings.list",
      "container.clusterRoleBindings.update",
      "container.clusterRoles.bind",
      "container.clusterRoles.create",
      "container.clusterRoles.delete",
      "container.clusterRoles.escalate",
      "container.clusterRoles.get",
      "container.clusterRoles.list",
      "container.clusterRoles.update",
      "container.clusters.create",
      "container.clusters.createTagBinding",
      "container.clusters.delete",
      "container.clusters.deleteTagBinding",
      "container.clusters.get",
      "container.clusters.getCredentials",
      "container.clusters.impersonate",
      "container.clusters.list",
      "container.clusters.listEffectiveTags",
      "container.clusters.listTagBindings",
      "container.clusters.update",
      "container.componentStatuses.get",
      "container.componentStatuses.list",
      "container.configMaps.create",
      "container.configMaps.delete",
      "container.configMaps.get",
      "container.configMaps.list",
      "container.configMaps.update",
      "container.controllerRevisions.create",
      "container.controllerRevisions.delete",
      "container.controllerRevisions.get",
      "container.controllerRevisions.list",
      "container.controllerRevisions.update",
      "container.cronJobs.create",
      "container.cronJobs.delete",
      "container.cronJobs.get",
      "container.cronJobs.getStatus",
      "container.cronJobs.list",
      "container.cronJobs.update",
      "container.cronJobs.updateStatus",
      "container.csiDrivers.create",
      "container.csiDrivers.delete",
      "container.csiDrivers.get",
      "container.csiDrivers.list",
      "container.csiDrivers.update",
      "container.csiNodeInfos.create",
      "container.csiNodeInfos.delete",
      "container.csiNodeInfos.get",
      "container.csiNodeInfos.list",
      "container.csiNodeInfos.update",
      "container.csiNodes.create",
      "container.csiNodes.delete",
      "container.csiNodes.get",
      "container.csiNodes.list",
      "container.csiNodes.update",
      "container.customResourceDefinitions.create",
      "container.customResourceDefinitions.delete",
      "container.customResourceDefinitions.get",
      "container.customResourceDefinitions.getStatus",
      "container.customResourceDefinitions.list",
      "container.customResourceDefinitions.update",
      "container.customResourceDefinitions.updateStatus",
      "container.daemonSets.create",
      "container.daemonSets.delete",
      "container.daemonSets.get",
      "container.daemonSets.getStatus",
      "container.daemonSets.list",
      "container.daemonSets.update",
      "container.daemonSets.updateStatus",
      "container.deployments.create",
      "container.deployments.delete",
      "container.deployments.get",
      "container.deployments.getScale",
      "container.deployments.getStatus",
      "container.deployments.list",
      "container.deployments.rollback",
      "container.deployments.update",
      "container.deployments.updateScale",
      "container.deployments.updateStatus",
      "container.endpointSlices.create",
      "container.endpointSlices.delete",
      "container.endpointSlices.get",
      "container.endpointSlices.list",
      "container.endpointSlices.update",
      "container.endpoints.create",
      "container.endpoints.delete",
      "container.endpoints.get",
      "container.endpoints.list",
      "container.endpoints.update",
      "container.events.create",
      "container.events.delete",
      "container.events.get",
      "container.events.list",
      "container.events.update",
      "container.frontendConfigs.create",
      "container.frontendConfigs.delete",
      "container.frontendConfigs.get",
      "container.frontendConfigs.list",
      "container.frontendConfigs.update",
      "container.horizontalPodAutoscalers.create",
      "container.horizontalPodAutoscalers.delete",
      "container.horizontalPodAutoscalers.get",
      "container.horizontalPodAutoscalers.getStatus",
      "container.horizontalPodAutoscalers.list",
      "container.horizontalPodAutoscalers.update",
      "container.horizontalPodAutoscalers.updateStatus",
      "container.hostServiceAgent.use",
      "container.ingresses.create",
      "container.ingresses.delete",
      "container.ingresses.get",
      "container.ingresses.getStatus",
      "container.ingresses.list",
      "container.ingresses.update",
      "container.ingresses.updateStatus",
      "container.initializerConfigurations.create",
      "container.initializerConfigurations.delete",
      "container.initializerConfigurations.get",
      "container.initializerConfigurations.list",
      "container.initializerConfigurations.update",
      "container.jobs.create",
      "container.jobs.delete",
      "container.jobs.get",
      "container.jobs.getStatus",
      "container.jobs.list",
      "container.jobs.update",
      "container.jobs.updateStatus",
      "container.leases.create",
      "container.leases.delete",
      "container.leases.get",
      "container.leases.list",
      "container.leases.update",
      "container.limitRanges.create",
      "container.limitRanges.delete",
      "container.limitRanges.get",
      "container.limitRanges.list",
      "container.limitRanges.update",
      "container.localSubjectAccessReviews.create",
      "container.localSubjectAccessReviews.list",
      "container.managedCertificates.create",
      "container.managedCertificates.delete",
      "container.managedCertificates.get",
      "container.managedCertificates.list",
      "container.managedCertificates.update",
      "container.mutatingWebhookConfigurations.create",
      "container.mutatingWebhookConfigurations.delete",
      "container.mutatingWebhookConfigurations.get",
      "container.mutatingWebhookConfigurations.list",
      "container.mutatingWebhookConfigurations.update",
      "container.namespaces.create",
      "container.namespaces.delete",
      "container.namespaces.finalize",
      "container.namespaces.get",
      "container.namespaces.getStatus",
      "container.namespaces.list",
      "container.namespaces.update",
      "container.namespaces.updateStatus",
      "container.networkPolicies.create",
      "container.networkPolicies.delete",
      "container.networkPolicies.get",
      "container.networkPolicies.list",
      "container.networkPolicies.update",
      "container.nodes.create",
      "container.nodes.delete",
      "container.nodes.get",
      "container.nodes.getStatus",
      "container.nodes.list",
      "container.nodes.proxy",
      "container.nodes.update",
      "container.nodes.updateStatus",
      "container.operations.get",
      "container.operations.list",
      "container.persistentVolumeClaims.create",
      "container.persistentVolumeClaims.delete",
      "container.persistentVolumeClaims.get",
      "container.persistentVolumeClaims.getStatus",
      "container.persistentVolumeClaims.list",
      "container.persistentVolumeClaims.update",
      "container.persistentVolumeClaims.updateStatus",
      "container.persistentVolumes.create",
      "container.persistentVolumes.delete",
      "container.persistentVolumes.get",
      "container.persistentVolumes.getStatus",
      "container.persistentVolumes.list",
      "container.persistentVolumes.update",
      "container.persistentVolumes.updateStatus",
      "container.petSets.create",
      "container.petSets.delete",
      "container.petSets.get",
      "container.petSets.list",
      "container.petSets.update",
      "container.petSets.updateStatus",
      "container.podDisruptionBudgets.create",
      "container.podDisruptionBudgets.delete",
      "container.podDisruptionBudgets.get",
      "container.podDisruptionBudgets.getStatus",
      "container.podDisruptionBudgets.list",
      "container.podDisruptionBudgets.update",
      "container.podDisruptionBudgets.updateStatus",
      "container.podPresets.create",
      "container.podPresets.delete",
      "container.podPresets.get",
      "container.podPresets.list",
      "container.podPresets.update",
      "container.podSecurityPolicies.create",
      "container.podSecurityPolicies.delete",
      "container.podSecurityPolicies.get",
      "container.podSecurityPolicies.list",
      "container.podSecurityPolicies.update",
      "container.podSecurityPolicies.use",
      "container.podTemplates.create",
      "container.podTemplates.delete",
      "container.podTemplates.get",
      "container.podTemplates.list",
      "container.podTemplates.update",
      "container.pods.attach",
      "container.pods.create",
      "container.pods.delete",
      "container.pods.evict",
      "container.pods.exec",
      "container.pods.get",
      "container.pods.getLogs",
      "container.pods.getStatus",
      "container.pods.initialize",
      "container.pods.list",
      "container.pods.portForward",
      "container.pods.proxy",
      "container.pods.update",
      "container.pods.updateStatus",
      "container.priorityClasses.create",
      "container.priorityClasses.delete",
      "container.priorityClasses.get",
      "container.priorityClasses.list",
      "container.priorityClasses.update",
      "container.replicaSets.create",
      "container.replicaSets.delete",
      "container.replicaSets.get",
      "container.replicaSets.getScale",
      "container.replicaSets.getStatus",
      "container.replicaSets.list",
      "container.replicaSets.update",
      "container.replicaSets.updateScale",
      "container.replicaSets.updateStatus",
      "container.replicationControllers.create",
      "container.replicationControllers.delete",
      "container.replicationControllers.get",
      "container.replicationControllers.getScale",
      "container.replicationControllers.getStatus",
      "container.replicationControllers.list",
      "container.replicationControllers.update",
      "container.replicationControllers.updateScale",
      "container.replicationControllers.updateStatus",
      "container.resourceQuotas.create",
      "container.resourceQuotas.delete",
      "container.resourceQuotas.get",
      "container.resourceQuotas.getStatus",
      "container.resourceQuotas.list",
      "container.resourceQuotas.update",
      "container.resourceQuotas.updateStatus",
      "container.roleBindings.create",
      "container.roleBindings.delete",
      "container.roleBindings.get",
      "container.roleBindings.list",
      "container.roleBindings.update",
      "container.roles.bind",
      "container.roles.create",
      "container.roles.delete",
      "container.roles.escalate",
      "container.roles.get",
      "container.roles.list",
      "container.roles.update",
      "container.runtimeClasses.create",
      "container.runtimeClasses.delete",
      "container.runtimeClasses.get",
      "container.runtimeClasses.list",
      "container.runtimeClasses.update",
      "container.scheduledJobs.create",
      "container.scheduledJobs.delete",
      "container.scheduledJobs.get",
      "container.scheduledJobs.list",
      "container.scheduledJobs.update",
      "container.scheduledJobs.updateStatus",
      "container.secrets.create",
      "container.secrets.delete",
      "container.secrets.get",
      "container.secrets.list",
      "container.secrets.update",
      "container.selfSubjectAccessReviews.create",
      "container.selfSubjectAccessReviews.list",
      "container.selfSubjectRulesReviews.create",
      "container.serviceAccounts.create",
      "container.serviceAccounts.createToken",
      "container.serviceAccounts.delete",
      "container.serviceAccounts.get",
      "container.serviceAccounts.list",
      "container.serviceAccounts.update",
      "container.services.create",
      "container.services.delete",
      "container.services.get",
      "container.services.getStatus",
      "container.services.list",
      "container.services.proxy",
      "container.services.update",
      "container.services.updateStatus",
      "container.statefulSets.create",
      "container.statefulSets.delete",
      "container.statefulSets.get",
      "container.statefulSets.getScale",
      "container.statefulSets.getStatus",
      "container.statefulSets.list",
      "container.statefulSets.update",
      "container.statefulSets.updateScale",
      "container.statefulSets.updateStatus",
      "container.storageClasses.create",
      "container.storageClasses.delete",
      "container.storageClasses.get",
      "container.storageClasses.list",
      "container.storageClasses.update",
      "container.storageStates.create",
      "container.storageStates.delete",
      "container.storageStates.get",
      "container.storageStates.getStatus",
      "container.storageStates.list",
      "container.storageStates.update",
      "container.storageStates.updateStatus",
      "container.storageVersionMigrations.create",
      "container.storageVersionMigrations.delete",
      "container.storageVersionMigrations.get",
      "container.storageVersionMigrations.getStatus",
      "container.storageVersionMigrations.list",
      "container.storageVersionMigrations.update",
      "container.storageVersionMigrations.updateStatus",
      "container.subjectAccessReviews.create",
      "container.subjectAccessReviews.list",
      "container.thirdPartyObjects.create",
      "container.thirdPartyObjects.delete",
      "container.thirdPartyObjects.get",
      "container.thirdPartyObjects.list",
      "container.thirdPartyObjects.update",
      "container.thirdPartyResources.create",
      "container.thirdPartyResources.delete",
      "container.thirdPartyResources.get",
      "container.thirdPartyResources.list",
      "container.thirdPartyResources.update",
      "container.tokenReviews.create",
      "container.updateInfos.create",
      "container.updateInfos.delete",
      "container.updateInfos.get",
      "container.updateInfos.list",
      "container.updateInfos.update",
      "container.validatingWebhookConfigurations.create",
      "container.validatingWebhookConfigurations.delete",
      "container.validatingWebhookConfigurations.get",
      "container.validatingWebhookConfigurations.list",
      "container.validatingWebhookConfigurations.update",
      "container.volumeAttachments.create",
      "container.volumeAttachments.delete",
      "container.volumeAttachments.get",
      "container.volumeAttachments.getStatus",
      "container.volumeAttachments.list",
      "container.volumeAttachments.update",
      "container.volumeAttachments.updateStatus",
      "container.volumeSnapshotClasses.create",
      "container.volumeSnapshotClasses.delete",
      "container.volumeSnapshotClasses.get",
      "container.volumeSnapshotClasses.list",
      "container.volumeSnapshotClasses.update",
      "container.volumeSnapshotContents.create",
      "container.volumeSnapshotContents.delete",
      "container.volumeSnapshotContents.get",
      "container.volumeSnapshotContents.getStatus",
      "container.volumeSnapshotContents.list",
      "container.volumeSnapshotContents.update",
      "container.volumeSnapshotContents.updateStatus",
      "container.volumeSnapshots.create",
      "container.volumeSnapshots.delete",
      "container.volumeSnapshots.get",
      "container.volumeSnapshots.getStatus",
      "container.volumeSnapshots.list",
      "container.volumeSnapshots.update",
      "container.volumeSnapshots.updateStatus",
      "deploymentmanager.compositeTypes.create",
      "deploymentmanager.compositeTypes.delete",
      "deploymentmanager.compositeTypes.get",
      "deploymentmanager.compositeTypes.list",
      "deploymentmanager.compositeTypes.update",
      "deploymentmanager.deployments.cancelPreview",
      "deploymentmanager.deployments.create",
      "deploymentmanager.deployments.delete",
      "deploymentmanager.deployments.get",
      "deploymentmanager.deployments.list",
      "deploymentmanager.deployments.stop",
      "deploymentmanager.deployments.update",
      "deploymentmanager.manifests.get",
      "deploymentmanager.manifests.list",
      "deploymentmanager.operations.get",
      "deploymentmanager.operations.list",
      "deploymentmanager.resources.get",
      "deploymentmanager.resources.list",
      "deploymentmanager.typeProviders.create",
      "deploymentmanager.typeProviders.delete",
      "deploymentmanager.typeProviders.get",
      "deploymentmanager.typeProviders.getType",
      "deploymentmanager.typeProviders.list",
      "deploymentmanager.typeProviders.listTypes",
      "deploymentmanager.typeProviders.update",
      "deploymentmanager.types.create",
      "deploymentmanager.types.delete",
      "deploymentmanager.types.get",
      "deploymentmanager.types.list",
      "deploymentmanager.types.update",
      "dns.managedZones.get",
      "dns.managedZones.list",
      "dns.networks.targetWithPeeringZone",
      "firebase.projects.get",
      "iam.serviceAccounts.actAs",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.list",
      "logging.buckets.create",
      "logging.buckets.delete",
      "logging.buckets.get",
      "logging.buckets.list",
      "logging.buckets.undelete",
      "logging.buckets.update",
      "logging.exclusions.create",
      "logging.exclusions.delete",
      "logging.exclusions.get",
      "logging.exclusions.list",
      "logging.exclusions.update",
      "logging.links.create",
      "logging.links.delete",
      "logging.links.get",
      "logging.links.list",
      "logging.locations.get",
      "logging.locations.list",
      "logging.logEntries.create",
      "logging.logEntries.route",
      "logging.logMetrics.create",
      "logging.logMetrics.delete",
      "logging.logMetrics.get",
      "logging.logMetrics.list",
      "logging.logMetrics.update",
      "logging.logServiceIndexes.list",
      "logging.logServices.list",
      "logging.logs.list",
      "logging.notificationRules.create",
      "logging.notificationRules.delete",
      "logging.notificationRules.get",
      "logging.notificationRules.list",
      "logging.notificationRules.update",
      "logging.operations.cancel",
      "logging.operations.get",
      "logging.operations.list",
      "logging.settings.get",
      "logging.settings.update",
      "logging.sinks.create",
      "logging.sinks.delete",
      "logging.sinks.get",
      "logging.sinks.list",
      "logging.sinks.update",
      "logging.views.create",
      "logging.views.delete",
      "logging.views.get",
      "logging.views.list",
      "logging.views.update",
      "monitoring.alertPolicies.get",
      "monitoring.alertPolicies.list",
      "monitoring.dashboards.get",
      "monitoring.dashboards.list",
      "monitoring.groups.get",
      "monitoring.groups.list",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.notificationChannelDescriptors.get",
      "monitoring.notificationChannelDescriptors.list",
      "monitoring.notificationChannels.get",
      "monitoring.notificationChannels.list",
      "monitoring.publicWidgets.get",
      "monitoring.publicWidgets.list",
      "monitoring.services.get",
      "monitoring.services.list",
      "monitoring.slos.get",
      "monitoring.slos.list",
      "monitoring.snoozes.get",
      "monitoring.snoozes.list",
      "monitoring.timeSeries.create",
      "monitoring.timeSeries.list",
      "monitoring.uptimeCheckConfigs.get",
      "monitoring.uptimeCheckConfigs.list",
      "networkconnectivity.internalRanges.create",
      "networkconnectivity.internalRanges.delete",
      "networkconnectivity.internalRanges.get",
      "networkconnectivity.internalRanges.getIamPolicy",
      "networkconnectivity.internalRanges.list",
      "networkconnectivity.internalRanges.setIamPolicy",
      "networkconnectivity.internalRanges.update",
      "networkconnectivity.locations.get",
      "networkconnectivity.locations.list",
      "networkconnectivity.operations.cancel",
      "networkconnectivity.operations.delete",
      "networkconnectivity.operations.get",
      "networkconnectivity.operations.list",
      "networkconnectivity.policyBasedRoutes.create",
      "networkconnectivity.policyBasedRoutes.delete",
      "networkconnectivity.policyBasedRoutes.get",
      "networkconnectivity.policyBasedRoutes.getIamPolicy",
      "networkconnectivity.policyBasedRoutes.list",
      "networkconnectivity.policyBasedRoutes.setIamPolicy",
      "networkconnectivity.serviceClasses.create",
      "networkconnectivity.serviceClasses.delete",
      "networkconnectivity.serviceClasses.get",
      "networkconnectivity.serviceClasses.list",
      "networkconnectivity.serviceClasses.update",
      "networkconnectivity.serviceClasses.use",
      "networkconnectivity.serviceConnectionMaps.create",
      "networkconnectivity.serviceConnectionMaps.delete",
      "networkconnectivity.serviceConnectionMaps.get",
      "networkconnectivity.serviceConnectionMaps.list",
      "networkconnectivity.serviceConnectionMaps.update",
      "networkconnectivity.serviceConnectionPolicies.create",
      "networkconnectivity.serviceConnectionPolicies.delete",
      "networkconnectivity.serviceConnectionPolicies.get",
      "networkconnectivity.serviceConnectionPolicies.list",
      "networkconnectivity.serviceConnectionPolicies.update",
      "networksecurity.authorizationPolicies.create",
      "networksecurity.authorizationPolicies.delete",
      "networksecurity.authorizationPolicies.get",
      "networksecurity.authorizationPolicies.getIamPolicy",
      "networksecurity.authorizationPolicies.list",
      "networksecurity.authorizationPolicies.setIamPolicy",
      "networksecurity.authorizationPolicies.update",
      "networksecurity.authorizationPolicies.use",
      "networksecurity.clientTlsPolicies.create",
      "networksecurity.clientTlsPolicies.delete",
      "networksecurity.clientTlsPolicies.get",
      "networksecurity.clientTlsPolicies.getIamPolicy",
      "networksecurity.clientTlsPolicies.list",
      "networksecurity.clientTlsPolicies.setIamPolicy",
      "networksecurity.clientTlsPolicies.update",
      "networksecurity.clientTlsPolicies.use",
      "networksecurity.firewallEndpointAssociations.create",
      "networksecurity.firewallEndpointAssociations.delete",
      "networksecurity.firewallEndpointAssociations.get",
      "networksecurity.firewallEndpointAssociations.list",
      "networksecurity.firewallEndpointAssociations.update",
      "networksecurity.firewallEndpoints.create",
      "networksecurity.firewallEndpoints.delete",
      "networksecurity.firewallEndpoints.get",
      "networksecurity.firewallEndpoints.list",
      "networksecurity.firewallEndpoints.update",
      "networksecurity.firewallEndpoints.use",
      "networksecurity.gatewaySecurityPolicies.create",
      "networksecurity.gatewaySecurityPolicies.delete",
      "networksecurity.gatewaySecurityPolicies.get",
      "networksecurity.gatewaySecurityPolicies.list",
      "networksecurity.gatewaySecurityPolicies.update",
      "networksecurity.gatewaySecurityPolicies.use",
      "networksecurity.gatewaySecurityPolicyRules.create",
      "networksecurity.gatewaySecurityPolicyRules.delete",
      "networksecurity.gatewaySecurityPolicyRules.get",
      "networksecurity.gatewaySecurityPolicyRules.list",
      "networksecurity.gatewaySecurityPolicyRules.update",
      "networksecurity.gatewaySecurityPolicyRules.use",
      "networksecurity.locations.get",
      "networksecurity.locations.list",
      "networksecurity.operations.cancel",
      "networksecurity.operations.delete",
      "networksecurity.operations.get",
      "networksecurity.operations.list",
      "networksecurity.securityProfileGroups.create",
      "networksecurity.securityProfileGroups.delete",
      "networksecurity.securityProfileGroups.get",
      "networksecurity.securityProfileGroups.list",
      "networksecurity.securityProfileGroups.update",
      "networksecurity.securityProfileGroups.use",
      "networksecurity.securityProfiles.create",
      "networksecurity.securityProfiles.delete",
      "networksecurity.securityProfiles.get",
      "networksecurity.securityProfiles.list",
      "networksecurity.securityProfiles.update",
      "networksecurity.securityProfiles.use",
      "networksecurity.serverTlsPolicies.create",
      "networksecurity.serverTlsPolicies.delete",
      "networksecurity.serverTlsPolicies.get",
      "networksecurity.serverTlsPolicies.getIamPolicy",
      "networksecurity.serverTlsPolicies.list",
      "networksecurity.serverTlsPolicies.setIamPolicy",
      "networksecurity.serverTlsPolicies.update",
      "networksecurity.serverTlsPolicies.use",
      "networksecurity.tlsInspectionPolicies.create",
      "networksecurity.tlsInspectionPolicies.delete",
      "networksecurity.tlsInspectionPolicies.get",
      "networksecurity.tlsInspectionPolicies.list",
      "networksecurity.tlsInspectionPolicies.update",
      "networksecurity.tlsInspectionPolicies.use",
      "networksecurity.urlLists.create",
      "networksecurity.urlLists.delete",
      "networksecurity.urlLists.get",
      "networksecurity.urlLists.list",
      "networksecurity.urlLists.update",
      "networksecurity.urlLists.use",
      "networkservices.endpointConfigSelectors.create",
      "networkservices.endpointConfigSelectors.delete",
      "networkservices.endpointConfigSelectors.get",
      "networkservices.endpointConfigSelectors.getIamPolicy",
      "networkservices.endpointConfigSelectors.list",
      "networkservices.endpointConfigSelectors.setIamPolicy",
      "networkservices.endpointConfigSelectors.update",
      "networkservices.endpointConfigSelectors.use",
      "networkservices.endpointPolicies.create",
      "networkservices.endpointPolicies.delete",
      "networkservices.endpointPolicies.get",
      "networkservices.endpointPolicies.getIamPolicy",
      "networkservices.endpointPolicies.list",
      "networkservices.endpointPolicies.setIamPolicy",
      "networkservices.endpointPolicies.update",
      "networkservices.endpointPolicies.use",
      "networkservices.gateways.create",
      "networkservices.gateways.delete",
      "networkservices.gateways.get",
      "networkservices.gateways.list",
      "networkservices.gateways.update",
      "networkservices.gateways.use",
      "networkservices.grpcRoutes.create",
      "networkservices.grpcRoutes.delete",
      "networkservices.grpcRoutes.get",
      "networkservices.grpcRoutes.getIamPolicy",
      "networkservices.grpcRoutes.list",
      "networkservices.grpcRoutes.setIamPolicy",
      "networkservices.grpcRoutes.update",
      "networkservices.grpcRoutes.use",
      "networkservices.httpFilters.create",
      "networkservices.httpFilters.delete",
      "networkservices.httpFilters.get",
      "networkservices.httpFilters.getIamPolicy",
      "networkservices.httpFilters.list",
      "networkservices.httpFilters.setIamPolicy",
      "networkservices.httpFilters.update",
      "networkservices.httpFilters.use",
      "networkservices.httpRoutes.create",
      "networkservices.httpRoutes.delete",
      "networkservices.httpRoutes.get",
      "networkservices.httpRoutes.getIamPolicy",
      "networkservices.httpRoutes.list",
      "networkservices.httpRoutes.setIamPolicy",
      "networkservices.httpRoutes.update",
      "networkservices.httpRoutes.use",
      "networkservices.httpfilters.create",
      "networkservices.httpfilters.delete",
      "networkservices.httpfilters.get",
      "networkservices.httpfilters.getIamPolicy",
      "networkservices.httpfilters.list",
      "networkservices.httpfilters.setIamPolicy",
      "networkservices.httpfilters.update",
      "networkservices.httpfilters.use",
      "networkservices.locations.get",
      "networkservices.locations.list",
      "networkservices.meshes.create",
      "networkservices.meshes.delete",
      "networkservices.meshes.get",
      "networkservices.meshes.getIamPolicy",
      "networkservices.meshes.list",
      "networkservices.meshes.setIamPolicy",
      "networkservices.meshes.update",
      "networkservices.meshes.use",
      "networkservices.operations.cancel",
      "networkservices.operations.delete",
      "networkservices.operations.get",
      "networkservices.operations.list",
      "networkservices.serviceBindings.create",
      "networkservices.serviceBindings.delete",
      "networkservices.serviceBindings.get",
      "networkservices.serviceBindings.list",
      "networkservices.serviceBindings.update",
      "networkservices.tcpRoutes.create",
      "networkservices.tcpRoutes.delete",
      "networkservices.tcpRoutes.get",
      "networkservices.tcpRoutes.getIamPolicy",
      "networkservices.tcpRoutes.list",
      "networkservices.tcpRoutes.setIamPolicy",
      "networkservices.tcpRoutes.update",
      "networkservices.tcpRoutes.use",
      "networkservices.tlsRoutes.create",
      "networkservices.tlsRoutes.delete",
      "networkservices.tlsRoutes.get",
      "networkservices.tlsRoutes.list",
      "networkservices.tlsRoutes.update",
      "networkservices.tlsRoutes.use",
      "opsconfigmonitoring.resourceMetadata.list",
      "orgpolicy.policy.get",
      "pubsub.schemas.attach",
      "pubsub.schemas.commit",
      "pubsub.schemas.create",
      "pubsub.schemas.delete",
      "pubsub.schemas.get",
      "pubsub.schemas.getIamPolicy",
      "pubsub.schemas.list",
      "pubsub.schemas.listRevisions",
      "pubsub.schemas.rollback",
      "pubsub.schemas.setIamPolicy",
      "pubsub.schemas.validate",
      "pubsub.snapshots.create",
      "pubsub.snapshots.delete",
      "pubsub.snapshots.get",
      "pubsub.snapshots.getIamPolicy",
      "pubsub.snapshots.list",
      "pubsub.snapshots.seek",
      "pubsub.snapshots.setIamPolicy",
      "pubsub.snapshots.update",
      "pubsub.subscriptions.consume",
      "pubsub.subscriptions.create",
      "pubsub.subscriptions.delete",
      "pubsub.subscriptions.get",
      "pubsub.subscriptions.getIamPolicy",
      "pubsub.subscriptions.list",
      "pubsub.subscriptions.setIamPolicy",
      "pubsub.subscriptions.update",
      "pubsub.topics.attachSubscription",
      "pubsub.topics.create",
      "pubsub.topics.delete",
      "pubsub.topics.detachSubscription",
      "pubsub.topics.get",
      "pubsub.topics.getIamPolicy",
      "pubsub.topics.list",
      "pubsub.topics.publish",
      "pubsub.topics.setIamPolicy",
      "pubsub.topics.update",
      "pubsub.topics.updateTag",
      "recommender.cloudsqlIdleInstanceRecommendations.get",
      "recommender.cloudsqlIdleInstanceRecommendations.list",
      "recommender.cloudsqlIdleInstanceRecommendations.update",
      "recommender.cloudsqlInstanceActivityInsights.get",
      "recommender.cloudsqlInstanceActivityInsights.list",
      "recommender.cloudsqlInstanceActivityInsights.update",
      "recommender.cloudsqlInstanceCpuUsageInsights.get",
      "recommender.cloudsqlInstanceCpuUsageInsights.list",
      "recommender.cloudsqlInstanceCpuUsageInsights.update",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.get",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.list",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.update",
      "recommender.cloudsqlInstanceMemoryUsageInsights.get",
      "recommender.cloudsqlInstanceMemoryUsageInsights.list",
      "recommender.cloudsqlInstanceMemoryUsageInsights.update",
      "recommender.cloudsqlInstanceOomProbabilityInsights.get",
      "recommender.cloudsqlInstanceOomProbabilityInsights.list",
      "recommender.cloudsqlInstanceOomProbabilityInsights.update",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.get",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.list",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.update",
      "recommender.cloudsqlInstancePerformanceInsights.get",
      "recommender.cloudsqlInstancePerformanceInsights.list",
      "recommender.cloudsqlInstancePerformanceInsights.update",
      "recommender.cloudsqlInstancePerformanceRecommendations.get",
      "recommender.cloudsqlInstancePerformanceRecommendations.list",
      "recommender.cloudsqlInstancePerformanceRecommendations.update",
      "recommender.cloudsqlInstanceReliabilityInsights.get",
      "recommender.cloudsqlInstanceReliabilityInsights.list",
      "recommender.cloudsqlInstanceReliabilityInsights.update",
      "recommender.cloudsqlInstanceReliabilityRecommendations.get",
      "recommender.cloudsqlInstanceReliabilityRecommendations.list",
      "recommender.cloudsqlInstanceReliabilityRecommendations.update",
      "recommender.cloudsqlInstanceSecurityInsights.get",
      "recommender.cloudsqlInstanceSecurityInsights.list",
      "recommender.cloudsqlInstanceSecurityInsights.update",
      "recommender.cloudsqlInstanceSecurityRecommendations.get",
      "recommender.cloudsqlInstanceSecurityRecommendations.list",
      "recommender.cloudsqlInstanceSecurityRecommendations.update",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.get",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.list",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.update",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.get",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.list",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.update",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.get",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.update",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.get",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.list",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.update",
      "recommender.containerDiagnosisInsights.get",
      "recommender.containerDiagnosisInsights.list",
      "recommender.containerDiagnosisInsights.update",
      "recommender.containerDiagnosisRecommendations.get",
      "recommender.containerDiagnosisRecommendations.list",
      "recommender.containerDiagnosisRecommendations.update",
      "recommender.iamPolicyInsights.get",
      "recommender.iamPolicyInsights.list",
      "recommender.iamPolicyInsights.update",
      "recommender.iamPolicyRecommendations.get",
      "recommender.iamPolicyRecommendations.list",
      "recommender.iamPolicyRecommendations.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.get",
      "recommender.networkAnalyzerGkeConnectivityInsights.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.update",
      "recommender.networkAnalyzerGkeIpAddressInsights.get",
      "recommender.networkAnalyzerGkeIpAddressInsights.list",
      "recommender.networkAnalyzerGkeIpAddressInsights.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list",
      "servicedirectory.namespaces.create",
      "servicedirectory.namespaces.delete",
      "servicedirectory.services.create",
      "servicedirectory.services.delete",
      "servicenetworking.operations.get",
      "servicenetworking.services.addPeering",
      "servicenetworking.services.createPeeredDnsDomain",
      "servicenetworking.services.deleteConnection",
      "servicenetworking.services.deletePeeredDnsDomain",
      "servicenetworking.services.disableVpcServiceControls",
      "servicenetworking.services.enableVpcServiceControls",
      "servicenetworking.services.get",
      "servicenetworking.services.listPeeredDnsDomains",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "stackdriver.projects.get",
      "stackdriver.resourceMetadata.list",
      "storage.buckets.create",
      "storage.buckets.createTagBinding",
      "storage.buckets.delete",
      "storage.buckets.deleteTagBinding",
      "storage.buckets.get",
      "storage.buckets.getIamPolicy",
      "storage.buckets.getObjectInsights",
      "storage.buckets.list",
      "storage.buckets.listEffectiveTags",
      "storage.buckets.listTagBindings",
      "storage.buckets.setIamPolicy",
      "storage.buckets.update",
      "storage.multipartUploads.abort",
      "storage.multipartUploads.create",
      "storage.multipartUploads.list",
      "storage.multipartUploads.listParts",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.getIamPolicy",
      "storage.objects.list",
      "storage.objects.setIamPolicy",
      "storage.objects.update",
      "trafficdirector.networks.getConfigs",
      "trafficdirector.networks.reportMetrics"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/composer.sharedVpcAgent",
    "title": "Composer Shared VPC Agent",
    "description": "Role that should be assigned to Composer Agent service account in Shared VPC host project",
    "includedPermissions": [
      "compute.networkAttachments.create",
      "compute.networkAttachments.delete",
      "compute.networkAttachments.get",
      "compute.networks.access",
      "compute.networks.addPeering",
      "compute.networks.get",
      "compute.networks.list",
      "compute.networks.listPeeringRoutes",
      "compute.networks.removePeering",
      "compute.networks.updatePeering",
      "compute.networks.use",
      "compute.networks.useExternalIp",
      "compute.projects.get",
      "compute.regions.get",
      "compute.regions.list",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.zones.get",
      "compute.zones.list",
      "dns.managedZones.get",
      "dns.managedZones.list",
      "dns.networks.targetWithPeeringZone"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/composer.user",
    "title": "Composer User",
    "description": "Read and use access to Composer resources.",
    "includedPermissions": [
      "composer.dags.execute",
      "composer.dags.get",
      "composer.dags.getSourceCode",
      "composer.dags.list",
      "composer.environments.get",
      "composer.environments.list",
      "composer.imageversions.list",
      "composer.operations.get",
      "composer.operations.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/composer.worker",
    "title": "Composer Worker",
    "description": "Worker access to Composer. Intended for service accounts.",
    "includedPermissions": [
      "artifactregistry.aptartifacts.create",
      "artifactregistry.dockerimages.get",
      "artifactregistry.dockerimages.list",
      "artifactregistry.files.get",
      "artifactregistry.files.list",
      "artifactregistry.kfpartifacts.create",
      "artifactregistry.locations.get",
      "artifactregistry.locations.list",
      "artifactregistry.mavenartifacts.get",
      "artifactregistry.mavenartifacts.list",
      "artifactregistry.npmpackages.get",
      "artifactregistry.npmpackages.list",
      "artifactregistry.packages.delete",
      "artifactregistry.packages.get",
      "artifactregistry.packages.list",
      "artifactregistry.projectsettings.get",
      "artifactregistry.projectsettings.update",
      "artifactregistry.pythonpackages.get",
      "artifactregistry.pythonpackages.list",
      "artifactregistry.repositories.create",
      "artifactregistry.repositories.createOnPush",
      "artifactregistry.repositories.createTagBinding",
      "artifactregistry.repositories.delete",
      "artifactregistry.repositories.deleteArtifacts",
      "artifactregistry.repositories.deleteTagBinding",
      "artifactregistry.repositories.downloadArtifacts",
      "artifactregistry.repositories.get",
      "artifactregistry.repositories.getIamPolicy",
      "artifactregistry.repositories.list",
      "artifactregistry.repositories.listEffectiveTags",
      "artifactregistry.repositories.listTagBindings",
      "artifactregistry.repositories.readViaVirtualRepository",
      "artifactregistry.repositories.setIamPolicy",
      "artifactregistry.repositories.update",
      "artifactregistry.repositories.uploadArtifacts",
      "artifactregistry.tags.create",
      "artifactregistry.tags.delete",
      "artifactregistry.tags.get",
      "artifactregistry.tags.list",
      "artifactregistry.tags.update",
      "artifactregistry.versions.delete",
      "artifactregistry.versions.get",
      "artifactregistry.versions.list",
      "artifactregistry.yumartifacts.create",
      "cloudbuild.builds.create",
      "cloudbuild.builds.get",
      "cloudbuild.builds.list",
      "cloudbuild.builds.update",
      "cloudbuild.operations.get",
      "cloudbuild.operations.list",
      "cloudbuild.workerpools.use",
      "composer.environments.get",
      "container.apiServices.create",
      "container.apiServices.delete",
      "container.apiServices.get",
      "container.apiServices.getStatus",
      "container.apiServices.list",
      "container.apiServices.update",
      "container.apiServices.updateStatus",
      "container.auditSinks.create",
      "container.auditSinks.delete",
      "container.auditSinks.get",
      "container.auditSinks.list",
      "container.auditSinks.update",
      "container.backendConfigs.create",
      "container.backendConfigs.delete",
      "container.backendConfigs.get",
      "container.backendConfigs.list",
      "container.backendConfigs.update",
      "container.bindings.create",
      "container.bindings.delete",
      "container.bindings.get",
      "container.bindings.list",
      "container.bindings.update",
      "container.certificateSigningRequests.approve",
      "container.certificateSigningRequests.create",
      "container.certificateSigningRequests.delete",
      "container.certificateSigningRequests.get",
      "container.certificateSigningRequests.getStatus",
      "container.certificateSigningRequests.list",
      "container.certificateSigningRequests.update",
      "container.certificateSigningRequests.updateStatus",
      "container.clusterRoleBindings.create",
      "container.clusterRoleBindings.delete",
      "container.clusterRoleBindings.get",
      "container.clusterRoleBindings.list",
      "container.clusterRoleBindings.update",
      "container.clusterRoles.bind",
      "container.clusterRoles.create",
      "container.clusterRoles.delete",
      "container.clusterRoles.escalate",
      "container.clusterRoles.get",
      "container.clusterRoles.list",
      "container.clusterRoles.update",
      "container.clusters.create",
      "container.clusters.createTagBinding",
      "container.clusters.delete",
      "container.clusters.deleteTagBinding",
      "container.clusters.get",
      "container.clusters.getCredentials",
      "container.clusters.impersonate",
      "container.clusters.list",
      "container.clusters.listEffectiveTags",
      "container.clusters.listTagBindings",
      "container.clusters.update",
      "container.componentStatuses.get",
      "container.componentStatuses.list",
      "container.configMaps.create",
      "container.configMaps.delete",
      "container.configMaps.get",
      "container.configMaps.list",
      "container.configMaps.update",
      "container.controllerRevisions.create",
      "container.controllerRevisions.delete",
      "container.controllerRevisions.get",
      "container.controllerRevisions.list",
      "container.controllerRevisions.update",
      "container.cronJobs.create",
      "container.cronJobs.delete",
      "container.cronJobs.get",
      "container.cronJobs.getStatus",
      "container.cronJobs.list",
      "container.cronJobs.update",
      "container.cronJobs.updateStatus",
      "container.csiDrivers.create",
      "container.csiDrivers.delete",
      "container.csiDrivers.get",
      "container.csiDrivers.list",
      "container.csiDrivers.update",
      "container.csiNodeInfos.create",
      "container.csiNodeInfos.delete",
      "container.csiNodeInfos.get",
      "container.csiNodeInfos.list",
      "container.csiNodeInfos.update",
      "container.csiNodes.create",
      "container.csiNodes.delete",
      "container.csiNodes.get",
      "container.csiNodes.list",
      "container.csiNodes.update",
      "container.customResourceDefinitions.create",
      "container.customResourceDefinitions.delete",
      "container.customResourceDefinitions.get",
      "container.customResourceDefinitions.getStatus",
      "container.customResourceDefinitions.list",
      "container.customResourceDefinitions.update",
      "container.customResourceDefinitions.updateStatus",
      "container.daemonSets.create",
      "container.daemonSets.delete",
      "container.daemonSets.get",
      "container.daemonSets.getStatus",
      "container.daemonSets.list",
      "container.daemonSets.update",
      "container.daemonSets.updateStatus",
      "container.deployments.create",
      "container.deployments.delete",
      "container.deployments.get",
      "container.deployments.getScale",
      "container.deployments.getStatus",
      "container.deployments.list",
      "container.deployments.rollback",
      "container.deployments.update",
      "container.deployments.updateScale",
      "container.deployments.updateStatus",
      "container.endpointSlices.create",
      "container.endpointSlices.delete",
      "container.endpointSlices.get",
      "container.endpointSlices.list",
      "container.endpointSlices.update",
      "container.endpoints.create",
      "container.endpoints.delete",
      "container.endpoints.get",
      "container.endpoints.list",
      "container.endpoints.update",
      "container.events.create",
      "container.events.delete",
      "container.events.get",
      "container.events.list",
      "container.events.update",
      "container.frontendConfigs.create",
      "container.frontendConfigs.delete",
      "container.frontendConfigs.get",
      "container.frontendConfigs.list",
      "container.frontendConfigs.update",
      "container.horizontalPodAutoscalers.create",
      "container.horizontalPodAutoscalers.delete",
      "container.horizontalPodAutoscalers.get",
      "container.horizontalPodAutoscalers.getStatus",
      "container.horizontalPodAutoscalers.list",
      "container.horizontalPodAutoscalers.update",
      "container.horizontalPodAutoscalers.updateStatus",
      "container.hostServiceAgent.use",
      "container.ingresses.create",
      "container.ingresses.delete",
      "container.ingresses.get",
      "container.ingresses.getStatus",
      "container.ingresses.list",
      "container.ingresses.update",
      "container.ingresses.updateStatus",
      "container.initializerConfigurations.create",
      "container.initializerConfigurations.delete",
      "container.initializerConfigurations.get",
      "container.initializerConfigurations.list",
      "container.initializerConfigurations.update",
      "container.jobs.create",
      "container.jobs.delete",
      "container.jobs.get",
      "container.jobs.getStatus",
      "container.jobs.list",
      "container.jobs.update",
      "container.jobs.updateStatus",
      "container.leases.create",
      "container.leases.delete",
      "container.leases.get",
      "container.leases.list",
      "container.leases.update",
      "container.limitRanges.create",
      "container.limitRanges.delete",
      "container.limitRanges.get",
      "container.limitRanges.list",
      "container.limitRanges.update",
      "container.localSubjectAccessReviews.create",
      "container.localSubjectAccessReviews.list",
      "container.managedCertificates.create",
      "container.managedCertificates.delete",
      "container.managedCertificates.get",
      "container.managedCertificates.list",
      "container.managedCertificates.update",
      "container.mutatingWebhookConfigurations.create",
      "container.mutatingWebhookConfigurations.delete",
      "container.mutatingWebhookConfigurations.get",
      "container.mutatingWebhookConfigurations.list",
      "container.mutatingWebhookConfigurations.update",
      "container.namespaces.create",
      "container.namespaces.delete",
      "container.namespaces.finalize",
      "container.namespaces.get",
      "container.namespaces.getStatus",
      "container.namespaces.list",
      "container.namespaces.update",
      "container.namespaces.updateStatus",
      "container.networkPolicies.create",
      "container.networkPolicies.delete",
      "container.networkPolicies.get",
      "container.networkPolicies.list",
      "container.networkPolicies.update",
      "container.nodes.create",
      "container.nodes.delete",
      "container.nodes.get",
      "container.nodes.getStatus",
      "container.nodes.list",
      "container.nodes.proxy",
      "container.nodes.update",
      "container.nodes.updateStatus",
      "container.operations.get",
      "container.operations.list",
      "container.persistentVolumeClaims.create",
      "container.persistentVolumeClaims.delete",
      "container.persistentVolumeClaims.get",
      "container.persistentVolumeClaims.getStatus",
      "container.persistentVolumeClaims.list",
      "container.persistentVolumeClaims.update",
      "container.persistentVolumeClaims.updateStatus",
      "container.persistentVolumes.create",
      "container.persistentVolumes.delete",
      "container.persistentVolumes.get",
      "container.persistentVolumes.getStatus",
      "container.persistentVolumes.list",
      "container.persistentVolumes.update",
      "container.persistentVolumes.updateStatus",
      "container.petSets.create",
      "container.petSets.delete",
      "container.petSets.get",
      "container.petSets.list",
      "container.petSets.update",
      "container.petSets.updateStatus",
      "container.podDisruptionBudgets.create",
      "container.podDisruptionBudgets.delete",
      "container.podDisruptionBudgets.get",
      "container.podDisruptionBudgets.getStatus",
      "container.podDisruptionBudgets.list",
      "container.podDisruptionBudgets.update",
      "container.podDisruptionBudgets.updateStatus",
      "container.podPresets.create",
      "container.podPresets.delete",
      "container.podPresets.get",
      "container.podPresets.list",
      "container.podPresets.update",
      "container.podSecurityPolicies.create",
      "container.podSecurityPolicies.delete",
      "container.podSecurityPolicies.get",
      "container.podSecurityPolicies.list",
      "container.podSecurityPolicies.update",
      "container.podSecurityPolicies.use",
      "container.podTemplates.create",
      "container.podTemplates.delete",
      "container.podTemplates.get",
      "container.podTemplates.list",
      "container.podTemplates.update",
      "container.pods.attach",
      "container.pods.create",
      "container.pods.delete",
      "container.pods.evict",
      "container.pods.exec",
      "container.pods.get",
      "container.pods.getLogs",
      "container.pods.getStatus",
      "container.pods.initialize",
      "container.pods.list",
      "container.pods.portForward",
      "container.pods.proxy",
      "container.pods.update",
      "container.pods.updateStatus",
      "container.priorityClasses.create",
      "container.priorityClasses.delete",
      "container.priorityClasses.get",
      "container.priorityClasses.list",
      "container.priorityClasses.update",
      "container.replicaSets.create",
      "container.replicaSets.delete",
      "container.replicaSets.get",
      "container.replicaSets.getScale",
      "container.replicaSets.getStatus",
      "container.replicaSets.list",
      "container.replicaSets.update",
      "container.replicaSets.updateScale",
      "container.replicaSets.updateStatus",
      "container.replicationControllers.create",
      "container.replicationControllers.delete",
      "container.replicationControllers.get",
      "container.replicationControllers.getScale",
      "container.replicationControllers.getStatus",
      "container.replicationControllers.list",
      "container.replicationControllers.update",
      "container.replicationControllers.updateScale",
      "container.replicationControllers.updateStatus",
      "container.resourceQuotas.create",
      "container.resourceQuotas.delete",
      "container.resourceQuotas.get",
      "container.resourceQuotas.getStatus",
      "container.resourceQuotas.list",
      "container.resourceQuotas.update",
      "container.resourceQuotas.updateStatus",
      "container.roleBindings.create",
      "container.roleBindings.delete",
      "container.roleBindings.get",
      "container.roleBindings.list",
      "container.roleBindings.update",
      "container.roles.bind",
      "container.roles.create",
      "container.roles.delete",
      "container.roles.escalate",
      "container.roles.get",
      "container.roles.list",
      "container.roles.update",
      "container.runtimeClasses.create",
      "container.runtimeClasses.delete",
      "container.runtimeClasses.get",
      "container.runtimeClasses.list",
      "container.runtimeClasses.update",
      "container.scheduledJobs.create",
      "container.scheduledJobs.delete",
      "container.scheduledJobs.get",
      "container.scheduledJobs.list",
      "container.scheduledJobs.update",
      "container.scheduledJobs.updateStatus",
      "container.secrets.create",
      "container.secrets.delete",
      "container.secrets.get",
      "container.secrets.list",
      "container.secrets.update",
      "container.selfSubjectAccessReviews.create",
      "container.selfSubjectAccessReviews.list",
      "container.selfSubjectRulesReviews.create",
      "container.serviceAccounts.create",
      "container.serviceAccounts.createToken",
      "container.serviceAccounts.delete",
      "container.serviceAccounts.get",
      "container.serviceAccounts.list",
      "container.serviceAccounts.update",
      "container.services.create",
      "container.services.delete",
      "container.services.get",
      "container.services.getStatus",
      "container.services.list",
      "container.services.proxy",
      "container.services.update",
      "container.services.updateStatus",
      "container.statefulSets.create",
      "container.statefulSets.delete",
      "container.statefulSets.get",
      "container.statefulSets.getScale",
      "container.statefulSets.getStatus",
      "container.statefulSets.list",
      "container.statefulSets.update",
      "container.statefulSets.updateScale",
      "container.statefulSets.updateStatus",
      "container.storageClasses.create",
      "container.storageClasses.delete",
      "container.storageClasses.get",
      "container.storageClasses.list",
      "container.storageClasses.update",
      "container.storageStates.create",
      "container.storageStates.delete",
      "container.storageStates.get",
      "container.storageStates.getStatus",
      "container.storageStates.list",
      "container.storageStates.update",
      "container.storageStates.updateStatus",
      "container.storageVersionMigrations.create",
      "container.storageVersionMigrations.delete",
      "container.storageVersionMigrations.get",
      "container.storageVersionMigrations.getStatus",
      "container.storageVersionMigrations.list",
      "container.storageVersionMigrations.update",
      "container.storageVersionMigrations.updateStatus",
      "container.subjectAccessReviews.create",
      "container.subjectAccessReviews.list",
      "container.thirdPartyObjects.create",
      "container.thirdPartyObjects.delete",
      "container.thirdPartyObjects.get",
      "container.thirdPartyObjects.list",
      "container.thirdPartyObjects.update",
      "container.thirdPartyResources.create",
      "container.thirdPartyResources.delete",
      "container.thirdPartyResources.get",
      "container.thirdPartyResources.list",
      "container.thirdPartyResources.update",
      "container.tokenReviews.create",
      "container.updateInfos.create",
      "container.updateInfos.delete",
      "container.updateInfos.get",
      "container.updateInfos.list",
      "container.updateInfos.update",
      "container.validatingWebhookConfigurations.create",
      "container.validatingWebhookConfigurations.delete",
      "container.validatingWebhookConfigurations.get",
      "container.validatingWebhookConfigurations.list",
      "container.validatingWebhookConfigurations.update",
      "container.volumeAttachments.create",
      "container.volumeAttachments.delete",
      "container.volumeAttachments.get",
      "container.volumeAttachments.getStatus",
      "container.volumeAttachments.list",
      "container.volumeAttachments.update",
      "container.volumeAttachments.updateStatus",
      "container.volumeSnapshotClasses.create",
      "container.volumeSnapshotClasses.delete",
      "container.volumeSnapshotClasses.get",
      "container.volumeSnapshotClasses.list",
      "container.volumeSnapshotClasses.update",
      "container.volumeSnapshotContents.create",
      "container.volumeSnapshotContents.delete",
      "container.volumeSnapshotContents.get",
      "container.volumeSnapshotContents.getStatus",
      "container.volumeSnapshotContents.list",
      "container.volumeSnapshotContents.update",
      "container.volumeSnapshotContents.updateStatus",
      "container.volumeSnapshots.create",
      "container.volumeSnapshots.delete",
      "container.volumeSnapshots.get",
      "container.volumeSnapshots.getStatus",
      "container.volumeSnapshots.list",
      "container.volumeSnapshots.update",
      "container.volumeSnapshots.updateStatus",
      "containeranalysis.occurrences.create",
      "containeranalysis.occurrences.delete",
      "containeranalysis.occurrences.get",
      "containeranalysis.occurrences.list",
      "containeranalysis.occurrences.update",
      "datalineage.events.create",
      "datalineage.processes.create",
      "datalineage.processes.get",
      "datalineage.processes.update",
      "datalineage.runs.create",
      "datalineage.runs.get",
      "datalineage.runs.update",
      "logging.logEntries.create",
      "logging.logEntries.list",
      "logging.logEntries.route",
      "logging.views.access",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.timeSeries.create",
      "monitoring.timeSeries.list",
      "orgpolicy.policy.get",
      "pubsub.schemas.attach",
      "pubsub.schemas.commit",
      "pubsub.schemas.create",
      "pubsub.schemas.delete",
      "pubsub.schemas.get",
      "pubsub.schemas.list",
      "pubsub.schemas.listRevisions",
      "pubsub.schemas.rollback",
      "pubsub.schemas.validate",
      "pubsub.snapshots.create",
      "pubsub.snapshots.delete",
      "pubsub.snapshots.get",
      "pubsub.snapshots.list",
      "pubsub.snapshots.seek",
      "pubsub.snapshots.update",
      "pubsub.subscriptions.consume",
      "pubsub.subscriptions.create",
      "pubsub.subscriptions.delete",
      "pubsub.subscriptions.get",
      "pubsub.subscriptions.list",
      "pubsub.subscriptions.update",
      "pubsub.topics.attachSubscription",
      "pubsub.topics.create",
      "pubsub.topics.delete",
      "pubsub.topics.detachSubscription",
      "pubsub.topics.get",
      "pubsub.topics.list",
      "pubsub.topics.publish",
      "pubsub.topics.update",
      "pubsub.topics.updateTag",
      "recommender.containerDiagnosisInsights.get",
      "recommender.containerDiagnosisInsights.list",
      "recommender.containerDiagnosisInsights.update",
      "recommender.containerDiagnosisRecommendations.get",
      "recommender.containerDiagnosisRecommendations.list",
      "recommender.containerDiagnosisRecommendations.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.get",
      "recommender.networkAnalyzerGkeConnectivityInsights.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.update",
      "recommender.networkAnalyzerGkeIpAddressInsights.get",
      "recommender.networkAnalyzerGkeIpAddressInsights.list",
      "recommender.networkAnalyzerGkeIpAddressInsights.update",
      "remotebuildexecution.blobs.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "source.repos.get",
      "source.repos.list",
      "storage.buckets.create",
      "storage.buckets.get",
      "storage.buckets.list",
      "storage.multipartUploads.abort",
      "storage.multipartUploads.create",
      "storage.multipartUploads.list",
      "storage.multipartUploads.listParts",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.getIamPolicy",
      "storage.objects.list",
      "storage.objects.setIamPolicy",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/compute.admin",
    "title": "Compute Admin",
    "description": "Full control of all Compute Engine resources.",
    "includedPermissions": [
      "compute.acceleratorTypes.get",
      "compute.acceleratorTypes.list",
      "compute.addresses.create",
      "compute.addresses.createInternal",
      "compute.addresses.delete",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.addresses.setLabels",
      "compute.addresses.use",
      "compute.addresses.useInternal",
      "compute.autoscalers.create",
      "compute.autoscalers.delete",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.autoscalers.update",
      "compute.backendBuckets.addSignedUrlKey",
      "compute.backendBuckets.create",
      "compute.backendBuckets.createTagBinding",
      "compute.backendBuckets.delete",
      "compute.backendBuckets.deleteSignedUrlKey",
      "compute.backendBuckets.deleteTagBinding",
      "compute.backendBuckets.get",
      "compute.backendBuckets.getIamPolicy",
      "compute.backendBuckets.list",
      "compute.backendBuckets.listEffectiveTags",
      "compute.backendBuckets.listTagBindings",
      "compute.backendBuckets.setIamPolicy",
      "compute.backendBuckets.setSecurityPolicy",
      "compute.backendBuckets.update",
      "compute.backendBuckets.use",
      "compute.backendServices.addSignedUrlKey",
      "compute.backendServices.create",
      "compute.backendServices.createTagBinding",
      "compute.backendServices.delete",
      "compute.backendServices.deleteSignedUrlKey",
      "compute.backendServices.deleteTagBinding",
      "compute.backendServices.get",
      "compute.backendServices.getIamPolicy",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.backendServices.setIamPolicy",
      "compute.backendServices.setSecurityPolicy",
      "compute.backendServices.update",
      "compute.backendServices.use",
      "compute.commitments.create",
      "compute.commitments.get",
      "compute.commitments.list",
      "compute.commitments.update",
      "compute.commitments.updateReservations",
      "compute.diskTypes.get",
      "compute.diskTypes.list",
      "compute.disks.addResourcePolicies",
      "compute.disks.create",
      "compute.disks.createSnapshot",
      "compute.disks.createTagBinding",
      "compute.disks.delete",
      "compute.disks.deleteTagBinding",
      "compute.disks.get",
      "compute.disks.getIamPolicy",
      "compute.disks.list",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.disks.removeResourcePolicies",
      "compute.disks.resize",
      "compute.disks.setIamPolicy",
      "compute.disks.setLabels",
      "compute.disks.startAsyncReplication",
      "compute.disks.stopAsyncReplication",
      "compute.disks.stopGroupAsyncReplication",
      "compute.disks.update",
      "compute.disks.use",
      "compute.disks.useReadOnly",
      "compute.externalVpnGateways.create",
      "compute.externalVpnGateways.delete",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.list",
      "compute.externalVpnGateways.setLabels",
      "compute.externalVpnGateways.use",
      "compute.firewallPolicies.addAssociation",
      "compute.firewallPolicies.cloneRules",
      "compute.firewallPolicies.copyRules",
      "compute.firewallPolicies.create",
      "compute.firewallPolicies.createTagBinding",
      "compute.firewallPolicies.delete",
      "compute.firewallPolicies.deleteTagBinding",
      "compute.firewallPolicies.get",
      "compute.firewallPolicies.getIamPolicy",
      "compute.firewallPolicies.list",
      "compute.firewallPolicies.listEffectiveTags",
      "compute.firewallPolicies.listTagBindings",
      "compute.firewallPolicies.move",
      "compute.firewallPolicies.removeAssociation",
      "compute.firewallPolicies.setIamPolicy",
      "compute.firewallPolicies.update",
      "compute.firewallPolicies.use",
      "compute.firewalls.create",
      "compute.firewalls.createTagBinding",
      "compute.firewalls.delete",
      "compute.firewalls.deleteTagBinding",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.firewalls.update",
      "compute.forwardingRules.create",
      "compute.forwardingRules.createTagBinding",
      "compute.forwardingRules.delete",
      "compute.forwardingRules.deleteTagBinding",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.forwardingRules.pscCreate",
      "compute.forwardingRules.pscDelete",
      "compute.forwardingRules.pscSetLabels",
      "compute.forwardingRules.pscSetTarget",
      "compute.forwardingRules.pscUpdate",
      "compute.forwardingRules.setLabels",
      "compute.forwardingRules.setTarget",
      "compute.forwardingRules.update",
      "compute.forwardingRules.use",
      "compute.futureReservations.cancel",
      "compute.futureReservations.create",
      "compute.futureReservations.delete",
      "compute.futureReservations.get",
      "compute.futureReservations.getIamPolicy",
      "compute.futureReservations.list",
      "compute.futureReservations.setIamPolicy",
      "compute.futureReservations.update",
      "compute.globalAddresses.create",
      "compute.globalAddresses.createInternal",
      "compute.globalAddresses.delete",
      "compute.globalAddresses.deleteInternal",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalAddresses.setLabels",
      "compute.globalAddresses.use",
      "compute.globalForwardingRules.create",
      "compute.globalForwardingRules.createTagBinding",
      "compute.globalForwardingRules.delete",
      "compute.globalForwardingRules.deleteTagBinding",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalForwardingRules.pscCreate",
      "compute.globalForwardingRules.pscDelete",
      "compute.globalForwardingRules.pscGet",
      "compute.globalForwardingRules.pscSetLabels",
      "compute.globalForwardingRules.pscSetTarget",
      "compute.globalForwardingRules.pscUpdate",
      "compute.globalForwardingRules.setLabels",
      "compute.globalForwardingRules.setTarget",
      "compute.globalForwardingRules.update",
      "compute.globalNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.create",
      "compute.globalNetworkEndpointGroups.createTagBinding",
      "compute.globalNetworkEndpointGroups.delete",
      "compute.globalNetworkEndpointGroups.deleteTagBinding",
      "compute.globalNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.get",
      "compute.globalNetworkEndpointGroups.list",
      "compute.globalNetworkEndpointGroups.listEffectiveTags",
      "compute.globalNetworkEndpointGroups.listTagBindings",
      "compute.globalNetworkEndpointGroups.use",
      "compute.globalOperations.delete",
      "compute.globalOperations.get",
      "compute.globalOperations.getIamPolicy",
      "compute.globalOperations.list",
      "compute.globalOperations.setIamPolicy",
      "compute.globalPublicDelegatedPrefixes.create",
      "compute.globalPublicDelegatedPrefixes.delete",
      "compute.globalPublicDelegatedPrefixes.get",
      "compute.globalPublicDelegatedPrefixes.list",
      "compute.globalPublicDelegatedPrefixes.update",
      "compute.globalPublicDelegatedPrefixes.updatePolicy",
      "compute.globalPublicDelegatedPrefixes.use",
      "compute.healthChecks.create",
      "compute.healthChecks.createTagBinding",
      "compute.healthChecks.delete",
      "compute.healthChecks.deleteTagBinding",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.healthChecks.update",
      "compute.healthChecks.use",
      "compute.healthChecks.useReadOnly",
      "compute.httpHealthChecks.create",
      "compute.httpHealthChecks.createTagBinding",
      "compute.httpHealthChecks.delete",
      "compute.httpHealthChecks.deleteTagBinding",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpHealthChecks.update",
      "compute.httpHealthChecks.use",
      "compute.httpHealthChecks.useReadOnly",
      "compute.httpsHealthChecks.create",
      "compute.httpsHealthChecks.createTagBinding",
      "compute.httpsHealthChecks.delete",
      "compute.httpsHealthChecks.deleteTagBinding",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.update",
      "compute.httpsHealthChecks.use",
      "compute.httpsHealthChecks.useReadOnly",
      "compute.images.create",
      "compute.images.createTagBinding",
      "compute.images.delete",
      "compute.images.deleteTagBinding",
      "compute.images.deprecate",
      "compute.images.get",
      "compute.images.getFromFamily",
      "compute.images.getIamPolicy",
      "compute.images.list",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.images.setIamPolicy",
      "compute.images.setLabels",
      "compute.images.update",
      "compute.images.useReadOnly",
      "compute.instanceGroupManagers.create",
      "compute.instanceGroupManagers.delete",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroupManagers.update",
      "compute.instanceGroupManagers.use",
      "compute.instanceGroups.create",
      "compute.instanceGroups.delete",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instanceGroups.update",
      "compute.instanceGroups.use",
      "compute.instanceTemplates.create",
      "compute.instanceTemplates.delete",
      "compute.instanceTemplates.get",
      "compute.instanceTemplates.getIamPolicy",
      "compute.instanceTemplates.list",
      "compute.instanceTemplates.setIamPolicy",
      "compute.instanceTemplates.useReadOnly",
      "compute.instances.addAccessConfig",
      "compute.instances.addMaintenancePolicies",
      "compute.instances.addResourcePolicies",
      "compute.instances.attachDisk",
      "compute.instances.create",
      "compute.instances.createTagBinding",
      "compute.instances.delete",
      "compute.instances.deleteAccessConfig",
      "compute.instances.deleteTagBinding",
      "compute.instances.detachDisk",
      "compute.instances.get",
      "compute.instances.getEffectiveFirewalls",
      "compute.instances.getGuestAttributes",
      "compute.instances.getIamPolicy",
      "compute.instances.getScreenshot",
      "compute.instances.getSerialPortOutput",
      "compute.instances.getShieldedInstanceIdentity",
      "compute.instances.getShieldedVmIdentity",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listReferrers",
      "compute.instances.listTagBindings",
      "compute.instances.osAdminLogin",
      "compute.instances.osLogin",
      "compute.instances.removeMaintenancePolicies",
      "compute.instances.removeResourcePolicies",
      "compute.instances.reset",
      "compute.instances.resume",
      "compute.instances.sendDiagnosticInterrupt",
      "compute.instances.setDeletionProtection",
      "compute.instances.setDiskAutoDelete",
      "compute.instances.setIamPolicy",
      "compute.instances.setLabels",
      "compute.instances.setMachineResources",
      "compute.instances.setMachineType",
      "compute.instances.setMetadata",
      "compute.instances.setMinCpuPlatform",
      "compute.instances.setName",
      "compute.instances.setScheduling",
      "compute.instances.setSecurityPolicy",
      "compute.instances.setServiceAccount",
      "compute.instances.setShieldedInstanceIntegrityPolicy",
      "compute.instances.setShieldedVmIntegrityPolicy",
      "compute.instances.setTags",
      "compute.instances.simulateMaintenanceEvent",
      "compute.instances.start",
      "compute.instances.startWithEncryptionKey",
      "compute.instances.stop",
      "compute.instances.suspend",
      "compute.instances.update",
      "compute.instances.updateAccessConfig",
      "compute.instances.updateDisplayDevice",
      "compute.instances.updateNetworkInterface",
      "compute.instances.updateSecurity",
      "compute.instances.updateShieldedInstanceConfig",
      "compute.instances.updateShieldedVmConfig",
      "compute.instances.use",
      "compute.instances.useReadOnly",
      "compute.instantSnapshots.create",
      "compute.instantSnapshots.delete",
      "compute.instantSnapshots.export",
      "compute.instantSnapshots.get",
      "compute.instantSnapshots.getIamPolicy",
      "compute.instantSnapshots.list",
      "compute.instantSnapshots.setIamPolicy",
      "compute.instantSnapshots.setLabels",
      "compute.instantSnapshots.useReadOnly",
      "compute.interconnectAttachments.create",
      "compute.interconnectAttachments.delete",
      "compute.interconnectAttachments.get",
      "compute.interconnectAttachments.list",
      "compute.interconnectAttachments.setLabels",
      "compute.interconnectAttachments.update",
      "compute.interconnectAttachments.use",
      "compute.interconnectLocations.get",
      "compute.interconnectLocations.list",
      "compute.interconnectRemoteLocations.get",
      "compute.interconnectRemoteLocations.list",
      "compute.interconnects.create",
      "compute.interconnects.delete",
      "compute.interconnects.get",
      "compute.interconnects.list",
      "compute.interconnects.setLabels",
      "compute.interconnects.update",
      "compute.interconnects.use",
      "compute.licenseCodes.get",
      "compute.licenseCodes.getIamPolicy",
      "compute.licenseCodes.list",
      "compute.licenseCodes.setIamPolicy",
      "compute.licenseCodes.update",
      "compute.licenseCodes.use",
      "compute.licenses.create",
      "compute.licenses.delete",
      "compute.licenses.get",
      "compute.licenses.getIamPolicy",
      "compute.licenses.list",
      "compute.licenses.setIamPolicy",
      "compute.machineImages.create",
      "compute.machineImages.delete",
      "compute.machineImages.get",
      "compute.machineImages.getIamPolicy",
      "compute.machineImages.list",
      "compute.machineImages.setIamPolicy",
      "compute.machineImages.useReadOnly",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.maintenancePolicies.create",
      "compute.maintenancePolicies.delete",
      "compute.maintenancePolicies.get",
      "compute.maintenancePolicies.getIamPolicy",
      "compute.maintenancePolicies.list",
      "compute.maintenancePolicies.setIamPolicy",
      "compute.maintenancePolicies.use",
      "compute.networkAttachments.create",
      "compute.networkAttachments.delete",
      "compute.networkAttachments.get",
      "compute.networkAttachments.getIamPolicy",
      "compute.networkAttachments.list",
      "compute.networkAttachments.setIamPolicy",
      "compute.networkEdgeSecurityServices.create",
      "compute.networkEdgeSecurityServices.delete",
      "compute.networkEdgeSecurityServices.get",
      "compute.networkEdgeSecurityServices.list",
      "compute.networkEdgeSecurityServices.update",
      "compute.networkEndpointGroups.attachNetworkEndpoints",
      "compute.networkEndpointGroups.create",
      "compute.networkEndpointGroups.createTagBinding",
      "compute.networkEndpointGroups.delete",
      "compute.networkEndpointGroups.deleteTagBinding",
      "compute.networkEndpointGroups.detachNetworkEndpoints",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.getIamPolicy",
      "compute.networkEndpointGroups.list",
      "compute.networkEndpointGroups.listEffectiveTags",
      "compute.networkEndpointGroups.listTagBindings",
      "compute.networkEndpointGroups.setIamPolicy",
      "compute.networkEndpointGroups.use",
      "compute.networks.access",
      "compute.networks.addPeering",
      "compute.networks.create",
      "compute.networks.createTagBinding",
      "compute.networks.delete",
      "compute.networks.deleteTagBinding",
      "compute.networks.get",
      "compute.networks.getEffectiveFirewalls",
      "compute.networks.getRegionEffectiveFirewalls",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listPeeringRoutes",
      "compute.networks.listTagBindings",
      "compute.networks.mirror",
      "compute.networks.removePeering",
      "compute.networks.setFirewallPolicy",
      "compute.networks.switchToCustomMode",
      "compute.networks.update",
      "compute.networks.updatePeering",
      "compute.networks.updatePolicy",
      "compute.networks.use",
      "compute.networks.useExternalIp",
      "compute.nodeGroups.addNodes",
      "compute.nodeGroups.create",
      "compute.nodeGroups.delete",
      "compute.nodeGroups.deleteNodes",
      "compute.nodeGroups.get",
      "compute.nodeGroups.getIamPolicy",
      "compute.nodeGroups.list",
      "compute.nodeGroups.setIamPolicy",
      "compute.nodeGroups.setNodeTemplate",
      "compute.nodeGroups.simulateMaintenanceEvent",
      "compute.nodeGroups.update",
      "compute.nodeTemplates.create",
      "compute.nodeTemplates.delete",
      "compute.nodeTemplates.get",
      "compute.nodeTemplates.getIamPolicy",
      "compute.nodeTemplates.list",
      "compute.nodeTemplates.setIamPolicy",
      "compute.nodeTypes.get",
      "compute.nodeTypes.list",
      "compute.organizations.administerXpn",
      "compute.organizations.disableXpnHost",
      "compute.organizations.disableXpnResource",
      "compute.organizations.enableXpnHost",
      "compute.organizations.enableXpnResource",
      "compute.organizations.listAssociations",
      "compute.organizations.setFirewallPolicy",
      "compute.organizations.setSecurityPolicy",
      "compute.oslogin.updateExternalUser",
      "compute.packetMirrorings.create",
      "compute.packetMirrorings.delete",
      "compute.packetMirrorings.get",
      "compute.packetMirrorings.list",
      "compute.packetMirrorings.update",
      "compute.projects.get",
      "compute.projects.setCommonInstanceMetadata",
      "compute.projects.setDefaultNetworkTier",
      "compute.projects.setDefaultServiceAccount",
      "compute.projects.setUsageExportBucket",
      "compute.publicAdvertisedPrefixes.create",
      "compute.publicAdvertisedPrefixes.delete",
      "compute.publicAdvertisedPrefixes.get",
      "compute.publicAdvertisedPrefixes.list",
      "compute.publicAdvertisedPrefixes.update",
      "compute.publicAdvertisedPrefixes.updatePolicy",
      "compute.publicAdvertisedPrefixes.use",
      "compute.publicDelegatedPrefixes.create",
      "compute.publicDelegatedPrefixes.delete",
      "compute.publicDelegatedPrefixes.get",
      "compute.publicDelegatedPrefixes.list",
      "compute.publicDelegatedPrefixes.update",
      "compute.publicDelegatedPrefixes.updatePolicy",
      "compute.publicDelegatedPrefixes.use",
      "compute.regionBackendServices.create",
      "compute.regionBackendServices.createTagBinding",
      "compute.regionBackendServices.delete",
      "compute.regionBackendServices.deleteTagBinding",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.getIamPolicy",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionBackendServices.setIamPolicy",
      "compute.regionBackendServices.setSecurityPolicy",
      "compute.regionBackendServices.update",
      "compute.regionBackendServices.use",
      "compute.regionFirewallPolicies.cloneRules",
      "compute.regionFirewallPolicies.create",
      "compute.regionFirewallPolicies.createTagBinding",
      "compute.regionFirewallPolicies.delete",
      "compute.regionFirewallPolicies.deleteTagBinding",
      "compute.regionFirewallPolicies.get",
      "compute.regionFirewallPolicies.getIamPolicy",
      "compute.regionFirewallPolicies.list",
      "compute.regionFirewallPolicies.listEffectiveTags",
      "compute.regionFirewallPolicies.listTagBindings",
      "compute.regionFirewallPolicies.setIamPolicy",
      "compute.regionFirewallPolicies.update",
      "compute.regionFirewallPolicies.use",
      "compute.regionHealthCheckServices.create",
      "compute.regionHealthCheckServices.delete",
      "compute.regionHealthCheckServices.get",
      "compute.regionHealthCheckServices.list",
      "compute.regionHealthCheckServices.update",
      "compute.regionHealthCheckServices.use",
      "compute.regionHealthChecks.create",
      "compute.regionHealthChecks.createTagBinding",
      "compute.regionHealthChecks.delete",
      "compute.regionHealthChecks.deleteTagBinding",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionHealthChecks.update",
      "compute.regionHealthChecks.use",
      "compute.regionHealthChecks.useReadOnly",
      "compute.regionNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.create",
      "compute.regionNetworkEndpointGroups.createTagBinding",
      "compute.regionNetworkEndpointGroups.delete",
      "compute.regionNetworkEndpointGroups.deleteTagBinding",
      "compute.regionNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionNetworkEndpointGroups.listEffectiveTags",
      "compute.regionNetworkEndpointGroups.listTagBindings",
      "compute.regionNetworkEndpointGroups.use",
      "compute.regionNotificationEndpoints.create",
      "compute.regionNotificationEndpoints.delete",
      "compute.regionNotificationEndpoints.get",
      "compute.regionNotificationEndpoints.list",
      "compute.regionNotificationEndpoints.update",
      "compute.regionNotificationEndpoints.use",
      "compute.regionOperations.delete",
      "compute.regionOperations.get",
      "compute.regionOperations.getIamPolicy",
      "compute.regionOperations.list",
      "compute.regionOperations.setIamPolicy",
      "compute.regionSecurityPolicies.create",
      "compute.regionSecurityPolicies.createTagBinding",
      "compute.regionSecurityPolicies.delete",
      "compute.regionSecurityPolicies.deleteTagBinding",
      "compute.regionSecurityPolicies.get",
      "compute.regionSecurityPolicies.list",
      "compute.regionSecurityPolicies.listEffectiveTags",
      "compute.regionSecurityPolicies.listTagBindings",
      "compute.regionSecurityPolicies.update",
      "compute.regionSecurityPolicies.use",
      "compute.regionSslCertificates.create",
      "compute.regionSslCertificates.createTagBinding",
      "compute.regionSslCertificates.delete",
      "compute.regionSslCertificates.deleteTagBinding",
      "compute.regionSslCertificates.get",
      "compute.regionSslCertificates.list",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionSslPolicies.create",
      "compute.regionSslPolicies.delete",
      "compute.regionSslPolicies.get",
      "compute.regionSslPolicies.list",
      "compute.regionSslPolicies.listAvailableFeatures",
      "compute.regionSslPolicies.update",
      "compute.regionSslPolicies.use",
      "compute.regionTargetHttpProxies.create",
      "compute.regionTargetHttpProxies.createTagBinding",
      "compute.regionTargetHttpProxies.delete",
      "compute.regionTargetHttpProxies.deleteTagBinding",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpProxies.setUrlMap",
      "compute.regionTargetHttpProxies.update",
      "compute.regionTargetHttpProxies.use",
      "compute.regionTargetHttpsProxies.create",
      "compute.regionTargetHttpsProxies.createTagBinding",
      "compute.regionTargetHttpsProxies.delete",
      "compute.regionTargetHttpsProxies.deleteTagBinding",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.setSslCertificates",
      "compute.regionTargetHttpsProxies.setUrlMap",
      "compute.regionTargetHttpsProxies.update",
      "compute.regionTargetHttpsProxies.use",
      "compute.regionTargetTcpProxies.create",
      "compute.regionTargetTcpProxies.delete",
      "compute.regionTargetTcpProxies.get",
      "compute.regionTargetTcpProxies.list",
      "compute.regionTargetTcpProxies.use",
      "compute.regionUrlMaps.create",
      "compute.regionUrlMaps.createTagBinding",
      "compute.regionUrlMaps.delete",
      "compute.regionUrlMaps.deleteTagBinding",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.invalidateCache",
      "compute.regionUrlMaps.list",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.regionUrlMaps.update",
      "compute.regionUrlMaps.use",
      "compute.regionUrlMaps.validate",
      "compute.regions.get",
      "compute.regions.list",
      "compute.reservations.create",
      "compute.reservations.delete",
      "compute.reservations.get",
      "compute.reservations.list",
      "compute.reservations.resize",
      "compute.reservations.update",
      "compute.resourcePolicies.create",
      "compute.resourcePolicies.delete",
      "compute.resourcePolicies.get",
      "compute.resourcePolicies.getIamPolicy",
      "compute.resourcePolicies.list",
      "compute.resourcePolicies.setIamPolicy",
      "compute.resourcePolicies.update",
      "compute.resourcePolicies.use",
      "compute.resourcePolicies.useReadOnly",
      "compute.routers.create",
      "compute.routers.delete",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routers.update",
      "compute.routers.use",
      "compute.routes.create",
      "compute.routes.createTagBinding",
      "compute.routes.delete",
      "compute.routes.deleteTagBinding",
      "compute.routes.get",
      "compute.routes.list",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.securityPolicies.addAssociation",
      "compute.securityPolicies.copyRules",
      "compute.securityPolicies.create",
      "compute.securityPolicies.createTagBinding",
      "compute.securityPolicies.delete",
      "compute.securityPolicies.deleteTagBinding",
      "compute.securityPolicies.get",
      "compute.securityPolicies.getIamPolicy",
      "compute.securityPolicies.list",
      "compute.securityPolicies.listEffectiveTags",
      "compute.securityPolicies.listTagBindings",
      "compute.securityPolicies.move",
      "compute.securityPolicies.removeAssociation",
      "compute.securityPolicies.setIamPolicy",
      "compute.securityPolicies.setLabels",
      "compute.securityPolicies.update",
      "compute.securityPolicies.use",
      "compute.serviceAttachments.create",
      "compute.serviceAttachments.delete",
      "compute.serviceAttachments.get",
      "compute.serviceAttachments.getIamPolicy",
      "compute.serviceAttachments.list",
      "compute.serviceAttachments.setIamPolicy",
      "compute.serviceAttachments.update",
      "compute.serviceAttachments.use",
      "compute.snapshots.create",
      "compute.snapshots.createTagBinding",
      "compute.snapshots.delete",
      "compute.snapshots.deleteTagBinding",
      "compute.snapshots.get",
      "compute.snapshots.getIamPolicy",
      "compute.snapshots.list",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.snapshots.setIamPolicy",
      "compute.snapshots.setLabels",
      "compute.snapshots.useReadOnly",
      "compute.sslCertificates.create",
      "compute.sslCertificates.createTagBinding",
      "compute.sslCertificates.delete",
      "compute.sslCertificates.deleteTagBinding",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.create",
      "compute.sslPolicies.createTagBinding",
      "compute.sslPolicies.delete",
      "compute.sslPolicies.deleteTagBinding",
      "compute.sslPolicies.get",
      "compute.sslPolicies.list",
      "compute.sslPolicies.listAvailableFeatures",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.sslPolicies.update",
      "compute.sslPolicies.use",
      "compute.subnetworks.create",
      "compute.subnetworks.createTagBinding",
      "compute.subnetworks.delete",
      "compute.subnetworks.deleteTagBinding",
      "compute.subnetworks.expandIpCidrRange",
      "compute.subnetworks.get",
      "compute.subnetworks.getIamPolicy",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.subnetworks.mirror",
      "compute.subnetworks.setIamPolicy",
      "compute.subnetworks.setPrivateIpGoogleAccess",
      "compute.subnetworks.update",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.targetGrpcProxies.create",
      "compute.targetGrpcProxies.delete",
      "compute.targetGrpcProxies.get",
      "compute.targetGrpcProxies.list",
      "compute.targetGrpcProxies.update",
      "compute.targetGrpcProxies.use",
      "compute.targetHttpProxies.create",
      "compute.targetHttpProxies.createTagBinding",
      "compute.targetHttpProxies.delete",
      "compute.targetHttpProxies.deleteTagBinding",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpProxies.setUrlMap",
      "compute.targetHttpProxies.update",
      "compute.targetHttpProxies.use",
      "compute.targetHttpsProxies.create",
      "compute.targetHttpsProxies.createTagBinding",
      "compute.targetHttpsProxies.delete",
      "compute.targetHttpsProxies.deleteTagBinding",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetHttpsProxies.setCertificateMap",
      "compute.targetHttpsProxies.setQuicOverride",
      "compute.targetHttpsProxies.setSslCertificates",
      "compute.targetHttpsProxies.setSslPolicy",
      "compute.targetHttpsProxies.setUrlMap",
      "compute.targetHttpsProxies.update",
      "compute.targetHttpsProxies.use",
      "compute.targetInstances.create",
      "compute.targetInstances.createTagBinding",
      "compute.targetInstances.delete",
      "compute.targetInstances.deleteTagBinding",
      "compute.targetInstances.get",
      "compute.targetInstances.list",
      "compute.targetInstances.listEffectiveTags",
      "compute.targetInstances.listTagBindings",
      "compute.targetInstances.setSecurityPolicy",
      "compute.targetInstances.use",
      "compute.targetPools.addHealthCheck",
      "compute.targetPools.addInstance",
      "compute.targetPools.create",
      "compute.targetPools.createTagBinding",
      "compute.targetPools.delete",
      "compute.targetPools.deleteTagBinding",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.targetPools.removeHealthCheck",
      "compute.targetPools.removeInstance",
      "compute.targetPools.setSecurityPolicy",
      "compute.targetPools.update",
      "compute.targetPools.use",
      "compute.targetSslProxies.create",
      "compute.targetSslProxies.createTagBinding",
      "compute.targetSslProxies.delete",
      "compute.targetSslProxies.deleteTagBinding",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetSslProxies.listEffectiveTags",
      "compute.targetSslProxies.listTagBindings",
      "compute.targetSslProxies.setBackendService",
      "compute.targetSslProxies.setCertificateMap",
      "compute.targetSslProxies.setProxyHeader",
      "compute.targetSslProxies.setSslCertificates",
      "compute.targetSslProxies.setSslPolicy",
      "compute.targetSslProxies.update",
      "compute.targetSslProxies.use",
      "compute.targetTcpProxies.create",
      "compute.targetTcpProxies.createTagBinding",
      "compute.targetTcpProxies.delete",
      "compute.targetTcpProxies.deleteTagBinding",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.targetTcpProxies.update",
      "compute.targetTcpProxies.use",
      "compute.targetVpnGateways.create",
      "compute.targetVpnGateways.delete",
      "compute.targetVpnGateways.get",
      "compute.targetVpnGateways.list",
      "compute.targetVpnGateways.setLabels",
      "compute.targetVpnGateways.use",
      "compute.urlMaps.create",
      "compute.urlMaps.createTagBinding",
      "compute.urlMaps.delete",
      "compute.urlMaps.deleteTagBinding",
      "compute.urlMaps.get",
      "compute.urlMaps.invalidateCache",
      "compute.urlMaps.list",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "compute.urlMaps.update",
      "compute.urlMaps.use",
      "compute.urlMaps.validate",
      "compute.vpnGateways.create",
      "compute.vpnGateways.delete",
      "compute.vpnGateways.get",
      "compute.vpnGateways.list",
      "compute.vpnGateways.setLabels",
      "compute.vpnGateways.use",
      "compute.vpnTunnels.create",
      "compute.vpnTunnels.delete",
      "compute.vpnTunnels.get",
      "compute.vpnTunnels.list",
      "compute.vpnTunnels.setLabels",
      "compute.zoneOperations.delete",
      "compute.zoneOperations.get",
      "compute.zoneOperations.getIamPolicy",
      "compute.zoneOperations.list",
      "compute.zoneOperations.setIamPolicy",
      "compute.zones.get",
      "compute.zones.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/compute.imageUser",
    "title": "Compute Image User",
    "description": "Read and use image resources.",
    "includedPermissions": [
      "compute.images.get",
      "compute.images.getFromFamily",
      "compute.images.list",
      "compute.images.useReadOnly",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/compute.instanceAdmin",
    "title": "Compute Instance Admin (beta)",
    "description": "Full control of Compute Engine instance resources.",
    "includedPermissions": [
      "compute.acceleratorTypes.get",
      "compute.acceleratorTypes.list",
      "compute.addresses.createInternal",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.addresses.use",
      "compute.addresses.useInternal",
      "compute.autoscalers.create",
      "compute.autoscalers.delete",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.autoscalers.update",
      "compute.diskTypes.get",
      "compute.diskTypes.list",
      "compute.disks.create",
      "compute.disks.createSnapshot",
      "compute.disks.delete",
      "compute.disks.get",
      "compute.disks.list",
      "compute.disks.resize",
      "compute.disks.setLabels",
      "compute.disks.startAsyncReplication",
      "compute.disks.stopAsyncReplication",
      "compute.disks.stopGroupAsyncReplication",
      "compute.disks.update",
      "compute.disks.use",
      "compute.disks.useReadOnly",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalAddresses.use",
      "compute.globalNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.create",
      "compute.globalNetworkEndpointGroups.createTagBinding",
      "compute.globalNetworkEndpointGroups.delete",
      "compute.globalNetworkEndpointGroups.deleteTagBinding",
      "compute.globalNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.get",
      "compute.globalNetworkEndpointGroups.list",
      "compute.globalNetworkEndpointGroups.listEffectiveTags",
      "compute.globalNetworkEndpointGroups.listTagBindings",
      "compute.globalNetworkEndpointGroups.use",
      "compute.globalOperations.get",
      "compute.globalOperations.list",
      "compute.images.get",
      "compute.images.getFromFamily",
      "compute.images.list",
      "compute.images.useReadOnly",
      "compute.instanceGroupManagers.create",
      "compute.instanceGroupManagers.delete",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroupManagers.update",
      "compute.instanceGroupManagers.use",
      "compute.instanceGroups.create",
      "compute.instanceGroups.delete",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instanceGroups.update",
      "compute.instanceGroups.use",
      "compute.instanceTemplates.create",
      "compute.instanceTemplates.delete",
      "compute.instanceTemplates.get",
      "compute.instanceTemplates.getIamPolicy",
      "compute.instanceTemplates.list",
      "compute.instanceTemplates.setIamPolicy",
      "compute.instanceTemplates.useReadOnly",
      "compute.instances.addAccessConfig",
      "compute.instances.addMaintenancePolicies",
      "compute.instances.addResourcePolicies",
      "compute.instances.attachDisk",
      "compute.instances.create",
      "compute.instances.createTagBinding",
      "compute.instances.delete",
      "compute.instances.deleteAccessConfig",
      "compute.instances.deleteTagBinding",
      "compute.instances.detachDisk",
      "compute.instances.get",
      "compute.instances.getEffectiveFirewalls",
      "compute.instances.getGuestAttributes",
      "compute.instances.getIamPolicy",
      "compute.instances.getScreenshot",
      "compute.instances.getSerialPortOutput",
      "compute.instances.getShieldedInstanceIdentity",
      "compute.instances.getShieldedVmIdentity",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listReferrers",
      "compute.instances.listTagBindings",
      "compute.instances.osAdminLogin",
      "compute.instances.osLogin",
      "compute.instances.removeMaintenancePolicies",
      "compute.instances.removeResourcePolicies",
      "compute.instances.reset",
      "compute.instances.resume",
      "compute.instances.sendDiagnosticInterrupt",
      "compute.instances.setDeletionProtection",
      "compute.instances.setDiskAutoDelete",
      "compute.instances.setIamPolicy",
      "compute.instances.setLabels",
      "compute.instances.setMachineResources",
      "compute.instances.setMachineType",
      "compute.instances.setMetadata",
      "compute.instances.setMinCpuPlatform",
      "compute.instances.setName",
      "compute.instances.setScheduling",
      "compute.instances.setSecurityPolicy",
      "compute.instances.setServiceAccount",
      "compute.instances.setShieldedInstanceIntegrityPolicy",
      "compute.instances.setShieldedVmIntegrityPolicy",
      "compute.instances.setTags",
      "compute.instances.simulateMaintenanceEvent",
      "compute.instances.start",
      "compute.instances.startWithEncryptionKey",
      "compute.instances.stop",
      "compute.instances.suspend",
      "compute.instances.update",
      "compute.instances.updateAccessConfig",
      "compute.instances.updateDisplayDevice",
      "compute.instances.updateNetworkInterface",
      "compute.instances.updateSecurity",
      "compute.instances.updateShieldedInstanceConfig",
      "compute.instances.updateShieldedVmConfig",
      "compute.instances.use",
      "compute.instances.useReadOnly",
      "compute.licenses.get",
      "compute.licenses.list",
      "compute.machineImages.create",
      "compute.machineImages.delete",
      "compute.machineImages.get",
      "compute.machineImages.getIamPolicy",
      "compute.machineImages.list",
      "compute.machineImages.setIamPolicy",
      "compute.machineImages.useReadOnly",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.networkEndpointGroups.attachNetworkEndpoints",
      "compute.networkEndpointGroups.create",
      "compute.networkEndpointGroups.createTagBinding",
      "compute.networkEndpointGroups.delete",
      "compute.networkEndpointGroups.deleteTagBinding",
      "compute.networkEndpointGroups.detachNetworkEndpoints",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.getIamPolicy",
      "compute.networkEndpointGroups.list",
      "compute.networkEndpointGroups.listEffectiveTags",
      "compute.networkEndpointGroups.listTagBindings",
      "compute.networkEndpointGroups.setIamPolicy",
      "compute.networkEndpointGroups.use",
      "compute.networks.get",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listTagBindings",
      "compute.networks.use",
      "compute.networks.useExternalIp",
      "compute.projects.get",
      "compute.regionNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.create",
      "compute.regionNetworkEndpointGroups.createTagBinding",
      "compute.regionNetworkEndpointGroups.delete",
      "compute.regionNetworkEndpointGroups.deleteTagBinding",
      "compute.regionNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionNetworkEndpointGroups.listEffectiveTags",
      "compute.regionNetworkEndpointGroups.listTagBindings",
      "compute.regionNetworkEndpointGroups.use",
      "compute.regionOperations.get",
      "compute.regionOperations.list",
      "compute.regions.get",
      "compute.regions.list",
      "compute.reservations.get",
      "compute.reservations.list",
      "compute.resourcePolicies.useReadOnly",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.zoneOperations.get",
      "compute.zoneOperations.list",
      "compute.zones.get",
      "compute.zones.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/compute.instanceAdmin.v1",
    "title": "Compute Instance Admin (v1)",
    "description": "Full control of Compute Engine instances, instance groups, disks, snapshots, and images. Read access to all Compute Engine networking resources.",
    "includedPermissions": [
      "compute.acceleratorTypes.get",
      "compute.acceleratorTypes.list",
      "compute.addresses.createInternal",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.addresses.use",
      "compute.addresses.useInternal",
      "compute.autoscalers.create",
      "compute.autoscalers.delete",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.autoscalers.update",
      "compute.backendBuckets.get",
      "compute.backendBuckets.list",
      "compute.backendBuckets.listEffectiveTags",
      "compute.backendBuckets.listTagBindings",
      "compute.backendServices.get",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.diskTypes.get",
      "compute.diskTypes.list",
      "compute.disks.addResourcePolicies",
      "compute.disks.create",
      "compute.disks.createSnapshot",
      "compute.disks.createTagBinding",
      "compute.disks.delete",
      "compute.disks.deleteTagBinding",
      "compute.disks.get",
      "compute.disks.getIamPolicy",
      "compute.disks.list",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.disks.removeResourcePolicies",
      "compute.disks.resize",
      "compute.disks.setIamPolicy",
      "compute.disks.setLabels",
      "compute.disks.startAsyncReplication",
      "compute.disks.stopAsyncReplication",
      "compute.disks.stopGroupAsyncReplication",
      "compute.disks.update",
      "compute.disks.use",
      "compute.disks.useReadOnly",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.list",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalAddresses.use",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalForwardingRules.pscGet",
      "compute.globalNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.create",
      "compute.globalNetworkEndpointGroups.createTagBinding",
      "compute.globalNetworkEndpointGroups.delete",
      "compute.globalNetworkEndpointGroups.deleteTagBinding",
      "compute.globalNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.get",
      "compute.globalNetworkEndpointGroups.list",
      "compute.globalNetworkEndpointGroups.listEffectiveTags",
      "compute.globalNetworkEndpointGroups.listTagBindings",
      "compute.globalNetworkEndpointGroups.use",
      "compute.globalOperations.get",
      "compute.globalOperations.list",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.images.create",
      "compute.images.createTagBinding",
      "compute.images.delete",
      "compute.images.deleteTagBinding",
      "compute.images.deprecate",
      "compute.images.get",
      "compute.images.getFromFamily",
      "compute.images.getIamPolicy",
      "compute.images.list",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.images.setIamPolicy",
      "compute.images.setLabels",
      "compute.images.update",
      "compute.images.useReadOnly",
      "compute.instanceGroupManagers.create",
      "compute.instanceGroupManagers.delete",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroupManagers.update",
      "compute.instanceGroupManagers.use",
      "compute.instanceGroups.create",
      "compute.instanceGroups.delete",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instanceGroups.update",
      "compute.instanceGroups.use",
      "compute.instanceTemplates.create",
      "compute.instanceTemplates.delete",
      "compute.instanceTemplates.get",
      "compute.instanceTemplates.getIamPolicy",
      "compute.instanceTemplates.list",
      "compute.instanceTemplates.setIamPolicy",
      "compute.instanceTemplates.useReadOnly",
      "compute.instances.addAccessConfig",
      "compute.instances.addMaintenancePolicies",
      "compute.instances.addResourcePolicies",
      "compute.instances.attachDisk",
      "compute.instances.create",
      "compute.instances.createTagBinding",
      "compute.instances.delete",
      "compute.instances.deleteAccessConfig",
      "compute.instances.deleteTagBinding",
      "compute.instances.detachDisk",
      "compute.instances.get",
      "compute.instances.getEffectiveFirewalls",
      "compute.instances.getGuestAttributes",
      "compute.instances.getIamPolicy",
      "compute.instances.getScreenshot",
      "compute.instances.getSerialPortOutput",
      "compute.instances.getShieldedInstanceIdentity",
      "compute.instances.getShieldedVmIdentity",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listReferrers",
      "compute.instances.listTagBindings",
      "compute.instances.osAdminLogin",
      "compute.instances.osLogin",
      "compute.instances.removeMaintenancePolicies",
      "compute.instances.removeResourcePolicies",
      "compute.instances.reset",
      "compute.instances.resume",
      "compute.instances.sendDiagnosticInterrupt",
      "compute.instances.setDeletionProtection",
      "compute.instances.setDiskAutoDelete",
      "compute.instances.setIamPolicy",
      "compute.instances.setLabels",
      "compute.instances.setMachineResources",
      "compute.instances.setMachineType",
      "compute.instances.setMetadata",
      "compute.instances.setMinCpuPlatform",
      "compute.instances.setName",
      "compute.instances.setScheduling",
      "compute.instances.setSecurityPolicy",
      "compute.instances.setServiceAccount",
      "compute.instances.setShieldedInstanceIntegrityPolicy",
      "compute.instances.setShieldedVmIntegrityPolicy",
      "compute.instances.setTags",
      "compute.instances.simulateMaintenanceEvent",
      "compute.instances.start",
      "compute.instances.startWithEncryptionKey",
      "compute.instances.stop",
      "compute.instances.suspend",
      "compute.instances.update",
      "compute.instances.updateAccessConfig",
      "compute.instances.updateDisplayDevice",
      "compute.instances.updateNetworkInterface",
      "compute.instances.updateSecurity",
      "compute.instances.updateShieldedInstanceConfig",
      "compute.instances.updateShieldedVmConfig",
      "compute.instances.use",
      "compute.instances.useReadOnly",
      "compute.instantSnapshots.create",
      "compute.instantSnapshots.delete",
      "compute.instantSnapshots.export",
      "compute.instantSnapshots.get",
      "compute.instantSnapshots.getIamPolicy",
      "compute.instantSnapshots.list",
      "compute.instantSnapshots.setIamPolicy",
      "compute.instantSnapshots.setLabels",
      "compute.instantSnapshots.useReadOnly",
      "compute.interconnectAttachments.get",
      "compute.interconnectAttachments.list",
      "compute.interconnectLocations.get",
      "compute.interconnectLocations.list",
      "compute.interconnectRemoteLocations.get",
      "compute.interconnectRemoteLocations.list",
      "compute.interconnects.get",
      "compute.interconnects.list",
      "compute.licenseCodes.get",
      "compute.licenseCodes.getIamPolicy",
      "compute.licenseCodes.list",
      "compute.licenseCodes.setIamPolicy",
      "compute.licenseCodes.update",
      "compute.licenseCodes.use",
      "compute.licenses.create",
      "compute.licenses.delete",
      "compute.licenses.get",
      "compute.licenses.getIamPolicy",
      "compute.licenses.list",
      "compute.licenses.setIamPolicy",
      "compute.machineImages.create",
      "compute.machineImages.delete",
      "compute.machineImages.get",
      "compute.machineImages.getIamPolicy",
      "compute.machineImages.list",
      "compute.machineImages.setIamPolicy",
      "compute.machineImages.useReadOnly",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.networkAttachments.get",
      "compute.networkAttachments.list",
      "compute.networkEndpointGroups.attachNetworkEndpoints",
      "compute.networkEndpointGroups.create",
      "compute.networkEndpointGroups.createTagBinding",
      "compute.networkEndpointGroups.delete",
      "compute.networkEndpointGroups.deleteTagBinding",
      "compute.networkEndpointGroups.detachNetworkEndpoints",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.getIamPolicy",
      "compute.networkEndpointGroups.list",
      "compute.networkEndpointGroups.listEffectiveTags",
      "compute.networkEndpointGroups.listTagBindings",
      "compute.networkEndpointGroups.setIamPolicy",
      "compute.networkEndpointGroups.use",
      "compute.networks.get",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listTagBindings",
      "compute.networks.use",
      "compute.networks.useExternalIp",
      "compute.projects.get",
      "compute.projects.setCommonInstanceMetadata",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionHealthCheckServices.get",
      "compute.regionHealthCheckServices.list",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.create",
      "compute.regionNetworkEndpointGroups.createTagBinding",
      "compute.regionNetworkEndpointGroups.delete",
      "compute.regionNetworkEndpointGroups.deleteTagBinding",
      "compute.regionNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionNetworkEndpointGroups.listEffectiveTags",
      "compute.regionNetworkEndpointGroups.listTagBindings",
      "compute.regionNetworkEndpointGroups.use",
      "compute.regionNotificationEndpoints.get",
      "compute.regionNotificationEndpoints.list",
      "compute.regionOperations.get",
      "compute.regionOperations.list",
      "compute.regionSslCertificates.get",
      "compute.regionSslCertificates.list",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionSslPolicies.get",
      "compute.regionSslPolicies.list",
      "compute.regionSslPolicies.listAvailableFeatures",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionTargetTcpProxies.get",
      "compute.regionTargetTcpProxies.list",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.list",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.regions.get",
      "compute.regions.list",
      "compute.reservations.get",
      "compute.reservations.list",
      "compute.resourcePolicies.create",
      "compute.resourcePolicies.delete",
      "compute.resourcePolicies.get",
      "compute.resourcePolicies.getIamPolicy",
      "compute.resourcePolicies.list",
      "compute.resourcePolicies.setIamPolicy",
      "compute.resourcePolicies.update",
      "compute.resourcePolicies.use",
      "compute.resourcePolicies.useReadOnly",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routes.get",
      "compute.routes.list",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.serviceAttachments.get",
      "compute.serviceAttachments.list",
      "compute.snapshots.create",
      "compute.snapshots.createTagBinding",
      "compute.snapshots.delete",
      "compute.snapshots.deleteTagBinding",
      "compute.snapshots.get",
      "compute.snapshots.getIamPolicy",
      "compute.snapshots.list",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.snapshots.setIamPolicy",
      "compute.snapshots.setLabels",
      "compute.snapshots.useReadOnly",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.get",
      "compute.sslPolicies.list",
      "compute.sslPolicies.listAvailableFeatures",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.targetGrpcProxies.get",
      "compute.targetGrpcProxies.list",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetInstances.get",
      "compute.targetInstances.list",
      "compute.targetInstances.listEffectiveTags",
      "compute.targetInstances.listTagBindings",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetSslProxies.listEffectiveTags",
      "compute.targetSslProxies.listTagBindings",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.targetVpnGateways.get",
      "compute.targetVpnGateways.list",
      "compute.urlMaps.get",
      "compute.urlMaps.list",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "compute.vpnGateways.get",
      "compute.vpnGateways.list",
      "compute.vpnTunnels.get",
      "compute.vpnTunnels.list",
      "compute.zoneOperations.get",
      "compute.zoneOperations.list",
      "compute.zones.get",
      "compute.zones.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/compute.loadBalancerAdmin",
    "title": "Compute Load Balancer Admin",
    "description": "Full control of Compute Engine resources related to load balancer.",
    "includedPermissions": [
      "certificatemanager.certmaps.get",
      "certificatemanager.certmaps.list",
      "certificatemanager.certmaps.use",
      "compute.addresses.create",
      "compute.addresses.createInternal",
      "compute.addresses.delete",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.addresses.setLabels",
      "compute.addresses.use",
      "compute.addresses.useInternal",
      "compute.backendBuckets.addSignedUrlKey",
      "compute.backendBuckets.create",
      "compute.backendBuckets.createTagBinding",
      "compute.backendBuckets.delete",
      "compute.backendBuckets.deleteSignedUrlKey",
      "compute.backendBuckets.deleteTagBinding",
      "compute.backendBuckets.get",
      "compute.backendBuckets.getIamPolicy",
      "compute.backendBuckets.list",
      "compute.backendBuckets.listEffectiveTags",
      "compute.backendBuckets.listTagBindings",
      "compute.backendBuckets.setIamPolicy",
      "compute.backendBuckets.setSecurityPolicy",
      "compute.backendBuckets.update",
      "compute.backendBuckets.use",
      "compute.backendServices.addSignedUrlKey",
      "compute.backendServices.create",
      "compute.backendServices.createTagBinding",
      "compute.backendServices.delete",
      "compute.backendServices.deleteSignedUrlKey",
      "compute.backendServices.deleteTagBinding",
      "compute.backendServices.get",
      "compute.backendServices.getIamPolicy",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.backendServices.setIamPolicy",
      "compute.backendServices.setSecurityPolicy",
      "compute.backendServices.update",
      "compute.backendServices.use",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.forwardingRules.create",
      "compute.forwardingRules.createTagBinding",
      "compute.forwardingRules.delete",
      "compute.forwardingRules.deleteTagBinding",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.forwardingRules.pscCreate",
      "compute.forwardingRules.pscDelete",
      "compute.forwardingRules.pscSetLabels",
      "compute.forwardingRules.pscSetTarget",
      "compute.forwardingRules.pscUpdate",
      "compute.forwardingRules.setLabels",
      "compute.forwardingRules.setTarget",
      "compute.forwardingRules.update",
      "compute.forwardingRules.use",
      "compute.globalAddresses.create",
      "compute.globalAddresses.createInternal",
      "compute.globalAddresses.delete",
      "compute.globalAddresses.deleteInternal",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalAddresses.setLabels",
      "compute.globalAddresses.use",
      "compute.globalForwardingRules.create",
      "compute.globalForwardingRules.createTagBinding",
      "compute.globalForwardingRules.delete",
      "compute.globalForwardingRules.deleteTagBinding",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalForwardingRules.pscCreate",
      "compute.globalForwardingRules.pscDelete",
      "compute.globalForwardingRules.pscGet",
      "compute.globalForwardingRules.pscSetLabels",
      "compute.globalForwardingRules.pscSetTarget",
      "compute.globalForwardingRules.pscUpdate",
      "compute.globalForwardingRules.setLabels",
      "compute.globalForwardingRules.setTarget",
      "compute.globalForwardingRules.update",
      "compute.globalNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.create",
      "compute.globalNetworkEndpointGroups.createTagBinding",
      "compute.globalNetworkEndpointGroups.delete",
      "compute.globalNetworkEndpointGroups.deleteTagBinding",
      "compute.globalNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.get",
      "compute.globalNetworkEndpointGroups.list",
      "compute.globalNetworkEndpointGroups.listEffectiveTags",
      "compute.globalNetworkEndpointGroups.listTagBindings",
      "compute.globalNetworkEndpointGroups.use",
      "compute.healthChecks.create",
      "compute.healthChecks.createTagBinding",
      "compute.healthChecks.delete",
      "compute.healthChecks.deleteTagBinding",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.healthChecks.update",
      "compute.healthChecks.use",
      "compute.healthChecks.useReadOnly",
      "compute.httpHealthChecks.create",
      "compute.httpHealthChecks.createTagBinding",
      "compute.httpHealthChecks.delete",
      "compute.httpHealthChecks.deleteTagBinding",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpHealthChecks.update",
      "compute.httpHealthChecks.use",
      "compute.httpHealthChecks.useReadOnly",
      "compute.httpsHealthChecks.create",
      "compute.httpsHealthChecks.createTagBinding",
      "compute.httpsHealthChecks.delete",
      "compute.httpsHealthChecks.deleteTagBinding",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.update",
      "compute.httpsHealthChecks.use",
      "compute.httpsHealthChecks.useReadOnly",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.instanceGroups.create",
      "compute.instanceGroups.delete",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instanceGroups.update",
      "compute.instanceGroups.use",
      "compute.instances.get",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listTagBindings",
      "compute.instances.use",
      "compute.instances.useReadOnly",
      "compute.networkEndpointGroups.attachNetworkEndpoints",
      "compute.networkEndpointGroups.create",
      "compute.networkEndpointGroups.createTagBinding",
      "compute.networkEndpointGroups.delete",
      "compute.networkEndpointGroups.deleteTagBinding",
      "compute.networkEndpointGroups.detachNetworkEndpoints",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.getIamPolicy",
      "compute.networkEndpointGroups.list",
      "compute.networkEndpointGroups.listEffectiveTags",
      "compute.networkEndpointGroups.listTagBindings",
      "compute.networkEndpointGroups.setIamPolicy",
      "compute.networkEndpointGroups.use",
      "compute.networks.get",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listTagBindings",
      "compute.networks.use",
      "compute.projects.get",
      "compute.regionBackendServices.create",
      "compute.regionBackendServices.createTagBinding",
      "compute.regionBackendServices.delete",
      "compute.regionBackendServices.deleteTagBinding",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.getIamPolicy",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionBackendServices.setIamPolicy",
      "compute.regionBackendServices.setSecurityPolicy",
      "compute.regionBackendServices.update",
      "compute.regionBackendServices.use",
      "compute.regionHealthCheckServices.create",
      "compute.regionHealthCheckServices.delete",
      "compute.regionHealthCheckServices.get",
      "compute.regionHealthCheckServices.list",
      "compute.regionHealthCheckServices.update",
      "compute.regionHealthCheckServices.use",
      "compute.regionHealthChecks.create",
      "compute.regionHealthChecks.createTagBinding",
      "compute.regionHealthChecks.delete",
      "compute.regionHealthChecks.deleteTagBinding",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionHealthChecks.update",
      "compute.regionHealthChecks.use",
      "compute.regionHealthChecks.useReadOnly",
      "compute.regionNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.create",
      "compute.regionNetworkEndpointGroups.createTagBinding",
      "compute.regionNetworkEndpointGroups.delete",
      "compute.regionNetworkEndpointGroups.deleteTagBinding",
      "compute.regionNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionNetworkEndpointGroups.listEffectiveTags",
      "compute.regionNetworkEndpointGroups.listTagBindings",
      "compute.regionNetworkEndpointGroups.use",
      "compute.regionNotificationEndpoints.create",
      "compute.regionNotificationEndpoints.delete",
      "compute.regionNotificationEndpoints.get",
      "compute.regionNotificationEndpoints.list",
      "compute.regionNotificationEndpoints.update",
      "compute.regionNotificationEndpoints.use",
      "compute.regionSecurityPolicies.get",
      "compute.regionSecurityPolicies.list",
      "compute.regionSecurityPolicies.listEffectiveTags",
      "compute.regionSecurityPolicies.listTagBindings",
      "compute.regionSecurityPolicies.use",
      "compute.regionSslCertificates.create",
      "compute.regionSslCertificates.createTagBinding",
      "compute.regionSslCertificates.delete",
      "compute.regionSslCertificates.deleteTagBinding",
      "compute.regionSslCertificates.get",
      "compute.regionSslCertificates.list",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionSslPolicies.create",
      "compute.regionSslPolicies.delete",
      "compute.regionSslPolicies.get",
      "compute.regionSslPolicies.list",
      "compute.regionSslPolicies.listAvailableFeatures",
      "compute.regionSslPolicies.update",
      "compute.regionSslPolicies.use",
      "compute.regionTargetHttpProxies.create",
      "compute.regionTargetHttpProxies.createTagBinding",
      "compute.regionTargetHttpProxies.delete",
      "compute.regionTargetHttpProxies.deleteTagBinding",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpProxies.setUrlMap",
      "compute.regionTargetHttpProxies.update",
      "compute.regionTargetHttpProxies.use",
      "compute.regionTargetHttpsProxies.create",
      "compute.regionTargetHttpsProxies.createTagBinding",
      "compute.regionTargetHttpsProxies.delete",
      "compute.regionTargetHttpsProxies.deleteTagBinding",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.setSslCertificates",
      "compute.regionTargetHttpsProxies.setUrlMap",
      "compute.regionTargetHttpsProxies.update",
      "compute.regionTargetHttpsProxies.use",
      "compute.regionTargetTcpProxies.create",
      "compute.regionTargetTcpProxies.delete",
      "compute.regionTargetTcpProxies.get",
      "compute.regionTargetTcpProxies.list",
      "compute.regionTargetTcpProxies.use",
      "compute.regionUrlMaps.create",
      "compute.regionUrlMaps.createTagBinding",
      "compute.regionUrlMaps.delete",
      "compute.regionUrlMaps.deleteTagBinding",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.invalidateCache",
      "compute.regionUrlMaps.list",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.regionUrlMaps.update",
      "compute.regionUrlMaps.use",
      "compute.regionUrlMaps.validate",
      "compute.securityPolicies.get",
      "compute.securityPolicies.list",
      "compute.securityPolicies.listEffectiveTags",
      "compute.securityPolicies.listTagBindings",
      "compute.securityPolicies.use",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.sslCertificates.create",
      "compute.sslCertificates.createTagBinding",
      "compute.sslCertificates.delete",
      "compute.sslCertificates.deleteTagBinding",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.create",
      "compute.sslPolicies.createTagBinding",
      "compute.sslPolicies.delete",
      "compute.sslPolicies.deleteTagBinding",
      "compute.sslPolicies.get",
      "compute.sslPolicies.list",
      "compute.sslPolicies.listAvailableFeatures",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.sslPolicies.update",
      "compute.sslPolicies.use",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.subnetworks.use",
      "compute.targetGrpcProxies.create",
      "compute.targetGrpcProxies.delete",
      "compute.targetGrpcProxies.get",
      "compute.targetGrpcProxies.list",
      "compute.targetGrpcProxies.update",
      "compute.targetGrpcProxies.use",
      "compute.targetHttpProxies.create",
      "compute.targetHttpProxies.createTagBinding",
      "compute.targetHttpProxies.delete",
      "compute.targetHttpProxies.deleteTagBinding",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpProxies.setUrlMap",
      "compute.targetHttpProxies.update",
      "compute.targetHttpProxies.use",
      "compute.targetHttpsProxies.create",
      "compute.targetHttpsProxies.createTagBinding",
      "compute.targetHttpsProxies.delete",
      "compute.targetHttpsProxies.deleteTagBinding",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetHttpsProxies.setCertificateMap",
      "compute.targetHttpsProxies.setQuicOverride",
      "compute.targetHttpsProxies.setSslCertificates",
      "compute.targetHttpsProxies.setSslPolicy",
      "compute.targetHttpsProxies.setUrlMap",
      "compute.targetHttpsProxies.update",
      "compute.targetHttpsProxies.use",
      "compute.targetInstances.create",
      "compute.targetInstances.createTagBinding",
      "compute.targetInstances.delete",
      "compute.targetInstances.deleteTagBinding",
      "compute.targetInstances.get",
      "compute.targetInstances.list",
      "compute.targetInstances.listEffectiveTags",
      "compute.targetInstances.listTagBindings",
      "compute.targetInstances.setSecurityPolicy",
      "compute.targetInstances.use",
      "compute.targetPools.addHealthCheck",
      "compute.targetPools.addInstance",
      "compute.targetPools.create",
      "compute.targetPools.createTagBinding",
      "compute.targetPools.delete",
      "compute.targetPools.deleteTagBinding",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.targetPools.removeHealthCheck",
      "compute.targetPools.removeInstance",
      "compute.targetPools.setSecurityPolicy",
      "compute.targetPools.update",
      "compute.targetPools.use",
      "compute.targetSslProxies.create",
      "compute.targetSslProxies.createTagBinding",
      "compute.targetSslProxies.delete",
      "compute.targetSslProxies.deleteTagBinding",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetSslProxies.listEffectiveTags",
      "compute.targetSslProxies.listTagBindings",
      "compute.targetSslProxies.setBackendService",
      "compute.targetSslProxies.setCertificateMap",
      "compute.targetSslProxies.setProxyHeader",
      "compute.targetSslProxies.setSslCertificates",
      "compute.targetSslProxies.setSslPolicy",
      "compute.targetSslProxies.update",
      "compute.targetSslProxies.use",
      "compute.targetTcpProxies.create",
      "compute.targetTcpProxies.createTagBinding",
      "compute.targetTcpProxies.delete",
      "compute.targetTcpProxies.deleteTagBinding",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.targetTcpProxies.update",
      "compute.targetTcpProxies.use",
      "compute.urlMaps.create",
      "compute.urlMaps.createTagBinding",
      "compute.urlMaps.delete",
      "compute.urlMaps.deleteTagBinding",
      "compute.urlMaps.get",
      "compute.urlMaps.invalidateCache",
      "compute.urlMaps.list",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "compute.urlMaps.update",
      "compute.urlMaps.use",
      "compute.urlMaps.validate",
      "networksecurity.clientTlsPolicies.get",
      "networksecurity.clientTlsPolicies.list",
      "networksecurity.clientTlsPolicies.use",
      "networksecurity.serverTlsPolicies.get",
      "networksecurity.serverTlsPolicies.list",
      "networksecurity.serverTlsPolicies.use",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/compute.loadBalancerServiceUser",
    "title": "Compute Load Balancer Services User",
    "description": "Permissions to use services from a load balancer in other projects.",
    "includedPermissions": [
      "compute.backendServices.get",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.backendServices.use",
      "compute.projects.get",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionBackendServices.use",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/compute.networkAdmin",
    "title": "Compute Network Admin",
    "description": "Full control of Compute Engine networking resources.",
    "includedPermissions": [
      "compute.acceleratorTypes.get",
      "compute.acceleratorTypes.list",
      "compute.addresses.create",
      "compute.addresses.createInternal",
      "compute.addresses.delete",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.addresses.setLabels",
      "compute.addresses.use",
      "compute.addresses.useInternal",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.backendBuckets.addSignedUrlKey",
      "compute.backendBuckets.create",
      "compute.backendBuckets.createTagBinding",
      "compute.backendBuckets.delete",
      "compute.backendBuckets.deleteSignedUrlKey",
      "compute.backendBuckets.deleteTagBinding",
      "compute.backendBuckets.get",
      "compute.backendBuckets.getIamPolicy",
      "compute.backendBuckets.list",
      "compute.backendBuckets.listEffectiveTags",
      "compute.backendBuckets.listTagBindings",
      "compute.backendBuckets.setIamPolicy",
      "compute.backendBuckets.setSecurityPolicy",
      "compute.backendBuckets.update",
      "compute.backendBuckets.use",
      "compute.backendServices.addSignedUrlKey",
      "compute.backendServices.create",
      "compute.backendServices.createTagBinding",
      "compute.backendServices.delete",
      "compute.backendServices.deleteSignedUrlKey",
      "compute.backendServices.deleteTagBinding",
      "compute.backendServices.get",
      "compute.backendServices.getIamPolicy",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.backendServices.setIamPolicy",
      "compute.backendServices.setSecurityPolicy",
      "compute.backendServices.update",
      "compute.backendServices.use",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.externalVpnGateways.create",
      "compute.externalVpnGateways.delete",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.list",
      "compute.externalVpnGateways.setLabels",
      "compute.externalVpnGateways.use",
      "compute.firewallPolicies.get",
      "compute.firewallPolicies.list",
      "compute.firewallPolicies.listEffectiveTags",
      "compute.firewallPolicies.listTagBindings",
      "compute.firewallPolicies.use",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.forwardingRules.create",
      "compute.forwardingRules.createTagBinding",
      "compute.forwardingRules.delete",
      "compute.forwardingRules.deleteTagBinding",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.forwardingRules.pscCreate",
      "compute.forwardingRules.pscDelete",
      "compute.forwardingRules.pscSetLabels",
      "compute.forwardingRules.pscSetTarget",
      "compute.forwardingRules.pscUpdate",
      "compute.forwardingRules.setLabels",
      "compute.forwardingRules.setTarget",
      "compute.forwardingRules.update",
      "compute.forwardingRules.use",
      "compute.globalAddresses.create",
      "compute.globalAddresses.createInternal",
      "compute.globalAddresses.delete",
      "compute.globalAddresses.deleteInternal",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalAddresses.setLabels",
      "compute.globalAddresses.use",
      "compute.globalForwardingRules.create",
      "compute.globalForwardingRules.createTagBinding",
      "compute.globalForwardingRules.delete",
      "compute.globalForwardingRules.deleteTagBinding",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalForwardingRules.pscCreate",
      "compute.globalForwardingRules.pscDelete",
      "compute.globalForwardingRules.pscGet",
      "compute.globalForwardingRules.pscSetLabels",
      "compute.globalForwardingRules.pscSetTarget",
      "compute.globalForwardingRules.pscUpdate",
      "compute.globalForwardingRules.setLabels",
      "compute.globalForwardingRules.setTarget",
      "compute.globalForwardingRules.update",
      "compute.globalNetworkEndpointGroups.get",
      "compute.globalNetworkEndpointGroups.list",
      "compute.globalNetworkEndpointGroups.listEffectiveTags",
      "compute.globalNetworkEndpointGroups.listTagBindings",
      "compute.globalNetworkEndpointGroups.use",
      "compute.globalOperations.get",
      "compute.globalOperations.list",
      "compute.globalPublicDelegatedPrefixes.delete",
      "compute.globalPublicDelegatedPrefixes.get",
      "compute.globalPublicDelegatedPrefixes.list",
      "compute.globalPublicDelegatedPrefixes.update",
      "compute.globalPublicDelegatedPrefixes.updatePolicy",
      "compute.healthChecks.create",
      "compute.healthChecks.createTagBinding",
      "compute.healthChecks.delete",
      "compute.healthChecks.deleteTagBinding",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.healthChecks.update",
      "compute.healthChecks.use",
      "compute.healthChecks.useReadOnly",
      "compute.httpHealthChecks.create",
      "compute.httpHealthChecks.createTagBinding",
      "compute.httpHealthChecks.delete",
      "compute.httpHealthChecks.deleteTagBinding",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpHealthChecks.update",
      "compute.httpHealthChecks.use",
      "compute.httpHealthChecks.useReadOnly",
      "compute.httpsHealthChecks.create",
      "compute.httpsHealthChecks.createTagBinding",
      "compute.httpsHealthChecks.delete",
      "compute.httpsHealthChecks.deleteTagBinding",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.update",
      "compute.httpsHealthChecks.use",
      "compute.httpsHealthChecks.useReadOnly",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroupManagers.update",
      "compute.instanceGroupManagers.use",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instanceGroups.update",
      "compute.instanceGroups.use",
      "compute.instances.get",
      "compute.instances.getGuestAttributes",
      "compute.instances.getScreenshot",
      "compute.instances.getSerialPortOutput",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listReferrers",
      "compute.instances.listTagBindings",
      "compute.instances.updateSecurity",
      "compute.instances.use",
      "compute.instances.useReadOnly",
      "compute.interconnectAttachments.create",
      "compute.interconnectAttachments.delete",
      "compute.interconnectAttachments.get",
      "compute.interconnectAttachments.list",
      "compute.interconnectAttachments.setLabels",
      "compute.interconnectAttachments.update",
      "compute.interconnectAttachments.use",
      "compute.interconnectLocations.get",
      "compute.interconnectLocations.list",
      "compute.interconnectRemoteLocations.get",
      "compute.interconnectRemoteLocations.list",
      "compute.interconnects.create",
      "compute.interconnects.delete",
      "compute.interconnects.get",
      "compute.interconnects.list",
      "compute.interconnects.setLabels",
      "compute.interconnects.update",
      "compute.interconnects.use",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.networkAttachments.create",
      "compute.networkAttachments.delete",
      "compute.networkAttachments.get",
      "compute.networkAttachments.getIamPolicy",
      "compute.networkAttachments.list",
      "compute.networkAttachments.setIamPolicy",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.list",
      "compute.networkEndpointGroups.listEffectiveTags",
      "compute.networkEndpointGroups.listTagBindings",
      "compute.networkEndpointGroups.use",
      "compute.networks.access",
      "compute.networks.addPeering",
      "compute.networks.create",
      "compute.networks.createTagBinding",
      "compute.networks.delete",
      "compute.networks.deleteTagBinding",
      "compute.networks.get",
      "compute.networks.getEffectiveFirewalls",
      "compute.networks.getRegionEffectiveFirewalls",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listPeeringRoutes",
      "compute.networks.listTagBindings",
      "compute.networks.mirror",
      "compute.networks.removePeering",
      "compute.networks.setFirewallPolicy",
      "compute.networks.switchToCustomMode",
      "compute.networks.update",
      "compute.networks.updatePeering",
      "compute.networks.updatePolicy",
      "compute.networks.use",
      "compute.networks.useExternalIp",
      "compute.packetMirrorings.get",
      "compute.packetMirrorings.list",
      "compute.projects.get",
      "compute.publicDelegatedPrefixes.delete",
      "compute.publicDelegatedPrefixes.get",
      "compute.publicDelegatedPrefixes.list",
      "compute.publicDelegatedPrefixes.update",
      "compute.publicDelegatedPrefixes.updatePolicy",
      "compute.regionBackendServices.create",
      "compute.regionBackendServices.createTagBinding",
      "compute.regionBackendServices.delete",
      "compute.regionBackendServices.deleteTagBinding",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.getIamPolicy",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionBackendServices.setIamPolicy",
      "compute.regionBackendServices.setSecurityPolicy",
      "compute.regionBackendServices.update",
      "compute.regionBackendServices.use",
      "compute.regionFirewallPolicies.get",
      "compute.regionFirewallPolicies.list",
      "compute.regionFirewallPolicies.listEffectiveTags",
      "compute.regionFirewallPolicies.listTagBindings",
      "compute.regionFirewallPolicies.use",
      "compute.regionHealthCheckServices.create",
      "compute.regionHealthCheckServices.delete",
      "compute.regionHealthCheckServices.get",
      "compute.regionHealthCheckServices.list",
      "compute.regionHealthCheckServices.update",
      "compute.regionHealthCheckServices.use",
      "compute.regionHealthChecks.create",
      "compute.regionHealthChecks.createTagBinding",
      "compute.regionHealthChecks.delete",
      "compute.regionHealthChecks.deleteTagBinding",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionHealthChecks.update",
      "compute.regionHealthChecks.use",
      "compute.regionHealthChecks.useReadOnly",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionNetworkEndpointGroups.listEffectiveTags",
      "compute.regionNetworkEndpointGroups.listTagBindings",
      "compute.regionNetworkEndpointGroups.use",
      "compute.regionNotificationEndpoints.create",
      "compute.regionNotificationEndpoints.delete",
      "compute.regionNotificationEndpoints.get",
      "compute.regionNotificationEndpoints.list",
      "compute.regionNotificationEndpoints.update",
      "compute.regionNotificationEndpoints.use",
      "compute.regionOperations.get",
      "compute.regionOperations.list",
      "compute.regionSecurityPolicies.get",
      "compute.regionSecurityPolicies.list",
      "compute.regionSecurityPolicies.listEffectiveTags",
      "compute.regionSecurityPolicies.listTagBindings",
      "compute.regionSecurityPolicies.use",
      "compute.regionSslCertificates.get",
      "compute.regionSslCertificates.list",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionSslPolicies.create",
      "compute.regionSslPolicies.delete",
      "compute.regionSslPolicies.get",
      "compute.regionSslPolicies.list",
      "compute.regionSslPolicies.listAvailableFeatures",
      "compute.regionSslPolicies.update",
      "compute.regionSslPolicies.use",
      "compute.regionTargetHttpProxies.create",
      "compute.regionTargetHttpProxies.createTagBinding",
      "compute.regionTargetHttpProxies.delete",
      "compute.regionTargetHttpProxies.deleteTagBinding",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpProxies.setUrlMap",
      "compute.regionTargetHttpProxies.update",
      "compute.regionTargetHttpProxies.use",
      "compute.regionTargetHttpsProxies.create",
      "compute.regionTargetHttpsProxies.createTagBinding",
      "compute.regionTargetHttpsProxies.delete",
      "compute.regionTargetHttpsProxies.deleteTagBinding",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.setSslCertificates",
      "compute.regionTargetHttpsProxies.setUrlMap",
      "compute.regionTargetHttpsProxies.update",
      "compute.regionTargetHttpsProxies.use",
      "compute.regionTargetTcpProxies.create",
      "compute.regionTargetTcpProxies.delete",
      "compute.regionTargetTcpProxies.get",
      "compute.regionTargetTcpProxies.list",
      "compute.regionTargetTcpProxies.use",
      "compute.regionUrlMaps.create",
      "compute.regionUrlMaps.createTagBinding",
      "compute.regionUrlMaps.delete",
      "compute.regionUrlMaps.deleteTagBinding",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.invalidateCache",
      "compute.regionUrlMaps.list",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.regionUrlMaps.update",
      "compute.regionUrlMaps.use",
      "compute.regionUrlMaps.validate",
      "compute.regions.get",
      "compute.regions.list",
      "compute.routers.create",
      "compute.routers.delete",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routers.update",
      "compute.routers.use",
      "compute.routes.create",
      "compute.routes.createTagBinding",
      "compute.routes.delete",
      "compute.routes.deleteTagBinding",
      "compute.routes.get",
      "compute.routes.list",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.securityPolicies.get",
      "compute.securityPolicies.list",
      "compute.securityPolicies.listEffectiveTags",
      "compute.securityPolicies.listTagBindings",
      "compute.securityPolicies.use",
      "compute.serviceAttachments.create",
      "compute.serviceAttachments.delete",
      "compute.serviceAttachments.get",
      "compute.serviceAttachments.getIamPolicy",
      "compute.serviceAttachments.list",
      "compute.serviceAttachments.setIamPolicy",
      "compute.serviceAttachments.update",
      "compute.serviceAttachments.use",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.create",
      "compute.sslPolicies.createTagBinding",
      "compute.sslPolicies.delete",
      "compute.sslPolicies.deleteTagBinding",
      "compute.sslPolicies.get",
      "compute.sslPolicies.list",
      "compute.sslPolicies.listAvailableFeatures",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.sslPolicies.update",
      "compute.sslPolicies.use",
      "compute.subnetworks.create",
      "compute.subnetworks.createTagBinding",
      "compute.subnetworks.delete",
      "compute.subnetworks.deleteTagBinding",
      "compute.subnetworks.expandIpCidrRange",
      "compute.subnetworks.get",
      "compute.subnetworks.getIamPolicy",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.subnetworks.mirror",
      "compute.subnetworks.setIamPolicy",
      "compute.subnetworks.setPrivateIpGoogleAccess",
      "compute.subnetworks.update",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.targetGrpcProxies.create",
      "compute.targetGrpcProxies.delete",
      "compute.targetGrpcProxies.get",
      "compute.targetGrpcProxies.list",
      "compute.targetGrpcProxies.update",
      "compute.targetGrpcProxies.use",
      "compute.targetHttpProxies.create",
      "compute.targetHttpProxies.createTagBinding",
      "compute.targetHttpProxies.delete",
      "compute.targetHttpProxies.deleteTagBinding",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpProxies.setUrlMap",
      "compute.targetHttpProxies.update",
      "compute.targetHttpProxies.use",
      "compute.targetHttpsProxies.create",
      "compute.targetHttpsProxies.createTagBinding",
      "compute.targetHttpsProxies.delete",
      "compute.targetHttpsProxies.deleteTagBinding",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetHttpsProxies.setCertificateMap",
      "compute.targetHttpsProxies.setQuicOverride",
      "compute.targetHttpsProxies.setSslCertificates",
      "compute.targetHttpsProxies.setSslPolicy",
      "compute.targetHttpsProxies.setUrlMap",
      "compute.targetHttpsProxies.update",
      "compute.targetHttpsProxies.use",
      "compute.targetInstances.create",
      "compute.targetInstances.createTagBinding",
      "compute.targetInstances.delete",
      "compute.targetInstances.deleteTagBinding",
      "compute.targetInstances.get",
      "compute.targetInstances.list",
      "compute.targetInstances.listEffectiveTags",
      "compute.targetInstances.listTagBindings",
      "compute.targetInstances.setSecurityPolicy",
      "compute.targetInstances.use",
      "compute.targetPools.addHealthCheck",
      "compute.targetPools.addInstance",
      "compute.targetPools.create",
      "compute.targetPools.createTagBinding",
      "compute.targetPools.delete",
      "compute.targetPools.deleteTagBinding",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.targetPools.removeHealthCheck",
      "compute.targetPools.removeInstance",
      "compute.targetPools.setSecurityPolicy",
      "compute.targetPools.update",
      "compute.targetPools.use",
      "compute.targetSslProxies.create",
      "compute.targetSslProxies.createTagBinding",
      "compute.targetSslProxies.delete",
      "compute.targetSslProxies.deleteTagBinding",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetSslProxies.listEffectiveTags",
      "compute.targetSslProxies.listTagBindings",
      "compute.targetSslProxies.setBackendService",
      "compute.targetSslProxies.setCertificateMap",
      "compute.targetSslProxies.setProxyHeader",
      "compute.targetSslProxies.setSslCertificates",
      "compute.targetSslProxies.setSslPolicy",
      "compute.targetSslProxies.update",
      "compute.targetSslProxies.use",
      "compute.targetTcpProxies.create",
      "compute.targetTcpProxies.createTagBinding",
      "compute.targetTcpProxies.delete",
      "compute.targetTcpProxies.deleteTagBinding",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.targetTcpProxies.update",
      "compute.targetTcpProxies.use",
      "compute.targetVpnGateways.create",
      "compute.targetVpnGateways.delete",
      "compute.targetVpnGateways.get",
      "compute.targetVpnGateways.list",
      "compute.targetVpnGateways.setLabels",
      "compute.targetVpnGateways.use",
      "compute.urlMaps.create",
      "compute.urlMaps.createTagBinding",
      "compute.urlMaps.delete",
      "compute.urlMaps.deleteTagBinding",
      "compute.urlMaps.get",
      "compute.urlMaps.invalidateCache",
      "compute.urlMaps.list",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "compute.urlMaps.update",
      "compute.urlMaps.use",
      "compute.urlMaps.validate",
      "compute.vpnGateways.create",
      "compute.vpnGateways.delete",
      "compute.vpnGateways.get",
      "compute.vpnGateways.list",
      "compute.vpnGateways.setLabels",
      "compute.vpnGateways.use",
      "compute.vpnTunnels.create",
      "compute.vpnTunnels.delete",
      "compute.vpnTunnels.get",
      "compute.vpnTunnels.list",
      "compute.vpnTunnels.setLabels",
      "compute.zoneOperations.get",
      "compute.zoneOperations.list",
      "compute.zones.get",
      "compute.zones.list",
      "networkconnectivity.internalRanges.create",
      "networkconnectivity.internalRanges.delete",
      "networkconnectivity.internalRanges.get",
      "networkconnectivity.internalRanges.getIamPolicy",
      "networkconnectivity.internalRanges.list",
      "networkconnectivity.internalRanges.setIamPolicy",
      "networkconnectivity.internalRanges.update",
      "networkconnectivity.locations.get",
      "networkconnectivity.locations.list",
      "networkconnectivity.operations.cancel",
      "networkconnectivity.operations.delete",
      "networkconnectivity.operations.get",
      "networkconnectivity.operations.list",
      "networkconnectivity.policyBasedRoutes.create",
      "networkconnectivity.policyBasedRoutes.delete",
      "networkconnectivity.policyBasedRoutes.get",
      "networkconnectivity.policyBasedRoutes.getIamPolicy",
      "networkconnectivity.policyBasedRoutes.list",
      "networkconnectivity.policyBasedRoutes.setIamPolicy",
      "networkconnectivity.serviceClasses.create",
      "networkconnectivity.serviceClasses.delete",
      "networkconnectivity.serviceClasses.get",
      "networkconnectivity.serviceClasses.list",
      "networkconnectivity.serviceClasses.update",
      "networkconnectivity.serviceClasses.use",
      "networkconnectivity.serviceConnectionMaps.create",
      "networkconnectivity.serviceConnectionMaps.delete",
      "networkconnectivity.serviceConnectionMaps.get",
      "networkconnectivity.serviceConnectionMaps.list",
      "networkconnectivity.serviceConnectionMaps.update",
      "networkconnectivity.serviceConnectionPolicies.create",
      "networkconnectivity.serviceConnectionPolicies.delete",
      "networkconnectivity.serviceConnectionPolicies.get",
      "networkconnectivity.serviceConnectionPolicies.list",
      "networkconnectivity.serviceConnectionPolicies.update",
      "networksecurity.authorizationPolicies.create",
      "networksecurity.authorizationPolicies.delete",
      "networksecurity.authorizationPolicies.get",
      "networksecurity.authorizationPolicies.getIamPolicy",
      "networksecurity.authorizationPolicies.list",
      "networksecurity.authorizationPolicies.setIamPolicy",
      "networksecurity.authorizationPolicies.update",
      "networksecurity.authorizationPolicies.use",
      "networksecurity.clientTlsPolicies.create",
      "networksecurity.clientTlsPolicies.delete",
      "networksecurity.clientTlsPolicies.get",
      "networksecurity.clientTlsPolicies.getIamPolicy",
      "networksecurity.clientTlsPolicies.list",
      "networksecurity.clientTlsPolicies.setIamPolicy",
      "networksecurity.clientTlsPolicies.update",
      "networksecurity.clientTlsPolicies.use",
      "networksecurity.firewallEndpointAssociations.create",
      "networksecurity.firewallEndpointAssociations.delete",
      "networksecurity.firewallEndpointAssociations.get",
      "networksecurity.firewallEndpointAssociations.list",
      "networksecurity.firewallEndpointAssociations.update",
      "networksecurity.firewallEndpoints.create",
      "networksecurity.firewallEndpoints.delete",
      "networksecurity.firewallEndpoints.get",
      "networksecurity.firewallEndpoints.list",
      "networksecurity.firewallEndpoints.update",
      "networksecurity.firewallEndpoints.use",
      "networksecurity.gatewaySecurityPolicies.create",
      "networksecurity.gatewaySecurityPolicies.delete",
      "networksecurity.gatewaySecurityPolicies.get",
      "networksecurity.gatewaySecurityPolicies.list",
      "networksecurity.gatewaySecurityPolicies.update",
      "networksecurity.gatewaySecurityPolicies.use",
      "networksecurity.gatewaySecurityPolicyRules.create",
      "networksecurity.gatewaySecurityPolicyRules.delete",
      "networksecurity.gatewaySecurityPolicyRules.get",
      "networksecurity.gatewaySecurityPolicyRules.list",
      "networksecurity.gatewaySecurityPolicyRules.update",
      "networksecurity.gatewaySecurityPolicyRules.use",
      "networksecurity.locations.get",
      "networksecurity.locations.list",
      "networksecurity.operations.cancel",
      "networksecurity.operations.delete",
      "networksecurity.operations.get",
      "networksecurity.operations.list",
      "networksecurity.securityProfileGroups.create",
      "networksecurity.securityProfileGroups.delete",
      "networksecurity.securityProfileGroups.get",
      "networksecurity.securityProfileGroups.list",
      "networksecurity.securityProfileGroups.update",
      "networksecurity.securityProfileGroups.use",
      "networksecurity.securityProfiles.create",
      "networksecurity.securityProfiles.delete",
      "networksecurity.securityProfiles.get",
      "networksecurity.securityProfiles.list",
      "networksecurity.securityProfiles.update",
      "networksecurity.securityProfiles.use",
      "networksecurity.serverTlsPolicies.create",
      "networksecurity.serverTlsPolicies.delete",
      "networksecurity.serverTlsPolicies.get",
      "networksecurity.serverTlsPolicies.getIamPolicy",
      "networksecurity.serverTlsPolicies.list",
      "networksecurity.serverTlsPolicies.setIamPolicy",
      "networksecurity.serverTlsPolicies.update",
      "networksecurity.serverTlsPolicies.use",
      "networksecurity.tlsInspectionPolicies.create",
      "networksecurity.tlsInspectionPolicies.delete",
      "networksecurity.tlsInspectionPolicies.get",
      "networksecurity.tlsInspectionPolicies.list",
      "networksecurity.tlsInspectionPolicies.update",
      "networksecurity.tlsInspectionPolicies.use",
      "networksecurity.urlLists.create",
      "networksecurity.urlLists.delete",
      "networksecurity.urlLists.get",
      "networksecurity.urlLists.list",
      "networksecurity.urlLists.update",
      "networksecurity.urlLists.use",
      "networkservices.endpointConfigSelectors.create",
      "networkservices.endpointConfigSelectors.delete",
      "networkservices.endpointConfigSelectors.get",
      "networkservices.endpointConfigSelectors.getIamPolicy",
      "networkservices.endpointConfigSelectors.list",
      "networkservices.endpointConfigSelectors.setIamPolicy",
      "networkservices.endpointConfigSelectors.update",
      "networkservices.endpointConfigSelectors.use",
      "networkservices.endpointPolicies.create",
      "networkservices.endpointPolicies.delete",
      "networkservices.endpointPolicies.get",
      "networkservices.endpointPolicies.getIamPolicy",
      "networkservices.endpointPolicies.list",
      "networkservices.endpointPolicies.setIamPolicy",
      "networkservices.endpointPolicies.update",
      "networkservices.endpointPolicies.use",
      "networkservices.gateways.create",
      "networkservices.gateways.delete",
      "networkservices.gateways.get",
      "networkservices.gateways.list",
      "networkservices.gateways.update",
      "networkservices.gateways.use",
      "networkservices.grpcRoutes.create",
      "networkservices.grpcRoutes.delete",
      "networkservices.grpcRoutes.get",
      "networkservices.grpcRoutes.getIamPolicy",
      "networkservices.grpcRoutes.list",
      "networkservices.grpcRoutes.setIamPolicy",
      "networkservices.grpcRoutes.update",
      "networkservices.grpcRoutes.use",
      "networkservices.httpFilters.create",
      "networkservices.httpFilters.delete",
      "networkservices.httpFilters.get",
      "networkservices.httpFilters.getIamPolicy",
      "networkservices.httpFilters.list",
      "networkservices.httpFilters.setIamPolicy",
      "networkservices.httpFilters.update",
      "networkservices.httpFilters.use",
      "networkservices.httpRoutes.create",
      "networkservices.httpRoutes.delete",
      "networkservices.httpRoutes.get",
      "networkservices.httpRoutes.getIamPolicy",
      "networkservices.httpRoutes.list",
      "networkservices.httpRoutes.setIamPolicy",
      "networkservices.httpRoutes.update",
      "networkservices.httpRoutes.use",
      "networkservices.httpfilters.create",
      "networkservices.httpfilters.delete",
      "networkservices.httpfilters.get",
      "networkservices.httpfilters.getIamPolicy",
      "networkservices.httpfilters.list",
      "networkservices.httpfilters.setIamPolicy",
      "networkservices.httpfilters.update",
      "networkservices.httpfilters.use",
      "networkservices.locations.get",
      "networkservices.locations.list",
      "networkservices.meshes.create",
      "networkservices.meshes.delete",
      "networkservices.meshes.get",
      "networkservices.meshes.getIamPolicy",
      "networkservices.meshes.list",
      "networkservices.meshes.setIamPolicy",
      "networkservices.meshes.update",
      "networkservices.meshes.use",
      "networkservices.operations.cancel",
      "networkservices.operations.delete",
      "networkservices.operations.get",
      "networkservices.operations.list",
      "networkservices.serviceBindings.create",
      "networkservices.serviceBindings.delete",
      "networkservices.serviceBindings.get",
      "networkservices.serviceBindings.list",
      "networkservices.serviceBindings.update",
      "networkservices.tcpRoutes.create",
      "networkservices.tcpRoutes.delete",
      "networkservices.tcpRoutes.get",
      "networkservices.tcpRoutes.getIamPolicy",
      "networkservices.tcpRoutes.list",
      "networkservices.tcpRoutes.setIamPolicy",
      "networkservices.tcpRoutes.update",
      "networkservices.tcpRoutes.use",
      "networkservices.tlsRoutes.create",
      "networkservices.tlsRoutes.delete",
      "networkservices.tlsRoutes.get",
      "networkservices.tlsRoutes.list",
      "networkservices.tlsRoutes.update",
      "networkservices.tlsRoutes.use",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "servicedirectory.namespaces.create",
      "servicedirectory.namespaces.delete",
      "servicedirectory.services.create",
      "servicedirectory.services.delete",
      "servicenetworking.operations.get",
      "servicenetworking.services.addPeering",
      "servicenetworking.services.createPeeredDnsDomain",
      "servicenetworking.services.deleteConnection",
      "servicenetworking.services.deletePeeredDnsDomain",
      "servicenetworking.services.disableVpcServiceControls",
      "servicenetworking.services.enableVpcServiceControls",
      "servicenetworking.services.get",
      "servicenetworking.services.listPeeredDnsDomains",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "trafficdirector.networks.getConfigs",
      "trafficdirector.networks.reportMetrics"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/compute.networkUser",
    "title": "Compute Network User",
    "description": "Access to use Compute Engine networking resources.",
    "includedPermissions": [
      "compute.addresses.createInternal",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.addresses.useInternal",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.list",
      "compute.externalVpnGateways.use",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.interconnectAttachments.get",
      "compute.interconnectAttachments.list",
      "compute.interconnectLocations.get",
      "compute.interconnectLocations.list",
      "compute.interconnectRemoteLocations.get",
      "compute.interconnectRemoteLocations.list",
      "compute.interconnects.get",
      "compute.interconnects.list",
      "compute.interconnects.use",
      "compute.networkAttachments.get",
      "compute.networkAttachments.list",
      "compute.networks.access",
      "compute.networks.get",
      "compute.networks.getEffectiveFirewalls",
      "compute.networks.getRegionEffectiveFirewalls",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listPeeringRoutes",
      "compute.networks.listTagBindings",
      "compute.networks.use",
      "compute.networks.useExternalIp",
      "compute.projects.get",
      "compute.regions.get",
      "compute.regions.list",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routes.get",
      "compute.routes.list",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.serviceAttachments.get",
      "compute.serviceAttachments.list",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.targetVpnGateways.get",
      "compute.targetVpnGateways.list",
      "compute.vpnGateways.get",
      "compute.vpnGateways.list",
      "compute.vpnGateways.use",
      "compute.vpnTunnels.get",
      "compute.vpnTunnels.list",
      "compute.zones.get",
      "compute.zones.list",
      "networkconnectivity.internalRanges.get",
      "networkconnectivity.internalRanges.list",
      "networkconnectivity.locations.get",
      "networkconnectivity.locations.list",
      "networkconnectivity.operations.get",
      "networkconnectivity.operations.list",
      "networkconnectivity.policyBasedRoutes.get",
      "networkconnectivity.policyBasedRoutes.list",
      "networksecurity.authorizationPolicies.get",
      "networksecurity.authorizationPolicies.list",
      "networksecurity.authorizationPolicies.use",
      "networksecurity.clientTlsPolicies.get",
      "networksecurity.clientTlsPolicies.list",
      "networksecurity.clientTlsPolicies.use",
      "networksecurity.firewallEndpointAssociations.get",
      "networksecurity.firewallEndpointAssociations.list",
      "networksecurity.firewallEndpoints.get",
      "networksecurity.firewallEndpoints.list",
      "networksecurity.firewallEndpoints.use",
      "networksecurity.gatewaySecurityPolicies.get",
      "networksecurity.gatewaySecurityPolicies.list",
      "networksecurity.gatewaySecurityPolicies.use",
      "networksecurity.gatewaySecurityPolicyRules.get",
      "networksecurity.gatewaySecurityPolicyRules.list",
      "networksecurity.gatewaySecurityPolicyRules.use",
      "networksecurity.locations.get",
      "networksecurity.locations.list",
      "networksecurity.operations.get",
      "networksecurity.operations.list",
      "networksecurity.securityProfileGroups.get",
      "networksecurity.securityProfileGroups.list",
      "networksecurity.securityProfileGroups.use",
      "networksecurity.securityProfiles.get",
      "networksecurity.securityProfiles.list",
      "networksecurity.securityProfiles.use",
      "networksecurity.serverTlsPolicies.get",
      "networksecurity.serverTlsPolicies.list",
      "networksecurity.serverTlsPolicies.use",
      "networksecurity.tlsInspectionPolicies.get",
      "networksecurity.tlsInspectionPolicies.list",
      "networksecurity.tlsInspectionPolicies.use",
      "networksecurity.urlLists.get",
      "networksecurity.urlLists.list",
      "networksecurity.urlLists.use",
      "networkservices.endpointConfigSelectors.get",
      "networkservices.endpointConfigSelectors.list",
      "networkservices.endpointConfigSelectors.use",
      "networkservices.endpointPolicies.get",
      "networkservices.endpointPolicies.list",
      "networkservices.endpointPolicies.use",
      "networkservices.gateways.get",
      "networkservices.gateways.list",
      "networkservices.gateways.use",
      "networkservices.grpcRoutes.get",
      "networkservices.grpcRoutes.list",
      "networkservices.grpcRoutes.use",
      "networkservices.httpFilters.get",
      "networkservices.httpFilters.list",
      "networkservices.httpFilters.use",
      "networkservices.httpRoutes.get",
      "networkservices.httpRoutes.list",
      "networkservices.httpRoutes.use",
      "networkservices.httpfilters.get",
      "networkservices.httpfilters.list",
      "networkservices.httpfilters.use",
      "networkservices.locations.get",
      "networkservices.locations.list",
      "networkservices.meshes.get",
      "networkservices.meshes.list",
      "networkservices.meshes.use",
      "networkservices.operations.get",
      "networkservices.operations.list",
      "networkservices.serviceBindings.get",
      "networkservices.serviceBindings.list",
      "networkservices.tcpRoutes.get",
      "networkservices.tcpRoutes.list",
      "networkservices.tcpRoutes.use",
      "networkservices.tlsRoutes.get",
      "networkservices.tlsRoutes.list",
      "networkservices.tlsRoutes.use",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "servicenetworking.services.get",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/compute.networkViewer",
    "title": "Compute Network Viewer",
    "description": "Read-only access to Compute Engine networking resources.",
    "includedPermissions": [
      "compute.acceleratorTypes.get",
      "compute.acceleratorTypes.list",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.backendBuckets.get",
      "compute.backendBuckets.list",
      "compute.backendBuckets.listEffectiveTags",
      "compute.backendBuckets.listTagBindings",
      "compute.backendServices.get",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.list",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalForwardingRules.pscGet",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instances.get",
      "compute.instances.getGuestAttributes",
      "compute.instances.getScreenshot",
      "compute.instances.getSerialPortOutput",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listReferrers",
      "compute.instances.listTagBindings",
      "compute.interconnectAttachments.get",
      "compute.interconnectAttachments.list",
      "compute.interconnectLocations.get",
      "compute.interconnectLocations.list",
      "compute.interconnectRemoteLocations.get",
      "compute.interconnectRemoteLocations.list",
      "compute.interconnects.get",
      "compute.interconnects.list",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.networkAttachments.get",
      "compute.networkAttachments.list",
      "compute.networks.get",
      "compute.networks.getEffectiveFirewalls",
      "compute.networks.getRegionEffectiveFirewalls",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listPeeringRoutes",
      "compute.networks.listTagBindings",
      "compute.packetMirrorings.get",
      "compute.packetMirrorings.list",
      "compute.projects.get",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionHealthCheckServices.get",
      "compute.regionHealthCheckServices.list",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionNotificationEndpoints.get",
      "compute.regionNotificationEndpoints.list",
      "compute.regionSslCertificates.get",
      "compute.regionSslCertificates.list",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionSslPolicies.get",
      "compute.regionSslPolicies.list",
      "compute.regionSslPolicies.listAvailableFeatures",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionTargetTcpProxies.get",
      "compute.regionTargetTcpProxies.list",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.list",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.regions.get",
      "compute.regions.list",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routes.get",
      "compute.routes.list",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.serviceAttachments.get",
      "compute.serviceAttachments.list",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.get",
      "compute.sslPolicies.list",
      "compute.sslPolicies.listAvailableFeatures",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.targetGrpcProxies.get",
      "compute.targetGrpcProxies.list",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetInstances.get",
      "compute.targetInstances.list",
      "compute.targetInstances.listEffectiveTags",
      "compute.targetInstances.listTagBindings",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetSslProxies.listEffectiveTags",
      "compute.targetSslProxies.listTagBindings",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.targetVpnGateways.get",
      "compute.targetVpnGateways.list",
      "compute.urlMaps.get",
      "compute.urlMaps.list",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "compute.vpnGateways.get",
      "compute.vpnGateways.list",
      "compute.vpnTunnels.get",
      "compute.vpnTunnels.list",
      "compute.zones.get",
      "compute.zones.list",
      "networkconnectivity.internalRanges.get",
      "networkconnectivity.internalRanges.list",
      "networkconnectivity.locations.get",
      "networkconnectivity.locations.list",
      "networkconnectivity.operations.get",
      "networkconnectivity.operations.list",
      "networkconnectivity.policyBasedRoutes.get",
      "networkconnectivity.policyBasedRoutes.list",
      "networksecurity.authorizationPolicies.get",
      "networksecurity.authorizationPolicies.list",
      "networksecurity.clientTlsPolicies.get",
      "networksecurity.clientTlsPolicies.list",
      "networksecurity.firewallEndpointAssociations.get",
      "networksecurity.firewallEndpointAssociations.list",
      "networksecurity.firewallEndpoints.get",
      "networksecurity.firewallEndpoints.list",
      "networksecurity.gatewaySecurityPolicies.get",
      "networksecurity.gatewaySecurityPolicies.list",
      "networksecurity.gatewaySecurityPolicyRules.get",
      "networksecurity.gatewaySecurityPolicyRules.list",
      "networksecurity.locations.get",
      "networksecurity.locations.list",
      "networksecurity.operations.get",
      "networksecurity.operations.list",
      "networksecurity.securityProfileGroups.get",
      "networksecurity.securityProfileGroups.list",
      "networksecurity.securityProfiles.get",
      "networksecurity.securityProfiles.list",
      "networksecurity.serverTlsPolicies.get",
      "networksecurity.serverTlsPolicies.list",
      "networksecurity.tlsInspectionPolicies.get",
      "networksecurity.tlsInspectionPolicies.list",
      "networksecurity.urlLists.get",
      "networksecurity.urlLists.list",
      "networkservices.endpointConfigSelectors.get",
      "networkservices.endpointConfigSelectors.list",
      "networkservices.endpointPolicies.get",
      "networkservices.endpointPolicies.list",
      "networkservices.gateways.get",
      "networkservices.gateways.list",
      "networkservices.grpcRoutes.get",
      "networkservices.grpcRoutes.list",
      "networkservices.httpFilters.get",
      "networkservices.httpFilters.list",
      "networkservices.httpRoutes.get",
      "networkservices.httpRoutes.list",
      "networkservices.httpfilters.get",
      "networkservices.httpfilters.list",
      "networkservices.locations.get",
      "networkservices.locations.list",
      "networkservices.meshes.get",
      "networkservices.meshes.list",
      "networkservices.operations.get",
      "networkservices.operations.list",
      "networkservices.serviceBindings.get",
      "networkservices.serviceBindings.list",
      "networkservices.tcpRoutes.get",
      "networkservices.tcpRoutes.list",
      "networkservices.tlsRoutes.get",
      "networkservices.tlsRoutes.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "servicenetworking.services.get",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "trafficdirector.networks.getConfigs",
      "trafficdirector.networks.reportMetrics"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/compute.orgFirewallPolicyAdmin",
    "title": "Compute Organization Firewall Policy Admin",
    "description": "Full control of Compute Engine Organization Firewall Policies.",
    "includedPermissions": [
      "compute.firewallPolicies.cloneRules",
      "compute.firewallPolicies.create",
      "compute.firewallPolicies.createTagBinding",
      "compute.firewallPolicies.delete",
      "compute.firewallPolicies.deleteTagBinding",
      "compute.firewallPolicies.get",
      "compute.firewallPolicies.getIamPolicy",
      "compute.firewallPolicies.list",
      "compute.firewallPolicies.listEffectiveTags",
      "compute.firewallPolicies.listTagBindings",
      "compute.firewallPolicies.move",
      "compute.firewallPolicies.setIamPolicy",
      "compute.firewallPolicies.update",
      "compute.firewallPolicies.use",
      "compute.globalOperations.get",
      "compute.globalOperations.getIamPolicy",
      "compute.globalOperations.list",
      "compute.globalOperations.setIamPolicy",
      "compute.projects.get",
      "compute.regionFirewallPolicies.cloneRules",
      "compute.regionFirewallPolicies.create",
      "compute.regionFirewallPolicies.createTagBinding",
      "compute.regionFirewallPolicies.delete",
      "compute.regionFirewallPolicies.deleteTagBinding",
      "compute.regionFirewallPolicies.get",
      "compute.regionFirewallPolicies.getIamPolicy",
      "compute.regionFirewallPolicies.list",
      "compute.regionFirewallPolicies.listEffectiveTags",
      "compute.regionFirewallPolicies.listTagBindings",
      "compute.regionFirewallPolicies.setIamPolicy",
      "compute.regionFirewallPolicies.update",
      "compute.regionFirewallPolicies.use",
      "compute.regionOperations.get",
      "compute.regionOperations.getIamPolicy",
      "compute.regionOperations.list",
      "compute.regionOperations.setIamPolicy",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/compute.orgFirewallPolicyUser",
    "title": "Compute Organization Firewall Policy User",
    "description": "View or use Compute Engine Firewall Policies to associate with the organization or folders.",
    "includedPermissions": [
      "compute.firewallPolicies.get",
      "compute.firewallPolicies.list",
      "compute.firewallPolicies.listEffectiveTags",
      "compute.firewallPolicies.listTagBindings",
      "compute.firewallPolicies.use",
      "compute.globalOperations.get",
      "compute.globalOperations.getIamPolicy",
      "compute.globalOperations.list",
      "compute.projects.get",
      "compute.regionFirewallPolicies.get",
      "compute.regionFirewallPolicies.list",
      "compute.regionFirewallPolicies.listEffectiveTags",
      "compute.regionFirewallPolicies.listTagBindings",
      "compute.regionFirewallPolicies.use",
      "compute.regionOperations.get",
      "compute.regionOperations.getIamPolicy",
      "compute.regionOperations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/compute.orgSecurityPolicyAdmin",
    "title": "Compute Organization Security Policy Admin",
    "description": "Full control of Compute Engine Organization Security Policies.",
    "includedPermissions": [
      "compute.firewallPolicies.addAssociation",
      "compute.firewallPolicies.cloneRules",
      "compute.firewallPolicies.copyRules",
      "compute.firewallPolicies.create",
      "compute.firewallPolicies.createTagBinding",
      "compute.firewallPolicies.delete",
      "compute.firewallPolicies.deleteTagBinding",
      "compute.firewallPolicies.get",
      "compute.firewallPolicies.getIamPolicy",
      "compute.firewallPolicies.list",
      "compute.firewallPolicies.listEffectiveTags",
      "compute.firewallPolicies.listTagBindings",
      "compute.firewallPolicies.move",
      "compute.firewallPolicies.removeAssociation",
      "compute.firewallPolicies.setIamPolicy",
      "compute.firewallPolicies.update",
      "compute.firewallPolicies.use",
      "compute.globalOperations.get",
      "compute.globalOperations.getIamPolicy",
      "compute.globalOperations.list",
      "compute.globalOperations.setIamPolicy",
      "compute.projects.get",
      "compute.securityPolicies.addAssociation",
      "compute.securityPolicies.copyRules",
      "compute.securityPolicies.create",
      "compute.securityPolicies.createTagBinding",
      "compute.securityPolicies.delete",
      "compute.securityPolicies.deleteTagBinding",
      "compute.securityPolicies.get",
      "compute.securityPolicies.getIamPolicy",
      "compute.securityPolicies.list",
      "compute.securityPolicies.listEffectiveTags",
      "compute.securityPolicies.listTagBindings",
      "compute.securityPolicies.move",
      "compute.securityPolicies.removeAssociation",
      "compute.securityPolicies.setIamPolicy",
      "compute.securityPolicies.update",
      "compute.securityPolicies.use",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/compute.orgSecurityPolicyUser",
    "title": "Compute Organization Security Policy User",
    "description": "View or use Compute Engine Security Policies to associate with the organization or folders.",
    "includedPermissions": [
      "compute.firewallPolicies.addAssociation",
      "compute.firewallPolicies.get",
      "compute.firewallPolicies.list",
      "compute.firewallPolicies.listEffectiveTags",
      "compute.firewallPolicies.listTagBindings",
      "compute.firewallPolicies.removeAssociation",
      "compute.firewallPolicies.use",
      "compute.globalOperations.get",
      "compute.globalOperations.getIamPolicy",
      "compute.globalOperations.list",
      "compute.globalOperations.setIamPolicy",
      "compute.projects.get",
      "compute.securityPolicies.addAssociation",
      "compute.securityPolicies.get",
      "compute.securityPolicies.list",
      "compute.securityPolicies.listEffectiveTags",
      "compute.securityPolicies.listTagBindings",
      "compute.securityPolicies.removeAssociation",
      "compute.securityPolicies.use",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/compute.orgSecurityResourceAdmin",
    "title": "Compute Organization Resource Admin",
    "description": "Full control of Compute Engine Firewall Policy associations to the organization or folders.",
    "includedPermissions": [
      "compute.globalOperations.get",
      "compute.globalOperations.getIamPolicy",
      "compute.globalOperations.list",
      "compute.globalOperations.setIamPolicy",
      "compute.organizations.listAssociations",
      "compute.organizations.setFirewallPolicy",
      "compute.organizations.setSecurityPolicy",
      "compute.projects.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/compute.osAdminLogin",
    "title": "Compute OS Admin Login",
    "description": "Access to log in to a Compute Engine instance as an administrator user.",
    "includedPermissions": [
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.instances.get",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listTagBindings",
      "compute.instances.osAdminLogin",
      "compute.instances.osLogin",
      "compute.projects.get",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/compute.osLogin",
    "title": "Compute OS Login",
    "description": "Access to log in to a Compute Engine instance as a standard (non-administrator) user.",
    "includedPermissions": [
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.instances.get",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listTagBindings",
      "compute.instances.osLogin",
      "compute.projects.get",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/compute.osLoginExternalUser",
    "title": "Compute OS Login External User",
    "description": "Access for an external user to set OS Login information associated with this organization. This role does not grant access to instances. External users must be granted one of the required OS Login IAM roles (https://cloud.google.com/compute/docs/instances/managing-instance-access#configure_users) in order to allow access to instances using SSH.",
    "includedPermissions": [
      "compute.oslogin.updateExternalUser"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/compute.packetMirroringAdmin",
    "title": "Compute packet mirroring admin",
    "description": "Specify resources to be mirrored.",
    "includedPermissions": [
      "compute.instances.updateSecurity",
      "compute.networks.mirror",
      "compute.projects.get",
      "compute.subnetworks.mirror",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/compute.packetMirroringUser",
    "title": "Compute packet mirroring user",
    "description": "Use Compute Engine packet mirrorings.",
    "includedPermissions": [
      "compute.packetMirrorings.create",
      "compute.packetMirrorings.delete",
      "compute.packetMirrorings.get",
      "compute.packetMirrorings.list",
      "compute.packetMirrorings.update",
      "compute.projects.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/compute.publicIpAdmin",
    "title": "Compute Public IP Admin",
    "description": "Full control of public IP address management for Compute Engine.",
    "includedPermissions": [
      "compute.addresses.create",
      "compute.addresses.createInternal",
      "compute.addresses.delete",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.addresses.setLabels",
      "compute.addresses.use",
      "compute.addresses.useInternal",
      "compute.globalAddresses.create",
      "compute.globalAddresses.createInternal",
      "compute.globalAddresses.delete",
      "compute.globalAddresses.deleteInternal",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalAddresses.setLabels",
      "compute.globalAddresses.use",
      "compute.globalPublicDelegatedPrefixes.create",
      "compute.globalPublicDelegatedPrefixes.delete",
      "compute.globalPublicDelegatedPrefixes.get",
      "compute.globalPublicDelegatedPrefixes.list",
      "compute.globalPublicDelegatedPrefixes.update",
      "compute.globalPublicDelegatedPrefixes.updatePolicy",
      "compute.globalPublicDelegatedPrefixes.use",
      "compute.publicAdvertisedPrefixes.create",
      "compute.publicAdvertisedPrefixes.delete",
      "compute.publicAdvertisedPrefixes.get",
      "compute.publicAdvertisedPrefixes.list",
      "compute.publicAdvertisedPrefixes.update",
      "compute.publicAdvertisedPrefixes.updatePolicy",
      "compute.publicAdvertisedPrefixes.use",
      "compute.publicDelegatedPrefixes.create",
      "compute.publicDelegatedPrefixes.delete",
      "compute.publicDelegatedPrefixes.get",
      "compute.publicDelegatedPrefixes.list",
      "compute.publicDelegatedPrefixes.update",
      "compute.publicDelegatedPrefixes.updatePolicy",
      "compute.publicDelegatedPrefixes.use",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/compute.securityAdmin",
    "title": "Compute Security Admin",
    "description": "Full control of Compute Engine security resources.",
    "includedPermissions": [
      "compute.backendBuckets.list",
      "compute.backendServices.list",
      "compute.firewallPolicies.addAssociation",
      "compute.firewallPolicies.cloneRules",
      "compute.firewallPolicies.copyRules",
      "compute.firewallPolicies.create",
      "compute.firewallPolicies.createTagBinding",
      "compute.firewallPolicies.delete",
      "compute.firewallPolicies.deleteTagBinding",
      "compute.firewallPolicies.get",
      "compute.firewallPolicies.getIamPolicy",
      "compute.firewallPolicies.list",
      "compute.firewallPolicies.listEffectiveTags",
      "compute.firewallPolicies.listTagBindings",
      "compute.firewallPolicies.move",
      "compute.firewallPolicies.removeAssociation",
      "compute.firewallPolicies.setIamPolicy",
      "compute.firewallPolicies.update",
      "compute.firewallPolicies.use",
      "compute.firewalls.create",
      "compute.firewalls.createTagBinding",
      "compute.firewalls.delete",
      "compute.firewalls.deleteTagBinding",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.firewalls.update",
      "compute.globalOperations.get",
      "compute.globalOperations.list",
      "compute.instances.getEffectiveFirewalls",
      "compute.instances.list",
      "compute.instances.setShieldedInstanceIntegrityPolicy",
      "compute.instances.setShieldedVmIntegrityPolicy",
      "compute.instances.updateSecurity",
      "compute.instances.updateShieldedInstanceConfig",
      "compute.instances.updateShieldedVmConfig",
      "compute.networks.get",
      "compute.networks.getEffectiveFirewalls",
      "compute.networks.getRegionEffectiveFirewalls",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listTagBindings",
      "compute.networks.updatePolicy",
      "compute.packetMirrorings.create",
      "compute.packetMirrorings.delete",
      "compute.packetMirrorings.get",
      "compute.packetMirrorings.list",
      "compute.packetMirrorings.update",
      "compute.projects.get",
      "compute.regionBackendServices.list",
      "compute.regionFirewallPolicies.cloneRules",
      "compute.regionFirewallPolicies.create",
      "compute.regionFirewallPolicies.createTagBinding",
      "compute.regionFirewallPolicies.delete",
      "compute.regionFirewallPolicies.deleteTagBinding",
      "compute.regionFirewallPolicies.get",
      "compute.regionFirewallPolicies.getIamPolicy",
      "compute.regionFirewallPolicies.list",
      "compute.regionFirewallPolicies.listEffectiveTags",
      "compute.regionFirewallPolicies.listTagBindings",
      "compute.regionFirewallPolicies.setIamPolicy",
      "compute.regionFirewallPolicies.update",
      "compute.regionFirewallPolicies.use",
      "compute.regionOperations.get",
      "compute.regionOperations.list",
      "compute.regionSecurityPolicies.create",
      "compute.regionSecurityPolicies.createTagBinding",
      "compute.regionSecurityPolicies.delete",
      "compute.regionSecurityPolicies.deleteTagBinding",
      "compute.regionSecurityPolicies.get",
      "compute.regionSecurityPolicies.list",
      "compute.regionSecurityPolicies.listEffectiveTags",
      "compute.regionSecurityPolicies.listTagBindings",
      "compute.regionSecurityPolicies.update",
      "compute.regionSecurityPolicies.use",
      "compute.regionSslCertificates.create",
      "compute.regionSslCertificates.createTagBinding",
      "compute.regionSslCertificates.delete",
      "compute.regionSslCertificates.deleteTagBinding",
      "compute.regionSslCertificates.get",
      "compute.regionSslCertificates.list",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionSslPolicies.create",
      "compute.regionSslPolicies.delete",
      "compute.regionSslPolicies.get",
      "compute.regionSslPolicies.list",
      "compute.regionSslPolicies.listAvailableFeatures",
      "compute.regionSslPolicies.update",
      "compute.regionSslPolicies.use",
      "compute.regions.get",
      "compute.regions.list",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routes.get",
      "compute.routes.list",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.securityPolicies.addAssociation",
      "compute.securityPolicies.copyRules",
      "compute.securityPolicies.create",
      "compute.securityPolicies.createTagBinding",
      "compute.securityPolicies.delete",
      "compute.securityPolicies.deleteTagBinding",
      "compute.securityPolicies.get",
      "compute.securityPolicies.getIamPolicy",
      "compute.securityPolicies.list",
      "compute.securityPolicies.listEffectiveTags",
      "compute.securityPolicies.listTagBindings",
      "compute.securityPolicies.move",
      "compute.securityPolicies.removeAssociation",
      "compute.securityPolicies.setIamPolicy",
      "compute.securityPolicies.setLabels",
      "compute.securityPolicies.update",
      "compute.securityPolicies.use",
      "compute.sslCertificates.create",
      "compute.sslCertificates.createTagBinding",
      "compute.sslCertificates.delete",
      "compute.sslCertificates.deleteTagBinding",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.create",
      "compute.sslPolicies.createTagBinding",
      "compute.sslPolicies.delete",
      "compute.sslPolicies.deleteTagBinding",
      "compute.sslPolicies.get",
      "compute.sslPolicies.list",
      "compute.sslPolicies.listAvailableFeatures",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.sslPolicies.update",
      "compute.sslPolicies.use",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.targetInstances.list",
      "compute.targetPools.list",
      "compute.zoneOperations.get",
      "compute.zoneOperations.list",
      "compute.zones.get",
      "compute.zones.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/compute.serviceAgent",
    "title": "Compute Engine Service Agent",
    "description": "Gives Compute Engine Service Account access to assert service account authority. Includes access to service accounts.",
    "includedPermissions": [
      "cloudnotifications.activities.list",
      "compute.addresses.use",
      "compute.addresses.useInternal",
      "compute.disks.create",
      "compute.disks.createTagBinding",
      "compute.disks.setLabels",
      "compute.disks.use",
      "compute.disks.useReadOnly",
      "compute.images.useReadOnly",
      "compute.instanceGroupManagers.get",
      "compute.instanceTemplates.useReadOnly",
      "compute.instances.create",
      "compute.instances.createTagBinding",
      "compute.instances.setDeletionProtection",
      "compute.instances.setLabels",
      "compute.instances.setMetadata",
      "compute.instances.setServiceAccount",
      "compute.instances.setTags",
      "compute.instances.updateDisplayDevice",
      "compute.machineImages.useReadOnly",
      "compute.networks.use",
      "compute.networks.useExternalIp",
      "compute.resourcePolicies.use",
      "compute.snapshots.useReadOnly",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "iam.serviceAccounts.actAs",
      "iam.serviceAccounts.getAccessToken",
      "iam.serviceAccounts.getOpenIdToken",
      "iam.serviceAccounts.signJwt",
      "logging.logEntries.create",
      "monitoring.alertPolicies.get",
      "monitoring.alertPolicies.list",
      "monitoring.dashboards.get",
      "monitoring.dashboards.list",
      "monitoring.groups.get",
      "monitoring.groups.list",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.notificationChannelDescriptors.get",
      "monitoring.notificationChannelDescriptors.list",
      "monitoring.notificationChannels.get",
      "monitoring.notificationChannels.list",
      "monitoring.publicWidgets.get",
      "monitoring.publicWidgets.list",
      "monitoring.services.get",
      "monitoring.services.list",
      "monitoring.slos.get",
      "monitoring.slos.list",
      "monitoring.snoozes.get",
      "monitoring.snoozes.list",
      "monitoring.timeSeries.list",
      "monitoring.uptimeCheckConfigs.get",
      "monitoring.uptimeCheckConfigs.list",
      "opsconfigmonitoring.resourceMetadata.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "stackdriver.projects.get",
      "stackdriver.resourceMetadata.list",
      "storage.objects.create",
      "storage.objects.get",
      "storage.objects.list",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/compute.soleTenantViewer",
    "title": "Compute Sole Tenant Viewer",
    "description": "Permissions to view sole tenancy node groups",
    "includedPermissions": [
      "compute.nodeGroups.get",
      "compute.nodeGroups.getIamPolicy",
      "compute.nodeGroups.list",
      "compute.nodeTemplates.get",
      "compute.nodeTemplates.getIamPolicy",
      "compute.nodeTemplates.list",
      "compute.nodeTypes.get",
      "compute.nodeTypes.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/compute.storageAdmin",
    "title": "Compute Storage Admin",
    "description": "Full control of Compute Engine storage resources.",
    "includedPermissions": [
      "compute.diskTypes.get",
      "compute.diskTypes.list",
      "compute.disks.addResourcePolicies",
      "compute.disks.create",
      "compute.disks.createSnapshot",
      "compute.disks.createTagBinding",
      "compute.disks.delete",
      "compute.disks.deleteTagBinding",
      "compute.disks.get",
      "compute.disks.getIamPolicy",
      "compute.disks.list",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.disks.removeResourcePolicies",
      "compute.disks.resize",
      "compute.disks.setIamPolicy",
      "compute.disks.setLabels",
      "compute.disks.startAsyncReplication",
      "compute.disks.stopAsyncReplication",
      "compute.disks.stopGroupAsyncReplication",
      "compute.disks.update",
      "compute.disks.use",
      "compute.disks.useReadOnly",
      "compute.globalOperations.get",
      "compute.globalOperations.list",
      "compute.images.create",
      "compute.images.createTagBinding",
      "compute.images.delete",
      "compute.images.deleteTagBinding",
      "compute.images.deprecate",
      "compute.images.get",
      "compute.images.getFromFamily",
      "compute.images.getIamPolicy",
      "compute.images.list",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.images.setIamPolicy",
      "compute.images.setLabels",
      "compute.images.update",
      "compute.images.useReadOnly",
      "compute.instantSnapshots.create",
      "compute.instantSnapshots.delete",
      "compute.instantSnapshots.export",
      "compute.instantSnapshots.get",
      "compute.instantSnapshots.getIamPolicy",
      "compute.instantSnapshots.list",
      "compute.instantSnapshots.setIamPolicy",
      "compute.instantSnapshots.setLabels",
      "compute.instantSnapshots.useReadOnly",
      "compute.licenseCodes.get",
      "compute.licenseCodes.getIamPolicy",
      "compute.licenseCodes.list",
      "compute.licenseCodes.setIamPolicy",
      "compute.licenseCodes.update",
      "compute.licenseCodes.use",
      "compute.licenses.create",
      "compute.licenses.delete",
      "compute.licenses.get",
      "compute.licenses.getIamPolicy",
      "compute.licenses.list",
      "compute.licenses.setIamPolicy",
      "compute.projects.get",
      "compute.regionOperations.get",
      "compute.regionOperations.list",
      "compute.regions.get",
      "compute.regions.list",
      "compute.resourcePolicies.create",
      "compute.resourcePolicies.delete",
      "compute.resourcePolicies.get",
      "compute.resourcePolicies.getIamPolicy",
      "compute.resourcePolicies.list",
      "compute.resourcePolicies.setIamPolicy",
      "compute.resourcePolicies.update",
      "compute.resourcePolicies.use",
      "compute.resourcePolicies.useReadOnly",
      "compute.snapshots.create",
      "compute.snapshots.createTagBinding",
      "compute.snapshots.delete",
      "compute.snapshots.deleteTagBinding",
      "compute.snapshots.get",
      "compute.snapshots.getIamPolicy",
      "compute.snapshots.list",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.snapshots.setIamPolicy",
      "compute.snapshots.setLabels",
      "compute.snapshots.useReadOnly",
      "compute.zoneOperations.get",
      "compute.zoneOperations.list",
      "compute.zones.get",
      "compute.zones.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/compute.viewer",
    "title": "Compute Viewer",
    "description": "Read-only access to get and list information about all Compute Engine resources, including instances, disks, and firewalls. Allows getting and listing information about disks, images, and snapshots, but does not allow reading the data stored on them.",
    "includedPermissions": [
      "compute.acceleratorTypes.get",
      "compute.acceleratorTypes.list",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.backendBuckets.get",
      "compute.backendBuckets.getIamPolicy",
      "compute.backendBuckets.list",
      "compute.backendBuckets.listEffectiveTags",
      "compute.backendBuckets.listTagBindings",
      "compute.backendServices.get",
      "compute.backendServices.getIamPolicy",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.commitments.get",
      "compute.commitments.list",
      "compute.diskTypes.get",
      "compute.diskTypes.list",
      "compute.disks.get",
      "compute.disks.getIamPolicy",
      "compute.disks.list",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.list",
      "compute.firewallPolicies.get",
      "compute.firewallPolicies.getIamPolicy",
      "compute.firewallPolicies.list",
      "compute.firewallPolicies.listEffectiveTags",
      "compute.firewallPolicies.listTagBindings",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.futureReservations.get",
      "compute.futureReservations.getIamPolicy",
      "compute.futureReservations.list",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalForwardingRules.pscGet",
      "compute.globalNetworkEndpointGroups.get",
      "compute.globalNetworkEndpointGroups.list",
      "compute.globalNetworkEndpointGroups.listEffectiveTags",
      "compute.globalNetworkEndpointGroups.listTagBindings",
      "compute.globalOperations.get",
      "compute.globalOperations.getIamPolicy",
      "compute.globalOperations.list",
      "compute.globalPublicDelegatedPrefixes.get",
      "compute.globalPublicDelegatedPrefixes.list",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.images.get",
      "compute.images.getFromFamily",
      "compute.images.getIamPolicy",
      "compute.images.list",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instanceTemplates.get",
      "compute.instanceTemplates.getIamPolicy",
      "compute.instanceTemplates.list",
      "compute.instances.get",
      "compute.instances.getEffectiveFirewalls",
      "compute.instances.getGuestAttributes",
      "compute.instances.getIamPolicy",
      "compute.instances.getScreenshot",
      "compute.instances.getSerialPortOutput",
      "compute.instances.getShieldedInstanceIdentity",
      "compute.instances.getShieldedVmIdentity",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listReferrers",
      "compute.instances.listTagBindings",
      "compute.instantSnapshots.get",
      "compute.instantSnapshots.getIamPolicy",
      "compute.instantSnapshots.list",
      "compute.interconnectAttachments.get",
      "compute.interconnectAttachments.list",
      "compute.interconnectLocations.get",
      "compute.interconnectLocations.list",
      "compute.interconnectRemoteLocations.get",
      "compute.interconnectRemoteLocations.list",
      "compute.interconnects.get",
      "compute.interconnects.list",
      "compute.licenseCodes.get",
      "compute.licenseCodes.getIamPolicy",
      "compute.licenseCodes.list",
      "compute.licenses.get",
      "compute.licenses.getIamPolicy",
      "compute.licenses.list",
      "compute.machineImages.get",
      "compute.machineImages.getIamPolicy",
      "compute.machineImages.list",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.maintenancePolicies.get",
      "compute.maintenancePolicies.getIamPolicy",
      "compute.maintenancePolicies.list",
      "compute.networkAttachments.get",
      "compute.networkAttachments.getIamPolicy",
      "compute.networkAttachments.list",
      "compute.networkEdgeSecurityServices.get",
      "compute.networkEdgeSecurityServices.list",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.getIamPolicy",
      "compute.networkEndpointGroups.list",
      "compute.networkEndpointGroups.listEffectiveTags",
      "compute.networkEndpointGroups.listTagBindings",
      "compute.networks.get",
      "compute.networks.getEffectiveFirewalls",
      "compute.networks.getRegionEffectiveFirewalls",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listPeeringRoutes",
      "compute.networks.listTagBindings",
      "compute.nodeGroups.get",
      "compute.nodeGroups.getIamPolicy",
      "compute.nodeGroups.list",
      "compute.nodeTemplates.get",
      "compute.nodeTemplates.getIamPolicy",
      "compute.nodeTemplates.list",
      "compute.nodeTypes.get",
      "compute.nodeTypes.list",
      "compute.organizations.listAssociations",
      "compute.packetMirrorings.get",
      "compute.packetMirrorings.list",
      "compute.projects.get",
      "compute.publicAdvertisedPrefixes.get",
      "compute.publicAdvertisedPrefixes.list",
      "compute.publicDelegatedPrefixes.get",
      "compute.publicDelegatedPrefixes.list",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.getIamPolicy",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionFirewallPolicies.get",
      "compute.regionFirewallPolicies.getIamPolicy",
      "compute.regionFirewallPolicies.list",
      "compute.regionFirewallPolicies.listEffectiveTags",
      "compute.regionFirewallPolicies.listTagBindings",
      "compute.regionHealthCheckServices.get",
      "compute.regionHealthCheckServices.list",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionNetworkEndpointGroups.listEffectiveTags",
      "compute.regionNetworkEndpointGroups.listTagBindings",
      "compute.regionNotificationEndpoints.get",
      "compute.regionNotificationEndpoints.list",
      "compute.regionOperations.get",
      "compute.regionOperations.getIamPolicy",
      "compute.regionOperations.list",
      "compute.regionSecurityPolicies.get",
      "compute.regionSecurityPolicies.list",
      "compute.regionSecurityPolicies.listEffectiveTags",
      "compute.regionSecurityPolicies.listTagBindings",
      "compute.regionSslCertificates.get",
      "compute.regionSslCertificates.list",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionSslPolicies.get",
      "compute.regionSslPolicies.list",
      "compute.regionSslPolicies.listAvailableFeatures",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionTargetTcpProxies.get",
      "compute.regionTargetTcpProxies.list",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.list",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.regionUrlMaps.validate",
      "compute.regions.get",
      "compute.regions.list",
      "compute.reservations.get",
      "compute.reservations.list",
      "compute.resourcePolicies.get",
      "compute.resourcePolicies.getIamPolicy",
      "compute.resourcePolicies.list",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routes.get",
      "compute.routes.list",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.securityPolicies.get",
      "compute.securityPolicies.getIamPolicy",
      "compute.securityPolicies.list",
      "compute.securityPolicies.listEffectiveTags",
      "compute.securityPolicies.listTagBindings",
      "compute.serviceAttachments.get",
      "compute.serviceAttachments.getIamPolicy",
      "compute.serviceAttachments.list",
      "compute.snapshots.get",
      "compute.snapshots.getIamPolicy",
      "compute.snapshots.list",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.get",
      "compute.sslPolicies.list",
      "compute.sslPolicies.listAvailableFeatures",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.subnetworks.get",
      "compute.subnetworks.getIamPolicy",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.targetGrpcProxies.get",
      "compute.targetGrpcProxies.list",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetInstances.get",
      "compute.targetInstances.list",
      "compute.targetInstances.listEffectiveTags",
      "compute.targetInstances.listTagBindings",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetSslProxies.listEffectiveTags",
      "compute.targetSslProxies.listTagBindings",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.targetVpnGateways.get",
      "compute.targetVpnGateways.list",
      "compute.urlMaps.get",
      "compute.urlMaps.list",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "compute.urlMaps.validate",
      "compute.vpnGateways.get",
      "compute.vpnGateways.list",
      "compute.vpnTunnels.get",
      "compute.vpnTunnels.list",
      "compute.zoneOperations.get",
      "compute.zoneOperations.getIamPolicy",
      "compute.zoneOperations.list",
      "compute.zones.get",
      "compute.zones.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/compute.xpnAdmin",
    "title": "Compute Shared VPC Admin",
    "description": "Can administer shared VPC network (XPN).",
    "includedPermissions": [
      "compute.globalOperations.get",
      "compute.globalOperations.list",
      "compute.organizations.administerXpn",
      "compute.organizations.disableXpnHost",
      "compute.organizations.disableXpnResource",
      "compute.organizations.enableXpnHost",
      "compute.organizations.enableXpnResource",
      "compute.projects.get",
      "compute.subnetworks.getIamPolicy",
      "compute.subnetworks.setIamPolicy",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/confidentialcomputing.workloadUser",
    "title": "Confidential Space Workload User",
    "description": "Grants the ability to generate an attestation token and run a workload in a VM. Intended for service accounts that run on Confidential Space VMs.",
    "includedPermissions": [
      "confidentialcomputing.challenges.create",
      "confidentialcomputing.challenges.verify",
      "confidentialcomputing.locations.get",
      "confidentialcomputing.locations.list",
      "logging.logEntries.create"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/config.admin",
    "title": "Cloud Infrastructure Manager Admin",
    "description": "Full access to Cloud Infrastructure Manager resources.",
    "includedPermissions": [
      "config.deployments.create",
      "config.deployments.delete",
      "config.deployments.get",
      "config.deployments.getIamPolicy",
      "config.deployments.list",
      "config.deployments.setIamPolicy",
      "config.deployments.update",
      "config.locations.get",
      "config.locations.list",
      "config.operations.cancel",
      "config.operations.delete",
      "config.operations.get",
      "config.operations.list",
      "config.resources.get",
      "config.resources.list",
      "config.revisions.get",
      "config.revisions.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/config.agent",
    "title": "Cloud Infrastructure Manager Agent",
    "description": "Required permissions to make Cloud Infrastructure Manager work with the user-specified service account",
    "includedPermissions": [
      "logging.logEntries.create",
      "storage.buckets.create",
      "storage.buckets.delete",
      "storage.buckets.get",
      "storage.buckets.list",
      "storage.buckets.update",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list",
      "storage.objects.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/config.viewer",
    "title": "Cloud Infrastructure Manager Viewer",
    "description": "Read-only access to Cloud Infrastructure Manager resources.",
    "includedPermissions": [
      "config.deployments.get",
      "config.deployments.getIamPolicy",
      "config.deployments.list",
      "config.locations.get",
      "config.locations.list",
      "config.operations.get",
      "config.operations.list",
      "config.resources.get",
      "config.resources.list",
      "config.revisions.get",
      "config.revisions.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/connectors.admin",
    "title": "Connector Admin",
    "description": "Full access to all resources of Connectors Service.",
    "includedPermissions": [
      "connectors.actions.execute",
      "connectors.actions.list",
      "connectors.connections.create",
      "connectors.connections.delete",
      "connectors.connections.executeSqlQuery",
      "connectors.connections.get",
      "connectors.connections.getConnectionSchemaMetadata",
      "connectors.connections.getIamPolicy",
      "connectors.connections.getRuntimeActionSchema",
      "connectors.connections.getRuntimeEntitySchema",
      "connectors.connections.list",
      "connectors.connections.setIamPolicy",
      "connectors.connections.update",
      "connectors.connectors.get",
      "connectors.connectors.list",
      "connectors.endpointAttachments.create",
      "connectors.endpointAttachments.delete",
      "connectors.endpointAttachments.get",
      "connectors.endpointAttachments.getIamPolicy",
      "connectors.endpointAttachments.list",
      "connectors.endpointAttachments.setIamPolicy",
      "connectors.endpointAttachments.update",
      "connectors.entities.create",
      "connectors.entities.delete",
      "connectors.entities.deleteEntitiesWithConditions",
      "connectors.entities.get",
      "connectors.entities.list",
      "connectors.entities.update",
      "connectors.entities.updateEntitiesWithConditions",
      "connectors.entityTypes.list",
      "connectors.eventSubscriptions.create",
      "connectors.eventSubscriptions.delete",
      "connectors.eventSubscriptions.get",
      "connectors.eventSubscriptions.list",
      "connectors.eventSubscriptions.update",
      "connectors.eventtypes.get",
      "connectors.eventtypes.list",
      "connectors.locations.get",
      "connectors.locations.list",
      "connectors.managedZones.create",
      "connectors.managedZones.delete",
      "connectors.managedZones.get",
      "connectors.managedZones.getIamPolicy",
      "connectors.managedZones.list",
      "connectors.managedZones.setIamPolicy",
      "connectors.managedZones.update",
      "connectors.operations.cancel",
      "connectors.operations.delete",
      "connectors.operations.get",
      "connectors.operations.list",
      "connectors.providers.get",
      "connectors.providers.list",
      "connectors.runtimeconfig.get",
      "connectors.schemaMetadata.refresh",
      "connectors.settings.get",
      "connectors.settings.update",
      "connectors.versions.get",
      "connectors.versions.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "secretmanager.secrets.getIamPolicy"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/connectors.endpointAttachmentAdmin",
    "title": "Connectors Endpoint Attachment Admin",
    "description": "Endpoint Attachment is a regional resource which creates PSC connection endpoint for the given PSC Service Attachment. This role grants Admin access to Connectors Endpoint Attachment resources.",
    "includedPermissions": [
      "connectors.endpointAttachments.create",
      "connectors.endpointAttachments.delete",
      "connectors.endpointAttachments.get",
      "connectors.endpointAttachments.getIamPolicy",
      "connectors.endpointAttachments.list",
      "connectors.endpointAttachments.setIamPolicy",
      "connectors.endpointAttachments.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/connectors.endpointAttachmentViewer",
    "title": "Connectors Endpoint Attachment Viewer",
    "description": "Endpoint Attachment is a regional resource which creates PSC connection endpoint for the given PSC Service Attachment. This role grants Read-only access to Connectors Endpoint Attachment resources",
    "includedPermissions": [
      "connectors.endpointAttachments.get",
      "connectors.endpointAttachments.getIamPolicy",
      "connectors.endpointAttachments.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/connectors.eventSubscriptionAdmin",
    "title": "Connectors Event Subscriptions Admin",
    "description": "Event Subscription is a regional resource which creates subscriptions on events for a given connection within the given target project. This role grants Admin access to Connectors Subscription resources",
    "includedPermissions": [
      "connectors.eventSubscriptions.create",
      "connectors.eventSubscriptions.delete",
      "connectors.eventSubscriptions.get",
      "connectors.eventSubscriptions.list",
      "connectors.eventSubscriptions.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/connectors.eventSubscriptionViewer",
    "title": "Connectors Event Subscriptions Viewer",
    "description": "Event Subscription is a regional resource which creates subscriptions on events for a given connection within the given target project. This role grants Read-only access to Event Subscription resources.",
    "includedPermissions": [
      "connectors.eventSubscriptions.get",
      "connectors.eventSubscriptions.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/connectors.invoker",
    "title": "Connector Invoker",
    "description": "Full Access to invoke all operations on Connections.",
    "includedPermissions": [
      "connectors.actions.execute",
      "connectors.actions.list",
      "connectors.connections.executeSqlQuery",
      "connectors.entities.create",
      "connectors.entities.delete",
      "connectors.entities.deleteEntitiesWithConditions",
      "connectors.entities.get",
      "connectors.entities.list",
      "connectors.entities.update",
      "connectors.entities.updateEntitiesWithConditions",
      "connectors.entityTypes.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/connectors.managedZoneAdmin",
    "title": "Connectors Managed Zone Admin",
    "description": "Managed Zone is a global resource which creates Cloud DNS Peering Zone with the given target project. This role grants Admin access to Connectors Managed Zone resources",
    "includedPermissions": [
      "connectors.managedZones.create",
      "connectors.managedZones.delete",
      "connectors.managedZones.get",
      "connectors.managedZones.getIamPolicy",
      "connectors.managedZones.list",
      "connectors.managedZones.setIamPolicy",
      "connectors.managedZones.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/connectors.managedZoneViewer",
    "title": "Connectors Managed Zone Viewer",
    "description": "Managed Zone is a global resource which creates Cloud DNS Peering Zone with the given target project. This role grants Read-only access to Connectors Managed Zone resources.",
    "includedPermissions": [
      "connectors.managedZones.get",
      "connectors.managedZones.getIamPolicy",
      "connectors.managedZones.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/connectors.serviceAgent",
    "title": "Connectors Platform Service Agent",
    "description": "Grants Connectors Platform service account to manage customer resources",
    "includedPermissions": [
      "connectors.connections.get",
      "connectors.connections.getConnectionSchemaMetadata",
      "connectors.connections.list",
      "connectors.connectors.get",
      "connectors.connectors.list",
      "connectors.endpointAttachments.get",
      "connectors.endpointAttachments.list",
      "connectors.eventSubscriptions.get",
      "connectors.eventSubscriptions.list",
      "connectors.eventtypes.get",
      "connectors.eventtypes.list",
      "connectors.locations.get",
      "connectors.locations.list",
      "connectors.managedZones.get",
      "connectors.managedZones.list",
      "connectors.providers.get",
      "connectors.providers.list",
      "connectors.runtimeconfig.get",
      "iam.serviceAccounts.getAccessToken",
      "iam.serviceAccounts.getOpenIdToken",
      "iam.serviceAccounts.implicitDelegation",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.timeSeries.create"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/connectors.viewer",
    "title": "Connectors Viewer",
    "description": "Read-only access to Connectors all resources.",
    "includedPermissions": [
      "connectors.connections.get",
      "connectors.connections.getConnectionSchemaMetadata",
      "connectors.connections.getIamPolicy",
      "connectors.connections.getRuntimeActionSchema",
      "connectors.connections.getRuntimeEntitySchema",
      "connectors.connections.list",
      "connectors.connectors.get",
      "connectors.connectors.list",
      "connectors.endpointAttachments.get",
      "connectors.endpointAttachments.getIamPolicy",
      "connectors.endpointAttachments.list",
      "connectors.eventSubscriptions.get",
      "connectors.eventSubscriptions.list",
      "connectors.eventtypes.get",
      "connectors.eventtypes.list",
      "connectors.locations.get",
      "connectors.locations.list",
      "connectors.managedZones.get",
      "connectors.managedZones.getIamPolicy",
      "connectors.managedZones.list",
      "connectors.operations.get",
      "connectors.operations.list",
      "connectors.providers.get",
      "connectors.providers.list",
      "connectors.runtimeconfig.get",
      "connectors.settings.get",
      "connectors.versions.get",
      "connectors.versions.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/consumerprocurement.entitlementManager",
    "title": "Consumer Procurement Entitlement Manager",
    "description": "Allows managing entitlements and enabling, disabling, and inspecting service states for a consumer project",
    "includedPermissions": [
      "consumerprocurement.consents.check",
      "consumerprocurement.consents.grant",
      "consumerprocurement.consents.list",
      "consumerprocurement.consents.revoke",
      "consumerprocurement.entitlements.get",
      "consumerprocurement.entitlements.list",
      "consumerprocurement.freeTrials.create",
      "consumerprocurement.freeTrials.get",
      "consumerprocurement.freeTrials.list",
      "orgpolicy.policy.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.operations.get",
      "serviceusage.services.disable",
      "serviceusage.services.enable",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/consumerprocurement.entitlementViewer",
    "title": "Consumer Procurement Entitlement Viewer",
    "description": "Allows inspecting entitlements and service states for a consumer project",
    "includedPermissions": [
      "consumerprocurement.consents.check",
      "consumerprocurement.consents.list",
      "consumerprocurement.entitlements.get",
      "consumerprocurement.entitlements.list",
      "consumerprocurement.freeTrials.get",
      "consumerprocurement.freeTrials.list",
      "orgpolicy.policy.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/consumerprocurement.eventsViewer",
    "title": "Consumer Procurement Events Viewer",
    "description": "Allows viewing key events for an offer",
    "includedPermissions": [
      "consumerprocurement.events.get",
      "consumerprocurement.events.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/consumerprocurement.orderAdmin",
    "title": "Consumer Procurement Order Administrator",
    "description": "Allows managing purchases",
    "includedPermissions": [
      "billing.accounts.get",
      "billing.accounts.getIamPolicy",
      "billing.accounts.list",
      "billing.accounts.redeemPromotion",
      "billing.credits.list",
      "billing.resourceAssociations.create",
      "commerceoffercatalog.agreements.get",
      "commerceoffercatalog.agreements.list",
      "commerceoffercatalog.documents.get",
      "commerceoffercatalog.documents.list",
      "commerceoffercatalog.offers.get",
      "consumerprocurement.accounts.create",
      "consumerprocurement.accounts.delete",
      "consumerprocurement.accounts.get",
      "consumerprocurement.accounts.list",
      "consumerprocurement.consents.check",
      "consumerprocurement.consents.grant",
      "consumerprocurement.consents.list",
      "consumerprocurement.consents.revoke",
      "consumerprocurement.events.get",
      "consumerprocurement.events.list",
      "consumerprocurement.orderAttributions.get",
      "consumerprocurement.orderAttributions.list",
      "consumerprocurement.orderAttributions.update",
      "consumerprocurement.orders.cancel",
      "consumerprocurement.orders.get",
      "consumerprocurement.orders.list",
      "consumerprocurement.orders.modify",
      "consumerprocurement.orders.place"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/consumerprocurement.orderViewer",
    "title": "Consumer Procurement Order Viewer",
    "description": "Allows inspecting purchases",
    "includedPermissions": [
      "billing.accounts.get",
      "billing.accounts.getIamPolicy",
      "billing.accounts.list",
      "billing.credits.list",
      "commerceoffercatalog.agreements.get",
      "commerceoffercatalog.agreements.list",
      "commerceoffercatalog.documents.get",
      "commerceoffercatalog.documents.list",
      "commerceoffercatalog.offers.get",
      "consumerprocurement.accounts.get",
      "consumerprocurement.accounts.list",
      "consumerprocurement.consents.check",
      "consumerprocurement.consents.list",
      "consumerprocurement.orderAttributions.get",
      "consumerprocurement.orderAttributions.list",
      "consumerprocurement.orders.get",
      "consumerprocurement.orders.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/consumerprocurement.procurementAdmin",
    "title": "Consumer Procurement Administrator",
    "description": "Allows managing purchases, consents at both billing account and project level.",
    "includedPermissions": [
      "billing.accounts.get",
      "billing.accounts.getIamPolicy",
      "billing.accounts.list",
      "billing.accounts.redeemPromotion",
      "billing.credits.list",
      "billing.resourceAssociations.create",
      "commerceoffercatalog.agreements.get",
      "commerceoffercatalog.agreements.list",
      "commerceoffercatalog.documents.get",
      "commerceoffercatalog.documents.list",
      "commerceoffercatalog.offers.get",
      "consumerprocurement.accounts.create",
      "consumerprocurement.accounts.delete",
      "consumerprocurement.accounts.get",
      "consumerprocurement.accounts.list",
      "consumerprocurement.consents.allowProjectGrant",
      "consumerprocurement.consents.check",
      "consumerprocurement.consents.grant",
      "consumerprocurement.consents.list",
      "consumerprocurement.consents.revoke",
      "consumerprocurement.entitlements.get",
      "consumerprocurement.entitlements.list",
      "consumerprocurement.events.get",
      "consumerprocurement.events.list",
      "consumerprocurement.freeTrials.create",
      "consumerprocurement.freeTrials.get",
      "consumerprocurement.freeTrials.list",
      "consumerprocurement.orderAttributions.get",
      "consumerprocurement.orderAttributions.list",
      "consumerprocurement.orderAttributions.update",
      "consumerprocurement.orders.cancel",
      "consumerprocurement.orders.get",
      "consumerprocurement.orders.list",
      "consumerprocurement.orders.modify",
      "consumerprocurement.orders.place",
      "orgpolicy.policy.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.operations.get",
      "serviceusage.services.disable",
      "serviceusage.services.enable",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/consumerprocurement.procurementViewer",
    "title": "Consumer Procurement Viewer",
    "description": "Allows inspecting purchases, consents and entitlements and service states for a consumer project.",
    "includedPermissions": [
      "billing.accounts.get",
      "billing.accounts.getIamPolicy",
      "billing.accounts.list",
      "billing.credits.list",
      "commerceoffercatalog.agreements.get",
      "commerceoffercatalog.agreements.list",
      "commerceoffercatalog.documents.get",
      "commerceoffercatalog.documents.list",
      "commerceoffercatalog.offers.get",
      "consumerprocurement.accounts.get",
      "consumerprocurement.accounts.list",
      "consumerprocurement.consents.check",
      "consumerprocurement.consents.list",
      "consumerprocurement.entitlements.get",
      "consumerprocurement.entitlements.list",
      "consumerprocurement.freeTrials.get",
      "consumerprocurement.freeTrials.list",
      "consumerprocurement.orderAttributions.get",
      "consumerprocurement.orderAttributions.list",
      "consumerprocurement.orders.get",
      "consumerprocurement.orders.list",
      "orgpolicy.policy.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/contactcenteraiplatform.admin",
    "title": "Contact Center AI Platform Admin",
    "description": "Full access to Contact Center AI Platform resources.",
    "includedPermissions": [
      "contactcenteraiplatform.contactCenters.create",
      "contactcenteraiplatform.contactCenters.delete",
      "contactcenteraiplatform.contactCenters.get",
      "contactcenteraiplatform.contactCenters.list",
      "contactcenteraiplatform.contactCenters.program",
      "contactcenteraiplatform.contactCenters.queryQuota",
      "contactcenteraiplatform.contactCenters.update",
      "contactcenteraiplatform.locations.get",
      "contactcenteraiplatform.locations.list",
      "contactcenteraiplatform.operations.cancel",
      "contactcenteraiplatform.operations.delete",
      "contactcenteraiplatform.operations.get",
      "contactcenteraiplatform.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/contactcenteraiplatform.viewer",
    "title": "Contact Center AI Platform Viewer",
    "description": "Readonly access to Contact Center AI Platform resources.",
    "includedPermissions": [
      "contactcenteraiplatform.contactCenters.get",
      "contactcenteraiplatform.contactCenters.list",
      "contactcenteraiplatform.locations.get",
      "contactcenteraiplatform.locations.list",
      "contactcenteraiplatform.operations.get",
      "contactcenteraiplatform.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/contactcenterinsights.editor",
    "title": "Contact Center AI Insights editor",
    "description": "Grants read and write access to all Contact Center AI Insights resources.",
    "includedPermissions": [
      "contactcenterinsights.analyses.create",
      "contactcenterinsights.analyses.delete",
      "contactcenterinsights.analyses.get",
      "contactcenterinsights.analyses.list",
      "contactcenterinsights.conversations.create",
      "contactcenterinsights.conversations.delete",
      "contactcenterinsights.conversations.export",
      "contactcenterinsights.conversations.get",
      "contactcenterinsights.conversations.list",
      "contactcenterinsights.conversations.update",
      "contactcenterinsights.conversations.upload",
      "contactcenterinsights.issueModels.create",
      "contactcenterinsights.issueModels.delete",
      "contactcenterinsights.issueModels.deploy",
      "contactcenterinsights.issueModels.export",
      "contactcenterinsights.issueModels.get",
      "contactcenterinsights.issueModels.list",
      "contactcenterinsights.issueModels.undeploy",
      "contactcenterinsights.issueModels.update",
      "contactcenterinsights.issues.create",
      "contactcenterinsights.issues.delete",
      "contactcenterinsights.issues.get",
      "contactcenterinsights.issues.list",
      "contactcenterinsights.issues.update",
      "contactcenterinsights.operations.get",
      "contactcenterinsights.operations.list",
      "contactcenterinsights.phraseMatchers.create",
      "contactcenterinsights.phraseMatchers.delete",
      "contactcenterinsights.phraseMatchers.get",
      "contactcenterinsights.phraseMatchers.list",
      "contactcenterinsights.phraseMatchers.update",
      "contactcenterinsights.settings.get",
      "contactcenterinsights.settings.update",
      "contactcenterinsights.views.create",
      "contactcenterinsights.views.delete",
      "contactcenterinsights.views.get",
      "contactcenterinsights.views.list",
      "contactcenterinsights.views.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/contactcenterinsights.serviceAgent",
    "title": "Contact Center AI Insights Service Agent",
    "description": "Allows Contact Center AI to read and write APIs including BigQuery, Dialogflow, and Storage.",
    "includedPermissions": [
      "bigquery.datasets.create",
      "bigquery.datasets.get",
      "bigquery.jobs.create",
      "bigquery.jobs.get",
      "bigquery.tables.create",
      "bigquery.tables.get",
      "bigquery.tables.update",
      "bigquery.tables.updateData",
      "datalabeling.dataitems.get",
      "datalabeling.dataitems.list",
      "datalabeling.datasets.create",
      "datalabeling.datasets.delete",
      "datalabeling.datasets.export",
      "datalabeling.datasets.get",
      "datalabeling.datasets.import",
      "datalabeling.operations.get",
      "datalabeling.operations.list",
      "dialogflow.conversationDatasets.create",
      "dialogflow.conversationDatasets.delete",
      "dialogflow.conversationDatasets.get",
      "dialogflow.conversationDatasets.import",
      "dialogflow.conversationDatasets.list",
      "dialogflow.conversationModels.create",
      "dialogflow.conversationModels.delete",
      "dialogflow.conversationModels.deploy",
      "dialogflow.conversationModels.get",
      "dialogflow.conversationModels.list",
      "dialogflow.conversationModels.undeploy",
      "dialogflow.conversationProfiles.get",
      "dialogflow.documents.create",
      "dialogflow.documents.delete",
      "dialogflow.documents.get",
      "dialogflow.documents.list",
      "dialogflow.operations.get",
      "dialogflow.participants.suggest",
      "dialogflow.sessions.detectIntent",
      "dlp.deidentifyTemplates.get",
      "dlp.deidentifyTemplates.list",
      "dlp.inspectTemplates.get",
      "dlp.inspectTemplates.list",
      "dlp.kms.encrypt",
      "dlp.locations.get",
      "dlp.locations.list",
      "pubsub.topics.get",
      "pubsub.topics.publish",
      "serviceusage.services.use",
      "speech.customClasses.get",
      "speech.operations.get",
      "speech.phraseSets.get",
      "speech.recognizers.create",
      "speech.recognizers.get",
      "speech.recognizers.recognize",
      "speech.recognizers.update",
      "storage.objects.get",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/contactcenterinsights.viewer",
    "title": "Contact Center AI Insights viewer",
    "description": "Grants read access to all Contact Center AI Insights resources.",
    "includedPermissions": [
      "contactcenterinsights.analyses.get",
      "contactcenterinsights.analyses.list",
      "contactcenterinsights.conversations.get",
      "contactcenterinsights.conversations.list",
      "contactcenterinsights.issueModels.get",
      "contactcenterinsights.issueModels.list",
      "contactcenterinsights.issues.get",
      "contactcenterinsights.issues.list",
      "contactcenterinsights.operations.get",
      "contactcenterinsights.operations.list",
      "contactcenterinsights.phraseMatchers.get",
      "contactcenterinsights.phraseMatchers.list",
      "contactcenterinsights.settings.get",
      "contactcenterinsights.views.get",
      "contactcenterinsights.views.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/container.admin",
    "title": "Kubernetes Engine Admin",
    "description": "Full management of Kubernetes Clusters and their Kubernetes API objects.",
    "includedPermissions": [
      "container.apiServices.create",
      "container.apiServices.delete",
      "container.apiServices.get",
      "container.apiServices.getStatus",
      "container.apiServices.list",
      "container.apiServices.update",
      "container.apiServices.updateStatus",
      "container.auditSinks.create",
      "container.auditSinks.delete",
      "container.auditSinks.get",
      "container.auditSinks.list",
      "container.auditSinks.update",
      "container.backendConfigs.create",
      "container.backendConfigs.delete",
      "container.backendConfigs.get",
      "container.backendConfigs.list",
      "container.backendConfigs.update",
      "container.bindings.create",
      "container.bindings.delete",
      "container.bindings.get",
      "container.bindings.list",
      "container.bindings.update",
      "container.certificateSigningRequests.approve",
      "container.certificateSigningRequests.create",
      "container.certificateSigningRequests.delete",
      "container.certificateSigningRequests.get",
      "container.certificateSigningRequests.getStatus",
      "container.certificateSigningRequests.list",
      "container.certificateSigningRequests.update",
      "container.certificateSigningRequests.updateStatus",
      "container.clusterRoleBindings.create",
      "container.clusterRoleBindings.delete",
      "container.clusterRoleBindings.get",
      "container.clusterRoleBindings.list",
      "container.clusterRoleBindings.update",
      "container.clusterRoles.bind",
      "container.clusterRoles.create",
      "container.clusterRoles.delete",
      "container.clusterRoles.escalate",
      "container.clusterRoles.get",
      "container.clusterRoles.list",
      "container.clusterRoles.update",
      "container.clusters.create",
      "container.clusters.createTagBinding",
      "container.clusters.delete",
      "container.clusters.deleteTagBinding",
      "container.clusters.get",
      "container.clusters.getCredentials",
      "container.clusters.impersonate",
      "container.clusters.list",
      "container.clusters.listEffectiveTags",
      "container.clusters.listTagBindings",
      "container.clusters.update",
      "container.componentStatuses.get",
      "container.componentStatuses.list",
      "container.configMaps.create",
      "container.configMaps.delete",
      "container.configMaps.get",
      "container.configMaps.list",
      "container.configMaps.update",
      "container.controllerRevisions.create",
      "container.controllerRevisions.delete",
      "container.controllerRevisions.get",
      "container.controllerRevisions.list",
      "container.controllerRevisions.update",
      "container.cronJobs.create",
      "container.cronJobs.delete",
      "container.cronJobs.get",
      "container.cronJobs.getStatus",
      "container.cronJobs.list",
      "container.cronJobs.update",
      "container.cronJobs.updateStatus",
      "container.csiDrivers.create",
      "container.csiDrivers.delete",
      "container.csiDrivers.get",
      "container.csiDrivers.list",
      "container.csiDrivers.update",
      "container.csiNodeInfos.create",
      "container.csiNodeInfos.delete",
      "container.csiNodeInfos.get",
      "container.csiNodeInfos.list",
      "container.csiNodeInfos.update",
      "container.csiNodes.create",
      "container.csiNodes.delete",
      "container.csiNodes.get",
      "container.csiNodes.list",
      "container.csiNodes.update",
      "container.customResourceDefinitions.create",
      "container.customResourceDefinitions.delete",
      "container.customResourceDefinitions.get",
      "container.customResourceDefinitions.getStatus",
      "container.customResourceDefinitions.list",
      "container.customResourceDefinitions.update",
      "container.customResourceDefinitions.updateStatus",
      "container.daemonSets.create",
      "container.daemonSets.delete",
      "container.daemonSets.get",
      "container.daemonSets.getStatus",
      "container.daemonSets.list",
      "container.daemonSets.update",
      "container.daemonSets.updateStatus",
      "container.deployments.create",
      "container.deployments.delete",
      "container.deployments.get",
      "container.deployments.getScale",
      "container.deployments.getStatus",
      "container.deployments.list",
      "container.deployments.rollback",
      "container.deployments.update",
      "container.deployments.updateScale",
      "container.deployments.updateStatus",
      "container.endpointSlices.create",
      "container.endpointSlices.delete",
      "container.endpointSlices.get",
      "container.endpointSlices.list",
      "container.endpointSlices.update",
      "container.endpoints.create",
      "container.endpoints.delete",
      "container.endpoints.get",
      "container.endpoints.list",
      "container.endpoints.update",
      "container.events.create",
      "container.events.delete",
      "container.events.get",
      "container.events.list",
      "container.events.update",
      "container.frontendConfigs.create",
      "container.frontendConfigs.delete",
      "container.frontendConfigs.get",
      "container.frontendConfigs.list",
      "container.frontendConfigs.update",
      "container.horizontalPodAutoscalers.create",
      "container.horizontalPodAutoscalers.delete",
      "container.horizontalPodAutoscalers.get",
      "container.horizontalPodAutoscalers.getStatus",
      "container.horizontalPodAutoscalers.list",
      "container.horizontalPodAutoscalers.update",
      "container.horizontalPodAutoscalers.updateStatus",
      "container.hostServiceAgent.use",
      "container.ingresses.create",
      "container.ingresses.delete",
      "container.ingresses.get",
      "container.ingresses.getStatus",
      "container.ingresses.list",
      "container.ingresses.update",
      "container.ingresses.updateStatus",
      "container.initializerConfigurations.create",
      "container.initializerConfigurations.delete",
      "container.initializerConfigurations.get",
      "container.initializerConfigurations.list",
      "container.initializerConfigurations.update",
      "container.jobs.create",
      "container.jobs.delete",
      "container.jobs.get",
      "container.jobs.getStatus",
      "container.jobs.list",
      "container.jobs.update",
      "container.jobs.updateStatus",
      "container.leases.create",
      "container.leases.delete",
      "container.leases.get",
      "container.leases.list",
      "container.leases.update",
      "container.limitRanges.create",
      "container.limitRanges.delete",
      "container.limitRanges.get",
      "container.limitRanges.list",
      "container.limitRanges.update",
      "container.localSubjectAccessReviews.create",
      "container.localSubjectAccessReviews.list",
      "container.managedCertificates.create",
      "container.managedCertificates.delete",
      "container.managedCertificates.get",
      "container.managedCertificates.list",
      "container.managedCertificates.update",
      "container.mutatingWebhookConfigurations.create",
      "container.mutatingWebhookConfigurations.delete",
      "container.mutatingWebhookConfigurations.get",
      "container.mutatingWebhookConfigurations.list",
      "container.mutatingWebhookConfigurations.update",
      "container.namespaces.create",
      "container.namespaces.delete",
      "container.namespaces.finalize",
      "container.namespaces.get",
      "container.namespaces.getStatus",
      "container.namespaces.list",
      "container.namespaces.update",
      "container.namespaces.updateStatus",
      "container.networkPolicies.create",
      "container.networkPolicies.delete",
      "container.networkPolicies.get",
      "container.networkPolicies.list",
      "container.networkPolicies.update",
      "container.nodes.create",
      "container.nodes.delete",
      "container.nodes.get",
      "container.nodes.getStatus",
      "container.nodes.list",
      "container.nodes.proxy",
      "container.nodes.update",
      "container.nodes.updateStatus",
      "container.operations.get",
      "container.operations.list",
      "container.persistentVolumeClaims.create",
      "container.persistentVolumeClaims.delete",
      "container.persistentVolumeClaims.get",
      "container.persistentVolumeClaims.getStatus",
      "container.persistentVolumeClaims.list",
      "container.persistentVolumeClaims.update",
      "container.persistentVolumeClaims.updateStatus",
      "container.persistentVolumes.create",
      "container.persistentVolumes.delete",
      "container.persistentVolumes.get",
      "container.persistentVolumes.getStatus",
      "container.persistentVolumes.list",
      "container.persistentVolumes.update",
      "container.persistentVolumes.updateStatus",
      "container.petSets.create",
      "container.petSets.delete",
      "container.petSets.get",
      "container.petSets.list",
      "container.petSets.update",
      "container.petSets.updateStatus",
      "container.podDisruptionBudgets.create",
      "container.podDisruptionBudgets.delete",
      "container.podDisruptionBudgets.get",
      "container.podDisruptionBudgets.getStatus",
      "container.podDisruptionBudgets.list",
      "container.podDisruptionBudgets.update",
      "container.podDisruptionBudgets.updateStatus",
      "container.podPresets.create",
      "container.podPresets.delete",
      "container.podPresets.get",
      "container.podPresets.list",
      "container.podPresets.update",
      "container.podSecurityPolicies.create",
      "container.podSecurityPolicies.delete",
      "container.podSecurityPolicies.get",
      "container.podSecurityPolicies.list",
      "container.podSecurityPolicies.update",
      "container.podSecurityPolicies.use",
      "container.podTemplates.create",
      "container.podTemplates.delete",
      "container.podTemplates.get",
      "container.podTemplates.list",
      "container.podTemplates.update",
      "container.pods.attach",
      "container.pods.create",
      "container.pods.delete",
      "container.pods.evict",
      "container.pods.exec",
      "container.pods.get",
      "container.pods.getLogs",
      "container.pods.getStatus",
      "container.pods.initialize",
      "container.pods.list",
      "container.pods.portForward",
      "container.pods.proxy",
      "container.pods.update",
      "container.pods.updateStatus",
      "container.priorityClasses.create",
      "container.priorityClasses.delete",
      "container.priorityClasses.get",
      "container.priorityClasses.list",
      "container.priorityClasses.update",
      "container.replicaSets.create",
      "container.replicaSets.delete",
      "container.replicaSets.get",
      "container.replicaSets.getScale",
      "container.replicaSets.getStatus",
      "container.replicaSets.list",
      "container.replicaSets.update",
      "container.replicaSets.updateScale",
      "container.replicaSets.updateStatus",
      "container.replicationControllers.create",
      "container.replicationControllers.delete",
      "container.replicationControllers.get",
      "container.replicationControllers.getScale",
      "container.replicationControllers.getStatus",
      "container.replicationControllers.list",
      "container.replicationControllers.update",
      "container.replicationControllers.updateScale",
      "container.replicationControllers.updateStatus",
      "container.resourceQuotas.create",
      "container.resourceQuotas.delete",
      "container.resourceQuotas.get",
      "container.resourceQuotas.getStatus",
      "container.resourceQuotas.list",
      "container.resourceQuotas.update",
      "container.resourceQuotas.updateStatus",
      "container.roleBindings.create",
      "container.roleBindings.delete",
      "container.roleBindings.get",
      "container.roleBindings.list",
      "container.roleBindings.update",
      "container.roles.bind",
      "container.roles.create",
      "container.roles.delete",
      "container.roles.escalate",
      "container.roles.get",
      "container.roles.list",
      "container.roles.update",
      "container.runtimeClasses.create",
      "container.runtimeClasses.delete",
      "container.runtimeClasses.get",
      "container.runtimeClasses.list",
      "container.runtimeClasses.update",
      "container.scheduledJobs.create",
      "container.scheduledJobs.delete",
      "container.scheduledJobs.get",
      "container.scheduledJobs.list",
      "container.scheduledJobs.update",
      "container.scheduledJobs.updateStatus",
      "container.secrets.create",
      "container.secrets.delete",
      "container.secrets.get",
      "container.secrets.list",
      "container.secrets.update",
      "container.selfSubjectAccessReviews.create",
      "container.selfSubjectAccessReviews.list",
      "container.selfSubjectRulesReviews.create",
      "container.serviceAccounts.create",
      "container.serviceAccounts.createToken",
      "container.serviceAccounts.delete",
      "container.serviceAccounts.get",
      "container.serviceAccounts.list",
      "container.serviceAccounts.update",
      "container.services.create",
      "container.services.delete",
      "container.services.get",
      "container.services.getStatus",
      "container.services.list",
      "container.services.proxy",
      "container.services.update",
      "container.services.updateStatus",
      "container.statefulSets.create",
      "container.statefulSets.delete",
      "container.statefulSets.get",
      "container.statefulSets.getScale",
      "container.statefulSets.getStatus",
      "container.statefulSets.list",
      "container.statefulSets.update",
      "container.statefulSets.updateScale",
      "container.statefulSets.updateStatus",
      "container.storageClasses.create",
      "container.storageClasses.delete",
      "container.storageClasses.get",
      "container.storageClasses.list",
      "container.storageClasses.update",
      "container.storageStates.create",
      "container.storageStates.delete",
      "container.storageStates.get",
      "container.storageStates.getStatus",
      "container.storageStates.list",
      "container.storageStates.update",
      "container.storageStates.updateStatus",
      "container.storageVersionMigrations.create",
      "container.storageVersionMigrations.delete",
      "container.storageVersionMigrations.get",
      "container.storageVersionMigrations.getStatus",
      "container.storageVersionMigrations.list",
      "container.storageVersionMigrations.update",
      "container.storageVersionMigrations.updateStatus",
      "container.subjectAccessReviews.create",
      "container.subjectAccessReviews.list",
      "container.thirdPartyObjects.create",
      "container.thirdPartyObjects.delete",
      "container.thirdPartyObjects.get",
      "container.thirdPartyObjects.list",
      "container.thirdPartyObjects.update",
      "container.thirdPartyResources.create",
      "container.thirdPartyResources.delete",
      "container.thirdPartyResources.get",
      "container.thirdPartyResources.list",
      "container.thirdPartyResources.update",
      "container.tokenReviews.create",
      "container.updateInfos.create",
      "container.updateInfos.delete",
      "container.updateInfos.get",
      "container.updateInfos.list",
      "container.updateInfos.update",
      "container.validatingWebhookConfigurations.create",
      "container.validatingWebhookConfigurations.delete",
      "container.validatingWebhookConfigurations.get",
      "container.validatingWebhookConfigurations.list",
      "container.validatingWebhookConfigurations.update",
      "container.volumeAttachments.create",
      "container.volumeAttachments.delete",
      "container.volumeAttachments.get",
      "container.volumeAttachments.getStatus",
      "container.volumeAttachments.list",
      "container.volumeAttachments.update",
      "container.volumeAttachments.updateStatus",
      "container.volumeSnapshotClasses.create",
      "container.volumeSnapshotClasses.delete",
      "container.volumeSnapshotClasses.get",
      "container.volumeSnapshotClasses.list",
      "container.volumeSnapshotClasses.update",
      "container.volumeSnapshotContents.create",
      "container.volumeSnapshotContents.delete",
      "container.volumeSnapshotContents.get",
      "container.volumeSnapshotContents.getStatus",
      "container.volumeSnapshotContents.list",
      "container.volumeSnapshotContents.update",
      "container.volumeSnapshotContents.updateStatus",
      "container.volumeSnapshots.create",
      "container.volumeSnapshots.delete",
      "container.volumeSnapshots.get",
      "container.volumeSnapshots.getStatus",
      "container.volumeSnapshots.list",
      "container.volumeSnapshots.update",
      "container.volumeSnapshots.updateStatus",
      "recommender.containerDiagnosisInsights.get",
      "recommender.containerDiagnosisInsights.list",
      "recommender.containerDiagnosisInsights.update",
      "recommender.containerDiagnosisRecommendations.get",
      "recommender.containerDiagnosisRecommendations.list",
      "recommender.containerDiagnosisRecommendations.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.get",
      "recommender.networkAnalyzerGkeConnectivityInsights.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.update",
      "recommender.networkAnalyzerGkeIpAddressInsights.get",
      "recommender.networkAnalyzerGkeIpAddressInsights.list",
      "recommender.networkAnalyzerGkeIpAddressInsights.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/container.clusterAdmin",
    "title": "Kubernetes Engine Cluster Admin",
    "description": "Management of Kubernetes Clusters.",
    "includedPermissions": [
      "container.clusters.create",
      "container.clusters.delete",
      "container.clusters.get",
      "container.clusters.list",
      "container.clusters.update",
      "container.operations.get",
      "container.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/container.clusterViewer",
    "title": "Kubernetes Engine Cluster Viewer",
    "description": "Get and list access to GKE Clusters.",
    "includedPermissions": [
      "container.clusters.get",
      "container.clusters.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/container.developer",
    "title": "Kubernetes Engine Developer",
    "description": "Full access to Kubernetes API objects inside Kubernetes Clusters.",
    "includedPermissions": [
      "container.apiServices.create",
      "container.apiServices.delete",
      "container.apiServices.get",
      "container.apiServices.getStatus",
      "container.apiServices.list",
      "container.apiServices.update",
      "container.apiServices.updateStatus",
      "container.auditSinks.create",
      "container.auditSinks.delete",
      "container.auditSinks.get",
      "container.auditSinks.list",
      "container.auditSinks.update",
      "container.backendConfigs.create",
      "container.backendConfigs.delete",
      "container.backendConfigs.get",
      "container.backendConfigs.list",
      "container.backendConfigs.update",
      "container.bindings.create",
      "container.bindings.delete",
      "container.bindings.get",
      "container.bindings.list",
      "container.bindings.update",
      "container.certificateSigningRequests.create",
      "container.certificateSigningRequests.delete",
      "container.certificateSigningRequests.get",
      "container.certificateSigningRequests.list",
      "container.certificateSigningRequests.update",
      "container.certificateSigningRequests.updateStatus",
      "container.clusterRoleBindings.get",
      "container.clusterRoleBindings.list",
      "container.clusterRoles.get",
      "container.clusterRoles.list",
      "container.clusters.get",
      "container.clusters.list",
      "container.componentStatuses.get",
      "container.componentStatuses.list",
      "container.configMaps.create",
      "container.configMaps.delete",
      "container.configMaps.get",
      "container.configMaps.list",
      "container.configMaps.update",
      "container.controllerRevisions.get",
      "container.controllerRevisions.list",
      "container.cronJobs.create",
      "container.cronJobs.delete",
      "container.cronJobs.get",
      "container.cronJobs.getStatus",
      "container.cronJobs.list",
      "container.cronJobs.update",
      "container.cronJobs.updateStatus",
      "container.csiDrivers.create",
      "container.csiDrivers.delete",
      "container.csiDrivers.get",
      "container.csiDrivers.list",
      "container.csiDrivers.update",
      "container.csiNodeInfos.create",
      "container.csiNodeInfos.delete",
      "container.csiNodeInfos.get",
      "container.csiNodeInfos.list",
      "container.csiNodeInfos.update",
      "container.csiNodes.create",
      "container.csiNodes.delete",
      "container.csiNodes.get",
      "container.csiNodes.list",
      "container.csiNodes.update",
      "container.customResourceDefinitions.create",
      "container.customResourceDefinitions.delete",
      "container.customResourceDefinitions.get",
      "container.customResourceDefinitions.getStatus",
      "container.customResourceDefinitions.list",
      "container.customResourceDefinitions.update",
      "container.customResourceDefinitions.updateStatus",
      "container.daemonSets.create",
      "container.daemonSets.delete",
      "container.daemonSets.get",
      "container.daemonSets.getStatus",
      "container.daemonSets.list",
      "container.daemonSets.update",
      "container.daemonSets.updateStatus",
      "container.deployments.create",
      "container.deployments.delete",
      "container.deployments.get",
      "container.deployments.getScale",
      "container.deployments.getStatus",
      "container.deployments.list",
      "container.deployments.rollback",
      "container.deployments.update",
      "container.deployments.updateScale",
      "container.deployments.updateStatus",
      "container.endpointSlices.create",
      "container.endpointSlices.delete",
      "container.endpointSlices.get",
      "container.endpointSlices.list",
      "container.endpointSlices.update",
      "container.endpoints.create",
      "container.endpoints.delete",
      "container.endpoints.get",
      "container.endpoints.list",
      "container.endpoints.update",
      "container.events.create",
      "container.events.delete",
      "container.events.get",
      "container.events.list",
      "container.events.update",
      "container.frontendConfigs.create",
      "container.frontendConfigs.delete",
      "container.frontendConfigs.get",
      "container.frontendConfigs.list",
      "container.frontendConfigs.update",
      "container.horizontalPodAutoscalers.create",
      "container.horizontalPodAutoscalers.delete",
      "container.horizontalPodAutoscalers.get",
      "container.horizontalPodAutoscalers.getStatus",
      "container.horizontalPodAutoscalers.list",
      "container.horizontalPodAutoscalers.update",
      "container.horizontalPodAutoscalers.updateStatus",
      "container.ingresses.create",
      "container.ingresses.delete",
      "container.ingresses.get",
      "container.ingresses.getStatus",
      "container.ingresses.list",
      "container.ingresses.update",
      "container.ingresses.updateStatus",
      "container.initializerConfigurations.create",
      "container.initializerConfigurations.delete",
      "container.initializerConfigurations.get",
      "container.initializerConfigurations.list",
      "container.initializerConfigurations.update",
      "container.jobs.create",
      "container.jobs.delete",
      "container.jobs.get",
      "container.jobs.getStatus",
      "container.jobs.list",
      "container.jobs.update",
      "container.jobs.updateStatus",
      "container.leases.create",
      "container.leases.delete",
      "container.leases.get",
      "container.leases.list",
      "container.leases.update",
      "container.limitRanges.create",
      "container.limitRanges.delete",
      "container.limitRanges.get",
      "container.limitRanges.list",
      "container.limitRanges.update",
      "container.localSubjectAccessReviews.create",
      "container.localSubjectAccessReviews.list",
      "container.managedCertificates.create",
      "container.managedCertificates.delete",
      "container.managedCertificates.get",
      "container.managedCertificates.list",
      "container.managedCertificates.update",
      "container.mutatingWebhookConfigurations.get",
      "container.mutatingWebhookConfigurations.list",
      "container.namespaces.create",
      "container.namespaces.delete",
      "container.namespaces.finalize",
      "container.namespaces.get",
      "container.namespaces.getStatus",
      "container.namespaces.list",
      "container.namespaces.update",
      "container.namespaces.updateStatus",
      "container.networkPolicies.create",
      "container.networkPolicies.delete",
      "container.networkPolicies.get",
      "container.networkPolicies.list",
      "container.networkPolicies.update",
      "container.nodes.create",
      "container.nodes.delete",
      "container.nodes.get",
      "container.nodes.getStatus",
      "container.nodes.list",
      "container.nodes.proxy",
      "container.nodes.update",
      "container.nodes.updateStatus",
      "container.persistentVolumeClaims.create",
      "container.persistentVolumeClaims.delete",
      "container.persistentVolumeClaims.get",
      "container.persistentVolumeClaims.getStatus",
      "container.persistentVolumeClaims.list",
      "container.persistentVolumeClaims.update",
      "container.persistentVolumeClaims.updateStatus",
      "container.persistentVolumes.create",
      "container.persistentVolumes.delete",
      "container.persistentVolumes.get",
      "container.persistentVolumes.getStatus",
      "container.persistentVolumes.list",
      "container.persistentVolumes.update",
      "container.persistentVolumes.updateStatus",
      "container.petSets.create",
      "container.petSets.delete",
      "container.petSets.get",
      "container.petSets.list",
      "container.petSets.update",
      "container.petSets.updateStatus",
      "container.podDisruptionBudgets.create",
      "container.podDisruptionBudgets.delete",
      "container.podDisruptionBudgets.get",
      "container.podDisruptionBudgets.getStatus",
      "container.podDisruptionBudgets.list",
      "container.podDisruptionBudgets.update",
      "container.podDisruptionBudgets.updateStatus",
      "container.podPresets.create",
      "container.podPresets.delete",
      "container.podPresets.get",
      "container.podPresets.list",
      "container.podPresets.update",
      "container.podSecurityPolicies.get",
      "container.podSecurityPolicies.list",
      "container.podTemplates.create",
      "container.podTemplates.delete",
      "container.podTemplates.get",
      "container.podTemplates.list",
      "container.podTemplates.update",
      "container.pods.attach",
      "container.pods.create",
      "container.pods.delete",
      "container.pods.evict",
      "container.pods.exec",
      "container.pods.get",
      "container.pods.getLogs",
      "container.pods.getStatus",
      "container.pods.initialize",
      "container.pods.list",
      "container.pods.portForward",
      "container.pods.proxy",
      "container.pods.update",
      "container.pods.updateStatus",
      "container.priorityClasses.create",
      "container.priorityClasses.delete",
      "container.priorityClasses.get",
      "container.priorityClasses.list",
      "container.priorityClasses.update",
      "container.replicaSets.create",
      "container.replicaSets.delete",
      "container.replicaSets.get",
      "container.replicaSets.getScale",
      "container.replicaSets.getStatus",
      "container.replicaSets.list",
      "container.replicaSets.update",
      "container.replicaSets.updateScale",
      "container.replicaSets.updateStatus",
      "container.replicationControllers.create",
      "container.replicationControllers.delete",
      "container.replicationControllers.get",
      "container.replicationControllers.getScale",
      "container.replicationControllers.getStatus",
      "container.replicationControllers.list",
      "container.replicationControllers.update",
      "container.replicationControllers.updateScale",
      "container.replicationControllers.updateStatus",
      "container.resourceQuotas.create",
      "container.resourceQuotas.delete",
      "container.resourceQuotas.get",
      "container.resourceQuotas.getStatus",
      "container.resourceQuotas.list",
      "container.resourceQuotas.update",
      "container.resourceQuotas.updateStatus",
      "container.roleBindings.get",
      "container.roleBindings.list",
      "container.roles.get",
      "container.roles.list",
      "container.runtimeClasses.create",
      "container.runtimeClasses.delete",
      "container.runtimeClasses.get",
      "container.runtimeClasses.list",
      "container.runtimeClasses.update",
      "container.scheduledJobs.create",
      "container.scheduledJobs.delete",
      "container.scheduledJobs.get",
      "container.scheduledJobs.list",
      "container.scheduledJobs.update",
      "container.scheduledJobs.updateStatus",
      "container.secrets.create",
      "container.secrets.delete",
      "container.secrets.get",
      "container.secrets.list",
      "container.secrets.update",
      "container.selfSubjectAccessReviews.create",
      "container.selfSubjectAccessReviews.list",
      "container.selfSubjectRulesReviews.create",
      "container.serviceAccounts.create",
      "container.serviceAccounts.createToken",
      "container.serviceAccounts.delete",
      "container.serviceAccounts.get",
      "container.serviceAccounts.list",
      "container.serviceAccounts.update",
      "container.services.create",
      "container.services.delete",
      "container.services.get",
      "container.services.getStatus",
      "container.services.list",
      "container.services.proxy",
      "container.services.update",
      "container.services.updateStatus",
      "container.statefulSets.create",
      "container.statefulSets.delete",
      "container.statefulSets.get",
      "container.statefulSets.getScale",
      "container.statefulSets.getStatus",
      "container.statefulSets.list",
      "container.statefulSets.update",
      "container.statefulSets.updateScale",
      "container.statefulSets.updateStatus",
      "container.storageClasses.create",
      "container.storageClasses.delete",
      "container.storageClasses.get",
      "container.storageClasses.list",
      "container.storageClasses.update",
      "container.storageStates.create",
      "container.storageStates.delete",
      "container.storageStates.get",
      "container.storageStates.getStatus",
      "container.storageStates.list",
      "container.storageStates.update",
      "container.storageStates.updateStatus",
      "container.storageVersionMigrations.create",
      "container.storageVersionMigrations.delete",
      "container.storageVersionMigrations.get",
      "container.storageVersionMigrations.getStatus",
      "container.storageVersionMigrations.list",
      "container.storageVersionMigrations.update",
      "container.storageVersionMigrations.updateStatus",
      "container.subjectAccessReviews.create",
      "container.subjectAccessReviews.list",
      "container.thirdPartyObjects.create",
      "container.thirdPartyObjects.delete",
      "container.thirdPartyObjects.get",
      "container.thirdPartyObjects.list",
      "container.thirdPartyObjects.update",
      "container.thirdPartyResources.create",
      "container.thirdPartyResources.delete",
      "container.thirdPartyResources.get",
      "container.thirdPartyResources.list",
      "container.thirdPartyResources.update",
      "container.tokenReviews.create",
      "container.updateInfos.create",
      "container.updateInfos.delete",
      "container.updateInfos.get",
      "container.updateInfos.list",
      "container.updateInfos.update",
      "container.validatingWebhookConfigurations.get",
      "container.validatingWebhookConfigurations.list",
      "container.volumeAttachments.create",
      "container.volumeAttachments.delete",
      "container.volumeAttachments.get",
      "container.volumeAttachments.getStatus",
      "container.volumeAttachments.list",
      "container.volumeAttachments.update",
      "container.volumeAttachments.updateStatus",
      "container.volumeSnapshotClasses.create",
      "container.volumeSnapshotClasses.delete",
      "container.volumeSnapshotClasses.get",
      "container.volumeSnapshotClasses.list",
      "container.volumeSnapshotClasses.update",
      "container.volumeSnapshotContents.create",
      "container.volumeSnapshotContents.delete",
      "container.volumeSnapshotContents.get",
      "container.volumeSnapshotContents.getStatus",
      "container.volumeSnapshotContents.list",
      "container.volumeSnapshotContents.update",
      "container.volumeSnapshotContents.updateStatus",
      "container.volumeSnapshots.create",
      "container.volumeSnapshots.delete",
      "container.volumeSnapshots.get",
      "container.volumeSnapshots.getStatus",
      "container.volumeSnapshots.list",
      "container.volumeSnapshots.update",
      "container.volumeSnapshots.updateStatus",
      "recommender.containerDiagnosisInsights.get",
      "recommender.containerDiagnosisInsights.list",
      "recommender.containerDiagnosisInsights.update",
      "recommender.containerDiagnosisRecommendations.get",
      "recommender.containerDiagnosisRecommendations.list",
      "recommender.containerDiagnosisRecommendations.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.get",
      "recommender.networkAnalyzerGkeConnectivityInsights.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.update",
      "recommender.networkAnalyzerGkeIpAddressInsights.get",
      "recommender.networkAnalyzerGkeIpAddressInsights.list",
      "recommender.networkAnalyzerGkeIpAddressInsights.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/container.hostServiceAgentUser",
    "title": "Kubernetes Engine Host Service Agent User",
    "description": "Allows the Kubernetes Engine service account in the host project to configure shared network resources for cluster management. Also gives access to inspect the firewall rules in the host project, and configure Cloud DNS resources.",
    "includedPermissions": [
      "compute.firewalls.get",
      "container.hostServiceAgent.use",
      "dns.networks.bindDNSResponsePolicy",
      "dns.networks.bindPrivateDNSPolicy",
      "dns.networks.bindPrivateDNSZone",
      "dns.responsePolicies.create",
      "dns.responsePolicies.delete",
      "dns.responsePolicies.get",
      "dns.responsePolicies.list",
      "dns.responsePolicies.update",
      "dns.responsePolicyRules.create",
      "dns.responsePolicyRules.delete",
      "dns.responsePolicyRules.get",
      "dns.responsePolicyRules.list",
      "dns.responsePolicyRules.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/container.nodeServiceAccount",
    "title": "Kubernetes Engine Node Service Account",
    "description": "Least privilege role to use as the service account for GKE Nodes.",
    "includedPermissions": [
      "autoscaling.sites.writeMetrics",
      "logging.logEntries.create",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.list",
      "monitoring.timeSeries.create",
      "monitoring.timeSeries.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.use",
      "storage.objects.get",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/container.nodeServiceAgent",
    "title": "Kubernetes Engine Node Service Agent",
    "description": "Minimal set of permission required by a GKE node to support standard capabilities such as logging and monitoring export, and image pulls.",
    "includedPermissions": [
      "autoscaling.sites.writeMetrics",
      "logging.logEntries.create",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.list",
      "monitoring.timeSeries.create",
      "monitoring.timeSeries.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.use",
      "storage.objects.get",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/container.serviceAgent",
    "title": "Kubernetes Engine Service Agent",
    "description": "Gives Kubernetes Engine account access to manage cluster resources. Includes access to service accounts.",
    "includedPermissions": [
      "bigquery.datasets.create",
      "bigquery.datasets.get",
      "bigquery.tables.create",
      "bigquery.tables.get",
      "bigquery.tables.update",
      "bigquery.tables.updateData",
      "binaryauthorization.policy.evaluatePolicy",
      "certificatemanager.certmapentries.create",
      "certificatemanager.certmapentries.delete",
      "certificatemanager.certmapentries.get",
      "certificatemanager.certmapentries.getIamPolicy",
      "certificatemanager.certmapentries.list",
      "certificatemanager.certmapentries.update",
      "certificatemanager.certmaps.create",
      "certificatemanager.certmaps.delete",
      "certificatemanager.certmaps.get",
      "certificatemanager.certmaps.getIamPolicy",
      "certificatemanager.certmaps.list",
      "certificatemanager.certmaps.update",
      "certificatemanager.certmaps.use",
      "certificatemanager.certs.create",
      "certificatemanager.certs.delete",
      "certificatemanager.certs.get",
      "certificatemanager.certs.getIamPolicy",
      "certificatemanager.certs.list",
      "certificatemanager.certs.update",
      "certificatemanager.certs.use",
      "certificatemanager.dnsauthorizations.create",
      "certificatemanager.dnsauthorizations.delete",
      "certificatemanager.dnsauthorizations.get",
      "certificatemanager.dnsauthorizations.getIamPolicy",
      "certificatemanager.dnsauthorizations.list",
      "certificatemanager.dnsauthorizations.update",
      "certificatemanager.dnsauthorizations.use",
      "compute.acceleratorTypes.get",
      "compute.acceleratorTypes.list",
      "compute.addresses.create",
      "compute.addresses.createInternal",
      "compute.addresses.delete",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.addresses.setLabels",
      "compute.addresses.use",
      "compute.addresses.useInternal",
      "compute.autoscalers.create",
      "compute.autoscalers.delete",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.autoscalers.update",
      "compute.backendBuckets.addSignedUrlKey",
      "compute.backendBuckets.create",
      "compute.backendBuckets.createTagBinding",
      "compute.backendBuckets.delete",
      "compute.backendBuckets.deleteSignedUrlKey",
      "compute.backendBuckets.deleteTagBinding",
      "compute.backendBuckets.get",
      "compute.backendBuckets.getIamPolicy",
      "compute.backendBuckets.list",
      "compute.backendBuckets.listEffectiveTags",
      "compute.backendBuckets.listTagBindings",
      "compute.backendBuckets.setIamPolicy",
      "compute.backendBuckets.setSecurityPolicy",
      "compute.backendBuckets.update",
      "compute.backendBuckets.use",
      "compute.backendServices.addSignedUrlKey",
      "compute.backendServices.create",
      "compute.backendServices.createTagBinding",
      "compute.backendServices.delete",
      "compute.backendServices.deleteSignedUrlKey",
      "compute.backendServices.deleteTagBinding",
      "compute.backendServices.get",
      "compute.backendServices.getIamPolicy",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.backendServices.setIamPolicy",
      "compute.backendServices.setSecurityPolicy",
      "compute.backendServices.update",
      "compute.backendServices.use",
      "compute.diskTypes.get",
      "compute.diskTypes.list",
      "compute.disks.addResourcePolicies",
      "compute.disks.create",
      "compute.disks.createSnapshot",
      "compute.disks.createTagBinding",
      "compute.disks.delete",
      "compute.disks.deleteTagBinding",
      "compute.disks.get",
      "compute.disks.getIamPolicy",
      "compute.disks.list",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.disks.removeResourcePolicies",
      "compute.disks.resize",
      "compute.disks.setIamPolicy",
      "compute.disks.setLabels",
      "compute.disks.startAsyncReplication",
      "compute.disks.stopAsyncReplication",
      "compute.disks.stopGroupAsyncReplication",
      "compute.disks.update",
      "compute.disks.use",
      "compute.disks.useReadOnly",
      "compute.externalVpnGateways.create",
      "compute.externalVpnGateways.delete",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.list",
      "compute.externalVpnGateways.setLabels",
      "compute.externalVpnGateways.use",
      "compute.firewallPolicies.addAssociation",
      "compute.firewallPolicies.cloneRules",
      "compute.firewallPolicies.copyRules",
      "compute.firewallPolicies.create",
      "compute.firewallPolicies.createTagBinding",
      "compute.firewallPolicies.delete",
      "compute.firewallPolicies.deleteTagBinding",
      "compute.firewallPolicies.get",
      "compute.firewallPolicies.getIamPolicy",
      "compute.firewallPolicies.list",
      "compute.firewallPolicies.listEffectiveTags",
      "compute.firewallPolicies.listTagBindings",
      "compute.firewallPolicies.move",
      "compute.firewallPolicies.removeAssociation",
      "compute.firewallPolicies.setIamPolicy",
      "compute.firewallPolicies.update",
      "compute.firewallPolicies.use",
      "compute.firewalls.create",
      "compute.firewalls.createTagBinding",
      "compute.firewalls.delete",
      "compute.firewalls.deleteTagBinding",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.firewalls.update",
      "compute.forwardingRules.create",
      "compute.forwardingRules.createTagBinding",
      "compute.forwardingRules.delete",
      "compute.forwardingRules.deleteTagBinding",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.forwardingRules.pscCreate",
      "compute.forwardingRules.pscDelete",
      "compute.forwardingRules.pscSetLabels",
      "compute.forwardingRules.pscSetTarget",
      "compute.forwardingRules.pscUpdate",
      "compute.forwardingRules.setLabels",
      "compute.forwardingRules.setTarget",
      "compute.forwardingRules.update",
      "compute.forwardingRules.use",
      "compute.globalAddresses.create",
      "compute.globalAddresses.createInternal",
      "compute.globalAddresses.delete",
      "compute.globalAddresses.deleteInternal",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalAddresses.setLabels",
      "compute.globalAddresses.use",
      "compute.globalForwardingRules.create",
      "compute.globalForwardingRules.createTagBinding",
      "compute.globalForwardingRules.delete",
      "compute.globalForwardingRules.deleteTagBinding",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalForwardingRules.pscCreate",
      "compute.globalForwardingRules.pscDelete",
      "compute.globalForwardingRules.pscGet",
      "compute.globalForwardingRules.pscSetLabels",
      "compute.globalForwardingRules.pscSetTarget",
      "compute.globalForwardingRules.pscUpdate",
      "compute.globalForwardingRules.setLabels",
      "compute.globalForwardingRules.setTarget",
      "compute.globalForwardingRules.update",
      "compute.globalNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.create",
      "compute.globalNetworkEndpointGroups.createTagBinding",
      "compute.globalNetworkEndpointGroups.delete",
      "compute.globalNetworkEndpointGroups.deleteTagBinding",
      "compute.globalNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.get",
      "compute.globalNetworkEndpointGroups.list",
      "compute.globalNetworkEndpointGroups.listEffectiveTags",
      "compute.globalNetworkEndpointGroups.listTagBindings",
      "compute.globalNetworkEndpointGroups.use",
      "compute.globalOperations.get",
      "compute.globalOperations.list",
      "compute.globalPublicDelegatedPrefixes.delete",
      "compute.globalPublicDelegatedPrefixes.get",
      "compute.globalPublicDelegatedPrefixes.list",
      "compute.globalPublicDelegatedPrefixes.update",
      "compute.globalPublicDelegatedPrefixes.updatePolicy",
      "compute.healthChecks.create",
      "compute.healthChecks.createTagBinding",
      "compute.healthChecks.delete",
      "compute.healthChecks.deleteTagBinding",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.healthChecks.update",
      "compute.healthChecks.use",
      "compute.healthChecks.useReadOnly",
      "compute.httpHealthChecks.create",
      "compute.httpHealthChecks.createTagBinding",
      "compute.httpHealthChecks.delete",
      "compute.httpHealthChecks.deleteTagBinding",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpHealthChecks.update",
      "compute.httpHealthChecks.use",
      "compute.httpHealthChecks.useReadOnly",
      "compute.httpsHealthChecks.create",
      "compute.httpsHealthChecks.createTagBinding",
      "compute.httpsHealthChecks.delete",
      "compute.httpsHealthChecks.deleteTagBinding",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.update",
      "compute.httpsHealthChecks.use",
      "compute.httpsHealthChecks.useReadOnly",
      "compute.images.create",
      "compute.images.createTagBinding",
      "compute.images.delete",
      "compute.images.deleteTagBinding",
      "compute.images.deprecate",
      "compute.images.get",
      "compute.images.getFromFamily",
      "compute.images.getIamPolicy",
      "compute.images.list",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.images.setIamPolicy",
      "compute.images.setLabels",
      "compute.images.update",
      "compute.images.useReadOnly",
      "compute.instanceGroupManagers.create",
      "compute.instanceGroupManagers.delete",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroupManagers.update",
      "compute.instanceGroupManagers.use",
      "compute.instanceGroups.create",
      "compute.instanceGroups.delete",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instanceGroups.update",
      "compute.instanceGroups.use",
      "compute.instanceTemplates.create",
      "compute.instanceTemplates.delete",
      "compute.instanceTemplates.get",
      "compute.instanceTemplates.getIamPolicy",
      "compute.instanceTemplates.list",
      "compute.instanceTemplates.setIamPolicy",
      "compute.instanceTemplates.useReadOnly",
      "compute.instances.addAccessConfig",
      "compute.instances.addMaintenancePolicies",
      "compute.instances.addResourcePolicies",
      "compute.instances.attachDisk",
      "compute.instances.create",
      "compute.instances.createTagBinding",
      "compute.instances.delete",
      "compute.instances.deleteAccessConfig",
      "compute.instances.deleteTagBinding",
      "compute.instances.detachDisk",
      "compute.instances.get",
      "compute.instances.getEffectiveFirewalls",
      "compute.instances.getGuestAttributes",
      "compute.instances.getIamPolicy",
      "compute.instances.getScreenshot",
      "compute.instances.getSerialPortOutput",
      "compute.instances.getShieldedInstanceIdentity",
      "compute.instances.getShieldedVmIdentity",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listReferrers",
      "compute.instances.listTagBindings",
      "compute.instances.osAdminLogin",
      "compute.instances.osLogin",
      "compute.instances.removeMaintenancePolicies",
      "compute.instances.removeResourcePolicies",
      "compute.instances.reset",
      "compute.instances.resume",
      "compute.instances.sendDiagnosticInterrupt",
      "compute.instances.setDeletionProtection",
      "compute.instances.setDiskAutoDelete",
      "compute.instances.setIamPolicy",
      "compute.instances.setLabels",
      "compute.instances.setMachineResources",
      "compute.instances.setMachineType",
      "compute.instances.setMetadata",
      "compute.instances.setMinCpuPlatform",
      "compute.instances.setName",
      "compute.instances.setScheduling",
      "compute.instances.setSecurityPolicy",
      "compute.instances.setServiceAccount",
      "compute.instances.setShieldedInstanceIntegrityPolicy",
      "compute.instances.setShieldedVmIntegrityPolicy",
      "compute.instances.setTags",
      "compute.instances.simulateMaintenanceEvent",
      "compute.instances.start",
      "compute.instances.startWithEncryptionKey",
      "compute.instances.stop",
      "compute.instances.suspend",
      "compute.instances.update",
      "compute.instances.updateAccessConfig",
      "compute.instances.updateDisplayDevice",
      "compute.instances.updateNetworkInterface",
      "compute.instances.updateSecurity",
      "compute.instances.updateShieldedInstanceConfig",
      "compute.instances.updateShieldedVmConfig",
      "compute.instances.use",
      "compute.instances.useReadOnly",
      "compute.instantSnapshots.create",
      "compute.instantSnapshots.delete",
      "compute.instantSnapshots.export",
      "compute.instantSnapshots.get",
      "compute.instantSnapshots.getIamPolicy",
      "compute.instantSnapshots.list",
      "compute.instantSnapshots.setIamPolicy",
      "compute.instantSnapshots.setLabels",
      "compute.instantSnapshots.useReadOnly",
      "compute.interconnectAttachments.create",
      "compute.interconnectAttachments.delete",
      "compute.interconnectAttachments.get",
      "compute.interconnectAttachments.list",
      "compute.interconnectAttachments.setLabels",
      "compute.interconnectAttachments.update",
      "compute.interconnectAttachments.use",
      "compute.interconnectLocations.get",
      "compute.interconnectLocations.list",
      "compute.interconnectRemoteLocations.get",
      "compute.interconnectRemoteLocations.list",
      "compute.interconnects.create",
      "compute.interconnects.delete",
      "compute.interconnects.get",
      "compute.interconnects.list",
      "compute.interconnects.setLabels",
      "compute.interconnects.update",
      "compute.interconnects.use",
      "compute.licenseCodes.get",
      "compute.licenseCodes.getIamPolicy",
      "compute.licenseCodes.list",
      "compute.licenseCodes.setIamPolicy",
      "compute.licenseCodes.update",
      "compute.licenseCodes.use",
      "compute.licenses.create",
      "compute.licenses.delete",
      "compute.licenses.get",
      "compute.licenses.getIamPolicy",
      "compute.licenses.list",
      "compute.licenses.setIamPolicy",
      "compute.machineImages.create",
      "compute.machineImages.delete",
      "compute.machineImages.get",
      "compute.machineImages.getIamPolicy",
      "compute.machineImages.list",
      "compute.machineImages.setIamPolicy",
      "compute.machineImages.useReadOnly",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.networkAttachments.create",
      "compute.networkAttachments.delete",
      "compute.networkAttachments.get",
      "compute.networkAttachments.getIamPolicy",
      "compute.networkAttachments.list",
      "compute.networkAttachments.setIamPolicy",
      "compute.networkEndpointGroups.attachNetworkEndpoints",
      "compute.networkEndpointGroups.create",
      "compute.networkEndpointGroups.createTagBinding",
      "compute.networkEndpointGroups.delete",
      "compute.networkEndpointGroups.deleteTagBinding",
      "compute.networkEndpointGroups.detachNetworkEndpoints",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.getIamPolicy",
      "compute.networkEndpointGroups.list",
      "compute.networkEndpointGroups.listEffectiveTags",
      "compute.networkEndpointGroups.listTagBindings",
      "compute.networkEndpointGroups.setIamPolicy",
      "compute.networkEndpointGroups.use",
      "compute.networks.access",
      "compute.networks.addPeering",
      "compute.networks.create",
      "compute.networks.createTagBinding",
      "compute.networks.delete",
      "compute.networks.deleteTagBinding",
      "compute.networks.get",
      "compute.networks.getEffectiveFirewalls",
      "compute.networks.getRegionEffectiveFirewalls",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listPeeringRoutes",
      "compute.networks.listTagBindings",
      "compute.networks.mirror",
      "compute.networks.removePeering",
      "compute.networks.setFirewallPolicy",
      "compute.networks.switchToCustomMode",
      "compute.networks.update",
      "compute.networks.updatePeering",
      "compute.networks.updatePolicy",
      "compute.networks.use",
      "compute.networks.useExternalIp",
      "compute.nodeGroups.get",
      "compute.packetMirrorings.create",
      "compute.packetMirrorings.delete",
      "compute.packetMirrorings.get",
      "compute.packetMirrorings.list",
      "compute.packetMirrorings.update",
      "compute.projects.get",
      "compute.projects.setCommonInstanceMetadata",
      "compute.publicDelegatedPrefixes.delete",
      "compute.publicDelegatedPrefixes.get",
      "compute.publicDelegatedPrefixes.list",
      "compute.publicDelegatedPrefixes.update",
      "compute.publicDelegatedPrefixes.updatePolicy",
      "compute.regionBackendServices.create",
      "compute.regionBackendServices.createTagBinding",
      "compute.regionBackendServices.delete",
      "compute.regionBackendServices.deleteTagBinding",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.getIamPolicy",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionBackendServices.setIamPolicy",
      "compute.regionBackendServices.setSecurityPolicy",
      "compute.regionBackendServices.update",
      "compute.regionBackendServices.use",
      "compute.regionFirewallPolicies.cloneRules",
      "compute.regionFirewallPolicies.create",
      "compute.regionFirewallPolicies.createTagBinding",
      "compute.regionFirewallPolicies.delete",
      "compute.regionFirewallPolicies.deleteTagBinding",
      "compute.regionFirewallPolicies.get",
      "compute.regionFirewallPolicies.getIamPolicy",
      "compute.regionFirewallPolicies.list",
      "compute.regionFirewallPolicies.listEffectiveTags",
      "compute.regionFirewallPolicies.listTagBindings",
      "compute.regionFirewallPolicies.setIamPolicy",
      "compute.regionFirewallPolicies.update",
      "compute.regionFirewallPolicies.use",
      "compute.regionHealthCheckServices.create",
      "compute.regionHealthCheckServices.delete",
      "compute.regionHealthCheckServices.get",
      "compute.regionHealthCheckServices.list",
      "compute.regionHealthCheckServices.update",
      "compute.regionHealthCheckServices.use",
      "compute.regionHealthChecks.create",
      "compute.regionHealthChecks.createTagBinding",
      "compute.regionHealthChecks.delete",
      "compute.regionHealthChecks.deleteTagBinding",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionHealthChecks.update",
      "compute.regionHealthChecks.use",
      "compute.regionHealthChecks.useReadOnly",
      "compute.regionNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.create",
      "compute.regionNetworkEndpointGroups.createTagBinding",
      "compute.regionNetworkEndpointGroups.delete",
      "compute.regionNetworkEndpointGroups.deleteTagBinding",
      "compute.regionNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionNetworkEndpointGroups.listEffectiveTags",
      "compute.regionNetworkEndpointGroups.listTagBindings",
      "compute.regionNetworkEndpointGroups.use",
      "compute.regionNotificationEndpoints.create",
      "compute.regionNotificationEndpoints.delete",
      "compute.regionNotificationEndpoints.get",
      "compute.regionNotificationEndpoints.list",
      "compute.regionNotificationEndpoints.update",
      "compute.regionNotificationEndpoints.use",
      "compute.regionOperations.get",
      "compute.regionOperations.list",
      "compute.regionSecurityPolicies.create",
      "compute.regionSecurityPolicies.createTagBinding",
      "compute.regionSecurityPolicies.delete",
      "compute.regionSecurityPolicies.deleteTagBinding",
      "compute.regionSecurityPolicies.get",
      "compute.regionSecurityPolicies.list",
      "compute.regionSecurityPolicies.listEffectiveTags",
      "compute.regionSecurityPolicies.listTagBindings",
      "compute.regionSecurityPolicies.update",
      "compute.regionSecurityPolicies.use",
      "compute.regionSslCertificates.create",
      "compute.regionSslCertificates.createTagBinding",
      "compute.regionSslCertificates.delete",
      "compute.regionSslCertificates.deleteTagBinding",
      "compute.regionSslCertificates.get",
      "compute.regionSslCertificates.list",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionSslPolicies.create",
      "compute.regionSslPolicies.delete",
      "compute.regionSslPolicies.get",
      "compute.regionSslPolicies.list",
      "compute.regionSslPolicies.listAvailableFeatures",
      "compute.regionSslPolicies.update",
      "compute.regionSslPolicies.use",
      "compute.regionTargetHttpProxies.create",
      "compute.regionTargetHttpProxies.createTagBinding",
      "compute.regionTargetHttpProxies.delete",
      "compute.regionTargetHttpProxies.deleteTagBinding",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpProxies.setUrlMap",
      "compute.regionTargetHttpProxies.update",
      "compute.regionTargetHttpProxies.use",
      "compute.regionTargetHttpsProxies.create",
      "compute.regionTargetHttpsProxies.createTagBinding",
      "compute.regionTargetHttpsProxies.delete",
      "compute.regionTargetHttpsProxies.deleteTagBinding",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.setSslCertificates",
      "compute.regionTargetHttpsProxies.setUrlMap",
      "compute.regionTargetHttpsProxies.update",
      "compute.regionTargetHttpsProxies.use",
      "compute.regionTargetTcpProxies.create",
      "compute.regionTargetTcpProxies.delete",
      "compute.regionTargetTcpProxies.get",
      "compute.regionTargetTcpProxies.list",
      "compute.regionTargetTcpProxies.use",
      "compute.regionUrlMaps.create",
      "compute.regionUrlMaps.createTagBinding",
      "compute.regionUrlMaps.delete",
      "compute.regionUrlMaps.deleteTagBinding",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.invalidateCache",
      "compute.regionUrlMaps.list",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.regionUrlMaps.update",
      "compute.regionUrlMaps.use",
      "compute.regionUrlMaps.validate",
      "compute.regions.get",
      "compute.regions.list",
      "compute.reservations.get",
      "compute.reservations.list",
      "compute.resourcePolicies.create",
      "compute.resourcePolicies.delete",
      "compute.resourcePolicies.get",
      "compute.resourcePolicies.getIamPolicy",
      "compute.resourcePolicies.list",
      "compute.resourcePolicies.setIamPolicy",
      "compute.resourcePolicies.update",
      "compute.resourcePolicies.use",
      "compute.resourcePolicies.useReadOnly",
      "compute.routers.create",
      "compute.routers.delete",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routers.update",
      "compute.routers.use",
      "compute.routes.create",
      "compute.routes.createTagBinding",
      "compute.routes.delete",
      "compute.routes.deleteTagBinding",
      "compute.routes.get",
      "compute.routes.list",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.securityPolicies.addAssociation",
      "compute.securityPolicies.copyRules",
      "compute.securityPolicies.create",
      "compute.securityPolicies.createTagBinding",
      "compute.securityPolicies.delete",
      "compute.securityPolicies.deleteTagBinding",
      "compute.securityPolicies.get",
      "compute.securityPolicies.getIamPolicy",
      "compute.securityPolicies.list",
      "compute.securityPolicies.listEffectiveTags",
      "compute.securityPolicies.listTagBindings",
      "compute.securityPolicies.move",
      "compute.securityPolicies.removeAssociation",
      "compute.securityPolicies.setIamPolicy",
      "compute.securityPolicies.setLabels",
      "compute.securityPolicies.update",
      "compute.securityPolicies.use",
      "compute.serviceAttachments.create",
      "compute.serviceAttachments.delete",
      "compute.serviceAttachments.get",
      "compute.serviceAttachments.getIamPolicy",
      "compute.serviceAttachments.list",
      "compute.serviceAttachments.setIamPolicy",
      "compute.serviceAttachments.update",
      "compute.serviceAttachments.use",
      "compute.snapshots.create",
      "compute.snapshots.createTagBinding",
      "compute.snapshots.delete",
      "compute.snapshots.deleteTagBinding",
      "compute.snapshots.get",
      "compute.snapshots.getIamPolicy",
      "compute.snapshots.list",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.snapshots.setIamPolicy",
      "compute.snapshots.setLabels",
      "compute.snapshots.useReadOnly",
      "compute.sslCertificates.create",
      "compute.sslCertificates.createTagBinding",
      "compute.sslCertificates.delete",
      "compute.sslCertificates.deleteTagBinding",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.create",
      "compute.sslPolicies.createTagBinding",
      "compute.sslPolicies.delete",
      "compute.sslPolicies.deleteTagBinding",
      "compute.sslPolicies.get",
      "compute.sslPolicies.list",
      "compute.sslPolicies.listAvailableFeatures",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.sslPolicies.update",
      "compute.sslPolicies.use",
      "compute.subnetworks.create",
      "compute.subnetworks.createTagBinding",
      "compute.subnetworks.delete",
      "compute.subnetworks.deleteTagBinding",
      "compute.subnetworks.expandIpCidrRange",
      "compute.subnetworks.get",
      "compute.subnetworks.getIamPolicy",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.subnetworks.mirror",
      "compute.subnetworks.setIamPolicy",
      "compute.subnetworks.setPrivateIpGoogleAccess",
      "compute.subnetworks.update",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.targetGrpcProxies.create",
      "compute.targetGrpcProxies.delete",
      "compute.targetGrpcProxies.get",
      "compute.targetGrpcProxies.list",
      "compute.targetGrpcProxies.update",
      "compute.targetGrpcProxies.use",
      "compute.targetHttpProxies.create",
      "compute.targetHttpProxies.createTagBinding",
      "compute.targetHttpProxies.delete",
      "compute.targetHttpProxies.deleteTagBinding",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpProxies.setUrlMap",
      "compute.targetHttpProxies.update",
      "compute.targetHttpProxies.use",
      "compute.targetHttpsProxies.create",
      "compute.targetHttpsProxies.createTagBinding",
      "compute.targetHttpsProxies.delete",
      "compute.targetHttpsProxies.deleteTagBinding",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetHttpsProxies.setCertificateMap",
      "compute.targetHttpsProxies.setQuicOverride",
      "compute.targetHttpsProxies.setSslCertificates",
      "compute.targetHttpsProxies.setSslPolicy",
      "compute.targetHttpsProxies.setUrlMap",
      "compute.targetHttpsProxies.update",
      "compute.targetHttpsProxies.use",
      "compute.targetInstances.create",
      "compute.targetInstances.createTagBinding",
      "compute.targetInstances.delete",
      "compute.targetInstances.deleteTagBinding",
      "compute.targetInstances.get",
      "compute.targetInstances.list",
      "compute.targetInstances.listEffectiveTags",
      "compute.targetInstances.listTagBindings",
      "compute.targetInstances.setSecurityPolicy",
      "compute.targetInstances.use",
      "compute.targetPools.addHealthCheck",
      "compute.targetPools.addInstance",
      "compute.targetPools.create",
      "compute.targetPools.createTagBinding",
      "compute.targetPools.delete",
      "compute.targetPools.deleteTagBinding",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.targetPools.removeHealthCheck",
      "compute.targetPools.removeInstance",
      "compute.targetPools.setSecurityPolicy",
      "compute.targetPools.update",
      "compute.targetPools.use",
      "compute.targetSslProxies.create",
      "compute.targetSslProxies.createTagBinding",
      "compute.targetSslProxies.delete",
      "compute.targetSslProxies.deleteTagBinding",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetSslProxies.listEffectiveTags",
      "compute.targetSslProxies.listTagBindings",
      "compute.targetSslProxies.setBackendService",
      "compute.targetSslProxies.setCertificateMap",
      "compute.targetSslProxies.setProxyHeader",
      "compute.targetSslProxies.setSslCertificates",
      "compute.targetSslProxies.setSslPolicy",
      "compute.targetSslProxies.update",
      "compute.targetSslProxies.use",
      "compute.targetTcpProxies.create",
      "compute.targetTcpProxies.createTagBinding",
      "compute.targetTcpProxies.delete",
      "compute.targetTcpProxies.deleteTagBinding",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.targetTcpProxies.update",
      "compute.targetTcpProxies.use",
      "compute.targetVpnGateways.create",
      "compute.targetVpnGateways.delete",
      "compute.targetVpnGateways.get",
      "compute.targetVpnGateways.list",
      "compute.targetVpnGateways.setLabels",
      "compute.targetVpnGateways.use",
      "compute.urlMaps.create",
      "compute.urlMaps.createTagBinding",
      "compute.urlMaps.delete",
      "compute.urlMaps.deleteTagBinding",
      "compute.urlMaps.get",
      "compute.urlMaps.invalidateCache",
      "compute.urlMaps.list",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "compute.urlMaps.update",
      "compute.urlMaps.use",
      "compute.urlMaps.validate",
      "compute.vpnGateways.create",
      "compute.vpnGateways.delete",
      "compute.vpnGateways.get",
      "compute.vpnGateways.list",
      "compute.vpnGateways.setLabels",
      "compute.vpnGateways.use",
      "compute.vpnTunnels.create",
      "compute.vpnTunnels.delete",
      "compute.vpnTunnels.get",
      "compute.vpnTunnels.list",
      "compute.vpnTunnels.setLabels",
      "compute.zoneOperations.get",
      "compute.zoneOperations.list",
      "compute.zones.get",
      "compute.zones.list",
      "container.apiServices.create",
      "container.apiServices.delete",
      "container.apiServices.get",
      "container.apiServices.getStatus",
      "container.apiServices.list",
      "container.apiServices.update",
      "container.apiServices.updateStatus",
      "container.auditSinks.create",
      "container.auditSinks.delete",
      "container.auditSinks.get",
      "container.auditSinks.list",
      "container.auditSinks.update",
      "container.backendConfigs.create",
      "container.backendConfigs.delete",
      "container.backendConfigs.get",
      "container.backendConfigs.list",
      "container.backendConfigs.update",
      "container.bindings.create",
      "container.bindings.delete",
      "container.bindings.get",
      "container.bindings.list",
      "container.bindings.update",
      "container.certificateSigningRequests.approve",
      "container.certificateSigningRequests.create",
      "container.certificateSigningRequests.delete",
      "container.certificateSigningRequests.get",
      "container.certificateSigningRequests.getStatus",
      "container.certificateSigningRequests.list",
      "container.certificateSigningRequests.update",
      "container.certificateSigningRequests.updateStatus",
      "container.clusterRoleBindings.create",
      "container.clusterRoleBindings.delete",
      "container.clusterRoleBindings.get",
      "container.clusterRoleBindings.list",
      "container.clusterRoleBindings.update",
      "container.clusterRoles.bind",
      "container.clusterRoles.create",
      "container.clusterRoles.delete",
      "container.clusterRoles.escalate",
      "container.clusterRoles.get",
      "container.clusterRoles.list",
      "container.clusterRoles.update",
      "container.clusters.create",
      "container.clusters.createTagBinding",
      "container.clusters.delete",
      "container.clusters.deleteTagBinding",
      "container.clusters.get",
      "container.clusters.getCredentials",
      "container.clusters.impersonate",
      "container.clusters.list",
      "container.clusters.listEffectiveTags",
      "container.clusters.listTagBindings",
      "container.clusters.update",
      "container.componentStatuses.get",
      "container.componentStatuses.list",
      "container.configMaps.create",
      "container.configMaps.delete",
      "container.configMaps.get",
      "container.configMaps.list",
      "container.configMaps.update",
      "container.controllerRevisions.create",
      "container.controllerRevisions.delete",
      "container.controllerRevisions.get",
      "container.controllerRevisions.list",
      "container.controllerRevisions.update",
      "container.cronJobs.create",
      "container.cronJobs.delete",
      "container.cronJobs.get",
      "container.cronJobs.getStatus",
      "container.cronJobs.list",
      "container.cronJobs.update",
      "container.cronJobs.updateStatus",
      "container.csiDrivers.create",
      "container.csiDrivers.delete",
      "container.csiDrivers.get",
      "container.csiDrivers.list",
      "container.csiDrivers.update",
      "container.csiNodeInfos.create",
      "container.csiNodeInfos.delete",
      "container.csiNodeInfos.get",
      "container.csiNodeInfos.list",
      "container.csiNodeInfos.update",
      "container.csiNodes.create",
      "container.csiNodes.delete",
      "container.csiNodes.get",
      "container.csiNodes.list",
      "container.csiNodes.update",
      "container.customResourceDefinitions.create",
      "container.customResourceDefinitions.delete",
      "container.customResourceDefinitions.get",
      "container.customResourceDefinitions.getStatus",
      "container.customResourceDefinitions.list",
      "container.customResourceDefinitions.update",
      "container.customResourceDefinitions.updateStatus",
      "container.daemonSets.create",
      "container.daemonSets.delete",
      "container.daemonSets.get",
      "container.daemonSets.getStatus",
      "container.daemonSets.list",
      "container.daemonSets.update",
      "container.daemonSets.updateStatus",
      "container.deployments.create",
      "container.deployments.delete",
      "container.deployments.get",
      "container.deployments.getScale",
      "container.deployments.getStatus",
      "container.deployments.list",
      "container.deployments.rollback",
      "container.deployments.update",
      "container.deployments.updateScale",
      "container.deployments.updateStatus",
      "container.endpointSlices.create",
      "container.endpointSlices.delete",
      "container.endpointSlices.get",
      "container.endpointSlices.list",
      "container.endpointSlices.update",
      "container.endpoints.create",
      "container.endpoints.delete",
      "container.endpoints.get",
      "container.endpoints.list",
      "container.endpoints.update",
      "container.events.create",
      "container.events.delete",
      "container.events.get",
      "container.events.list",
      "container.events.update",
      "container.frontendConfigs.create",
      "container.frontendConfigs.delete",
      "container.frontendConfigs.get",
      "container.frontendConfigs.list",
      "container.frontendConfigs.update",
      "container.horizontalPodAutoscalers.create",
      "container.horizontalPodAutoscalers.delete",
      "container.horizontalPodAutoscalers.get",
      "container.horizontalPodAutoscalers.getStatus",
      "container.horizontalPodAutoscalers.list",
      "container.horizontalPodAutoscalers.update",
      "container.horizontalPodAutoscalers.updateStatus",
      "container.hostServiceAgent.use",
      "container.ingresses.create",
      "container.ingresses.delete",
      "container.ingresses.get",
      "container.ingresses.getStatus",
      "container.ingresses.list",
      "container.ingresses.update",
      "container.ingresses.updateStatus",
      "container.initializerConfigurations.create",
      "container.initializerConfigurations.delete",
      "container.initializerConfigurations.get",
      "container.initializerConfigurations.list",
      "container.initializerConfigurations.update",
      "container.jobs.create",
      "container.jobs.delete",
      "container.jobs.get",
      "container.jobs.getStatus",
      "container.jobs.list",
      "container.jobs.update",
      "container.jobs.updateStatus",
      "container.leases.create",
      "container.leases.delete",
      "container.leases.get",
      "container.leases.list",
      "container.leases.update",
      "container.limitRanges.create",
      "container.limitRanges.delete",
      "container.limitRanges.get",
      "container.limitRanges.list",
      "container.limitRanges.update",
      "container.localSubjectAccessReviews.create",
      "container.localSubjectAccessReviews.list",
      "container.managedCertificates.create",
      "container.managedCertificates.delete",
      "container.managedCertificates.get",
      "container.managedCertificates.list",
      "container.managedCertificates.update",
      "container.mutatingWebhookConfigurations.create",
      "container.mutatingWebhookConfigurations.delete",
      "container.mutatingWebhookConfigurations.get",
      "container.mutatingWebhookConfigurations.list",
      "container.mutatingWebhookConfigurations.update",
      "container.namespaces.create",
      "container.namespaces.delete",
      "container.namespaces.finalize",
      "container.namespaces.get",
      "container.namespaces.getStatus",
      "container.namespaces.list",
      "container.namespaces.update",
      "container.namespaces.updateStatus",
      "container.networkPolicies.create",
      "container.networkPolicies.delete",
      "container.networkPolicies.get",
      "container.networkPolicies.list",
      "container.networkPolicies.update",
      "container.nodes.create",
      "container.nodes.delete",
      "container.nodes.get",
      "container.nodes.getStatus",
      "container.nodes.list",
      "container.nodes.proxy",
      "container.nodes.update",
      "container.nodes.updateStatus",
      "container.operations.get",
      "container.operations.list",
      "container.persistentVolumeClaims.create",
      "container.persistentVolumeClaims.delete",
      "container.persistentVolumeClaims.get",
      "container.persistentVolumeClaims.getStatus",
      "container.persistentVolumeClaims.list",
      "container.persistentVolumeClaims.update",
      "container.persistentVolumeClaims.updateStatus",
      "container.persistentVolumes.create",
      "container.persistentVolumes.delete",
      "container.persistentVolumes.get",
      "container.persistentVolumes.getStatus",
      "container.persistentVolumes.list",
      "container.persistentVolumes.update",
      "container.persistentVolumes.updateStatus",
      "container.petSets.create",
      "container.petSets.delete",
      "container.petSets.get",
      "container.petSets.list",
      "container.petSets.update",
      "container.petSets.updateStatus",
      "container.podDisruptionBudgets.create",
      "container.podDisruptionBudgets.delete",
      "container.podDisruptionBudgets.get",
      "container.podDisruptionBudgets.getStatus",
      "container.podDisruptionBudgets.list",
      "container.podDisruptionBudgets.update",
      "container.podDisruptionBudgets.updateStatus",
      "container.podPresets.create",
      "container.podPresets.delete",
      "container.podPresets.get",
      "container.podPresets.list",
      "container.podPresets.update",
      "container.podSecurityPolicies.create",
      "container.podSecurityPolicies.delete",
      "container.podSecurityPolicies.get",
      "container.podSecurityPolicies.list",
      "container.podSecurityPolicies.update",
      "container.podSecurityPolicies.use",
      "container.podTemplates.create",
      "container.podTemplates.delete",
      "container.podTemplates.get",
      "container.podTemplates.list",
      "container.podTemplates.update",
      "container.pods.attach",
      "container.pods.create",
      "container.pods.delete",
      "container.pods.evict",
      "container.pods.exec",
      "container.pods.get",
      "container.pods.getLogs",
      "container.pods.getStatus",
      "container.pods.initialize",
      "container.pods.list",
      "container.pods.portForward",
      "container.pods.proxy",
      "container.pods.update",
      "container.pods.updateStatus",
      "container.priorityClasses.create",
      "container.priorityClasses.delete",
      "container.priorityClasses.get",
      "container.priorityClasses.list",
      "container.priorityClasses.update",
      "container.replicaSets.create",
      "container.replicaSets.delete",
      "container.replicaSets.get",
      "container.replicaSets.getScale",
      "container.replicaSets.getStatus",
      "container.replicaSets.list",
      "container.replicaSets.update",
      "container.replicaSets.updateScale",
      "container.replicaSets.updateStatus",
      "container.replicationControllers.create",
      "container.replicationControllers.delete",
      "container.replicationControllers.get",
      "container.replicationControllers.getScale",
      "container.replicationControllers.getStatus",
      "container.replicationControllers.list",
      "container.replicationControllers.update",
      "container.replicationControllers.updateScale",
      "container.replicationControllers.updateStatus",
      "container.resourceQuotas.create",
      "container.resourceQuotas.delete",
      "container.resourceQuotas.get",
      "container.resourceQuotas.getStatus",
      "container.resourceQuotas.list",
      "container.resourceQuotas.update",
      "container.resourceQuotas.updateStatus",
      "container.roleBindings.create",
      "container.roleBindings.delete",
      "container.roleBindings.get",
      "container.roleBindings.list",
      "container.roleBindings.update",
      "container.roles.bind",
      "container.roles.create",
      "container.roles.delete",
      "container.roles.escalate",
      "container.roles.get",
      "container.roles.list",
      "container.roles.update",
      "container.runtimeClasses.create",
      "container.runtimeClasses.delete",
      "container.runtimeClasses.get",
      "container.runtimeClasses.list",
      "container.runtimeClasses.update",
      "container.scheduledJobs.create",
      "container.scheduledJobs.delete",
      "container.scheduledJobs.get",
      "container.scheduledJobs.list",
      "container.scheduledJobs.update",
      "container.scheduledJobs.updateStatus",
      "container.secrets.create",
      "container.secrets.delete",
      "container.secrets.get",
      "container.secrets.list",
      "container.secrets.update",
      "container.selfSubjectAccessReviews.create",
      "container.selfSubjectAccessReviews.list",
      "container.selfSubjectRulesReviews.create",
      "container.serviceAccounts.create",
      "container.serviceAccounts.createToken",
      "container.serviceAccounts.delete",
      "container.serviceAccounts.get",
      "container.serviceAccounts.list",
      "container.serviceAccounts.update",
      "container.services.create",
      "container.services.delete",
      "container.services.get",
      "container.services.getStatus",
      "container.services.list",
      "container.services.proxy",
      "container.services.update",
      "container.services.updateStatus",
      "container.statefulSets.create",
      "container.statefulSets.delete",
      "container.statefulSets.get",
      "container.statefulSets.getScale",
      "container.statefulSets.getStatus",
      "container.statefulSets.list",
      "container.statefulSets.update",
      "container.statefulSets.updateScale",
      "container.statefulSets.updateStatus",
      "container.storageClasses.create",
      "container.storageClasses.delete",
      "container.storageClasses.get",
      "container.storageClasses.list",
      "container.storageClasses.update",
      "container.storageStates.create",
      "container.storageStates.delete",
      "container.storageStates.get",
      "container.storageStates.getStatus",
      "container.storageStates.list",
      "container.storageStates.update",
      "container.storageStates.updateStatus",
      "container.storageVersionMigrations.create",
      "container.storageVersionMigrations.delete",
      "container.storageVersionMigrations.get",
      "container.storageVersionMigrations.getStatus",
      "container.storageVersionMigrations.list",
      "container.storageVersionMigrations.update",
      "container.storageVersionMigrations.updateStatus",
      "container.subjectAccessReviews.create",
      "container.subjectAccessReviews.list",
      "container.thirdPartyObjects.create",
      "container.thirdPartyObjects.delete",
      "container.thirdPartyObjects.get",
      "container.thirdPartyObjects.list",
      "container.thirdPartyObjects.update",
      "container.thirdPartyResources.create",
      "container.thirdPartyResources.delete",
      "container.thirdPartyResources.get",
      "container.thirdPartyResources.list",
      "container.thirdPartyResources.update",
      "container.tokenReviews.create",
      "container.updateInfos.create",
      "container.updateInfos.delete",
      "container.updateInfos.get",
      "container.updateInfos.list",
      "container.updateInfos.update",
      "container.validatingWebhookConfigurations.create",
      "container.validatingWebhookConfigurations.delete",
      "container.validatingWebhookConfigurations.get",
      "container.validatingWebhookConfigurations.list",
      "container.validatingWebhookConfigurations.update",
      "container.volumeAttachments.create",
      "container.volumeAttachments.delete",
      "container.volumeAttachments.get",
      "container.volumeAttachments.getStatus",
      "container.volumeAttachments.list",
      "container.volumeAttachments.update",
      "container.volumeAttachments.updateStatus",
      "container.volumeSnapshotClasses.create",
      "container.volumeSnapshotClasses.delete",
      "container.volumeSnapshotClasses.get",
      "container.volumeSnapshotClasses.list",
      "container.volumeSnapshotClasses.update",
      "container.volumeSnapshotContents.create",
      "container.volumeSnapshotContents.delete",
      "container.volumeSnapshotContents.get",
      "container.volumeSnapshotContents.getStatus",
      "container.volumeSnapshotContents.list",
      "container.volumeSnapshotContents.update",
      "container.volumeSnapshotContents.updateStatus",
      "container.volumeSnapshots.create",
      "container.volumeSnapshots.delete",
      "container.volumeSnapshots.get",
      "container.volumeSnapshots.getStatus",
      "container.volumeSnapshots.list",
      "container.volumeSnapshots.update",
      "container.volumeSnapshots.updateStatus",
      "dns.changes.create",
      "dns.changes.get",
      "dns.changes.list",
      "dns.dnsKeys.get",
      "dns.dnsKeys.list",
      "dns.gkeClusters.bindDNSResponsePolicy",
      "dns.gkeClusters.bindPrivateDNSZone",
      "dns.managedZoneOperations.get",
      "dns.managedZoneOperations.list",
      "dns.managedZones.create",
      "dns.managedZones.delete",
      "dns.managedZones.get",
      "dns.managedZones.getIamPolicy",
      "dns.managedZones.list",
      "dns.managedZones.update",
      "dns.networks.bindDNSResponsePolicy",
      "dns.networks.bindPrivateDNSPolicy",
      "dns.networks.bindPrivateDNSZone",
      "dns.networks.targetWithPeeringZone",
      "dns.networks.useHealthSignals",
      "dns.policies.create",
      "dns.policies.delete",
      "dns.policies.get",
      "dns.policies.getIamPolicy",
      "dns.policies.list",
      "dns.policies.update",
      "dns.projects.get",
      "dns.resourceRecordSets.create",
      "dns.resourceRecordSets.delete",
      "dns.resourceRecordSets.get",
      "dns.resourceRecordSets.list",
      "dns.resourceRecordSets.update",
      "dns.responsePolicies.create",
      "dns.responsePolicies.delete",
      "dns.responsePolicies.get",
      "dns.responsePolicies.list",
      "dns.responsePolicies.update",
      "dns.responsePolicyRules.create",
      "dns.responsePolicyRules.delete",
      "dns.responsePolicyRules.get",
      "dns.responsePolicyRules.list",
      "dns.responsePolicyRules.update",
      "file.backups.create",
      "file.backups.createTagBinding",
      "file.backups.delete",
      "file.backups.deleteTagBinding",
      "file.backups.get",
      "file.backups.list",
      "file.backups.listEffectiveTags",
      "file.backups.listTagBindings",
      "file.backups.update",
      "file.instances.create",
      "file.instances.createTagBinding",
      "file.instances.delete",
      "file.instances.deleteTagBinding",
      "file.instances.get",
      "file.instances.list",
      "file.instances.listEffectiveTags",
      "file.instances.listTagBindings",
      "file.instances.restore",
      "file.instances.revert",
      "file.instances.update",
      "file.locations.get",
      "file.locations.list",
      "file.operations.cancel",
      "file.operations.delete",
      "file.operations.get",
      "file.operations.list",
      "file.snapshots.create",
      "file.snapshots.createTagBinding",
      "file.snapshots.delete",
      "file.snapshots.deleteTagBinding",
      "file.snapshots.get",
      "file.snapshots.list",
      "file.snapshots.listEffectiveTags",
      "file.snapshots.listTagBindings",
      "file.snapshots.update",
      "iam.serviceAccounts.actAs",
      "iam.serviceAccounts.get",
      "logging.logEntries.create",
      "meshconfig.projects.get",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.timeSeries.create",
      "monitoring.timeSeries.list",
      "networkconnectivity.internalRanges.create",
      "networkconnectivity.internalRanges.delete",
      "networkconnectivity.internalRanges.get",
      "networkconnectivity.internalRanges.getIamPolicy",
      "networkconnectivity.internalRanges.list",
      "networkconnectivity.internalRanges.setIamPolicy",
      "networkconnectivity.internalRanges.update",
      "networkconnectivity.locations.get",
      "networkconnectivity.locations.list",
      "networkconnectivity.operations.cancel",
      "networkconnectivity.operations.delete",
      "networkconnectivity.operations.get",
      "networkconnectivity.operations.list",
      "networkconnectivity.policyBasedRoutes.create",
      "networkconnectivity.policyBasedRoutes.delete",
      "networkconnectivity.policyBasedRoutes.get",
      "networkconnectivity.policyBasedRoutes.getIamPolicy",
      "networkconnectivity.policyBasedRoutes.list",
      "networkconnectivity.policyBasedRoutes.setIamPolicy",
      "networkconnectivity.serviceClasses.create",
      "networkconnectivity.serviceClasses.delete",
      "networkconnectivity.serviceClasses.get",
      "networkconnectivity.serviceClasses.list",
      "networkconnectivity.serviceClasses.update",
      "networkconnectivity.serviceClasses.use",
      "networkconnectivity.serviceConnectionMaps.create",
      "networkconnectivity.serviceConnectionMaps.delete",
      "networkconnectivity.serviceConnectionMaps.get",
      "networkconnectivity.serviceConnectionMaps.list",
      "networkconnectivity.serviceConnectionMaps.update",
      "networkconnectivity.serviceConnectionPolicies.create",
      "networkconnectivity.serviceConnectionPolicies.delete",
      "networkconnectivity.serviceConnectionPolicies.get",
      "networkconnectivity.serviceConnectionPolicies.list",
      "networkconnectivity.serviceConnectionPolicies.update",
      "networksecurity.authorizationPolicies.create",
      "networksecurity.authorizationPolicies.delete",
      "networksecurity.authorizationPolicies.get",
      "networksecurity.authorizationPolicies.getIamPolicy",
      "networksecurity.authorizationPolicies.list",
      "networksecurity.authorizationPolicies.setIamPolicy",
      "networksecurity.authorizationPolicies.update",
      "networksecurity.authorizationPolicies.use",
      "networksecurity.clientTlsPolicies.create",
      "networksecurity.clientTlsPolicies.delete",
      "networksecurity.clientTlsPolicies.get",
      "networksecurity.clientTlsPolicies.getIamPolicy",
      "networksecurity.clientTlsPolicies.list",
      "networksecurity.clientTlsPolicies.setIamPolicy",
      "networksecurity.clientTlsPolicies.update",
      "networksecurity.clientTlsPolicies.use",
      "networksecurity.firewallEndpointAssociations.create",
      "networksecurity.firewallEndpointAssociations.delete",
      "networksecurity.firewallEndpointAssociations.get",
      "networksecurity.firewallEndpointAssociations.list",
      "networksecurity.firewallEndpointAssociations.update",
      "networksecurity.firewallEndpoints.create",
      "networksecurity.firewallEndpoints.delete",
      "networksecurity.firewallEndpoints.get",
      "networksecurity.firewallEndpoints.list",
      "networksecurity.firewallEndpoints.update",
      "networksecurity.firewallEndpoints.use",
      "networksecurity.gatewaySecurityPolicies.create",
      "networksecurity.gatewaySecurityPolicies.delete",
      "networksecurity.gatewaySecurityPolicies.get",
      "networksecurity.gatewaySecurityPolicies.list",
      "networksecurity.gatewaySecurityPolicies.update",
      "networksecurity.gatewaySecurityPolicies.use",
      "networksecurity.gatewaySecurityPolicyRules.create",
      "networksecurity.gatewaySecurityPolicyRules.delete",
      "networksecurity.gatewaySecurityPolicyRules.get",
      "networksecurity.gatewaySecurityPolicyRules.list",
      "networksecurity.gatewaySecurityPolicyRules.update",
      "networksecurity.gatewaySecurityPolicyRules.use",
      "networksecurity.locations.get",
      "networksecurity.locations.list",
      "networksecurity.operations.cancel",
      "networksecurity.operations.delete",
      "networksecurity.operations.get",
      "networksecurity.operations.list",
      "networksecurity.securityProfileGroups.create",
      "networksecurity.securityProfileGroups.delete",
      "networksecurity.securityProfileGroups.get",
      "networksecurity.securityProfileGroups.list",
      "networksecurity.securityProfileGroups.update",
      "networksecurity.securityProfileGroups.use",
      "networksecurity.securityProfiles.create",
      "networksecurity.securityProfiles.delete",
      "networksecurity.securityProfiles.get",
      "networksecurity.securityProfiles.list",
      "networksecurity.securityProfiles.update",
      "networksecurity.securityProfiles.use",
      "networksecurity.serverTlsPolicies.create",
      "networksecurity.serverTlsPolicies.delete",
      "networksecurity.serverTlsPolicies.get",
      "networksecurity.serverTlsPolicies.getIamPolicy",
      "networksecurity.serverTlsPolicies.list",
      "networksecurity.serverTlsPolicies.setIamPolicy",
      "networksecurity.serverTlsPolicies.update",
      "networksecurity.serverTlsPolicies.use",
      "networksecurity.tlsInspectionPolicies.create",
      "networksecurity.tlsInspectionPolicies.delete",
      "networksecurity.tlsInspectionPolicies.get",
      "networksecurity.tlsInspectionPolicies.list",
      "networksecurity.tlsInspectionPolicies.update",
      "networksecurity.tlsInspectionPolicies.use",
      "networksecurity.urlLists.create",
      "networksecurity.urlLists.delete",
      "networksecurity.urlLists.get",
      "networksecurity.urlLists.list",
      "networksecurity.urlLists.update",
      "networksecurity.urlLists.use",
      "networkservices.endpointConfigSelectors.create",
      "networkservices.endpointConfigSelectors.delete",
      "networkservices.endpointConfigSelectors.get",
      "networkservices.endpointConfigSelectors.getIamPolicy",
      "networkservices.endpointConfigSelectors.list",
      "networkservices.endpointConfigSelectors.setIamPolicy",
      "networkservices.endpointConfigSelectors.update",
      "networkservices.endpointConfigSelectors.use",
      "networkservices.endpointPolicies.create",
      "networkservices.endpointPolicies.delete",
      "networkservices.endpointPolicies.get",
      "networkservices.endpointPolicies.getIamPolicy",
      "networkservices.endpointPolicies.list",
      "networkservices.endpointPolicies.setIamPolicy",
      "networkservices.endpointPolicies.update",
      "networkservices.endpointPolicies.use",
      "networkservices.gateways.create",
      "networkservices.gateways.delete",
      "networkservices.gateways.get",
      "networkservices.gateways.list",
      "networkservices.gateways.update",
      "networkservices.gateways.use",
      "networkservices.grpcRoutes.create",
      "networkservices.grpcRoutes.delete",
      "networkservices.grpcRoutes.get",
      "networkservices.grpcRoutes.getIamPolicy",
      "networkservices.grpcRoutes.list",
      "networkservices.grpcRoutes.setIamPolicy",
      "networkservices.grpcRoutes.update",
      "networkservices.grpcRoutes.use",
      "networkservices.httpFilters.create",
      "networkservices.httpFilters.delete",
      "networkservices.httpFilters.get",
      "networkservices.httpFilters.getIamPolicy",
      "networkservices.httpFilters.list",
      "networkservices.httpFilters.setIamPolicy",
      "networkservices.httpFilters.update",
      "networkservices.httpFilters.use",
      "networkservices.httpRoutes.create",
      "networkservices.httpRoutes.delete",
      "networkservices.httpRoutes.get",
      "networkservices.httpRoutes.getIamPolicy",
      "networkservices.httpRoutes.list",
      "networkservices.httpRoutes.setIamPolicy",
      "networkservices.httpRoutes.update",
      "networkservices.httpRoutes.use",
      "networkservices.httpfilters.create",
      "networkservices.httpfilters.delete",
      "networkservices.httpfilters.get",
      "networkservices.httpfilters.getIamPolicy",
      "networkservices.httpfilters.list",
      "networkservices.httpfilters.setIamPolicy",
      "networkservices.httpfilters.update",
      "networkservices.httpfilters.use",
      "networkservices.locations.get",
      "networkservices.locations.list",
      "networkservices.meshes.create",
      "networkservices.meshes.delete",
      "networkservices.meshes.get",
      "networkservices.meshes.getIamPolicy",
      "networkservices.meshes.list",
      "networkservices.meshes.setIamPolicy",
      "networkservices.meshes.update",
      "networkservices.meshes.use",
      "networkservices.operations.cancel",
      "networkservices.operations.delete",
      "networkservices.operations.get",
      "networkservices.operations.list",
      "networkservices.serviceBindings.create",
      "networkservices.serviceBindings.delete",
      "networkservices.serviceBindings.get",
      "networkservices.serviceBindings.list",
      "networkservices.serviceBindings.update",
      "networkservices.tcpRoutes.create",
      "networkservices.tcpRoutes.delete",
      "networkservices.tcpRoutes.get",
      "networkservices.tcpRoutes.getIamPolicy",
      "networkservices.tcpRoutes.list",
      "networkservices.tcpRoutes.setIamPolicy",
      "networkservices.tcpRoutes.update",
      "networkservices.tcpRoutes.use",
      "networkservices.tlsRoutes.create",
      "networkservices.tlsRoutes.delete",
      "networkservices.tlsRoutes.get",
      "networkservices.tlsRoutes.list",
      "networkservices.tlsRoutes.update",
      "networkservices.tlsRoutes.use",
      "pubsub.topics.create",
      "pubsub.topics.get",
      "pubsub.topics.publish",
      "recommender.containerDiagnosisInsights.get",
      "recommender.containerDiagnosisInsights.list",
      "recommender.containerDiagnosisInsights.update",
      "recommender.containerDiagnosisRecommendations.get",
      "recommender.containerDiagnosisRecommendations.list",
      "recommender.containerDiagnosisRecommendations.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.get",
      "recommender.networkAnalyzerGkeConnectivityInsights.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.update",
      "recommender.networkAnalyzerGkeIpAddressInsights.get",
      "recommender.networkAnalyzerGkeIpAddressInsights.list",
      "recommender.networkAnalyzerGkeIpAddressInsights.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "servicedirectory.namespaces.create",
      "servicedirectory.namespaces.delete",
      "servicedirectory.services.create",
      "servicedirectory.services.delete",
      "servicenetworking.operations.get",
      "servicenetworking.services.addPeering",
      "servicenetworking.services.createPeeredDnsDomain",
      "servicenetworking.services.deleteConnection",
      "servicenetworking.services.deletePeeredDnsDomain",
      "servicenetworking.services.disableVpcServiceControls",
      "servicenetworking.services.enableVpcServiceControls",
      "servicenetworking.services.get",
      "servicenetworking.services.listPeeredDnsDomains",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "serviceusage.services.use",
      "tpu.locations.get",
      "tpu.locations.list",
      "tpu.nodes.create",
      "tpu.nodes.delete",
      "tpu.nodes.get",
      "tpu.nodes.list",
      "tpu.operations.get",
      "tpu.operations.list",
      "trafficdirector.networks.getConfigs",
      "trafficdirector.networks.reportMetrics"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/container.viewer",
    "title": "Kubernetes Engine Viewer",
    "description": "Read-only access to Kubernetes Engine resources.",
    "includedPermissions": [
      "container.apiServices.get",
      "container.apiServices.getStatus",
      "container.apiServices.list",
      "container.auditSinks.get",
      "container.auditSinks.list",
      "container.backendConfigs.get",
      "container.backendConfigs.list",
      "container.bindings.get",
      "container.bindings.list",
      "container.certificateSigningRequests.get",
      "container.certificateSigningRequests.getStatus",
      "container.certificateSigningRequests.list",
      "container.clusterRoleBindings.get",
      "container.clusterRoleBindings.list",
      "container.clusterRoles.get",
      "container.clusterRoles.list",
      "container.clusters.get",
      "container.clusters.list",
      "container.componentStatuses.get",
      "container.componentStatuses.list",
      "container.configMaps.get",
      "container.configMaps.list",
      "container.controllerRevisions.get",
      "container.controllerRevisions.list",
      "container.cronJobs.get",
      "container.cronJobs.getStatus",
      "container.cronJobs.list",
      "container.csiDrivers.get",
      "container.csiDrivers.list",
      "container.csiNodeInfos.get",
      "container.csiNodeInfos.list",
      "container.csiNodes.get",
      "container.csiNodes.list",
      "container.customResourceDefinitions.get",
      "container.customResourceDefinitions.getStatus",
      "container.customResourceDefinitions.list",
      "container.daemonSets.get",
      "container.daemonSets.getStatus",
      "container.daemonSets.list",
      "container.deployments.get",
      "container.deployments.getScale",
      "container.deployments.getStatus",
      "container.deployments.list",
      "container.endpointSlices.get",
      "container.endpointSlices.list",
      "container.endpoints.get",
      "container.endpoints.list",
      "container.events.get",
      "container.events.list",
      "container.frontendConfigs.get",
      "container.frontendConfigs.list",
      "container.horizontalPodAutoscalers.get",
      "container.horizontalPodAutoscalers.getStatus",
      "container.horizontalPodAutoscalers.list",
      "container.ingresses.get",
      "container.ingresses.getStatus",
      "container.ingresses.list",
      "container.initializerConfigurations.get",
      "container.initializerConfigurations.list",
      "container.jobs.get",
      "container.jobs.getStatus",
      "container.jobs.list",
      "container.leases.get",
      "container.leases.list",
      "container.limitRanges.get",
      "container.limitRanges.list",
      "container.managedCertificates.get",
      "container.managedCertificates.list",
      "container.mutatingWebhookConfigurations.get",
      "container.mutatingWebhookConfigurations.list",
      "container.namespaces.get",
      "container.namespaces.getStatus",
      "container.namespaces.list",
      "container.networkPolicies.get",
      "container.networkPolicies.list",
      "container.nodes.get",
      "container.nodes.getStatus",
      "container.nodes.list",
      "container.operations.get",
      "container.operations.list",
      "container.persistentVolumeClaims.get",
      "container.persistentVolumeClaims.getStatus",
      "container.persistentVolumeClaims.list",
      "container.persistentVolumes.get",
      "container.persistentVolumes.getStatus",
      "container.persistentVolumes.list",
      "container.petSets.get",
      "container.petSets.list",
      "container.podDisruptionBudgets.get",
      "container.podDisruptionBudgets.getStatus",
      "container.podDisruptionBudgets.list",
      "container.podPresets.get",
      "container.podPresets.list",
      "container.podSecurityPolicies.get",
      "container.podSecurityPolicies.list",
      "container.podTemplates.get",
      "container.podTemplates.list",
      "container.pods.get",
      "container.pods.getStatus",
      "container.pods.list",
      "container.priorityClasses.get",
      "container.priorityClasses.list",
      "container.replicaSets.get",
      "container.replicaSets.getScale",
      "container.replicaSets.getStatus",
      "container.replicaSets.list",
      "container.replicationControllers.get",
      "container.replicationControllers.getScale",
      "container.replicationControllers.getStatus",
      "container.replicationControllers.list",
      "container.resourceQuotas.get",
      "container.resourceQuotas.getStatus",
      "container.resourceQuotas.list",
      "container.roleBindings.get",
      "container.roleBindings.list",
      "container.roles.get",
      "container.roles.list",
      "container.runtimeClasses.get",
      "container.runtimeClasses.list",
      "container.scheduledJobs.get",
      "container.scheduledJobs.list",
      "container.serviceAccounts.get",
      "container.serviceAccounts.list",
      "container.services.get",
      "container.services.getStatus",
      "container.services.list",
      "container.statefulSets.get",
      "container.statefulSets.getScale",
      "container.statefulSets.getStatus",
      "container.statefulSets.list",
      "container.storageClasses.get",
      "container.storageClasses.list",
      "container.storageStates.get",
      "container.storageStates.getStatus",
      "container.storageStates.list",
      "container.storageVersionMigrations.get",
      "container.storageVersionMigrations.getStatus",
      "container.storageVersionMigrations.list",
      "container.thirdPartyObjects.get",
      "container.thirdPartyObjects.list",
      "container.thirdPartyResources.get",
      "container.thirdPartyResources.list",
      "container.tokenReviews.create",
      "container.updateInfos.get",
      "container.updateInfos.list",
      "container.validatingWebhookConfigurations.get",
      "container.validatingWebhookConfigurations.list",
      "container.volumeAttachments.get",
      "container.volumeAttachments.getStatus",
      "container.volumeAttachments.list",
      "container.volumeSnapshotClasses.get",
      "container.volumeSnapshotClasses.list",
      "container.volumeSnapshotContents.get",
      "container.volumeSnapshotContents.getStatus",
      "container.volumeSnapshotContents.list",
      "container.volumeSnapshots.get",
      "container.volumeSnapshots.list",
      "recommender.containerDiagnosisInsights.get",
      "recommender.containerDiagnosisInsights.list",
      "recommender.containerDiagnosisRecommendations.get",
      "recommender.containerDiagnosisRecommendations.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.get",
      "recommender.networkAnalyzerGkeConnectivityInsights.list",
      "recommender.networkAnalyzerGkeIpAddressInsights.get",
      "recommender.networkAnalyzerGkeIpAddressInsights.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/containeranalysis.ServiceAgent",
    "title": "Container Analysis Service Agent",
    "description": "Gives Container Analysis API the access it needs to function",
    "includedPermissions": [
      "artifactregistry.dockerimages.get",
      "artifactregistry.dockerimages.list",
      "artifactregistry.files.get",
      "artifactregistry.files.list",
      "artifactregistry.locations.get",
      "artifactregistry.locations.list",
      "artifactregistry.mavenartifacts.get",
      "artifactregistry.mavenartifacts.list",
      "artifactregistry.npmpackages.get",
      "artifactregistry.npmpackages.list",
      "artifactregistry.packages.get",
      "artifactregistry.packages.list",
      "artifactregistry.projectsettings.get",
      "artifactregistry.pythonpackages.get",
      "artifactregistry.pythonpackages.list",
      "artifactregistry.repositories.downloadArtifacts",
      "artifactregistry.repositories.get",
      "artifactregistry.repositories.list",
      "artifactregistry.repositories.listEffectiveTags",
      "artifactregistry.repositories.listTagBindings",
      "artifactregistry.repositories.readViaVirtualRepository",
      "artifactregistry.tags.get",
      "artifactregistry.tags.list",
      "artifactregistry.versions.get",
      "artifactregistry.versions.list",
      "containeranalysis.notes.list",
      "containeranalysis.occurrences.create",
      "containeranalysis.occurrences.delete",
      "containeranalysis.occurrences.get",
      "containeranalysis.occurrences.list",
      "containeranalysis.occurrences.update",
      "pubsub.schemas.attach",
      "pubsub.schemas.commit",
      "pubsub.schemas.create",
      "pubsub.schemas.delete",
      "pubsub.schemas.get",
      "pubsub.schemas.list",
      "pubsub.schemas.listRevisions",
      "pubsub.schemas.rollback",
      "pubsub.schemas.validate",
      "pubsub.snapshots.create",
      "pubsub.snapshots.delete",
      "pubsub.snapshots.get",
      "pubsub.snapshots.list",
      "pubsub.snapshots.seek",
      "pubsub.snapshots.update",
      "pubsub.subscriptions.consume",
      "pubsub.subscriptions.create",
      "pubsub.subscriptions.delete",
      "pubsub.subscriptions.get",
      "pubsub.subscriptions.list",
      "pubsub.subscriptions.update",
      "pubsub.topics.attachSubscription",
      "pubsub.topics.create",
      "pubsub.topics.delete",
      "pubsub.topics.detachSubscription",
      "pubsub.topics.get",
      "pubsub.topics.list",
      "pubsub.topics.publish",
      "pubsub.topics.update",
      "pubsub.topics.updateTag",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "storage.buckets.create",
      "storage.buckets.get",
      "storage.buckets.list",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/containeranalysis.admin",
    "title": "Container Analysis Admin",
    "description": "Access to all Container Analysis resources.",
    "includedPermissions": [
      "containeranalysis.notes.attachOccurrence",
      "containeranalysis.notes.create",
      "containeranalysis.notes.delete",
      "containeranalysis.notes.get",
      "containeranalysis.notes.getIamPolicy",
      "containeranalysis.notes.list",
      "containeranalysis.notes.setIamPolicy",
      "containeranalysis.notes.update",
      "containeranalysis.occurrences.create",
      "containeranalysis.occurrences.delete",
      "containeranalysis.occurrences.get",
      "containeranalysis.occurrences.getIamPolicy",
      "containeranalysis.occurrences.list",
      "containeranalysis.occurrences.setIamPolicy",
      "containeranalysis.occurrences.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/containeranalysis.notes.attacher",
    "title": "Container Analysis Notes Attacher",
    "description": "Can attach Container Analysis Occurrences to Notes.",
    "includedPermissions": [
      "containeranalysis.notes.attachOccurrence",
      "containeranalysis.notes.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/containeranalysis.notes.editor",
    "title": "Container Analysis Notes Editor",
    "description": "Can edit Container Analysis Notes.",
    "includedPermissions": [
      "containeranalysis.notes.attachOccurrence",
      "containeranalysis.notes.create",
      "containeranalysis.notes.delete",
      "containeranalysis.notes.get",
      "containeranalysis.notes.list",
      "containeranalysis.notes.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/containeranalysis.notes.occurrences.viewer",
    "title": "Container Analysis Occurrences for Notes Viewer",
    "description": "Can view all Container Analysis Occurrences attached to a Note.",
    "includedPermissions": [
      "containeranalysis.notes.get",
      "containeranalysis.notes.listOccurrences"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/containeranalysis.notes.viewer",
    "title": "Container Analysis Notes Viewer",
    "description": "Can view Container Analysis Notes.",
    "includedPermissions": [
      "containeranalysis.notes.get",
      "containeranalysis.notes.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/containeranalysis.occurrences.editor",
    "title": "Container Analysis Occurrences Editor",
    "description": "Can edit Container Analysis Occurrences.",
    "includedPermissions": [
      "containeranalysis.occurrences.create",
      "containeranalysis.occurrences.delete",
      "containeranalysis.occurrences.get",
      "containeranalysis.occurrences.list",
      "containeranalysis.occurrences.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/containeranalysis.occurrences.viewer",
    "title": "Container Analysis Occurrences Viewer",
    "description": "Can view Container Analysis Occurrences.",
    "includedPermissions": [
      "containeranalysis.occurrences.get",
      "containeranalysis.occurrences.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/containerregistry.ServiceAgent",
    "title": "Container Registry Service Agent",
    "description": "Access for Container Registry",
    "includedPermissions": [
      "pubsub.topics.publish",
      "storage.objects.get",
      "storage.objects.getIamPolicy",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/containerscanning.ServiceAgent",
    "title": "Container Scanner Service Agent",
    "description": "Gives Container Scanner the access it needs to analyzecontainers for vulnerabilities and create occurrences using the Container Analysis API",
    "includedPermissions": [
      "artifactregistry.dockerimages.get",
      "artifactregistry.dockerimages.list",
      "artifactregistry.files.get",
      "artifactregistry.files.list",
      "artifactregistry.locations.get",
      "artifactregistry.locations.list",
      "artifactregistry.mavenartifacts.get",
      "artifactregistry.mavenartifacts.list",
      "artifactregistry.npmpackages.get",
      "artifactregistry.npmpackages.list",
      "artifactregistry.packages.get",
      "artifactregistry.packages.list",
      "artifactregistry.projectsettings.get",
      "artifactregistry.pythonpackages.get",
      "artifactregistry.pythonpackages.list",
      "artifactregistry.repositories.downloadArtifacts",
      "artifactregistry.repositories.get",
      "artifactregistry.repositories.list",
      "artifactregistry.repositories.listEffectiveTags",
      "artifactregistry.repositories.listTagBindings",
      "artifactregistry.repositories.readViaVirtualRepository",
      "artifactregistry.tags.get",
      "artifactregistry.tags.list",
      "artifactregistry.versions.get",
      "artifactregistry.versions.list",
      "containeranalysis.notes.list",
      "containeranalysis.occurrences.create",
      "containeranalysis.occurrences.delete",
      "containeranalysis.occurrences.get",
      "containeranalysis.occurrences.list",
      "containeranalysis.occurrences.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storage.buckets.create",
      "storage.buckets.get",
      "storage.buckets.list",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/containersecurity.viewer",
    "title": "GKE Security Posture Viewer",
    "description": "Readonly access to GKE Security Posture resources.",
    "includedPermissions": [
      "containersecurity.clusterSummaries.list",
      "containersecurity.findings.list",
      "containersecurity.locations.get",
      "containersecurity.locations.list",
      "containersecurity.workloadConfigAudits.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/containerthreatdetection.serviceAgent",
    "title": "Container Threat Detection Service Agent",
    "description": "Gives Container Threat Detection service account access to enable/disable Container Threat Detection and manage the Container Threat Detection Agent on Google Kubernetes Engine clusters.",
    "includedPermissions": [
      "container.apiServices.get",
      "container.apiServices.getStatus",
      "container.apiServices.list",
      "container.auditSinks.get",
      "container.auditSinks.list",
      "container.backendConfigs.get",
      "container.backendConfigs.list",
      "container.bindings.get",
      "container.bindings.list",
      "container.certificateSigningRequests.get",
      "container.certificateSigningRequests.getStatus",
      "container.certificateSigningRequests.list",
      "container.clusterRoleBindings.create",
      "container.clusterRoleBindings.delete",
      "container.clusterRoleBindings.get",
      "container.clusterRoleBindings.list",
      "container.clusterRoleBindings.update",
      "container.clusterRoles.bind",
      "container.clusterRoles.create",
      "container.clusterRoles.delete",
      "container.clusterRoles.escalate",
      "container.clusterRoles.get",
      "container.clusterRoles.list",
      "container.clusterRoles.update",
      "container.clusters.get",
      "container.clusters.list",
      "container.componentStatuses.get",
      "container.componentStatuses.list",
      "container.configMaps.get",
      "container.configMaps.list",
      "container.controllerRevisions.get",
      "container.controllerRevisions.list",
      "container.cronJobs.get",
      "container.cronJobs.getStatus",
      "container.cronJobs.list",
      "container.csiDrivers.get",
      "container.csiDrivers.list",
      "container.csiNodeInfos.get",
      "container.csiNodeInfos.list",
      "container.csiNodes.get",
      "container.csiNodes.list",
      "container.customResourceDefinitions.create",
      "container.customResourceDefinitions.delete",
      "container.customResourceDefinitions.get",
      "container.customResourceDefinitions.getStatus",
      "container.customResourceDefinitions.list",
      "container.customResourceDefinitions.update",
      "container.daemonSets.create",
      "container.daemonSets.delete",
      "container.daemonSets.get",
      "container.daemonSets.getStatus",
      "container.daemonSets.list",
      "container.daemonSets.update",
      "container.daemonSets.updateStatus",
      "container.deployments.get",
      "container.deployments.getScale",
      "container.deployments.getStatus",
      "container.deployments.list",
      "container.endpointSlices.get",
      "container.endpointSlices.list",
      "container.endpoints.get",
      "container.endpoints.list",
      "container.events.get",
      "container.events.list",
      "container.frontendConfigs.get",
      "container.frontendConfigs.list",
      "container.horizontalPodAutoscalers.get",
      "container.horizontalPodAutoscalers.getStatus",
      "container.horizontalPodAutoscalers.list",
      "container.ingresses.get",
      "container.ingresses.getStatus",
      "container.ingresses.list",
      "container.initializerConfigurations.get",
      "container.initializerConfigurations.list",
      "container.jobs.get",
      "container.jobs.getStatus",
      "container.jobs.list",
      "container.leases.get",
      "container.leases.list",
      "container.limitRanges.get",
      "container.limitRanges.list",
      "container.managedCertificates.get",
      "container.managedCertificates.list",
      "container.mutatingWebhookConfigurations.get",
      "container.mutatingWebhookConfigurations.list",
      "container.namespaces.get",
      "container.namespaces.getStatus",
      "container.namespaces.list",
      "container.networkPolicies.get",
      "container.networkPolicies.list",
      "container.networkPolicies.update",
      "container.nodes.get",
      "container.nodes.getStatus",
      "container.nodes.list",
      "container.operations.get",
      "container.operations.list",
      "container.persistentVolumeClaims.get",
      "container.persistentVolumeClaims.getStatus",
      "container.persistentVolumeClaims.list",
      "container.persistentVolumes.get",
      "container.persistentVolumes.getStatus",
      "container.persistentVolumes.list",
      "container.petSets.get",
      "container.petSets.list",
      "container.podDisruptionBudgets.get",
      "container.podDisruptionBudgets.getStatus",
      "container.podDisruptionBudgets.list",
      "container.podPresets.get",
      "container.podPresets.list",
      "container.podSecurityPolicies.get",
      "container.podSecurityPolicies.list",
      "container.podTemplates.get",
      "container.podTemplates.list",
      "container.pods.attach",
      "container.pods.create",
      "container.pods.delete",
      "container.pods.exec",
      "container.pods.get",
      "container.pods.getLogs",
      "container.pods.getStatus",
      "container.pods.list",
      "container.pods.portForward",
      "container.pods.update",
      "container.priorityClasses.get",
      "container.priorityClasses.list",
      "container.replicaSets.get",
      "container.replicaSets.getScale",
      "container.replicaSets.getStatus",
      "container.replicaSets.list",
      "container.replicationControllers.get",
      "container.replicationControllers.getScale",
      "container.replicationControllers.getStatus",
      "container.replicationControllers.list",
      "container.resourceQuotas.get",
      "container.resourceQuotas.getStatus",
      "container.resourceQuotas.list",
      "container.roleBindings.create",
      "container.roleBindings.delete",
      "container.roleBindings.get",
      "container.roleBindings.list",
      "container.roleBindings.update",
      "container.roles.bind",
      "container.roles.create",
      "container.roles.delete",
      "container.roles.escalate",
      "container.roles.get",
      "container.roles.list",
      "container.roles.update",
      "container.runtimeClasses.get",
      "container.runtimeClasses.list",
      "container.scheduledJobs.get",
      "container.scheduledJobs.list",
      "container.secrets.create",
      "container.secrets.delete",
      "container.secrets.list",
      "container.secrets.update",
      "container.serviceAccounts.create",
      "container.serviceAccounts.delete",
      "container.serviceAccounts.get",
      "container.serviceAccounts.list",
      "container.serviceAccounts.update",
      "container.services.get",
      "container.services.getStatus",
      "container.services.list",
      "container.statefulSets.get",
      "container.statefulSets.getScale",
      "container.statefulSets.getStatus",
      "container.statefulSets.list",
      "container.storageClasses.get",
      "container.storageClasses.list",
      "container.storageStates.get",
      "container.storageStates.getStatus",
      "container.storageStates.list",
      "container.storageVersionMigrations.get",
      "container.storageVersionMigrations.getStatus",
      "container.storageVersionMigrations.list",
      "container.thirdPartyObjects.get",
      "container.thirdPartyObjects.list",
      "container.thirdPartyResources.get",
      "container.thirdPartyResources.list",
      "container.tokenReviews.create",
      "container.updateInfos.get",
      "container.updateInfos.list",
      "container.validatingWebhookConfigurations.get",
      "container.validatingWebhookConfigurations.list",
      "container.volumeAttachments.get",
      "container.volumeAttachments.getStatus",
      "container.volumeAttachments.list",
      "container.volumeSnapshotClasses.get",
      "container.volumeSnapshotClasses.list",
      "container.volumeSnapshotContents.get",
      "container.volumeSnapshotContents.getStatus",
      "container.volumeSnapshotContents.list",
      "container.volumeSnapshots.get",
      "container.volumeSnapshots.list",
      "recommender.containerDiagnosisInsights.get",
      "recommender.containerDiagnosisInsights.list",
      "recommender.containerDiagnosisRecommendations.get",
      "recommender.containerDiagnosisRecommendations.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.get",
      "recommender.networkAnalyzerGkeConnectivityInsights.list",
      "recommender.networkAnalyzerGkeIpAddressInsights.get",
      "recommender.networkAnalyzerGkeIpAddressInsights.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/contentwarehouse.admin",
    "title": "Content Warehouse Admin",
    "description": "Grants full access to all the resources in Content Warehouse",
    "includedPermissions": [
      "contentwarehouse.dataExportJobs.create",
      "contentwarehouse.dataExportJobs.update",
      "contentwarehouse.documentSchemas.create",
      "contentwarehouse.documentSchemas.delete",
      "contentwarehouse.documentSchemas.get",
      "contentwarehouse.documentSchemas.list",
      "contentwarehouse.documentSchemas.update",
      "contentwarehouse.documents.create",
      "contentwarehouse.documents.delete",
      "contentwarehouse.documents.get",
      "contentwarehouse.documents.getIamPolicy",
      "contentwarehouse.documents.setIamPolicy",
      "contentwarehouse.documents.update",
      "contentwarehouse.locations.initialize",
      "contentwarehouse.operations.get",
      "contentwarehouse.rawDocuments.download",
      "contentwarehouse.rawDocuments.upload",
      "contentwarehouse.ruleSets.create",
      "contentwarehouse.ruleSets.delete",
      "contentwarehouse.ruleSets.get",
      "contentwarehouse.ruleSets.list",
      "contentwarehouse.ruleSets.update",
      "contentwarehouse.schemas.create",
      "contentwarehouse.schemas.delete",
      "contentwarehouse.schemas.get",
      "contentwarehouse.schemas.list",
      "contentwarehouse.schemas.update",
      "contentwarehouse.synonymSets.create",
      "contentwarehouse.synonymSets.delete",
      "contentwarehouse.synonymSets.get",
      "contentwarehouse.synonymSets.list",
      "contentwarehouse.synonymSets.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/contentwarehouse.documentAdmin",
    "title": "Content Warehouse Document Admin",
    "description": "Grants full access to the document resource in Content Warehouse",
    "includedPermissions": [
      "contentwarehouse.documentSchemas.get",
      "contentwarehouse.documents.create",
      "contentwarehouse.documents.delete",
      "contentwarehouse.documents.get",
      "contentwarehouse.documents.getIamPolicy",
      "contentwarehouse.documents.setIamPolicy",
      "contentwarehouse.documents.update",
      "contentwarehouse.links.create",
      "contentwarehouse.links.delete",
      "contentwarehouse.links.get",
      "contentwarehouse.links.update",
      "contentwarehouse.rawDocuments.download",
      "contentwarehouse.rawDocuments.upload",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/contentwarehouse.documentCreator",
    "title": "Content Warehouse document creator",
    "description": "Grants access to create document in Content Warehouse",
    "includedPermissions": [
      "contentwarehouse.documentSchemas.get",
      "contentwarehouse.documentSchemas.list",
      "contentwarehouse.documents.create",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/contentwarehouse.documentEditor",
    "title": "Content Warehouse Document Editor",
    "description": "Grants access to update document resource in Content Warehouse",
    "includedPermissions": [
      "contentwarehouse.documentSchemas.get",
      "contentwarehouse.documents.get",
      "contentwarehouse.documents.getIamPolicy",
      "contentwarehouse.documents.update",
      "contentwarehouse.links.create",
      "contentwarehouse.links.delete",
      "contentwarehouse.links.get",
      "contentwarehouse.links.update",
      "contentwarehouse.rawDocuments.download",
      "contentwarehouse.rawDocuments.upload",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/contentwarehouse.documentSchemaViewer",
    "title": "Content Warehouse document schema viewer",
    "description": "Grants access to view the document schemas in Content Warehouse",
    "includedPermissions": [
      "contentwarehouse.documentSchemas.get",
      "contentwarehouse.documentSchemas.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/contentwarehouse.documentViewer",
    "title": "Content Warehouse Viewer",
    "description": "Grants access to view all the resources in Content Warehouse",
    "includedPermissions": [
      "contentwarehouse.documentSchemas.get",
      "contentwarehouse.documents.get",
      "contentwarehouse.documents.getIamPolicy",
      "contentwarehouse.links.get",
      "contentwarehouse.rawDocuments.download",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/contentwarehouse.serviceAgent",
    "title": "Content Warehouse Service Agent",
    "description": "Gives the Content Warehouse service account to manage customer resources",
    "includedPermissions": [
      "cloudfunctions.functions.invoke",
      "documentai.datasets.createDocuments",
      "documentai.processors.get",
      "documentai.processors.processBatch",
      "pubsub.topics.publish",
      "pubsublite.topics.publish",
      "storage.buckets.get",
      "storage.buckets.list",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datacatalog.admin",
    "title": "Data Catalog Admin",
    "description": "Full access to all DataCatalog resources",
    "includedPermissions": [
      "bigquery.connections.get",
      "bigquery.connections.updateTag",
      "bigquery.datasets.get",
      "bigquery.datasets.updateTag",
      "bigquery.models.getMetadata",
      "bigquery.models.updateTag",
      "bigquery.routines.get",
      "bigquery.routines.updateTag",
      "bigquery.tables.get",
      "bigquery.tables.updateTag",
      "datacatalog.catalogs.searchAll",
      "datacatalog.categories.getIamPolicy",
      "datacatalog.categories.setIamPolicy",
      "datacatalog.entries.create",
      "datacatalog.entries.createGlossary",
      "datacatalog.entries.createGlossaryCategory",
      "datacatalog.entries.createGlossaryTerm",
      "datacatalog.entries.delete",
      "datacatalog.entries.deleteGlossary",
      "datacatalog.entries.deleteGlossaryCategory",
      "datacatalog.entries.deleteGlossaryTerm",
      "datacatalog.entries.get",
      "datacatalog.entries.getIamPolicy",
      "datacatalog.entries.list",
      "datacatalog.entries.setIamPolicy",
      "datacatalog.entries.update",
      "datacatalog.entries.updateContacts",
      "datacatalog.entries.updateGlossary",
      "datacatalog.entries.updateGlossaryCategory",
      "datacatalog.entries.updateGlossaryTerm",
      "datacatalog.entries.updateOverview",
      "datacatalog.entries.updateTag",
      "datacatalog.entryGroups.create",
      "datacatalog.entryGroups.delete",
      "datacatalog.entryGroups.get",
      "datacatalog.entryGroups.getIamPolicy",
      "datacatalog.entryGroups.list",
      "datacatalog.entryGroups.setIamPolicy",
      "datacatalog.entryGroups.update",
      "datacatalog.entryGroups.updateTag",
      "datacatalog.operations.list",
      "datacatalog.relationships.create",
      "datacatalog.relationships.createBelongsTo",
      "datacatalog.relationships.createIsDescribedBy",
      "datacatalog.relationships.createIsRelatedTo",
      "datacatalog.relationships.createIsSynonymousTo",
      "datacatalog.relationships.delete",
      "datacatalog.relationships.deleteBelongsTo",
      "datacatalog.relationships.deleteIsDescribedBy",
      "datacatalog.relationships.deleteIsRelatedTo",
      "datacatalog.relationships.deleteIsSynonymousTo",
      "datacatalog.relationships.list",
      "datacatalog.tagTemplates.create",
      "datacatalog.tagTemplates.delete",
      "datacatalog.tagTemplates.get",
      "datacatalog.tagTemplates.getIamPolicy",
      "datacatalog.tagTemplates.getTag",
      "datacatalog.tagTemplates.setIamPolicy",
      "datacatalog.tagTemplates.update",
      "datacatalog.tagTemplates.use",
      "datacatalog.taxonomies.create",
      "datacatalog.taxonomies.delete",
      "datacatalog.taxonomies.get",
      "datacatalog.taxonomies.getIamPolicy",
      "datacatalog.taxonomies.list",
      "datacatalog.taxonomies.setIamPolicy",
      "datacatalog.taxonomies.update",
      "pubsub.topics.get",
      "pubsub.topics.updateTag",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datacatalog.categoryAdmin",
    "title": "Policy Tag Admin",
    "description": "Manage taxonomies",
    "includedPermissions": [
      "datacatalog.categories.getIamPolicy",
      "datacatalog.categories.setIamPolicy",
      "datacatalog.taxonomies.create",
      "datacatalog.taxonomies.delete",
      "datacatalog.taxonomies.get",
      "datacatalog.taxonomies.getIamPolicy",
      "datacatalog.taxonomies.list",
      "datacatalog.taxonomies.setIamPolicy",
      "datacatalog.taxonomies.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datacatalog.categoryFineGrainedReader",
    "title": "Fine-Grained Reader",
    "description": "Read access to sub-resources tagged by a policy tag, for example, BigQuery columns",
    "includedPermissions": [
      "datacatalog.categories.fineGrainedGet"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datacatalog.dataSteward",
    "title": "DataCatalog Data Steward",
    "description": "Can update overview and data steward fields",
    "includedPermissions": [
      "datacatalog.entries.get",
      "datacatalog.entries.list",
      "datacatalog.entries.updateContacts",
      "datacatalog.entries.updateOverview",
      "datacatalog.entryGroups.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/datacatalog.entryGroupCreator",
    "title": "DataCatalog EntryGroup Creator",
    "description": "Can create new entryGroups",
    "includedPermissions": [
      "datacatalog.entryGroups.create",
      "datacatalog.entryGroups.get",
      "datacatalog.entryGroups.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datacatalog.entryGroupOwner",
    "title": "DataCatalog EntryGroup Owner",
    "description": "Full access to entryGroups",
    "includedPermissions": [
      "datacatalog.entries.create",
      "datacatalog.entries.createGlossary",
      "datacatalog.entries.createGlossaryCategory",
      "datacatalog.entries.createGlossaryTerm",
      "datacatalog.entries.delete",
      "datacatalog.entries.deleteGlossary",
      "datacatalog.entries.deleteGlossaryCategory",
      "datacatalog.entries.deleteGlossaryTerm",
      "datacatalog.entries.get",
      "datacatalog.entries.getIamPolicy",
      "datacatalog.entries.list",
      "datacatalog.entries.setIamPolicy",
      "datacatalog.entries.update",
      "datacatalog.entries.updateContacts",
      "datacatalog.entries.updateGlossary",
      "datacatalog.entries.updateGlossaryCategory",
      "datacatalog.entries.updateGlossaryTerm",
      "datacatalog.entries.updateOverview",
      "datacatalog.entries.updateTag",
      "datacatalog.entryGroups.create",
      "datacatalog.entryGroups.delete",
      "datacatalog.entryGroups.get",
      "datacatalog.entryGroups.getIamPolicy",
      "datacatalog.entryGroups.list",
      "datacatalog.entryGroups.setIamPolicy",
      "datacatalog.entryGroups.update",
      "datacatalog.entryGroups.updateTag",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datacatalog.entryOwner",
    "title": "DataCatalog Entry Owner",
    "description": "Full access to entries",
    "includedPermissions": [
      "datacatalog.entries.create",
      "datacatalog.entries.createGlossary",
      "datacatalog.entries.createGlossaryCategory",
      "datacatalog.entries.createGlossaryTerm",
      "datacatalog.entries.delete",
      "datacatalog.entries.deleteGlossary",
      "datacatalog.entries.deleteGlossaryCategory",
      "datacatalog.entries.deleteGlossaryTerm",
      "datacatalog.entries.get",
      "datacatalog.entries.getIamPolicy",
      "datacatalog.entries.list",
      "datacatalog.entries.setIamPolicy",
      "datacatalog.entries.update",
      "datacatalog.entries.updateContacts",
      "datacatalog.entries.updateGlossary",
      "datacatalog.entries.updateGlossaryCategory",
      "datacatalog.entries.updateGlossaryTerm",
      "datacatalog.entries.updateOverview",
      "datacatalog.entries.updateTag",
      "datacatalog.entryGroups.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datacatalog.entryViewer",
    "title": "DataCatalog Entry Viewer",
    "description": "Read access to entries",
    "includedPermissions": [
      "datacatalog.entries.get",
      "datacatalog.entries.list",
      "datacatalog.entryGroups.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datacatalog.glossaryOwner",
    "title": "DataCatalog Glossary Owner",
    "description": "Full access to glossaries",
    "includedPermissions": [
      "datacatalog.entries.create",
      "datacatalog.entries.createGlossary",
      "datacatalog.entries.createGlossaryCategory",
      "datacatalog.entries.createGlossaryTerm",
      "datacatalog.entries.delete",
      "datacatalog.entries.deleteGlossary",
      "datacatalog.entries.deleteGlossaryCategory",
      "datacatalog.entries.deleteGlossaryTerm",
      "datacatalog.entries.get",
      "datacatalog.entries.getIamPolicy",
      "datacatalog.entries.list",
      "datacatalog.entries.setIamPolicy",
      "datacatalog.entries.update",
      "datacatalog.entries.updateContacts",
      "datacatalog.entries.updateGlossary",
      "datacatalog.entries.updateGlossaryCategory",
      "datacatalog.entries.updateGlossaryTerm",
      "datacatalog.entries.updateOverview",
      "datacatalog.entries.updateTag",
      "datacatalog.relationships.create",
      "datacatalog.relationships.createBelongsTo",
      "datacatalog.relationships.createIsDescribedBy",
      "datacatalog.relationships.createIsRelatedTo",
      "datacatalog.relationships.createIsSynonymousTo",
      "datacatalog.relationships.delete",
      "datacatalog.relationships.deleteBelongsTo",
      "datacatalog.relationships.deleteIsDescribedBy",
      "datacatalog.relationships.deleteIsRelatedTo",
      "datacatalog.relationships.deleteIsSynonymousTo",
      "datacatalog.relationships.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/datacatalog.glossaryUser",
    "title": "DataCatalog Glossary User",
    "description": "Can view glossaries and associate terms to entries",
    "includedPermissions": [
      "datacatalog.entries.get",
      "datacatalog.entries.list",
      "datacatalog.relationships.create",
      "datacatalog.relationships.createBelongsTo",
      "datacatalog.relationships.createIsDescribedBy",
      "datacatalog.relationships.createIsRelatedTo",
      "datacatalog.relationships.createIsSynonymousTo",
      "datacatalog.relationships.delete",
      "datacatalog.relationships.deleteBelongsTo",
      "datacatalog.relationships.deleteIsDescribedBy",
      "datacatalog.relationships.deleteIsRelatedTo",
      "datacatalog.relationships.deleteIsSynonymousTo",
      "datacatalog.relationships.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/datacatalog.searchAdmin",
    "title": "DataCatalog Search Admin",
    "description": "Can search all metadata for a project/org in DataCatalog",
    "includedPermissions": [
      "datacatalog.catalogs.searchAll",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/datacatalog.tagEditor",
    "title": "Data Catalog Tag Editor",
    "description": "Gives permission to modify tags on a GCP assets (BigQuery, Pub/Sub etc).",
    "includedPermissions": [
      "bigquery.connections.updateTag",
      "bigquery.datasets.updateTag",
      "bigquery.models.updateTag",
      "bigquery.routines.updateTag",
      "bigquery.tables.updateTag",
      "datacatalog.entries.updateTag",
      "datacatalog.entryGroups.updateTag",
      "pubsub.topics.updateTag"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datacatalog.tagTemplateCreator",
    "title": "Data Catalog TagTemplate Creator",
    "description": "Access to create new tag templates",
    "includedPermissions": [
      "datacatalog.tagTemplates.create",
      "datacatalog.tagTemplates.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datacatalog.tagTemplateOwner",
    "title": "Data Catalog TagTemplate Owner",
    "description": "Full acess to tag templates",
    "includedPermissions": [
      "datacatalog.tagTemplates.create",
      "datacatalog.tagTemplates.delete",
      "datacatalog.tagTemplates.get",
      "datacatalog.tagTemplates.getIamPolicy",
      "datacatalog.tagTemplates.getTag",
      "datacatalog.tagTemplates.setIamPolicy",
      "datacatalog.tagTemplates.update",
      "datacatalog.tagTemplates.use",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datacatalog.tagTemplateUser",
    "title": "Data Catalog TagTemplate User",
    "description": "Access to use templates to tag resources",
    "includedPermissions": [
      "datacatalog.tagTemplates.get",
      "datacatalog.tagTemplates.getTag",
      "datacatalog.tagTemplates.use",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datacatalog.tagTemplateViewer",
    "title": "Data Catalog TagTemplate Viewer",
    "description": "Read access to templates and tags created using the templates",
    "includedPermissions": [
      "datacatalog.tagTemplates.get",
      "datacatalog.tagTemplates.getTag",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datacatalog.viewer",
    "title": "Data Catalog Viewer",
    "description": "Grants metadata read permissions to cataloged GCP assets (BigQuery, Pub/Sub etc)",
    "includedPermissions": [
      "bigquery.connections.get",
      "bigquery.datasets.get",
      "bigquery.models.getMetadata",
      "bigquery.routines.get",
      "bigquery.tables.get",
      "datacatalog.entries.get",
      "datacatalog.entries.list",
      "datacatalog.entryGroups.get",
      "datacatalog.entryGroups.list",
      "datacatalog.operations.list",
      "datacatalog.relationships.list",
      "datacatalog.tagTemplates.get",
      "datacatalog.tagTemplates.getTag",
      "datacatalog.taxonomies.get",
      "datacatalog.taxonomies.list",
      "pubsub.topics.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataconnectors.connectorAdmin",
    "title": "Connector Admin",
    "description": "Full access to Data Connectors.",
    "includedPermissions": [
      "dataconnectors.connectors.create",
      "dataconnectors.connectors.delete",
      "dataconnectors.connectors.get",
      "dataconnectors.connectors.getIamPolicy",
      "dataconnectors.connectors.list",
      "dataconnectors.connectors.setIamPolicy",
      "dataconnectors.connectors.update",
      "dataconnectors.connectors.use",
      "dataconnectors.locations.get",
      "dataconnectors.locations.list",
      "dataconnectors.operations.cancel",
      "dataconnectors.operations.delete",
      "dataconnectors.operations.get",
      "dataconnectors.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataconnectors.connectorUser",
    "title": "Connector User",
    "description": "Access to use Data Connectors.",
    "includedPermissions": [
      "dataconnectors.connectors.get",
      "dataconnectors.connectors.getIamPolicy",
      "dataconnectors.connectors.list",
      "dataconnectors.connectors.use"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataconnectors.serviceAgent",
    "title": "Data Connectors Service Agent",
    "description": "Gives Data Connectors service agent permission to access the virtual private cloud",
    "includedPermissions": [
      "compute.globalOperations.get",
      "compute.networks.access",
      "vpcaccess.connectors.get",
      "vpcaccess.connectors.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataflow.admin",
    "title": "Dataflow Admin",
    "description": "Minimal role for creating and managing dataflow jobs.",
    "includedPermissions": [
      "cloudbuild.builds.create",
      "cloudbuild.builds.get",
      "cloudbuild.builds.list",
      "cloudbuild.builds.update",
      "cloudbuild.operations.get",
      "cloudbuild.operations.list",
      "compute.machineTypes.get",
      "compute.projects.get",
      "compute.regions.list",
      "compute.zones.list",
      "dataflow.jobs.cancel",
      "dataflow.jobs.create",
      "dataflow.jobs.get",
      "dataflow.jobs.list",
      "dataflow.jobs.snapshot",
      "dataflow.jobs.updateContents",
      "dataflow.messages.list",
      "dataflow.metrics.get",
      "dataflow.snapshots.delete",
      "dataflow.snapshots.get",
      "dataflow.snapshots.list",
      "recommender.dataflowDiagnosticsInsights.get",
      "recommender.dataflowDiagnosticsInsights.list",
      "recommender.dataflowDiagnosticsInsights.update",
      "remotebuildexecution.blobs.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storage.buckets.get",
      "storage.objects.create",
      "storage.objects.get",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataflow.developer",
    "title": "Dataflow Developer",
    "description": "Full operational access to Dataflow jobs.",
    "includedPermissions": [
      "cloudbuild.builds.create",
      "cloudbuild.builds.get",
      "cloudbuild.builds.list",
      "cloudbuild.builds.update",
      "cloudbuild.operations.get",
      "cloudbuild.operations.list",
      "compute.projects.get",
      "compute.regions.list",
      "compute.zones.list",
      "dataflow.jobs.cancel",
      "dataflow.jobs.create",
      "dataflow.jobs.get",
      "dataflow.jobs.list",
      "dataflow.jobs.snapshot",
      "dataflow.jobs.updateContents",
      "dataflow.messages.list",
      "dataflow.metrics.get",
      "dataflow.snapshots.delete",
      "dataflow.snapshots.get",
      "dataflow.snapshots.list",
      "recommender.dataflowDiagnosticsInsights.get",
      "recommender.dataflowDiagnosticsInsights.list",
      "recommender.dataflowDiagnosticsInsights.update",
      "remotebuildexecution.blobs.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataflow.serviceAgent",
    "title": "Cloud Dataflow Service Agent",
    "description": "Gives Cloud Dataflow service account access to managed resources. Includes access to service accounts.",
    "includedPermissions": [
      "bigquery.bireservations.get",
      "bigquery.bireservations.update",
      "bigquery.capacityCommitments.create",
      "bigquery.capacityCommitments.delete",
      "bigquery.capacityCommitments.get",
      "bigquery.capacityCommitments.list",
      "bigquery.capacityCommitments.update",
      "bigquery.config.get",
      "bigquery.config.update",
      "bigquery.connections.create",
      "bigquery.connections.delegate",
      "bigquery.connections.delete",
      "bigquery.connections.get",
      "bigquery.connections.getIamPolicy",
      "bigquery.connections.list",
      "bigquery.connections.setIamPolicy",
      "bigquery.connections.update",
      "bigquery.connections.updateTag",
      "bigquery.connections.use",
      "bigquery.dataPolicies.create",
      "bigquery.dataPolicies.delete",
      "bigquery.dataPolicies.get",
      "bigquery.dataPolicies.getIamPolicy",
      "bigquery.dataPolicies.list",
      "bigquery.dataPolicies.setIamPolicy",
      "bigquery.dataPolicies.update",
      "bigquery.datasets.create",
      "bigquery.datasets.createTagBinding",
      "bigquery.datasets.delete",
      "bigquery.datasets.deleteTagBinding",
      "bigquery.datasets.get",
      "bigquery.datasets.getIamPolicy",
      "bigquery.datasets.link",
      "bigquery.datasets.listEffectiveTags",
      "bigquery.datasets.listSharedDatasetUsage",
      "bigquery.datasets.listTagBindings",
      "bigquery.datasets.setIamPolicy",
      "bigquery.datasets.update",
      "bigquery.datasets.updateTag",
      "bigquery.jobs.create",
      "bigquery.jobs.delete",
      "bigquery.jobs.get",
      "bigquery.jobs.list",
      "bigquery.jobs.listAll",
      "bigquery.jobs.listExecutionMetadata",
      "bigquery.jobs.update",
      "bigquery.models.create",
      "bigquery.models.delete",
      "bigquery.models.export",
      "bigquery.models.getData",
      "bigquery.models.getMetadata",
      "bigquery.models.list",
      "bigquery.models.updateData",
      "bigquery.models.updateMetadata",
      "bigquery.models.updateTag",
      "bigquery.readsessions.create",
      "bigquery.readsessions.getData",
      "bigquery.readsessions.update",
      "bigquery.reservationAssignments.create",
      "bigquery.reservationAssignments.delete",
      "bigquery.reservationAssignments.list",
      "bigquery.reservationAssignments.search",
      "bigquery.reservations.create",
      "bigquery.reservations.delete",
      "bigquery.reservations.get",
      "bigquery.reservations.list",
      "bigquery.reservations.update",
      "bigquery.routines.create",
      "bigquery.routines.delete",
      "bigquery.routines.get",
      "bigquery.routines.list",
      "bigquery.routines.update",
      "bigquery.routines.updateTag",
      "bigquery.rowAccessPolicies.create",
      "bigquery.rowAccessPolicies.delete",
      "bigquery.rowAccessPolicies.getIamPolicy",
      "bigquery.rowAccessPolicies.list",
      "bigquery.rowAccessPolicies.overrideTimeTravelRestrictions",
      "bigquery.rowAccessPolicies.setIamPolicy",
      "bigquery.rowAccessPolicies.update",
      "bigquery.savedqueries.create",
      "bigquery.savedqueries.delete",
      "bigquery.savedqueries.get",
      "bigquery.savedqueries.list",
      "bigquery.savedqueries.update",
      "bigquery.tables.create",
      "bigquery.tables.createIndex",
      "bigquery.tables.createSnapshot",
      "bigquery.tables.delete",
      "bigquery.tables.deleteIndex",
      "bigquery.tables.deleteSnapshot",
      "bigquery.tables.export",
      "bigquery.tables.get",
      "bigquery.tables.getData",
      "bigquery.tables.getIamPolicy",
      "bigquery.tables.list",
      "bigquery.tables.replicateData",
      "bigquery.tables.restoreSnapshot",
      "bigquery.tables.setCategory",
      "bigquery.tables.setIamPolicy",
      "bigquery.tables.update",
      "bigquery.tables.updateData",
      "bigquery.tables.updateTag",
      "bigquery.transfers.get",
      "bigquery.transfers.update",
      "bigquerymigration.translation.translate",
      "clouddebugger.breakpoints.list",
      "clouddebugger.breakpoints.listActive",
      "clouddebugger.breakpoints.update",
      "clouddebugger.debuggees.create",
      "cloudnotifications.activities.list",
      "compute.acceleratorTypes.get",
      "compute.acceleratorTypes.list",
      "compute.addresses.create",
      "compute.addresses.createInternal",
      "compute.addresses.delete",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.addresses.setLabels",
      "compute.addresses.use",
      "compute.addresses.useInternal",
      "compute.autoscalers.create",
      "compute.autoscalers.delete",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.autoscalers.update",
      "compute.backendBuckets.addSignedUrlKey",
      "compute.backendBuckets.create",
      "compute.backendBuckets.createTagBinding",
      "compute.backendBuckets.delete",
      "compute.backendBuckets.deleteSignedUrlKey",
      "compute.backendBuckets.deleteTagBinding",
      "compute.backendBuckets.get",
      "compute.backendBuckets.getIamPolicy",
      "compute.backendBuckets.list",
      "compute.backendBuckets.listEffectiveTags",
      "compute.backendBuckets.listTagBindings",
      "compute.backendBuckets.setIamPolicy",
      "compute.backendBuckets.setSecurityPolicy",
      "compute.backendBuckets.update",
      "compute.backendBuckets.use",
      "compute.backendServices.addSignedUrlKey",
      "compute.backendServices.create",
      "compute.backendServices.createTagBinding",
      "compute.backendServices.delete",
      "compute.backendServices.deleteSignedUrlKey",
      "compute.backendServices.deleteTagBinding",
      "compute.backendServices.get",
      "compute.backendServices.getIamPolicy",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.backendServices.setIamPolicy",
      "compute.backendServices.setSecurityPolicy",
      "compute.backendServices.update",
      "compute.backendServices.use",
      "compute.diskTypes.get",
      "compute.diskTypes.list",
      "compute.disks.addResourcePolicies",
      "compute.disks.create",
      "compute.disks.createSnapshot",
      "compute.disks.createTagBinding",
      "compute.disks.delete",
      "compute.disks.deleteTagBinding",
      "compute.disks.get",
      "compute.disks.getIamPolicy",
      "compute.disks.list",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.disks.removeResourcePolicies",
      "compute.disks.resize",
      "compute.disks.setIamPolicy",
      "compute.disks.setLabels",
      "compute.disks.startAsyncReplication",
      "compute.disks.stopAsyncReplication",
      "compute.disks.stopGroupAsyncReplication",
      "compute.disks.update",
      "compute.disks.use",
      "compute.disks.useReadOnly",
      "compute.externalVpnGateways.create",
      "compute.externalVpnGateways.delete",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.list",
      "compute.externalVpnGateways.setLabels",
      "compute.externalVpnGateways.use",
      "compute.firewallPolicies.get",
      "compute.firewallPolicies.list",
      "compute.firewallPolicies.listEffectiveTags",
      "compute.firewallPolicies.listTagBindings",
      "compute.firewallPolicies.use",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.forwardingRules.create",
      "compute.forwardingRules.createTagBinding",
      "compute.forwardingRules.delete",
      "compute.forwardingRules.deleteTagBinding",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.forwardingRules.pscCreate",
      "compute.forwardingRules.pscDelete",
      "compute.forwardingRules.pscSetLabels",
      "compute.forwardingRules.pscSetTarget",
      "compute.forwardingRules.pscUpdate",
      "compute.forwardingRules.setLabels",
      "compute.forwardingRules.setTarget",
      "compute.forwardingRules.update",
      "compute.forwardingRules.use",
      "compute.globalAddresses.create",
      "compute.globalAddresses.createInternal",
      "compute.globalAddresses.delete",
      "compute.globalAddresses.deleteInternal",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalAddresses.setLabels",
      "compute.globalAddresses.use",
      "compute.globalForwardingRules.create",
      "compute.globalForwardingRules.createTagBinding",
      "compute.globalForwardingRules.delete",
      "compute.globalForwardingRules.deleteTagBinding",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalForwardingRules.pscCreate",
      "compute.globalForwardingRules.pscDelete",
      "compute.globalForwardingRules.pscGet",
      "compute.globalForwardingRules.pscSetLabels",
      "compute.globalForwardingRules.pscSetTarget",
      "compute.globalForwardingRules.pscUpdate",
      "compute.globalForwardingRules.setLabels",
      "compute.globalForwardingRules.setTarget",
      "compute.globalForwardingRules.update",
      "compute.globalNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.create",
      "compute.globalNetworkEndpointGroups.createTagBinding",
      "compute.globalNetworkEndpointGroups.delete",
      "compute.globalNetworkEndpointGroups.deleteTagBinding",
      "compute.globalNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.get",
      "compute.globalNetworkEndpointGroups.list",
      "compute.globalNetworkEndpointGroups.listEffectiveTags",
      "compute.globalNetworkEndpointGroups.listTagBindings",
      "compute.globalNetworkEndpointGroups.use",
      "compute.globalOperations.get",
      "compute.globalOperations.list",
      "compute.globalPublicDelegatedPrefixes.delete",
      "compute.globalPublicDelegatedPrefixes.get",
      "compute.globalPublicDelegatedPrefixes.list",
      "compute.globalPublicDelegatedPrefixes.update",
      "compute.globalPublicDelegatedPrefixes.updatePolicy",
      "compute.healthChecks.create",
      "compute.healthChecks.createTagBinding",
      "compute.healthChecks.delete",
      "compute.healthChecks.deleteTagBinding",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.healthChecks.update",
      "compute.healthChecks.use",
      "compute.healthChecks.useReadOnly",
      "compute.httpHealthChecks.create",
      "compute.httpHealthChecks.createTagBinding",
      "compute.httpHealthChecks.delete",
      "compute.httpHealthChecks.deleteTagBinding",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpHealthChecks.update",
      "compute.httpHealthChecks.use",
      "compute.httpHealthChecks.useReadOnly",
      "compute.httpsHealthChecks.create",
      "compute.httpsHealthChecks.createTagBinding",
      "compute.httpsHealthChecks.delete",
      "compute.httpsHealthChecks.deleteTagBinding",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.update",
      "compute.httpsHealthChecks.use",
      "compute.httpsHealthChecks.useReadOnly",
      "compute.images.create",
      "compute.images.createTagBinding",
      "compute.images.delete",
      "compute.images.deleteTagBinding",
      "compute.images.deprecate",
      "compute.images.get",
      "compute.images.getFromFamily",
      "compute.images.getIamPolicy",
      "compute.images.list",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.images.setIamPolicy",
      "compute.images.setLabels",
      "compute.images.update",
      "compute.images.useReadOnly",
      "compute.instanceGroupManagers.create",
      "compute.instanceGroupManagers.delete",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroupManagers.update",
      "compute.instanceGroupManagers.use",
      "compute.instanceGroups.create",
      "compute.instanceGroups.delete",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instanceGroups.update",
      "compute.instanceGroups.use",
      "compute.instanceTemplates.create",
      "compute.instanceTemplates.delete",
      "compute.instanceTemplates.get",
      "compute.instanceTemplates.getIamPolicy",
      "compute.instanceTemplates.list",
      "compute.instanceTemplates.setIamPolicy",
      "compute.instanceTemplates.useReadOnly",
      "compute.instances.addAccessConfig",
      "compute.instances.addMaintenancePolicies",
      "compute.instances.addResourcePolicies",
      "compute.instances.attachDisk",
      "compute.instances.create",
      "compute.instances.createTagBinding",
      "compute.instances.delete",
      "compute.instances.deleteAccessConfig",
      "compute.instances.deleteTagBinding",
      "compute.instances.detachDisk",
      "compute.instances.get",
      "compute.instances.getEffectiveFirewalls",
      "compute.instances.getGuestAttributes",
      "compute.instances.getIamPolicy",
      "compute.instances.getScreenshot",
      "compute.instances.getSerialPortOutput",
      "compute.instances.getShieldedInstanceIdentity",
      "compute.instances.getShieldedVmIdentity",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listReferrers",
      "compute.instances.listTagBindings",
      "compute.instances.osAdminLogin",
      "compute.instances.osLogin",
      "compute.instances.removeMaintenancePolicies",
      "compute.instances.removeResourcePolicies",
      "compute.instances.reset",
      "compute.instances.resume",
      "compute.instances.sendDiagnosticInterrupt",
      "compute.instances.setDeletionProtection",
      "compute.instances.setDiskAutoDelete",
      "compute.instances.setIamPolicy",
      "compute.instances.setLabels",
      "compute.instances.setMachineResources",
      "compute.instances.setMachineType",
      "compute.instances.setMetadata",
      "compute.instances.setMinCpuPlatform",
      "compute.instances.setName",
      "compute.instances.setScheduling",
      "compute.instances.setSecurityPolicy",
      "compute.instances.setServiceAccount",
      "compute.instances.setShieldedInstanceIntegrityPolicy",
      "compute.instances.setShieldedVmIntegrityPolicy",
      "compute.instances.setTags",
      "compute.instances.simulateMaintenanceEvent",
      "compute.instances.start",
      "compute.instances.startWithEncryptionKey",
      "compute.instances.stop",
      "compute.instances.suspend",
      "compute.instances.update",
      "compute.instances.updateAccessConfig",
      "compute.instances.updateDisplayDevice",
      "compute.instances.updateNetworkInterface",
      "compute.instances.updateSecurity",
      "compute.instances.updateShieldedInstanceConfig",
      "compute.instances.updateShieldedVmConfig",
      "compute.instances.use",
      "compute.instances.useReadOnly",
      "compute.instantSnapshots.create",
      "compute.instantSnapshots.delete",
      "compute.instantSnapshots.export",
      "compute.instantSnapshots.get",
      "compute.instantSnapshots.getIamPolicy",
      "compute.instantSnapshots.list",
      "compute.instantSnapshots.setIamPolicy",
      "compute.instantSnapshots.setLabels",
      "compute.instantSnapshots.useReadOnly",
      "compute.interconnectAttachments.create",
      "compute.interconnectAttachments.delete",
      "compute.interconnectAttachments.get",
      "compute.interconnectAttachments.list",
      "compute.interconnectAttachments.setLabels",
      "compute.interconnectAttachments.update",
      "compute.interconnectAttachments.use",
      "compute.interconnectLocations.get",
      "compute.interconnectLocations.list",
      "compute.interconnectRemoteLocations.get",
      "compute.interconnectRemoteLocations.list",
      "compute.interconnects.create",
      "compute.interconnects.delete",
      "compute.interconnects.get",
      "compute.interconnects.list",
      "compute.interconnects.setLabels",
      "compute.interconnects.update",
      "compute.interconnects.use",
      "compute.licenseCodes.get",
      "compute.licenseCodes.getIamPolicy",
      "compute.licenseCodes.list",
      "compute.licenseCodes.setIamPolicy",
      "compute.licenseCodes.update",
      "compute.licenseCodes.use",
      "compute.licenses.create",
      "compute.licenses.delete",
      "compute.licenses.get",
      "compute.licenses.getIamPolicy",
      "compute.licenses.list",
      "compute.licenses.setIamPolicy",
      "compute.machineImages.create",
      "compute.machineImages.delete",
      "compute.machineImages.get",
      "compute.machineImages.getIamPolicy",
      "compute.machineImages.list",
      "compute.machineImages.setIamPolicy",
      "compute.machineImages.useReadOnly",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.networkAttachments.create",
      "compute.networkAttachments.delete",
      "compute.networkAttachments.get",
      "compute.networkAttachments.getIamPolicy",
      "compute.networkAttachments.list",
      "compute.networkAttachments.setIamPolicy",
      "compute.networkEndpointGroups.attachNetworkEndpoints",
      "compute.networkEndpointGroups.create",
      "compute.networkEndpointGroups.createTagBinding",
      "compute.networkEndpointGroups.delete",
      "compute.networkEndpointGroups.deleteTagBinding",
      "compute.networkEndpointGroups.detachNetworkEndpoints",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.getIamPolicy",
      "compute.networkEndpointGroups.list",
      "compute.networkEndpointGroups.listEffectiveTags",
      "compute.networkEndpointGroups.listTagBindings",
      "compute.networkEndpointGroups.setIamPolicy",
      "compute.networkEndpointGroups.use",
      "compute.networks.access",
      "compute.networks.addPeering",
      "compute.networks.create",
      "compute.networks.createTagBinding",
      "compute.networks.delete",
      "compute.networks.deleteTagBinding",
      "compute.networks.get",
      "compute.networks.getEffectiveFirewalls",
      "compute.networks.getRegionEffectiveFirewalls",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listPeeringRoutes",
      "compute.networks.listTagBindings",
      "compute.networks.mirror",
      "compute.networks.removePeering",
      "compute.networks.setFirewallPolicy",
      "compute.networks.switchToCustomMode",
      "compute.networks.update",
      "compute.networks.updatePeering",
      "compute.networks.updatePolicy",
      "compute.networks.use",
      "compute.networks.useExternalIp",
      "compute.packetMirrorings.get",
      "compute.packetMirrorings.list",
      "compute.projects.get",
      "compute.publicDelegatedPrefixes.delete",
      "compute.publicDelegatedPrefixes.get",
      "compute.publicDelegatedPrefixes.list",
      "compute.publicDelegatedPrefixes.update",
      "compute.publicDelegatedPrefixes.updatePolicy",
      "compute.regionBackendServices.create",
      "compute.regionBackendServices.createTagBinding",
      "compute.regionBackendServices.delete",
      "compute.regionBackendServices.deleteTagBinding",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.getIamPolicy",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionBackendServices.setIamPolicy",
      "compute.regionBackendServices.setSecurityPolicy",
      "compute.regionBackendServices.update",
      "compute.regionBackendServices.use",
      "compute.regionFirewallPolicies.get",
      "compute.regionFirewallPolicies.list",
      "compute.regionFirewallPolicies.listEffectiveTags",
      "compute.regionFirewallPolicies.listTagBindings",
      "compute.regionFirewallPolicies.use",
      "compute.regionHealthCheckServices.create",
      "compute.regionHealthCheckServices.delete",
      "compute.regionHealthCheckServices.get",
      "compute.regionHealthCheckServices.list",
      "compute.regionHealthCheckServices.update",
      "compute.regionHealthCheckServices.use",
      "compute.regionHealthChecks.create",
      "compute.regionHealthChecks.createTagBinding",
      "compute.regionHealthChecks.delete",
      "compute.regionHealthChecks.deleteTagBinding",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionHealthChecks.update",
      "compute.regionHealthChecks.use",
      "compute.regionHealthChecks.useReadOnly",
      "compute.regionNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.create",
      "compute.regionNetworkEndpointGroups.createTagBinding",
      "compute.regionNetworkEndpointGroups.delete",
      "compute.regionNetworkEndpointGroups.deleteTagBinding",
      "compute.regionNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionNetworkEndpointGroups.listEffectiveTags",
      "compute.regionNetworkEndpointGroups.listTagBindings",
      "compute.regionNetworkEndpointGroups.use",
      "compute.regionNotificationEndpoints.create",
      "compute.regionNotificationEndpoints.delete",
      "compute.regionNotificationEndpoints.get",
      "compute.regionNotificationEndpoints.list",
      "compute.regionNotificationEndpoints.update",
      "compute.regionNotificationEndpoints.use",
      "compute.regionOperations.get",
      "compute.regionOperations.list",
      "compute.regionSecurityPolicies.get",
      "compute.regionSecurityPolicies.list",
      "compute.regionSecurityPolicies.listEffectiveTags",
      "compute.regionSecurityPolicies.listTagBindings",
      "compute.regionSecurityPolicies.use",
      "compute.regionSslCertificates.get",
      "compute.regionSslCertificates.list",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionSslPolicies.create",
      "compute.regionSslPolicies.delete",
      "compute.regionSslPolicies.get",
      "compute.regionSslPolicies.list",
      "compute.regionSslPolicies.listAvailableFeatures",
      "compute.regionSslPolicies.update",
      "compute.regionSslPolicies.use",
      "compute.regionTargetHttpProxies.create",
      "compute.regionTargetHttpProxies.createTagBinding",
      "compute.regionTargetHttpProxies.delete",
      "compute.regionTargetHttpProxies.deleteTagBinding",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpProxies.setUrlMap",
      "compute.regionTargetHttpProxies.update",
      "compute.regionTargetHttpProxies.use",
      "compute.regionTargetHttpsProxies.create",
      "compute.regionTargetHttpsProxies.createTagBinding",
      "compute.regionTargetHttpsProxies.delete",
      "compute.regionTargetHttpsProxies.deleteTagBinding",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.setSslCertificates",
      "compute.regionTargetHttpsProxies.setUrlMap",
      "compute.regionTargetHttpsProxies.update",
      "compute.regionTargetHttpsProxies.use",
      "compute.regionTargetTcpProxies.create",
      "compute.regionTargetTcpProxies.delete",
      "compute.regionTargetTcpProxies.get",
      "compute.regionTargetTcpProxies.list",
      "compute.regionTargetTcpProxies.use",
      "compute.regionUrlMaps.create",
      "compute.regionUrlMaps.createTagBinding",
      "compute.regionUrlMaps.delete",
      "compute.regionUrlMaps.deleteTagBinding",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.invalidateCache",
      "compute.regionUrlMaps.list",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.regionUrlMaps.update",
      "compute.regionUrlMaps.use",
      "compute.regionUrlMaps.validate",
      "compute.regions.get",
      "compute.regions.list",
      "compute.reservations.get",
      "compute.reservations.list",
      "compute.resourcePolicies.create",
      "compute.resourcePolicies.delete",
      "compute.resourcePolicies.get",
      "compute.resourcePolicies.getIamPolicy",
      "compute.resourcePolicies.list",
      "compute.resourcePolicies.setIamPolicy",
      "compute.resourcePolicies.update",
      "compute.resourcePolicies.use",
      "compute.resourcePolicies.useReadOnly",
      "compute.routers.create",
      "compute.routers.delete",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routers.update",
      "compute.routers.use",
      "compute.routes.create",
      "compute.routes.createTagBinding",
      "compute.routes.delete",
      "compute.routes.deleteTagBinding",
      "compute.routes.get",
      "compute.routes.list",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.securityPolicies.get",
      "compute.securityPolicies.list",
      "compute.securityPolicies.listEffectiveTags",
      "compute.securityPolicies.listTagBindings",
      "compute.securityPolicies.use",
      "compute.serviceAttachments.create",
      "compute.serviceAttachments.delete",
      "compute.serviceAttachments.get",
      "compute.serviceAttachments.getIamPolicy",
      "compute.serviceAttachments.list",
      "compute.serviceAttachments.setIamPolicy",
      "compute.serviceAttachments.update",
      "compute.serviceAttachments.use",
      "compute.snapshots.create",
      "compute.snapshots.createTagBinding",
      "compute.snapshots.delete",
      "compute.snapshots.deleteTagBinding",
      "compute.snapshots.get",
      "compute.snapshots.getIamPolicy",
      "compute.snapshots.list",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.snapshots.setIamPolicy",
      "compute.snapshots.setLabels",
      "compute.snapshots.useReadOnly",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.create",
      "compute.sslPolicies.createTagBinding",
      "compute.sslPolicies.delete",
      "compute.sslPolicies.deleteTagBinding",
      "compute.sslPolicies.get",
      "compute.sslPolicies.list",
      "compute.sslPolicies.listAvailableFeatures",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.sslPolicies.update",
      "compute.sslPolicies.use",
      "compute.subnetworks.create",
      "compute.subnetworks.createTagBinding",
      "compute.subnetworks.delete",
      "compute.subnetworks.deleteTagBinding",
      "compute.subnetworks.expandIpCidrRange",
      "compute.subnetworks.get",
      "compute.subnetworks.getIamPolicy",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.subnetworks.mirror",
      "compute.subnetworks.setIamPolicy",
      "compute.subnetworks.setPrivateIpGoogleAccess",
      "compute.subnetworks.update",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.targetGrpcProxies.create",
      "compute.targetGrpcProxies.delete",
      "compute.targetGrpcProxies.get",
      "compute.targetGrpcProxies.list",
      "compute.targetGrpcProxies.update",
      "compute.targetGrpcProxies.use",
      "compute.targetHttpProxies.create",
      "compute.targetHttpProxies.createTagBinding",
      "compute.targetHttpProxies.delete",
      "compute.targetHttpProxies.deleteTagBinding",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpProxies.setUrlMap",
      "compute.targetHttpProxies.update",
      "compute.targetHttpProxies.use",
      "compute.targetHttpsProxies.create",
      "compute.targetHttpsProxies.createTagBinding",
      "compute.targetHttpsProxies.delete",
      "compute.targetHttpsProxies.deleteTagBinding",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetHttpsProxies.setCertificateMap",
      "compute.targetHttpsProxies.setQuicOverride",
      "compute.targetHttpsProxies.setSslCertificates",
      "compute.targetHttpsProxies.setSslPolicy",
      "compute.targetHttpsProxies.setUrlMap",
      "compute.targetHttpsProxies.update",
      "compute.targetHttpsProxies.use",
      "compute.targetInstances.create",
      "compute.targetInstances.createTagBinding",
      "compute.targetInstances.delete",
      "compute.targetInstances.deleteTagBinding",
      "compute.targetInstances.get",
      "compute.targetInstances.list",
      "compute.targetInstances.listEffectiveTags",
      "compute.targetInstances.listTagBindings",
      "compute.targetInstances.setSecurityPolicy",
      "compute.targetInstances.use",
      "compute.targetPools.addHealthCheck",
      "compute.targetPools.addInstance",
      "compute.targetPools.create",
      "compute.targetPools.createTagBinding",
      "compute.targetPools.delete",
      "compute.targetPools.deleteTagBinding",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.targetPools.removeHealthCheck",
      "compute.targetPools.removeInstance",
      "compute.targetPools.setSecurityPolicy",
      "compute.targetPools.update",
      "compute.targetPools.use",
      "compute.targetSslProxies.create",
      "compute.targetSslProxies.createTagBinding",
      "compute.targetSslProxies.delete",
      "compute.targetSslProxies.deleteTagBinding",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetSslProxies.listEffectiveTags",
      "compute.targetSslProxies.listTagBindings",
      "compute.targetSslProxies.setBackendService",
      "compute.targetSslProxies.setCertificateMap",
      "compute.targetSslProxies.setProxyHeader",
      "compute.targetSslProxies.setSslCertificates",
      "compute.targetSslProxies.setSslPolicy",
      "compute.targetSslProxies.update",
      "compute.targetSslProxies.use",
      "compute.targetTcpProxies.create",
      "compute.targetTcpProxies.createTagBinding",
      "compute.targetTcpProxies.delete",
      "compute.targetTcpProxies.deleteTagBinding",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.targetTcpProxies.update",
      "compute.targetTcpProxies.use",
      "compute.targetVpnGateways.create",
      "compute.targetVpnGateways.delete",
      "compute.targetVpnGateways.get",
      "compute.targetVpnGateways.list",
      "compute.targetVpnGateways.setLabels",
      "compute.targetVpnGateways.use",
      "compute.urlMaps.create",
      "compute.urlMaps.createTagBinding",
      "compute.urlMaps.delete",
      "compute.urlMaps.deleteTagBinding",
      "compute.urlMaps.get",
      "compute.urlMaps.invalidateCache",
      "compute.urlMaps.list",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "compute.urlMaps.update",
      "compute.urlMaps.use",
      "compute.urlMaps.validate",
      "compute.vpnGateways.create",
      "compute.vpnGateways.delete",
      "compute.vpnGateways.get",
      "compute.vpnGateways.list",
      "compute.vpnGateways.setLabels",
      "compute.vpnGateways.use",
      "compute.vpnTunnels.create",
      "compute.vpnTunnels.delete",
      "compute.vpnTunnels.get",
      "compute.vpnTunnels.list",
      "compute.vpnTunnels.setLabels",
      "compute.zoneOperations.get",
      "compute.zoneOperations.list",
      "compute.zones.get",
      "compute.zones.list",
      "dataflow.jobs.cancel",
      "dataflow.jobs.create",
      "dataflow.jobs.get",
      "dataflow.jobs.list",
      "dataflow.jobs.snapshot",
      "dataflow.jobs.updateContents",
      "dataflow.messages.list",
      "dataflow.metrics.get",
      "dataflow.snapshots.delete",
      "dataflow.snapshots.get",
      "dataflow.snapshots.list",
      "firebase.projects.get",
      "iam.serviceAccounts.actAs",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.getAccessToken",
      "iam.serviceAccounts.implicitDelegation",
      "iam.serviceAccounts.list",
      "iam.serviceAccounts.signBlob",
      "iam.serviceAccounts.signJwt",
      "logging.buckets.create",
      "logging.buckets.delete",
      "logging.buckets.get",
      "logging.buckets.list",
      "logging.buckets.undelete",
      "logging.buckets.update",
      "logging.exclusions.create",
      "logging.exclusions.delete",
      "logging.exclusions.get",
      "logging.exclusions.list",
      "logging.exclusions.update",
      "logging.links.create",
      "logging.links.delete",
      "logging.links.get",
      "logging.links.list",
      "logging.locations.get",
      "logging.locations.list",
      "logging.logEntries.create",
      "logging.logEntries.route",
      "logging.logMetrics.create",
      "logging.logMetrics.delete",
      "logging.logMetrics.get",
      "logging.logMetrics.list",
      "logging.logMetrics.update",
      "logging.logServiceIndexes.list",
      "logging.logServices.list",
      "logging.logs.list",
      "logging.notificationRules.create",
      "logging.notificationRules.delete",
      "logging.notificationRules.get",
      "logging.notificationRules.list",
      "logging.notificationRules.update",
      "logging.operations.cancel",
      "logging.operations.get",
      "logging.operations.list",
      "logging.settings.get",
      "logging.settings.update",
      "logging.sinks.create",
      "logging.sinks.delete",
      "logging.sinks.get",
      "logging.sinks.list",
      "logging.sinks.update",
      "logging.views.create",
      "logging.views.delete",
      "logging.views.get",
      "logging.views.list",
      "logging.views.update",
      "monitoring.alertPolicies.get",
      "monitoring.alertPolicies.list",
      "monitoring.dashboards.get",
      "monitoring.dashboards.list",
      "monitoring.groups.get",
      "monitoring.groups.list",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.notificationChannelDescriptors.get",
      "monitoring.notificationChannelDescriptors.list",
      "monitoring.notificationChannels.get",
      "monitoring.notificationChannels.list",
      "monitoring.publicWidgets.get",
      "monitoring.publicWidgets.list",
      "monitoring.services.get",
      "monitoring.services.list",
      "monitoring.slos.get",
      "monitoring.slos.list",
      "monitoring.snoozes.get",
      "monitoring.snoozes.list",
      "monitoring.timeSeries.create",
      "monitoring.timeSeries.list",
      "monitoring.uptimeCheckConfigs.get",
      "monitoring.uptimeCheckConfigs.list",
      "networkconnectivity.internalRanges.create",
      "networkconnectivity.internalRanges.delete",
      "networkconnectivity.internalRanges.get",
      "networkconnectivity.internalRanges.getIamPolicy",
      "networkconnectivity.internalRanges.list",
      "networkconnectivity.internalRanges.setIamPolicy",
      "networkconnectivity.internalRanges.update",
      "networkconnectivity.locations.get",
      "networkconnectivity.locations.list",
      "networkconnectivity.operations.cancel",
      "networkconnectivity.operations.delete",
      "networkconnectivity.operations.get",
      "networkconnectivity.operations.list",
      "networkconnectivity.policyBasedRoutes.create",
      "networkconnectivity.policyBasedRoutes.delete",
      "networkconnectivity.policyBasedRoutes.get",
      "networkconnectivity.policyBasedRoutes.getIamPolicy",
      "networkconnectivity.policyBasedRoutes.list",
      "networkconnectivity.policyBasedRoutes.setIamPolicy",
      "networkconnectivity.serviceClasses.create",
      "networkconnectivity.serviceClasses.delete",
      "networkconnectivity.serviceClasses.get",
      "networkconnectivity.serviceClasses.list",
      "networkconnectivity.serviceClasses.update",
      "networkconnectivity.serviceClasses.use",
      "networkconnectivity.serviceConnectionMaps.create",
      "networkconnectivity.serviceConnectionMaps.delete",
      "networkconnectivity.serviceConnectionMaps.get",
      "networkconnectivity.serviceConnectionMaps.list",
      "networkconnectivity.serviceConnectionMaps.update",
      "networkconnectivity.serviceConnectionPolicies.create",
      "networkconnectivity.serviceConnectionPolicies.delete",
      "networkconnectivity.serviceConnectionPolicies.get",
      "networkconnectivity.serviceConnectionPolicies.list",
      "networkconnectivity.serviceConnectionPolicies.update",
      "networksecurity.authorizationPolicies.create",
      "networksecurity.authorizationPolicies.delete",
      "networksecurity.authorizationPolicies.get",
      "networksecurity.authorizationPolicies.getIamPolicy",
      "networksecurity.authorizationPolicies.list",
      "networksecurity.authorizationPolicies.setIamPolicy",
      "networksecurity.authorizationPolicies.update",
      "networksecurity.authorizationPolicies.use",
      "networksecurity.clientTlsPolicies.create",
      "networksecurity.clientTlsPolicies.delete",
      "networksecurity.clientTlsPolicies.get",
      "networksecurity.clientTlsPolicies.getIamPolicy",
      "networksecurity.clientTlsPolicies.list",
      "networksecurity.clientTlsPolicies.setIamPolicy",
      "networksecurity.clientTlsPolicies.update",
      "networksecurity.clientTlsPolicies.use",
      "networksecurity.firewallEndpointAssociations.create",
      "networksecurity.firewallEndpointAssociations.delete",
      "networksecurity.firewallEndpointAssociations.get",
      "networksecurity.firewallEndpointAssociations.list",
      "networksecurity.firewallEndpointAssociations.update",
      "networksecurity.firewallEndpoints.create",
      "networksecurity.firewallEndpoints.delete",
      "networksecurity.firewallEndpoints.get",
      "networksecurity.firewallEndpoints.list",
      "networksecurity.firewallEndpoints.update",
      "networksecurity.firewallEndpoints.use",
      "networksecurity.gatewaySecurityPolicies.create",
      "networksecurity.gatewaySecurityPolicies.delete",
      "networksecurity.gatewaySecurityPolicies.get",
      "networksecurity.gatewaySecurityPolicies.list",
      "networksecurity.gatewaySecurityPolicies.update",
      "networksecurity.gatewaySecurityPolicies.use",
      "networksecurity.gatewaySecurityPolicyRules.create",
      "networksecurity.gatewaySecurityPolicyRules.delete",
      "networksecurity.gatewaySecurityPolicyRules.get",
      "networksecurity.gatewaySecurityPolicyRules.list",
      "networksecurity.gatewaySecurityPolicyRules.update",
      "networksecurity.gatewaySecurityPolicyRules.use",
      "networksecurity.locations.get",
      "networksecurity.locations.list",
      "networksecurity.operations.cancel",
      "networksecurity.operations.delete",
      "networksecurity.operations.get",
      "networksecurity.operations.list",
      "networksecurity.securityProfileGroups.create",
      "networksecurity.securityProfileGroups.delete",
      "networksecurity.securityProfileGroups.get",
      "networksecurity.securityProfileGroups.list",
      "networksecurity.securityProfileGroups.update",
      "networksecurity.securityProfileGroups.use",
      "networksecurity.securityProfiles.create",
      "networksecurity.securityProfiles.delete",
      "networksecurity.securityProfiles.get",
      "networksecurity.securityProfiles.list",
      "networksecurity.securityProfiles.update",
      "networksecurity.securityProfiles.use",
      "networksecurity.serverTlsPolicies.create",
      "networksecurity.serverTlsPolicies.delete",
      "networksecurity.serverTlsPolicies.get",
      "networksecurity.serverTlsPolicies.getIamPolicy",
      "networksecurity.serverTlsPolicies.list",
      "networksecurity.serverTlsPolicies.setIamPolicy",
      "networksecurity.serverTlsPolicies.update",
      "networksecurity.serverTlsPolicies.use",
      "networksecurity.tlsInspectionPolicies.create",
      "networksecurity.tlsInspectionPolicies.delete",
      "networksecurity.tlsInspectionPolicies.get",
      "networksecurity.tlsInspectionPolicies.list",
      "networksecurity.tlsInspectionPolicies.update",
      "networksecurity.tlsInspectionPolicies.use",
      "networksecurity.urlLists.create",
      "networksecurity.urlLists.delete",
      "networksecurity.urlLists.get",
      "networksecurity.urlLists.list",
      "networksecurity.urlLists.update",
      "networksecurity.urlLists.use",
      "networkservices.endpointConfigSelectors.create",
      "networkservices.endpointConfigSelectors.delete",
      "networkservices.endpointConfigSelectors.get",
      "networkservices.endpointConfigSelectors.getIamPolicy",
      "networkservices.endpointConfigSelectors.list",
      "networkservices.endpointConfigSelectors.setIamPolicy",
      "networkservices.endpointConfigSelectors.update",
      "networkservices.endpointConfigSelectors.use",
      "networkservices.endpointPolicies.create",
      "networkservices.endpointPolicies.delete",
      "networkservices.endpointPolicies.get",
      "networkservices.endpointPolicies.getIamPolicy",
      "networkservices.endpointPolicies.list",
      "networkservices.endpointPolicies.setIamPolicy",
      "networkservices.endpointPolicies.update",
      "networkservices.endpointPolicies.use",
      "networkservices.gateways.create",
      "networkservices.gateways.delete",
      "networkservices.gateways.get",
      "networkservices.gateways.list",
      "networkservices.gateways.update",
      "networkservices.gateways.use",
      "networkservices.grpcRoutes.create",
      "networkservices.grpcRoutes.delete",
      "networkservices.grpcRoutes.get",
      "networkservices.grpcRoutes.getIamPolicy",
      "networkservices.grpcRoutes.list",
      "networkservices.grpcRoutes.setIamPolicy",
      "networkservices.grpcRoutes.update",
      "networkservices.grpcRoutes.use",
      "networkservices.httpFilters.create",
      "networkservices.httpFilters.delete",
      "networkservices.httpFilters.get",
      "networkservices.httpFilters.getIamPolicy",
      "networkservices.httpFilters.list",
      "networkservices.httpFilters.setIamPolicy",
      "networkservices.httpFilters.update",
      "networkservices.httpFilters.use",
      "networkservices.httpRoutes.create",
      "networkservices.httpRoutes.delete",
      "networkservices.httpRoutes.get",
      "networkservices.httpRoutes.getIamPolicy",
      "networkservices.httpRoutes.list",
      "networkservices.httpRoutes.setIamPolicy",
      "networkservices.httpRoutes.update",
      "networkservices.httpRoutes.use",
      "networkservices.httpfilters.create",
      "networkservices.httpfilters.delete",
      "networkservices.httpfilters.get",
      "networkservices.httpfilters.getIamPolicy",
      "networkservices.httpfilters.list",
      "networkservices.httpfilters.setIamPolicy",
      "networkservices.httpfilters.update",
      "networkservices.httpfilters.use",
      "networkservices.locations.get",
      "networkservices.locations.list",
      "networkservices.meshes.create",
      "networkservices.meshes.delete",
      "networkservices.meshes.get",
      "networkservices.meshes.getIamPolicy",
      "networkservices.meshes.list",
      "networkservices.meshes.setIamPolicy",
      "networkservices.meshes.update",
      "networkservices.meshes.use",
      "networkservices.operations.cancel",
      "networkservices.operations.delete",
      "networkservices.operations.get",
      "networkservices.operations.list",
      "networkservices.serviceBindings.create",
      "networkservices.serviceBindings.delete",
      "networkservices.serviceBindings.get",
      "networkservices.serviceBindings.list",
      "networkservices.serviceBindings.update",
      "networkservices.tcpRoutes.create",
      "networkservices.tcpRoutes.delete",
      "networkservices.tcpRoutes.get",
      "networkservices.tcpRoutes.getIamPolicy",
      "networkservices.tcpRoutes.list",
      "networkservices.tcpRoutes.setIamPolicy",
      "networkservices.tcpRoutes.update",
      "networkservices.tcpRoutes.use",
      "networkservices.tlsRoutes.create",
      "networkservices.tlsRoutes.delete",
      "networkservices.tlsRoutes.get",
      "networkservices.tlsRoutes.list",
      "networkservices.tlsRoutes.update",
      "networkservices.tlsRoutes.use",
      "opsconfigmonitoring.resourceMetadata.list",
      "orgpolicy.policy.get",
      "pubsub.schemas.attach",
      "pubsub.schemas.commit",
      "pubsub.schemas.create",
      "pubsub.schemas.delete",
      "pubsub.schemas.get",
      "pubsub.schemas.getIamPolicy",
      "pubsub.schemas.list",
      "pubsub.schemas.listRevisions",
      "pubsub.schemas.rollback",
      "pubsub.schemas.setIamPolicy",
      "pubsub.schemas.validate",
      "pubsub.snapshots.create",
      "pubsub.snapshots.delete",
      "pubsub.snapshots.get",
      "pubsub.snapshots.getIamPolicy",
      "pubsub.snapshots.list",
      "pubsub.snapshots.seek",
      "pubsub.snapshots.setIamPolicy",
      "pubsub.snapshots.update",
      "pubsub.subscriptions.consume",
      "pubsub.subscriptions.create",
      "pubsub.subscriptions.delete",
      "pubsub.subscriptions.get",
      "pubsub.subscriptions.getIamPolicy",
      "pubsub.subscriptions.list",
      "pubsub.subscriptions.setIamPolicy",
      "pubsub.subscriptions.update",
      "pubsub.topics.attachSubscription",
      "pubsub.topics.create",
      "pubsub.topics.delete",
      "pubsub.topics.detachSubscription",
      "pubsub.topics.get",
      "pubsub.topics.getIamPolicy",
      "pubsub.topics.list",
      "pubsub.topics.publish",
      "pubsub.topics.setIamPolicy",
      "pubsub.topics.update",
      "pubsub.topics.updateTag",
      "recommender.dataflowDiagnosticsInsights.get",
      "recommender.dataflowDiagnosticsInsights.list",
      "recommender.dataflowDiagnosticsInsights.update",
      "recommender.iamPolicyInsights.get",
      "recommender.iamPolicyInsights.list",
      "recommender.iamPolicyInsights.update",
      "recommender.iamPolicyRecommendations.get",
      "recommender.iamPolicyRecommendations.list",
      "recommender.iamPolicyRecommendations.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "servicedirectory.namespaces.create",
      "servicedirectory.namespaces.delete",
      "servicedirectory.services.create",
      "servicedirectory.services.delete",
      "servicenetworking.operations.get",
      "servicenetworking.services.addPeering",
      "servicenetworking.services.createPeeredDnsDomain",
      "servicenetworking.services.deleteConnection",
      "servicenetworking.services.deletePeeredDnsDomain",
      "servicenetworking.services.disableVpcServiceControls",
      "servicenetworking.services.enableVpcServiceControls",
      "servicenetworking.services.get",
      "servicenetworking.services.listPeeredDnsDomains",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "serviceusage.services.use",
      "stackdriver.projects.get",
      "stackdriver.resourceMetadata.list",
      "storage.buckets.create",
      "storage.buckets.createTagBinding",
      "storage.buckets.delete",
      "storage.buckets.deleteTagBinding",
      "storage.buckets.get",
      "storage.buckets.getIamPolicy",
      "storage.buckets.getObjectInsights",
      "storage.buckets.list",
      "storage.buckets.listEffectiveTags",
      "storage.buckets.listTagBindings",
      "storage.buckets.setIamPolicy",
      "storage.buckets.update",
      "storage.multipartUploads.abort",
      "storage.multipartUploads.create",
      "storage.multipartUploads.list",
      "storage.multipartUploads.listParts",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.getIamPolicy",
      "storage.objects.list",
      "storage.objects.setIamPolicy",
      "storage.objects.update",
      "trafficdirector.networks.getConfigs",
      "trafficdirector.networks.reportMetrics"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataflow.viewer",
    "title": "Dataflow Viewer",
    "description": "Read only access to Dataflow jobs.",
    "includedPermissions": [
      "dataflow.jobs.get",
      "dataflow.jobs.list",
      "dataflow.messages.list",
      "dataflow.metrics.get",
      "dataflow.snapshots.get",
      "dataflow.snapshots.list",
      "recommender.dataflowDiagnosticsInsights.get",
      "recommender.dataflowDiagnosticsInsights.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataflow.worker",
    "title": "Dataflow Worker",
    "description": "Worker access to Dataflow.  Intended for service accounts.",
    "includedPermissions": [
      "autoscaling.sites.readRecommendations",
      "autoscaling.sites.writeMetrics",
      "autoscaling.sites.writeState",
      "compute.instanceGroupManagers.update",
      "compute.instances.delete",
      "compute.instances.setDiskAutoDelete",
      "dataflow.jobs.get",
      "dataflow.shuffle.read",
      "dataflow.shuffle.write",
      "dataflow.streamingWorkItems.ImportState",
      "dataflow.streamingWorkItems.commitWork",
      "dataflow.streamingWorkItems.getData",
      "dataflow.streamingWorkItems.getWork",
      "dataflow.streamingWorkItems.getWorkerMetadata",
      "dataflow.workItems.lease",
      "dataflow.workItems.sendMessage",
      "dataflow.workItems.update",
      "logging.logEntries.create",
      "logging.logEntries.route",
      "monitoring.timeSeries.create",
      "storage.buckets.get",
      "storage.objects.create",
      "storage.objects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataform.admin",
    "title": "Dataform Admin",
    "description": "Full access to all Dataform resources.",
    "includedPermissions": [
      "dataform.compilationResults.create",
      "dataform.compilationResults.get",
      "dataform.compilationResults.list",
      "dataform.compilationResults.query",
      "dataform.locations.get",
      "dataform.locations.list",
      "dataform.releaseConfigs.create",
      "dataform.releaseConfigs.delete",
      "dataform.releaseConfigs.get",
      "dataform.releaseConfigs.list",
      "dataform.releaseConfigs.update",
      "dataform.repositories.commit",
      "dataform.repositories.computeAccessTokenStatus",
      "dataform.repositories.create",
      "dataform.repositories.delete",
      "dataform.repositories.fetchHistory",
      "dataform.repositories.fetchRemoteBranches",
      "dataform.repositories.get",
      "dataform.repositories.getIamPolicy",
      "dataform.repositories.list",
      "dataform.repositories.queryDirectoryContents",
      "dataform.repositories.readFile",
      "dataform.repositories.setIamPolicy",
      "dataform.repositories.update",
      "dataform.workflowConfigs.create",
      "dataform.workflowConfigs.delete",
      "dataform.workflowConfigs.get",
      "dataform.workflowConfigs.list",
      "dataform.workflowConfigs.update",
      "dataform.workflowInvocations.cancel",
      "dataform.workflowInvocations.create",
      "dataform.workflowInvocations.delete",
      "dataform.workflowInvocations.get",
      "dataform.workflowInvocations.list",
      "dataform.workflowInvocations.query",
      "dataform.workspaces.commit",
      "dataform.workspaces.create",
      "dataform.workspaces.delete",
      "dataform.workspaces.fetchFileDiff",
      "dataform.workspaces.fetchFileGitStatuses",
      "dataform.workspaces.fetchGitAheadBehind",
      "dataform.workspaces.get",
      "dataform.workspaces.getIamPolicy",
      "dataform.workspaces.installNpmPackages",
      "dataform.workspaces.list",
      "dataform.workspaces.makeDirectory",
      "dataform.workspaces.moveDirectory",
      "dataform.workspaces.moveFile",
      "dataform.workspaces.pull",
      "dataform.workspaces.push",
      "dataform.workspaces.queryDirectoryContents",
      "dataform.workspaces.readFile",
      "dataform.workspaces.removeDirectory",
      "dataform.workspaces.removeFile",
      "dataform.workspaces.reset",
      "dataform.workspaces.setIamPolicy",
      "dataform.workspaces.writeFile",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataform.codeCreator",
    "title": "Code Creator",
    "description": "Access only to private and shared code resources. The permissions in the Code Creator let you create and list code in Dataform, and access only the code that you created and code that was explicitly shared with you.",
    "includedPermissions": [
      "dataform.locations.get",
      "dataform.locations.list",
      "dataform.repositories.create",
      "dataform.repositories.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataform.codeEditor",
    "title": "Code Editor",
    "description": "Edit access code resources.",
    "includedPermissions": [
      "dataform.locations.get",
      "dataform.locations.list",
      "dataform.repositories.commit",
      "dataform.repositories.computeAccessTokenStatus",
      "dataform.repositories.create",
      "dataform.repositories.fetchHistory",
      "dataform.repositories.fetchRemoteBranches",
      "dataform.repositories.get",
      "dataform.repositories.getIamPolicy",
      "dataform.repositories.list",
      "dataform.repositories.queryDirectoryContents",
      "dataform.repositories.readFile",
      "dataform.workspaces.commit",
      "dataform.workspaces.create",
      "dataform.workspaces.delete",
      "dataform.workspaces.fetchFileDiff",
      "dataform.workspaces.fetchFileGitStatuses",
      "dataform.workspaces.fetchGitAheadBehind",
      "dataform.workspaces.get",
      "dataform.workspaces.getIamPolicy",
      "dataform.workspaces.installNpmPackages",
      "dataform.workspaces.list",
      "dataform.workspaces.makeDirectory",
      "dataform.workspaces.moveDirectory",
      "dataform.workspaces.moveFile",
      "dataform.workspaces.pull",
      "dataform.workspaces.push",
      "dataform.workspaces.queryDirectoryContents",
      "dataform.workspaces.readFile",
      "dataform.workspaces.removeDirectory",
      "dataform.workspaces.removeFile",
      "dataform.workspaces.reset",
      "dataform.workspaces.writeFile",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataform.codeOwner",
    "title": "Code Owner",
    "description": "Full access to code resources.",
    "includedPermissions": [
      "dataform.locations.get",
      "dataform.locations.list",
      "dataform.repositories.commit",
      "dataform.repositories.computeAccessTokenStatus",
      "dataform.repositories.create",
      "dataform.repositories.delete",
      "dataform.repositories.fetchHistory",
      "dataform.repositories.fetchRemoteBranches",
      "dataform.repositories.get",
      "dataform.repositories.getIamPolicy",
      "dataform.repositories.list",
      "dataform.repositories.queryDirectoryContents",
      "dataform.repositories.readFile",
      "dataform.repositories.setIamPolicy",
      "dataform.repositories.update",
      "dataform.workspaces.commit",
      "dataform.workspaces.create",
      "dataform.workspaces.delete",
      "dataform.workspaces.fetchFileDiff",
      "dataform.workspaces.fetchFileGitStatuses",
      "dataform.workspaces.fetchGitAheadBehind",
      "dataform.workspaces.get",
      "dataform.workspaces.getIamPolicy",
      "dataform.workspaces.installNpmPackages",
      "dataform.workspaces.list",
      "dataform.workspaces.makeDirectory",
      "dataform.workspaces.moveDirectory",
      "dataform.workspaces.moveFile",
      "dataform.workspaces.pull",
      "dataform.workspaces.push",
      "dataform.workspaces.queryDirectoryContents",
      "dataform.workspaces.readFile",
      "dataform.workspaces.removeDirectory",
      "dataform.workspaces.removeFile",
      "dataform.workspaces.reset",
      "dataform.workspaces.setIamPolicy",
      "dataform.workspaces.writeFile",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataform.codeViewer",
    "title": "Code Viewer",
    "description": "Read-only access to all code resources.",
    "includedPermissions": [
      "dataform.locations.get",
      "dataform.locations.list",
      "dataform.repositories.computeAccessTokenStatus",
      "dataform.repositories.fetchHistory",
      "dataform.repositories.fetchRemoteBranches",
      "dataform.repositories.get",
      "dataform.repositories.getIamPolicy",
      "dataform.repositories.list",
      "dataform.repositories.queryDirectoryContents",
      "dataform.repositories.readFile",
      "dataform.workspaces.fetchFileDiff",
      "dataform.workspaces.fetchFileGitStatuses",
      "dataform.workspaces.fetchGitAheadBehind",
      "dataform.workspaces.get",
      "dataform.workspaces.getIamPolicy",
      "dataform.workspaces.list",
      "dataform.workspaces.queryDirectoryContents",
      "dataform.workspaces.readFile",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataform.editor",
    "title": "Dataform Editor",
    "description": "Edit access to Workspaces and Read-only access to Repositories.",
    "includedPermissions": [
      "dataform.compilationResults.create",
      "dataform.compilationResults.get",
      "dataform.compilationResults.list",
      "dataform.compilationResults.query",
      "dataform.locations.get",
      "dataform.locations.list",
      "dataform.releaseConfigs.get",
      "dataform.releaseConfigs.list",
      "dataform.repositories.computeAccessTokenStatus",
      "dataform.repositories.fetchHistory",
      "dataform.repositories.fetchRemoteBranches",
      "dataform.repositories.get",
      "dataform.repositories.getIamPolicy",
      "dataform.repositories.list",
      "dataform.repositories.queryDirectoryContents",
      "dataform.repositories.readFile",
      "dataform.workflowConfigs.get",
      "dataform.workflowConfigs.list",
      "dataform.workflowInvocations.cancel",
      "dataform.workflowInvocations.create",
      "dataform.workflowInvocations.delete",
      "dataform.workflowInvocations.get",
      "dataform.workflowInvocations.list",
      "dataform.workflowInvocations.query",
      "dataform.workspaces.commit",
      "dataform.workspaces.create",
      "dataform.workspaces.delete",
      "dataform.workspaces.fetchFileDiff",
      "dataform.workspaces.fetchFileGitStatuses",
      "dataform.workspaces.fetchGitAheadBehind",
      "dataform.workspaces.get",
      "dataform.workspaces.getIamPolicy",
      "dataform.workspaces.installNpmPackages",
      "dataform.workspaces.list",
      "dataform.workspaces.makeDirectory",
      "dataform.workspaces.moveDirectory",
      "dataform.workspaces.moveFile",
      "dataform.workspaces.pull",
      "dataform.workspaces.push",
      "dataform.workspaces.queryDirectoryContents",
      "dataform.workspaces.readFile",
      "dataform.workspaces.removeDirectory",
      "dataform.workspaces.removeFile",
      "dataform.workspaces.reset",
      "dataform.workspaces.writeFile",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataform.serviceAgent",
    "title": "Dataform Service Agent",
    "description": "Gives permission for the Dataform API to access a secret from Secret Manager",
    "includedPermissions": [
      "dataform.compilationResults.create",
      "dataform.workflowInvocations.create",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataform.viewer",
    "title": "Dataform Viewer",
    "description": "Read-only access to all Dataform resources.",
    "includedPermissions": [
      "dataform.compilationResults.get",
      "dataform.compilationResults.list",
      "dataform.compilationResults.query",
      "dataform.locations.get",
      "dataform.locations.list",
      "dataform.releaseConfigs.get",
      "dataform.releaseConfigs.list",
      "dataform.repositories.computeAccessTokenStatus",
      "dataform.repositories.fetchHistory",
      "dataform.repositories.fetchRemoteBranches",
      "dataform.repositories.get",
      "dataform.repositories.getIamPolicy",
      "dataform.repositories.list",
      "dataform.repositories.queryDirectoryContents",
      "dataform.repositories.readFile",
      "dataform.workflowConfigs.get",
      "dataform.workflowConfigs.list",
      "dataform.workflowInvocations.get",
      "dataform.workflowInvocations.list",
      "dataform.workflowInvocations.query",
      "dataform.workspaces.fetchFileDiff",
      "dataform.workspaces.fetchFileGitStatuses",
      "dataform.workspaces.fetchGitAheadBehind",
      "dataform.workspaces.get",
      "dataform.workspaces.getIamPolicy",
      "dataform.workspaces.list",
      "dataform.workspaces.queryDirectoryContents",
      "dataform.workspaces.readFile",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/datafusion.accessor",
    "title": "Cloud Data Fusion Accessor",
    "description": "Read-only access to Cloud Data Fusion Instances. Use it on instance level along with the namespace grants to provide access to the specific namespace.",
    "includedPermissions": [
      "datafusion.instances.get",
      "datafusion.instances.getIamPolicy",
      "datafusion.instances.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/datafusion.admin",
    "title": "Cloud Data Fusion Admin",
    "description": "Full access to Cloud Data Fusion Instances, Namespaces and related resources.",
    "includedPermissions": [
      "datafusion.artifacts.create",
      "datafusion.artifacts.delete",
      "datafusion.artifacts.get",
      "datafusion.artifacts.list",
      "datafusion.artifacts.update",
      "datafusion.instances.create",
      "datafusion.instances.delete",
      "datafusion.instances.get",
      "datafusion.instances.getIamPolicy",
      "datafusion.instances.list",
      "datafusion.instances.restart",
      "datafusion.instances.runtime",
      "datafusion.instances.setIamPolicy",
      "datafusion.instances.update",
      "datafusion.instances.upgrade",
      "datafusion.locations.get",
      "datafusion.locations.list",
      "datafusion.operations.cancel",
      "datafusion.operations.delete",
      "datafusion.operations.get",
      "datafusion.operations.list",
      "datafusion.pipelineConnections.create",
      "datafusion.pipelineConnections.delete",
      "datafusion.pipelineConnections.get",
      "datafusion.pipelineConnections.list",
      "datafusion.pipelineConnections.update",
      "datafusion.pipelineConnections.use",
      "datafusion.pipelines.create",
      "datafusion.pipelines.delete",
      "datafusion.pipelines.execute",
      "datafusion.pipelines.get",
      "datafusion.pipelines.list",
      "datafusion.pipelines.preview",
      "datafusion.pipelines.update",
      "datafusion.profiles.create",
      "datafusion.profiles.delete",
      "datafusion.profiles.get",
      "datafusion.profiles.list",
      "datafusion.profiles.update",
      "datafusion.secureKeys.create",
      "datafusion.secureKeys.delete",
      "datafusion.secureKeys.getSecret",
      "datafusion.secureKeys.list",
      "datafusion.secureKeys.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datafusion.developer",
    "title": "Cloud Data Fusion Developer",
    "description": "Access Cloud Data Fusion Instances, develop and run pipelines.",
    "includedPermissions": [
      "datafusion.artifacts.get",
      "datafusion.artifacts.list",
      "datafusion.instances.get",
      "datafusion.instances.getIamPolicy",
      "datafusion.instances.list",
      "datafusion.instances.runtime",
      "datafusion.locations.get",
      "datafusion.locations.list",
      "datafusion.operations.get",
      "datafusion.operations.list",
      "datafusion.pipelineConnections.get",
      "datafusion.pipelineConnections.list",
      "datafusion.pipelineConnections.use",
      "datafusion.pipelines.create",
      "datafusion.pipelines.delete",
      "datafusion.pipelines.execute",
      "datafusion.pipelines.get",
      "datafusion.pipelines.list",
      "datafusion.pipelines.preview",
      "datafusion.pipelines.update",
      "datafusion.profiles.get",
      "datafusion.profiles.list",
      "datafusion.secureKeys.create",
      "datafusion.secureKeys.delete",
      "datafusion.secureKeys.getSecret",
      "datafusion.secureKeys.list",
      "datafusion.secureKeys.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/datafusion.operator",
    "title": "Cloud Data Fusion Operator",
    "description": "Access Cloud Data Fusion Instances, operate namespaces and related resources.",
    "includedPermissions": [
      "datafusion.artifacts.create",
      "datafusion.artifacts.delete",
      "datafusion.artifacts.get",
      "datafusion.artifacts.list",
      "datafusion.artifacts.update",
      "datafusion.instances.get",
      "datafusion.instances.getIamPolicy",
      "datafusion.instances.list",
      "datafusion.instances.runtime",
      "datafusion.locations.get",
      "datafusion.locations.list",
      "datafusion.operations.get",
      "datafusion.operations.list",
      "datafusion.pipelineConnections.get",
      "datafusion.pipelineConnections.list",
      "datafusion.pipelineConnections.use",
      "datafusion.pipelines.create",
      "datafusion.pipelines.delete",
      "datafusion.pipelines.execute",
      "datafusion.pipelines.get",
      "datafusion.pipelines.list",
      "datafusion.pipelines.update",
      "datafusion.profiles.create",
      "datafusion.profiles.delete",
      "datafusion.profiles.get",
      "datafusion.profiles.list",
      "datafusion.profiles.update",
      "datafusion.secureKeys.create",
      "datafusion.secureKeys.delete",
      "datafusion.secureKeys.getSecret",
      "datafusion.secureKeys.list",
      "datafusion.secureKeys.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/datafusion.runner",
    "title": "Cloud Data Fusion Runner",
    "description": "Access to Cloud Data Fusion runtime resources.",
    "includedPermissions": [
      "datafusion.instances.runtime"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datafusion.serviceAgent",
    "title": "Cloud Data Fusion API Service Agent",
    "description": "Gives Cloud Data Fusion service account access to Service Networking, Cloud Dataproc, Cloud Storage, BigQuery, Cloud Spanner, and Cloud Bigtable resources.",
    "includedPermissions": [
      "bigquery.config.get",
      "bigquery.dataPolicies.create",
      "bigquery.dataPolicies.delete",
      "bigquery.dataPolicies.get",
      "bigquery.dataPolicies.getIamPolicy",
      "bigquery.dataPolicies.list",
      "bigquery.dataPolicies.setIamPolicy",
      "bigquery.dataPolicies.update",
      "bigquery.datasets.create",
      "bigquery.datasets.createTagBinding",
      "bigquery.datasets.delete",
      "bigquery.datasets.deleteTagBinding",
      "bigquery.datasets.get",
      "bigquery.datasets.getIamPolicy",
      "bigquery.datasets.link",
      "bigquery.datasets.listEffectiveTags",
      "bigquery.datasets.listSharedDatasetUsage",
      "bigquery.datasets.listTagBindings",
      "bigquery.datasets.setIamPolicy",
      "bigquery.datasets.update",
      "bigquery.datasets.updateTag",
      "bigquery.jobs.create",
      "bigquery.models.create",
      "bigquery.models.delete",
      "bigquery.models.export",
      "bigquery.models.getData",
      "bigquery.models.getMetadata",
      "bigquery.models.list",
      "bigquery.models.updateData",
      "bigquery.models.updateMetadata",
      "bigquery.models.updateTag",
      "bigquery.routines.create",
      "bigquery.routines.delete",
      "bigquery.routines.get",
      "bigquery.routines.list",
      "bigquery.routines.update",
      "bigquery.routines.updateTag",
      "bigquery.rowAccessPolicies.create",
      "bigquery.rowAccessPolicies.delete",
      "bigquery.rowAccessPolicies.getIamPolicy",
      "bigquery.rowAccessPolicies.list",
      "bigquery.rowAccessPolicies.setIamPolicy",
      "bigquery.rowAccessPolicies.update",
      "bigquery.tables.create",
      "bigquery.tables.createIndex",
      "bigquery.tables.createSnapshot",
      "bigquery.tables.delete",
      "bigquery.tables.deleteIndex",
      "bigquery.tables.deleteSnapshot",
      "bigquery.tables.export",
      "bigquery.tables.get",
      "bigquery.tables.getData",
      "bigquery.tables.getIamPolicy",
      "bigquery.tables.list",
      "bigquery.tables.replicateData",
      "bigquery.tables.restoreSnapshot",
      "bigquery.tables.setCategory",
      "bigquery.tables.setIamPolicy",
      "bigquery.tables.update",
      "bigquery.tables.updateData",
      "bigquery.tables.updateTag",
      "bigtable.appProfiles.create",
      "bigtable.appProfiles.delete",
      "bigtable.appProfiles.get",
      "bigtable.appProfiles.list",
      "bigtable.appProfiles.update",
      "bigtable.backups.create",
      "bigtable.backups.delete",
      "bigtable.backups.get",
      "bigtable.backups.getIamPolicy",
      "bigtable.backups.list",
      "bigtable.backups.read",
      "bigtable.backups.restore",
      "bigtable.backups.setIamPolicy",
      "bigtable.backups.update",
      "bigtable.clusters.create",
      "bigtable.clusters.delete",
      "bigtable.clusters.get",
      "bigtable.clusters.list",
      "bigtable.clusters.update",
      "bigtable.hotTablets.list",
      "bigtable.instances.create",
      "bigtable.instances.createTagBinding",
      "bigtable.instances.delete",
      "bigtable.instances.deleteTagBinding",
      "bigtable.instances.get",
      "bigtable.instances.getIamPolicy",
      "bigtable.instances.list",
      "bigtable.instances.listEffectiveTags",
      "bigtable.instances.listTagBindings",
      "bigtable.instances.ping",
      "bigtable.instances.setIamPolicy",
      "bigtable.instances.update",
      "bigtable.keyvisualizer.get",
      "bigtable.keyvisualizer.list",
      "bigtable.locations.list",
      "bigtable.tables.checkConsistency",
      "bigtable.tables.create",
      "bigtable.tables.delete",
      "bigtable.tables.generateConsistencyToken",
      "bigtable.tables.get",
      "bigtable.tables.getIamPolicy",
      "bigtable.tables.list",
      "bigtable.tables.mutateRows",
      "bigtable.tables.readRows",
      "bigtable.tables.sampleRowKeys",
      "bigtable.tables.setIamPolicy",
      "bigtable.tables.undelete",
      "bigtable.tables.update",
      "compute.acceleratorTypes.get",
      "compute.acceleratorTypes.list",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.backendBuckets.get",
      "compute.backendBuckets.list",
      "compute.backendBuckets.listEffectiveTags",
      "compute.backendBuckets.listTagBindings",
      "compute.backendServices.get",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.list",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalForwardingRules.pscGet",
      "compute.globalOperations.get",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instances.get",
      "compute.instances.getGuestAttributes",
      "compute.instances.getScreenshot",
      "compute.instances.getSerialPortOutput",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listReferrers",
      "compute.instances.listTagBindings",
      "compute.interconnectAttachments.get",
      "compute.interconnectAttachments.list",
      "compute.interconnectLocations.get",
      "compute.interconnectLocations.list",
      "compute.interconnectRemoteLocations.get",
      "compute.interconnectRemoteLocations.list",
      "compute.interconnects.get",
      "compute.interconnects.list",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.networkAttachments.get",
      "compute.networkAttachments.list",
      "compute.networks.addPeering",
      "compute.networks.get",
      "compute.networks.getEffectiveFirewalls",
      "compute.networks.getRegionEffectiveFirewalls",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listPeeringRoutes",
      "compute.networks.listTagBindings",
      "compute.networks.removePeering",
      "compute.networks.update",
      "compute.packetMirrorings.get",
      "compute.packetMirrorings.list",
      "compute.projects.get",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionHealthCheckServices.get",
      "compute.regionHealthCheckServices.list",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionNotificationEndpoints.get",
      "compute.regionNotificationEndpoints.list",
      "compute.regionSslCertificates.get",
      "compute.regionSslCertificates.list",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionSslPolicies.get",
      "compute.regionSslPolicies.list",
      "compute.regionSslPolicies.listAvailableFeatures",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionTargetTcpProxies.get",
      "compute.regionTargetTcpProxies.list",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.list",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.regions.get",
      "compute.regions.list",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routes.get",
      "compute.routes.list",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.serviceAttachments.get",
      "compute.serviceAttachments.list",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.get",
      "compute.sslPolicies.list",
      "compute.sslPolicies.listAvailableFeatures",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.targetGrpcProxies.get",
      "compute.targetGrpcProxies.list",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetInstances.get",
      "compute.targetInstances.list",
      "compute.targetInstances.listEffectiveTags",
      "compute.targetInstances.listTagBindings",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetSslProxies.listEffectiveTags",
      "compute.targetSslProxies.listTagBindings",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.targetVpnGateways.get",
      "compute.targetVpnGateways.list",
      "compute.urlMaps.get",
      "compute.urlMaps.list",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "compute.vpnGateways.get",
      "compute.vpnGateways.list",
      "compute.vpnTunnels.get",
      "compute.vpnTunnels.list",
      "compute.zones.get",
      "compute.zones.list",
      "dataproc.autoscalingPolicies.create",
      "dataproc.autoscalingPolicies.delete",
      "dataproc.autoscalingPolicies.get",
      "dataproc.autoscalingPolicies.list",
      "dataproc.autoscalingPolicies.update",
      "dataproc.autoscalingPolicies.use",
      "dataproc.batches.cancel",
      "dataproc.batches.create",
      "dataproc.batches.delete",
      "dataproc.batches.get",
      "dataproc.batches.list",
      "dataproc.clusters.create",
      "dataproc.clusters.delete",
      "dataproc.clusters.get",
      "dataproc.clusters.list",
      "dataproc.clusters.start",
      "dataproc.clusters.stop",
      "dataproc.clusters.update",
      "dataproc.clusters.use",
      "dataproc.jobs.cancel",
      "dataproc.jobs.create",
      "dataproc.jobs.delete",
      "dataproc.jobs.get",
      "dataproc.jobs.list",
      "dataproc.jobs.update",
      "dataproc.nodeGroups.create",
      "dataproc.nodeGroups.get",
      "dataproc.nodeGroups.update",
      "dataproc.operations.cancel",
      "dataproc.operations.delete",
      "dataproc.operations.get",
      "dataproc.operations.list",
      "dataproc.workflowTemplates.create",
      "dataproc.workflowTemplates.delete",
      "dataproc.workflowTemplates.get",
      "dataproc.workflowTemplates.instantiate",
      "dataproc.workflowTemplates.instantiateInline",
      "dataproc.workflowTemplates.list",
      "dataproc.workflowTemplates.update",
      "dns.managedZones.create",
      "dns.managedZones.delete",
      "dns.managedZones.get",
      "dns.managedZones.list",
      "dns.networks.bindPrivateDNSZone",
      "dns.networks.targetWithPeeringZone",
      "firebase.projects.get",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.timeSeries.create",
      "monitoring.timeSeries.list",
      "networkconnectivity.internalRanges.get",
      "networkconnectivity.internalRanges.list",
      "networkconnectivity.locations.get",
      "networkconnectivity.locations.list",
      "networkconnectivity.operations.get",
      "networkconnectivity.operations.list",
      "networkconnectivity.policyBasedRoutes.get",
      "networkconnectivity.policyBasedRoutes.list",
      "networksecurity.authorizationPolicies.get",
      "networksecurity.authorizationPolicies.list",
      "networksecurity.clientTlsPolicies.get",
      "networksecurity.clientTlsPolicies.list",
      "networksecurity.firewallEndpointAssociations.get",
      "networksecurity.firewallEndpointAssociations.list",
      "networksecurity.firewallEndpoints.get",
      "networksecurity.firewallEndpoints.list",
      "networksecurity.gatewaySecurityPolicies.get",
      "networksecurity.gatewaySecurityPolicies.list",
      "networksecurity.gatewaySecurityPolicyRules.get",
      "networksecurity.gatewaySecurityPolicyRules.list",
      "networksecurity.locations.get",
      "networksecurity.locations.list",
      "networksecurity.operations.get",
      "networksecurity.operations.list",
      "networksecurity.securityProfileGroups.get",
      "networksecurity.securityProfileGroups.list",
      "networksecurity.securityProfiles.get",
      "networksecurity.securityProfiles.list",
      "networksecurity.serverTlsPolicies.get",
      "networksecurity.serverTlsPolicies.list",
      "networksecurity.tlsInspectionPolicies.get",
      "networksecurity.tlsInspectionPolicies.list",
      "networksecurity.urlLists.get",
      "networksecurity.urlLists.list",
      "networkservices.endpointConfigSelectors.get",
      "networkservices.endpointConfigSelectors.list",
      "networkservices.endpointPolicies.get",
      "networkservices.endpointPolicies.list",
      "networkservices.gateways.get",
      "networkservices.gateways.list",
      "networkservices.grpcRoutes.get",
      "networkservices.grpcRoutes.list",
      "networkservices.httpFilters.get",
      "networkservices.httpFilters.list",
      "networkservices.httpRoutes.get",
      "networkservices.httpRoutes.list",
      "networkservices.httpfilters.get",
      "networkservices.httpfilters.list",
      "networkservices.locations.get",
      "networkservices.locations.list",
      "networkservices.meshes.get",
      "networkservices.meshes.list",
      "networkservices.operations.get",
      "networkservices.operations.list",
      "networkservices.serviceBindings.get",
      "networkservices.serviceBindings.list",
      "networkservices.tcpRoutes.get",
      "networkservices.tcpRoutes.list",
      "networkservices.tlsRoutes.get",
      "networkservices.tlsRoutes.list",
      "orgpolicy.policy.get",
      "recommender.iamPolicyInsights.get",
      "recommender.iamPolicyInsights.list",
      "recommender.iamPolicyInsights.update",
      "recommender.iamPolicyRecommendations.get",
      "recommender.iamPolicyRecommendations.list",
      "recommender.iamPolicyRecommendations.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "servicenetworking.services.get",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "spanner.databaseOperations.cancel",
      "spanner.databaseOperations.delete",
      "spanner.databaseOperations.get",
      "spanner.databaseOperations.list",
      "spanner.databases.beginOrRollbackReadWriteTransaction",
      "spanner.databases.beginPartitionedDmlTransaction",
      "spanner.databases.beginReadOnlyTransaction",
      "spanner.databases.getDdl",
      "spanner.databases.list",
      "spanner.databases.partitionQuery",
      "spanner.databases.partitionRead",
      "spanner.databases.read",
      "spanner.databases.select",
      "spanner.databases.updateDdl",
      "spanner.databases.updateTag",
      "spanner.databases.write",
      "spanner.instanceConfigs.get",
      "spanner.instanceConfigs.list",
      "spanner.instances.get",
      "spanner.instances.list",
      "spanner.instances.listEffectiveTags",
      "spanner.instances.listTagBindings",
      "spanner.sessions.create",
      "spanner.sessions.delete",
      "spanner.sessions.get",
      "spanner.sessions.list",
      "storage.buckets.create",
      "storage.buckets.createTagBinding",
      "storage.buckets.delete",
      "storage.buckets.deleteTagBinding",
      "storage.buckets.get",
      "storage.buckets.getIamPolicy",
      "storage.buckets.getObjectInsights",
      "storage.buckets.list",
      "storage.buckets.listEffectiveTags",
      "storage.buckets.listTagBindings",
      "storage.buckets.setIamPolicy",
      "storage.buckets.update",
      "storage.multipartUploads.abort",
      "storage.multipartUploads.create",
      "storage.multipartUploads.list",
      "storage.multipartUploads.listParts",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.getIamPolicy",
      "storage.objects.list",
      "storage.objects.setIamPolicy",
      "storage.objects.update",
      "trafficdirector.networks.getConfigs",
      "trafficdirector.networks.reportMetrics"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datafusion.viewer",
    "title": "Cloud Data Fusion Viewer",
    "description": "Read-only access to Cloud Data Fusion Instances, Namespaces and related resources.",
    "includedPermissions": [
      "datafusion.artifacts.get",
      "datafusion.artifacts.list",
      "datafusion.instances.get",
      "datafusion.instances.getIamPolicy",
      "datafusion.instances.list",
      "datafusion.instances.runtime",
      "datafusion.locations.get",
      "datafusion.locations.list",
      "datafusion.operations.get",
      "datafusion.operations.list",
      "datafusion.pipelineConnections.get",
      "datafusion.pipelineConnections.list",
      "datafusion.pipelines.get",
      "datafusion.pipelines.list",
      "datafusion.profiles.get",
      "datafusion.profiles.list",
      "datafusion.secureKeys.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datalabeling.admin",
    "title": "Data Labeling Service Admin",
    "description": "Full access to all Data Labeling resources",
    "includedPermissions": [
      "datalabeling.annotateddatasets.delete",
      "datalabeling.annotateddatasets.get",
      "datalabeling.annotateddatasets.label",
      "datalabeling.annotateddatasets.list",
      "datalabeling.annotationspecsets.create",
      "datalabeling.annotationspecsets.delete",
      "datalabeling.annotationspecsets.get",
      "datalabeling.annotationspecsets.list",
      "datalabeling.dataitems.get",
      "datalabeling.dataitems.list",
      "datalabeling.datasets.create",
      "datalabeling.datasets.delete",
      "datalabeling.datasets.export",
      "datalabeling.datasets.get",
      "datalabeling.datasets.import",
      "datalabeling.datasets.list",
      "datalabeling.examples.get",
      "datalabeling.examples.list",
      "datalabeling.instructions.create",
      "datalabeling.instructions.delete",
      "datalabeling.instructions.get",
      "datalabeling.instructions.list",
      "datalabeling.operations.cancel",
      "datalabeling.operations.get",
      "datalabeling.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/datalabeling.editor",
    "title": "Data Labeling Service Editor",
    "description": "Editor of all Data Labeling resources",
    "includedPermissions": [
      "datalabeling.annotateddatasets.delete",
      "datalabeling.annotateddatasets.get",
      "datalabeling.annotateddatasets.label",
      "datalabeling.annotateddatasets.list",
      "datalabeling.annotationspecsets.create",
      "datalabeling.annotationspecsets.delete",
      "datalabeling.annotationspecsets.get",
      "datalabeling.annotationspecsets.list",
      "datalabeling.dataitems.get",
      "datalabeling.dataitems.list",
      "datalabeling.datasets.create",
      "datalabeling.datasets.delete",
      "datalabeling.datasets.export",
      "datalabeling.datasets.get",
      "datalabeling.datasets.import",
      "datalabeling.datasets.list",
      "datalabeling.examples.get",
      "datalabeling.examples.list",
      "datalabeling.instructions.create",
      "datalabeling.instructions.delete",
      "datalabeling.instructions.get",
      "datalabeling.instructions.list",
      "datalabeling.operations.cancel",
      "datalabeling.operations.get",
      "datalabeling.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/datalabeling.serviceAgent",
    "title": "Data Labeling Service Agent",
    "description": "Gives Data Labeling service account read/write access to Cloud Storage, read/write BigQuery, update CMLE model versions, editor access to Annotation service and AutoML service.",
    "includedPermissions": [
      "automl.annotationSpecs.create",
      "automl.annotationSpecs.delete",
      "automl.annotationSpecs.get",
      "automl.annotationSpecs.list",
      "automl.annotationSpecs.update",
      "automl.annotations.approve",
      "automl.annotations.create",
      "automl.annotations.list",
      "automl.annotations.manipulate",
      "automl.annotations.reject",
      "automl.columnSpecs.get",
      "automl.columnSpecs.list",
      "automl.columnSpecs.update",
      "automl.datasets.create",
      "automl.datasets.delete",
      "automl.datasets.export",
      "automl.datasets.get",
      "automl.datasets.import",
      "automl.datasets.list",
      "automl.datasets.update",
      "automl.examples.delete",
      "automl.examples.get",
      "automl.examples.list",
      "automl.examples.update",
      "automl.files.delete",
      "automl.files.list",
      "automl.humanAnnotationTasks.create",
      "automl.humanAnnotationTasks.delete",
      "automl.humanAnnotationTasks.get",
      "automl.humanAnnotationTasks.list",
      "automl.locations.get",
      "automl.locations.list",
      "automl.modelEvaluations.create",
      "automl.modelEvaluations.get",
      "automl.modelEvaluations.list",
      "automl.models.create",
      "automl.models.delete",
      "automl.models.deploy",
      "automl.models.export",
      "automl.models.get",
      "automl.models.list",
      "automl.models.predict",
      "automl.models.undeploy",
      "automl.operations.cancel",
      "automl.operations.delete",
      "automl.operations.get",
      "automl.operations.list",
      "automl.tableSpecs.get",
      "automl.tableSpecs.list",
      "automl.tableSpecs.update",
      "bigquery.datasets.create",
      "bigquery.datasets.get",
      "bigquery.jobs.create",
      "bigquery.jobs.get",
      "bigquery.tables.create",
      "bigquery.tables.get",
      "bigquery.tables.getData",
      "ml.jobs.create",
      "ml.jobs.get",
      "ml.jobs.getIamPolicy",
      "ml.jobs.list",
      "ml.locations.get",
      "ml.locations.list",
      "ml.models.create",
      "ml.models.delete",
      "ml.models.get",
      "ml.models.getIamPolicy",
      "ml.models.list",
      "ml.models.predict",
      "ml.models.setIamPolicy",
      "ml.models.update",
      "ml.operations.get",
      "ml.operations.list",
      "ml.projects.getConfig",
      "ml.studies.create",
      "ml.studies.delete",
      "ml.studies.get",
      "ml.studies.getIamPolicy",
      "ml.studies.list",
      "ml.studies.setIamPolicy",
      "ml.trials.create",
      "ml.trials.delete",
      "ml.trials.get",
      "ml.trials.list",
      "ml.trials.update",
      "ml.versions.create",
      "ml.versions.delete",
      "ml.versions.get",
      "ml.versions.list",
      "ml.versions.predict",
      "ml.versions.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.list",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datalabeling.viewer",
    "title": "Data Labeling Service Viewer",
    "description": "Viewer of all Data Labeling resources",
    "includedPermissions": [
      "datalabeling.annotateddatasets.get",
      "datalabeling.annotateddatasets.list",
      "datalabeling.annotationspecsets.get",
      "datalabeling.annotationspecsets.list",
      "datalabeling.dataitems.get",
      "datalabeling.dataitems.list",
      "datalabeling.datasets.get",
      "datalabeling.datasets.list",
      "datalabeling.examples.get",
      "datalabeling.examples.list",
      "datalabeling.instructions.get",
      "datalabeling.instructions.list",
      "datalabeling.operations.get",
      "datalabeling.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/datalineage.admin",
    "title": "Data Lineage Administrator",
    "description": "Grants full access to all resources in Data Lineage API",
    "includedPermissions": [
      "datalineage.events.create",
      "datalineage.events.delete",
      "datalineage.events.get",
      "datalineage.events.list",
      "datalineage.locations.searchLinks",
      "datalineage.operations.get",
      "datalineage.processes.create",
      "datalineage.processes.delete",
      "datalineage.processes.get",
      "datalineage.processes.list",
      "datalineage.processes.update",
      "datalineage.runs.create",
      "datalineage.runs.delete",
      "datalineage.runs.get",
      "datalineage.runs.list",
      "datalineage.runs.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datalineage.editor",
    "title": "Data Lineage Editor",
    "description": "Grants edit access to all resources in Data Lineage API",
    "includedPermissions": [
      "datalineage.events.create",
      "datalineage.events.delete",
      "datalineage.events.get",
      "datalineage.events.list",
      "datalineage.locations.searchLinks",
      "datalineage.operations.get",
      "datalineage.processes.create",
      "datalineage.processes.get",
      "datalineage.processes.list",
      "datalineage.processes.update",
      "datalineage.runs.create",
      "datalineage.runs.get",
      "datalineage.runs.list",
      "datalineage.runs.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datalineage.producer",
    "title": "Data Lineage Events Producer",
    "description": "Grants access to creating all resources in Data Lineage API",
    "includedPermissions": [
      "datalineage.events.create",
      "datalineage.processes.create",
      "datalineage.processes.get",
      "datalineage.processes.update",
      "datalineage.runs.create",
      "datalineage.runs.get",
      "datalineage.runs.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datalineage.viewer",
    "title": "Data Lineage Viewer",
    "description": "Grants read access to all resources in Data Lineage API",
    "includedPermissions": [
      "datalineage.events.get",
      "datalineage.events.list",
      "datalineage.locations.searchLinks",
      "datalineage.processes.get",
      "datalineage.processes.list",
      "datalineage.runs.get",
      "datalineage.runs.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datamigration.admin",
    "title": "Database Migration Admin",
    "description": "Full access to all resources of Database Migration.",
    "includedPermissions": [
      "datamigration.connectionprofiles.create",
      "datamigration.connectionprofiles.delete",
      "datamigration.connectionprofiles.get",
      "datamigration.connectionprofiles.getIamPolicy",
      "datamigration.connectionprofiles.list",
      "datamigration.connectionprofiles.setIamPolicy",
      "datamigration.connectionprofiles.update",
      "datamigration.conversionworkspaces.commit",
      "datamigration.conversionworkspaces.convert",
      "datamigration.conversionworkspaces.create",
      "datamigration.conversionworkspaces.delete",
      "datamigration.conversionworkspaces.get",
      "datamigration.conversionworkspaces.getIamPolicy",
      "datamigration.conversionworkspaces.list",
      "datamigration.conversionworkspaces.rollback",
      "datamigration.conversionworkspaces.seed",
      "datamigration.conversionworkspaces.setIamPolicy",
      "datamigration.conversionworkspaces.update",
      "datamigration.locations.fetchStaticIps",
      "datamigration.locations.get",
      "datamigration.locations.list",
      "datamigration.mappingrules.getIamPolicy",
      "datamigration.mappingrules.import",
      "datamigration.mappingrules.setIamPolicy",
      "datamigration.migrationjobs.create",
      "datamigration.migrationjobs.delete",
      "datamigration.migrationjobs.generateSshScript",
      "datamigration.migrationjobs.generateTcpProxyScript",
      "datamigration.migrationjobs.get",
      "datamigration.migrationjobs.getIamPolicy",
      "datamigration.migrationjobs.list",
      "datamigration.migrationjobs.promote",
      "datamigration.migrationjobs.restart",
      "datamigration.migrationjobs.resume",
      "datamigration.migrationjobs.setIamPolicy",
      "datamigration.migrationjobs.start",
      "datamigration.migrationjobs.stop",
      "datamigration.migrationjobs.update",
      "datamigration.migrationjobs.verify",
      "datamigration.operations.cancel",
      "datamigration.operations.delete",
      "datamigration.operations.get",
      "datamigration.operations.list",
      "datamigration.privateconnections.create",
      "datamigration.privateconnections.delete",
      "datamigration.privateconnections.get",
      "datamigration.privateconnections.getIamPolicy",
      "datamigration.privateconnections.list",
      "datamigration.privateconnections.setIamPolicy",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datamigration.serviceAgent",
    "title": "Database Migration Service Agent",
    "description": "Gives Cloud Database Migration service account access to Cloud SQL resources.",
    "includedPermissions": [
      "alloydb.clusters.create",
      "alloydb.clusters.delete",
      "alloydb.clusters.get",
      "alloydb.clusters.list",
      "alloydb.clusters.update",
      "alloydb.instances.create",
      "alloydb.instances.delete",
      "alloydb.instances.get",
      "alloydb.instances.list",
      "alloydb.instances.update",
      "alloydb.operations.get",
      "alloydb.operations.list",
      "cloudsql.instances.connect",
      "cloudsql.instances.create",
      "cloudsql.instances.delete",
      "cloudsql.instances.demoteMaster",
      "cloudsql.instances.get",
      "cloudsql.instances.list",
      "cloudsql.instances.migrate",
      "cloudsql.instances.promoteReplica",
      "cloudsql.instances.restart",
      "cloudsql.instances.startReplica",
      "cloudsql.instances.stopReplica",
      "cloudsql.instances.update",
      "compute.forwardingRules.use",
      "compute.globalAddresses.create",
      "compute.globalAddresses.createInternal",
      "compute.globalAddresses.delete",
      "compute.globalAddresses.deleteInternal",
      "compute.globalAddresses.get",
      "compute.globalOperations.get",
      "compute.networks.addPeering",
      "compute.networks.get",
      "compute.networks.list",
      "compute.networks.listPeeringRoutes",
      "compute.networks.removePeering",
      "compute.networks.use",
      "compute.regionOperations.get",
      "compute.regionOperations.list",
      "compute.routers.list",
      "compute.routes.get",
      "compute.routes.list",
      "compute.serviceAttachments.get",
      "compute.serviceAttachments.list",
      "compute.serviceAttachments.update",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "compute.subnetworks.use",
      "storage.objects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datapipelines.admin",
    "title": "Data pipelines Admin",
    "description": "Administrator of Data pipelines resources",
    "includedPermissions": [
      "datapipelines.jobs.list",
      "datapipelines.pipelines.create",
      "datapipelines.pipelines.delete",
      "datapipelines.pipelines.get",
      "datapipelines.pipelines.list",
      "datapipelines.pipelines.run",
      "datapipelines.pipelines.stop",
      "datapipelines.pipelines.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datapipelines.invoker",
    "title": "Data pipelines Invoker",
    "description": "Invoker of Data pipelines jobs",
    "includedPermissions": [
      "datapipelines.pipelines.run",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datapipelines.serviceAgent",
    "title": "Datapipelines Service Agent",
    "description": "Gives Datapipelines service permissions to create Dataflow & Cloud Scheduler jobs in the user project.",
    "includedPermissions": [
      "appengine.applications.get",
      "bigquery.tables.get",
      "bigtable.tables.get",
      "cloudbuild.builds.create",
      "cloudbuild.builds.get",
      "cloudbuild.builds.list",
      "cloudbuild.builds.update",
      "cloudbuild.operations.get",
      "cloudbuild.operations.list",
      "cloudscheduler.jobs.create",
      "cloudscheduler.jobs.delete",
      "cloudscheduler.jobs.enable",
      "cloudscheduler.jobs.fullView",
      "cloudscheduler.jobs.get",
      "cloudscheduler.jobs.list",
      "cloudscheduler.jobs.pause",
      "cloudscheduler.jobs.run",
      "cloudscheduler.jobs.update",
      "cloudscheduler.locations.get",
      "cloudscheduler.locations.list",
      "compute.machineTypes.get",
      "compute.projects.get",
      "compute.regions.list",
      "compute.zones.list",
      "dataflow.jobs.cancel",
      "dataflow.jobs.create",
      "dataflow.jobs.get",
      "dataflow.jobs.list",
      "dataflow.jobs.snapshot",
      "dataflow.jobs.updateContents",
      "dataflow.messages.list",
      "dataflow.metrics.get",
      "dataflow.snapshots.delete",
      "dataflow.snapshots.get",
      "dataflow.snapshots.list",
      "firebase.projects.get",
      "iam.serviceAccounts.actAs",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.list",
      "orgpolicy.policy.get",
      "pubsub.schemas.get",
      "pubsub.topics.get",
      "recommender.dataflowDiagnosticsInsights.get",
      "recommender.dataflowDiagnosticsInsights.list",
      "recommender.dataflowDiagnosticsInsights.update",
      "recommender.iamPolicyInsights.get",
      "recommender.iamPolicyInsights.list",
      "recommender.iamPolicyInsights.update",
      "recommender.iamPolicyRecommendations.get",
      "recommender.iamPolicyRecommendations.list",
      "recommender.iamPolicyRecommendations.update",
      "remotebuildexecution.blobs.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "storage.buckets.create",
      "storage.buckets.createTagBinding",
      "storage.buckets.delete",
      "storage.buckets.deleteTagBinding",
      "storage.buckets.get",
      "storage.buckets.getIamPolicy",
      "storage.buckets.getObjectInsights",
      "storage.buckets.list",
      "storage.buckets.listEffectiveTags",
      "storage.buckets.listTagBindings",
      "storage.buckets.setIamPolicy",
      "storage.buckets.update",
      "storage.multipartUploads.abort",
      "storage.multipartUploads.create",
      "storage.multipartUploads.list",
      "storage.multipartUploads.listParts",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.getIamPolicy",
      "storage.objects.list",
      "storage.objects.setIamPolicy",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datapipelines.viewer",
    "title": "Data pipelines Viewer",
    "description": "Viewer of Data pipelines resources",
    "includedPermissions": [
      "datapipelines.jobs.list",
      "datapipelines.pipelines.get",
      "datapipelines.pipelines.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataplex.admin",
    "title": "Dataplex Administrator",
    "description": "Full access to all Dataplex resources.",
    "includedPermissions": [
      "cloudasset.assets.analyzeIamPolicy",
      "cloudasset.assets.searchAllIamPolicies",
      "cloudasset.assets.searchAllResources",
      "dataplex.assetActions.list",
      "dataplex.assets.create",
      "dataplex.assets.delete",
      "dataplex.assets.get",
      "dataplex.assets.getIamPolicy",
      "dataplex.assets.list",
      "dataplex.assets.setIamPolicy",
      "dataplex.assets.update",
      "dataplex.content.create",
      "dataplex.content.delete",
      "dataplex.content.get",
      "dataplex.content.getIamPolicy",
      "dataplex.content.list",
      "dataplex.content.setIamPolicy",
      "dataplex.content.update",
      "dataplex.dataAttributeBindings.create",
      "dataplex.dataAttributeBindings.delete",
      "dataplex.dataAttributeBindings.get",
      "dataplex.dataAttributeBindings.getIamPolicy",
      "dataplex.dataAttributeBindings.list",
      "dataplex.dataAttributeBindings.setIamPolicy",
      "dataplex.dataAttributeBindings.update",
      "dataplex.dataAttributes.bind",
      "dataplex.dataAttributes.create",
      "dataplex.dataAttributes.delete",
      "dataplex.dataAttributes.get",
      "dataplex.dataAttributes.getIamPolicy",
      "dataplex.dataAttributes.list",
      "dataplex.dataAttributes.setIamPolicy",
      "dataplex.dataAttributes.update",
      "dataplex.dataTaxonomies.configureDataAccess",
      "dataplex.dataTaxonomies.configureResourceAccess",
      "dataplex.dataTaxonomies.create",
      "dataplex.dataTaxonomies.delete",
      "dataplex.dataTaxonomies.get",
      "dataplex.dataTaxonomies.getIamPolicy",
      "dataplex.dataTaxonomies.list",
      "dataplex.dataTaxonomies.setIamPolicy",
      "dataplex.dataTaxonomies.update",
      "dataplex.datascans.create",
      "dataplex.datascans.delete",
      "dataplex.datascans.get",
      "dataplex.datascans.getData",
      "dataplex.datascans.getIamPolicy",
      "dataplex.datascans.list",
      "dataplex.datascans.run",
      "dataplex.datascans.setIamPolicy",
      "dataplex.datascans.update",
      "dataplex.entities.create",
      "dataplex.entities.delete",
      "dataplex.entities.get",
      "dataplex.entities.list",
      "dataplex.entities.update",
      "dataplex.environments.create",
      "dataplex.environments.delete",
      "dataplex.environments.execute",
      "dataplex.environments.get",
      "dataplex.environments.getIamPolicy",
      "dataplex.environments.list",
      "dataplex.environments.setIamPolicy",
      "dataplex.environments.update",
      "dataplex.lakeActions.list",
      "dataplex.lakes.create",
      "dataplex.lakes.delete",
      "dataplex.lakes.get",
      "dataplex.lakes.getIamPolicy",
      "dataplex.lakes.list",
      "dataplex.lakes.setIamPolicy",
      "dataplex.lakes.update",
      "dataplex.locations.get",
      "dataplex.locations.list",
      "dataplex.operations.cancel",
      "dataplex.operations.delete",
      "dataplex.operations.get",
      "dataplex.operations.list",
      "dataplex.partitions.create",
      "dataplex.partitions.delete",
      "dataplex.partitions.get",
      "dataplex.partitions.list",
      "dataplex.partitions.update",
      "dataplex.tasks.cancel",
      "dataplex.tasks.create",
      "dataplex.tasks.delete",
      "dataplex.tasks.get",
      "dataplex.tasks.getIamPolicy",
      "dataplex.tasks.list",
      "dataplex.tasks.run",
      "dataplex.tasks.setIamPolicy",
      "dataplex.tasks.update",
      "dataplex.zoneActions.list",
      "dataplex.zones.create",
      "dataplex.zones.delete",
      "dataplex.zones.get",
      "dataplex.zones.getIamPolicy",
      "dataplex.zones.list",
      "dataplex.zones.setIamPolicy",
      "dataplex.zones.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataplex.bindingAdmin",
    "title": "Dataplex Binding Administrator",
    "description": "Full access on DataAttribute Bindig resources.",
    "includedPermissions": [
      "dataplex.dataAttributeBindings.create",
      "dataplex.dataAttributeBindings.delete",
      "dataplex.dataAttributeBindings.get",
      "dataplex.dataAttributeBindings.getIamPolicy",
      "dataplex.dataAttributeBindings.list",
      "dataplex.dataAttributeBindings.setIamPolicy",
      "dataplex.dataAttributeBindings.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataplex.dataOwner",
    "title": "Dataplex Data Owner",
    "description": "Owner access to data. To be granted to Dataplex resources Lake, Zone or Asset only.",
    "includedPermissions": [
      "dataplex.assets.ownData",
      "dataplex.assets.readData",
      "dataplex.assets.writeData"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataplex.dataReader",
    "title": "Dataplex Data Reader",
    "description": "Read only access to data. To be granted to Dataplex resources Lake, Zone or Asset only.",
    "includedPermissions": [
      "dataplex.assets.readData"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataplex.dataScanAdmin",
    "title": "Dataplex DataScan Administrator",
    "description": "Full access to DataScan resources.",
    "includedPermissions": [
      "dataplex.datascans.create",
      "dataplex.datascans.delete",
      "dataplex.datascans.get",
      "dataplex.datascans.getData",
      "dataplex.datascans.getIamPolicy",
      "dataplex.datascans.list",
      "dataplex.datascans.run",
      "dataplex.datascans.setIamPolicy",
      "dataplex.datascans.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataplex.dataScanDataViewer",
    "title": "Dataplex DataScan DataViewer",
    "description": "Read access to DataScan resources and additional contents.",
    "includedPermissions": [
      "dataplex.datascans.get",
      "dataplex.datascans.getData",
      "dataplex.datascans.getIamPolicy",
      "dataplex.datascans.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataplex.dataScanEditor",
    "title": "Dataplex DataScan Editor",
    "description": "Write access to DataScan resources.",
    "includedPermissions": [
      "dataplex.datascans.create",
      "dataplex.datascans.delete",
      "dataplex.datascans.get",
      "dataplex.datascans.getData",
      "dataplex.datascans.getIamPolicy",
      "dataplex.datascans.list",
      "dataplex.datascans.run",
      "dataplex.datascans.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataplex.dataScanViewer",
    "title": "Dataplex DataScan Viewer",
    "description": "Read access to DataScan resources.",
    "includedPermissions": [
      "dataplex.datascans.get",
      "dataplex.datascans.getIamPolicy",
      "dataplex.datascans.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataplex.dataWriter",
    "title": "Dataplex Data Writer",
    "description": "Write access to data. To be granted to Dataplex resources Lake, Zone or Asset only.",
    "includedPermissions": [
      "dataplex.assets.writeData"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataplex.developer",
    "title": "Dataplex Developer",
    "description": "Allows running data analytics workloads in a lake.",
    "includedPermissions": [
      "dataplex.content.create",
      "dataplex.content.delete",
      "dataplex.content.get",
      "dataplex.content.getIamPolicy",
      "dataplex.content.list",
      "dataplex.content.setIamPolicy",
      "dataplex.content.update",
      "dataplex.environments.execute",
      "dataplex.environments.get",
      "dataplex.environments.list",
      "dataplex.tasks.cancel",
      "dataplex.tasks.create",
      "dataplex.tasks.delete",
      "dataplex.tasks.get",
      "dataplex.tasks.list",
      "dataplex.tasks.run",
      "dataplex.tasks.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataplex.editor",
    "title": "Dataplex Editor",
    "description": "Write access to Dataplex resources.",
    "includedPermissions": [
      "cloudasset.assets.analyzeIamPolicy",
      "dataplex.assetActions.list",
      "dataplex.assets.create",
      "dataplex.assets.delete",
      "dataplex.assets.get",
      "dataplex.assets.getIamPolicy",
      "dataplex.assets.list",
      "dataplex.assets.update",
      "dataplex.content.delete",
      "dataplex.content.get",
      "dataplex.content.getIamPolicy",
      "dataplex.content.list",
      "dataplex.dataAttributeBindings.create",
      "dataplex.dataAttributeBindings.delete",
      "dataplex.dataAttributeBindings.get",
      "dataplex.dataAttributeBindings.getIamPolicy",
      "dataplex.dataAttributeBindings.list",
      "dataplex.dataAttributeBindings.update",
      "dataplex.dataAttributes.bind",
      "dataplex.dataAttributes.create",
      "dataplex.dataAttributes.delete",
      "dataplex.dataAttributes.get",
      "dataplex.dataAttributes.getIamPolicy",
      "dataplex.dataAttributes.list",
      "dataplex.dataAttributes.update",
      "dataplex.dataTaxonomies.configureDataAccess",
      "dataplex.dataTaxonomies.configureResourceAccess",
      "dataplex.dataTaxonomies.create",
      "dataplex.dataTaxonomies.delete",
      "dataplex.dataTaxonomies.get",
      "dataplex.dataTaxonomies.getIamPolicy",
      "dataplex.dataTaxonomies.list",
      "dataplex.dataTaxonomies.update",
      "dataplex.datascans.create",
      "dataplex.datascans.delete",
      "dataplex.datascans.get",
      "dataplex.datascans.getIamPolicy",
      "dataplex.datascans.list",
      "dataplex.datascans.run",
      "dataplex.datascans.update",
      "dataplex.environments.create",
      "dataplex.environments.delete",
      "dataplex.environments.get",
      "dataplex.environments.getIamPolicy",
      "dataplex.environments.list",
      "dataplex.environments.update",
      "dataplex.lakeActions.list",
      "dataplex.lakes.create",
      "dataplex.lakes.delete",
      "dataplex.lakes.get",
      "dataplex.lakes.getIamPolicy",
      "dataplex.lakes.list",
      "dataplex.lakes.update",
      "dataplex.operations.cancel",
      "dataplex.operations.delete",
      "dataplex.operations.get",
      "dataplex.operations.list",
      "dataplex.tasks.cancel",
      "dataplex.tasks.create",
      "dataplex.tasks.delete",
      "dataplex.tasks.get",
      "dataplex.tasks.getIamPolicy",
      "dataplex.tasks.list",
      "dataplex.tasks.run",
      "dataplex.tasks.update",
      "dataplex.zoneActions.list",
      "dataplex.zones.create",
      "dataplex.zones.delete",
      "dataplex.zones.get",
      "dataplex.zones.getIamPolicy",
      "dataplex.zones.list",
      "dataplex.zones.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataplex.metadataReader",
    "title": "Dataplex Metadata Reader",
    "description": "Read only access to metadata.",
    "includedPermissions": [
      "dataplex.assets.get",
      "dataplex.assets.list",
      "dataplex.entities.get",
      "dataplex.entities.list",
      "dataplex.partitions.get",
      "dataplex.partitions.list",
      "dataplex.zones.get",
      "dataplex.zones.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataplex.metadataWriter",
    "title": "Dataplex Metadata Writer",
    "description": "Read and write access to metadata.",
    "includedPermissions": [
      "dataplex.assets.get",
      "dataplex.assets.list",
      "dataplex.entities.create",
      "dataplex.entities.delete",
      "dataplex.entities.get",
      "dataplex.entities.list",
      "dataplex.entities.update",
      "dataplex.partitions.create",
      "dataplex.partitions.delete",
      "dataplex.partitions.get",
      "dataplex.partitions.list",
      "dataplex.partitions.update",
      "dataplex.zones.get",
      "dataplex.zones.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataplex.securityAdmin",
    "title": "Dataplex Security Administrator",
    "description": "Permissions configure ResourceAccess and DataAccess Specs on Data Attributes.",
    "includedPermissions": [
      "dataplex.dataTaxonomies.configureDataAccess",
      "dataplex.dataTaxonomies.configureResourceAccess"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataplex.serviceAgent",
    "title": "Cloud Dataplex Service Agent",
    "description": "Gives the Dataplex service account access to project resources. This access will be used in data discovery, data management and data workload management.",
    "includedPermissions": [
      "bigquery.bireservations.get",
      "bigquery.bireservations.update",
      "bigquery.capacityCommitments.create",
      "bigquery.capacityCommitments.delete",
      "bigquery.capacityCommitments.get",
      "bigquery.capacityCommitments.list",
      "bigquery.capacityCommitments.update",
      "bigquery.config.get",
      "bigquery.config.update",
      "bigquery.connections.create",
      "bigquery.connections.delegate",
      "bigquery.connections.delete",
      "bigquery.connections.get",
      "bigquery.connections.getIamPolicy",
      "bigquery.connections.list",
      "bigquery.connections.setIamPolicy",
      "bigquery.connections.update",
      "bigquery.connections.updateTag",
      "bigquery.connections.use",
      "bigquery.dataPolicies.create",
      "bigquery.dataPolicies.delete",
      "bigquery.dataPolicies.get",
      "bigquery.dataPolicies.getIamPolicy",
      "bigquery.dataPolicies.list",
      "bigquery.dataPolicies.setIamPolicy",
      "bigquery.dataPolicies.update",
      "bigquery.datasets.create",
      "bigquery.datasets.createTagBinding",
      "bigquery.datasets.delete",
      "bigquery.datasets.deleteTagBinding",
      "bigquery.datasets.get",
      "bigquery.datasets.getIamPolicy",
      "bigquery.datasets.link",
      "bigquery.datasets.listEffectiveTags",
      "bigquery.datasets.listSharedDatasetUsage",
      "bigquery.datasets.listTagBindings",
      "bigquery.datasets.setIamPolicy",
      "bigquery.datasets.update",
      "bigquery.datasets.updateTag",
      "bigquery.jobs.create",
      "bigquery.jobs.delete",
      "bigquery.jobs.get",
      "bigquery.jobs.list",
      "bigquery.jobs.listAll",
      "bigquery.jobs.listExecutionMetadata",
      "bigquery.jobs.update",
      "bigquery.models.create",
      "bigquery.models.delete",
      "bigquery.models.export",
      "bigquery.models.getData",
      "bigquery.models.getMetadata",
      "bigquery.models.list",
      "bigquery.models.updateData",
      "bigquery.models.updateMetadata",
      "bigquery.models.updateTag",
      "bigquery.readsessions.create",
      "bigquery.readsessions.getData",
      "bigquery.readsessions.update",
      "bigquery.reservationAssignments.create",
      "bigquery.reservationAssignments.delete",
      "bigquery.reservationAssignments.list",
      "bigquery.reservationAssignments.search",
      "bigquery.reservations.create",
      "bigquery.reservations.delete",
      "bigquery.reservations.get",
      "bigquery.reservations.list",
      "bigquery.reservations.update",
      "bigquery.routines.create",
      "bigquery.routines.delete",
      "bigquery.routines.get",
      "bigquery.routines.list",
      "bigquery.routines.update",
      "bigquery.routines.updateTag",
      "bigquery.rowAccessPolicies.create",
      "bigquery.rowAccessPolicies.delete",
      "bigquery.rowAccessPolicies.getIamPolicy",
      "bigquery.rowAccessPolicies.list",
      "bigquery.rowAccessPolicies.overrideTimeTravelRestrictions",
      "bigquery.rowAccessPolicies.setIamPolicy",
      "bigquery.rowAccessPolicies.update",
      "bigquery.savedqueries.create",
      "bigquery.savedqueries.delete",
      "bigquery.savedqueries.get",
      "bigquery.savedqueries.list",
      "bigquery.savedqueries.update",
      "bigquery.tables.create",
      "bigquery.tables.createIndex",
      "bigquery.tables.createSnapshot",
      "bigquery.tables.delete",
      "bigquery.tables.deleteIndex",
      "bigquery.tables.deleteSnapshot",
      "bigquery.tables.export",
      "bigquery.tables.get",
      "bigquery.tables.getData",
      "bigquery.tables.getIamPolicy",
      "bigquery.tables.list",
      "bigquery.tables.replicateData",
      "bigquery.tables.restoreSnapshot",
      "bigquery.tables.setCategory",
      "bigquery.tables.setIamPolicy",
      "bigquery.tables.update",
      "bigquery.tables.updateData",
      "bigquery.tables.updateTag",
      "bigquery.transfers.get",
      "bigquery.transfers.update",
      "bigquerymigration.translation.translate",
      "datacatalog.catalogs.searchAll",
      "datacatalog.categories.getIamPolicy",
      "datacatalog.categories.setIamPolicy",
      "datacatalog.taxonomies.create",
      "datacatalog.taxonomies.delete",
      "datacatalog.taxonomies.get",
      "datacatalog.taxonomies.list",
      "datacatalog.taxonomies.update",
      "dataplex.assets.getIamPolicy",
      "dataplex.environments.execute",
      "dataplex.environments.get",
      "dataplex.environments.list",
      "dataplex.lakes.get",
      "dataplex.lakes.getIamPolicy",
      "dataplex.zones.getIamPolicy",
      "dataproc.batches.cancel",
      "dataproc.batches.create",
      "dataproc.batches.get",
      "dataproc.operations.cancel",
      "dataproc.operations.get",
      "dataproc.operations.list",
      "firebase.projects.get",
      "iam.serviceAccounts.actAs",
      "logging.logEntries.create",
      "logging.logEntries.route",
      "metastore.services.get",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.timeSeries.create",
      "orgpolicy.policy.get",
      "recommender.iamPolicyInsights.get",
      "recommender.iamPolicyInsights.list",
      "recommender.iamPolicyInsights.update",
      "recommender.iamPolicyRecommendations.get",
      "recommender.iamPolicyRecommendations.list",
      "recommender.iamPolicyRecommendations.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "servicemanagement.services.report",
      "serviceusage.services.use",
      "storage.buckets.create",
      "storage.buckets.createTagBinding",
      "storage.buckets.delete",
      "storage.buckets.deleteTagBinding",
      "storage.buckets.get",
      "storage.buckets.getIamPolicy",
      "storage.buckets.getObjectInsights",
      "storage.buckets.list",
      "storage.buckets.listEffectiveTags",
      "storage.buckets.listTagBindings",
      "storage.buckets.setIamPolicy",
      "storage.buckets.update",
      "storage.multipartUploads.abort",
      "storage.multipartUploads.create",
      "storage.multipartUploads.list",
      "storage.multipartUploads.listParts",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.getIamPolicy",
      "storage.objects.list",
      "storage.objects.setIamPolicy",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataplex.storageDataOwner",
    "title": "Dataplex Storage Data Owner",
    "description": "Owner access to data.  Should not be used directly. This role is granted by Dataplex to managed resources like GCS buckets, BigQuery datasets etc.",
    "includedPermissions": [
      "bigquery.datasets.get",
      "bigquery.models.create",
      "bigquery.models.delete",
      "bigquery.models.export",
      "bigquery.models.getData",
      "bigquery.models.getMetadata",
      "bigquery.models.list",
      "bigquery.models.updateData",
      "bigquery.models.updateMetadata",
      "bigquery.routines.create",
      "bigquery.routines.delete",
      "bigquery.routines.get",
      "bigquery.routines.list",
      "bigquery.routines.update",
      "bigquery.tables.create",
      "bigquery.tables.createSnapshot",
      "bigquery.tables.delete",
      "bigquery.tables.deleteSnapshot",
      "bigquery.tables.export",
      "bigquery.tables.get",
      "bigquery.tables.getData",
      "bigquery.tables.list",
      "bigquery.tables.restoreSnapshot",
      "bigquery.tables.update",
      "bigquery.tables.updateData",
      "storage.buckets.get",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataplex.storageDataReader",
    "title": "Dataplex Storage Data Reader",
    "description": "Read only access to data. Should not be used directly. This role is granted by Dataplex to managed resources like GCS buckets, BigQuery datasets etc.",
    "includedPermissions": [
      "bigquery.datasets.get",
      "bigquery.models.export",
      "bigquery.models.getData",
      "bigquery.models.getMetadata",
      "bigquery.models.list",
      "bigquery.routines.get",
      "bigquery.routines.list",
      "bigquery.tables.export",
      "bigquery.tables.get",
      "bigquery.tables.getData",
      "bigquery.tables.list",
      "storage.buckets.get",
      "storage.objects.get",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataplex.storageDataWriter",
    "title": "Dataplex Storage Data Writer",
    "description": "Write access to data. Should not be used directly. This role is granted by Dataplex to managed resources like GCS buckets, BigQuery datasets etc.",
    "includedPermissions": [
      "bigquery.tables.updateData",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataplex.taxonomyAdmin",
    "title": "Dataplex Taxonomy Administrator",
    "description": "Full access to DataTaxonomy, DataAttribute resources.",
    "includedPermissions": [
      "dataplex.dataAttributes.bind",
      "dataplex.dataAttributes.create",
      "dataplex.dataAttributes.delete",
      "dataplex.dataAttributes.get",
      "dataplex.dataAttributes.getIamPolicy",
      "dataplex.dataAttributes.list",
      "dataplex.dataAttributes.setIamPolicy",
      "dataplex.dataAttributes.update",
      "dataplex.dataTaxonomies.create",
      "dataplex.dataTaxonomies.delete",
      "dataplex.dataTaxonomies.get",
      "dataplex.dataTaxonomies.getIamPolicy",
      "dataplex.dataTaxonomies.list",
      "dataplex.dataTaxonomies.setIamPolicy",
      "dataplex.dataTaxonomies.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataplex.taxonomyViewer",
    "title": "Dataplex Taxonomy Viewer",
    "description": "Read access on DataTaxonomy, DataAttribute resources .",
    "includedPermissions": [
      "dataplex.dataAttributes.get",
      "dataplex.dataAttributes.getIamPolicy",
      "dataplex.dataAttributes.list",
      "dataplex.dataTaxonomies.get",
      "dataplex.dataTaxonomies.getIamPolicy",
      "dataplex.dataTaxonomies.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataplex.viewer",
    "title": "Dataplex Viewer",
    "description": "Read access to Dataplex resources.",
    "includedPermissions": [
      "cloudasset.assets.analyzeIamPolicy",
      "dataplex.assetActions.list",
      "dataplex.assets.get",
      "dataplex.assets.getIamPolicy",
      "dataplex.assets.list",
      "dataplex.content.get",
      "dataplex.content.getIamPolicy",
      "dataplex.content.list",
      "dataplex.dataAttributeBindings.get",
      "dataplex.dataAttributeBindings.getIamPolicy",
      "dataplex.dataAttributeBindings.list",
      "dataplex.dataAttributes.get",
      "dataplex.dataAttributes.getIamPolicy",
      "dataplex.dataAttributes.list",
      "dataplex.dataTaxonomies.get",
      "dataplex.dataTaxonomies.getIamPolicy",
      "dataplex.dataTaxonomies.list",
      "dataplex.datascans.get",
      "dataplex.datascans.getIamPolicy",
      "dataplex.datascans.list",
      "dataplex.environments.get",
      "dataplex.environments.getIamPolicy",
      "dataplex.environments.list",
      "dataplex.lakeActions.list",
      "dataplex.lakes.get",
      "dataplex.lakes.getIamPolicy",
      "dataplex.lakes.list",
      "dataplex.operations.get",
      "dataplex.operations.list",
      "dataplex.tasks.get",
      "dataplex.tasks.getIamPolicy",
      "dataplex.tasks.list",
      "dataplex.zoneActions.list",
      "dataplex.zones.get",
      "dataplex.zones.getIamPolicy",
      "dataplex.zones.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataprep.projects.user",
    "title": "Dataprep User",
    "description": "Use of Dataprep.",
    "includedPermissions": [
      "dataprep.projects.use",
      "resourcemanager.projects.get",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataprep.serviceAgent",
    "title": "Dataprep Service Agent",
    "description": "Dataprep service identity. Includes access to service accounts.",
    "includedPermissions": [
      "bigquery.bireservations.get",
      "bigquery.capacityCommitments.get",
      "bigquery.capacityCommitments.list",
      "bigquery.config.get",
      "bigquery.datasets.create",
      "bigquery.datasets.get",
      "bigquery.datasets.getIamPolicy",
      "bigquery.datasets.updateTag",
      "bigquery.jobs.create",
      "bigquery.jobs.list",
      "bigquery.models.create",
      "bigquery.models.delete",
      "bigquery.models.export",
      "bigquery.models.getData",
      "bigquery.models.getMetadata",
      "bigquery.models.list",
      "bigquery.models.updateData",
      "bigquery.models.updateMetadata",
      "bigquery.models.updateTag",
      "bigquery.readsessions.create",
      "bigquery.readsessions.getData",
      "bigquery.readsessions.update",
      "bigquery.reservationAssignments.list",
      "bigquery.reservationAssignments.search",
      "bigquery.reservations.get",
      "bigquery.reservations.list",
      "bigquery.routines.create",
      "bigquery.routines.delete",
      "bigquery.routines.get",
      "bigquery.routines.list",
      "bigquery.routines.update",
      "bigquery.routines.updateTag",
      "bigquery.savedqueries.get",
      "bigquery.savedqueries.list",
      "bigquery.tables.create",
      "bigquery.tables.createIndex",
      "bigquery.tables.createSnapshot",
      "bigquery.tables.delete",
      "bigquery.tables.deleteIndex",
      "bigquery.tables.export",
      "bigquery.tables.get",
      "bigquery.tables.getData",
      "bigquery.tables.getIamPolicy",
      "bigquery.tables.list",
      "bigquery.tables.replicateData",
      "bigquery.tables.restoreSnapshot",
      "bigquery.tables.update",
      "bigquery.tables.updateData",
      "bigquery.tables.updateTag",
      "bigquery.transfers.get",
      "bigquerymigration.translation.translate",
      "cloudbuild.builds.create",
      "cloudbuild.builds.get",
      "cloudbuild.builds.list",
      "cloudbuild.builds.update",
      "cloudbuild.operations.get",
      "cloudbuild.operations.list",
      "compute.acceleratorTypes.get",
      "compute.acceleratorTypes.list",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.backendBuckets.get",
      "compute.backendBuckets.getIamPolicy",
      "compute.backendBuckets.list",
      "compute.backendBuckets.listEffectiveTags",
      "compute.backendBuckets.listTagBindings",
      "compute.backendServices.get",
      "compute.backendServices.getIamPolicy",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.commitments.get",
      "compute.commitments.list",
      "compute.diskTypes.get",
      "compute.diskTypes.list",
      "compute.disks.get",
      "compute.disks.getIamPolicy",
      "compute.disks.list",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.list",
      "compute.firewallPolicies.get",
      "compute.firewallPolicies.getIamPolicy",
      "compute.firewallPolicies.list",
      "compute.firewallPolicies.listEffectiveTags",
      "compute.firewallPolicies.listTagBindings",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.futureReservations.get",
      "compute.futureReservations.getIamPolicy",
      "compute.futureReservations.list",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalForwardingRules.pscGet",
      "compute.globalNetworkEndpointGroups.get",
      "compute.globalNetworkEndpointGroups.list",
      "compute.globalNetworkEndpointGroups.listEffectiveTags",
      "compute.globalNetworkEndpointGroups.listTagBindings",
      "compute.globalOperations.get",
      "compute.globalOperations.getIamPolicy",
      "compute.globalOperations.list",
      "compute.globalPublicDelegatedPrefixes.get",
      "compute.globalPublicDelegatedPrefixes.list",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.images.get",
      "compute.images.getFromFamily",
      "compute.images.getIamPolicy",
      "compute.images.list",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instanceTemplates.get",
      "compute.instanceTemplates.getIamPolicy",
      "compute.instanceTemplates.list",
      "compute.instances.get",
      "compute.instances.getEffectiveFirewalls",
      "compute.instances.getGuestAttributes",
      "compute.instances.getIamPolicy",
      "compute.instances.getScreenshot",
      "compute.instances.getSerialPortOutput",
      "compute.instances.getShieldedInstanceIdentity",
      "compute.instances.getShieldedVmIdentity",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listReferrers",
      "compute.instances.listTagBindings",
      "compute.instantSnapshots.get",
      "compute.instantSnapshots.getIamPolicy",
      "compute.instantSnapshots.list",
      "compute.interconnectAttachments.get",
      "compute.interconnectAttachments.list",
      "compute.interconnectLocations.get",
      "compute.interconnectLocations.list",
      "compute.interconnectRemoteLocations.get",
      "compute.interconnectRemoteLocations.list",
      "compute.interconnects.get",
      "compute.interconnects.list",
      "compute.licenseCodes.get",
      "compute.licenseCodes.getIamPolicy",
      "compute.licenseCodes.list",
      "compute.licenses.get",
      "compute.licenses.getIamPolicy",
      "compute.licenses.list",
      "compute.machineImages.get",
      "compute.machineImages.getIamPolicy",
      "compute.machineImages.list",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.maintenancePolicies.get",
      "compute.maintenancePolicies.getIamPolicy",
      "compute.maintenancePolicies.list",
      "compute.networkAttachments.get",
      "compute.networkAttachments.getIamPolicy",
      "compute.networkAttachments.list",
      "compute.networkEdgeSecurityServices.get",
      "compute.networkEdgeSecurityServices.list",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.getIamPolicy",
      "compute.networkEndpointGroups.list",
      "compute.networkEndpointGroups.listEffectiveTags",
      "compute.networkEndpointGroups.listTagBindings",
      "compute.networks.get",
      "compute.networks.getEffectiveFirewalls",
      "compute.networks.getRegionEffectiveFirewalls",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listPeeringRoutes",
      "compute.networks.listTagBindings",
      "compute.nodeGroups.get",
      "compute.nodeGroups.getIamPolicy",
      "compute.nodeGroups.list",
      "compute.nodeTemplates.get",
      "compute.nodeTemplates.getIamPolicy",
      "compute.nodeTemplates.list",
      "compute.nodeTypes.get",
      "compute.nodeTypes.list",
      "compute.organizations.listAssociations",
      "compute.packetMirrorings.get",
      "compute.packetMirrorings.list",
      "compute.projects.get",
      "compute.publicAdvertisedPrefixes.get",
      "compute.publicAdvertisedPrefixes.list",
      "compute.publicDelegatedPrefixes.get",
      "compute.publicDelegatedPrefixes.list",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.getIamPolicy",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionFirewallPolicies.get",
      "compute.regionFirewallPolicies.getIamPolicy",
      "compute.regionFirewallPolicies.list",
      "compute.regionFirewallPolicies.listEffectiveTags",
      "compute.regionFirewallPolicies.listTagBindings",
      "compute.regionHealthCheckServices.get",
      "compute.regionHealthCheckServices.list",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionNetworkEndpointGroups.listEffectiveTags",
      "compute.regionNetworkEndpointGroups.listTagBindings",
      "compute.regionNotificationEndpoints.get",
      "compute.regionNotificationEndpoints.list",
      "compute.regionOperations.get",
      "compute.regionOperations.getIamPolicy",
      "compute.regionOperations.list",
      "compute.regionSecurityPolicies.get",
      "compute.regionSecurityPolicies.list",
      "compute.regionSecurityPolicies.listEffectiveTags",
      "compute.regionSecurityPolicies.listTagBindings",
      "compute.regionSslCertificates.get",
      "compute.regionSslCertificates.list",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionSslPolicies.get",
      "compute.regionSslPolicies.list",
      "compute.regionSslPolicies.listAvailableFeatures",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionTargetTcpProxies.get",
      "compute.regionTargetTcpProxies.list",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.list",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.regionUrlMaps.validate",
      "compute.regions.get",
      "compute.regions.list",
      "compute.reservations.get",
      "compute.reservations.list",
      "compute.resourcePolicies.get",
      "compute.resourcePolicies.getIamPolicy",
      "compute.resourcePolicies.list",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routes.get",
      "compute.routes.list",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.securityPolicies.get",
      "compute.securityPolicies.getIamPolicy",
      "compute.securityPolicies.list",
      "compute.securityPolicies.listEffectiveTags",
      "compute.securityPolicies.listTagBindings",
      "compute.serviceAttachments.get",
      "compute.serviceAttachments.getIamPolicy",
      "compute.serviceAttachments.list",
      "compute.snapshots.get",
      "compute.snapshots.getIamPolicy",
      "compute.snapshots.list",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.get",
      "compute.sslPolicies.list",
      "compute.sslPolicies.listAvailableFeatures",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.subnetworks.get",
      "compute.subnetworks.getIamPolicy",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.targetGrpcProxies.get",
      "compute.targetGrpcProxies.list",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetInstances.get",
      "compute.targetInstances.list",
      "compute.targetInstances.listEffectiveTags",
      "compute.targetInstances.listTagBindings",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetSslProxies.listEffectiveTags",
      "compute.targetSslProxies.listTagBindings",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.targetVpnGateways.get",
      "compute.targetVpnGateways.list",
      "compute.urlMaps.get",
      "compute.urlMaps.list",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "compute.urlMaps.validate",
      "compute.vpnGateways.get",
      "compute.vpnGateways.list",
      "compute.vpnTunnels.get",
      "compute.vpnTunnels.list",
      "compute.zoneOperations.get",
      "compute.zoneOperations.getIamPolicy",
      "compute.zoneOperations.list",
      "compute.zones.get",
      "compute.zones.list",
      "dataflow.jobs.cancel",
      "dataflow.jobs.create",
      "dataflow.jobs.get",
      "dataflow.jobs.list",
      "dataflow.jobs.snapshot",
      "dataflow.jobs.updateContents",
      "dataflow.messages.list",
      "dataflow.metrics.get",
      "dataflow.snapshots.delete",
      "dataflow.snapshots.get",
      "dataflow.snapshots.list",
      "iam.serviceAccounts.actAs",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.list",
      "orgpolicy.policy.get",
      "recommender.dataflowDiagnosticsInsights.get",
      "recommender.dataflowDiagnosticsInsights.list",
      "recommender.dataflowDiagnosticsInsights.update",
      "remotebuildexecution.blobs.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "storage.buckets.get",
      "storage.buckets.list",
      "storage.multipartUploads.abort",
      "storage.multipartUploads.create",
      "storage.multipartUploads.list",
      "storage.multipartUploads.listParts",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.getIamPolicy",
      "storage.objects.list",
      "storage.objects.setIamPolicy",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataproc.admin",
    "title": "Dataproc Administrator",
    "description": "Full control of Dataproc resources.",
    "includedPermissions": [
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.networks.get",
      "compute.networks.list",
      "compute.projects.get",
      "compute.regions.get",
      "compute.regions.list",
      "compute.zones.get",
      "compute.zones.list",
      "dataproc.autoscalingPolicies.create",
      "dataproc.autoscalingPolicies.delete",
      "dataproc.autoscalingPolicies.get",
      "dataproc.autoscalingPolicies.getIamPolicy",
      "dataproc.autoscalingPolicies.list",
      "dataproc.autoscalingPolicies.setIamPolicy",
      "dataproc.autoscalingPolicies.update",
      "dataproc.autoscalingPolicies.use",
      "dataproc.batches.cancel",
      "dataproc.batches.create",
      "dataproc.batches.delete",
      "dataproc.batches.get",
      "dataproc.batches.list",
      "dataproc.clusters.create",
      "dataproc.clusters.delete",
      "dataproc.clusters.get",
      "dataproc.clusters.getIamPolicy",
      "dataproc.clusters.list",
      "dataproc.clusters.setIamPolicy",
      "dataproc.clusters.start",
      "dataproc.clusters.stop",
      "dataproc.clusters.update",
      "dataproc.clusters.use",
      "dataproc.jobs.cancel",
      "dataproc.jobs.create",
      "dataproc.jobs.delete",
      "dataproc.jobs.get",
      "dataproc.jobs.getIamPolicy",
      "dataproc.jobs.list",
      "dataproc.jobs.setIamPolicy",
      "dataproc.jobs.update",
      "dataproc.nodeGroups.create",
      "dataproc.nodeGroups.get",
      "dataproc.nodeGroups.update",
      "dataproc.operations.cancel",
      "dataproc.operations.delete",
      "dataproc.operations.get",
      "dataproc.operations.getIamPolicy",
      "dataproc.operations.list",
      "dataproc.operations.setIamPolicy",
      "dataproc.workflowTemplates.create",
      "dataproc.workflowTemplates.delete",
      "dataproc.workflowTemplates.get",
      "dataproc.workflowTemplates.getIamPolicy",
      "dataproc.workflowTemplates.instantiate",
      "dataproc.workflowTemplates.instantiateInline",
      "dataproc.workflowTemplates.list",
      "dataproc.workflowTemplates.setIamPolicy",
      "dataproc.workflowTemplates.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataproc.editor",
    "title": "Dataproc Editor",
    "description": "Full control of Dataproc resources. Allows viewing all networks.",
    "includedPermissions": [
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.networks.get",
      "compute.networks.list",
      "compute.projects.get",
      "compute.regions.get",
      "compute.regions.list",
      "compute.zones.get",
      "compute.zones.list",
      "dataproc.autoscalingPolicies.create",
      "dataproc.autoscalingPolicies.delete",
      "dataproc.autoscalingPolicies.get",
      "dataproc.autoscalingPolicies.list",
      "dataproc.autoscalingPolicies.update",
      "dataproc.autoscalingPolicies.use",
      "dataproc.batches.cancel",
      "dataproc.batches.create",
      "dataproc.batches.delete",
      "dataproc.batches.get",
      "dataproc.batches.list",
      "dataproc.clusters.create",
      "dataproc.clusters.delete",
      "dataproc.clusters.get",
      "dataproc.clusters.list",
      "dataproc.clusters.start",
      "dataproc.clusters.stop",
      "dataproc.clusters.update",
      "dataproc.clusters.use",
      "dataproc.jobs.cancel",
      "dataproc.jobs.create",
      "dataproc.jobs.delete",
      "dataproc.jobs.get",
      "dataproc.jobs.list",
      "dataproc.jobs.update",
      "dataproc.nodeGroups.create",
      "dataproc.nodeGroups.get",
      "dataproc.nodeGroups.update",
      "dataproc.operations.cancel",
      "dataproc.operations.delete",
      "dataproc.operations.get",
      "dataproc.operations.list",
      "dataproc.workflowTemplates.create",
      "dataproc.workflowTemplates.delete",
      "dataproc.workflowTemplates.get",
      "dataproc.workflowTemplates.instantiate",
      "dataproc.workflowTemplates.instantiateInline",
      "dataproc.workflowTemplates.list",
      "dataproc.workflowTemplates.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataproc.hubAgent",
    "title": "Dataproc Hub Agent",
    "description": "Allows management of Dataproc resources. Intended for service accounts running Dataproc Hub instances.",
    "includedPermissions": [
      "compute.instances.get",
      "compute.instances.setMetadata",
      "compute.instances.setTags",
      "compute.zoneOperations.get",
      "compute.zones.list",
      "dataproc.autoscalingPolicies.get",
      "dataproc.autoscalingPolicies.list",
      "dataproc.autoscalingPolicies.use",
      "dataproc.clusters.create",
      "dataproc.clusters.delete",
      "dataproc.clusters.get",
      "dataproc.clusters.list",
      "dataproc.clusters.update",
      "dataproc.operations.cancel",
      "dataproc.operations.delete",
      "dataproc.operations.get",
      "dataproc.operations.list",
      "iam.serviceAccounts.actAs",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.list",
      "logging.buckets.get",
      "logging.buckets.list",
      "logging.exclusions.get",
      "logging.exclusions.list",
      "logging.links.get",
      "logging.links.list",
      "logging.locations.get",
      "logging.locations.list",
      "logging.logEntries.create",
      "logging.logEntries.list",
      "logging.logEntries.route",
      "logging.logMetrics.get",
      "logging.logMetrics.list",
      "logging.logServiceIndexes.list",
      "logging.logServices.list",
      "logging.logs.list",
      "logging.operations.get",
      "logging.operations.list",
      "logging.queries.create",
      "logging.queries.delete",
      "logging.queries.get",
      "logging.queries.list",
      "logging.queries.listShared",
      "logging.queries.update",
      "logging.sinks.get",
      "logging.sinks.list",
      "logging.usage.get",
      "logging.views.get",
      "logging.views.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storage.buckets.get",
      "storage.objects.get",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataproc.serviceAgent",
    "title": "Dataproc Service Agent",
    "description": "Gives Dataproc Service Account access to service accounts, compute resources, storage resources, and kubernetes resources. Includes access to service accounts.",
    "includedPermissions": [
      "compute.acceleratorTypes.get",
      "compute.acceleratorTypes.list",
      "compute.addresses.createInternal",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.addresses.use",
      "compute.addresses.useInternal",
      "compute.autoscalers.create",
      "compute.autoscalers.delete",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.autoscalers.update",
      "compute.diskTypes.get",
      "compute.diskTypes.list",
      "compute.disks.create",
      "compute.disks.createSnapshot",
      "compute.disks.delete",
      "compute.disks.get",
      "compute.disks.list",
      "compute.disks.resize",
      "compute.disks.setLabels",
      "compute.disks.startAsyncReplication",
      "compute.disks.stopAsyncReplication",
      "compute.disks.stopGroupAsyncReplication",
      "compute.disks.update",
      "compute.disks.use",
      "compute.disks.useReadOnly",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalAddresses.use",
      "compute.globalNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.create",
      "compute.globalNetworkEndpointGroups.createTagBinding",
      "compute.globalNetworkEndpointGroups.delete",
      "compute.globalNetworkEndpointGroups.deleteTagBinding",
      "compute.globalNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.get",
      "compute.globalNetworkEndpointGroups.list",
      "compute.globalNetworkEndpointGroups.listEffectiveTags",
      "compute.globalNetworkEndpointGroups.listTagBindings",
      "compute.globalNetworkEndpointGroups.use",
      "compute.globalOperations.get",
      "compute.globalOperations.list",
      "compute.images.get",
      "compute.images.getFromFamily",
      "compute.images.list",
      "compute.images.useReadOnly",
      "compute.instanceGroupManagers.create",
      "compute.instanceGroupManagers.delete",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroupManagers.update",
      "compute.instanceGroupManagers.use",
      "compute.instanceGroups.create",
      "compute.instanceGroups.delete",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instanceGroups.update",
      "compute.instanceGroups.use",
      "compute.instanceTemplates.create",
      "compute.instanceTemplates.delete",
      "compute.instanceTemplates.get",
      "compute.instanceTemplates.getIamPolicy",
      "compute.instanceTemplates.list",
      "compute.instanceTemplates.setIamPolicy",
      "compute.instanceTemplates.useReadOnly",
      "compute.instances.addAccessConfig",
      "compute.instances.addMaintenancePolicies",
      "compute.instances.addResourcePolicies",
      "compute.instances.attachDisk",
      "compute.instances.create",
      "compute.instances.createTagBinding",
      "compute.instances.delete",
      "compute.instances.deleteAccessConfig",
      "compute.instances.deleteTagBinding",
      "compute.instances.detachDisk",
      "compute.instances.get",
      "compute.instances.getEffectiveFirewalls",
      "compute.instances.getGuestAttributes",
      "compute.instances.getIamPolicy",
      "compute.instances.getScreenshot",
      "compute.instances.getSerialPortOutput",
      "compute.instances.getShieldedInstanceIdentity",
      "compute.instances.getShieldedVmIdentity",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listReferrers",
      "compute.instances.listTagBindings",
      "compute.instances.osAdminLogin",
      "compute.instances.osLogin",
      "compute.instances.removeMaintenancePolicies",
      "compute.instances.removeResourcePolicies",
      "compute.instances.reset",
      "compute.instances.resume",
      "compute.instances.sendDiagnosticInterrupt",
      "compute.instances.setDeletionProtection",
      "compute.instances.setDiskAutoDelete",
      "compute.instances.setIamPolicy",
      "compute.instances.setLabels",
      "compute.instances.setMachineResources",
      "compute.instances.setMachineType",
      "compute.instances.setMetadata",
      "compute.instances.setMinCpuPlatform",
      "compute.instances.setName",
      "compute.instances.setScheduling",
      "compute.instances.setSecurityPolicy",
      "compute.instances.setServiceAccount",
      "compute.instances.setShieldedInstanceIntegrityPolicy",
      "compute.instances.setShieldedVmIntegrityPolicy",
      "compute.instances.setTags",
      "compute.instances.simulateMaintenanceEvent",
      "compute.instances.start",
      "compute.instances.startWithEncryptionKey",
      "compute.instances.stop",
      "compute.instances.suspend",
      "compute.instances.update",
      "compute.instances.updateAccessConfig",
      "compute.instances.updateDisplayDevice",
      "compute.instances.updateNetworkInterface",
      "compute.instances.updateSecurity",
      "compute.instances.updateShieldedInstanceConfig",
      "compute.instances.updateShieldedVmConfig",
      "compute.instances.use",
      "compute.instances.useReadOnly",
      "compute.licenses.get",
      "compute.licenses.list",
      "compute.machineImages.create",
      "compute.machineImages.delete",
      "compute.machineImages.get",
      "compute.machineImages.getIamPolicy",
      "compute.machineImages.list",
      "compute.machineImages.setIamPolicy",
      "compute.machineImages.useReadOnly",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.networkEndpointGroups.attachNetworkEndpoints",
      "compute.networkEndpointGroups.create",
      "compute.networkEndpointGroups.createTagBinding",
      "compute.networkEndpointGroups.delete",
      "compute.networkEndpointGroups.deleteTagBinding",
      "compute.networkEndpointGroups.detachNetworkEndpoints",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.getIamPolicy",
      "compute.networkEndpointGroups.list",
      "compute.networkEndpointGroups.listEffectiveTags",
      "compute.networkEndpointGroups.listTagBindings",
      "compute.networkEndpointGroups.setIamPolicy",
      "compute.networkEndpointGroups.use",
      "compute.networks.get",
      "compute.networks.getEffectiveFirewalls",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listTagBindings",
      "compute.networks.use",
      "compute.networks.useExternalIp",
      "compute.nodeGroups.get",
      "compute.nodeTypes.get",
      "compute.projects.get",
      "compute.regionNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.create",
      "compute.regionNetworkEndpointGroups.createTagBinding",
      "compute.regionNetworkEndpointGroups.delete",
      "compute.regionNetworkEndpointGroups.deleteTagBinding",
      "compute.regionNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionNetworkEndpointGroups.listEffectiveTags",
      "compute.regionNetworkEndpointGroups.listTagBindings",
      "compute.regionNetworkEndpointGroups.use",
      "compute.regionOperations.get",
      "compute.regionOperations.list",
      "compute.regions.get",
      "compute.regions.list",
      "compute.reservations.get",
      "compute.reservations.list",
      "compute.resourcePolicies.useReadOnly",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.zoneOperations.get",
      "compute.zoneOperations.list",
      "compute.zones.get",
      "compute.zones.list",
      "container.clusterRoleBindings.create",
      "container.clusterRoleBindings.delete",
      "container.clusterRoleBindings.get",
      "container.clusterRoleBindings.list",
      "container.clusterRoleBindings.update",
      "container.clusterRoles.bind",
      "container.clusterRoles.create",
      "container.clusterRoles.delete",
      "container.clusterRoles.escalate",
      "container.clusterRoles.get",
      "container.clusterRoles.list",
      "container.clusterRoles.update",
      "container.clusters.get",
      "container.clusters.update",
      "container.customResourceDefinitions.create",
      "container.customResourceDefinitions.delete",
      "container.customResourceDefinitions.get",
      "container.customResourceDefinitions.list",
      "container.customResourceDefinitions.update",
      "container.namespaces.create",
      "container.namespaces.delete",
      "container.namespaces.get",
      "container.namespaces.list",
      "container.namespaces.update",
      "container.operations.get",
      "container.roleBindings.create",
      "container.roleBindings.delete",
      "container.roleBindings.get",
      "container.roleBindings.list",
      "container.roleBindings.update",
      "container.roles.bind",
      "container.roles.escalate",
      "dataproc.autoscalingPolicies.create",
      "dataproc.autoscalingPolicies.delete",
      "dataproc.autoscalingPolicies.get",
      "dataproc.autoscalingPolicies.getIamPolicy",
      "dataproc.autoscalingPolicies.list",
      "dataproc.autoscalingPolicies.update",
      "dataproc.autoscalingPolicies.use",
      "dataproc.clusters.create",
      "dataproc.clusters.delete",
      "dataproc.clusters.get",
      "dataproc.clusters.getIamPolicy",
      "dataproc.clusters.list",
      "dataproc.clusters.setIamPolicy",
      "dataproc.clusters.start",
      "dataproc.clusters.stop",
      "dataproc.clusters.update",
      "dataproc.clusters.use",
      "dataproc.jobs.cancel",
      "dataproc.jobs.create",
      "dataproc.jobs.delete",
      "dataproc.jobs.get",
      "dataproc.jobs.getIamPolicy",
      "dataproc.jobs.list",
      "dataproc.jobs.setIamPolicy",
      "dataproc.jobs.update",
      "dataproc.nodeGroups.create",
      "dataproc.nodeGroups.get",
      "dataproc.nodeGroups.update",
      "dataproc.operations.cancel",
      "firebase.projects.get",
      "iam.serviceAccounts.actAs",
      "iam.serviceAccounts.getAccessToken",
      "metastore.services.get",
      "orgpolicy.policy.get",
      "recommender.iamPolicyInsights.get",
      "recommender.iamPolicyInsights.list",
      "recommender.iamPolicyInsights.update",
      "recommender.iamPolicyRecommendations.get",
      "recommender.iamPolicyRecommendations.list",
      "recommender.iamPolicyRecommendations.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "storage.buckets.create",
      "storage.buckets.createTagBinding",
      "storage.buckets.delete",
      "storage.buckets.deleteTagBinding",
      "storage.buckets.get",
      "storage.buckets.getIamPolicy",
      "storage.buckets.getObjectInsights",
      "storage.buckets.list",
      "storage.buckets.listEffectiveTags",
      "storage.buckets.listTagBindings",
      "storage.buckets.setIamPolicy",
      "storage.buckets.update",
      "storage.multipartUploads.abort",
      "storage.multipartUploads.create",
      "storage.multipartUploads.list",
      "storage.multipartUploads.listParts",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.getIamPolicy",
      "storage.objects.list",
      "storage.objects.setIamPolicy",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataproc.viewer",
    "title": "Dataproc Viewer",
    "description": "Read-only access to Dataproc resources.",
    "includedPermissions": [
      "compute.machineTypes.get",
      "compute.regions.get",
      "compute.regions.list",
      "compute.zones.get",
      "compute.zones.list",
      "dataproc.autoscalingPolicies.get",
      "dataproc.autoscalingPolicies.list",
      "dataproc.batches.get",
      "dataproc.batches.list",
      "dataproc.clusters.get",
      "dataproc.clusters.list",
      "dataproc.jobs.get",
      "dataproc.jobs.list",
      "dataproc.nodeGroups.get",
      "dataproc.operations.get",
      "dataproc.operations.list",
      "dataproc.workflowTemplates.get",
      "dataproc.workflowTemplates.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataproc.worker",
    "title": "Dataproc Worker",
    "description": "Worker access to Dataproc. Intended for service accounts.",
    "includedPermissions": [
      "dataproc.agents.create",
      "dataproc.agents.delete",
      "dataproc.agents.get",
      "dataproc.agents.list",
      "dataproc.agents.update",
      "dataproc.tasks.lease",
      "dataproc.tasks.listInvalidatedLeases",
      "dataproc.tasks.reportStatus",
      "logging.logEntries.create",
      "logging.logEntries.route",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.timeSeries.create",
      "storage.buckets.get",
      "storage.multipartUploads.abort",
      "storage.multipartUploads.create",
      "storage.multipartUploads.list",
      "storage.multipartUploads.listParts",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.getIamPolicy",
      "storage.objects.list",
      "storage.objects.setIamPolicy",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataprocessing.admin",
    "title": "Data Processing Controls Resource Admin",
    "description": "Data processing controls admin who can fully manage data processing controls settings and view all datasource data.",
    "includedPermissions": [
      "billing.accounts.get",
      "billing.accounts.list",
      "dataprocessing.datasources.get",
      "dataprocessing.datasources.list",
      "dataprocessing.datasources.update",
      "dataprocessing.featurecontrols.list",
      "dataprocessing.featurecontrols.update",
      "dataprocessing.groupcontrols.get",
      "dataprocessing.groupcontrols.list",
      "dataprocessing.groupcontrols.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dataprocessing.dataSourceManager",
    "title": "Data Processing Controls Data Source Manager",
    "description": "Data processing controls data source manager who can get, list, and update the underlying data.",
    "includedPermissions": [
      "dataprocessing.datasources.list",
      "dataprocessing.datasources.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datastore.importExportAdmin",
    "title": "Cloud Datastore Import Export Admin",
    "description": "Full access to manage imports and exports.",
    "includedPermissions": [
      "appengine.applications.get",
      "datastore.databases.export",
      "datastore.databases.getMetadata",
      "datastore.databases.import",
      "datastore.operations.cancel",
      "datastore.operations.get",
      "datastore.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datastore.indexAdmin",
    "title": "Cloud Datastore Index Admin",
    "description": "Full access to manage index definitions.",
    "includedPermissions": [
      "appengine.applications.get",
      "datastore.databases.getMetadata",
      "datastore.indexes.create",
      "datastore.indexes.delete",
      "datastore.indexes.get",
      "datastore.indexes.list",
      "datastore.indexes.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datastore.keyVisualizerViewer",
    "title": "Cloud Datastore Key Visualizer Viewer",
    "description": "Full access to Key Visualizer scans.",
    "includedPermissions": [
      "datastore.databases.getMetadata",
      "datastore.keyVisualizerScans.get",
      "datastore.keyVisualizerScans.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datastore.owner",
    "title": "Cloud Datastore Owner",
    "description": "Full access to Cloud Datastore.",
    "includedPermissions": [
      "appengine.applications.get",
      "datastore.databases.create",
      "datastore.databases.createTagBinding",
      "datastore.databases.delete",
      "datastore.databases.deleteTagBinding",
      "datastore.databases.export",
      "datastore.databases.get",
      "datastore.databases.getMetadata",
      "datastore.databases.import",
      "datastore.databases.list",
      "datastore.databases.listEffectiveTags",
      "datastore.databases.listTagBindings",
      "datastore.databases.update",
      "datastore.entities.allocateIds",
      "datastore.entities.create",
      "datastore.entities.delete",
      "datastore.entities.get",
      "datastore.entities.list",
      "datastore.entities.update",
      "datastore.indexes.create",
      "datastore.indexes.delete",
      "datastore.indexes.get",
      "datastore.indexes.list",
      "datastore.indexes.update",
      "datastore.keyVisualizerScans.get",
      "datastore.keyVisualizerScans.list",
      "datastore.locations.get",
      "datastore.locations.list",
      "datastore.namespaces.get",
      "datastore.namespaces.list",
      "datastore.operations.cancel",
      "datastore.operations.delete",
      "datastore.operations.get",
      "datastore.operations.list",
      "datastore.statistics.get",
      "datastore.statistics.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datastore.user",
    "title": "Cloud Datastore User",
    "description": "Provides read/write access to data in a Cloud Datastore database. Intended for application developers and service accounts.",
    "includedPermissions": [
      "appengine.applications.get",
      "datastore.databases.get",
      "datastore.databases.getMetadata",
      "datastore.databases.list",
      "datastore.entities.allocateIds",
      "datastore.entities.create",
      "datastore.entities.delete",
      "datastore.entities.get",
      "datastore.entities.list",
      "datastore.entities.update",
      "datastore.indexes.list",
      "datastore.namespaces.get",
      "datastore.namespaces.list",
      "datastore.statistics.get",
      "datastore.statistics.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datastore.viewer",
    "title": "Cloud Datastore Viewer",
    "description": "Read access to all Cloud Datastore resources.",
    "includedPermissions": [
      "appengine.applications.get",
      "datastore.databases.get",
      "datastore.databases.getMetadata",
      "datastore.databases.list",
      "datastore.entities.get",
      "datastore.entities.list",
      "datastore.indexes.get",
      "datastore.indexes.list",
      "datastore.namespaces.get",
      "datastore.namespaces.list",
      "datastore.statistics.get",
      "datastore.statistics.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datastream.admin",
    "title": "Datastream Admin",
    "description": "Full access to all Datastream resources.",
    "includedPermissions": [
      "datastream.connectionProfiles.create",
      "datastream.connectionProfiles.createTagBinding",
      "datastream.connectionProfiles.delete",
      "datastream.connectionProfiles.deleteTagBinding",
      "datastream.connectionProfiles.destinationTypes",
      "datastream.connectionProfiles.discover",
      "datastream.connectionProfiles.get",
      "datastream.connectionProfiles.getIamPolicy",
      "datastream.connectionProfiles.list",
      "datastream.connectionProfiles.listEffectiveTags",
      "datastream.connectionProfiles.listStaticServiceIps",
      "datastream.connectionProfiles.listTagBindings",
      "datastream.connectionProfiles.setIamPolicy",
      "datastream.connectionProfiles.sourceTypes",
      "datastream.connectionProfiles.update",
      "datastream.locations.fetchStaticIps",
      "datastream.locations.get",
      "datastream.locations.list",
      "datastream.objects.get",
      "datastream.objects.list",
      "datastream.objects.startBackfillJob",
      "datastream.objects.stopBackfillJob",
      "datastream.operations.cancel",
      "datastream.operations.delete",
      "datastream.operations.get",
      "datastream.operations.list",
      "datastream.privateConnections.create",
      "datastream.privateConnections.createTagBinding",
      "datastream.privateConnections.delete",
      "datastream.privateConnections.deleteTagBinding",
      "datastream.privateConnections.get",
      "datastream.privateConnections.getIamPolicy",
      "datastream.privateConnections.list",
      "datastream.privateConnections.listEffectiveTags",
      "datastream.privateConnections.listTagBindings",
      "datastream.privateConnections.setIamPolicy",
      "datastream.routes.create",
      "datastream.routes.delete",
      "datastream.routes.get",
      "datastream.routes.getIamPolicy",
      "datastream.routes.list",
      "datastream.routes.setIamPolicy",
      "datastream.streams.computeState",
      "datastream.streams.create",
      "datastream.streams.createTagBinding",
      "datastream.streams.delete",
      "datastream.streams.deleteTagBinding",
      "datastream.streams.fetchErrors",
      "datastream.streams.get",
      "datastream.streams.getIamPolicy",
      "datastream.streams.list",
      "datastream.streams.listEffectiveTags",
      "datastream.streams.listTagBindings",
      "datastream.streams.pause",
      "datastream.streams.resume",
      "datastream.streams.setIamPolicy",
      "datastream.streams.start",
      "datastream.streams.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/datastream.serviceAgent",
    "title": "Datastream Service Agent",
    "description": "Grants Cloud Datastream permissions to write data in the user project.",
    "includedPermissions": [
      "bigquery.datasets.create",
      "bigquery.datasets.get",
      "bigquery.jobs.create",
      "bigquery.jobs.delete",
      "bigquery.jobs.get",
      "bigquery.jobs.list",
      "bigquery.jobs.update",
      "bigquery.tables.create",
      "bigquery.tables.get",
      "bigquery.tables.getData",
      "bigquery.tables.list",
      "bigquery.tables.update",
      "bigquery.tables.updateData",
      "compute.globalAddresses.create",
      "compute.globalAddresses.createInternal",
      "compute.globalAddresses.delete",
      "compute.globalAddresses.deleteInternal",
      "compute.globalAddresses.get",
      "compute.globalOperations.get",
      "compute.networks.addPeering",
      "compute.networks.get",
      "compute.networks.listPeeringRoutes",
      "compute.networks.removePeering",
      "compute.networks.use",
      "compute.routes.get",
      "compute.routes.list",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "pubsub.topics.publish",
      "storage.buckets.get",
      "storage.objects.create",
      "storage.objects.get",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datastream.viewer",
    "title": "Datastream Viewer",
    "description": "Read-only access to all Datastream resources.",
    "includedPermissions": [
      "datastream.connectionProfiles.destinationTypes",
      "datastream.connectionProfiles.discover",
      "datastream.connectionProfiles.get",
      "datastream.connectionProfiles.getIamPolicy",
      "datastream.connectionProfiles.list",
      "datastream.connectionProfiles.listEffectiveTags",
      "datastream.connectionProfiles.listStaticServiceIps",
      "datastream.connectionProfiles.listTagBindings",
      "datastream.connectionProfiles.sourceTypes",
      "datastream.locations.fetchStaticIps",
      "datastream.locations.get",
      "datastream.locations.list",
      "datastream.objects.get",
      "datastream.objects.list",
      "datastream.operations.get",
      "datastream.operations.list",
      "datastream.privateConnections.get",
      "datastream.privateConnections.getIamPolicy",
      "datastream.privateConnections.list",
      "datastream.privateConnections.listEffectiveTags",
      "datastream.privateConnections.listTagBindings",
      "datastream.routes.get",
      "datastream.routes.getIamPolicy",
      "datastream.routes.list",
      "datastream.streams.fetchErrors",
      "datastream.streams.get",
      "datastream.streams.getIamPolicy",
      "datastream.streams.list",
      "datastream.streams.listEffectiveTags",
      "datastream.streams.listTagBindings",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/datastudio.admin",
    "title": "Data Studio Admin",
    "description": "Data Studio Admin",
    "includedPermissions": [
      "datastudio.datasources.delete",
      "datastudio.datasources.get",
      "datastudio.datasources.getIamPolicy",
      "datastudio.datasources.move",
      "datastudio.datasources.restoreTrash",
      "datastudio.datasources.search",
      "datastudio.datasources.setIamPolicy",
      "datastudio.datasources.settingsShare",
      "datastudio.datasources.share",
      "datastudio.datasources.trash",
      "datastudio.datasources.update",
      "datastudio.reports.delete",
      "datastudio.reports.get",
      "datastudio.reports.getIamPolicy",
      "datastudio.reports.move",
      "datastudio.reports.restoreTrash",
      "datastudio.reports.search",
      "datastudio.reports.setIamPolicy",
      "datastudio.reports.settingsShare",
      "datastudio.reports.share",
      "datastudio.reports.trash",
      "datastudio.reports.update",
      "datastudio.workspaces.createUnder",
      "datastudio.workspaces.delete",
      "datastudio.workspaces.get",
      "datastudio.workspaces.getIamPolicy",
      "datastudio.workspaces.moveIn",
      "datastudio.workspaces.moveOut",
      "datastudio.workspaces.restoreTrash",
      "datastudio.workspaces.search",
      "datastudio.workspaces.setIamPolicy",
      "datastudio.workspaces.trash",
      "datastudio.workspaces.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/datastudio.contentManager",
    "title": "Data Studio Workspace Content Manager",
    "description": "Content Manager of a Data Studio resource",
    "includedPermissions": [
      "datastudio.datasources.get",
      "datastudio.datasources.getIamPolicy",
      "datastudio.datasources.restoreTrash",
      "datastudio.datasources.search",
      "datastudio.datasources.settingsShare",
      "datastudio.datasources.share",
      "datastudio.datasources.trash",
      "datastudio.datasources.update",
      "datastudio.reports.get",
      "datastudio.reports.getIamPolicy",
      "datastudio.reports.restoreTrash",
      "datastudio.reports.search",
      "datastudio.reports.settingsShare",
      "datastudio.reports.share",
      "datastudio.reports.trash",
      "datastudio.reports.update",
      "datastudio.workspaces.createUnder",
      "datastudio.workspaces.get",
      "datastudio.workspaces.getIamPolicy",
      "datastudio.workspaces.moveIn",
      "datastudio.workspaces.search",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/datastudio.contributor",
    "title": "Data Studio Workspace Contributor",
    "description": "Contributor of a Data Studio resource",
    "includedPermissions": [
      "datastudio.datasources.get",
      "datastudio.datasources.getIamPolicy",
      "datastudio.datasources.restoreTrash",
      "datastudio.datasources.search",
      "datastudio.datasources.settingsShare",
      "datastudio.datasources.share",
      "datastudio.datasources.update",
      "datastudio.reports.get",
      "datastudio.reports.getIamPolicy",
      "datastudio.reports.restoreTrash",
      "datastudio.reports.search",
      "datastudio.reports.settingsShare",
      "datastudio.reports.share",
      "datastudio.reports.update",
      "datastudio.workspaces.createUnder",
      "datastudio.workspaces.get",
      "datastudio.workspaces.getIamPolicy",
      "datastudio.workspaces.moveIn",
      "datastudio.workspaces.search",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/datastudio.editor",
    "title": "Data Studio Asset Editor",
    "description": "Editor of a Data Studio resource",
    "includedPermissions": [
      "datastudio.datasources.get",
      "datastudio.datasources.getIamPolicy",
      "datastudio.datasources.search",
      "datastudio.datasources.update",
      "datastudio.reports.get",
      "datastudio.reports.getIamPolicy",
      "datastudio.reports.search",
      "datastudio.reports.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/datastudio.manager",
    "title": "Data Studio Workspace Manager",
    "description": "Manager of a Data Studio resource",
    "includedPermissions": [
      "datastudio.datasources.delete",
      "datastudio.datasources.get",
      "datastudio.datasources.getIamPolicy",
      "datastudio.datasources.move",
      "datastudio.datasources.restoreTrash",
      "datastudio.datasources.search",
      "datastudio.datasources.setIamPolicy",
      "datastudio.datasources.settingsShare",
      "datastudio.datasources.share",
      "datastudio.datasources.trash",
      "datastudio.datasources.update",
      "datastudio.reports.delete",
      "datastudio.reports.get",
      "datastudio.reports.getIamPolicy",
      "datastudio.reports.move",
      "datastudio.reports.restoreTrash",
      "datastudio.reports.search",
      "datastudio.reports.setIamPolicy",
      "datastudio.reports.settingsShare",
      "datastudio.reports.share",
      "datastudio.reports.trash",
      "datastudio.reports.update",
      "datastudio.workspaces.createUnder",
      "datastudio.workspaces.delete",
      "datastudio.workspaces.get",
      "datastudio.workspaces.getIamPolicy",
      "datastudio.workspaces.moveIn",
      "datastudio.workspaces.moveOut",
      "datastudio.workspaces.restoreTrash",
      "datastudio.workspaces.search",
      "datastudio.workspaces.setIamPolicy",
      "datastudio.workspaces.trash",
      "datastudio.workspaces.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/datastudio.serviceAgent",
    "title": "Data Studio Service Agent",
    "description": "Grants Data Studio Service Account access to manage resources.",
    "includedPermissions": [
      "bigquery.jobs.create"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/datastudio.viewer",
    "title": "Data Studio Asset Viewer",
    "description": "Viewer of a Data Studio resource",
    "includedPermissions": [
      "datastudio.datasources.get",
      "datastudio.datasources.search",
      "datastudio.reports.get",
      "datastudio.reports.search",
      "resourcemanager.projects.get"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/dellemccloudonefs.admin",
    "title": "Dell EMC Cloud OneFS Admin",
    "description": "This role is managed by Dell EMC, not Google.",
    "includedPermissions": [
      "cloudonefs.isiloncloud.com/clusters.create",
      "cloudonefs.isiloncloud.com/clusters.delete",
      "cloudonefs.isiloncloud.com/clusters.get",
      "cloudonefs.isiloncloud.com/clusters.list",
      "cloudonefs.isiloncloud.com/clusters.update",
      "cloudonefs.isiloncloud.com/clusters.updateAdvancedSettings",
      "cloudonefs.isiloncloud.com/fileshares.create",
      "cloudonefs.isiloncloud.com/fileshares.delete",
      "cloudonefs.isiloncloud.com/fileshares.get",
      "cloudonefs.isiloncloud.com/fileshares.list",
      "cloudonefs.isiloncloud.com/fileshares.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/dellemccloudonefs.user",
    "title": "Dell EMC Cloud OneFS User",
    "description": "This role is managed by Dell EMC, not Google.",
    "includedPermissions": [
      "cloudonefs.isiloncloud.com/clusters.create",
      "cloudonefs.isiloncloud.com/clusters.delete",
      "cloudonefs.isiloncloud.com/clusters.get",
      "cloudonefs.isiloncloud.com/clusters.list",
      "cloudonefs.isiloncloud.com/clusters.update",
      "cloudonefs.isiloncloud.com/fileshares.create",
      "cloudonefs.isiloncloud.com/fileshares.delete",
      "cloudonefs.isiloncloud.com/fileshares.get",
      "cloudonefs.isiloncloud.com/fileshares.list",
      "cloudonefs.isiloncloud.com/fileshares.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/dellemccloudonefs.viewer",
    "title": "Dell EMC Cloud OneFS Viewer",
    "description": "This role is managed by Dell EMC, not Google.",
    "includedPermissions": [
      "cloudonefs.isiloncloud.com/clusters.get",
      "cloudonefs.isiloncloud.com/clusters.list",
      "cloudonefs.isiloncloud.com/fileshares.get",
      "cloudonefs.isiloncloud.com/fileshares.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/deploymentmanager.editor",
    "title": "Deployment Manager Editor",
    "description": "Read and Write access to all Deployment Manager resources.",
    "includedPermissions": [
      "deploymentmanager.compositeTypes.create",
      "deploymentmanager.compositeTypes.delete",
      "deploymentmanager.compositeTypes.get",
      "deploymentmanager.compositeTypes.list",
      "deploymentmanager.compositeTypes.update",
      "deploymentmanager.deployments.cancelPreview",
      "deploymentmanager.deployments.create",
      "deploymentmanager.deployments.delete",
      "deploymentmanager.deployments.get",
      "deploymentmanager.deployments.list",
      "deploymentmanager.deployments.stop",
      "deploymentmanager.deployments.update",
      "deploymentmanager.manifests.get",
      "deploymentmanager.manifests.list",
      "deploymentmanager.operations.get",
      "deploymentmanager.operations.list",
      "deploymentmanager.resources.get",
      "deploymentmanager.resources.list",
      "deploymentmanager.typeProviders.create",
      "deploymentmanager.typeProviders.delete",
      "deploymentmanager.typeProviders.get",
      "deploymentmanager.typeProviders.getType",
      "deploymentmanager.typeProviders.list",
      "deploymentmanager.typeProviders.listTypes",
      "deploymentmanager.typeProviders.update",
      "deploymentmanager.types.create",
      "deploymentmanager.types.delete",
      "deploymentmanager.types.get",
      "deploymentmanager.types.list",
      "deploymentmanager.types.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/deploymentmanager.typeEditor",
    "title": "Deployment Manager Type Editor",
    "description": "Read and Write access to all Type Registry resources.",
    "includedPermissions": [
      "deploymentmanager.compositeTypes.create",
      "deploymentmanager.compositeTypes.delete",
      "deploymentmanager.compositeTypes.get",
      "deploymentmanager.compositeTypes.list",
      "deploymentmanager.compositeTypes.update",
      "deploymentmanager.operations.get",
      "deploymentmanager.typeProviders.create",
      "deploymentmanager.typeProviders.delete",
      "deploymentmanager.typeProviders.get",
      "deploymentmanager.typeProviders.getType",
      "deploymentmanager.typeProviders.list",
      "deploymentmanager.typeProviders.listTypes",
      "deploymentmanager.typeProviders.update",
      "deploymentmanager.types.create",
      "deploymentmanager.types.delete",
      "deploymentmanager.types.get",
      "deploymentmanager.types.list",
      "deploymentmanager.types.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/deploymentmanager.typeViewer",
    "title": "Deployment Manager Type Viewer",
    "description": "Read-only access to all Type Registry resources.",
    "includedPermissions": [
      "deploymentmanager.compositeTypes.get",
      "deploymentmanager.compositeTypes.list",
      "deploymentmanager.typeProviders.get",
      "deploymentmanager.typeProviders.getType",
      "deploymentmanager.typeProviders.list",
      "deploymentmanager.typeProviders.listTypes",
      "deploymentmanager.types.get",
      "deploymentmanager.types.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/deploymentmanager.viewer",
    "title": "Deployment Manager Viewer",
    "description": "Read-only access to all Deployment Manager resources.",
    "includedPermissions": [
      "deploymentmanager.compositeTypes.get",
      "deploymentmanager.compositeTypes.list",
      "deploymentmanager.deployments.get",
      "deploymentmanager.deployments.list",
      "deploymentmanager.manifests.get",
      "deploymentmanager.manifests.list",
      "deploymentmanager.operations.get",
      "deploymentmanager.operations.list",
      "deploymentmanager.resources.get",
      "deploymentmanager.resources.list",
      "deploymentmanager.typeProviders.get",
      "deploymentmanager.typeProviders.getType",
      "deploymentmanager.typeProviders.list",
      "deploymentmanager.typeProviders.listTypes",
      "deploymentmanager.types.get",
      "deploymentmanager.types.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dialogflow.aamAdmin",
    "title": "CX Premium Admin",
    "description": "An admin has access to all resources and can perform all administrative actions in an AAM project.",
    "includedPermissions": [
      "dialogflow.agents.export",
      "dialogflow.agents.get",
      "dialogflow.agents.list",
      "dialogflow.agents.search",
      "dialogflow.agents.searchResources",
      "dialogflow.answerrecords.get",
      "dialogflow.answerrecords.list",
      "dialogflow.callMatchers.list",
      "dialogflow.changelogs.get",
      "dialogflow.changelogs.list",
      "dialogflow.contexts.get",
      "dialogflow.contexts.list",
      "dialogflow.conversationDatasets.get",
      "dialogflow.conversationDatasets.list",
      "dialogflow.conversationModels.get",
      "dialogflow.conversationModels.list",
      "dialogflow.conversationProfiles.get",
      "dialogflow.conversationProfiles.list",
      "dialogflow.conversations.get",
      "dialogflow.conversations.list",
      "dialogflow.deployments.get",
      "dialogflow.deployments.list",
      "dialogflow.documents.get",
      "dialogflow.documents.list",
      "dialogflow.entityTypes.get",
      "dialogflow.entityTypes.list",
      "dialogflow.environments.get",
      "dialogflow.environments.list",
      "dialogflow.experiments.get",
      "dialogflow.experiments.list",
      "dialogflow.flows.get",
      "dialogflow.flows.list",
      "dialogflow.fulfillments.get",
      "dialogflow.integrations.get",
      "dialogflow.integrations.list",
      "dialogflow.intents.get",
      "dialogflow.intents.list",
      "dialogflow.knowledgeBases.get",
      "dialogflow.knowledgeBases.list",
      "dialogflow.messages.list",
      "dialogflow.modelEvaluations.get",
      "dialogflow.modelEvaluations.list",
      "dialogflow.operations.get",
      "dialogflow.pages.get",
      "dialogflow.pages.list",
      "dialogflow.participants.get",
      "dialogflow.participants.list",
      "dialogflow.phoneNumberOrders.get",
      "dialogflow.phoneNumberOrders.list",
      "dialogflow.phoneNumbers.list",
      "dialogflow.securitySettings.get",
      "dialogflow.securitySettings.list",
      "dialogflow.sessionEntityTypes.get",
      "dialogflow.sessionEntityTypes.list",
      "dialogflow.smartMessagingEntries.get",
      "dialogflow.smartMessagingEntries.list",
      "dialogflow.testcases.get",
      "dialogflow.testcases.list",
      "dialogflow.transitionRouteGroups.get",
      "dialogflow.transitionRouteGroups.list",
      "dialogflow.versions.get",
      "dialogflow.versions.list",
      "dialogflow.webhooks.get",
      "dialogflow.webhooks.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dialogflow.aamConversationalArchitect",
    "title": "CX Premium Conversational Architect",
    "description": "A Conversational Architect can label conversational data, approve taxonomy changes and design virtual agents for a customer's use cases.",
    "includedPermissions": [
      "dialogflow.agents.export",
      "dialogflow.agents.get",
      "dialogflow.agents.list",
      "dialogflow.agents.search",
      "dialogflow.agents.searchResources",
      "dialogflow.answerrecords.get",
      "dialogflow.answerrecords.list",
      "dialogflow.callMatchers.list",
      "dialogflow.changelogs.get",
      "dialogflow.changelogs.list",
      "dialogflow.contexts.get",
      "dialogflow.contexts.list",
      "dialogflow.conversationDatasets.get",
      "dialogflow.conversationDatasets.list",
      "dialogflow.conversationModels.get",
      "dialogflow.conversationModels.list",
      "dialogflow.conversationProfiles.get",
      "dialogflow.conversationProfiles.list",
      "dialogflow.conversations.get",
      "dialogflow.conversations.list",
      "dialogflow.deployments.get",
      "dialogflow.deployments.list",
      "dialogflow.documents.get",
      "dialogflow.documents.list",
      "dialogflow.entityTypes.get",
      "dialogflow.entityTypes.list",
      "dialogflow.environments.get",
      "dialogflow.environments.list",
      "dialogflow.experiments.get",
      "dialogflow.experiments.list",
      "dialogflow.flows.get",
      "dialogflow.flows.list",
      "dialogflow.fulfillments.get",
      "dialogflow.integrations.get",
      "dialogflow.integrations.list",
      "dialogflow.intents.get",
      "dialogflow.intents.list",
      "dialogflow.knowledgeBases.get",
      "dialogflow.knowledgeBases.list",
      "dialogflow.messages.list",
      "dialogflow.modelEvaluations.get",
      "dialogflow.modelEvaluations.list",
      "dialogflow.operations.get",
      "dialogflow.pages.get",
      "dialogflow.pages.list",
      "dialogflow.participants.get",
      "dialogflow.participants.list",
      "dialogflow.phoneNumberOrders.get",
      "dialogflow.phoneNumberOrders.list",
      "dialogflow.phoneNumbers.list",
      "dialogflow.securitySettings.get",
      "dialogflow.securitySettings.list",
      "dialogflow.sessionEntityTypes.get",
      "dialogflow.sessionEntityTypes.list",
      "dialogflow.smartMessagingEntries.get",
      "dialogflow.smartMessagingEntries.list",
      "dialogflow.testcases.get",
      "dialogflow.testcases.list",
      "dialogflow.transitionRouteGroups.get",
      "dialogflow.transitionRouteGroups.list",
      "dialogflow.versions.get",
      "dialogflow.versions.list",
      "dialogflow.webhooks.get",
      "dialogflow.webhooks.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dialogflow.aamDialogDesigner",
    "title": "CX Premium Dialog Designer",
    "description": "A Dialog Designer can label conversational data and propose taxonomy changes for virtual agent modeling.",
    "includedPermissions": [
      "dialogflow.agents.export",
      "dialogflow.agents.get",
      "dialogflow.agents.list",
      "dialogflow.agents.search",
      "dialogflow.agents.searchResources",
      "dialogflow.answerrecords.get",
      "dialogflow.answerrecords.list",
      "dialogflow.callMatchers.list",
      "dialogflow.changelogs.get",
      "dialogflow.changelogs.list",
      "dialogflow.contexts.get",
      "dialogflow.contexts.list",
      "dialogflow.conversationDatasets.get",
      "dialogflow.conversationDatasets.list",
      "dialogflow.conversationModels.get",
      "dialogflow.conversationModels.list",
      "dialogflow.conversationProfiles.get",
      "dialogflow.conversationProfiles.list",
      "dialogflow.conversations.get",
      "dialogflow.conversations.list",
      "dialogflow.deployments.get",
      "dialogflow.deployments.list",
      "dialogflow.documents.get",
      "dialogflow.documents.list",
      "dialogflow.entityTypes.get",
      "dialogflow.entityTypes.list",
      "dialogflow.environments.get",
      "dialogflow.environments.list",
      "dialogflow.experiments.get",
      "dialogflow.experiments.list",
      "dialogflow.flows.get",
      "dialogflow.flows.list",
      "dialogflow.fulfillments.get",
      "dialogflow.integrations.get",
      "dialogflow.integrations.list",
      "dialogflow.intents.get",
      "dialogflow.intents.list",
      "dialogflow.knowledgeBases.get",
      "dialogflow.knowledgeBases.list",
      "dialogflow.messages.list",
      "dialogflow.modelEvaluations.get",
      "dialogflow.modelEvaluations.list",
      "dialogflow.operations.get",
      "dialogflow.pages.get",
      "dialogflow.pages.list",
      "dialogflow.participants.get",
      "dialogflow.participants.list",
      "dialogflow.phoneNumberOrders.get",
      "dialogflow.phoneNumberOrders.list",
      "dialogflow.phoneNumbers.list",
      "dialogflow.securitySettings.get",
      "dialogflow.securitySettings.list",
      "dialogflow.sessionEntityTypes.get",
      "dialogflow.sessionEntityTypes.list",
      "dialogflow.smartMessagingEntries.get",
      "dialogflow.smartMessagingEntries.list",
      "dialogflow.testcases.get",
      "dialogflow.testcases.list",
      "dialogflow.transitionRouteGroups.get",
      "dialogflow.transitionRouteGroups.list",
      "dialogflow.versions.get",
      "dialogflow.versions.list",
      "dialogflow.webhooks.get",
      "dialogflow.webhooks.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dialogflow.aamLeadDialogDesigner",
    "title": "CX Premium Lead Dialog Designer",
    "description": "A Dialog Designer Lead can label conversational data and approve taxonomy changes for virtual agent modeling.",
    "includedPermissions": [
      "dialogflow.agents.export",
      "dialogflow.agents.get",
      "dialogflow.agents.list",
      "dialogflow.agents.search",
      "dialogflow.agents.searchResources",
      "dialogflow.answerrecords.get",
      "dialogflow.answerrecords.list",
      "dialogflow.callMatchers.list",
      "dialogflow.changelogs.get",
      "dialogflow.changelogs.list",
      "dialogflow.contexts.get",
      "dialogflow.contexts.list",
      "dialogflow.conversationDatasets.get",
      "dialogflow.conversationDatasets.list",
      "dialogflow.conversationModels.get",
      "dialogflow.conversationModels.list",
      "dialogflow.conversationProfiles.get",
      "dialogflow.conversationProfiles.list",
      "dialogflow.conversations.get",
      "dialogflow.conversations.list",
      "dialogflow.deployments.get",
      "dialogflow.deployments.list",
      "dialogflow.documents.get",
      "dialogflow.documents.list",
      "dialogflow.entityTypes.get",
      "dialogflow.entityTypes.list",
      "dialogflow.environments.get",
      "dialogflow.environments.list",
      "dialogflow.experiments.get",
      "dialogflow.experiments.list",
      "dialogflow.flows.get",
      "dialogflow.flows.list",
      "dialogflow.fulfillments.get",
      "dialogflow.integrations.get",
      "dialogflow.integrations.list",
      "dialogflow.intents.get",
      "dialogflow.intents.list",
      "dialogflow.knowledgeBases.get",
      "dialogflow.knowledgeBases.list",
      "dialogflow.messages.list",
      "dialogflow.modelEvaluations.get",
      "dialogflow.modelEvaluations.list",
      "dialogflow.operations.get",
      "dialogflow.pages.get",
      "dialogflow.pages.list",
      "dialogflow.participants.get",
      "dialogflow.participants.list",
      "dialogflow.phoneNumberOrders.get",
      "dialogflow.phoneNumberOrders.list",
      "dialogflow.phoneNumbers.list",
      "dialogflow.securitySettings.get",
      "dialogflow.securitySettings.list",
      "dialogflow.sessionEntityTypes.get",
      "dialogflow.sessionEntityTypes.list",
      "dialogflow.smartMessagingEntries.get",
      "dialogflow.smartMessagingEntries.list",
      "dialogflow.testcases.get",
      "dialogflow.testcases.list",
      "dialogflow.transitionRouteGroups.get",
      "dialogflow.transitionRouteGroups.list",
      "dialogflow.versions.get",
      "dialogflow.versions.list",
      "dialogflow.webhooks.get",
      "dialogflow.webhooks.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dialogflow.aamViewer",
    "title": "CX Premium Viewer",
    "description": "A user can view the taxonomy and data reports in an AAM project.",
    "includedPermissions": [
      "dialogflow.agents.export",
      "dialogflow.agents.get",
      "dialogflow.agents.list",
      "dialogflow.agents.search",
      "dialogflow.agents.searchResources",
      "dialogflow.answerrecords.get",
      "dialogflow.answerrecords.list",
      "dialogflow.callMatchers.list",
      "dialogflow.changelogs.get",
      "dialogflow.changelogs.list",
      "dialogflow.contexts.get",
      "dialogflow.contexts.list",
      "dialogflow.conversationDatasets.get",
      "dialogflow.conversationDatasets.list",
      "dialogflow.conversationModels.get",
      "dialogflow.conversationModels.list",
      "dialogflow.conversationProfiles.get",
      "dialogflow.conversationProfiles.list",
      "dialogflow.conversations.get",
      "dialogflow.conversations.list",
      "dialogflow.deployments.get",
      "dialogflow.deployments.list",
      "dialogflow.documents.get",
      "dialogflow.documents.list",
      "dialogflow.entityTypes.get",
      "dialogflow.entityTypes.list",
      "dialogflow.environments.get",
      "dialogflow.environments.list",
      "dialogflow.experiments.get",
      "dialogflow.experiments.list",
      "dialogflow.flows.get",
      "dialogflow.flows.list",
      "dialogflow.fulfillments.get",
      "dialogflow.integrations.get",
      "dialogflow.integrations.list",
      "dialogflow.intents.get",
      "dialogflow.intents.list",
      "dialogflow.knowledgeBases.get",
      "dialogflow.knowledgeBases.list",
      "dialogflow.messages.list",
      "dialogflow.modelEvaluations.get",
      "dialogflow.modelEvaluations.list",
      "dialogflow.operations.get",
      "dialogflow.pages.get",
      "dialogflow.pages.list",
      "dialogflow.participants.get",
      "dialogflow.participants.list",
      "dialogflow.phoneNumberOrders.get",
      "dialogflow.phoneNumberOrders.list",
      "dialogflow.phoneNumbers.list",
      "dialogflow.securitySettings.get",
      "dialogflow.securitySettings.list",
      "dialogflow.sessionEntityTypes.get",
      "dialogflow.sessionEntityTypes.list",
      "dialogflow.smartMessagingEntries.get",
      "dialogflow.smartMessagingEntries.list",
      "dialogflow.testcases.get",
      "dialogflow.testcases.list",
      "dialogflow.transitionRouteGroups.get",
      "dialogflow.transitionRouteGroups.list",
      "dialogflow.versions.get",
      "dialogflow.versions.list",
      "dialogflow.webhooks.get",
      "dialogflow.webhooks.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dialogflow.admin",
    "title": "Dialogflow API Admin",
    "description": "Can query for intent; read & write session properties; read & write agent properties.",
    "includedPermissions": [
      "dialogflow.agents.create",
      "dialogflow.agents.delete",
      "dialogflow.agents.export",
      "dialogflow.agents.get",
      "dialogflow.agents.import",
      "dialogflow.agents.list",
      "dialogflow.agents.restore",
      "dialogflow.agents.search",
      "dialogflow.agents.searchResources",
      "dialogflow.agents.train",
      "dialogflow.agents.update",
      "dialogflow.agents.validate",
      "dialogflow.answerrecords.delete",
      "dialogflow.answerrecords.get",
      "dialogflow.answerrecords.list",
      "dialogflow.answerrecords.update",
      "dialogflow.callMatchers.create",
      "dialogflow.callMatchers.delete",
      "dialogflow.callMatchers.list",
      "dialogflow.changelogs.get",
      "dialogflow.changelogs.list",
      "dialogflow.contexts.create",
      "dialogflow.contexts.delete",
      "dialogflow.contexts.get",
      "dialogflow.contexts.list",
      "dialogflow.contexts.update",
      "dialogflow.conversationDatasets.create",
      "dialogflow.conversationDatasets.delete",
      "dialogflow.conversationDatasets.get",
      "dialogflow.conversationDatasets.import",
      "dialogflow.conversationDatasets.list",
      "dialogflow.conversationModels.create",
      "dialogflow.conversationModels.delete",
      "dialogflow.conversationModels.deploy",
      "dialogflow.conversationModels.get",
      "dialogflow.conversationModels.list",
      "dialogflow.conversationModels.undeploy",
      "dialogflow.conversationProfiles.create",
      "dialogflow.conversationProfiles.delete",
      "dialogflow.conversationProfiles.get",
      "dialogflow.conversationProfiles.list",
      "dialogflow.conversationProfiles.update",
      "dialogflow.conversations.addPhoneNumber",
      "dialogflow.conversations.complete",
      "dialogflow.conversations.create",
      "dialogflow.conversations.get",
      "dialogflow.conversations.list",
      "dialogflow.conversations.update",
      "dialogflow.deployments.get",
      "dialogflow.deployments.list",
      "dialogflow.documents.create",
      "dialogflow.documents.delete",
      "dialogflow.documents.get",
      "dialogflow.documents.list",
      "dialogflow.entityTypes.create",
      "dialogflow.entityTypes.createEntity",
      "dialogflow.entityTypes.delete",
      "dialogflow.entityTypes.deleteEntity",
      "dialogflow.entityTypes.get",
      "dialogflow.entityTypes.list",
      "dialogflow.entityTypes.update",
      "dialogflow.entityTypes.updateEntity",
      "dialogflow.environments.create",
      "dialogflow.environments.delete",
      "dialogflow.environments.get",
      "dialogflow.environments.getHistory",
      "dialogflow.environments.list",
      "dialogflow.environments.lookupHistory",
      "dialogflow.environments.runContinuousTest",
      "dialogflow.environments.update",
      "dialogflow.experiments.create",
      "dialogflow.experiments.delete",
      "dialogflow.experiments.get",
      "dialogflow.experiments.list",
      "dialogflow.experiments.update",
      "dialogflow.flows.create",
      "dialogflow.flows.delete",
      "dialogflow.flows.get",
      "dialogflow.flows.list",
      "dialogflow.flows.train",
      "dialogflow.flows.update",
      "dialogflow.flows.validate",
      "dialogflow.fulfillments.get",
      "dialogflow.fulfillments.update",
      "dialogflow.integrations.create",
      "dialogflow.integrations.delete",
      "dialogflow.integrations.get",
      "dialogflow.integrations.list",
      "dialogflow.integrations.update",
      "dialogflow.intents.create",
      "dialogflow.intents.delete",
      "dialogflow.intents.get",
      "dialogflow.intents.list",
      "dialogflow.intents.update",
      "dialogflow.knowledgeBases.create",
      "dialogflow.knowledgeBases.delete",
      "dialogflow.knowledgeBases.get",
      "dialogflow.knowledgeBases.list",
      "dialogflow.knowledgeBases.update",
      "dialogflow.messages.list",
      "dialogflow.modelEvaluations.get",
      "dialogflow.modelEvaluations.list",
      "dialogflow.operations.get",
      "dialogflow.pages.create",
      "dialogflow.pages.delete",
      "dialogflow.pages.get",
      "dialogflow.pages.list",
      "dialogflow.pages.update",
      "dialogflow.participants.analyzeContent",
      "dialogflow.participants.create",
      "dialogflow.participants.get",
      "dialogflow.participants.list",
      "dialogflow.participants.suggest",
      "dialogflow.participants.update",
      "dialogflow.phoneNumberOrders.cancel",
      "dialogflow.phoneNumberOrders.create",
      "dialogflow.phoneNumberOrders.get",
      "dialogflow.phoneNumberOrders.list",
      "dialogflow.phoneNumberOrders.update",
      "dialogflow.phoneNumbers.delete",
      "dialogflow.phoneNumbers.list",
      "dialogflow.phoneNumbers.undelete",
      "dialogflow.phoneNumbers.update",
      "dialogflow.securitySettings.create",
      "dialogflow.securitySettings.delete",
      "dialogflow.securitySettings.get",
      "dialogflow.securitySettings.list",
      "dialogflow.securitySettings.update",
      "dialogflow.sessionEntityTypes.create",
      "dialogflow.sessionEntityTypes.delete",
      "dialogflow.sessionEntityTypes.get",
      "dialogflow.sessionEntityTypes.list",
      "dialogflow.sessionEntityTypes.update",
      "dialogflow.sessions.detectIntent",
      "dialogflow.sessions.streamingDetectIntent",
      "dialogflow.smartMessagingEntries.create",
      "dialogflow.smartMessagingEntries.delete",
      "dialogflow.smartMessagingEntries.get",
      "dialogflow.smartMessagingEntries.list",
      "dialogflow.testcases.calculateCoverage",
      "dialogflow.testcases.create",
      "dialogflow.testcases.delete",
      "dialogflow.testcases.export",
      "dialogflow.testcases.get",
      "dialogflow.testcases.import",
      "dialogflow.testcases.list",
      "dialogflow.testcases.run",
      "dialogflow.testcases.update",
      "dialogflow.transitionRouteGroups.create",
      "dialogflow.transitionRouteGroups.delete",
      "dialogflow.transitionRouteGroups.get",
      "dialogflow.transitionRouteGroups.list",
      "dialogflow.transitionRouteGroups.update",
      "dialogflow.versions.create",
      "dialogflow.versions.delete",
      "dialogflow.versions.get",
      "dialogflow.versions.list",
      "dialogflow.versions.load",
      "dialogflow.versions.update",
      "dialogflow.webhooks.create",
      "dialogflow.webhooks.delete",
      "dialogflow.webhooks.get",
      "dialogflow.webhooks.list",
      "dialogflow.webhooks.update",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dialogflow.client",
    "title": "Dialogflow API Client",
    "description": "Can call all methods on sessions and conversations resources as well as their descendants.",
    "includedPermissions": [
      "dialogflow.contexts.create",
      "dialogflow.contexts.delete",
      "dialogflow.contexts.get",
      "dialogflow.contexts.list",
      "dialogflow.contexts.update",
      "dialogflow.conversations.addPhoneNumber",
      "dialogflow.conversations.complete",
      "dialogflow.conversations.create",
      "dialogflow.conversations.get",
      "dialogflow.conversations.list",
      "dialogflow.conversations.update",
      "dialogflow.environments.runContinuousTest",
      "dialogflow.messages.list",
      "dialogflow.participants.analyzeContent",
      "dialogflow.participants.create",
      "dialogflow.participants.get",
      "dialogflow.participants.list",
      "dialogflow.participants.suggest",
      "dialogflow.participants.update",
      "dialogflow.sessionEntityTypes.create",
      "dialogflow.sessionEntityTypes.delete",
      "dialogflow.sessionEntityTypes.get",
      "dialogflow.sessionEntityTypes.list",
      "dialogflow.sessionEntityTypes.update",
      "dialogflow.sessions.detectIntent",
      "dialogflow.sessions.streamingDetectIntent"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dialogflow.consoleAgentEditor",
    "title": "Dialogflow Console Agent Editor",
    "description": "Can edit agent in Dialogflow Console",
    "includedPermissions": [
      "actions.agentVersions.create",
      "dialogflow.agents.create",
      "dialogflow.agents.delete",
      "dialogflow.agents.export",
      "dialogflow.agents.get",
      "dialogflow.agents.import",
      "dialogflow.agents.list",
      "dialogflow.agents.restore",
      "dialogflow.agents.search",
      "dialogflow.agents.searchResources",
      "dialogflow.agents.train",
      "dialogflow.agents.update",
      "dialogflow.agents.validate",
      "dialogflow.answerrecords.delete",
      "dialogflow.answerrecords.get",
      "dialogflow.answerrecords.list",
      "dialogflow.answerrecords.update",
      "dialogflow.callMatchers.create",
      "dialogflow.callMatchers.delete",
      "dialogflow.callMatchers.list",
      "dialogflow.changelogs.get",
      "dialogflow.changelogs.list",
      "dialogflow.contexts.create",
      "dialogflow.contexts.delete",
      "dialogflow.contexts.get",
      "dialogflow.contexts.list",
      "dialogflow.contexts.update",
      "dialogflow.conversationDatasets.create",
      "dialogflow.conversationDatasets.delete",
      "dialogflow.conversationDatasets.get",
      "dialogflow.conversationDatasets.import",
      "dialogflow.conversationDatasets.list",
      "dialogflow.conversationModels.create",
      "dialogflow.conversationModels.delete",
      "dialogflow.conversationModels.deploy",
      "dialogflow.conversationModels.get",
      "dialogflow.conversationModels.list",
      "dialogflow.conversationModels.undeploy",
      "dialogflow.conversationProfiles.create",
      "dialogflow.conversationProfiles.delete",
      "dialogflow.conversationProfiles.get",
      "dialogflow.conversationProfiles.list",
      "dialogflow.conversationProfiles.update",
      "dialogflow.conversations.addPhoneNumber",
      "dialogflow.conversations.complete",
      "dialogflow.conversations.create",
      "dialogflow.conversations.get",
      "dialogflow.conversations.list",
      "dialogflow.conversations.update",
      "dialogflow.deployments.get",
      "dialogflow.deployments.list",
      "dialogflow.documents.create",
      "dialogflow.documents.delete",
      "dialogflow.documents.get",
      "dialogflow.documents.list",
      "dialogflow.entityTypes.create",
      "dialogflow.entityTypes.createEntity",
      "dialogflow.entityTypes.delete",
      "dialogflow.entityTypes.deleteEntity",
      "dialogflow.entityTypes.get",
      "dialogflow.entityTypes.list",
      "dialogflow.entityTypes.update",
      "dialogflow.entityTypes.updateEntity",
      "dialogflow.environments.create",
      "dialogflow.environments.delete",
      "dialogflow.environments.get",
      "dialogflow.environments.getHistory",
      "dialogflow.environments.list",
      "dialogflow.environments.lookupHistory",
      "dialogflow.environments.runContinuousTest",
      "dialogflow.environments.update",
      "dialogflow.experiments.create",
      "dialogflow.experiments.delete",
      "dialogflow.experiments.get",
      "dialogflow.experiments.list",
      "dialogflow.experiments.update",
      "dialogflow.flows.create",
      "dialogflow.flows.delete",
      "dialogflow.flows.get",
      "dialogflow.flows.list",
      "dialogflow.flows.train",
      "dialogflow.flows.update",
      "dialogflow.flows.validate",
      "dialogflow.fulfillments.get",
      "dialogflow.fulfillments.update",
      "dialogflow.integrations.create",
      "dialogflow.integrations.delete",
      "dialogflow.integrations.get",
      "dialogflow.integrations.list",
      "dialogflow.integrations.update",
      "dialogflow.intents.create",
      "dialogflow.intents.delete",
      "dialogflow.intents.get",
      "dialogflow.intents.list",
      "dialogflow.intents.update",
      "dialogflow.knowledgeBases.create",
      "dialogflow.knowledgeBases.delete",
      "dialogflow.knowledgeBases.get",
      "dialogflow.knowledgeBases.list",
      "dialogflow.knowledgeBases.update",
      "dialogflow.messages.list",
      "dialogflow.modelEvaluations.get",
      "dialogflow.modelEvaluations.list",
      "dialogflow.operations.get",
      "dialogflow.pages.create",
      "dialogflow.pages.delete",
      "dialogflow.pages.get",
      "dialogflow.pages.list",
      "dialogflow.pages.update",
      "dialogflow.participants.analyzeContent",
      "dialogflow.participants.create",
      "dialogflow.participants.get",
      "dialogflow.participants.list",
      "dialogflow.participants.suggest",
      "dialogflow.participants.update",
      "dialogflow.phoneNumberOrders.cancel",
      "dialogflow.phoneNumberOrders.create",
      "dialogflow.phoneNumberOrders.get",
      "dialogflow.phoneNumberOrders.list",
      "dialogflow.phoneNumberOrders.update",
      "dialogflow.phoneNumbers.delete",
      "dialogflow.phoneNumbers.list",
      "dialogflow.phoneNumbers.undelete",
      "dialogflow.phoneNumbers.update",
      "dialogflow.securitySettings.create",
      "dialogflow.securitySettings.delete",
      "dialogflow.securitySettings.get",
      "dialogflow.securitySettings.list",
      "dialogflow.securitySettings.update",
      "dialogflow.sessionEntityTypes.create",
      "dialogflow.sessionEntityTypes.delete",
      "dialogflow.sessionEntityTypes.get",
      "dialogflow.sessionEntityTypes.list",
      "dialogflow.sessionEntityTypes.update",
      "dialogflow.sessions.detectIntent",
      "dialogflow.sessions.streamingDetectIntent",
      "dialogflow.smartMessagingEntries.create",
      "dialogflow.smartMessagingEntries.delete",
      "dialogflow.smartMessagingEntries.get",
      "dialogflow.smartMessagingEntries.list",
      "dialogflow.testcases.calculateCoverage",
      "dialogflow.testcases.create",
      "dialogflow.testcases.delete",
      "dialogflow.testcases.export",
      "dialogflow.testcases.get",
      "dialogflow.testcases.import",
      "dialogflow.testcases.list",
      "dialogflow.testcases.run",
      "dialogflow.testcases.update",
      "dialogflow.transitionRouteGroups.create",
      "dialogflow.transitionRouteGroups.delete",
      "dialogflow.transitionRouteGroups.get",
      "dialogflow.transitionRouteGroups.list",
      "dialogflow.transitionRouteGroups.update",
      "dialogflow.versions.create",
      "dialogflow.versions.delete",
      "dialogflow.versions.get",
      "dialogflow.versions.list",
      "dialogflow.versions.load",
      "dialogflow.versions.update",
      "dialogflow.webhooks.create",
      "dialogflow.webhooks.delete",
      "dialogflow.webhooks.get",
      "dialogflow.webhooks.list",
      "dialogflow.webhooks.update",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dialogflow.consoleSimulatorUser",
    "title": "Dialogflow Console Simulator User",
    "description": "Can perform query of dialogflow suggestions in the simulator in web console.",
    "includedPermissions": [
      "dialogflow.conversationModels.get",
      "dialogflow.conversationModels.list",
      "dialogflow.conversationProfiles.get",
      "dialogflow.conversationProfiles.list",
      "dialogflow.conversations.addPhoneNumber",
      "dialogflow.conversations.complete",
      "dialogflow.conversations.create",
      "dialogflow.conversations.get",
      "dialogflow.conversations.list",
      "dialogflow.conversations.update",
      "dialogflow.documents.get",
      "dialogflow.documents.list",
      "dialogflow.knowledgeBases.get",
      "dialogflow.knowledgeBases.list",
      "dialogflow.participants.analyzeContent",
      "dialogflow.participants.create",
      "dialogflow.participants.get",
      "dialogflow.participants.list",
      "dialogflow.participants.suggest",
      "dialogflow.participants.update",
      "dialogflow.sessions.detectIntent",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dialogflow.consoleSmartMessagingAllowlistEditor",
    "title": "Dialogflow Console Smart Messaging Allowlist Editor",
    "description": "Can edit allowlist for smart messaging associated with conversation model in the agent assist console",
    "includedPermissions": [
      "dialogflow.conversationDatasets.get",
      "dialogflow.conversationDatasets.list",
      "dialogflow.conversationModels.get",
      "dialogflow.conversationModels.list",
      "dialogflow.conversationProfiles.list",
      "dialogflow.documents.get",
      "dialogflow.documents.list",
      "dialogflow.operations.get",
      "dialogflow.smartMessagingEntries.create",
      "dialogflow.smartMessagingEntries.delete",
      "dialogflow.smartMessagingEntries.get",
      "dialogflow.smartMessagingEntries.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dialogflow.conversationManager",
    "title": "Dialogflow Conversation Manager",
    "description": "Can manage all the resources related to Dialogflow Conversations.",
    "includedPermissions": [
      "dialogflow.conversationProfiles.create",
      "dialogflow.conversationProfiles.delete",
      "dialogflow.conversationProfiles.get",
      "dialogflow.conversationProfiles.list",
      "dialogflow.conversationProfiles.update",
      "dialogflow.conversations.addPhoneNumber",
      "dialogflow.conversations.complete",
      "dialogflow.conversations.create",
      "dialogflow.conversations.get",
      "dialogflow.conversations.list",
      "dialogflow.conversations.update",
      "dialogflow.participants.analyzeContent",
      "dialogflow.participants.create",
      "dialogflow.participants.get",
      "dialogflow.participants.list",
      "dialogflow.participants.suggest",
      "dialogflow.participants.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dialogflow.entityTypeAdmin",
    "title": "Dialogflow Entity Type Admin",
    "description": "Can read & write entity types.",
    "includedPermissions": [
      "dialogflow.entityTypes.create",
      "dialogflow.entityTypes.createEntity",
      "dialogflow.entityTypes.delete",
      "dialogflow.entityTypes.deleteEntity",
      "dialogflow.entityTypes.get",
      "dialogflow.entityTypes.list",
      "dialogflow.entityTypes.update",
      "dialogflow.entityTypes.updateEntity"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dialogflow.environmentEditor",
    "title": "Dialogflow Environment editor",
    "description": "Can read & update environment and its sub-resources.",
    "includedPermissions": [
      "dialogflow.deployments.get",
      "dialogflow.deployments.list",
      "dialogflow.environments.get",
      "dialogflow.environments.getHistory",
      "dialogflow.environments.list",
      "dialogflow.environments.lookupHistory",
      "dialogflow.environments.runContinuousTest",
      "dialogflow.environments.update",
      "dialogflow.experiments.create",
      "dialogflow.experiments.delete",
      "dialogflow.experiments.get",
      "dialogflow.experiments.list",
      "dialogflow.experiments.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dialogflow.flowEditor",
    "title": "Dialogflow Flow editor",
    "description": "Can read & update flow and its sub-resources.",
    "includedPermissions": [
      "dialogflow.flows.get",
      "dialogflow.flows.list",
      "dialogflow.flows.train",
      "dialogflow.flows.update",
      "dialogflow.flows.validate",
      "dialogflow.pages.create",
      "dialogflow.pages.delete",
      "dialogflow.pages.get",
      "dialogflow.pages.list",
      "dialogflow.pages.update",
      "dialogflow.transitionRouteGroups.create",
      "dialogflow.transitionRouteGroups.delete",
      "dialogflow.transitionRouteGroups.get",
      "dialogflow.transitionRouteGroups.list",
      "dialogflow.transitionRouteGroups.update",
      "dialogflow.versions.create",
      "dialogflow.versions.delete",
      "dialogflow.versions.get",
      "dialogflow.versions.list",
      "dialogflow.versions.load",
      "dialogflow.versions.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dialogflow.integrationManager",
    "title": "Dialogflow Integration Manager",
    "description": "Can add, remove, enable and disable Dialogflow integrations.",
    "includedPermissions": [
      "dialogflow.integrations.create",
      "dialogflow.integrations.delete",
      "dialogflow.integrations.get",
      "dialogflow.integrations.list",
      "dialogflow.integrations.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dialogflow.intentAdmin",
    "title": "Dialogflow Intent Admin",
    "description": "Can read & write intents.",
    "includedPermissions": [
      "dialogflow.intents.create",
      "dialogflow.intents.delete",
      "dialogflow.intents.get",
      "dialogflow.intents.list",
      "dialogflow.intents.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dialogflow.reader",
    "title": "Dialogflow API Reader",
    "description": "Can read agent and session properties; cannot query for intent.",
    "includedPermissions": [
      "dialogflow.agents.export",
      "dialogflow.agents.get",
      "dialogflow.agents.list",
      "dialogflow.agents.search",
      "dialogflow.agents.searchResources",
      "dialogflow.answerrecords.get",
      "dialogflow.answerrecords.list",
      "dialogflow.callMatchers.list",
      "dialogflow.changelogs.get",
      "dialogflow.changelogs.list",
      "dialogflow.contexts.get",
      "dialogflow.contexts.list",
      "dialogflow.conversationDatasets.get",
      "dialogflow.conversationDatasets.list",
      "dialogflow.conversationModels.get",
      "dialogflow.conversationModels.list",
      "dialogflow.conversationProfiles.get",
      "dialogflow.conversationProfiles.list",
      "dialogflow.conversations.get",
      "dialogflow.conversations.list",
      "dialogflow.deployments.get",
      "dialogflow.deployments.list",
      "dialogflow.documents.get",
      "dialogflow.documents.list",
      "dialogflow.entityTypes.get",
      "dialogflow.entityTypes.list",
      "dialogflow.environments.get",
      "dialogflow.environments.list",
      "dialogflow.experiments.get",
      "dialogflow.experiments.list",
      "dialogflow.flows.get",
      "dialogflow.flows.list",
      "dialogflow.fulfillments.get",
      "dialogflow.integrations.get",
      "dialogflow.integrations.list",
      "dialogflow.intents.get",
      "dialogflow.intents.list",
      "dialogflow.knowledgeBases.get",
      "dialogflow.knowledgeBases.list",
      "dialogflow.messages.list",
      "dialogflow.modelEvaluations.get",
      "dialogflow.modelEvaluations.list",
      "dialogflow.operations.get",
      "dialogflow.pages.get",
      "dialogflow.pages.list",
      "dialogflow.participants.get",
      "dialogflow.participants.list",
      "dialogflow.phoneNumberOrders.get",
      "dialogflow.phoneNumberOrders.list",
      "dialogflow.phoneNumbers.list",
      "dialogflow.securitySettings.get",
      "dialogflow.securitySettings.list",
      "dialogflow.sessionEntityTypes.get",
      "dialogflow.sessionEntityTypes.list",
      "dialogflow.smartMessagingEntries.get",
      "dialogflow.smartMessagingEntries.list",
      "dialogflow.testcases.get",
      "dialogflow.testcases.list",
      "dialogflow.transitionRouteGroups.get",
      "dialogflow.transitionRouteGroups.list",
      "dialogflow.versions.get",
      "dialogflow.versions.list",
      "dialogflow.webhooks.get",
      "dialogflow.webhooks.list",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dialogflow.serviceAgent",
    "title": "Dialogflow Service Agent",
    "description": "Gives Dialogflow Service Account access to resources on behalf of user project for Integrations (Facebook Messenger, Slack, Telephony, etc.) and BigQuery.",
    "includedPermissions": [
      "bigquery.jobs.create",
      "bigquery.tables.get",
      "bigquery.tables.getData",
      "bigquery.tables.updateData",
      "cloudfunctions.functions.invoke",
      "dialogflow.agents.export",
      "dialogflow.agents.get",
      "dialogflow.agents.list",
      "dialogflow.agents.search",
      "dialogflow.agents.searchResources",
      "dialogflow.answerrecords.get",
      "dialogflow.answerrecords.list",
      "dialogflow.callMatchers.list",
      "dialogflow.changelogs.get",
      "dialogflow.changelogs.list",
      "dialogflow.contexts.create",
      "dialogflow.contexts.delete",
      "dialogflow.contexts.get",
      "dialogflow.contexts.list",
      "dialogflow.contexts.update",
      "dialogflow.conversationDatasets.get",
      "dialogflow.conversationDatasets.list",
      "dialogflow.conversationModels.get",
      "dialogflow.conversationModels.list",
      "dialogflow.conversationProfiles.get",
      "dialogflow.conversationProfiles.list",
      "dialogflow.conversations.addPhoneNumber",
      "dialogflow.conversations.complete",
      "dialogflow.conversations.create",
      "dialogflow.conversations.get",
      "dialogflow.conversations.list",
      "dialogflow.conversations.update",
      "dialogflow.deployments.get",
      "dialogflow.deployments.list",
      "dialogflow.documents.get",
      "dialogflow.documents.list",
      "dialogflow.entityTypes.get",
      "dialogflow.entityTypes.list",
      "dialogflow.environments.get",
      "dialogflow.environments.list",
      "dialogflow.environments.runContinuousTest",
      "dialogflow.experiments.get",
      "dialogflow.experiments.list",
      "dialogflow.flows.get",
      "dialogflow.flows.list",
      "dialogflow.fulfillments.get",
      "dialogflow.integrations.get",
      "dialogflow.integrations.list",
      "dialogflow.intents.get",
      "dialogflow.intents.list",
      "dialogflow.knowledgeBases.get",
      "dialogflow.knowledgeBases.list",
      "dialogflow.messages.list",
      "dialogflow.modelEvaluations.get",
      "dialogflow.modelEvaluations.list",
      "dialogflow.operations.get",
      "dialogflow.pages.get",
      "dialogflow.pages.list",
      "dialogflow.participants.analyzeContent",
      "dialogflow.participants.create",
      "dialogflow.participants.get",
      "dialogflow.participants.list",
      "dialogflow.participants.suggest",
      "dialogflow.participants.update",
      "dialogflow.phoneNumberOrders.get",
      "dialogflow.phoneNumberOrders.list",
      "dialogflow.phoneNumbers.list",
      "dialogflow.securitySettings.get",
      "dialogflow.securitySettings.list",
      "dialogflow.sessionEntityTypes.create",
      "dialogflow.sessionEntityTypes.delete",
      "dialogflow.sessionEntityTypes.get",
      "dialogflow.sessionEntityTypes.list",
      "dialogflow.sessionEntityTypes.update",
      "dialogflow.sessions.detectIntent",
      "dialogflow.sessions.streamingDetectIntent",
      "dialogflow.smartMessagingEntries.get",
      "dialogflow.smartMessagingEntries.list",
      "dialogflow.testcases.get",
      "dialogflow.testcases.list",
      "dialogflow.transitionRouteGroups.get",
      "dialogflow.transitionRouteGroups.list",
      "dialogflow.versions.get",
      "dialogflow.versions.list",
      "dialogflow.webhooks.get",
      "dialogflow.webhooks.list",
      "dlp.deidentifyTemplates.get",
      "dlp.deidentifyTemplates.list",
      "dlp.inspectTemplates.get",
      "dlp.inspectTemplates.list",
      "logging.logEntries.create",
      "logging.logEntries.route",
      "pubsub.snapshots.seek",
      "pubsub.subscriptions.consume",
      "pubsub.topics.attachSubscription",
      "pubsub.topics.publish",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.use",
      "speakerid.phrases.create",
      "speakerid.phrases.delete",
      "speakerid.phrases.get",
      "speakerid.phrases.list",
      "speakerid.speakers.create",
      "speakerid.speakers.delete",
      "speakerid.speakers.get",
      "speakerid.speakers.list",
      "speakerid.speakers.verify",
      "speech.adaptations.execute",
      "speech.customClasses.get",
      "speech.customClasses.list",
      "speech.phraseSets.get",
      "speech.phraseSets.list",
      "speech.recognizers.get",
      "speech.recognizers.list",
      "storage.objects.create",
      "storage.objects.get",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dialogflow.testCaseAdmin",
    "title": "Dialogflow Test Case Admin",
    "description": "Can read & write test cases.",
    "includedPermissions": [
      "dialogflow.testcases.calculateCoverage",
      "dialogflow.testcases.create",
      "dialogflow.testcases.delete",
      "dialogflow.testcases.export",
      "dialogflow.testcases.get",
      "dialogflow.testcases.import",
      "dialogflow.testcases.list",
      "dialogflow.testcases.run",
      "dialogflow.testcases.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dialogflow.webhookAdmin",
    "title": "Dialogflow Webhook Admin",
    "description": "Can read & write webhooks.",
    "includedPermissions": [
      "dialogflow.webhooks.create",
      "dialogflow.webhooks.delete",
      "dialogflow.webhooks.get",
      "dialogflow.webhooks.list",
      "dialogflow.webhooks.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/discoveryengine.admin",
    "title": "Discovery Engine Admin",
    "description": "Grants full access to all discoveryengine resources.",
    "includedPermissions": [
      "discoveryengine.completionConfigs.get",
      "discoveryengine.completionConfigs.update",
      "discoveryengine.controls.create",
      "discoveryengine.controls.delete",
      "discoveryengine.controls.get",
      "discoveryengine.controls.list",
      "discoveryengine.controls.update",
      "discoveryengine.conversations.converse",
      "discoveryengine.conversations.create",
      "discoveryengine.conversations.delete",
      "discoveryengine.conversations.get",
      "discoveryengine.conversations.list",
      "discoveryengine.conversations.update",
      "discoveryengine.dataStores.completeQuery",
      "discoveryengine.dataStores.create",
      "discoveryengine.dataStores.delete",
      "discoveryengine.dataStores.enrollSolutions",
      "discoveryengine.dataStores.get",
      "discoveryengine.dataStores.list",
      "discoveryengine.dataStores.update",
      "discoveryengine.documents.create",
      "discoveryengine.documents.delete",
      "discoveryengine.documents.get",
      "discoveryengine.documents.import",
      "discoveryengine.documents.list",
      "discoveryengine.documents.purge",
      "discoveryengine.documents.update",
      "discoveryengine.engines.create",
      "discoveryengine.engines.delete",
      "discoveryengine.engines.get",
      "discoveryengine.engines.list",
      "discoveryengine.engines.update",
      "discoveryengine.models.create",
      "discoveryengine.models.delete",
      "discoveryengine.models.get",
      "discoveryengine.models.list",
      "discoveryengine.models.pause",
      "discoveryengine.models.resume",
      "discoveryengine.models.tune",
      "discoveryengine.models.update",
      "discoveryengine.operations.get",
      "discoveryengine.operations.list",
      "discoveryengine.projects.get",
      "discoveryengine.projects.provision",
      "discoveryengine.projects.reportConsentChange",
      "discoveryengine.schemas.create",
      "discoveryengine.schemas.delete",
      "discoveryengine.schemas.get",
      "discoveryengine.schemas.list",
      "discoveryengine.schemas.update",
      "discoveryengine.servingConfigs.create",
      "discoveryengine.servingConfigs.delete",
      "discoveryengine.servingConfigs.get",
      "discoveryengine.servingConfigs.list",
      "discoveryengine.servingConfigs.recommend",
      "discoveryengine.servingConfigs.search",
      "discoveryengine.servingConfigs.update",
      "discoveryengine.siteSearchEngines.get",
      "discoveryengine.targetSites.batchCreate",
      "discoveryengine.targetSites.create",
      "discoveryengine.targetSites.delete",
      "discoveryengine.targetSites.get",
      "discoveryengine.targetSites.list",
      "discoveryengine.targetSites.update",
      "discoveryengine.userEvents.create",
      "discoveryengine.userEvents.fetchStats",
      "discoveryengine.userEvents.import",
      "discoveryengine.userEvents.purge",
      "discoveryengine.widgetConfigs.get",
      "discoveryengine.widgetConfigs.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/discoveryengine.editor",
    "title": "Discovery Engine Editor",
    "description": "Grants read and write access to all discovery engine resources.",
    "includedPermissions": [
      "discoveryengine.completionConfigs.get",
      "discoveryengine.controls.get",
      "discoveryengine.controls.list",
      "discoveryengine.conversations.converse",
      "discoveryengine.conversations.create",
      "discoveryengine.conversations.delete",
      "discoveryengine.conversations.get",
      "discoveryengine.conversations.list",
      "discoveryengine.conversations.update",
      "discoveryengine.dataStores.completeQuery",
      "discoveryengine.dataStores.get",
      "discoveryengine.dataStores.list",
      "discoveryengine.documents.create",
      "discoveryengine.documents.delete",
      "discoveryengine.documents.get",
      "discoveryengine.documents.import",
      "discoveryengine.documents.list",
      "discoveryengine.documents.update",
      "discoveryengine.engines.get",
      "discoveryengine.engines.list",
      "discoveryengine.models.create",
      "discoveryengine.models.delete",
      "discoveryengine.models.get",
      "discoveryengine.models.list",
      "discoveryengine.models.pause",
      "discoveryengine.models.resume",
      "discoveryengine.models.tune",
      "discoveryengine.models.update",
      "discoveryengine.operations.get",
      "discoveryengine.operations.list",
      "discoveryengine.projects.get",
      "discoveryengine.schemas.get",
      "discoveryengine.schemas.list",
      "discoveryengine.servingConfigs.get",
      "discoveryengine.servingConfigs.list",
      "discoveryengine.servingConfigs.recommend",
      "discoveryengine.servingConfigs.search",
      "discoveryengine.siteSearchEngines.get",
      "discoveryengine.targetSites.get",
      "discoveryengine.targetSites.list",
      "discoveryengine.userEvents.create",
      "discoveryengine.userEvents.fetchStats",
      "discoveryengine.userEvents.import",
      "discoveryengine.widgetConfigs.get",
      "discoveryengine.widgetConfigs.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/discoveryengine.serviceAgent",
    "title": "Discovery Engine Service Agent",
    "description": "Discovery Engine service uploads documents and user events from Cloud Storage and BigQuery, reports results to the customer Cloud Storage bucket, writes logs to customer projects using Cloud Logging, and writes and reads metrics for customer using Cloud Monitoring.",
    "includedPermissions": [
      "bigquery.datasets.create",
      "bigquery.datasets.get",
      "bigquery.jobs.create",
      "bigquery.jobs.get",
      "bigquery.jobs.list",
      "bigquery.jobs.update",
      "bigquery.tables.create",
      "bigquery.tables.export",
      "bigquery.tables.get",
      "bigquery.tables.getData",
      "bigquery.tables.list",
      "bigquery.tables.update",
      "bigquery.tables.updateData",
      "discoveryengine.conversations.converse",
      "discoveryengine.dataStores.completeQuery",
      "discoveryengine.servingConfigs.search",
      "discoveryengine.userEvents.create",
      "logging.logEntries.create",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.timeSeries.create",
      "monitoring.timeSeries.list",
      "storage.buckets.create",
      "storage.buckets.get",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/discoveryengine.viewer",
    "title": "Discovery Engine Viewer",
    "description": "Grants read access to all discovery engine resources.",
    "includedPermissions": [
      "discoveryengine.completionConfigs.get",
      "discoveryengine.controls.get",
      "discoveryengine.controls.list",
      "discoveryengine.conversations.converse",
      "discoveryengine.conversations.get",
      "discoveryengine.conversations.list",
      "discoveryengine.dataStores.completeQuery",
      "discoveryengine.dataStores.get",
      "discoveryengine.dataStores.list",
      "discoveryengine.documents.get",
      "discoveryengine.documents.list",
      "discoveryengine.engines.get",
      "discoveryengine.engines.list",
      "discoveryengine.models.get",
      "discoveryengine.models.list",
      "discoveryengine.operations.get",
      "discoveryengine.operations.list",
      "discoveryengine.projects.get",
      "discoveryengine.schemas.get",
      "discoveryengine.schemas.list",
      "discoveryengine.servingConfigs.get",
      "discoveryengine.servingConfigs.list",
      "discoveryengine.servingConfigs.recommend",
      "discoveryengine.servingConfigs.search",
      "discoveryengine.siteSearchEngines.get",
      "discoveryengine.targetSites.get",
      "discoveryengine.targetSites.list",
      "discoveryengine.userEvents.fetchStats",
      "discoveryengine.widgetConfigs.get"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/dlp.admin",
    "title": "DLP Administrator",
    "description": "Administer DLP including jobs and templates.",
    "includedPermissions": [
      "dlp.analyzeRiskTemplates.create",
      "dlp.analyzeRiskTemplates.delete",
      "dlp.analyzeRiskTemplates.get",
      "dlp.analyzeRiskTemplates.list",
      "dlp.analyzeRiskTemplates.update",
      "dlp.columnDataProfiles.get",
      "dlp.columnDataProfiles.list",
      "dlp.deidentifyTemplates.create",
      "dlp.deidentifyTemplates.delete",
      "dlp.deidentifyTemplates.get",
      "dlp.deidentifyTemplates.list",
      "dlp.deidentifyTemplates.update",
      "dlp.estimates.cancel",
      "dlp.estimates.create",
      "dlp.estimates.delete",
      "dlp.estimates.get",
      "dlp.estimates.list",
      "dlp.inspectFindings.list",
      "dlp.inspectTemplates.create",
      "dlp.inspectTemplates.delete",
      "dlp.inspectTemplates.get",
      "dlp.inspectTemplates.list",
      "dlp.inspectTemplates.update",
      "dlp.jobTriggers.create",
      "dlp.jobTriggers.delete",
      "dlp.jobTriggers.get",
      "dlp.jobTriggers.hybridInspect",
      "dlp.jobTriggers.list",
      "dlp.jobTriggers.update",
      "dlp.jobs.cancel",
      "dlp.jobs.create",
      "dlp.jobs.delete",
      "dlp.jobs.get",
      "dlp.jobs.hybridInspect",
      "dlp.jobs.list",
      "dlp.kms.encrypt",
      "dlp.locations.get",
      "dlp.locations.list",
      "dlp.projectDataProfiles.get",
      "dlp.projectDataProfiles.list",
      "dlp.storedInfoTypes.create",
      "dlp.storedInfoTypes.delete",
      "dlp.storedInfoTypes.get",
      "dlp.storedInfoTypes.list",
      "dlp.storedInfoTypes.update",
      "dlp.tableDataProfiles.get",
      "dlp.tableDataProfiles.list",
      "serviceusage.services.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dlp.analyzeRiskTemplatesEditor",
    "title": "DLP Analyze Risk Templates Editor",
    "description": "Edit DLP analyze risk templates.",
    "includedPermissions": [
      "dlp.analyzeRiskTemplates.create",
      "dlp.analyzeRiskTemplates.delete",
      "dlp.analyzeRiskTemplates.get",
      "dlp.analyzeRiskTemplates.list",
      "dlp.analyzeRiskTemplates.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dlp.analyzeRiskTemplatesReader",
    "title": "DLP Analyze Risk Templates Reader",
    "description": "Read DLP analyze risk templates.",
    "includedPermissions": [
      "dlp.analyzeRiskTemplates.get",
      "dlp.analyzeRiskTemplates.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dlp.columnDataProfilesReader",
    "title": "DLP Column Data Profiles Reader",
    "description": "Read DLP column profiles.",
    "includedPermissions": [
      "dlp.columnDataProfiles.get",
      "dlp.columnDataProfiles.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dlp.dataProfilesReader",
    "title": "DLP Data Profiles Reader",
    "description": "Read DLP profiles.",
    "includedPermissions": [
      "dlp.columnDataProfiles.get",
      "dlp.columnDataProfiles.list",
      "dlp.projectDataProfiles.get",
      "dlp.projectDataProfiles.list",
      "dlp.tableDataProfiles.get",
      "dlp.tableDataProfiles.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dlp.deidentifyTemplatesEditor",
    "title": "DLP De-identify Templates Editor",
    "description": "Edit DLP de-identify templates.",
    "includedPermissions": [
      "dlp.deidentifyTemplates.create",
      "dlp.deidentifyTemplates.delete",
      "dlp.deidentifyTemplates.get",
      "dlp.deidentifyTemplates.list",
      "dlp.deidentifyTemplates.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dlp.deidentifyTemplatesReader",
    "title": "DLP De-identify Templates Reader",
    "description": "Read DLP de-identify templates.",
    "includedPermissions": [
      "dlp.deidentifyTemplates.get",
      "dlp.deidentifyTemplates.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dlp.estimatesAdmin",
    "title": "DLP Cost Estimation",
    "description": "Manage DLP Cost Estimates.",
    "includedPermissions": [
      "dlp.estimates.cancel",
      "dlp.estimates.create",
      "dlp.estimates.delete",
      "dlp.estimates.get",
      "dlp.estimates.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dlp.inspectFindingsReader",
    "title": "DLP Inspect Findings Reader",
    "description": "Read DLP stored findings.",
    "includedPermissions": [
      "dlp.inspectFindings.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dlp.inspectTemplatesEditor",
    "title": "DLP Inspect Templates Editor",
    "description": "Edit DLP inspect templates.",
    "includedPermissions": [
      "dlp.inspectTemplates.create",
      "dlp.inspectTemplates.delete",
      "dlp.inspectTemplates.get",
      "dlp.inspectTemplates.list",
      "dlp.inspectTemplates.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dlp.inspectTemplatesReader",
    "title": "DLP Inspect Templates Reader",
    "description": "Read DLP inspect templates.",
    "includedPermissions": [
      "dlp.inspectTemplates.get",
      "dlp.inspectTemplates.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dlp.jobTriggersEditor",
    "title": "DLP Job Triggers Editor",
    "description": "Edit job triggers configurations.",
    "includedPermissions": [
      "dlp.jobTriggers.create",
      "dlp.jobTriggers.delete",
      "dlp.jobTriggers.get",
      "dlp.jobTriggers.hybridInspect",
      "dlp.jobTriggers.list",
      "dlp.jobTriggers.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dlp.jobTriggersReader",
    "title": "DLP Job Triggers Reader",
    "description": "Read job triggers.",
    "includedPermissions": [
      "dlp.jobTriggers.get",
      "dlp.jobTriggers.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dlp.jobsEditor",
    "title": "DLP Jobs Editor",
    "description": "Edit and create jobs",
    "includedPermissions": [
      "dlp.jobs.cancel",
      "dlp.jobs.create",
      "dlp.jobs.delete",
      "dlp.jobs.get",
      "dlp.jobs.hybridInspect",
      "dlp.jobs.list",
      "dlp.kms.encrypt"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dlp.jobsReader",
    "title": "DLP Jobs Reader",
    "description": "Read jobs",
    "includedPermissions": [
      "dlp.jobs.get",
      "dlp.jobs.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dlp.orgdriver",
    "title": "DLP Organization Data Profiles Driver",
    "description": "Permissions needed by the DLP service account to generate data profiles within an organization or folder.",
    "includedPermissions": [
      "bigquery.bireservations.get",
      "bigquery.capacityCommitments.get",
      "bigquery.capacityCommitments.list",
      "bigquery.config.get",
      "bigquery.connections.updateTag",
      "bigquery.datasets.create",
      "bigquery.datasets.get",
      "bigquery.datasets.getIamPolicy",
      "bigquery.datasets.updateTag",
      "bigquery.jobs.create",
      "bigquery.jobs.get",
      "bigquery.jobs.list",
      "bigquery.jobs.listAll",
      "bigquery.jobs.listExecutionMetadata",
      "bigquery.models.create",
      "bigquery.models.delete",
      "bigquery.models.export",
      "bigquery.models.getData",
      "bigquery.models.getMetadata",
      "bigquery.models.list",
      "bigquery.models.updateData",
      "bigquery.models.updateMetadata",
      "bigquery.models.updateTag",
      "bigquery.readsessions.create",
      "bigquery.readsessions.getData",
      "bigquery.readsessions.update",
      "bigquery.reservationAssignments.list",
      "bigquery.reservationAssignments.search",
      "bigquery.reservations.get",
      "bigquery.reservations.list",
      "bigquery.routines.create",
      "bigquery.routines.delete",
      "bigquery.routines.get",
      "bigquery.routines.list",
      "bigquery.routines.update",
      "bigquery.routines.updateTag",
      "bigquery.savedqueries.get",
      "bigquery.savedqueries.list",
      "bigquery.tables.create",
      "bigquery.tables.createIndex",
      "bigquery.tables.createSnapshot",
      "bigquery.tables.delete",
      "bigquery.tables.deleteIndex",
      "bigquery.tables.export",
      "bigquery.tables.get",
      "bigquery.tables.getData",
      "bigquery.tables.getIamPolicy",
      "bigquery.tables.list",
      "bigquery.tables.replicateData",
      "bigquery.tables.restoreSnapshot",
      "bigquery.tables.update",
      "bigquery.tables.updateData",
      "bigquery.tables.updateTag",
      "bigquery.transfers.get",
      "bigquerymigration.translation.translate",
      "cloudasset.assets.analyzeIamPolicy",
      "cloudasset.assets.analyzeMove",
      "cloudasset.assets.analyzeOrgPolicy",
      "cloudasset.assets.exportAccessLevel",
      "cloudasset.assets.exportAccessPolicy",
      "cloudasset.assets.exportAiplatformBatchPredictionJobs",
      "cloudasset.assets.exportAiplatformCustomJobs",
      "cloudasset.assets.exportAiplatformDataLabelingJobs",
      "cloudasset.assets.exportAiplatformDatasets",
      "cloudasset.assets.exportAiplatformEndpoints",
      "cloudasset.assets.exportAiplatformHyperparameterTuningJobs",
      "cloudasset.assets.exportAiplatformMetadataStores",
      "cloudasset.assets.exportAiplatformModelDeploymentMonitoringJobs",
      "cloudasset.assets.exportAiplatformModels",
      "cloudasset.assets.exportAiplatformPipelineJobs",
      "cloudasset.assets.exportAiplatformSpecialistPools",
      "cloudasset.assets.exportAiplatformTrainingPipelines",
      "cloudasset.assets.exportAllAccessPolicy",
      "cloudasset.assets.exportAnthosConnectedCluster",
      "cloudasset.assets.exportAnthosedgeCluster",
      "cloudasset.assets.exportApigatewayApi",
      "cloudasset.assets.exportApigatewayApiConfig",
      "cloudasset.assets.exportApigatewayGateway",
      "cloudasset.assets.exportApikeysKeys",
      "cloudasset.assets.exportAppengineApplications",
      "cloudasset.assets.exportAppengineServices",
      "cloudasset.assets.exportAppengineVersions",
      "cloudasset.assets.exportArtifactregistryDockerImages",
      "cloudasset.assets.exportArtifactregistryRepositories",
      "cloudasset.assets.exportAssuredWorkloadsWorkloads",
      "cloudasset.assets.exportBeyondCorpApiGateways",
      "cloudasset.assets.exportBeyondCorpAppConnections",
      "cloudasset.assets.exportBeyondCorpAppConnectors",
      "cloudasset.assets.exportBeyondCorpAppGateways",
      "cloudasset.assets.exportBeyondCorpClientConnectorServices",
      "cloudasset.assets.exportBeyondCorpClientGateways",
      "cloudasset.assets.exportBigqueryDatasets",
      "cloudasset.assets.exportBigqueryModels",
      "cloudasset.assets.exportBigqueryTables",
      "cloudasset.assets.exportBigtableAppProfile",
      "cloudasset.assets.exportBigtableBackup",
      "cloudasset.assets.exportBigtableCluster",
      "cloudasset.assets.exportBigtableInstance",
      "cloudasset.assets.exportBigtableTable",
      "cloudasset.assets.exportCloudAssetFeeds",
      "cloudasset.assets.exportCloudDeployDeliveryPipelines",
      "cloudasset.assets.exportCloudDeployReleases",
      "cloudasset.assets.exportCloudDeployRollouts",
      "cloudasset.assets.exportCloudDeployTargets",
      "cloudasset.assets.exportCloudDocumentAIEvaluation",
      "cloudasset.assets.exportCloudDocumentAIHumanReviewConfig",
      "cloudasset.assets.exportCloudDocumentAILabelerPool",
      "cloudasset.assets.exportCloudDocumentAIProcessor",
      "cloudasset.assets.exportCloudDocumentAIProcessorVersion",
      "cloudasset.assets.exportCloudbillingBillingAccounts",
      "cloudasset.assets.exportCloudbillingProjectBillingInfos",
      "cloudasset.assets.exportCloudfunctionsFunctions",
      "cloudasset.assets.exportCloudfunctionsGen2Functions",
      "cloudasset.assets.exportCloudkmsCryptoKeyVersions",
      "cloudasset.assets.exportCloudkmsCryptoKeys",
      "cloudasset.assets.exportCloudkmsEkmConnections",
      "cloudasset.assets.exportCloudkmsImportJobs",
      "cloudasset.assets.exportCloudkmsKeyRings",
      "cloudasset.assets.exportCloudmemcacheInstances",
      "cloudasset.assets.exportCloudresourcemanagerFolders",
      "cloudasset.assets.exportCloudresourcemanagerOrganizations",
      "cloudasset.assets.exportCloudresourcemanagerProjects",
      "cloudasset.assets.exportCloudresourcemanagerTagBindings",
      "cloudasset.assets.exportCloudresourcemanagerTagKeys",
      "cloudasset.assets.exportCloudresourcemanagerTagValues",
      "cloudasset.assets.exportComposerEnvironments",
      "cloudasset.assets.exportComputeAddress",
      "cloudasset.assets.exportComputeAutoscalers",
      "cloudasset.assets.exportComputeBackendBuckets",
      "cloudasset.assets.exportComputeBackendServices",
      "cloudasset.assets.exportComputeCommitments",
      "cloudasset.assets.exportComputeDisks",
      "cloudasset.assets.exportComputeExternalVpnGateways",
      "cloudasset.assets.exportComputeFirewallPolicies",
      "cloudasset.assets.exportComputeFirewalls",
      "cloudasset.assets.exportComputeForwardingRules",
      "cloudasset.assets.exportComputeGlobalAddress",
      "cloudasset.assets.exportComputeGlobalForwardingRules",
      "cloudasset.assets.exportComputeHealthChecks",
      "cloudasset.assets.exportComputeHttpHealthChecks",
      "cloudasset.assets.exportComputeHttpsHealthChecks",
      "cloudasset.assets.exportComputeImages",
      "cloudasset.assets.exportComputeInstanceGroupManagers",
      "cloudasset.assets.exportComputeInstanceGroups",
      "cloudasset.assets.exportComputeInstanceTemplates",
      "cloudasset.assets.exportComputeInstances",
      "cloudasset.assets.exportComputeInterconnect",
      "cloudasset.assets.exportComputeInterconnectAttachment",
      "cloudasset.assets.exportComputeLicenses",
      "cloudasset.assets.exportComputeNetworkEndpointGroups",
      "cloudasset.assets.exportComputeNetworks",
      "cloudasset.assets.exportComputeNodeGroups",
      "cloudasset.assets.exportComputeNodeTemplates",
      "cloudasset.assets.exportComputePacketMirrorings",
      "cloudasset.assets.exportComputeProjects",
      "cloudasset.assets.exportComputeRegionAutoscaler",
      "cloudasset.assets.exportComputeRegionBackendServices",
      "cloudasset.assets.exportComputeRegionDisk",
      "cloudasset.assets.exportComputeRegionInstanceGroup",
      "cloudasset.assets.exportComputeRegionInstanceGroupManager",
      "cloudasset.assets.exportComputeReservations",
      "cloudasset.assets.exportComputeResourcePolicies",
      "cloudasset.assets.exportComputeRouters",
      "cloudasset.assets.exportComputeRoutes",
      "cloudasset.assets.exportComputeSecurityPolicy",
      "cloudasset.assets.exportComputeServiceAttachments",
      "cloudasset.assets.exportComputeSnapshots",
      "cloudasset.assets.exportComputeSslCertificates",
      "cloudasset.assets.exportComputeSslPolicies",
      "cloudasset.assets.exportComputeSubnetworks",
      "cloudasset.assets.exportComputeTargetHttpProxies",
      "cloudasset.assets.exportComputeTargetHttpsProxies",
      "cloudasset.assets.exportComputeTargetInstances",
      "cloudasset.assets.exportComputeTargetPools",
      "cloudasset.assets.exportComputeTargetSslProxies",
      "cloudasset.assets.exportComputeTargetTcpProxies",
      "cloudasset.assets.exportComputeTargetVpnGateways",
      "cloudasset.assets.exportComputeUrlMaps",
      "cloudasset.assets.exportComputeVpnGateways",
      "cloudasset.assets.exportComputeVpnTunnels",
      "cloudasset.assets.exportConnectorsConnections",
      "cloudasset.assets.exportConnectorsConnectorVersions",
      "cloudasset.assets.exportConnectorsConnectors",
      "cloudasset.assets.exportConnectorsProviders",
      "cloudasset.assets.exportConnectorsRuntimeConfigs",
      "cloudasset.assets.exportContainerAppsDeployment",
      "cloudasset.assets.exportContainerAppsReplicaSets",
      "cloudasset.assets.exportContainerBatchJobs",
      "cloudasset.assets.exportContainerClusterrole",
      "cloudasset.assets.exportContainerClusterrolebinding",
      "cloudasset.assets.exportContainerClusters",
      "cloudasset.assets.exportContainerExtensionsIngresses",
      "cloudasset.assets.exportContainerJobs",
      "cloudasset.assets.exportContainerNamespace",
      "cloudasset.assets.exportContainerNetworkingIngresses",
      "cloudasset.assets.exportContainerNetworkingNetworkPolicies",
      "cloudasset.assets.exportContainerNode",
      "cloudasset.assets.exportContainerNodepool",
      "cloudasset.assets.exportContainerPod",
      "cloudasset.assets.exportContainerReplicaSets",
      "cloudasset.assets.exportContainerRole",
      "cloudasset.assets.exportContainerRolebinding",
      "cloudasset.assets.exportContainerServices",
      "cloudasset.assets.exportContainerregistryImage",
      "cloudasset.assets.exportDataMigrationConnectionProfiles",
      "cloudasset.assets.exportDataMigrationMigrationJobs",
      "cloudasset.assets.exportDataflowJobs",
      "cloudasset.assets.exportDatafusionInstance",
      "cloudasset.assets.exportDataplexAssets",
      "cloudasset.assets.exportDataplexLakes",
      "cloudasset.assets.exportDataplexTasks",
      "cloudasset.assets.exportDataplexZones",
      "cloudasset.assets.exportDataprocAutoscalingPolicies",
      "cloudasset.assets.exportDataprocBatches",
      "cloudasset.assets.exportDataprocClusters",
      "cloudasset.assets.exportDataprocJobs",
      "cloudasset.assets.exportDataprocSessions",
      "cloudasset.assets.exportDataprocWorkflowTemplates",
      "cloudasset.assets.exportDatastreamConnectionProfile",
      "cloudasset.assets.exportDatastreamPrivateConnection",
      "cloudasset.assets.exportDatastreamStream",
      "cloudasset.assets.exportDialogflowAgents",
      "cloudasset.assets.exportDialogflowConversationProfiles",
      "cloudasset.assets.exportDialogflowKnowledgeBases",
      "cloudasset.assets.exportDialogflowLocationSettings",
      "cloudasset.assets.exportDlpDeidentifyTemplates",
      "cloudasset.assets.exportDlpDlpJobs",
      "cloudasset.assets.exportDlpInspectTemplates",
      "cloudasset.assets.exportDlpJobTriggers",
      "cloudasset.assets.exportDlpStoredInfoTypes",
      "cloudasset.assets.exportDnsManagedZones",
      "cloudasset.assets.exportDnsPolicies",
      "cloudasset.assets.exportDomainsRegistrations",
      "cloudasset.assets.exportEventarcTriggers",
      "cloudasset.assets.exportFileBackups",
      "cloudasset.assets.exportFileInstances",
      "cloudasset.assets.exportFirebaseAppInfos",
      "cloudasset.assets.exportFirebaseProjects",
      "cloudasset.assets.exportFirestoreDatabases",
      "cloudasset.assets.exportGKEHubFeatures",
      "cloudasset.assets.exportGKEHubMemberships",
      "cloudasset.assets.exportGameservicesGameServerClusters",
      "cloudasset.assets.exportGameservicesGameServerConfigs",
      "cloudasset.assets.exportGameservicesGameServerDeployments",
      "cloudasset.assets.exportGameservicesRealms",
      "cloudasset.assets.exportGkeBackupBackupPlans",
      "cloudasset.assets.exportGkeBackupBackups",
      "cloudasset.assets.exportGkeBackupRestorePlans",
      "cloudasset.assets.exportGkeBackupRestores",
      "cloudasset.assets.exportGkeBackupVolumeBackups",
      "cloudasset.assets.exportGkeBackupVolumeRestores",
      "cloudasset.assets.exportHealthcareConsentStores",
      "cloudasset.assets.exportHealthcareDatasets",
      "cloudasset.assets.exportHealthcareDicomStores",
      "cloudasset.assets.exportHealthcareFhirStores",
      "cloudasset.assets.exportHealthcareHl7V2Stores",
      "cloudasset.assets.exportIamPolicy",
      "cloudasset.assets.exportIamRoles",
      "cloudasset.assets.exportIamServiceAccountKeys",
      "cloudasset.assets.exportIamServiceAccounts",
      "cloudasset.assets.exportIapTunnel",
      "cloudasset.assets.exportIapTunnelInstances",
      "cloudasset.assets.exportIapTunnelZones",
      "cloudasset.assets.exportIapWeb",
      "cloudasset.assets.exportIapWebServiceVersion",
      "cloudasset.assets.exportIapWebServices",
      "cloudasset.assets.exportIapWebType",
      "cloudasset.assets.exportIdsEndpoints",
      "cloudasset.assets.exportIntegrationsAuthConfigs",
      "cloudasset.assets.exportIntegrationsCertificates",
      "cloudasset.assets.exportIntegrationsExecutions",
      "cloudasset.assets.exportIntegrationsIntegrationVersions",
      "cloudasset.assets.exportIntegrationsIntegrations",
      "cloudasset.assets.exportIntegrationsSfdcChannels",
      "cloudasset.assets.exportIntegrationsSfdcInstances",
      "cloudasset.assets.exportIntegrationsSuspensions",
      "cloudasset.assets.exportLoggingLogMetrics",
      "cloudasset.assets.exportLoggingLogSinks",
      "cloudasset.assets.exportManagedidentitiesDomain",
      "cloudasset.assets.exportMetastoreBackups",
      "cloudasset.assets.exportMetastoreMetadataImports",
      "cloudasset.assets.exportMetastoreServices",
      "cloudasset.assets.exportMonitoringAlertPolicies",
      "cloudasset.assets.exportNetworkConnectivityHubs",
      "cloudasset.assets.exportNetworkConnectivitySpokes",
      "cloudasset.assets.exportNetworkManagementConnectivityTests",
      "cloudasset.assets.exportNetworkServicesEndpointPolicies",
      "cloudasset.assets.exportNetworkServicesGateways",
      "cloudasset.assets.exportNetworkServicesGrpcRoutes",
      "cloudasset.assets.exportNetworkServicesHttpRoutes",
      "cloudasset.assets.exportNetworkServicesMeshes",
      "cloudasset.assets.exportNetworkServicesServiceBindings",
      "cloudasset.assets.exportNetworkServicesTcpRoutes",
      "cloudasset.assets.exportNetworkServicesTlsRoutes",
      "cloudasset.assets.exportOSConfigOSPolicyAssignmentReports",
      "cloudasset.assets.exportOSConfigOSPolicyAssignments",
      "cloudasset.assets.exportOSConfigVulnerabilityReports",
      "cloudasset.assets.exportOSInventories",
      "cloudasset.assets.exportOrgPolicy",
      "cloudasset.assets.exportPatchDeployments",
      "cloudasset.assets.exportPubsubSnapshots",
      "cloudasset.assets.exportPubsubSubscriptions",
      "cloudasset.assets.exportPubsubTopics",
      "cloudasset.assets.exportRedisInstances",
      "cloudasset.assets.exportResource",
      "cloudasset.assets.exportSecretManagerSecretVersions",
      "cloudasset.assets.exportSecretManagerSecrets",
      "cloudasset.assets.exportServiceDirectoryNamespaces",
      "cloudasset.assets.exportServicePerimeter",
      "cloudasset.assets.exportServiceconsumermanagementConsumerProperty",
      "cloudasset.assets.exportServiceconsumermanagementConsumerQuotaLimits",
      "cloudasset.assets.exportServiceconsumermanagementConsumers",
      "cloudasset.assets.exportServiceconsumermanagementProducerOverrides",
      "cloudasset.assets.exportServiceconsumermanagementTenancyUnits",
      "cloudasset.assets.exportServiceconsumermanagementVisibility",
      "cloudasset.assets.exportServicemanagementServices",
      "cloudasset.assets.exportServiceusageAdminOverrides",
      "cloudasset.assets.exportServiceusageConsumerOverrides",
      "cloudasset.assets.exportServiceusageServices",
      "cloudasset.assets.exportSpannerBackups",
      "cloudasset.assets.exportSpannerDatabases",
      "cloudasset.assets.exportSpannerInstances",
      "cloudasset.assets.exportSpeakerIdPhrases",
      "cloudasset.assets.exportSpeakerIdSettings",
      "cloudasset.assets.exportSpeakerIdSpeakers",
      "cloudasset.assets.exportSpeechCustomClasses",
      "cloudasset.assets.exportSpeechPhraseSets",
      "cloudasset.assets.exportSqladminBackupRuns",
      "cloudasset.assets.exportSqladminInstances",
      "cloudasset.assets.exportStorageBuckets",
      "cloudasset.assets.exportTpuNodes",
      "cloudasset.assets.exportVpcaccessConnector",
      "cloudasset.assets.listAccessLevel",
      "cloudasset.assets.listAccessPolicy",
      "cloudasset.assets.listAiplatformBatchPredictionJobs",
      "cloudasset.assets.listAiplatformCustomJobs",
      "cloudasset.assets.listAiplatformDataLabelingJobs",
      "cloudasset.assets.listAiplatformDatasets",
      "cloudasset.assets.listAiplatformEndpoints",
      "cloudasset.assets.listAiplatformHyperparameterTuningJobs",
      "cloudasset.assets.listAiplatformMetadataStores",
      "cloudasset.assets.listAiplatformModelDeploymentMonitoringJobs",
      "cloudasset.assets.listAiplatformModels",
      "cloudasset.assets.listAiplatformPipelineJobs",
      "cloudasset.assets.listAiplatformSpecialistPools",
      "cloudasset.assets.listAiplatformTrainingPipelines",
      "cloudasset.assets.listAllAccessPolicy",
      "cloudasset.assets.listAnthosConnectedCluster",
      "cloudasset.assets.listAnthosedgeCluster",
      "cloudasset.assets.listApigatewayApi",
      "cloudasset.assets.listApigatewayApiConfig",
      "cloudasset.assets.listApigatewayGateway",
      "cloudasset.assets.listApikeysKeys",
      "cloudasset.assets.listAppengineApplications",
      "cloudasset.assets.listAppengineServices",
      "cloudasset.assets.listAppengineVersions",
      "cloudasset.assets.listArtifactregistryDockerImages",
      "cloudasset.assets.listArtifactregistryRepositories",
      "cloudasset.assets.listAssuredWorkloadsWorkloads",
      "cloudasset.assets.listBeyondCorpApiGateways",
      "cloudasset.assets.listBeyondCorpAppConnections",
      "cloudasset.assets.listBeyondCorpAppConnectors",
      "cloudasset.assets.listBeyondCorpAppGateways",
      "cloudasset.assets.listBeyondCorpClientConnectorServices",
      "cloudasset.assets.listBeyondCorpClientGateways",
      "cloudasset.assets.listBigqueryDatasets",
      "cloudasset.assets.listBigqueryModels",
      "cloudasset.assets.listBigqueryTables",
      "cloudasset.assets.listBigtableAppProfile",
      "cloudasset.assets.listBigtableBackup",
      "cloudasset.assets.listBigtableCluster",
      "cloudasset.assets.listBigtableInstance",
      "cloudasset.assets.listBigtableTable",
      "cloudasset.assets.listCloudAssetFeeds",
      "cloudasset.assets.listCloudDeployDeliveryPipelines",
      "cloudasset.assets.listCloudDeployReleases",
      "cloudasset.assets.listCloudDeployRollouts",
      "cloudasset.assets.listCloudDeployTargets",
      "cloudasset.assets.listCloudDocumentAIEvaluation",
      "cloudasset.assets.listCloudDocumentAIHumanReviewConfig",
      "cloudasset.assets.listCloudDocumentAILabelerPool",
      "cloudasset.assets.listCloudDocumentAIProcessor",
      "cloudasset.assets.listCloudDocumentAIProcessorVersion",
      "cloudasset.assets.listCloudbillingBillingAccounts",
      "cloudasset.assets.listCloudbillingProjectBillingInfos",
      "cloudasset.assets.listCloudfunctionsFunctions",
      "cloudasset.assets.listCloudfunctionsGen2Functions",
      "cloudasset.assets.listCloudkmsCryptoKeyVersions",
      "cloudasset.assets.listCloudkmsCryptoKeys",
      "cloudasset.assets.listCloudkmsEkmConnections",
      "cloudasset.assets.listCloudkmsImportJobs",
      "cloudasset.assets.listCloudkmsKeyRings",
      "cloudasset.assets.listCloudmemcacheInstances",
      "cloudasset.assets.listCloudresourcemanagerFolders",
      "cloudasset.assets.listCloudresourcemanagerOrganizations",
      "cloudasset.assets.listCloudresourcemanagerProjects",
      "cloudasset.assets.listCloudresourcemanagerTagBindings",
      "cloudasset.assets.listCloudresourcemanagerTagKeys",
      "cloudasset.assets.listCloudresourcemanagerTagValues",
      "cloudasset.assets.listComposerEnvironments",
      "cloudasset.assets.listComputeAddress",
      "cloudasset.assets.listComputeAutoscalers",
      "cloudasset.assets.listComputeBackendBuckets",
      "cloudasset.assets.listComputeBackendServices",
      "cloudasset.assets.listComputeCommitments",
      "cloudasset.assets.listComputeDisks",
      "cloudasset.assets.listComputeExternalVpnGateways",
      "cloudasset.assets.listComputeFirewallPolicies",
      "cloudasset.assets.listComputeFirewalls",
      "cloudasset.assets.listComputeForwardingRules",
      "cloudasset.assets.listComputeGlobalAddress",
      "cloudasset.assets.listComputeGlobalForwardingRules",
      "cloudasset.assets.listComputeHealthChecks",
      "cloudasset.assets.listComputeHttpHealthChecks",
      "cloudasset.assets.listComputeHttpsHealthChecks",
      "cloudasset.assets.listComputeImages",
      "cloudasset.assets.listComputeInstanceGroupManagers",
      "cloudasset.assets.listComputeInstanceGroups",
      "cloudasset.assets.listComputeInstanceTemplates",
      "cloudasset.assets.listComputeInstances",
      "cloudasset.assets.listComputeInterconnect",
      "cloudasset.assets.listComputeInterconnectAttachment",
      "cloudasset.assets.listComputeLicenses",
      "cloudasset.assets.listComputeNetworkEndpointGroups",
      "cloudasset.assets.listComputeNetworks",
      "cloudasset.assets.listComputeNodeGroups",
      "cloudasset.assets.listComputeNodeTemplates",
      "cloudasset.assets.listComputePacketMirrorings",
      "cloudasset.assets.listComputeProjects",
      "cloudasset.assets.listComputeRegionAutoscaler",
      "cloudasset.assets.listComputeRegionBackendServices",
      "cloudasset.assets.listComputeRegionDisk",
      "cloudasset.assets.listComputeRegionInstanceGroup",
      "cloudasset.assets.listComputeRegionInstanceGroupManager",
      "cloudasset.assets.listComputeReservations",
      "cloudasset.assets.listComputeResourcePolicies",
      "cloudasset.assets.listComputeRouters",
      "cloudasset.assets.listComputeRoutes",
      "cloudasset.assets.listComputeSecurityPolicy",
      "cloudasset.assets.listComputeServiceAttachments",
      "cloudasset.assets.listComputeSnapshots",
      "cloudasset.assets.listComputeSslCertificates",
      "cloudasset.assets.listComputeSslPolicies",
      "cloudasset.assets.listComputeSubnetworks",
      "cloudasset.assets.listComputeTargetHttpProxies",
      "cloudasset.assets.listComputeTargetHttpsProxies",
      "cloudasset.assets.listComputeTargetInstances",
      "cloudasset.assets.listComputeTargetPools",
      "cloudasset.assets.listComputeTargetSslProxies",
      "cloudasset.assets.listComputeTargetTcpProxies",
      "cloudasset.assets.listComputeTargetVpnGateways",
      "cloudasset.assets.listComputeUrlMaps",
      "cloudasset.assets.listComputeVpnGateways",
      "cloudasset.assets.listComputeVpnTunnels",
      "cloudasset.assets.listConnectorsConnections",
      "cloudasset.assets.listConnectorsConnectorVersions",
      "cloudasset.assets.listConnectorsConnectors",
      "cloudasset.assets.listConnectorsProviders",
      "cloudasset.assets.listConnectorsRuntimeConfigs",
      "cloudasset.assets.listContainerAppsDeployment",
      "cloudasset.assets.listContainerAppsReplicaSets",
      "cloudasset.assets.listContainerBatchJobs",
      "cloudasset.assets.listContainerClusterrole",
      "cloudasset.assets.listContainerClusterrolebinding",
      "cloudasset.assets.listContainerClusters",
      "cloudasset.assets.listContainerExtensionsIngresses",
      "cloudasset.assets.listContainerJobs",
      "cloudasset.assets.listContainerNamespace",
      "cloudasset.assets.listContainerNetworkingIngresses",
      "cloudasset.assets.listContainerNetworkingNetworkPolicies",
      "cloudasset.assets.listContainerNode",
      "cloudasset.assets.listContainerNodepool",
      "cloudasset.assets.listContainerPod",
      "cloudasset.assets.listContainerReplicaSets",
      "cloudasset.assets.listContainerRole",
      "cloudasset.assets.listContainerRolebinding",
      "cloudasset.assets.listContainerServices",
      "cloudasset.assets.listContainerregistryImage",
      "cloudasset.assets.listDataMigrationConnectionProfiles",
      "cloudasset.assets.listDataMigrationMigrationJobs",
      "cloudasset.assets.listDataflowJobs",
      "cloudasset.assets.listDatafusionInstance",
      "cloudasset.assets.listDataplexAssets",
      "cloudasset.assets.listDataplexLakes",
      "cloudasset.assets.listDataplexTasks",
      "cloudasset.assets.listDataplexZones",
      "cloudasset.assets.listDataprocAutoscalingPolicies",
      "cloudasset.assets.listDataprocBatches",
      "cloudasset.assets.listDataprocClusters",
      "cloudasset.assets.listDataprocJobs",
      "cloudasset.assets.listDataprocSessions",
      "cloudasset.assets.listDataprocWorkflowTemplates",
      "cloudasset.assets.listDatastreamConnectionProfile",
      "cloudasset.assets.listDatastreamPrivateConnection",
      "cloudasset.assets.listDatastreamStream",
      "cloudasset.assets.listDialogflowAgents",
      "cloudasset.assets.listDialogflowConversationProfiles",
      "cloudasset.assets.listDialogflowKnowledgeBases",
      "cloudasset.assets.listDialogflowLocationSettings",
      "cloudasset.assets.listDlpDeidentifyTemplates",
      "cloudasset.assets.listDlpDlpJobs",
      "cloudasset.assets.listDlpInspectTemplates",
      "cloudasset.assets.listDlpJobTriggers",
      "cloudasset.assets.listDlpStoredInfoTypes",
      "cloudasset.assets.listDnsManagedZones",
      "cloudasset.assets.listDnsPolicies",
      "cloudasset.assets.listDomainsRegistrations",
      "cloudasset.assets.listEventarcTriggers",
      "cloudasset.assets.listFileBackups",
      "cloudasset.assets.listFileInstances",
      "cloudasset.assets.listFirebaseAppInfos",
      "cloudasset.assets.listFirebaseProjects",
      "cloudasset.assets.listFirestoreDatabases",
      "cloudasset.assets.listGKEHubFeatures",
      "cloudasset.assets.listGKEHubMemberships",
      "cloudasset.assets.listGameservicesGameServerClusters",
      "cloudasset.assets.listGameservicesGameServerConfigs",
      "cloudasset.assets.listGameservicesGameServerDeployments",
      "cloudasset.assets.listGameservicesRealms",
      "cloudasset.assets.listGkeBackupBackupPlans",
      "cloudasset.assets.listGkeBackupBackups",
      "cloudasset.assets.listGkeBackupRestorePlans",
      "cloudasset.assets.listGkeBackupRestores",
      "cloudasset.assets.listGkeBackupVolumeBackups",
      "cloudasset.assets.listGkeBackupVolumeRestores",
      "cloudasset.assets.listHealthcareConsentStores",
      "cloudasset.assets.listHealthcareDatasets",
      "cloudasset.assets.listHealthcareDicomStores",
      "cloudasset.assets.listHealthcareFhirStores",
      "cloudasset.assets.listHealthcareHl7V2Stores",
      "cloudasset.assets.listIamPolicy",
      "cloudasset.assets.listIamRoles",
      "cloudasset.assets.listIamServiceAccountKeys",
      "cloudasset.assets.listIamServiceAccounts",
      "cloudasset.assets.listIapTunnel",
      "cloudasset.assets.listIapTunnelInstances",
      "cloudasset.assets.listIapTunnelZones",
      "cloudasset.assets.listIapWeb",
      "cloudasset.assets.listIapWebServiceVersion",
      "cloudasset.assets.listIapWebServices",
      "cloudasset.assets.listIapWebType",
      "cloudasset.assets.listIdsEndpoints",
      "cloudasset.assets.listIntegrationsAuthConfigs",
      "cloudasset.assets.listIntegrationsCertificates",
      "cloudasset.assets.listIntegrationsExecutions",
      "cloudasset.assets.listIntegrationsIntegrationVersions",
      "cloudasset.assets.listIntegrationsIntegrations",
      "cloudasset.assets.listIntegrationsSfdcChannels",
      "cloudasset.assets.listIntegrationsSfdcInstances",
      "cloudasset.assets.listIntegrationsSuspensions",
      "cloudasset.assets.listLoggingLogMetrics",
      "cloudasset.assets.listLoggingLogSinks",
      "cloudasset.assets.listManagedidentitiesDomain",
      "cloudasset.assets.listMetastoreBackups",
      "cloudasset.assets.listMetastoreMetadataImports",
      "cloudasset.assets.listMetastoreServices",
      "cloudasset.assets.listMonitoringAlertPolicies",
      "cloudasset.assets.listNetworkConnectivityHubs",
      "cloudasset.assets.listNetworkConnectivitySpokes",
      "cloudasset.assets.listNetworkManagementConnectivityTests",
      "cloudasset.assets.listNetworkServicesEndpointPolicies",
      "cloudasset.assets.listNetworkServicesGateways",
      "cloudasset.assets.listNetworkServicesGrpcRoutes",
      "cloudasset.assets.listNetworkServicesHttpRoutes",
      "cloudasset.assets.listNetworkServicesMeshes",
      "cloudasset.assets.listNetworkServicesServiceBindings",
      "cloudasset.assets.listNetworkServicesTcpRoutes",
      "cloudasset.assets.listNetworkServicesTlsRoutes",
      "cloudasset.assets.listOSConfigOSPolicyAssignmentReports",
      "cloudasset.assets.listOSConfigOSPolicyAssignments",
      "cloudasset.assets.listOSConfigVulnerabilityReports",
      "cloudasset.assets.listOSInventories",
      "cloudasset.assets.listOrgPolicy",
      "cloudasset.assets.listPatchDeployments",
      "cloudasset.assets.listPubsubSnapshots",
      "cloudasset.assets.listPubsubSubscriptions",
      "cloudasset.assets.listPubsubTopics",
      "cloudasset.assets.listRedisInstances",
      "cloudasset.assets.listResource",
      "cloudasset.assets.listRunDomainMapping",
      "cloudasset.assets.listRunRevision",
      "cloudasset.assets.listRunService",
      "cloudasset.assets.listSecretManagerSecretVersions",
      "cloudasset.assets.listSecretManagerSecrets",
      "cloudasset.assets.listServiceDirectoryNamespaces",
      "cloudasset.assets.listServicePerimeter",
      "cloudasset.assets.listServiceconsumermanagementConsumerProperty",
      "cloudasset.assets.listServiceconsumermanagementConsumerQuotaLimits",
      "cloudasset.assets.listServiceconsumermanagementConsumers",
      "cloudasset.assets.listServiceconsumermanagementProducerOverrides",
      "cloudasset.assets.listServiceconsumermanagementTenancyUnits",
      "cloudasset.assets.listServiceconsumermanagementVisibility",
      "cloudasset.assets.listServicemanagementServices",
      "cloudasset.assets.listServiceusageAdminOverrides",
      "cloudasset.assets.listServiceusageConsumerOverrides",
      "cloudasset.assets.listServiceusageServices",
      "cloudasset.assets.listSpannerBackups",
      "cloudasset.assets.listSpannerDatabases",
      "cloudasset.assets.listSpannerInstances",
      "cloudasset.assets.listSpeakerIdPhrases",
      "cloudasset.assets.listSpeakerIdSettings",
      "cloudasset.assets.listSpeakerIdSpeakers",
      "cloudasset.assets.listSpeechCustomClasses",
      "cloudasset.assets.listSpeechPhraseSets",
      "cloudasset.assets.listSqladminBackupRuns",
      "cloudasset.assets.listSqladminInstances",
      "cloudasset.assets.listStorageBuckets",
      "cloudasset.assets.listTpuNodes",
      "cloudasset.assets.listVpcaccessConnector",
      "cloudasset.assets.queryAccessPolicy",
      "cloudasset.assets.queryIamPolicy",
      "cloudasset.assets.queryOSInventories",
      "cloudasset.assets.queryResource",
      "cloudasset.assets.searchAllIamPolicies",
      "cloudasset.assets.searchAllResources",
      "datacatalog.categories.fineGrainedGet",
      "datacatalog.entries.updateTag",
      "datacatalog.entryGroups.updateTag",
      "datacatalog.tagTemplates.create",
      "datacatalog.tagTemplates.get",
      "datacatalog.tagTemplates.getTag",
      "datacatalog.tagTemplates.use",
      "dlp.analyzeRiskTemplates.create",
      "dlp.analyzeRiskTemplates.delete",
      "dlp.analyzeRiskTemplates.get",
      "dlp.analyzeRiskTemplates.list",
      "dlp.analyzeRiskTemplates.update",
      "dlp.columnDataProfiles.get",
      "dlp.columnDataProfiles.list",
      "dlp.deidentifyTemplates.create",
      "dlp.deidentifyTemplates.delete",
      "dlp.deidentifyTemplates.get",
      "dlp.deidentifyTemplates.list",
      "dlp.deidentifyTemplates.update",
      "dlp.estimates.cancel",
      "dlp.estimates.create",
      "dlp.estimates.delete",
      "dlp.estimates.get",
      "dlp.estimates.list",
      "dlp.inspectFindings.list",
      "dlp.inspectTemplates.create",
      "dlp.inspectTemplates.delete",
      "dlp.inspectTemplates.get",
      "dlp.inspectTemplates.list",
      "dlp.inspectTemplates.update",
      "dlp.jobTriggers.create",
      "dlp.jobTriggers.delete",
      "dlp.jobTriggers.get",
      "dlp.jobTriggers.hybridInspect",
      "dlp.jobTriggers.list",
      "dlp.jobTriggers.update",
      "dlp.jobs.cancel",
      "dlp.jobs.create",
      "dlp.jobs.delete",
      "dlp.jobs.get",
      "dlp.jobs.hybridInspect",
      "dlp.jobs.list",
      "dlp.kms.encrypt",
      "dlp.locations.get",
      "dlp.locations.list",
      "dlp.projectDataProfiles.get",
      "dlp.projectDataProfiles.list",
      "dlp.storedInfoTypes.create",
      "dlp.storedInfoTypes.delete",
      "dlp.storedInfoTypes.get",
      "dlp.storedInfoTypes.list",
      "dlp.storedInfoTypes.update",
      "dlp.tableDataProfiles.get",
      "dlp.tableDataProfiles.list",
      "pubsub.topics.updateTag",
      "recommender.cloudAssetInsights.get",
      "recommender.cloudAssetInsights.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dlp.projectDataProfilesReader",
    "title": "DLP Project Data Profiles Reader",
    "description": "Read DLP project profiles.",
    "includedPermissions": [
      "dlp.projectDataProfiles.get",
      "dlp.projectDataProfiles.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dlp.projectdriver",
    "title": "DLP Project Data Profiles Driver",
    "description": "Permissions needed by the DLP service account to generate data profiles within a project.",
    "includedPermissions": [
      "bigquery.bireservations.get",
      "bigquery.capacityCommitments.get",
      "bigquery.capacityCommitments.list",
      "bigquery.config.get",
      "bigquery.connections.updateTag",
      "bigquery.datasets.create",
      "bigquery.datasets.get",
      "bigquery.datasets.getIamPolicy",
      "bigquery.datasets.updateTag",
      "bigquery.jobs.create",
      "bigquery.jobs.get",
      "bigquery.jobs.list",
      "bigquery.jobs.listAll",
      "bigquery.jobs.listExecutionMetadata",
      "bigquery.models.create",
      "bigquery.models.delete",
      "bigquery.models.export",
      "bigquery.models.getData",
      "bigquery.models.getMetadata",
      "bigquery.models.list",
      "bigquery.models.updateData",
      "bigquery.models.updateMetadata",
      "bigquery.models.updateTag",
      "bigquery.readsessions.create",
      "bigquery.readsessions.getData",
      "bigquery.readsessions.update",
      "bigquery.reservationAssignments.list",
      "bigquery.reservationAssignments.search",
      "bigquery.reservations.get",
      "bigquery.reservations.list",
      "bigquery.routines.create",
      "bigquery.routines.delete",
      "bigquery.routines.get",
      "bigquery.routines.list",
      "bigquery.routines.update",
      "bigquery.routines.updateTag",
      "bigquery.savedqueries.get",
      "bigquery.savedqueries.list",
      "bigquery.tables.create",
      "bigquery.tables.createIndex",
      "bigquery.tables.createSnapshot",
      "bigquery.tables.delete",
      "bigquery.tables.deleteIndex",
      "bigquery.tables.export",
      "bigquery.tables.get",
      "bigquery.tables.getData",
      "bigquery.tables.getIamPolicy",
      "bigquery.tables.list",
      "bigquery.tables.replicateData",
      "bigquery.tables.restoreSnapshot",
      "bigquery.tables.update",
      "bigquery.tables.updateData",
      "bigquery.tables.updateTag",
      "bigquery.transfers.get",
      "bigquerymigration.translation.translate",
      "cloudasset.assets.analyzeIamPolicy",
      "cloudasset.assets.analyzeMove",
      "cloudasset.assets.analyzeOrgPolicy",
      "cloudasset.assets.exportAccessLevel",
      "cloudasset.assets.exportAccessPolicy",
      "cloudasset.assets.exportAiplatformBatchPredictionJobs",
      "cloudasset.assets.exportAiplatformCustomJobs",
      "cloudasset.assets.exportAiplatformDataLabelingJobs",
      "cloudasset.assets.exportAiplatformDatasets",
      "cloudasset.assets.exportAiplatformEndpoints",
      "cloudasset.assets.exportAiplatformHyperparameterTuningJobs",
      "cloudasset.assets.exportAiplatformMetadataStores",
      "cloudasset.assets.exportAiplatformModelDeploymentMonitoringJobs",
      "cloudasset.assets.exportAiplatformModels",
      "cloudasset.assets.exportAiplatformPipelineJobs",
      "cloudasset.assets.exportAiplatformSpecialistPools",
      "cloudasset.assets.exportAiplatformTrainingPipelines",
      "cloudasset.assets.exportAllAccessPolicy",
      "cloudasset.assets.exportAnthosConnectedCluster",
      "cloudasset.assets.exportAnthosedgeCluster",
      "cloudasset.assets.exportApigatewayApi",
      "cloudasset.assets.exportApigatewayApiConfig",
      "cloudasset.assets.exportApigatewayGateway",
      "cloudasset.assets.exportApikeysKeys",
      "cloudasset.assets.exportAppengineApplications",
      "cloudasset.assets.exportAppengineServices",
      "cloudasset.assets.exportAppengineVersions",
      "cloudasset.assets.exportArtifactregistryDockerImages",
      "cloudasset.assets.exportArtifactregistryRepositories",
      "cloudasset.assets.exportAssuredWorkloadsWorkloads",
      "cloudasset.assets.exportBeyondCorpApiGateways",
      "cloudasset.assets.exportBeyondCorpAppConnections",
      "cloudasset.assets.exportBeyondCorpAppConnectors",
      "cloudasset.assets.exportBeyondCorpAppGateways",
      "cloudasset.assets.exportBeyondCorpClientConnectorServices",
      "cloudasset.assets.exportBeyondCorpClientGateways",
      "cloudasset.assets.exportBigqueryDatasets",
      "cloudasset.assets.exportBigqueryModels",
      "cloudasset.assets.exportBigqueryTables",
      "cloudasset.assets.exportBigtableAppProfile",
      "cloudasset.assets.exportBigtableBackup",
      "cloudasset.assets.exportBigtableCluster",
      "cloudasset.assets.exportBigtableInstance",
      "cloudasset.assets.exportBigtableTable",
      "cloudasset.assets.exportCloudAssetFeeds",
      "cloudasset.assets.exportCloudDeployDeliveryPipelines",
      "cloudasset.assets.exportCloudDeployReleases",
      "cloudasset.assets.exportCloudDeployRollouts",
      "cloudasset.assets.exportCloudDeployTargets",
      "cloudasset.assets.exportCloudDocumentAIEvaluation",
      "cloudasset.assets.exportCloudDocumentAIHumanReviewConfig",
      "cloudasset.assets.exportCloudDocumentAILabelerPool",
      "cloudasset.assets.exportCloudDocumentAIProcessor",
      "cloudasset.assets.exportCloudDocumentAIProcessorVersion",
      "cloudasset.assets.exportCloudbillingBillingAccounts",
      "cloudasset.assets.exportCloudbillingProjectBillingInfos",
      "cloudasset.assets.exportCloudfunctionsFunctions",
      "cloudasset.assets.exportCloudfunctionsGen2Functions",
      "cloudasset.assets.exportCloudkmsCryptoKeyVersions",
      "cloudasset.assets.exportCloudkmsCryptoKeys",
      "cloudasset.assets.exportCloudkmsEkmConnections",
      "cloudasset.assets.exportCloudkmsImportJobs",
      "cloudasset.assets.exportCloudkmsKeyRings",
      "cloudasset.assets.exportCloudmemcacheInstances",
      "cloudasset.assets.exportCloudresourcemanagerFolders",
      "cloudasset.assets.exportCloudresourcemanagerOrganizations",
      "cloudasset.assets.exportCloudresourcemanagerProjects",
      "cloudasset.assets.exportCloudresourcemanagerTagBindings",
      "cloudasset.assets.exportCloudresourcemanagerTagKeys",
      "cloudasset.assets.exportCloudresourcemanagerTagValues",
      "cloudasset.assets.exportComposerEnvironments",
      "cloudasset.assets.exportComputeAddress",
      "cloudasset.assets.exportComputeAutoscalers",
      "cloudasset.assets.exportComputeBackendBuckets",
      "cloudasset.assets.exportComputeBackendServices",
      "cloudasset.assets.exportComputeCommitments",
      "cloudasset.assets.exportComputeDisks",
      "cloudasset.assets.exportComputeExternalVpnGateways",
      "cloudasset.assets.exportComputeFirewallPolicies",
      "cloudasset.assets.exportComputeFirewalls",
      "cloudasset.assets.exportComputeForwardingRules",
      "cloudasset.assets.exportComputeGlobalAddress",
      "cloudasset.assets.exportComputeGlobalForwardingRules",
      "cloudasset.assets.exportComputeHealthChecks",
      "cloudasset.assets.exportComputeHttpHealthChecks",
      "cloudasset.assets.exportComputeHttpsHealthChecks",
      "cloudasset.assets.exportComputeImages",
      "cloudasset.assets.exportComputeInstanceGroupManagers",
      "cloudasset.assets.exportComputeInstanceGroups",
      "cloudasset.assets.exportComputeInstanceTemplates",
      "cloudasset.assets.exportComputeInstances",
      "cloudasset.assets.exportComputeInterconnect",
      "cloudasset.assets.exportComputeInterconnectAttachment",
      "cloudasset.assets.exportComputeLicenses",
      "cloudasset.assets.exportComputeNetworkEndpointGroups",
      "cloudasset.assets.exportComputeNetworks",
      "cloudasset.assets.exportComputeNodeGroups",
      "cloudasset.assets.exportComputeNodeTemplates",
      "cloudasset.assets.exportComputePacketMirrorings",
      "cloudasset.assets.exportComputeProjects",
      "cloudasset.assets.exportComputeRegionAutoscaler",
      "cloudasset.assets.exportComputeRegionBackendServices",
      "cloudasset.assets.exportComputeRegionDisk",
      "cloudasset.assets.exportComputeRegionInstanceGroup",
      "cloudasset.assets.exportComputeRegionInstanceGroupManager",
      "cloudasset.assets.exportComputeReservations",
      "cloudasset.assets.exportComputeResourcePolicies",
      "cloudasset.assets.exportComputeRouters",
      "cloudasset.assets.exportComputeRoutes",
      "cloudasset.assets.exportComputeSecurityPolicy",
      "cloudasset.assets.exportComputeServiceAttachments",
      "cloudasset.assets.exportComputeSnapshots",
      "cloudasset.assets.exportComputeSslCertificates",
      "cloudasset.assets.exportComputeSslPolicies",
      "cloudasset.assets.exportComputeSubnetworks",
      "cloudasset.assets.exportComputeTargetHttpProxies",
      "cloudasset.assets.exportComputeTargetHttpsProxies",
      "cloudasset.assets.exportComputeTargetInstances",
      "cloudasset.assets.exportComputeTargetPools",
      "cloudasset.assets.exportComputeTargetSslProxies",
      "cloudasset.assets.exportComputeTargetTcpProxies",
      "cloudasset.assets.exportComputeTargetVpnGateways",
      "cloudasset.assets.exportComputeUrlMaps",
      "cloudasset.assets.exportComputeVpnGateways",
      "cloudasset.assets.exportComputeVpnTunnels",
      "cloudasset.assets.exportConnectorsConnections",
      "cloudasset.assets.exportConnectorsConnectorVersions",
      "cloudasset.assets.exportConnectorsConnectors",
      "cloudasset.assets.exportConnectorsProviders",
      "cloudasset.assets.exportConnectorsRuntimeConfigs",
      "cloudasset.assets.exportContainerAppsDeployment",
      "cloudasset.assets.exportContainerAppsReplicaSets",
      "cloudasset.assets.exportContainerBatchJobs",
      "cloudasset.assets.exportContainerClusterrole",
      "cloudasset.assets.exportContainerClusterrolebinding",
      "cloudasset.assets.exportContainerClusters",
      "cloudasset.assets.exportContainerExtensionsIngresses",
      "cloudasset.assets.exportContainerJobs",
      "cloudasset.assets.exportContainerNamespace",
      "cloudasset.assets.exportContainerNetworkingIngresses",
      "cloudasset.assets.exportContainerNetworkingNetworkPolicies",
      "cloudasset.assets.exportContainerNode",
      "cloudasset.assets.exportContainerNodepool",
      "cloudasset.assets.exportContainerPod",
      "cloudasset.assets.exportContainerReplicaSets",
      "cloudasset.assets.exportContainerRole",
      "cloudasset.assets.exportContainerRolebinding",
      "cloudasset.assets.exportContainerServices",
      "cloudasset.assets.exportContainerregistryImage",
      "cloudasset.assets.exportDataMigrationConnectionProfiles",
      "cloudasset.assets.exportDataMigrationMigrationJobs",
      "cloudasset.assets.exportDataflowJobs",
      "cloudasset.assets.exportDatafusionInstance",
      "cloudasset.assets.exportDataplexAssets",
      "cloudasset.assets.exportDataplexLakes",
      "cloudasset.assets.exportDataplexTasks",
      "cloudasset.assets.exportDataplexZones",
      "cloudasset.assets.exportDataprocAutoscalingPolicies",
      "cloudasset.assets.exportDataprocBatches",
      "cloudasset.assets.exportDataprocClusters",
      "cloudasset.assets.exportDataprocJobs",
      "cloudasset.assets.exportDataprocSessions",
      "cloudasset.assets.exportDataprocWorkflowTemplates",
      "cloudasset.assets.exportDatastreamConnectionProfile",
      "cloudasset.assets.exportDatastreamPrivateConnection",
      "cloudasset.assets.exportDatastreamStream",
      "cloudasset.assets.exportDialogflowAgents",
      "cloudasset.assets.exportDialogflowConversationProfiles",
      "cloudasset.assets.exportDialogflowKnowledgeBases",
      "cloudasset.assets.exportDialogflowLocationSettings",
      "cloudasset.assets.exportDlpDeidentifyTemplates",
      "cloudasset.assets.exportDlpDlpJobs",
      "cloudasset.assets.exportDlpInspectTemplates",
      "cloudasset.assets.exportDlpJobTriggers",
      "cloudasset.assets.exportDlpStoredInfoTypes",
      "cloudasset.assets.exportDnsManagedZones",
      "cloudasset.assets.exportDnsPolicies",
      "cloudasset.assets.exportDomainsRegistrations",
      "cloudasset.assets.exportEventarcTriggers",
      "cloudasset.assets.exportFileBackups",
      "cloudasset.assets.exportFileInstances",
      "cloudasset.assets.exportFirebaseAppInfos",
      "cloudasset.assets.exportFirebaseProjects",
      "cloudasset.assets.exportFirestoreDatabases",
      "cloudasset.assets.exportGKEHubFeatures",
      "cloudasset.assets.exportGKEHubMemberships",
      "cloudasset.assets.exportGameservicesGameServerClusters",
      "cloudasset.assets.exportGameservicesGameServerConfigs",
      "cloudasset.assets.exportGameservicesGameServerDeployments",
      "cloudasset.assets.exportGameservicesRealms",
      "cloudasset.assets.exportGkeBackupBackupPlans",
      "cloudasset.assets.exportGkeBackupBackups",
      "cloudasset.assets.exportGkeBackupRestorePlans",
      "cloudasset.assets.exportGkeBackupRestores",
      "cloudasset.assets.exportGkeBackupVolumeBackups",
      "cloudasset.assets.exportGkeBackupVolumeRestores",
      "cloudasset.assets.exportHealthcareConsentStores",
      "cloudasset.assets.exportHealthcareDatasets",
      "cloudasset.assets.exportHealthcareDicomStores",
      "cloudasset.assets.exportHealthcareFhirStores",
      "cloudasset.assets.exportHealthcareHl7V2Stores",
      "cloudasset.assets.exportIamPolicy",
      "cloudasset.assets.exportIamRoles",
      "cloudasset.assets.exportIamServiceAccountKeys",
      "cloudasset.assets.exportIamServiceAccounts",
      "cloudasset.assets.exportIapTunnel",
      "cloudasset.assets.exportIapTunnelInstances",
      "cloudasset.assets.exportIapTunnelZones",
      "cloudasset.assets.exportIapWeb",
      "cloudasset.assets.exportIapWebServiceVersion",
      "cloudasset.assets.exportIapWebServices",
      "cloudasset.assets.exportIapWebType",
      "cloudasset.assets.exportIdsEndpoints",
      "cloudasset.assets.exportIntegrationsAuthConfigs",
      "cloudasset.assets.exportIntegrationsCertificates",
      "cloudasset.assets.exportIntegrationsExecutions",
      "cloudasset.assets.exportIntegrationsIntegrationVersions",
      "cloudasset.assets.exportIntegrationsIntegrations",
      "cloudasset.assets.exportIntegrationsSfdcChannels",
      "cloudasset.assets.exportIntegrationsSfdcInstances",
      "cloudasset.assets.exportIntegrationsSuspensions",
      "cloudasset.assets.exportLoggingLogMetrics",
      "cloudasset.assets.exportLoggingLogSinks",
      "cloudasset.assets.exportManagedidentitiesDomain",
      "cloudasset.assets.exportMetastoreBackups",
      "cloudasset.assets.exportMetastoreMetadataImports",
      "cloudasset.assets.exportMetastoreServices",
      "cloudasset.assets.exportMonitoringAlertPolicies",
      "cloudasset.assets.exportNetworkConnectivityHubs",
      "cloudasset.assets.exportNetworkConnectivitySpokes",
      "cloudasset.assets.exportNetworkManagementConnectivityTests",
      "cloudasset.assets.exportNetworkServicesEndpointPolicies",
      "cloudasset.assets.exportNetworkServicesGateways",
      "cloudasset.assets.exportNetworkServicesGrpcRoutes",
      "cloudasset.assets.exportNetworkServicesHttpRoutes",
      "cloudasset.assets.exportNetworkServicesMeshes",
      "cloudasset.assets.exportNetworkServicesServiceBindings",
      "cloudasset.assets.exportNetworkServicesTcpRoutes",
      "cloudasset.assets.exportNetworkServicesTlsRoutes",
      "cloudasset.assets.exportOSConfigOSPolicyAssignmentReports",
      "cloudasset.assets.exportOSConfigOSPolicyAssignments",
      "cloudasset.assets.exportOSConfigVulnerabilityReports",
      "cloudasset.assets.exportOSInventories",
      "cloudasset.assets.exportOrgPolicy",
      "cloudasset.assets.exportPatchDeployments",
      "cloudasset.assets.exportPubsubSnapshots",
      "cloudasset.assets.exportPubsubSubscriptions",
      "cloudasset.assets.exportPubsubTopics",
      "cloudasset.assets.exportRedisInstances",
      "cloudasset.assets.exportResource",
      "cloudasset.assets.exportSecretManagerSecretVersions",
      "cloudasset.assets.exportSecretManagerSecrets",
      "cloudasset.assets.exportServiceDirectoryNamespaces",
      "cloudasset.assets.exportServicePerimeter",
      "cloudasset.assets.exportServiceconsumermanagementConsumerProperty",
      "cloudasset.assets.exportServiceconsumermanagementConsumerQuotaLimits",
      "cloudasset.assets.exportServiceconsumermanagementConsumers",
      "cloudasset.assets.exportServiceconsumermanagementProducerOverrides",
      "cloudasset.assets.exportServiceconsumermanagementTenancyUnits",
      "cloudasset.assets.exportServiceconsumermanagementVisibility",
      "cloudasset.assets.exportServicemanagementServices",
      "cloudasset.assets.exportServiceusageAdminOverrides",
      "cloudasset.assets.exportServiceusageConsumerOverrides",
      "cloudasset.assets.exportServiceusageServices",
      "cloudasset.assets.exportSpannerBackups",
      "cloudasset.assets.exportSpannerDatabases",
      "cloudasset.assets.exportSpannerInstances",
      "cloudasset.assets.exportSpeakerIdPhrases",
      "cloudasset.assets.exportSpeakerIdSettings",
      "cloudasset.assets.exportSpeakerIdSpeakers",
      "cloudasset.assets.exportSpeechCustomClasses",
      "cloudasset.assets.exportSpeechPhraseSets",
      "cloudasset.assets.exportSqladminBackupRuns",
      "cloudasset.assets.exportSqladminInstances",
      "cloudasset.assets.exportStorageBuckets",
      "cloudasset.assets.exportTpuNodes",
      "cloudasset.assets.exportVpcaccessConnector",
      "cloudasset.assets.listAccessLevel",
      "cloudasset.assets.listAccessPolicy",
      "cloudasset.assets.listAiplatformBatchPredictionJobs",
      "cloudasset.assets.listAiplatformCustomJobs",
      "cloudasset.assets.listAiplatformDataLabelingJobs",
      "cloudasset.assets.listAiplatformDatasets",
      "cloudasset.assets.listAiplatformEndpoints",
      "cloudasset.assets.listAiplatformHyperparameterTuningJobs",
      "cloudasset.assets.listAiplatformMetadataStores",
      "cloudasset.assets.listAiplatformModelDeploymentMonitoringJobs",
      "cloudasset.assets.listAiplatformModels",
      "cloudasset.assets.listAiplatformPipelineJobs",
      "cloudasset.assets.listAiplatformSpecialistPools",
      "cloudasset.assets.listAiplatformTrainingPipelines",
      "cloudasset.assets.listAllAccessPolicy",
      "cloudasset.assets.listAnthosConnectedCluster",
      "cloudasset.assets.listAnthosedgeCluster",
      "cloudasset.assets.listApigatewayApi",
      "cloudasset.assets.listApigatewayApiConfig",
      "cloudasset.assets.listApigatewayGateway",
      "cloudasset.assets.listApikeysKeys",
      "cloudasset.assets.listAppengineApplications",
      "cloudasset.assets.listAppengineServices",
      "cloudasset.assets.listAppengineVersions",
      "cloudasset.assets.listArtifactregistryDockerImages",
      "cloudasset.assets.listArtifactregistryRepositories",
      "cloudasset.assets.listAssuredWorkloadsWorkloads",
      "cloudasset.assets.listBeyondCorpApiGateways",
      "cloudasset.assets.listBeyondCorpAppConnections",
      "cloudasset.assets.listBeyondCorpAppConnectors",
      "cloudasset.assets.listBeyondCorpAppGateways",
      "cloudasset.assets.listBeyondCorpClientConnectorServices",
      "cloudasset.assets.listBeyondCorpClientGateways",
      "cloudasset.assets.listBigqueryDatasets",
      "cloudasset.assets.listBigqueryModels",
      "cloudasset.assets.listBigqueryTables",
      "cloudasset.assets.listBigtableAppProfile",
      "cloudasset.assets.listBigtableBackup",
      "cloudasset.assets.listBigtableCluster",
      "cloudasset.assets.listBigtableInstance",
      "cloudasset.assets.listBigtableTable",
      "cloudasset.assets.listCloudAssetFeeds",
      "cloudasset.assets.listCloudDeployDeliveryPipelines",
      "cloudasset.assets.listCloudDeployReleases",
      "cloudasset.assets.listCloudDeployRollouts",
      "cloudasset.assets.listCloudDeployTargets",
      "cloudasset.assets.listCloudDocumentAIEvaluation",
      "cloudasset.assets.listCloudDocumentAIHumanReviewConfig",
      "cloudasset.assets.listCloudDocumentAILabelerPool",
      "cloudasset.assets.listCloudDocumentAIProcessor",
      "cloudasset.assets.listCloudDocumentAIProcessorVersion",
      "cloudasset.assets.listCloudbillingBillingAccounts",
      "cloudasset.assets.listCloudbillingProjectBillingInfos",
      "cloudasset.assets.listCloudfunctionsFunctions",
      "cloudasset.assets.listCloudfunctionsGen2Functions",
      "cloudasset.assets.listCloudkmsCryptoKeyVersions",
      "cloudasset.assets.listCloudkmsCryptoKeys",
      "cloudasset.assets.listCloudkmsEkmConnections",
      "cloudasset.assets.listCloudkmsImportJobs",
      "cloudasset.assets.listCloudkmsKeyRings",
      "cloudasset.assets.listCloudmemcacheInstances",
      "cloudasset.assets.listCloudresourcemanagerFolders",
      "cloudasset.assets.listCloudresourcemanagerOrganizations",
      "cloudasset.assets.listCloudresourcemanagerProjects",
      "cloudasset.assets.listCloudresourcemanagerTagBindings",
      "cloudasset.assets.listCloudresourcemanagerTagKeys",
      "cloudasset.assets.listCloudresourcemanagerTagValues",
      "cloudasset.assets.listComposerEnvironments",
      "cloudasset.assets.listComputeAddress",
      "cloudasset.assets.listComputeAutoscalers",
      "cloudasset.assets.listComputeBackendBuckets",
      "cloudasset.assets.listComputeBackendServices",
      "cloudasset.assets.listComputeCommitments",
      "cloudasset.assets.listComputeDisks",
      "cloudasset.assets.listComputeExternalVpnGateways",
      "cloudasset.assets.listComputeFirewallPolicies",
      "cloudasset.assets.listComputeFirewalls",
      "cloudasset.assets.listComputeForwardingRules",
      "cloudasset.assets.listComputeGlobalAddress",
      "cloudasset.assets.listComputeGlobalForwardingRules",
      "cloudasset.assets.listComputeHealthChecks",
      "cloudasset.assets.listComputeHttpHealthChecks",
      "cloudasset.assets.listComputeHttpsHealthChecks",
      "cloudasset.assets.listComputeImages",
      "cloudasset.assets.listComputeInstanceGroupManagers",
      "cloudasset.assets.listComputeInstanceGroups",
      "cloudasset.assets.listComputeInstanceTemplates",
      "cloudasset.assets.listComputeInstances",
      "cloudasset.assets.listComputeInterconnect",
      "cloudasset.assets.listComputeInterconnectAttachment",
      "cloudasset.assets.listComputeLicenses",
      "cloudasset.assets.listComputeNetworkEndpointGroups",
      "cloudasset.assets.listComputeNetworks",
      "cloudasset.assets.listComputeNodeGroups",
      "cloudasset.assets.listComputeNodeTemplates",
      "cloudasset.assets.listComputePacketMirrorings",
      "cloudasset.assets.listComputeProjects",
      "cloudasset.assets.listComputeRegionAutoscaler",
      "cloudasset.assets.listComputeRegionBackendServices",
      "cloudasset.assets.listComputeRegionDisk",
      "cloudasset.assets.listComputeRegionInstanceGroup",
      "cloudasset.assets.listComputeRegionInstanceGroupManager",
      "cloudasset.assets.listComputeReservations",
      "cloudasset.assets.listComputeResourcePolicies",
      "cloudasset.assets.listComputeRouters",
      "cloudasset.assets.listComputeRoutes",
      "cloudasset.assets.listComputeSecurityPolicy",
      "cloudasset.assets.listComputeServiceAttachments",
      "cloudasset.assets.listComputeSnapshots",
      "cloudasset.assets.listComputeSslCertificates",
      "cloudasset.assets.listComputeSslPolicies",
      "cloudasset.assets.listComputeSubnetworks",
      "cloudasset.assets.listComputeTargetHttpProxies",
      "cloudasset.assets.listComputeTargetHttpsProxies",
      "cloudasset.assets.listComputeTargetInstances",
      "cloudasset.assets.listComputeTargetPools",
      "cloudasset.assets.listComputeTargetSslProxies",
      "cloudasset.assets.listComputeTargetTcpProxies",
      "cloudasset.assets.listComputeTargetVpnGateways",
      "cloudasset.assets.listComputeUrlMaps",
      "cloudasset.assets.listComputeVpnGateways",
      "cloudasset.assets.listComputeVpnTunnels",
      "cloudasset.assets.listConnectorsConnections",
      "cloudasset.assets.listConnectorsConnectorVersions",
      "cloudasset.assets.listConnectorsConnectors",
      "cloudasset.assets.listConnectorsProviders",
      "cloudasset.assets.listConnectorsRuntimeConfigs",
      "cloudasset.assets.listContainerAppsDeployment",
      "cloudasset.assets.listContainerAppsReplicaSets",
      "cloudasset.assets.listContainerBatchJobs",
      "cloudasset.assets.listContainerClusterrole",
      "cloudasset.assets.listContainerClusterrolebinding",
      "cloudasset.assets.listContainerClusters",
      "cloudasset.assets.listContainerExtensionsIngresses",
      "cloudasset.assets.listContainerJobs",
      "cloudasset.assets.listContainerNamespace",
      "cloudasset.assets.listContainerNetworkingIngresses",
      "cloudasset.assets.listContainerNetworkingNetworkPolicies",
      "cloudasset.assets.listContainerNode",
      "cloudasset.assets.listContainerNodepool",
      "cloudasset.assets.listContainerPod",
      "cloudasset.assets.listContainerReplicaSets",
      "cloudasset.assets.listContainerRole",
      "cloudasset.assets.listContainerRolebinding",
      "cloudasset.assets.listContainerServices",
      "cloudasset.assets.listContainerregistryImage",
      "cloudasset.assets.listDataMigrationConnectionProfiles",
      "cloudasset.assets.listDataMigrationMigrationJobs",
      "cloudasset.assets.listDataflowJobs",
      "cloudasset.assets.listDatafusionInstance",
      "cloudasset.assets.listDataplexAssets",
      "cloudasset.assets.listDataplexLakes",
      "cloudasset.assets.listDataplexTasks",
      "cloudasset.assets.listDataplexZones",
      "cloudasset.assets.listDataprocAutoscalingPolicies",
      "cloudasset.assets.listDataprocBatches",
      "cloudasset.assets.listDataprocClusters",
      "cloudasset.assets.listDataprocJobs",
      "cloudasset.assets.listDataprocSessions",
      "cloudasset.assets.listDataprocWorkflowTemplates",
      "cloudasset.assets.listDatastreamConnectionProfile",
      "cloudasset.assets.listDatastreamPrivateConnection",
      "cloudasset.assets.listDatastreamStream",
      "cloudasset.assets.listDialogflowAgents",
      "cloudasset.assets.listDialogflowConversationProfiles",
      "cloudasset.assets.listDialogflowKnowledgeBases",
      "cloudasset.assets.listDialogflowLocationSettings",
      "cloudasset.assets.listDlpDeidentifyTemplates",
      "cloudasset.assets.listDlpDlpJobs",
      "cloudasset.assets.listDlpInspectTemplates",
      "cloudasset.assets.listDlpJobTriggers",
      "cloudasset.assets.listDlpStoredInfoTypes",
      "cloudasset.assets.listDnsManagedZones",
      "cloudasset.assets.listDnsPolicies",
      "cloudasset.assets.listDomainsRegistrations",
      "cloudasset.assets.listEventarcTriggers",
      "cloudasset.assets.listFileBackups",
      "cloudasset.assets.listFileInstances",
      "cloudasset.assets.listFirebaseAppInfos",
      "cloudasset.assets.listFirebaseProjects",
      "cloudasset.assets.listFirestoreDatabases",
      "cloudasset.assets.listGKEHubFeatures",
      "cloudasset.assets.listGKEHubMemberships",
      "cloudasset.assets.listGameservicesGameServerClusters",
      "cloudasset.assets.listGameservicesGameServerConfigs",
      "cloudasset.assets.listGameservicesGameServerDeployments",
      "cloudasset.assets.listGameservicesRealms",
      "cloudasset.assets.listGkeBackupBackupPlans",
      "cloudasset.assets.listGkeBackupBackups",
      "cloudasset.assets.listGkeBackupRestorePlans",
      "cloudasset.assets.listGkeBackupRestores",
      "cloudasset.assets.listGkeBackupVolumeBackups",
      "cloudasset.assets.listGkeBackupVolumeRestores",
      "cloudasset.assets.listHealthcareConsentStores",
      "cloudasset.assets.listHealthcareDatasets",
      "cloudasset.assets.listHealthcareDicomStores",
      "cloudasset.assets.listHealthcareFhirStores",
      "cloudasset.assets.listHealthcareHl7V2Stores",
      "cloudasset.assets.listIamPolicy",
      "cloudasset.assets.listIamRoles",
      "cloudasset.assets.listIamServiceAccountKeys",
      "cloudasset.assets.listIamServiceAccounts",
      "cloudasset.assets.listIapTunnel",
      "cloudasset.assets.listIapTunnelInstances",
      "cloudasset.assets.listIapTunnelZones",
      "cloudasset.assets.listIapWeb",
      "cloudasset.assets.listIapWebServiceVersion",
      "cloudasset.assets.listIapWebServices",
      "cloudasset.assets.listIapWebType",
      "cloudasset.assets.listIdsEndpoints",
      "cloudasset.assets.listIntegrationsAuthConfigs",
      "cloudasset.assets.listIntegrationsCertificates",
      "cloudasset.assets.listIntegrationsExecutions",
      "cloudasset.assets.listIntegrationsIntegrationVersions",
      "cloudasset.assets.listIntegrationsIntegrations",
      "cloudasset.assets.listIntegrationsSfdcChannels",
      "cloudasset.assets.listIntegrationsSfdcInstances",
      "cloudasset.assets.listIntegrationsSuspensions",
      "cloudasset.assets.listLoggingLogMetrics",
      "cloudasset.assets.listLoggingLogSinks",
      "cloudasset.assets.listManagedidentitiesDomain",
      "cloudasset.assets.listMetastoreBackups",
      "cloudasset.assets.listMetastoreMetadataImports",
      "cloudasset.assets.listMetastoreServices",
      "cloudasset.assets.listMonitoringAlertPolicies",
      "cloudasset.assets.listNetworkConnectivityHubs",
      "cloudasset.assets.listNetworkConnectivitySpokes",
      "cloudasset.assets.listNetworkManagementConnectivityTests",
      "cloudasset.assets.listNetworkServicesEndpointPolicies",
      "cloudasset.assets.listNetworkServicesGateways",
      "cloudasset.assets.listNetworkServicesGrpcRoutes",
      "cloudasset.assets.listNetworkServicesHttpRoutes",
      "cloudasset.assets.listNetworkServicesMeshes",
      "cloudasset.assets.listNetworkServicesServiceBindings",
      "cloudasset.assets.listNetworkServicesTcpRoutes",
      "cloudasset.assets.listNetworkServicesTlsRoutes",
      "cloudasset.assets.listOSConfigOSPolicyAssignmentReports",
      "cloudasset.assets.listOSConfigOSPolicyAssignments",
      "cloudasset.assets.listOSConfigVulnerabilityReports",
      "cloudasset.assets.listOSInventories",
      "cloudasset.assets.listOrgPolicy",
      "cloudasset.assets.listPatchDeployments",
      "cloudasset.assets.listPubsubSnapshots",
      "cloudasset.assets.listPubsubSubscriptions",
      "cloudasset.assets.listPubsubTopics",
      "cloudasset.assets.listRedisInstances",
      "cloudasset.assets.listResource",
      "cloudasset.assets.listRunDomainMapping",
      "cloudasset.assets.listRunRevision",
      "cloudasset.assets.listRunService",
      "cloudasset.assets.listSecretManagerSecretVersions",
      "cloudasset.assets.listSecretManagerSecrets",
      "cloudasset.assets.listServiceDirectoryNamespaces",
      "cloudasset.assets.listServicePerimeter",
      "cloudasset.assets.listServiceconsumermanagementConsumerProperty",
      "cloudasset.assets.listServiceconsumermanagementConsumerQuotaLimits",
      "cloudasset.assets.listServiceconsumermanagementConsumers",
      "cloudasset.assets.listServiceconsumermanagementProducerOverrides",
      "cloudasset.assets.listServiceconsumermanagementTenancyUnits",
      "cloudasset.assets.listServiceconsumermanagementVisibility",
      "cloudasset.assets.listServicemanagementServices",
      "cloudasset.assets.listServiceusageAdminOverrides",
      "cloudasset.assets.listServiceusageConsumerOverrides",
      "cloudasset.assets.listServiceusageServices",
      "cloudasset.assets.listSpannerBackups",
      "cloudasset.assets.listSpannerDatabases",
      "cloudasset.assets.listSpannerInstances",
      "cloudasset.assets.listSpeakerIdPhrases",
      "cloudasset.assets.listSpeakerIdSettings",
      "cloudasset.assets.listSpeakerIdSpeakers",
      "cloudasset.assets.listSpeechCustomClasses",
      "cloudasset.assets.listSpeechPhraseSets",
      "cloudasset.assets.listSqladminBackupRuns",
      "cloudasset.assets.listSqladminInstances",
      "cloudasset.assets.listStorageBuckets",
      "cloudasset.assets.listTpuNodes",
      "cloudasset.assets.listVpcaccessConnector",
      "cloudasset.assets.queryAccessPolicy",
      "cloudasset.assets.queryIamPolicy",
      "cloudasset.assets.queryOSInventories",
      "cloudasset.assets.queryResource",
      "cloudasset.assets.searchAllIamPolicies",
      "cloudasset.assets.searchAllResources",
      "datacatalog.categories.fineGrainedGet",
      "datacatalog.entries.updateTag",
      "datacatalog.entryGroups.updateTag",
      "datacatalog.tagTemplates.create",
      "datacatalog.tagTemplates.get",
      "datacatalog.tagTemplates.getTag",
      "datacatalog.tagTemplates.use",
      "dlp.analyzeRiskTemplates.create",
      "dlp.analyzeRiskTemplates.delete",
      "dlp.analyzeRiskTemplates.get",
      "dlp.analyzeRiskTemplates.list",
      "dlp.analyzeRiskTemplates.update",
      "dlp.columnDataProfiles.get",
      "dlp.columnDataProfiles.list",
      "dlp.deidentifyTemplates.create",
      "dlp.deidentifyTemplates.delete",
      "dlp.deidentifyTemplates.get",
      "dlp.deidentifyTemplates.list",
      "dlp.deidentifyTemplates.update",
      "dlp.estimates.cancel",
      "dlp.estimates.create",
      "dlp.estimates.delete",
      "dlp.estimates.get",
      "dlp.estimates.list",
      "dlp.inspectFindings.list",
      "dlp.inspectTemplates.create",
      "dlp.inspectTemplates.delete",
      "dlp.inspectTemplates.get",
      "dlp.inspectTemplates.list",
      "dlp.inspectTemplates.update",
      "dlp.jobTriggers.create",
      "dlp.jobTriggers.delete",
      "dlp.jobTriggers.get",
      "dlp.jobTriggers.hybridInspect",
      "dlp.jobTriggers.list",
      "dlp.jobTriggers.update",
      "dlp.jobs.cancel",
      "dlp.jobs.create",
      "dlp.jobs.delete",
      "dlp.jobs.get",
      "dlp.jobs.hybridInspect",
      "dlp.jobs.list",
      "dlp.kms.encrypt",
      "dlp.locations.get",
      "dlp.locations.list",
      "dlp.projectDataProfiles.get",
      "dlp.projectDataProfiles.list",
      "dlp.storedInfoTypes.create",
      "dlp.storedInfoTypes.delete",
      "dlp.storedInfoTypes.get",
      "dlp.storedInfoTypes.list",
      "dlp.storedInfoTypes.update",
      "dlp.tableDataProfiles.get",
      "dlp.tableDataProfiles.list",
      "pubsub.topics.updateTag",
      "recommender.cloudAssetInsights.get",
      "recommender.cloudAssetInsights.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dlp.reader",
    "title": "DLP Reader",
    "description": "Read DLP entities, such as jobs and templates.",
    "includedPermissions": [
      "dlp.analyzeRiskTemplates.get",
      "dlp.analyzeRiskTemplates.list",
      "dlp.deidentifyTemplates.get",
      "dlp.deidentifyTemplates.list",
      "dlp.inspectFindings.list",
      "dlp.inspectTemplates.get",
      "dlp.inspectTemplates.list",
      "dlp.jobTriggers.get",
      "dlp.jobTriggers.list",
      "dlp.jobs.get",
      "dlp.jobs.list",
      "dlp.locations.get",
      "dlp.locations.list",
      "dlp.storedInfoTypes.get",
      "dlp.storedInfoTypes.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dlp.serviceAgent",
    "title": "DLP API Service Agent",
    "description": "Gives Cloud DLP service agent permissions for BigQuery, Cloud Storage, Datastore, Pub/Sub and Cloud KMS.",
    "includedPermissions": [
      "appengine.applications.get",
      "bigquery.config.get",
      "bigquery.dataPolicies.create",
      "bigquery.dataPolicies.delete",
      "bigquery.dataPolicies.get",
      "bigquery.dataPolicies.getIamPolicy",
      "bigquery.dataPolicies.list",
      "bigquery.dataPolicies.setIamPolicy",
      "bigquery.dataPolicies.update",
      "bigquery.datasets.create",
      "bigquery.datasets.createTagBinding",
      "bigquery.datasets.delete",
      "bigquery.datasets.deleteTagBinding",
      "bigquery.datasets.get",
      "bigquery.datasets.getIamPolicy",
      "bigquery.datasets.link",
      "bigquery.datasets.listEffectiveTags",
      "bigquery.datasets.listSharedDatasetUsage",
      "bigquery.datasets.listTagBindings",
      "bigquery.datasets.setIamPolicy",
      "bigquery.datasets.update",
      "bigquery.datasets.updateTag",
      "bigquery.jobs.create",
      "bigquery.jobs.get",
      "bigquery.jobs.update",
      "bigquery.models.create",
      "bigquery.models.delete",
      "bigquery.models.export",
      "bigquery.models.getData",
      "bigquery.models.getMetadata",
      "bigquery.models.list",
      "bigquery.models.updateData",
      "bigquery.models.updateMetadata",
      "bigquery.models.updateTag",
      "bigquery.readsessions.create",
      "bigquery.readsessions.getData",
      "bigquery.readsessions.update",
      "bigquery.routines.create",
      "bigquery.routines.delete",
      "bigquery.routines.get",
      "bigquery.routines.list",
      "bigquery.routines.update",
      "bigquery.routines.updateTag",
      "bigquery.rowAccessPolicies.create",
      "bigquery.rowAccessPolicies.delete",
      "bigquery.rowAccessPolicies.getIamPolicy",
      "bigquery.rowAccessPolicies.list",
      "bigquery.rowAccessPolicies.setIamPolicy",
      "bigquery.rowAccessPolicies.update",
      "bigquery.tables.create",
      "bigquery.tables.createIndex",
      "bigquery.tables.createSnapshot",
      "bigquery.tables.delete",
      "bigquery.tables.deleteIndex",
      "bigquery.tables.deleteSnapshot",
      "bigquery.tables.export",
      "bigquery.tables.get",
      "bigquery.tables.getData",
      "bigquery.tables.getIamPolicy",
      "bigquery.tables.list",
      "bigquery.tables.replicateData",
      "bigquery.tables.restoreSnapshot",
      "bigquery.tables.setCategory",
      "bigquery.tables.setIamPolicy",
      "bigquery.tables.update",
      "bigquery.tables.updateData",
      "bigquery.tables.updateTag",
      "cloudasset.assets.analyzeIamPolicy",
      "cloudasset.assets.exportResource",
      "cloudkms.cryptoKeyVersions.useToDecrypt",
      "cloudkms.locations.get",
      "cloudkms.locations.list",
      "datacatalog.categories.fineGrainedGet",
      "datacatalog.tagTemplates.create",
      "datacatalog.tagTemplates.delete",
      "datacatalog.tagTemplates.get",
      "datacatalog.tagTemplates.getIamPolicy",
      "datacatalog.tagTemplates.getTag",
      "datacatalog.tagTemplates.setIamPolicy",
      "datacatalog.tagTemplates.update",
      "datacatalog.tagTemplates.use",
      "datastore.databases.get",
      "datastore.databases.getMetadata",
      "datastore.databases.list",
      "datastore.entities.allocateIds",
      "datastore.entities.create",
      "datastore.entities.delete",
      "datastore.entities.get",
      "datastore.entities.list",
      "datastore.entities.update",
      "datastore.indexes.list",
      "datastore.namespaces.get",
      "datastore.namespaces.list",
      "datastore.statistics.get",
      "datastore.statistics.list",
      "dlp.analyzeRiskTemplates.get",
      "dlp.analyzeRiskTemplates.list",
      "dlp.deidentifyTemplates.get",
      "dlp.deidentifyTemplates.list",
      "dlp.inspectTemplates.get",
      "dlp.inspectTemplates.list",
      "dlp.jobs.cancel",
      "dlp.jobs.create",
      "dlp.jobs.delete",
      "dlp.jobs.get",
      "dlp.jobs.hybridInspect",
      "dlp.jobs.list",
      "dlp.kms.encrypt",
      "firebase.projects.get",
      "orgpolicy.policy.get",
      "pubsub.schemas.attach",
      "pubsub.schemas.commit",
      "pubsub.schemas.create",
      "pubsub.schemas.delete",
      "pubsub.schemas.get",
      "pubsub.schemas.getIamPolicy",
      "pubsub.schemas.list",
      "pubsub.schemas.listRevisions",
      "pubsub.schemas.rollback",
      "pubsub.schemas.setIamPolicy",
      "pubsub.schemas.validate",
      "pubsub.snapshots.create",
      "pubsub.snapshots.delete",
      "pubsub.snapshots.get",
      "pubsub.snapshots.getIamPolicy",
      "pubsub.snapshots.list",
      "pubsub.snapshots.seek",
      "pubsub.snapshots.setIamPolicy",
      "pubsub.snapshots.update",
      "pubsub.subscriptions.consume",
      "pubsub.subscriptions.create",
      "pubsub.subscriptions.delete",
      "pubsub.subscriptions.get",
      "pubsub.subscriptions.getIamPolicy",
      "pubsub.subscriptions.list",
      "pubsub.subscriptions.setIamPolicy",
      "pubsub.subscriptions.update",
      "pubsub.topics.attachSubscription",
      "pubsub.topics.create",
      "pubsub.topics.delete",
      "pubsub.topics.detachSubscription",
      "pubsub.topics.get",
      "pubsub.topics.getIamPolicy",
      "pubsub.topics.list",
      "pubsub.topics.publish",
      "pubsub.topics.setIamPolicy",
      "pubsub.topics.update",
      "pubsub.topics.updateTag",
      "recommender.iamPolicyInsights.get",
      "recommender.iamPolicyInsights.list",
      "recommender.iamPolicyInsights.update",
      "recommender.iamPolicyRecommendations.get",
      "recommender.iamPolicyRecommendations.list",
      "recommender.iamPolicyRecommendations.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "serviceusage.services.use",
      "storage.buckets.create",
      "storage.buckets.createTagBinding",
      "storage.buckets.delete",
      "storage.buckets.deleteTagBinding",
      "storage.buckets.get",
      "storage.buckets.getIamPolicy",
      "storage.buckets.getObjectInsights",
      "storage.buckets.list",
      "storage.buckets.listEffectiveTags",
      "storage.buckets.listTagBindings",
      "storage.buckets.setIamPolicy",
      "storage.buckets.update",
      "storage.multipartUploads.abort",
      "storage.multipartUploads.create",
      "storage.multipartUploads.list",
      "storage.multipartUploads.listParts",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.getIamPolicy",
      "storage.objects.list",
      "storage.objects.setIamPolicy",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dlp.storedInfoTypesEditor",
    "title": "DLP Stored InfoTypes Editor",
    "description": "Edit DLP stored info types.",
    "includedPermissions": [
      "dlp.storedInfoTypes.create",
      "dlp.storedInfoTypes.delete",
      "dlp.storedInfoTypes.get",
      "dlp.storedInfoTypes.list",
      "dlp.storedInfoTypes.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dlp.storedInfoTypesReader",
    "title": "DLP Stored InfoTypes Reader",
    "description": "Read DLP stored info types.",
    "includedPermissions": [
      "dlp.storedInfoTypes.get",
      "dlp.storedInfoTypes.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dlp.subscriptionsAdmin",
    "title": "DLP Subscription Admin",
    "description": "Manage DLP subscriptions.",
    "includedPermissions": [
      "dlp.subscriptions.cancel",
      "dlp.subscriptions.create",
      "dlp.subscriptions.get",
      "dlp.subscriptions.list",
      "dlp.subscriptions.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dlp.subscriptionsReader",
    "title": "DLP Subscription Viewer",
    "description": "View DLP subscriptions.",
    "includedPermissions": [
      "dlp.subscriptions.get",
      "dlp.subscriptions.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dlp.tableDataProfilesReader",
    "title": "DLP Table Data Profiles Reader",
    "description": "Read DLP table profiles.",
    "includedPermissions": [
      "dlp.tableDataProfiles.get",
      "dlp.tableDataProfiles.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dlp.user",
    "title": "DLP User",
    "description": "Inspect, Redact, and De-identify Content",
    "includedPermissions": [
      "dlp.kms.encrypt",
      "dlp.locations.get",
      "dlp.locations.list",
      "serviceusage.services.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dns.admin",
    "title": "DNS Administrator",
    "description": "Full read-write access to DNS resources.",
    "includedPermissions": [
      "compute.networks.get",
      "compute.networks.list",
      "dns.changes.create",
      "dns.changes.get",
      "dns.changes.list",
      "dns.dnsKeys.get",
      "dns.dnsKeys.list",
      "dns.gkeClusters.bindDNSResponsePolicy",
      "dns.gkeClusters.bindPrivateDNSZone",
      "dns.managedZoneOperations.get",
      "dns.managedZoneOperations.list",
      "dns.managedZones.create",
      "dns.managedZones.delete",
      "dns.managedZones.get",
      "dns.managedZones.getIamPolicy",
      "dns.managedZones.list",
      "dns.managedZones.update",
      "dns.networks.bindDNSResponsePolicy",
      "dns.networks.bindPrivateDNSPolicy",
      "dns.networks.bindPrivateDNSZone",
      "dns.networks.targetWithPeeringZone",
      "dns.networks.useHealthSignals",
      "dns.policies.create",
      "dns.policies.delete",
      "dns.policies.get",
      "dns.policies.getIamPolicy",
      "dns.policies.list",
      "dns.policies.update",
      "dns.projects.get",
      "dns.resourceRecordSets.create",
      "dns.resourceRecordSets.delete",
      "dns.resourceRecordSets.get",
      "dns.resourceRecordSets.list",
      "dns.resourceRecordSets.update",
      "dns.responsePolicies.create",
      "dns.responsePolicies.delete",
      "dns.responsePolicies.get",
      "dns.responsePolicies.list",
      "dns.responsePolicies.update",
      "dns.responsePolicyRules.create",
      "dns.responsePolicyRules.delete",
      "dns.responsePolicyRules.get",
      "dns.responsePolicyRules.list",
      "dns.responsePolicyRules.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dns.peer",
    "title": "DNS Peer",
    "description": "Access to target networks with DNS peering zones",
    "includedPermissions": [
      "dns.networks.targetWithPeeringZone"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/dns.reader",
    "title": "DNS Reader",
    "description": "Read-only access to DNS resources.",
    "includedPermissions": [
      "compute.networks.get",
      "dns.changes.get",
      "dns.changes.list",
      "dns.dnsKeys.get",
      "dns.dnsKeys.list",
      "dns.managedZoneOperations.get",
      "dns.managedZoneOperations.list",
      "dns.managedZones.get",
      "dns.managedZones.list",
      "dns.policies.get",
      "dns.policies.list",
      "dns.projects.get",
      "dns.resourceRecordSets.get",
      "dns.resourceRecordSets.list",
      "dns.responsePolicies.get",
      "dns.responsePolicies.list",
      "dns.responsePolicyRules.get",
      "dns.responsePolicyRules.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/documentai.admin",
    "title": "Document AI Administrator",
    "description": "Grants full access to all resources in Document AI",
    "includedPermissions": [
      "documentai.dataLabelingJobs.cancel",
      "documentai.dataLabelingJobs.create",
      "documentai.dataLabelingJobs.delete",
      "documentai.dataLabelingJobs.list",
      "documentai.dataLabelingJobs.update",
      "documentai.datasetSchemas.get",
      "documentai.datasetSchemas.update",
      "documentai.datasets.createDocuments",
      "documentai.datasets.deleteDocuments",
      "documentai.datasets.get",
      "documentai.datasets.getDocuments",
      "documentai.datasets.listDocuments",
      "documentai.datasets.update",
      "documentai.datasets.updateDocuments",
      "documentai.evaluationDocuments.get",
      "documentai.evaluations.create",
      "documentai.evaluations.get",
      "documentai.evaluations.list",
      "documentai.humanReviewConfigs.get",
      "documentai.humanReviewConfigs.review",
      "documentai.humanReviewConfigs.update",
      "documentai.labelerPools.create",
      "documentai.labelerPools.delete",
      "documentai.labelerPools.get",
      "documentai.labelerPools.list",
      "documentai.labelerPools.update",
      "documentai.locations.get",
      "documentai.locations.list",
      "documentai.operations.getLegacy",
      "documentai.processedDocumentsSets.get",
      "documentai.processedDocumentsSets.getDocuments",
      "documentai.processedDocumentsSets.listDocuments",
      "documentai.processorTypes.get",
      "documentai.processorTypes.list",
      "documentai.processorVersions.create",
      "documentai.processorVersions.delete",
      "documentai.processorVersions.get",
      "documentai.processorVersions.list",
      "documentai.processorVersions.processBatch",
      "documentai.processorVersions.processOnline",
      "documentai.processorVersions.update",
      "documentai.processors.create",
      "documentai.processors.delete",
      "documentai.processors.fetchHumanReviewDetails",
      "documentai.processors.get",
      "documentai.processors.list",
      "documentai.processors.processBatch",
      "documentai.processors.processOnline",
      "documentai.processors.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/documentai.apiUser",
    "title": "Document AI API User",
    "description": "Grants access to process documents in Document AI",
    "includedPermissions": [
      "documentai.humanReviewConfigs.review",
      "documentai.operations.getLegacy",
      "documentai.processorVersions.processBatch",
      "documentai.processorVersions.processOnline",
      "documentai.processors.processBatch",
      "documentai.processors.processOnline"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/documentai.editor",
    "title": "Document AI Editor",
    "description": "Grants access to use all resources in Document AI",
    "includedPermissions": [
      "documentai.dataLabelingJobs.cancel",
      "documentai.dataLabelingJobs.create",
      "documentai.dataLabelingJobs.delete",
      "documentai.dataLabelingJobs.list",
      "documentai.dataLabelingJobs.update",
      "documentai.datasetSchemas.get",
      "documentai.datasetSchemas.update",
      "documentai.datasets.createDocuments",
      "documentai.datasets.deleteDocuments",
      "documentai.datasets.get",
      "documentai.datasets.getDocuments",
      "documentai.datasets.listDocuments",
      "documentai.datasets.update",
      "documentai.datasets.updateDocuments",
      "documentai.evaluationDocuments.get",
      "documentai.evaluations.create",
      "documentai.evaluations.get",
      "documentai.evaluations.list",
      "documentai.humanReviewConfigs.get",
      "documentai.humanReviewConfigs.review",
      "documentai.humanReviewConfigs.update",
      "documentai.labelerPools.create",
      "documentai.labelerPools.delete",
      "documentai.labelerPools.get",
      "documentai.labelerPools.list",
      "documentai.labelerPools.update",
      "documentai.locations.get",
      "documentai.locations.list",
      "documentai.operations.getLegacy",
      "documentai.processedDocumentsSets.get",
      "documentai.processedDocumentsSets.getDocuments",
      "documentai.processedDocumentsSets.listDocuments",
      "documentai.processorTypes.get",
      "documentai.processorTypes.list",
      "documentai.processorVersions.create",
      "documentai.processorVersions.delete",
      "documentai.processorVersions.get",
      "documentai.processorVersions.list",
      "documentai.processorVersions.processBatch",
      "documentai.processorVersions.processOnline",
      "documentai.processorVersions.update",
      "documentai.processors.create",
      "documentai.processors.delete",
      "documentai.processors.fetchHumanReviewDetails",
      "documentai.processors.get",
      "documentai.processors.list",
      "documentai.processors.processBatch",
      "documentai.processors.processOnline",
      "documentai.processors.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/documentai.viewer",
    "title": "Document AI Viewer",
    "description": "Grants access to view all resources and process documents in Document AI",
    "includedPermissions": [
      "documentai.dataLabelingJobs.list",
      "documentai.datasetSchemas.get",
      "documentai.datasets.get",
      "documentai.datasets.getDocuments",
      "documentai.datasets.listDocuments",
      "documentai.evaluationDocuments.get",
      "documentai.evaluations.get",
      "documentai.evaluations.list",
      "documentai.humanReviewConfigs.get",
      "documentai.humanReviewConfigs.review",
      "documentai.labelerPools.get",
      "documentai.labelerPools.list",
      "documentai.locations.get",
      "documentai.locations.list",
      "documentai.operations.getLegacy",
      "documentai.processedDocumentsSets.get",
      "documentai.processedDocumentsSets.getDocuments",
      "documentai.processedDocumentsSets.listDocuments",
      "documentai.processorTypes.get",
      "documentai.processorTypes.list",
      "documentai.processorVersions.get",
      "documentai.processorVersions.list",
      "documentai.processorVersions.processBatch",
      "documentai.processorVersions.processOnline",
      "documentai.processors.fetchHumanReviewDetails",
      "documentai.processors.get",
      "documentai.processors.list",
      "documentai.processors.processBatch",
      "documentai.processors.processOnline",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/documentaicore.serviceAgent",
    "title": "DocumentAI Core Service Agent",
    "description": "Gives DocumentAI Core Service Account access to consumer resources.",
    "includedPermissions": [
      "automl.models.predict",
      "documentai.humanReviewConfigs.review",
      "storage.buckets.get",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/domains.admin",
    "title": "Cloud Domains Admin",
    "description": "Full access to Cloud Domains Registrations and related resources.",
    "includedPermissions": [
      "domains.locations.get",
      "domains.locations.list",
      "domains.operations.cancel",
      "domains.operations.get",
      "domains.operations.list",
      "domains.registrations.configureContact",
      "domains.registrations.configureDns",
      "domains.registrations.configureManagement",
      "domains.registrations.create",
      "domains.registrations.createTagBinding",
      "domains.registrations.delete",
      "domains.registrations.deleteTagBinding",
      "domains.registrations.get",
      "domains.registrations.getIamPolicy",
      "domains.registrations.list",
      "domains.registrations.listEffectiveTags",
      "domains.registrations.listTagBindings",
      "domains.registrations.setIamPolicy",
      "domains.registrations.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/domains.viewer",
    "title": "Cloud Domains Viewer",
    "description": "Read-only access to Cloud Domains Registrations and related resources.",
    "includedPermissions": [
      "domains.locations.get",
      "domains.locations.list",
      "domains.operations.get",
      "domains.operations.list",
      "domains.registrations.get",
      "domains.registrations.getIamPolicy",
      "domains.registrations.list",
      "domains.registrations.listEffectiveTags",
      "domains.registrations.listTagBindings",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/earthengine.admin",
    "title": "Earth Engine Resource Admin",
    "description": "Full access to all Earth Engine resource features",
    "includedPermissions": [
      "earthengine.assets.create",
      "earthengine.assets.delete",
      "earthengine.assets.get",
      "earthengine.assets.getIamPolicy",
      "earthengine.assets.list",
      "earthengine.assets.setIamPolicy",
      "earthengine.assets.update",
      "earthengine.computations.create",
      "earthengine.config.get",
      "earthengine.config.update",
      "earthengine.exports.create",
      "earthengine.featureviews.create",
      "earthengine.filmstripthumbnails.create",
      "earthengine.filmstripthumbnails.get",
      "earthengine.imports.create",
      "earthengine.maps.create",
      "earthengine.maps.get",
      "earthengine.operations.delete",
      "earthengine.operations.get",
      "earthengine.operations.list",
      "earthengine.operations.update",
      "earthengine.tables.create",
      "earthengine.tables.get",
      "earthengine.thumbnails.create",
      "earthengine.thumbnails.get",
      "earthengine.videothumbnails.create",
      "earthengine.videothumbnails.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/earthengine.appsPublisher",
    "title": "Earth Engine Apps Publisher",
    "description": "Publisher of Earth Engine Apps",
    "includedPermissions": [
      "iam.serviceAccounts.create",
      "iam.serviceAccounts.disable",
      "iam.serviceAccounts.enable",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.getIamPolicy",
      "iam.serviceAccounts.setIamPolicy",
      "resourcemanager.projects.get",
      "serviceusage.services.get"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/earthengine.viewer",
    "title": "Earth Engine Resource Viewer",
    "description": "Viewer of all Earth Engine resources",
    "includedPermissions": [
      "earthengine.assets.get",
      "earthengine.assets.getIamPolicy",
      "earthengine.assets.list",
      "earthengine.computations.create",
      "earthengine.config.get",
      "earthengine.filmstripthumbnails.get",
      "earthengine.maps.get",
      "earthengine.operations.get",
      "earthengine.operations.list",
      "earthengine.tables.get",
      "earthengine.thumbnails.get",
      "earthengine.videothumbnails.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/earthengine.writer",
    "title": "Earth Engine Resource Writer",
    "description": "Writer of all Earth Engine resources",
    "includedPermissions": [
      "earthengine.assets.create",
      "earthengine.assets.delete",
      "earthengine.assets.get",
      "earthengine.assets.getIamPolicy",
      "earthengine.assets.list",
      "earthengine.assets.update",
      "earthengine.computations.create",
      "earthengine.config.get",
      "earthengine.config.update",
      "earthengine.exports.create",
      "earthengine.featureviews.create",
      "earthengine.filmstripthumbnails.create",
      "earthengine.filmstripthumbnails.get",
      "earthengine.imports.create",
      "earthengine.maps.create",
      "earthengine.maps.get",
      "earthengine.operations.delete",
      "earthengine.operations.get",
      "earthengine.operations.list",
      "earthengine.operations.update",
      "earthengine.tables.create",
      "earthengine.tables.get",
      "earthengine.thumbnails.create",
      "earthengine.thumbnails.get",
      "earthengine.videothumbnails.create",
      "earthengine.videothumbnails.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/edgecontainer.admin",
    "title": "Edge Container Admin",
    "description": "Full access to Edge Container all resources.",
    "includedPermissions": [
      "edgecontainer.clusters.create",
      "edgecontainer.clusters.delete",
      "edgecontainer.clusters.generateAccessToken",
      "edgecontainer.clusters.get",
      "edgecontainer.clusters.getIamPolicy",
      "edgecontainer.clusters.list",
      "edgecontainer.clusters.setIamPolicy",
      "edgecontainer.clusters.update",
      "edgecontainer.locations.get",
      "edgecontainer.locations.list",
      "edgecontainer.machines.create",
      "edgecontainer.machines.delete",
      "edgecontainer.machines.get",
      "edgecontainer.machines.getIamPolicy",
      "edgecontainer.machines.list",
      "edgecontainer.machines.setIamPolicy",
      "edgecontainer.machines.update",
      "edgecontainer.machines.use",
      "edgecontainer.nodePools.create",
      "edgecontainer.nodePools.delete",
      "edgecontainer.nodePools.get",
      "edgecontainer.nodePools.getIamPolicy",
      "edgecontainer.nodePools.list",
      "edgecontainer.nodePools.setIamPolicy",
      "edgecontainer.nodePools.update",
      "edgecontainer.operations.cancel",
      "edgecontainer.operations.delete",
      "edgecontainer.operations.get",
      "edgecontainer.operations.list",
      "edgecontainer.vpnConnections.create",
      "edgecontainer.vpnConnections.delete",
      "edgecontainer.vpnConnections.get",
      "edgecontainer.vpnConnections.getIamPolicy",
      "edgecontainer.vpnConnections.list",
      "edgecontainer.vpnConnections.setIamPolicy",
      "edgecontainer.vpnConnections.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/edgecontainer.machineUser",
    "title": "Edge Container Machine User",
    "description": "Access to use Edge Container Machine resources.",
    "includedPermissions": [
      "edgecontainer.machines.get",
      "edgecontainer.machines.getIamPolicy",
      "edgecontainer.machines.list",
      "edgecontainer.machines.use",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/edgecontainer.serviceAgent",
    "title": "Edge Container Service Agent",
    "description": "Grants the Edge Container Service Account access to manage resources.",
    "includedPermissions": [
      "compute.externalVpnGateways.create",
      "compute.externalVpnGateways.delete",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.use",
      "compute.globalOperations.get",
      "compute.networks.get",
      "compute.networks.updatePolicy",
      "compute.regionOperations.get",
      "compute.routers.create",
      "compute.routers.delete",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routers.update",
      "compute.routers.use",
      "compute.vpnGateways.create",
      "compute.vpnGateways.delete",
      "compute.vpnGateways.get",
      "compute.vpnGateways.use",
      "compute.vpnTunnels.create",
      "compute.vpnTunnels.delete",
      "compute.vpnTunnels.get",
      "gkehub.memberships.create",
      "gkehub.memberships.delete",
      "gkehub.memberships.generateConnectManifest",
      "gkehub.memberships.get",
      "gkehub.memberships.update",
      "gkehub.operations.cancel",
      "gkehub.operations.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/edgecontainer.viewer",
    "title": "Edge Container Viewer",
    "description": "Read-only access to Edge Container all resources.",
    "includedPermissions": [
      "edgecontainer.clusters.generateAccessToken",
      "edgecontainer.clusters.get",
      "edgecontainer.clusters.getIamPolicy",
      "edgecontainer.clusters.list",
      "edgecontainer.locations.get",
      "edgecontainer.locations.list",
      "edgecontainer.machines.get",
      "edgecontainer.machines.getIamPolicy",
      "edgecontainer.machines.list",
      "edgecontainer.nodePools.get",
      "edgecontainer.nodePools.getIamPolicy",
      "edgecontainer.nodePools.list",
      "edgecontainer.operations.get",
      "edgecontainer.operations.list",
      "edgecontainer.vpnConnections.get",
      "edgecontainer.vpnConnections.getIamPolicy",
      "edgecontainer.vpnConnections.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/edgenetwork.admin",
    "title": "Edge Network Admin",
    "description": "Full access to Edge Network all resources.",
    "includedPermissions": [
      "edgenetwork.interconnectAttachments.create",
      "edgenetwork.interconnectAttachments.delete",
      "edgenetwork.interconnectAttachments.get",
      "edgenetwork.interconnectAttachments.getIamPolicy",
      "edgenetwork.interconnectAttachments.list",
      "edgenetwork.interconnectAttachments.setIamPolicy",
      "edgenetwork.interconnectAttachments.update",
      "edgenetwork.interconnects.get",
      "edgenetwork.interconnects.getDiagnostics",
      "edgenetwork.interconnects.getIamPolicy",
      "edgenetwork.interconnects.list",
      "edgenetwork.interconnects.setIamPolicy",
      "edgenetwork.locations.get",
      "edgenetwork.locations.list",
      "edgenetwork.networks.create",
      "edgenetwork.networks.delete",
      "edgenetwork.networks.get",
      "edgenetwork.networks.getIamPolicy",
      "edgenetwork.networks.getStatus",
      "edgenetwork.networks.list",
      "edgenetwork.networks.setIamPolicy",
      "edgenetwork.networks.update",
      "edgenetwork.operations.cancel",
      "edgenetwork.operations.delete",
      "edgenetwork.operations.get",
      "edgenetwork.operations.list",
      "edgenetwork.routers.create",
      "edgenetwork.routers.delete",
      "edgenetwork.routers.get",
      "edgenetwork.routers.getIamPolicy",
      "edgenetwork.routers.getRouterStatus",
      "edgenetwork.routers.list",
      "edgenetwork.routers.patch",
      "edgenetwork.routers.setIamPolicy",
      "edgenetwork.routers.update",
      "edgenetwork.routes.create",
      "edgenetwork.routes.delete",
      "edgenetwork.routes.get",
      "edgenetwork.routes.list",
      "edgenetwork.subnetworks.create",
      "edgenetwork.subnetworks.delete",
      "edgenetwork.subnetworks.get",
      "edgenetwork.subnetworks.getIamPolicy",
      "edgenetwork.subnetworks.getStatus",
      "edgenetwork.subnetworks.list",
      "edgenetwork.subnetworks.setIamPolicy",
      "edgenetwork.subnetworks.update",
      "edgenetwork.zones.get",
      "edgenetwork.zones.initialize",
      "edgenetwork.zones.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/edgenetwork.viewer",
    "title": "Edge Network Viewer",
    "description": "Read-only access to Edge Network all resources.",
    "includedPermissions": [
      "edgenetwork.interconnectAttachments.get",
      "edgenetwork.interconnectAttachments.getIamPolicy",
      "edgenetwork.interconnectAttachments.list",
      "edgenetwork.interconnects.get",
      "edgenetwork.interconnects.getDiagnostics",
      "edgenetwork.interconnects.getIamPolicy",
      "edgenetwork.interconnects.list",
      "edgenetwork.locations.get",
      "edgenetwork.locations.list",
      "edgenetwork.networks.get",
      "edgenetwork.networks.getIamPolicy",
      "edgenetwork.networks.getStatus",
      "edgenetwork.networks.list",
      "edgenetwork.operations.get",
      "edgenetwork.operations.list",
      "edgenetwork.routers.get",
      "edgenetwork.routers.getIamPolicy",
      "edgenetwork.routers.getRouterStatus",
      "edgenetwork.routers.list",
      "edgenetwork.routes.get",
      "edgenetwork.routes.list",
      "edgenetwork.subnetworks.get",
      "edgenetwork.subnetworks.getIamPolicy",
      "edgenetwork.subnetworks.getStatus",
      "edgenetwork.subnetworks.list",
      "edgenetwork.zones.get",
      "edgenetwork.zones.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/editor",
    "title": "Editor",
    "description": "View, create, update, and delete most Google Cloud resources. See the list of included permissions.",
    "includedPermissions": [
      "accessapproval.requests.get",
      "accessapproval.requests.list",
      "accessapproval.serviceAccounts.get",
      "accessapproval.settings.get",
      "accesscontextmanager.accessLevels.create",
      "accesscontextmanager.accessLevels.delete",
      "accesscontextmanager.accessLevels.get",
      "accesscontextmanager.accessLevels.list",
      "accesscontextmanager.accessLevels.replaceAll",
      "accesscontextmanager.accessLevels.update",
      "accesscontextmanager.accessPolicies.create",
      "accesscontextmanager.accessPolicies.delete",
      "accesscontextmanager.accessPolicies.get",
      "accesscontextmanager.accessPolicies.getIamPolicy",
      "accesscontextmanager.accessPolicies.list",
      "accesscontextmanager.accessPolicies.update",
      "accesscontextmanager.accessZones.create",
      "accesscontextmanager.accessZones.delete",
      "accesscontextmanager.accessZones.get",
      "accesscontextmanager.accessZones.list",
      "accesscontextmanager.accessZones.update",
      "accesscontextmanager.authorizedOrgsDescs.create",
      "accesscontextmanager.authorizedOrgsDescs.delete",
      "accesscontextmanager.authorizedOrgsDescs.get",
      "accesscontextmanager.authorizedOrgsDescs.list",
      "accesscontextmanager.authorizedOrgsDescs.update",
      "accesscontextmanager.gcpUserAccessBindings.create",
      "accesscontextmanager.gcpUserAccessBindings.delete",
      "accesscontextmanager.gcpUserAccessBindings.get",
      "accesscontextmanager.gcpUserAccessBindings.list",
      "accesscontextmanager.gcpUserAccessBindings.update",
      "accesscontextmanager.policies.create",
      "accesscontextmanager.policies.delete",
      "accesscontextmanager.policies.get",
      "accesscontextmanager.policies.getIamPolicy",
      "accesscontextmanager.policies.list",
      "accesscontextmanager.policies.update",
      "accesscontextmanager.servicePerimeters.commit",
      "accesscontextmanager.servicePerimeters.create",
      "accesscontextmanager.servicePerimeters.delete",
      "accesscontextmanager.servicePerimeters.get",
      "accesscontextmanager.servicePerimeters.list",
      "accesscontextmanager.servicePerimeters.replaceAll",
      "accesscontextmanager.servicePerimeters.update",
      "actions.agent.claimContentProvider",
      "actions.agent.get",
      "actions.agent.update",
      "actions.agentVersions.create",
      "actions.agentVersions.delete",
      "actions.agentVersions.deploy",
      "actions.agentVersions.get",
      "actions.agentVersions.list",
      "advisorynotifications.notifications.get",
      "advisorynotifications.notifications.list",
      "aiplatform.annotationSpecs.create",
      "aiplatform.annotationSpecs.delete",
      "aiplatform.annotationSpecs.get",
      "aiplatform.annotationSpecs.list",
      "aiplatform.annotationSpecs.update",
      "aiplatform.annotations.create",
      "aiplatform.annotations.delete",
      "aiplatform.annotations.get",
      "aiplatform.annotations.list",
      "aiplatform.annotations.update",
      "aiplatform.artifacts.create",
      "aiplatform.artifacts.delete",
      "aiplatform.artifacts.get",
      "aiplatform.artifacts.list",
      "aiplatform.artifacts.update",
      "aiplatform.batchPredictionJobs.cancel",
      "aiplatform.batchPredictionJobs.create",
      "aiplatform.batchPredictionJobs.delete",
      "aiplatform.batchPredictionJobs.get",
      "aiplatform.batchPredictionJobs.list",
      "aiplatform.contexts.addContextArtifactsAndExecutions",
      "aiplatform.contexts.addContextChildren",
      "aiplatform.contexts.create",
      "aiplatform.contexts.delete",
      "aiplatform.contexts.get",
      "aiplatform.contexts.list",
      "aiplatform.contexts.queryContextLineageSubgraph",
      "aiplatform.contexts.update",
      "aiplatform.customJobs.cancel",
      "aiplatform.customJobs.create",
      "aiplatform.customJobs.delete",
      "aiplatform.customJobs.get",
      "aiplatform.customJobs.list",
      "aiplatform.dataItems.create",
      "aiplatform.dataItems.delete",
      "aiplatform.dataItems.get",
      "aiplatform.dataItems.list",
      "aiplatform.dataItems.update",
      "aiplatform.dataLabelingJobs.cancel",
      "aiplatform.dataLabelingJobs.create",
      "aiplatform.dataLabelingJobs.delete",
      "aiplatform.dataLabelingJobs.get",
      "aiplatform.dataLabelingJobs.list",
      "aiplatform.datasets.create",
      "aiplatform.datasets.delete",
      "aiplatform.datasets.export",
      "aiplatform.datasets.get",
      "aiplatform.datasets.import",
      "aiplatform.datasets.list",
      "aiplatform.datasets.update",
      "aiplatform.deploymentResourcePools.create",
      "aiplatform.deploymentResourcePools.delete",
      "aiplatform.deploymentResourcePools.get",
      "aiplatform.deploymentResourcePools.list",
      "aiplatform.deploymentResourcePools.queryDeployedModels",
      "aiplatform.deploymentResourcePools.update",
      "aiplatform.edgeDeploymentJobs.create",
      "aiplatform.edgeDeploymentJobs.delete",
      "aiplatform.edgeDeploymentJobs.get",
      "aiplatform.edgeDeploymentJobs.list",
      "aiplatform.edgeDeviceDebugInfo.get",
      "aiplatform.edgeDevices.create",
      "aiplatform.edgeDevices.delete",
      "aiplatform.edgeDevices.get",
      "aiplatform.edgeDevices.list",
      "aiplatform.edgeDevices.update",
      "aiplatform.endpoints.create",
      "aiplatform.endpoints.delete",
      "aiplatform.endpoints.deploy",
      "aiplatform.endpoints.explain",
      "aiplatform.endpoints.get",
      "aiplatform.endpoints.list",
      "aiplatform.endpoints.predict",
      "aiplatform.endpoints.undeploy",
      "aiplatform.endpoints.update",
      "aiplatform.entityTypes.create",
      "aiplatform.entityTypes.delete",
      "aiplatform.entityTypes.deleteFeatureValues",
      "aiplatform.entityTypes.exportFeatureValues",
      "aiplatform.entityTypes.get",
      "aiplatform.entityTypes.getIamPolicy",
      "aiplatform.entityTypes.importFeatureValues",
      "aiplatform.entityTypes.list",
      "aiplatform.entityTypes.readFeatureValues",
      "aiplatform.entityTypes.streamingReadFeatureValues",
      "aiplatform.entityTypes.update",
      "aiplatform.entityTypes.writeFeatureValues",
      "aiplatform.executions.addExecutionEvents",
      "aiplatform.executions.create",
      "aiplatform.executions.delete",
      "aiplatform.executions.get",
      "aiplatform.executions.list",
      "aiplatform.executions.queryExecutionInputsAndOutputs",
      "aiplatform.executions.update",
      "aiplatform.featureOnlineStores.create",
      "aiplatform.featureOnlineStores.delete",
      "aiplatform.featureOnlineStores.get",
      "aiplatform.featureOnlineStores.list",
      "aiplatform.featureOnlineStores.update",
      "aiplatform.featureViewSyncs.get",
      "aiplatform.featureViewSyncs.list",
      "aiplatform.featureViews.create",
      "aiplatform.featureViews.delete",
      "aiplatform.featureViews.fetchFeatureValues",
      "aiplatform.featureViews.get",
      "aiplatform.featureViews.list",
      "aiplatform.featureViews.searchNearestEntities",
      "aiplatform.featureViews.sync",
      "aiplatform.featureViews.update",
      "aiplatform.features.create",
      "aiplatform.features.delete",
      "aiplatform.features.get",
      "aiplatform.features.list",
      "aiplatform.features.update",
      "aiplatform.featurestores.batchReadFeatureValues",
      "aiplatform.featurestores.create",
      "aiplatform.featurestores.delete",
      "aiplatform.featurestores.exportFeatures",
      "aiplatform.featurestores.get",
      "aiplatform.featurestores.getIamPolicy",
      "aiplatform.featurestores.importFeatures",
      "aiplatform.featurestores.list",
      "aiplatform.featurestores.readFeatures",
      "aiplatform.featurestores.update",
      "aiplatform.featurestores.writeFeatures",
      "aiplatform.humanInTheLoops.cancel",
      "aiplatform.humanInTheLoops.create",
      "aiplatform.humanInTheLoops.delete",
      "aiplatform.humanInTheLoops.get",
      "aiplatform.humanInTheLoops.list",
      "aiplatform.humanInTheLoops.queryAnnotationStats",
      "aiplatform.humanInTheLoops.send",
      "aiplatform.humanInTheLoops.update",
      "aiplatform.hyperparameterTuningJobs.cancel",
      "aiplatform.hyperparameterTuningJobs.create",
      "aiplatform.hyperparameterTuningJobs.delete",
      "aiplatform.hyperparameterTuningJobs.get",
      "aiplatform.hyperparameterTuningJobs.list",
      "aiplatform.indexEndpoints.create",
      "aiplatform.indexEndpoints.delete",
      "aiplatform.indexEndpoints.deploy",
      "aiplatform.indexEndpoints.get",
      "aiplatform.indexEndpoints.list",
      "aiplatform.indexEndpoints.queryVectors",
      "aiplatform.indexEndpoints.undeploy",
      "aiplatform.indexEndpoints.update",
      "aiplatform.indexes.create",
      "aiplatform.indexes.delete",
      "aiplatform.indexes.get",
      "aiplatform.indexes.list",
      "aiplatform.indexes.update",
      "aiplatform.locations.get",
      "aiplatform.locations.list",
      "aiplatform.metadataSchemas.create",
      "aiplatform.metadataSchemas.delete",
      "aiplatform.metadataSchemas.get",
      "aiplatform.metadataSchemas.list",
      "aiplatform.metadataStores.create",
      "aiplatform.metadataStores.delete",
      "aiplatform.metadataStores.get",
      "aiplatform.metadataStores.list",
      "aiplatform.migratableResources.migrate",
      "aiplatform.migratableResources.search",
      "aiplatform.modelDeploymentMonitoringJobs.create",
      "aiplatform.modelDeploymentMonitoringJobs.delete",
      "aiplatform.modelDeploymentMonitoringJobs.get",
      "aiplatform.modelDeploymentMonitoringJobs.list",
      "aiplatform.modelDeploymentMonitoringJobs.pause",
      "aiplatform.modelDeploymentMonitoringJobs.resume",
      "aiplatform.modelDeploymentMonitoringJobs.searchStatsAnomalies",
      "aiplatform.modelDeploymentMonitoringJobs.update",
      "aiplatform.modelEvaluationSlices.get",
      "aiplatform.modelEvaluationSlices.import",
      "aiplatform.modelEvaluationSlices.list",
      "aiplatform.modelEvaluations.exportEvaluatedDataItems",
      "aiplatform.modelEvaluations.get",
      "aiplatform.modelEvaluations.import",
      "aiplatform.modelEvaluations.list",
      "aiplatform.models.delete",
      "aiplatform.models.export",
      "aiplatform.models.get",
      "aiplatform.models.list",
      "aiplatform.models.update",
      "aiplatform.models.upload",
      "aiplatform.nasJobs.cancel",
      "aiplatform.nasJobs.create",
      "aiplatform.nasJobs.delete",
      "aiplatform.nasJobs.get",
      "aiplatform.nasJobs.list",
      "aiplatform.nasTrialDetails.get",
      "aiplatform.nasTrialDetails.list",
      "aiplatform.operations.list",
      "aiplatform.persistentResources.create",
      "aiplatform.persistentResources.delete",
      "aiplatform.persistentResources.get",
      "aiplatform.persistentResources.list",
      "aiplatform.pipelineJobs.cancel",
      "aiplatform.pipelineJobs.create",
      "aiplatform.pipelineJobs.delete",
      "aiplatform.pipelineJobs.get",
      "aiplatform.pipelineJobs.list",
      "aiplatform.schedules.create",
      "aiplatform.schedules.delete",
      "aiplatform.schedules.get",
      "aiplatform.schedules.list",
      "aiplatform.schedules.update",
      "aiplatform.specialistPools.create",
      "aiplatform.specialistPools.delete",
      "aiplatform.specialistPools.get",
      "aiplatform.specialistPools.list",
      "aiplatform.specialistPools.update",
      "aiplatform.studies.create",
      "aiplatform.studies.delete",
      "aiplatform.studies.get",
      "aiplatform.studies.list",
      "aiplatform.studies.update",
      "aiplatform.tensorboardExperiments.create",
      "aiplatform.tensorboardExperiments.delete",
      "aiplatform.tensorboardExperiments.get",
      "aiplatform.tensorboardExperiments.list",
      "aiplatform.tensorboardExperiments.update",
      "aiplatform.tensorboardExperiments.write",
      "aiplatform.tensorboardRuns.batchCreate",
      "aiplatform.tensorboardRuns.create",
      "aiplatform.tensorboardRuns.delete",
      "aiplatform.tensorboardRuns.get",
      "aiplatform.tensorboardRuns.list",
      "aiplatform.tensorboardRuns.update",
      "aiplatform.tensorboardRuns.write",
      "aiplatform.tensorboardTimeSeries.batchCreate",
      "aiplatform.tensorboardTimeSeries.batchRead",
      "aiplatform.tensorboardTimeSeries.create",
      "aiplatform.tensorboardTimeSeries.delete",
      "aiplatform.tensorboardTimeSeries.get",
      "aiplatform.tensorboardTimeSeries.list",
      "aiplatform.tensorboardTimeSeries.read",
      "aiplatform.tensorboardTimeSeries.update",
      "aiplatform.tensorboards.create",
      "aiplatform.tensorboards.delete",
      "aiplatform.tensorboards.get",
      "aiplatform.tensorboards.list",
      "aiplatform.tensorboards.update",
      "aiplatform.trainingPipelines.cancel",
      "aiplatform.trainingPipelines.create",
      "aiplatform.trainingPipelines.delete",
      "aiplatform.trainingPipelines.get",
      "aiplatform.trainingPipelines.list",
      "aiplatform.trials.create",
      "aiplatform.trials.delete",
      "aiplatform.trials.get",
      "aiplatform.trials.list",
      "aiplatform.trials.update",
      "alloydb.backups.create",
      "alloydb.backups.delete",
      "alloydb.backups.get",
      "alloydb.backups.list",
      "alloydb.backups.update",
      "alloydb.clusters.create",
      "alloydb.clusters.delete",
      "alloydb.clusters.generateClientCertificate",
      "alloydb.clusters.get",
      "alloydb.clusters.list",
      "alloydb.clusters.update",
      "alloydb.instances.connect",
      "alloydb.instances.create",
      "alloydb.instances.delete",
      "alloydb.instances.failover",
      "alloydb.instances.get",
      "alloydb.instances.injectFault",
      "alloydb.instances.list",
      "alloydb.instances.restart",
      "alloydb.instances.update",
      "alloydb.locations.get",
      "alloydb.locations.list",
      "alloydb.operations.cancel",
      "alloydb.operations.delete",
      "alloydb.operations.get",
      "alloydb.operations.list",
      "alloydb.supportedDatabaseFlags.get",
      "alloydb.supportedDatabaseFlags.list",
      "alloydb.users.create",
      "alloydb.users.delete",
      "alloydb.users.get",
      "alloydb.users.list",
      "alloydb.users.login",
      "alloydb.users.update",
      "analyticshub.dataExchanges.create",
      "analyticshub.dataExchanges.delete",
      "analyticshub.dataExchanges.get",
      "analyticshub.dataExchanges.getIamPolicy",
      "analyticshub.dataExchanges.list",
      "analyticshub.dataExchanges.update",
      "analyticshub.listings.create",
      "analyticshub.listings.delete",
      "analyticshub.listings.get",
      "analyticshub.listings.getIamPolicy",
      "analyticshub.listings.list",
      "analyticshub.listings.update",
      "analyticshub.subscriptions.create",
      "analyticshub.subscriptions.delete",
      "analyticshub.subscriptions.get",
      "analyticshub.subscriptions.list",
      "analyticshub.subscriptions.update",
      "androidmanagement.enterprises.manage",
      "apigateway.apiconfigs.create",
      "apigateway.apiconfigs.delete",
      "apigateway.apiconfigs.get",
      "apigateway.apiconfigs.getIamPolicy",
      "apigateway.apiconfigs.list",
      "apigateway.apiconfigs.update",
      "apigateway.apis.create",
      "apigateway.apis.delete",
      "apigateway.apis.get",
      "apigateway.apis.getIamPolicy",
      "apigateway.apis.list",
      "apigateway.apis.update",
      "apigateway.gateways.create",
      "apigateway.gateways.delete",
      "apigateway.gateways.get",
      "apigateway.gateways.getIamPolicy",
      "apigateway.gateways.list",
      "apigateway.gateways.update",
      "apigateway.locations.get",
      "apigateway.locations.list",
      "apigateway.operations.cancel",
      "apigateway.operations.delete",
      "apigateway.operations.get",
      "apigateway.operations.list",
      "apigee.apiproductattributes.createOrUpdateAll",
      "apigee.apiproductattributes.delete",
      "apigee.apiproductattributes.get",
      "apigee.apiproductattributes.list",
      "apigee.apiproductattributes.update",
      "apigee.apiproducts.create",
      "apigee.apiproducts.delete",
      "apigee.apiproducts.get",
      "apigee.apiproducts.list",
      "apigee.apiproducts.update",
      "apigee.appgroupapps.create",
      "apigee.appgroupapps.delete",
      "apigee.appgroupapps.get",
      "apigee.appgroupapps.list",
      "apigee.appgroupapps.manage",
      "apigee.appgroups.create",
      "apigee.appgroups.delete",
      "apigee.appgroups.get",
      "apigee.appgroups.list",
      "apigee.appgroups.update",
      "apigee.appkeys.create",
      "apigee.appkeys.delete",
      "apigee.appkeys.get",
      "apigee.appkeys.manage",
      "apigee.apps.get",
      "apigee.apps.list",
      "apigee.archivedeployments.create",
      "apigee.archivedeployments.delete",
      "apigee.archivedeployments.download",
      "apigee.archivedeployments.get",
      "apigee.archivedeployments.list",
      "apigee.archivedeployments.update",
      "apigee.archivedeployments.upload",
      "apigee.caches.delete",
      "apigee.caches.list",
      "apigee.canaryevaluations.create",
      "apigee.canaryevaluations.get",
      "apigee.datacollectors.create",
      "apigee.datacollectors.delete",
      "apigee.datacollectors.get",
      "apigee.datacollectors.list",
      "apigee.datacollectors.update",
      "apigee.datalocation.get",
      "apigee.datastores.create",
      "apigee.datastores.delete",
      "apigee.datastores.get",
      "apigee.datastores.list",
      "apigee.datastores.update",
      "apigee.deployments.create",
      "apigee.deployments.delete",
      "apigee.deployments.get",
      "apigee.deployments.list",
      "apigee.deployments.update",
      "apigee.developerappattributes.createOrUpdateAll",
      "apigee.developerappattributes.delete",
      "apigee.developerappattributes.get",
      "apigee.developerappattributes.list",
      "apigee.developerappattributes.update",
      "apigee.developerapps.create",
      "apigee.developerapps.delete",
      "apigee.developerapps.get",
      "apigee.developerapps.list",
      "apigee.developerapps.manage",
      "apigee.developerattributes.createOrUpdateAll",
      "apigee.developerattributes.delete",
      "apigee.developerattributes.get",
      "apigee.developerattributes.list",
      "apigee.developerattributes.update",
      "apigee.developerbalances.adjust",
      "apigee.developerbalances.get",
      "apigee.developerbalances.update",
      "apigee.developermonetizationconfigs.get",
      "apigee.developermonetizationconfigs.update",
      "apigee.developers.create",
      "apigee.developers.delete",
      "apigee.developers.get",
      "apigee.developers.list",
      "apigee.developers.update",
      "apigee.developersubscriptions.create",
      "apigee.developersubscriptions.get",
      "apigee.developersubscriptions.list",
      "apigee.developersubscriptions.update",
      "apigee.endpointattachments.create",
      "apigee.endpointattachments.delete",
      "apigee.endpointattachments.get",
      "apigee.endpointattachments.list",
      "apigee.entitlements.get",
      "apigee.envgroupattachments.create",
      "apigee.envgroupattachments.delete",
      "apigee.envgroupattachments.get",
      "apigee.envgroupattachments.list",
      "apigee.envgroups.create",
      "apigee.envgroups.delete",
      "apigee.envgroups.get",
      "apigee.envgroups.list",
      "apigee.envgroups.update",
      "apigee.environments.create",
      "apigee.environments.delete",
      "apigee.environments.get",
      "apigee.environments.getDataLocation",
      "apigee.environments.getIamPolicy",
      "apigee.environments.getStats",
      "apigee.environments.list",
      "apigee.environments.manageRuntime",
      "apigee.environments.update",
      "apigee.exports.create",
      "apigee.exports.get",
      "apigee.exports.list",
      "apigee.flowhooks.attachSharedFlow",
      "apigee.flowhooks.detachSharedFlow",
      "apigee.flowhooks.getSharedFlow",
      "apigee.flowhooks.list",
      "apigee.hostqueries.create",
      "apigee.hostqueries.get",
      "apigee.hostqueries.list",
      "apigee.hostsecurityreports.create",
      "apigee.hostsecurityreports.get",
      "apigee.hostsecurityreports.list",
      "apigee.hoststats.get",
      "apigee.ingressconfigs.get",
      "apigee.instanceattachments.create",
      "apigee.instanceattachments.delete",
      "apigee.instanceattachments.get",
      "apigee.instanceattachments.list",
      "apigee.instances.create",
      "apigee.instances.delete",
      "apigee.instances.get",
      "apigee.instances.list",
      "apigee.instances.reportStatus",
      "apigee.instances.update",
      "apigee.keystorealiases.create",
      "apigee.keystorealiases.delete",
      "apigee.keystorealiases.exportCertificate",
      "apigee.keystorealiases.generateCSR",
      "apigee.keystorealiases.get",
      "apigee.keystorealiases.list",
      "apigee.keystorealiases.update",
      "apigee.keystores.create",
      "apigee.keystores.delete",
      "apigee.keystores.export",
      "apigee.keystores.get",
      "apigee.keystores.list",
      "apigee.keyvaluemapentries.create",
      "apigee.keyvaluemapentries.delete",
      "apigee.keyvaluemapentries.get",
      "apigee.keyvaluemapentries.list",
      "apigee.keyvaluemaps.create",
      "apigee.keyvaluemaps.delete",
      "apigee.keyvaluemaps.list",
      "apigee.maskconfigs.get",
      "apigee.maskconfigs.update",
      "apigee.nataddresses.activate",
      "apigee.nataddresses.create",
      "apigee.nataddresses.delete",
      "apigee.nataddresses.get",
      "apigee.nataddresses.list",
      "apigee.operations.get",
      "apigee.operations.list",
      "apigee.organizations.create",
      "apigee.organizations.delete",
      "apigee.organizations.get",
      "apigee.organizations.list",
      "apigee.organizations.update",
      "apigee.portals.create",
      "apigee.portals.delete",
      "apigee.portals.get",
      "apigee.portals.list",
      "apigee.portals.update",
      "apigee.projectorganizations.get",
      "apigee.projects.migrate",
      "apigee.projects.previewMigration",
      "apigee.projects.update",
      "apigee.proxies.create",
      "apigee.proxies.delete",
      "apigee.proxies.get",
      "apigee.proxies.list",
      "apigee.proxies.update",
      "apigee.proxyrevisions.delete",
      "apigee.proxyrevisions.deploy",
      "apigee.proxyrevisions.get",
      "apigee.proxyrevisions.list",
      "apigee.proxyrevisions.undeploy",
      "apigee.proxyrevisions.update",
      "apigee.queries.create",
      "apigee.queries.get",
      "apigee.queries.list",
      "apigee.rateplans.create",
      "apigee.rateplans.delete",
      "apigee.rateplans.get",
      "apigee.rateplans.list",
      "apigee.rateplans.update",
      "apigee.references.create",
      "apigee.references.delete",
      "apigee.references.get",
      "apigee.references.list",
      "apigee.references.update",
      "apigee.reports.create",
      "apigee.reports.delete",
      "apigee.reports.get",
      "apigee.reports.list",
      "apigee.reports.update",
      "apigee.resourcefiles.create",
      "apigee.resourcefiles.delete",
      "apigee.resourcefiles.get",
      "apigee.resourcefiles.list",
      "apigee.resourcefiles.update",
      "apigee.runtimeconfigs.get",
      "apigee.securityActions.create",
      "apigee.securityActions.get",
      "apigee.securityActions.list",
      "apigee.securityActions.update",
      "apigee.securityActionsConfig.get",
      "apigee.securityActionsConfig.update",
      "apigee.securityIncidents.get",
      "apigee.securityIncidents.list",
      "apigee.securityProfileEnvironments.computeScore",
      "apigee.securityProfileEnvironments.create",
      "apigee.securityProfileEnvironments.delete",
      "apigee.securityProfiles.create",
      "apigee.securityProfiles.delete",
      "apigee.securityProfiles.get",
      "apigee.securityProfiles.list",
      "apigee.securityProfiles.update",
      "apigee.securityStats.queryTabularStats",
      "apigee.securityStats.queryTimeSeriesStats",
      "apigee.securityreports.create",
      "apigee.securityreports.get",
      "apigee.securityreports.list",
      "apigee.setupcontexts.get",
      "apigee.setupcontexts.update",
      "apigee.sharedflowrevisions.delete",
      "apigee.sharedflowrevisions.deploy",
      "apigee.sharedflowrevisions.get",
      "apigee.sharedflowrevisions.list",
      "apigee.sharedflowrevisions.undeploy",
      "apigee.sharedflowrevisions.update",
      "apigee.sharedflows.create",
      "apigee.sharedflows.delete",
      "apigee.sharedflows.get",
      "apigee.sharedflows.list",
      "apigee.targetservers.create",
      "apigee.targetservers.delete",
      "apigee.targetservers.get",
      "apigee.targetservers.list",
      "apigee.targetservers.update",
      "apigee.traceconfig.get",
      "apigee.traceconfig.update",
      "apigee.traceconfigoverrides.create",
      "apigee.traceconfigoverrides.delete",
      "apigee.traceconfigoverrides.get",
      "apigee.traceconfigoverrides.list",
      "apigee.traceconfigoverrides.update",
      "apigee.tracesessions.create",
      "apigee.tracesessions.delete",
      "apigee.tracesessions.get",
      "apigee.tracesessions.list",
      "apigeeconnect.connections.list",
      "apigeeconnect.endpoints.connect",
      "apigeeregistry.apis.create",
      "apigeeregistry.apis.delete",
      "apigeeregistry.apis.get",
      "apigeeregistry.apis.getIamPolicy",
      "apigeeregistry.apis.list",
      "apigeeregistry.apis.update",
      "apigeeregistry.artifacts.create",
      "apigeeregistry.artifacts.delete",
      "apigeeregistry.artifacts.get",
      "apigeeregistry.artifacts.getIamPolicy",
      "apigeeregistry.artifacts.list",
      "apigeeregistry.artifacts.update",
      "apigeeregistry.deployments.create",
      "apigeeregistry.deployments.delete",
      "apigeeregistry.deployments.get",
      "apigeeregistry.deployments.list",
      "apigeeregistry.deployments.update",
      "apigeeregistry.instances.get",
      "apigeeregistry.instances.update",
      "apigeeregistry.locations.get",
      "apigeeregistry.locations.list",
      "apigeeregistry.operations.cancel",
      "apigeeregistry.operations.delete",
      "apigeeregistry.operations.get",
      "apigeeregistry.operations.list",
      "apigeeregistry.specs.create",
      "apigeeregistry.specs.delete",
      "apigeeregistry.specs.get",
      "apigeeregistry.specs.getIamPolicy",
      "apigeeregistry.specs.list",
      "apigeeregistry.specs.update",
      "apigeeregistry.versions.create",
      "apigeeregistry.versions.delete",
      "apigeeregistry.versions.get",
      "apigeeregistry.versions.getIamPolicy",
      "apigeeregistry.versions.list",
      "apigeeregistry.versions.update",
      "apikeys.keys.create",
      "apikeys.keys.delete",
      "apikeys.keys.get",
      "apikeys.keys.getKeyString",
      "apikeys.keys.list",
      "apikeys.keys.lookup",
      "apikeys.keys.undelete",
      "apikeys.keys.update",
      "appengine.applications.get",
      "appengine.applications.update",
      "appengine.instances.delete",
      "appengine.instances.enableDebug",
      "appengine.instances.get",
      "appengine.instances.list",
      "appengine.memcache.addKey",
      "appengine.memcache.flush",
      "appengine.memcache.get",
      "appengine.memcache.getKey",
      "appengine.memcache.list",
      "appengine.memcache.update",
      "appengine.operations.get",
      "appengine.operations.list",
      "appengine.runtimes.actAsAdmin",
      "appengine.services.delete",
      "appengine.services.get",
      "appengine.services.list",
      "appengine.services.update",
      "appengine.versions.create",
      "appengine.versions.delete",
      "appengine.versions.get",
      "appengine.versions.list",
      "appengine.versions.update",
      "applianceactivation.rttCommands.approve",
      "applianceactivation.rttCommands.create",
      "applianceactivation.rttCommands.get",
      "applianceactivation.rttCommands.list",
      "applianceactivation.rttCommands.sendResult",
      "artifactregistry.aptartifacts.create",
      "artifactregistry.dockerimages.get",
      "artifactregistry.dockerimages.list",
      "artifactregistry.files.get",
      "artifactregistry.files.list",
      "artifactregistry.kfpartifacts.create",
      "artifactregistry.locations.get",
      "artifactregistry.locations.list",
      "artifactregistry.mavenartifacts.get",
      "artifactregistry.mavenartifacts.list",
      "artifactregistry.npmpackages.get",
      "artifactregistry.npmpackages.list",
      "artifactregistry.packages.delete",
      "artifactregistry.packages.get",
      "artifactregistry.packages.list",
      "artifactregistry.projectsettings.get",
      "artifactregistry.projectsettings.update",
      "artifactregistry.pythonpackages.get",
      "artifactregistry.pythonpackages.list",
      "artifactregistry.repositories.create",
      "artifactregistry.repositories.createOnPush",
      "artifactregistry.repositories.delete",
      "artifactregistry.repositories.deleteArtifacts",
      "artifactregistry.repositories.downloadArtifacts",
      "artifactregistry.repositories.get",
      "artifactregistry.repositories.getIamPolicy",
      "artifactregistry.repositories.list",
      "artifactregistry.repositories.listEffectiveTags",
      "artifactregistry.repositories.listTagBindings",
      "artifactregistry.repositories.readViaVirtualRepository",
      "artifactregistry.repositories.update",
      "artifactregistry.repositories.uploadArtifacts",
      "artifactregistry.tags.create",
      "artifactregistry.tags.delete",
      "artifactregistry.tags.get",
      "artifactregistry.tags.list",
      "artifactregistry.tags.update",
      "artifactregistry.versions.delete",
      "artifactregistry.versions.get",
      "artifactregistry.versions.list",
      "artifactregistry.yumartifacts.create",
      "assuredworkloads.operations.get",
      "assuredworkloads.operations.list",
      "assuredworkloads.violations.get",
      "assuredworkloads.violations.list",
      "assuredworkloads.violations.update",
      "assuredworkloads.workload.delete",
      "assuredworkloads.workload.get",
      "assuredworkloads.workload.list",
      "assuredworkloads.workload.update",
      "automl.annotationSpecs.create",
      "automl.annotationSpecs.delete",
      "automl.annotationSpecs.get",
      "automl.annotationSpecs.list",
      "automl.annotationSpecs.update",
      "automl.annotations.approve",
      "automl.annotations.create",
      "automl.annotations.list",
      "automl.annotations.manipulate",
      "automl.annotations.reject",
      "automl.columnSpecs.get",
      "automl.columnSpecs.list",
      "automl.columnSpecs.update",
      "automl.datasets.create",
      "automl.datasets.delete",
      "automl.datasets.export",
      "automl.datasets.get",
      "automl.datasets.getIamPolicy",
      "automl.datasets.import",
      "automl.datasets.list",
      "automl.datasets.update",
      "automl.examples.delete",
      "automl.examples.get",
      "automl.examples.list",
      "automl.examples.update",
      "automl.files.delete",
      "automl.files.list",
      "automl.humanAnnotationTasks.create",
      "automl.humanAnnotationTasks.delete",
      "automl.humanAnnotationTasks.get",
      "automl.humanAnnotationTasks.list",
      "automl.locations.get",
      "automl.locations.getIamPolicy",
      "automl.locations.list",
      "automl.modelEvaluations.create",
      "automl.modelEvaluations.get",
      "automl.modelEvaluations.list",
      "automl.models.create",
      "automl.models.delete",
      "automl.models.deploy",
      "automl.models.export",
      "automl.models.get",
      "automl.models.getIamPolicy",
      "automl.models.list",
      "automl.models.predict",
      "automl.models.undeploy",
      "automl.operations.cancel",
      "automl.operations.delete",
      "automl.operations.get",
      "automl.operations.list",
      "automl.tableSpecs.get",
      "automl.tableSpecs.list",
      "automl.tableSpecs.update",
      "automlrecommendations.apiKeys.create",
      "automlrecommendations.apiKeys.delete",
      "automlrecommendations.apiKeys.list",
      "automlrecommendations.catalogItems.create",
      "automlrecommendations.catalogItems.delete",
      "automlrecommendations.catalogItems.get",
      "automlrecommendations.catalogItems.list",
      "automlrecommendations.catalogItems.update",
      "automlrecommendations.catalogs.getStats",
      "automlrecommendations.catalogs.list",
      "automlrecommendations.catalogs.update",
      "automlrecommendations.eventStores.getStats",
      "automlrecommendations.eventStores.list",
      "automlrecommendations.events.create",
      "automlrecommendations.events.get",
      "automlrecommendations.events.list",
      "automlrecommendations.placements.create",
      "automlrecommendations.placements.getStats",
      "automlrecommendations.placements.list",
      "automlrecommendations.recommendations.create",
      "automlrecommendations.recommendations.delete",
      "automlrecommendations.recommendations.list",
      "automlrecommendations.recommendations.pause",
      "automlrecommendations.recommendations.resume",
      "automlrecommendations.recommendations.update",
      "autoscaling.sites.getIamPolicy",
      "autoscaling.sites.readRecommendations",
      "autoscaling.sites.writeMetrics",
      "autoscaling.sites.writeState",
      "backupdr.locations.get",
      "backupdr.locations.list",
      "backupdr.managementServers.access",
      "backupdr.managementServers.accessSensitiveData",
      "backupdr.managementServers.assignBackupPlans",
      "backupdr.managementServers.backupAccess",
      "backupdr.managementServers.create",
      "backupdr.managementServers.delete",
      "backupdr.managementServers.get",
      "backupdr.managementServers.getIamPolicy",
      "backupdr.managementServers.list",
      "backupdr.managementServers.manageApplications",
      "backupdr.managementServers.manageBackupPlans",
      "backupdr.managementServers.manageBackupServers",
      "backupdr.managementServers.manageBackups",
      "backupdr.managementServers.manageClones",
      "backupdr.managementServers.manageExpiration",
      "backupdr.managementServers.manageHosts",
      "backupdr.managementServers.manageInternalACL",
      "backupdr.managementServers.manageJobs",
      "backupdr.managementServers.manageLiveClones",
      "backupdr.managementServers.manageMigrations",
      "backupdr.managementServers.manageMirroring",
      "backupdr.managementServers.manageMounts",
      "backupdr.managementServers.manageRestores",
      "backupdr.managementServers.manageStorage",
      "backupdr.managementServers.manageSystem",
      "backupdr.managementServers.manageWorkflows",
      "backupdr.managementServers.refreshWorkflows",
      "backupdr.managementServers.runWorkflows",
      "backupdr.managementServers.testFailOvers",
      "backupdr.managementServers.viewBackupPlans",
      "backupdr.managementServers.viewBackupServers",
      "backupdr.managementServers.viewReports",
      "backupdr.managementServers.viewStorage",
      "backupdr.managementServers.viewSystem",
      "backupdr.managementServers.viewWorkflows",
      "backupdr.operations.cancel",
      "backupdr.operations.delete",
      "backupdr.operations.get",
      "backupdr.operations.list",
      "baremetalsolution.instancequotas.list",
      "baremetalsolution.instances.attachNetwork",
      "baremetalsolution.instances.attachVolume",
      "baremetalsolution.instances.create",
      "baremetalsolution.instances.detachLun",
      "baremetalsolution.instances.detachNetwork",
      "baremetalsolution.instances.detachVolume",
      "baremetalsolution.instances.disableInteractiveSerialConsole",
      "baremetalsolution.instances.enableInteractiveSerialConsole",
      "baremetalsolution.instances.get",
      "baremetalsolution.instances.list",
      "baremetalsolution.instances.rename",
      "baremetalsolution.instances.reset",
      "baremetalsolution.instances.start",
      "baremetalsolution.instances.stop",
      "baremetalsolution.instances.update",
      "baremetalsolution.luns.create",
      "baremetalsolution.luns.delete",
      "baremetalsolution.luns.evict",
      "baremetalsolution.luns.get",
      "baremetalsolution.luns.list",
      "baremetalsolution.luns.update",
      "baremetalsolution.maintenanceevents.addProposal",
      "baremetalsolution.maintenanceevents.approve",
      "baremetalsolution.maintenanceevents.get",
      "baremetalsolution.maintenanceevents.list",
      "baremetalsolution.networkquotas.list",
      "baremetalsolution.networks.create",
      "baremetalsolution.networks.delete",
      "baremetalsolution.networks.get",
      "baremetalsolution.networks.list",
      "baremetalsolution.networks.rename",
      "baremetalsolution.networks.update",
      "baremetalsolution.nfsshares.create",
      "baremetalsolution.nfsshares.delete",
      "baremetalsolution.nfsshares.get",
      "baremetalsolution.nfsshares.list",
      "baremetalsolution.nfsshares.rename",
      "baremetalsolution.nfsshares.update",
      "baremetalsolution.operations.get",
      "baremetalsolution.osimages.list",
      "baremetalsolution.procurements.create",
      "baremetalsolution.procurements.get",
      "baremetalsolution.procurements.list",
      "baremetalsolution.skus.list",
      "baremetalsolution.snapshotschedulepolicies.create",
      "baremetalsolution.snapshotschedulepolicies.delete",
      "baremetalsolution.snapshotschedulepolicies.get",
      "baremetalsolution.snapshotschedulepolicies.list",
      "baremetalsolution.snapshotschedulepolicies.update",
      "baremetalsolution.sshKeys.create",
      "baremetalsolution.sshKeys.delete",
      "baremetalsolution.sshKeys.list",
      "baremetalsolution.storageaggregatepools.list",
      "baremetalsolution.volumequotas.list",
      "baremetalsolution.volumes.create",
      "baremetalsolution.volumes.delete",
      "baremetalsolution.volumes.evict",
      "baremetalsolution.volumes.get",
      "baremetalsolution.volumes.list",
      "baremetalsolution.volumes.rename",
      "baremetalsolution.volumes.resize",
      "baremetalsolution.volumes.update",
      "baremetalsolution.volumesnapshots.create",
      "baremetalsolution.volumesnapshots.delete",
      "baremetalsolution.volumesnapshots.get",
      "baremetalsolution.volumesnapshots.list",
      "baremetalsolution.volumesnapshots.restore",
      "batch.jobs.create",
      "batch.jobs.delete",
      "batch.jobs.get",
      "batch.jobs.list",
      "batch.locations.get",
      "batch.locations.list",
      "batch.operations.get",
      "batch.operations.list",
      "batch.states.report",
      "batch.tasks.get",
      "batch.tasks.list",
      "beyondcorp.appConnections.create",
      "beyondcorp.appConnections.delete",
      "beyondcorp.appConnections.get",
      "beyondcorp.appConnections.getIamPolicy",
      "beyondcorp.appConnections.list",
      "beyondcorp.appConnections.update",
      "beyondcorp.appConnectors.create",
      "beyondcorp.appConnectors.delete",
      "beyondcorp.appConnectors.get",
      "beyondcorp.appConnectors.getIamPolicy",
      "beyondcorp.appConnectors.list",
      "beyondcorp.appConnectors.reportStatus",
      "beyondcorp.appConnectors.update",
      "beyondcorp.appGateways.create",
      "beyondcorp.appGateways.delete",
      "beyondcorp.appGateways.get",
      "beyondcorp.appGateways.getIamPolicy",
      "beyondcorp.appGateways.list",
      "beyondcorp.appGateways.update",
      "beyondcorp.clientConnectorServices.create",
      "beyondcorp.clientConnectorServices.delete",
      "beyondcorp.clientConnectorServices.get",
      "beyondcorp.clientConnectorServices.getIamPolicy",
      "beyondcorp.clientConnectorServices.list",
      "beyondcorp.clientConnectorServices.update",
      "beyondcorp.clientGateways.create",
      "beyondcorp.clientGateways.delete",
      "beyondcorp.clientGateways.get",
      "beyondcorp.clientGateways.getIamPolicy",
      "beyondcorp.clientGateways.list",
      "beyondcorp.locations.get",
      "beyondcorp.locations.list",
      "beyondcorp.operations.cancel",
      "beyondcorp.operations.delete",
      "beyondcorp.operations.get",
      "beyondcorp.operations.list",
      "beyondcorp.subscriptions.create",
      "beyondcorp.subscriptions.get",
      "beyondcorp.subscriptions.list",
      "biglake.catalogs.create",
      "biglake.catalogs.delete",
      "biglake.catalogs.get",
      "biglake.catalogs.list",
      "biglake.databases.create",
      "biglake.databases.delete",
      "biglake.databases.get",
      "biglake.databases.list",
      "biglake.databases.update",
      "biglake.locks.check",
      "biglake.locks.create",
      "biglake.locks.delete",
      "biglake.locks.list",
      "biglake.tables.create",
      "biglake.tables.delete",
      "biglake.tables.get",
      "biglake.tables.list",
      "biglake.tables.lock",
      "biglake.tables.update",
      "bigquery.bireservations.get",
      "bigquery.bireservations.update",
      "bigquery.capacityCommitments.get",
      "bigquery.capacityCommitments.list",
      "bigquery.capacityCommitments.update",
      "bigquery.config.get",
      "bigquery.config.update",
      "bigquery.connections.create",
      "bigquery.connections.delete",
      "bigquery.connections.get",
      "bigquery.connections.getIamPolicy",
      "bigquery.connections.list",
      "bigquery.connections.update",
      "bigquery.connections.updateTag",
      "bigquery.connections.use",
      "bigquery.dataPolicies.create",
      "bigquery.dataPolicies.delete",
      "bigquery.dataPolicies.get",
      "bigquery.dataPolicies.getIamPolicy",
      "bigquery.dataPolicies.list",
      "bigquery.dataPolicies.update",
      "bigquery.datasets.create",
      "bigquery.datasets.get",
      "bigquery.datasets.getIamPolicy",
      "bigquery.datasets.listEffectiveTags",
      "bigquery.datasets.listTagBindings",
      "bigquery.datasets.updateTag",
      "bigquery.jobs.create",
      "bigquery.jobs.delete",
      "bigquery.jobs.get",
      "bigquery.jobs.list",
      "bigquery.jobs.listExecutionMetadata",
      "bigquery.models.create",
      "bigquery.models.delete",
      "bigquery.models.export",
      "bigquery.models.getData",
      "bigquery.models.getMetadata",
      "bigquery.models.list",
      "bigquery.models.updateData",
      "bigquery.models.updateMetadata",
      "bigquery.models.updateTag",
      "bigquery.readsessions.create",
      "bigquery.readsessions.getData",
      "bigquery.readsessions.update",
      "bigquery.reservationAssignments.create",
      "bigquery.reservationAssignments.delete",
      "bigquery.reservationAssignments.list",
      "bigquery.reservationAssignments.search",
      "bigquery.reservations.create",
      "bigquery.reservations.delete",
      "bigquery.reservations.get",
      "bigquery.reservations.list",
      "bigquery.reservations.update",
      "bigquery.routines.create",
      "bigquery.routines.delete",
      "bigquery.routines.get",
      "bigquery.routines.list",
      "bigquery.routines.update",
      "bigquery.routines.updateTag",
      "bigquery.rowAccessPolicies.create",
      "bigquery.rowAccessPolicies.delete",
      "bigquery.rowAccessPolicies.getIamPolicy",
      "bigquery.rowAccessPolicies.list",
      "bigquery.rowAccessPolicies.update",
      "bigquery.savedqueries.create",
      "bigquery.savedqueries.delete",
      "bigquery.savedqueries.get",
      "bigquery.savedqueries.list",
      "bigquery.savedqueries.update",
      "bigquery.tables.createIndex",
      "bigquery.tables.createSnapshot",
      "bigquery.tables.deleteIndex",
      "bigquery.tables.getIamPolicy",
      "bigquery.tables.replicateData",
      "bigquery.tables.restoreSnapshot",
      "bigquery.transfers.get",
      "bigquery.transfers.update",
      "bigquerymigration.locations.get",
      "bigquerymigration.locations.list",
      "bigquerymigration.subtasks.create",
      "bigquerymigration.subtasks.get",
      "bigquerymigration.subtasks.list",
      "bigquerymigration.translation.translate",
      "bigquerymigration.workflows.create",
      "bigquerymigration.workflows.delete",
      "bigquerymigration.workflows.get",
      "bigquerymigration.workflows.list",
      "bigquerymigration.workflows.update",
      "bigtable.appProfiles.create",
      "bigtable.appProfiles.delete",
      "bigtable.appProfiles.get",
      "bigtable.appProfiles.list",
      "bigtable.appProfiles.update",
      "bigtable.backups.create",
      "bigtable.backups.delete",
      "bigtable.backups.get",
      "bigtable.backups.getIamPolicy",
      "bigtable.backups.list",
      "bigtable.backups.read",
      "bigtable.backups.restore",
      "bigtable.backups.update",
      "bigtable.clusters.create",
      "bigtable.clusters.delete",
      "bigtable.clusters.get",
      "bigtable.clusters.list",
      "bigtable.clusters.update",
      "bigtable.hotTablets.list",
      "bigtable.instances.create",
      "bigtable.instances.delete",
      "bigtable.instances.get",
      "bigtable.instances.getIamPolicy",
      "bigtable.instances.list",
      "bigtable.instances.listEffectiveTags",
      "bigtable.instances.listTagBindings",
      "bigtable.instances.ping",
      "bigtable.instances.update",
      "bigtable.keyvisualizer.get",
      "bigtable.keyvisualizer.list",
      "bigtable.locations.list",
      "bigtable.tables.checkConsistency",
      "bigtable.tables.create",
      "bigtable.tables.delete",
      "bigtable.tables.generateConsistencyToken",
      "bigtable.tables.get",
      "bigtable.tables.getIamPolicy",
      "bigtable.tables.list",
      "bigtable.tables.mutateRows",
      "bigtable.tables.readRows",
      "bigtable.tables.sampleRowKeys",
      "bigtable.tables.undelete",
      "bigtable.tables.update",
      "billing.billingAccountPrice.get",
      "billing.billingAccountServices.get",
      "billing.billingAccountServices.list",
      "billing.billingAccountSkuGroupSkus.get",
      "billing.billingAccountSkuGroupSkus.list",
      "billing.billingAccountSkuGroups.get",
      "billing.billingAccountSkuGroups.list",
      "billing.billingAccountSkus.get",
      "billing.billingAccountSkus.list",
      "billing.finOpsBenchmarkInformation.get",
      "billing.finOpsHealthInformation.get",
      "billing.resourceCosts.get",
      "binaryauthorization.attestors.create",
      "binaryauthorization.attestors.delete",
      "binaryauthorization.attestors.get",
      "binaryauthorization.attestors.getIamPolicy",
      "binaryauthorization.attestors.list",
      "binaryauthorization.attestors.update",
      "binaryauthorization.attestors.verifyImageAttested",
      "binaryauthorization.continuousValidationConfig.get",
      "binaryauthorization.continuousValidationConfig.getIamPolicy",
      "binaryauthorization.continuousValidationConfig.update",
      "binaryauthorization.platformPolicies.create",
      "binaryauthorization.platformPolicies.delete",
      "binaryauthorization.platformPolicies.evaluatePolicy",
      "binaryauthorization.platformPolicies.get",
      "binaryauthorization.platformPolicies.list",
      "binaryauthorization.platformPolicies.replace",
      "binaryauthorization.policy.evaluatePolicy",
      "binaryauthorization.policy.get",
      "binaryauthorization.policy.getIamPolicy",
      "binaryauthorization.policy.update",
      "blockchainnodeengine.blockchainNodes.create",
      "blockchainnodeengine.blockchainNodes.delete",
      "blockchainnodeengine.blockchainNodes.get",
      "blockchainnodeengine.blockchainNodes.list",
      "blockchainnodeengine.blockchainNodes.update",
      "blockchainnodeengine.locations.get",
      "blockchainnodeengine.locations.list",
      "blockchainnodeengine.operations.cancel",
      "blockchainnodeengine.operations.delete",
      "blockchainnodeengine.operations.get",
      "blockchainnodeengine.operations.list",
      "carestudio.patients.get",
      "carestudio.patients.list",
      "certificatemanager.certissuanceconfigs.create",
      "certificatemanager.certissuanceconfigs.delete",
      "certificatemanager.certissuanceconfigs.get",
      "certificatemanager.certissuanceconfigs.list",
      "certificatemanager.certissuanceconfigs.update",
      "certificatemanager.certissuanceconfigs.use",
      "certificatemanager.certmapentries.create",
      "certificatemanager.certmapentries.delete",
      "certificatemanager.certmapentries.get",
      "certificatemanager.certmapentries.getIamPolicy",
      "certificatemanager.certmapentries.list",
      "certificatemanager.certmapentries.update",
      "certificatemanager.certmaps.create",
      "certificatemanager.certmaps.delete",
      "certificatemanager.certmaps.get",
      "certificatemanager.certmaps.getIamPolicy",
      "certificatemanager.certmaps.list",
      "certificatemanager.certmaps.update",
      "certificatemanager.certmaps.use",
      "certificatemanager.certs.create",
      "certificatemanager.certs.delete",
      "certificatemanager.certs.get",
      "certificatemanager.certs.getIamPolicy",
      "certificatemanager.certs.list",
      "certificatemanager.certs.update",
      "certificatemanager.certs.use",
      "certificatemanager.dnsauthorizations.create",
      "certificatemanager.dnsauthorizations.delete",
      "certificatemanager.dnsauthorizations.get",
      "certificatemanager.dnsauthorizations.getIamPolicy",
      "certificatemanager.dnsauthorizations.list",
      "certificatemanager.dnsauthorizations.update",
      "certificatemanager.dnsauthorizations.use",
      "certificatemanager.locations.get",
      "certificatemanager.locations.list",
      "certificatemanager.operations.cancel",
      "certificatemanager.operations.delete",
      "certificatemanager.operations.get",
      "certificatemanager.operations.list",
      "certificatemanager.trustconfigs.create",
      "certificatemanager.trustconfigs.delete",
      "certificatemanager.trustconfigs.get",
      "certificatemanager.trustconfigs.list",
      "certificatemanager.trustconfigs.update",
      "certificatemanager.trustconfigs.use",
      "chat.bots.get",
      "chat.bots.update",
      "chronicle.collectors.create",
      "chronicle.collectors.delete",
      "chronicle.collectors.get",
      "chronicle.collectors.list",
      "chronicle.collectors.update",
      "chronicle.curatedRuleSetCategories.countAllCuratedRuleSetDetections",
      "chronicle.curatedRuleSetCategories.get",
      "chronicle.curatedRuleSetCategories.list",
      "chronicle.curatedRuleSetDeployments.batchUpdate",
      "chronicle.curatedRuleSetDeployments.get",
      "chronicle.curatedRuleSetDeployments.list",
      "chronicle.curatedRuleSetDeployments.update",
      "chronicle.curatedRuleSets.countCuratedRuleSetDetections",
      "chronicle.curatedRuleSets.get",
      "chronicle.curatedRuleSets.list",
      "chronicle.curatedRules.get",
      "chronicle.curatedRules.list",
      "chronicle.dashboards.copy",
      "chronicle.dashboards.create",
      "chronicle.dashboards.delete",
      "chronicle.dashboards.edit",
      "chronicle.dashboards.get",
      "chronicle.dashboards.list",
      "chronicle.dashboards.schedule",
      "chronicle.forwarders.create",
      "chronicle.forwarders.delete",
      "chronicle.forwarders.generate",
      "chronicle.forwarders.get",
      "chronicle.forwarders.list",
      "chronicle.forwarders.update",
      "chronicle.instances.get",
      "chronicle.instances.report",
      "chronicle.legacies.legacyGetCuratedRulesTrends",
      "chronicle.legacies.legacyGetRuleCounts",
      "chronicle.legacies.legacyGetRulesTrends",
      "chronicle.legacies.legacyUpdateFinding",
      "chronicle.multitenantDirectories.get",
      "chronicle.operations.cancel",
      "chronicle.operations.delete",
      "chronicle.operations.get",
      "chronicle.operations.list",
      "chronicle.operations.wait",
      "chronicle.referenceLists.create",
      "chronicle.referenceLists.get",
      "chronicle.referenceLists.list",
      "chronicle.referenceLists.update",
      "chronicle.referenceLists.verifyReferenceList",
      "chronicle.retrohunts.create",
      "chronicle.retrohunts.get",
      "chronicle.retrohunts.list",
      "chronicle.ruleDeployments.get",
      "chronicle.ruleDeployments.list",
      "chronicle.ruleDeployments.update",
      "chronicle.ruleExecutionErrors.list",
      "chronicle.rules.create",
      "chronicle.rules.get",
      "chronicle.rules.list",
      "chronicle.rules.listRevisions",
      "chronicle.rules.update",
      "chronicle.rules.verifyRuleText",
      "chroniclesm.gcpAssociations.get",
      "chroniclesm.gcpSettings.get",
      "chroniclesm.gcpSettings.update",
      "clientauthconfig.brands.create",
      "clientauthconfig.brands.delete",
      "clientauthconfig.brands.get",
      "clientauthconfig.brands.list",
      "clientauthconfig.brands.update",
      "clientauthconfig.clients.create",
      "clientauthconfig.clients.createSecret",
      "clientauthconfig.clients.delete",
      "clientauthconfig.clients.get",
      "clientauthconfig.clients.getWithSecret",
      "clientauthconfig.clients.list",
      "clientauthconfig.clients.listWithSecrets",
      "clientauthconfig.clients.undelete",
      "clientauthconfig.clients.update",
      "cloud.locations.get",
      "cloud.locations.list",
      "cloudasset.assets.analyzeIamPolicy",
      "cloudasset.assets.analyzeMove",
      "cloudasset.assets.analyzeOrgPolicy",
      "cloudasset.assets.exportAppengineApplications",
      "cloudasset.assets.exportAppengineServices",
      "cloudasset.assets.exportAppengineVersions",
      "cloudasset.assets.exportBigqueryDatasets",
      "cloudasset.assets.exportBigqueryModels",
      "cloudasset.assets.exportBigqueryTables",
      "cloudasset.assets.exportCloudDocumentAIEvaluation",
      "cloudasset.assets.exportCloudDocumentAIHumanReviewConfig",
      "cloudasset.assets.exportCloudDocumentAILabelerPool",
      "cloudasset.assets.exportCloudDocumentAIProcessor",
      "cloudasset.assets.exportCloudDocumentAIProcessorVersion",
      "cloudasset.assets.exportCloudbillingBillingAccounts",
      "cloudasset.assets.exportCloudkmsCryptoKeyVersions",
      "cloudasset.assets.exportCloudkmsCryptoKeys",
      "cloudasset.assets.exportCloudkmsKeyRings",
      "cloudasset.assets.exportCloudmemcacheInstances",
      "cloudasset.assets.exportCloudresourcemanagerFolders",
      "cloudasset.assets.exportCloudresourcemanagerOrganizations",
      "cloudasset.assets.exportCloudresourcemanagerProjects",
      "cloudasset.assets.exportCloudresourcemanagerTagBindings",
      "cloudasset.assets.exportCloudresourcemanagerTagKeys",
      "cloudasset.assets.exportCloudresourcemanagerTagValues",
      "cloudasset.assets.exportComputeAddress",
      "cloudasset.assets.exportComputeAutoscalers",
      "cloudasset.assets.exportComputeBackendBuckets",
      "cloudasset.assets.exportComputeBackendServices",
      "cloudasset.assets.exportComputeDisks",
      "cloudasset.assets.exportComputeFirewalls",
      "cloudasset.assets.exportComputeForwardingRules",
      "cloudasset.assets.exportComputeGlobalForwardingRules",
      "cloudasset.assets.exportComputeHealthChecks",
      "cloudasset.assets.exportComputeHttpHealthChecks",
      "cloudasset.assets.exportComputeHttpsHealthChecks",
      "cloudasset.assets.exportComputeImages",
      "cloudasset.assets.exportComputeInstanceGroupManagers",
      "cloudasset.assets.exportComputeInstanceGroups",
      "cloudasset.assets.exportComputeInstanceTemplates",
      "cloudasset.assets.exportComputeInstances",
      "cloudasset.assets.exportComputeInterconnect",
      "cloudasset.assets.exportComputeInterconnectAttachment",
      "cloudasset.assets.exportComputeLicenses",
      "cloudasset.assets.exportComputeNetworkEndpointGroups",
      "cloudasset.assets.exportComputeNetworks",
      "cloudasset.assets.exportComputeProjects",
      "cloudasset.assets.exportComputeRegionBackendServices",
      "cloudasset.assets.exportComputeRouters",
      "cloudasset.assets.exportComputeRoutes",
      "cloudasset.assets.exportComputeSecurityPolicy",
      "cloudasset.assets.exportComputeSnapshots",
      "cloudasset.assets.exportComputeSslCertificates",
      "cloudasset.assets.exportComputeSslPolicies",
      "cloudasset.assets.exportComputeSubnetworks",
      "cloudasset.assets.exportComputeTargetHttpProxies",
      "cloudasset.assets.exportComputeTargetHttpsProxies",
      "cloudasset.assets.exportComputeTargetInstances",
      "cloudasset.assets.exportComputeTargetPools",
      "cloudasset.assets.exportComputeTargetSslProxies",
      "cloudasset.assets.exportComputeTargetTcpProxies",
      "cloudasset.assets.exportComputeTargetVpnGateways",
      "cloudasset.assets.exportComputeUrlMaps",
      "cloudasset.assets.exportComputeVpnTunnels",
      "cloudasset.assets.exportContainerClusters",
      "cloudasset.assets.exportDataprocClusters",
      "cloudasset.assets.exportDataprocJobs",
      "cloudasset.assets.exportDnsManagedZones",
      "cloudasset.assets.exportDnsPolicies",
      "cloudasset.assets.exportIamRoles",
      "cloudasset.assets.exportIamServiceAccountKeys",
      "cloudasset.assets.exportIamServiceAccounts",
      "cloudasset.assets.exportIapTunnel",
      "cloudasset.assets.exportIapTunnelInstances",
      "cloudasset.assets.exportIapTunnelZones",
      "cloudasset.assets.exportIapWeb",
      "cloudasset.assets.exportIapWebServiceVersion",
      "cloudasset.assets.exportIapWebServices",
      "cloudasset.assets.exportIapWebType",
      "cloudasset.assets.exportOSConfigOSPolicyAssignmentReports",
      "cloudasset.assets.exportOSConfigOSPolicyAssignments",
      "cloudasset.assets.exportPubsubSnapshots",
      "cloudasset.assets.exportPubsubSubscriptions",
      "cloudasset.assets.exportPubsubTopics",
      "cloudasset.assets.exportServicemanagementServices",
      "cloudasset.assets.exportSpannerBackups",
      "cloudasset.assets.exportSpannerDatabases",
      "cloudasset.assets.exportSpannerInstances",
      "cloudasset.assets.exportSqladminBackupRuns",
      "cloudasset.assets.exportSqladminInstances",
      "cloudasset.assets.exportStorageBuckets",
      "cloudasset.assets.listCloudDocumentAIEvaluation",
      "cloudasset.assets.listCloudDocumentAIHumanReviewConfig",
      "cloudasset.assets.listCloudDocumentAILabelerPool",
      "cloudasset.assets.listCloudDocumentAIProcessor",
      "cloudasset.assets.listCloudDocumentAIProcessorVersion",
      "cloudasset.assets.listSqladminBackupRuns",
      "cloudasset.assets.searchAllIamPolicies",
      "cloudasset.assets.searchAllResources",
      "cloudasset.savedqueries.create",
      "cloudasset.savedqueries.delete",
      "cloudasset.savedqueries.get",
      "cloudasset.savedqueries.list",
      "cloudasset.savedqueries.update",
      "cloudbuild.builds.approve",
      "cloudbuild.builds.create",
      "cloudbuild.builds.get",
      "cloudbuild.builds.list",
      "cloudbuild.builds.update",
      "cloudbuild.connections.create",
      "cloudbuild.connections.delete",
      "cloudbuild.connections.fetchLinkableRepositories",
      "cloudbuild.connections.get",
      "cloudbuild.connections.getIamPolicy",
      "cloudbuild.connections.list",
      "cloudbuild.connections.update",
      "cloudbuild.integrations.create",
      "cloudbuild.integrations.delete",
      "cloudbuild.integrations.get",
      "cloudbuild.integrations.list",
      "cloudbuild.integrations.update",
      "cloudbuild.operations.get",
      "cloudbuild.operations.list",
      "cloudbuild.repositories.create",
      "cloudbuild.repositories.delete",
      "cloudbuild.repositories.fetchGitRefs",
      "cloudbuild.repositories.get",
      "cloudbuild.repositories.list",
      "cloudbuild.workerpools.create",
      "cloudbuild.workerpools.delete",
      "cloudbuild.workerpools.get",
      "cloudbuild.workerpools.list",
      "cloudbuild.workerpools.update",
      "cloudbuild.workerpools.use",
      "cloudconfig.configs.get",
      "cloudconfig.configs.update",
      "cloudcontrolspartner.customers.get",
      "cloudcontrolspartner.customers.list",
      "cloudcontrolspartner.ekmconnections.get",
      "cloudcontrolspartner.inspectabilityevents.get",
      "cloudcontrolspartner.partners.get",
      "cloudcontrolspartner.platformcontrols.get",
      "cloudcontrolspartner.violations.get",
      "cloudcontrolspartner.violations.list",
      "cloudcontrolspartner.workloads.get",
      "cloudcontrolspartner.workloads.list",
      "clouddebugger.breakpoints.create",
      "clouddebugger.breakpoints.delete",
      "clouddebugger.breakpoints.get",
      "clouddebugger.breakpoints.list",
      "clouddebugger.breakpoints.listActive",
      "clouddebugger.breakpoints.update",
      "clouddebugger.debuggees.create",
      "clouddebugger.debuggees.list",
      "clouddeploy.config.get",
      "clouddeploy.deliveryPipelines.create",
      "clouddeploy.deliveryPipelines.delete",
      "clouddeploy.deliveryPipelines.get",
      "clouddeploy.deliveryPipelines.getIamPolicy",
      "clouddeploy.deliveryPipelines.list",
      "clouddeploy.deliveryPipelines.update",
      "clouddeploy.jobRuns.get",
      "clouddeploy.jobRuns.list",
      "clouddeploy.jobRuns.terminate",
      "clouddeploy.locations.get",
      "clouddeploy.locations.list",
      "clouddeploy.operations.cancel",
      "clouddeploy.operations.delete",
      "clouddeploy.operations.get",
      "clouddeploy.operations.list",
      "clouddeploy.releases.abandon",
      "clouddeploy.releases.create",
      "clouddeploy.releases.delete",
      "clouddeploy.releases.get",
      "clouddeploy.releases.list",
      "clouddeploy.rollouts.advance",
      "clouddeploy.rollouts.approve",
      "clouddeploy.rollouts.cancel",
      "clouddeploy.rollouts.create",
      "clouddeploy.rollouts.get",
      "clouddeploy.rollouts.ignoreJob",
      "clouddeploy.rollouts.list",
      "clouddeploy.rollouts.retryJob",
      "clouddeploy.targets.create",
      "clouddeploy.targets.delete",
      "clouddeploy.targets.get",
      "clouddeploy.targets.getIamPolicy",
      "clouddeploy.targets.list",
      "clouddeploy.targets.update",
      "cloudfunctions.functions.call",
      "cloudfunctions.functions.create",
      "cloudfunctions.functions.delete",
      "cloudfunctions.functions.get",
      "cloudfunctions.functions.getIamPolicy",
      "cloudfunctions.functions.invoke",
      "cloudfunctions.functions.list",
      "cloudfunctions.functions.sourceCodeGet",
      "cloudfunctions.functions.sourceCodeSet",
      "cloudfunctions.functions.update",
      "cloudfunctions.locations.get",
      "cloudfunctions.locations.list",
      "cloudfunctions.operations.get",
      "cloudfunctions.operations.list",
      "cloudfunctions.runtimes.list",
      "cloudiot.devices.bindGateway",
      "cloudiot.devices.create",
      "cloudiot.devices.delete",
      "cloudiot.devices.get",
      "cloudiot.devices.list",
      "cloudiot.devices.sendCommand",
      "cloudiot.devices.unbindGateway",
      "cloudiot.devices.update",
      "cloudiot.devices.updateConfig",
      "cloudiot.registries.create",
      "cloudiot.registries.delete",
      "cloudiot.registries.get",
      "cloudiot.registries.getIamPolicy",
      "cloudiot.registries.list",
      "cloudiot.registries.update",
      "cloudiottoken.tokensettings.get",
      "cloudiottoken.tokensettings.update",
      "cloudjobdiscovery.companies.create",
      "cloudjobdiscovery.companies.delete",
      "cloudjobdiscovery.companies.get",
      "cloudjobdiscovery.companies.list",
      "cloudjobdiscovery.companies.update",
      "cloudjobdiscovery.events.create",
      "cloudjobdiscovery.jobs.create",
      "cloudjobdiscovery.jobs.delete",
      "cloudjobdiscovery.jobs.get",
      "cloudjobdiscovery.jobs.search",
      "cloudjobdiscovery.jobs.update",
      "cloudjobdiscovery.profiles.create",
      "cloudjobdiscovery.profiles.delete",
      "cloudjobdiscovery.profiles.get",
      "cloudjobdiscovery.profiles.search",
      "cloudjobdiscovery.profiles.update",
      "cloudjobdiscovery.tenants.create",
      "cloudjobdiscovery.tenants.delete",
      "cloudjobdiscovery.tenants.get",
      "cloudjobdiscovery.tenants.update",
      "cloudjobdiscovery.tools.access",
      "cloudkms.cryptoKeyVersions.create",
      "cloudkms.cryptoKeyVersions.get",
      "cloudkms.cryptoKeyVersions.list",
      "cloudkms.cryptoKeyVersions.update",
      "cloudkms.cryptoKeys.create",
      "cloudkms.cryptoKeys.get",
      "cloudkms.cryptoKeys.getIamPolicy",
      "cloudkms.cryptoKeys.list",
      "cloudkms.cryptoKeys.update",
      "cloudkms.ekmConfigs.get",
      "cloudkms.ekmConfigs.getIamPolicy",
      "cloudkms.ekmConfigs.update",
      "cloudkms.ekmConnections.create",
      "cloudkms.ekmConnections.get",
      "cloudkms.ekmConnections.getIamPolicy",
      "cloudkms.ekmConnections.list",
      "cloudkms.ekmConnections.update",
      "cloudkms.ekmConnections.use",
      "cloudkms.ekmConnections.verifyConnectivity",
      "cloudkms.importJobs.create",
      "cloudkms.importJobs.get",
      "cloudkms.importJobs.getIamPolicy",
      "cloudkms.importJobs.list",
      "cloudkms.importJobs.useToImport",
      "cloudkms.keyRings.create",
      "cloudkms.keyRings.get",
      "cloudkms.keyRings.getIamPolicy",
      "cloudkms.keyRings.list",
      "cloudkms.keyRings.listEffectiveTags",
      "cloudkms.keyRings.listTagBindings",
      "cloudkms.locations.generateRandomBytes",
      "cloudkms.locations.get",
      "cloudkms.locations.list",
      "cloudkms.protectedResources.search",
      "cloudmessaging.messages.create",
      "cloudnotifications.activities.list",
      "cloudonefs.isiloncloud.com/clusters.create",
      "cloudonefs.isiloncloud.com/clusters.delete",
      "cloudonefs.isiloncloud.com/clusters.get",
      "cloudonefs.isiloncloud.com/clusters.list",
      "cloudonefs.isiloncloud.com/clusters.update",
      "cloudonefs.isiloncloud.com/clusters.updateAdvancedSettings",
      "cloudonefs.isiloncloud.com/fileshares.create",
      "cloudonefs.isiloncloud.com/fileshares.delete",
      "cloudonefs.isiloncloud.com/fileshares.get",
      "cloudonefs.isiloncloud.com/fileshares.list",
      "cloudonefs.isiloncloud.com/fileshares.update",
      "cloudoptimization.operations.create",
      "cloudoptimization.operations.get",
      "cloudprivatecatalog.targets.get",
      "cloudprivatecatalogproducer.associations.create",
      "cloudprivatecatalogproducer.associations.delete",
      "cloudprivatecatalogproducer.associations.get",
      "cloudprivatecatalogproducer.associations.list",
      "cloudprivatecatalogproducer.catalogAssociations.create",
      "cloudprivatecatalogproducer.catalogAssociations.delete",
      "cloudprivatecatalogproducer.catalogAssociations.get",
      "cloudprivatecatalogproducer.catalogAssociations.list",
      "cloudprivatecatalogproducer.catalogs.create",
      "cloudprivatecatalogproducer.catalogs.delete",
      "cloudprivatecatalogproducer.catalogs.get",
      "cloudprivatecatalogproducer.catalogs.getIamPolicy",
      "cloudprivatecatalogproducer.catalogs.list",
      "cloudprivatecatalogproducer.catalogs.undelete",
      "cloudprivatecatalogproducer.catalogs.update",
      "cloudprivatecatalogproducer.producerCatalogs.attachProduct",
      "cloudprivatecatalogproducer.producerCatalogs.create",
      "cloudprivatecatalogproducer.producerCatalogs.delete",
      "cloudprivatecatalogproducer.producerCatalogs.detachProduct",
      "cloudprivatecatalogproducer.producerCatalogs.get",
      "cloudprivatecatalogproducer.producerCatalogs.getIamPolicy",
      "cloudprivatecatalogproducer.producerCatalogs.list",
      "cloudprivatecatalogproducer.producerCatalogs.update",
      "cloudprivatecatalogproducer.products.create",
      "cloudprivatecatalogproducer.products.delete",
      "cloudprivatecatalogproducer.products.get",
      "cloudprivatecatalogproducer.products.getIamPolicy",
      "cloudprivatecatalogproducer.products.list",
      "cloudprivatecatalogproducer.products.update",
      "cloudprivatecatalogproducer.settings.get",
      "cloudprivatecatalogproducer.settings.update",
      "cloudprivatecatalogproducer.targets.associate",
      "cloudprivatecatalogproducer.targets.unassociate",
      "cloudprofiler.profiles.create",
      "cloudprofiler.profiles.list",
      "cloudprofiler.profiles.update",
      "cloudscheduler.jobs.create",
      "cloudscheduler.jobs.delete",
      "cloudscheduler.jobs.enable",
      "cloudscheduler.jobs.fullView",
      "cloudscheduler.jobs.get",
      "cloudscheduler.jobs.list",
      "cloudscheduler.jobs.pause",
      "cloudscheduler.jobs.run",
      "cloudscheduler.jobs.update",
      "cloudscheduler.locations.get",
      "cloudscheduler.locations.list",
      "cloudsecurityscanner.crawledurls.list",
      "cloudsecurityscanner.results.get",
      "cloudsecurityscanner.results.list",
      "cloudsecurityscanner.scanruns.get",
      "cloudsecurityscanner.scanruns.getSummary",
      "cloudsecurityscanner.scanruns.list",
      "cloudsecurityscanner.scanruns.stop",
      "cloudsecurityscanner.scans.create",
      "cloudsecurityscanner.scans.delete",
      "cloudsecurityscanner.scans.get",
      "cloudsecurityscanner.scans.list",
      "cloudsecurityscanner.scans.run",
      "cloudsecurityscanner.scans.update",
      "cloudsql.backupRuns.create",
      "cloudsql.backupRuns.delete",
      "cloudsql.backupRuns.get",
      "cloudsql.backupRuns.list",
      "cloudsql.databases.create",
      "cloudsql.databases.delete",
      "cloudsql.databases.get",
      "cloudsql.databases.list",
      "cloudsql.databases.update",
      "cloudsql.instances.addServerCa",
      "cloudsql.instances.clone",
      "cloudsql.instances.connect",
      "cloudsql.instances.create",
      "cloudsql.instances.delete",
      "cloudsql.instances.demoteMaster",
      "cloudsql.instances.export",
      "cloudsql.instances.failover",
      "cloudsql.instances.get",
      "cloudsql.instances.getDiskShrinkConfig",
      "cloudsql.instances.import",
      "cloudsql.instances.list",
      "cloudsql.instances.listEffectiveTags",
      "cloudsql.instances.listServerCas",
      "cloudsql.instances.listTagBindings",
      "cloudsql.instances.login",
      "cloudsql.instances.migrate",
      "cloudsql.instances.performDiskShrink",
      "cloudsql.instances.promoteReplica",
      "cloudsql.instances.reencrypt",
      "cloudsql.instances.resetReplicaSize",
      "cloudsql.instances.resetSslConfig",
      "cloudsql.instances.restart",
      "cloudsql.instances.restoreBackup",
      "cloudsql.instances.rotateServerCa",
      "cloudsql.instances.startReplica",
      "cloudsql.instances.stopReplica",
      "cloudsql.instances.truncateLog",
      "cloudsql.instances.update",
      "cloudsql.sslCerts.create",
      "cloudsql.sslCerts.createEphemeral",
      "cloudsql.sslCerts.delete",
      "cloudsql.sslCerts.get",
      "cloudsql.sslCerts.list",
      "cloudsql.users.create",
      "cloudsql.users.delete",
      "cloudsql.users.get",
      "cloudsql.users.list",
      "cloudsql.users.update",
      "cloudsupport.accounts.get",
      "cloudsupport.accounts.getIamPolicy",
      "cloudsupport.accounts.getUserRoles",
      "cloudsupport.accounts.list",
      "cloudsupport.accounts.update",
      "cloudsupport.accounts.updateUserRoles",
      "cloudsupport.operations.get",
      "cloudsupport.properties.get",
      "cloudsupport.techCases.create",
      "cloudsupport.techCases.escalate",
      "cloudsupport.techCases.get",
      "cloudsupport.techCases.list",
      "cloudsupport.techCases.update",
      "cloudtasks.locations.get",
      "cloudtasks.locations.list",
      "cloudtasks.queues.create",
      "cloudtasks.queues.delete",
      "cloudtasks.queues.get",
      "cloudtasks.queues.list",
      "cloudtasks.queues.pause",
      "cloudtasks.queues.purge",
      "cloudtasks.queues.resume",
      "cloudtasks.queues.update",
      "cloudtasks.tasks.create",
      "cloudtasks.tasks.delete",
      "cloudtasks.tasks.fullView",
      "cloudtasks.tasks.get",
      "cloudtasks.tasks.list",
      "cloudtasks.tasks.run",
      "cloudtestservice.environmentcatalog.get",
      "cloudtestservice.matrices.create",
      "cloudtestservice.matrices.get",
      "cloudtestservice.matrices.update",
      "cloudtoolresults.executions.create",
      "cloudtoolresults.executions.get",
      "cloudtoolresults.executions.list",
      "cloudtoolresults.executions.update",
      "cloudtoolresults.histories.create",
      "cloudtoolresults.histories.get",
      "cloudtoolresults.histories.list",
      "cloudtoolresults.settings.create",
      "cloudtoolresults.settings.get",
      "cloudtoolresults.settings.update",
      "cloudtoolresults.steps.create",
      "cloudtoolresults.steps.get",
      "cloudtoolresults.steps.list",
      "cloudtoolresults.steps.update",
      "cloudtrace.insights.get",
      "cloudtrace.insights.list",
      "cloudtrace.stats.get",
      "cloudtrace.tasks.create",
      "cloudtrace.tasks.delete",
      "cloudtrace.tasks.get",
      "cloudtrace.tasks.list",
      "cloudtrace.traces.get",
      "cloudtrace.traces.list",
      "cloudtrace.traces.patch",
      "cloudtranslate.customModels.create",
      "cloudtranslate.customModels.delete",
      "cloudtranslate.customModels.get",
      "cloudtranslate.customModels.list",
      "cloudtranslate.customModels.predict",
      "cloudtranslate.datasets.create",
      "cloudtranslate.datasets.delete",
      "cloudtranslate.datasets.export",
      "cloudtranslate.datasets.get",
      "cloudtranslate.datasets.import",
      "cloudtranslate.datasets.list",
      "cloudtranslate.generalModels.batchDocPredict",
      "cloudtranslate.generalModels.batchPredict",
      "cloudtranslate.generalModels.docPredict",
      "cloudtranslate.generalModels.get",
      "cloudtranslate.generalModels.predict",
      "cloudtranslate.glossaries.batchDocPredict",
      "cloudtranslate.glossaries.batchPredict",
      "cloudtranslate.glossaries.create",
      "cloudtranslate.glossaries.delete",
      "cloudtranslate.glossaries.docPredict",
      "cloudtranslate.glossaries.get",
      "cloudtranslate.glossaries.list",
      "cloudtranslate.glossaries.predict",
      "cloudtranslate.glossaries.update",
      "cloudtranslate.glossaryentries.create",
      "cloudtranslate.glossaryentries.delete",
      "cloudtranslate.glossaryentries.get",
      "cloudtranslate.glossaryentries.list",
      "cloudtranslate.glossaryentries.update",
      "cloudtranslate.languageDetectionModels.predict",
      "cloudtranslate.locations.get",
      "cloudtranslate.locations.list",
      "cloudtranslate.operations.cancel",
      "cloudtranslate.operations.delete",
      "cloudtranslate.operations.get",
      "cloudtranslate.operations.list",
      "cloudtranslate.operations.wait",
      "cloudvolumesgcp-api.netapp.com/activeDirectories.create",
      "cloudvolumesgcp-api.netapp.com/activeDirectories.delete",
      "cloudvolumesgcp-api.netapp.com/activeDirectories.get",
      "cloudvolumesgcp-api.netapp.com/activeDirectories.list",
      "cloudvolumesgcp-api.netapp.com/activeDirectories.update",
      "cloudvolumesgcp-api.netapp.com/ipRanges.list",
      "cloudvolumesgcp-api.netapp.com/jobs.get",
      "cloudvolumesgcp-api.netapp.com/jobs.list",
      "cloudvolumesgcp-api.netapp.com/regions.list",
      "cloudvolumesgcp-api.netapp.com/serviceLevels.list",
      "cloudvolumesgcp-api.netapp.com/snapshots.create",
      "cloudvolumesgcp-api.netapp.com/snapshots.delete",
      "cloudvolumesgcp-api.netapp.com/snapshots.get",
      "cloudvolumesgcp-api.netapp.com/snapshots.list",
      "cloudvolumesgcp-api.netapp.com/snapshots.update",
      "cloudvolumesgcp-api.netapp.com/volumereplication.authorize",
      "cloudvolumesgcp-api.netapp.com/volumereplication.break",
      "cloudvolumesgcp-api.netapp.com/volumereplication.create",
      "cloudvolumesgcp-api.netapp.com/volumereplication.delete",
      "cloudvolumesgcp-api.netapp.com/volumereplication.get",
      "cloudvolumesgcp-api.netapp.com/volumereplication.list",
      "cloudvolumesgcp-api.netapp.com/volumereplication.release",
      "cloudvolumesgcp-api.netapp.com/volumereplication.resync",
      "cloudvolumesgcp-api.netapp.com/volumereplication.update",
      "cloudvolumesgcp-api.netapp.com/volumes.create",
      "cloudvolumesgcp-api.netapp.com/volumes.delete",
      "cloudvolumesgcp-api.netapp.com/volumes.get",
      "cloudvolumesgcp-api.netapp.com/volumes.list",
      "cloudvolumesgcp-api.netapp.com/volumes.update",
      "commerceagreementpublishing.agreements.create",
      "commerceagreementpublishing.agreements.delete",
      "commerceagreementpublishing.agreements.get",
      "commerceagreementpublishing.agreements.list",
      "commerceagreementpublishing.agreements.update",
      "commerceagreementpublishing.documents.create",
      "commerceagreementpublishing.documents.delete",
      "commerceagreementpublishing.documents.get",
      "commerceagreementpublishing.documents.list",
      "commerceagreementpublishing.documents.update",
      "commercebusinessenablement.leadgenConfig.get",
      "commercebusinessenablement.leadgenConfig.update",
      "commercebusinessenablement.partnerAccounts.get",
      "commercebusinessenablement.partnerAccounts.list",
      "commercebusinessenablement.partnerInfo.get",
      "commercebusinessenablement.paymentConfig.get",
      "commercebusinessenablement.paymentConfig.update",
      "commercebusinessenablement.resellerConfig.get",
      "commercebusinessenablement.resellerDiscountOffers.cancel",
      "commercebusinessenablement.resellerDiscountOffers.create",
      "commercebusinessenablement.resellerDiscountOffers.list",
      "commerceoffercatalog.agreements.get",
      "commerceoffercatalog.agreements.list",
      "commerceoffercatalog.documents.get",
      "commerceoffercatalog.documents.list",
      "commerceoffercatalog.offers.get",
      "commerceorggovernance.collections.create",
      "commerceorggovernance.collections.delete",
      "commerceorggovernance.collections.get",
      "commerceorggovernance.collections.list",
      "commerceorggovernance.collections.update",
      "commerceorggovernance.consumerSharingPolicies.get",
      "commerceorggovernance.consumerSharingPolicies.update",
      "commerceorggovernance.organizationSettings.get",
      "commerceorggovernance.organizationSettings.update",
      "commerceorggovernance.services.list",
      "commerceprice.privateoffers.cancel",
      "commerceprice.privateoffers.create",
      "commerceprice.privateoffers.delete",
      "commerceprice.privateoffers.get",
      "commerceprice.privateoffers.list",
      "commerceprice.privateoffers.publish",
      "commerceprice.privateoffers.update",
      "composer.dags.execute",
      "composer.dags.get",
      "composer.dags.getSourceCode",
      "composer.dags.list",
      "composer.environments.create",
      "composer.environments.delete",
      "composer.environments.executeAirflowCommand",
      "composer.environments.get",
      "composer.environments.list",
      "composer.environments.update",
      "composer.imageversions.list",
      "composer.operations.delete",
      "composer.operations.get",
      "composer.operations.list",
      "compute.acceleratorTypes.get",
      "compute.acceleratorTypes.list",
      "compute.addresses.create",
      "compute.addresses.createInternal",
      "compute.addresses.delete",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.addresses.setLabels",
      "compute.addresses.use",
      "compute.addresses.useInternal",
      "compute.autoscalers.create",
      "compute.autoscalers.delete",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.autoscalers.update",
      "compute.backendBuckets.addSignedUrlKey",
      "compute.backendBuckets.create",
      "compute.backendBuckets.delete",
      "compute.backendBuckets.deleteSignedUrlKey",
      "compute.backendBuckets.get",
      "compute.backendBuckets.getIamPolicy",
      "compute.backendBuckets.list",
      "compute.backendBuckets.listEffectiveTags",
      "compute.backendBuckets.listTagBindings",
      "compute.backendBuckets.setSecurityPolicy",
      "compute.backendBuckets.update",
      "compute.backendBuckets.use",
      "compute.backendServices.addSignedUrlKey",
      "compute.backendServices.create",
      "compute.backendServices.delete",
      "compute.backendServices.deleteSignedUrlKey",
      "compute.backendServices.get",
      "compute.backendServices.getIamPolicy",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.backendServices.setSecurityPolicy",
      "compute.backendServices.update",
      "compute.backendServices.use",
      "compute.commitments.create",
      "compute.commitments.get",
      "compute.commitments.list",
      "compute.commitments.update",
      "compute.commitments.updateReservations",
      "compute.diskTypes.get",
      "compute.diskTypes.list",
      "compute.disks.addResourcePolicies",
      "compute.disks.create",
      "compute.disks.createSnapshot",
      "compute.disks.delete",
      "compute.disks.get",
      "compute.disks.getIamPolicy",
      "compute.disks.list",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.disks.removeResourcePolicies",
      "compute.disks.resize",
      "compute.disks.setLabels",
      "compute.disks.startAsyncReplication",
      "compute.disks.stopAsyncReplication",
      "compute.disks.stopGroupAsyncReplication",
      "compute.disks.update",
      "compute.disks.use",
      "compute.disks.useReadOnly",
      "compute.externalVpnGateways.create",
      "compute.externalVpnGateways.delete",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.list",
      "compute.externalVpnGateways.setLabels",
      "compute.externalVpnGateways.use",
      "compute.firewallPolicies.addAssociation",
      "compute.firewallPolicies.cloneRules",
      "compute.firewallPolicies.copyRules",
      "compute.firewallPolicies.create",
      "compute.firewallPolicies.delete",
      "compute.firewallPolicies.get",
      "compute.firewallPolicies.getIamPolicy",
      "compute.firewallPolicies.list",
      "compute.firewallPolicies.listEffectiveTags",
      "compute.firewallPolicies.listTagBindings",
      "compute.firewallPolicies.move",
      "compute.firewallPolicies.removeAssociation",
      "compute.firewallPolicies.update",
      "compute.firewallPolicies.use",
      "compute.firewalls.create",
      "compute.firewalls.delete",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.firewalls.update",
      "compute.forwardingRules.create",
      "compute.forwardingRules.delete",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.forwardingRules.pscCreate",
      "compute.forwardingRules.pscDelete",
      "compute.forwardingRules.pscSetLabels",
      "compute.forwardingRules.pscSetTarget",
      "compute.forwardingRules.pscUpdate",
      "compute.forwardingRules.setLabels",
      "compute.forwardingRules.setTarget",
      "compute.forwardingRules.update",
      "compute.forwardingRules.use",
      "compute.futureReservations.cancel",
      "compute.futureReservations.create",
      "compute.futureReservations.delete",
      "compute.futureReservations.get",
      "compute.futureReservations.getIamPolicy",
      "compute.futureReservations.list",
      "compute.futureReservations.update",
      "compute.globalAddresses.create",
      "compute.globalAddresses.createInternal",
      "compute.globalAddresses.delete",
      "compute.globalAddresses.deleteInternal",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalAddresses.setLabels",
      "compute.globalAddresses.use",
      "compute.globalForwardingRules.create",
      "compute.globalForwardingRules.delete",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalForwardingRules.pscCreate",
      "compute.globalForwardingRules.pscDelete",
      "compute.globalForwardingRules.pscGet",
      "compute.globalForwardingRules.pscSetLabels",
      "compute.globalForwardingRules.pscSetTarget",
      "compute.globalForwardingRules.pscUpdate",
      "compute.globalForwardingRules.setLabels",
      "compute.globalForwardingRules.setTarget",
      "compute.globalForwardingRules.update",
      "compute.globalNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.create",
      "compute.globalNetworkEndpointGroups.delete",
      "compute.globalNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.get",
      "compute.globalNetworkEndpointGroups.list",
      "compute.globalNetworkEndpointGroups.listEffectiveTags",
      "compute.globalNetworkEndpointGroups.listTagBindings",
      "compute.globalNetworkEndpointGroups.use",
      "compute.globalOperations.delete",
      "compute.globalOperations.get",
      "compute.globalOperations.getIamPolicy",
      "compute.globalOperations.list",
      "compute.globalPublicDelegatedPrefixes.create",
      "compute.globalPublicDelegatedPrefixes.delete",
      "compute.globalPublicDelegatedPrefixes.get",
      "compute.globalPublicDelegatedPrefixes.list",
      "compute.globalPublicDelegatedPrefixes.update",
      "compute.globalPublicDelegatedPrefixes.updatePolicy",
      "compute.globalPublicDelegatedPrefixes.use",
      "compute.healthChecks.create",
      "compute.healthChecks.delete",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.healthChecks.update",
      "compute.healthChecks.use",
      "compute.healthChecks.useReadOnly",
      "compute.httpHealthChecks.create",
      "compute.httpHealthChecks.delete",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpHealthChecks.update",
      "compute.httpHealthChecks.use",
      "compute.httpHealthChecks.useReadOnly",
      "compute.httpsHealthChecks.create",
      "compute.httpsHealthChecks.delete",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.update",
      "compute.httpsHealthChecks.use",
      "compute.httpsHealthChecks.useReadOnly",
      "compute.images.create",
      "compute.images.delete",
      "compute.images.deprecate",
      "compute.images.get",
      "compute.images.getFromFamily",
      "compute.images.getIamPolicy",
      "compute.images.list",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.images.setLabels",
      "compute.images.update",
      "compute.images.useReadOnly",
      "compute.instanceGroupManagers.create",
      "compute.instanceGroupManagers.delete",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroupManagers.update",
      "compute.instanceGroupManagers.use",
      "compute.instanceGroups.create",
      "compute.instanceGroups.delete",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instanceGroups.update",
      "compute.instanceGroups.use",
      "compute.instanceTemplates.create",
      "compute.instanceTemplates.delete",
      "compute.instanceTemplates.get",
      "compute.instanceTemplates.getIamPolicy",
      "compute.instanceTemplates.list",
      "compute.instanceTemplates.useReadOnly",
      "compute.instances.addAccessConfig",
      "compute.instances.addMaintenancePolicies",
      "compute.instances.addResourcePolicies",
      "compute.instances.attachDisk",
      "compute.instances.create",
      "compute.instances.delete",
      "compute.instances.deleteAccessConfig",
      "compute.instances.detachDisk",
      "compute.instances.get",
      "compute.instances.getEffectiveFirewalls",
      "compute.instances.getGuestAttributes",
      "compute.instances.getIamPolicy",
      "compute.instances.getScreenshot",
      "compute.instances.getSerialPortOutput",
      "compute.instances.getShieldedInstanceIdentity",
      "compute.instances.getShieldedVmIdentity",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listReferrers",
      "compute.instances.listTagBindings",
      "compute.instances.osAdminLogin",
      "compute.instances.osLogin",
      "compute.instances.removeMaintenancePolicies",
      "compute.instances.removeResourcePolicies",
      "compute.instances.reset",
      "compute.instances.resume",
      "compute.instances.sendDiagnosticInterrupt",
      "compute.instances.setDeletionProtection",
      "compute.instances.setDiskAutoDelete",
      "compute.instances.setLabels",
      "compute.instances.setMachineResources",
      "compute.instances.setMachineType",
      "compute.instances.setMetadata",
      "compute.instances.setMinCpuPlatform",
      "compute.instances.setName",
      "compute.instances.setScheduling",
      "compute.instances.setSecurityPolicy",
      "compute.instances.setServiceAccount",
      "compute.instances.setShieldedInstanceIntegrityPolicy",
      "compute.instances.setShieldedVmIntegrityPolicy",
      "compute.instances.setTags",
      "compute.instances.simulateMaintenanceEvent",
      "compute.instances.start",
      "compute.instances.startWithEncryptionKey",
      "compute.instances.stop",
      "compute.instances.suspend",
      "compute.instances.update",
      "compute.instances.updateAccessConfig",
      "compute.instances.updateDisplayDevice",
      "compute.instances.updateNetworkInterface",
      "compute.instances.updateSecurity",
      "compute.instances.updateShieldedInstanceConfig",
      "compute.instances.updateShieldedVmConfig",
      "compute.instances.use",
      "compute.instances.useReadOnly",
      "compute.instantSnapshots.create",
      "compute.instantSnapshots.delete",
      "compute.instantSnapshots.export",
      "compute.instantSnapshots.get",
      "compute.instantSnapshots.getIamPolicy",
      "compute.instantSnapshots.list",
      "compute.instantSnapshots.setLabels",
      "compute.instantSnapshots.useReadOnly",
      "compute.interconnectAttachments.create",
      "compute.interconnectAttachments.delete",
      "compute.interconnectAttachments.get",
      "compute.interconnectAttachments.list",
      "compute.interconnectAttachments.setLabels",
      "compute.interconnectAttachments.update",
      "compute.interconnectAttachments.use",
      "compute.interconnectLocations.get",
      "compute.interconnectLocations.list",
      "compute.interconnectRemoteLocations.get",
      "compute.interconnectRemoteLocations.list",
      "compute.interconnects.create",
      "compute.interconnects.delete",
      "compute.interconnects.get",
      "compute.interconnects.list",
      "compute.interconnects.setLabels",
      "compute.interconnects.update",
      "compute.interconnects.use",
      "compute.licenseCodes.get",
      "compute.licenseCodes.getIamPolicy",
      "compute.licenseCodes.list",
      "compute.licenseCodes.update",
      "compute.licenseCodes.use",
      "compute.licenses.create",
      "compute.licenses.delete",
      "compute.licenses.get",
      "compute.licenses.getIamPolicy",
      "compute.licenses.list",
      "compute.machineImages.create",
      "compute.machineImages.delete",
      "compute.machineImages.get",
      "compute.machineImages.getIamPolicy",
      "compute.machineImages.list",
      "compute.machineImages.useReadOnly",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.maintenancePolicies.create",
      "compute.maintenancePolicies.delete",
      "compute.maintenancePolicies.get",
      "compute.maintenancePolicies.getIamPolicy",
      "compute.maintenancePolicies.list",
      "compute.maintenancePolicies.use",
      "compute.networkAttachments.create",
      "compute.networkAttachments.delete",
      "compute.networkAttachments.get",
      "compute.networkAttachments.getIamPolicy",
      "compute.networkAttachments.list",
      "compute.networkEdgeSecurityServices.create",
      "compute.networkEdgeSecurityServices.delete",
      "compute.networkEdgeSecurityServices.get",
      "compute.networkEdgeSecurityServices.list",
      "compute.networkEdgeSecurityServices.update",
      "compute.networkEndpointGroups.attachNetworkEndpoints",
      "compute.networkEndpointGroups.create",
      "compute.networkEndpointGroups.delete",
      "compute.networkEndpointGroups.detachNetworkEndpoints",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.getIamPolicy",
      "compute.networkEndpointGroups.list",
      "compute.networkEndpointGroups.listEffectiveTags",
      "compute.networkEndpointGroups.listTagBindings",
      "compute.networkEndpointGroups.use",
      "compute.networks.access",
      "compute.networks.addPeering",
      "compute.networks.create",
      "compute.networks.delete",
      "compute.networks.get",
      "compute.networks.getEffectiveFirewalls",
      "compute.networks.getRegionEffectiveFirewalls",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listPeeringRoutes",
      "compute.networks.listTagBindings",
      "compute.networks.mirror",
      "compute.networks.removePeering",
      "compute.networks.setFirewallPolicy",
      "compute.networks.switchToCustomMode",
      "compute.networks.update",
      "compute.networks.updatePeering",
      "compute.networks.updatePolicy",
      "compute.networks.use",
      "compute.networks.useExternalIp",
      "compute.nodeGroups.addNodes",
      "compute.nodeGroups.create",
      "compute.nodeGroups.delete",
      "compute.nodeGroups.deleteNodes",
      "compute.nodeGroups.get",
      "compute.nodeGroups.getIamPolicy",
      "compute.nodeGroups.list",
      "compute.nodeGroups.setNodeTemplate",
      "compute.nodeGroups.simulateMaintenanceEvent",
      "compute.nodeGroups.update",
      "compute.nodeTemplates.create",
      "compute.nodeTemplates.delete",
      "compute.nodeTemplates.get",
      "compute.nodeTemplates.getIamPolicy",
      "compute.nodeTemplates.list",
      "compute.nodeTypes.get",
      "compute.nodeTypes.list",
      "compute.organizations.listAssociations",
      "compute.organizations.setFirewallPolicy",
      "compute.organizations.setSecurityPolicy",
      "compute.packetMirrorings.create",
      "compute.packetMirrorings.delete",
      "compute.packetMirrorings.get",
      "compute.packetMirrorings.list",
      "compute.packetMirrorings.update",
      "compute.projects.get",
      "compute.projects.setCommonInstanceMetadata",
      "compute.projects.setDefaultNetworkTier",
      "compute.projects.setDefaultServiceAccount",
      "compute.projects.setUsageExportBucket",
      "compute.publicAdvertisedPrefixes.create",
      "compute.publicAdvertisedPrefixes.delete",
      "compute.publicAdvertisedPrefixes.get",
      "compute.publicAdvertisedPrefixes.list",
      "compute.publicAdvertisedPrefixes.update",
      "compute.publicAdvertisedPrefixes.updatePolicy",
      "compute.publicAdvertisedPrefixes.use",
      "compute.publicDelegatedPrefixes.create",
      "compute.publicDelegatedPrefixes.delete",
      "compute.publicDelegatedPrefixes.get",
      "compute.publicDelegatedPrefixes.list",
      "compute.publicDelegatedPrefixes.update",
      "compute.publicDelegatedPrefixes.updatePolicy",
      "compute.publicDelegatedPrefixes.use",
      "compute.regionBackendServices.create",
      "compute.regionBackendServices.delete",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.getIamPolicy",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionBackendServices.setSecurityPolicy",
      "compute.regionBackendServices.update",
      "compute.regionBackendServices.use",
      "compute.regionFirewallPolicies.cloneRules",
      "compute.regionFirewallPolicies.create",
      "compute.regionFirewallPolicies.delete",
      "compute.regionFirewallPolicies.get",
      "compute.regionFirewallPolicies.getIamPolicy",
      "compute.regionFirewallPolicies.list",
      "compute.regionFirewallPolicies.listEffectiveTags",
      "compute.regionFirewallPolicies.listTagBindings",
      "compute.regionFirewallPolicies.update",
      "compute.regionFirewallPolicies.use",
      "compute.regionHealthCheckServices.create",
      "compute.regionHealthCheckServices.delete",
      "compute.regionHealthCheckServices.get",
      "compute.regionHealthCheckServices.list",
      "compute.regionHealthCheckServices.update",
      "compute.regionHealthCheckServices.use",
      "compute.regionHealthChecks.create",
      "compute.regionHealthChecks.delete",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionHealthChecks.update",
      "compute.regionHealthChecks.use",
      "compute.regionHealthChecks.useReadOnly",
      "compute.regionNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.create",
      "compute.regionNetworkEndpointGroups.delete",
      "compute.regionNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionNetworkEndpointGroups.listEffectiveTags",
      "compute.regionNetworkEndpointGroups.listTagBindings",
      "compute.regionNetworkEndpointGroups.use",
      "compute.regionNotificationEndpoints.create",
      "compute.regionNotificationEndpoints.delete",
      "compute.regionNotificationEndpoints.get",
      "compute.regionNotificationEndpoints.list",
      "compute.regionNotificationEndpoints.update",
      "compute.regionNotificationEndpoints.use",
      "compute.regionOperations.delete",
      "compute.regionOperations.get",
      "compute.regionOperations.getIamPolicy",
      "compute.regionOperations.list",
      "compute.regionSecurityPolicies.create",
      "compute.regionSecurityPolicies.delete",
      "compute.regionSecurityPolicies.get",
      "compute.regionSecurityPolicies.list",
      "compute.regionSecurityPolicies.listEffectiveTags",
      "compute.regionSecurityPolicies.listTagBindings",
      "compute.regionSecurityPolicies.update",
      "compute.regionSecurityPolicies.use",
      "compute.regionSslCertificates.create",
      "compute.regionSslCertificates.delete",
      "compute.regionSslCertificates.get",
      "compute.regionSslCertificates.list",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionSslPolicies.create",
      "compute.regionSslPolicies.delete",
      "compute.regionSslPolicies.get",
      "compute.regionSslPolicies.list",
      "compute.regionSslPolicies.listAvailableFeatures",
      "compute.regionSslPolicies.update",
      "compute.regionSslPolicies.use",
      "compute.regionTargetHttpProxies.create",
      "compute.regionTargetHttpProxies.delete",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpProxies.setUrlMap",
      "compute.regionTargetHttpProxies.update",
      "compute.regionTargetHttpProxies.use",
      "compute.regionTargetHttpsProxies.create",
      "compute.regionTargetHttpsProxies.delete",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.setSslCertificates",
      "compute.regionTargetHttpsProxies.setUrlMap",
      "compute.regionTargetHttpsProxies.update",
      "compute.regionTargetHttpsProxies.use",
      "compute.regionTargetTcpProxies.create",
      "compute.regionTargetTcpProxies.delete",
      "compute.regionTargetTcpProxies.get",
      "compute.regionTargetTcpProxies.list",
      "compute.regionTargetTcpProxies.use",
      "compute.regionUrlMaps.create",
      "compute.regionUrlMaps.delete",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.invalidateCache",
      "compute.regionUrlMaps.list",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.regionUrlMaps.update",
      "compute.regionUrlMaps.use",
      "compute.regionUrlMaps.validate",
      "compute.regions.get",
      "compute.regions.list",
      "compute.reservations.create",
      "compute.reservations.delete",
      "compute.reservations.get",
      "compute.reservations.list",
      "compute.reservations.resize",
      "compute.reservations.update",
      "compute.resourcePolicies.create",
      "compute.resourcePolicies.delete",
      "compute.resourcePolicies.get",
      "compute.resourcePolicies.getIamPolicy",
      "compute.resourcePolicies.list",
      "compute.resourcePolicies.update",
      "compute.resourcePolicies.use",
      "compute.resourcePolicies.useReadOnly",
      "compute.routers.create",
      "compute.routers.delete",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routers.update",
      "compute.routers.use",
      "compute.routes.create",
      "compute.routes.delete",
      "compute.routes.get",
      "compute.routes.list",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.securityPolicies.addAssociation",
      "compute.securityPolicies.copyRules",
      "compute.securityPolicies.create",
      "compute.securityPolicies.delete",
      "compute.securityPolicies.get",
      "compute.securityPolicies.getIamPolicy",
      "compute.securityPolicies.list",
      "compute.securityPolicies.listEffectiveTags",
      "compute.securityPolicies.listTagBindings",
      "compute.securityPolicies.move",
      "compute.securityPolicies.removeAssociation",
      "compute.securityPolicies.setLabels",
      "compute.securityPolicies.update",
      "compute.securityPolicies.use",
      "compute.serviceAttachments.create",
      "compute.serviceAttachments.delete",
      "compute.serviceAttachments.get",
      "compute.serviceAttachments.getIamPolicy",
      "compute.serviceAttachments.list",
      "compute.serviceAttachments.update",
      "compute.serviceAttachments.use",
      "compute.snapshots.create",
      "compute.snapshots.delete",
      "compute.snapshots.get",
      "compute.snapshots.getIamPolicy",
      "compute.snapshots.list",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.snapshots.setLabels",
      "compute.snapshots.useReadOnly",
      "compute.sslCertificates.create",
      "compute.sslCertificates.delete",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.create",
      "compute.sslPolicies.delete",
      "compute.sslPolicies.get",
      "compute.sslPolicies.list",
      "compute.sslPolicies.listAvailableFeatures",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.sslPolicies.update",
      "compute.sslPolicies.use",
      "compute.subnetworks.create",
      "compute.subnetworks.delete",
      "compute.subnetworks.expandIpCidrRange",
      "compute.subnetworks.get",
      "compute.subnetworks.getIamPolicy",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.subnetworks.mirror",
      "compute.subnetworks.setPrivateIpGoogleAccess",
      "compute.subnetworks.update",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.targetGrpcProxies.create",
      "compute.targetGrpcProxies.delete",
      "compute.targetGrpcProxies.get",
      "compute.targetGrpcProxies.list",
      "compute.targetGrpcProxies.update",
      "compute.targetGrpcProxies.use",
      "compute.targetHttpProxies.create",
      "compute.targetHttpProxies.delete",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpProxies.setUrlMap",
      "compute.targetHttpProxies.update",
      "compute.targetHttpProxies.use",
      "compute.targetHttpsProxies.create",
      "compute.targetHttpsProxies.delete",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetHttpsProxies.setCertificateMap",
      "compute.targetHttpsProxies.setQuicOverride",
      "compute.targetHttpsProxies.setSslCertificates",
      "compute.targetHttpsProxies.setSslPolicy",
      "compute.targetHttpsProxies.setUrlMap",
      "compute.targetHttpsProxies.update",
      "compute.targetHttpsProxies.use",
      "compute.targetInstances.create",
      "compute.targetInstances.delete",
      "compute.targetInstances.get",
      "compute.targetInstances.list",
      "compute.targetInstances.listEffectiveTags",
      "compute.targetInstances.listTagBindings",
      "compute.targetInstances.setSecurityPolicy",
      "compute.targetInstances.use",
      "compute.targetPools.addHealthCheck",
      "compute.targetPools.addInstance",
      "compute.targetPools.create",
      "compute.targetPools.delete",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.targetPools.removeHealthCheck",
      "compute.targetPools.removeInstance",
      "compute.targetPools.setSecurityPolicy",
      "compute.targetPools.update",
      "compute.targetPools.use",
      "compute.targetSslProxies.create",
      "compute.targetSslProxies.delete",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetSslProxies.listEffectiveTags",
      "compute.targetSslProxies.listTagBindings",
      "compute.targetSslProxies.setBackendService",
      "compute.targetSslProxies.setCertificateMap",
      "compute.targetSslProxies.setProxyHeader",
      "compute.targetSslProxies.setSslCertificates",
      "compute.targetSslProxies.setSslPolicy",
      "compute.targetSslProxies.update",
      "compute.targetSslProxies.use",
      "compute.targetTcpProxies.create",
      "compute.targetTcpProxies.delete",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.targetTcpProxies.update",
      "compute.targetTcpProxies.use",
      "compute.targetVpnGateways.create",
      "compute.targetVpnGateways.delete",
      "compute.targetVpnGateways.get",
      "compute.targetVpnGateways.list",
      "compute.targetVpnGateways.setLabels",
      "compute.targetVpnGateways.use",
      "compute.urlMaps.create",
      "compute.urlMaps.delete",
      "compute.urlMaps.get",
      "compute.urlMaps.invalidateCache",
      "compute.urlMaps.list",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "compute.urlMaps.update",
      "compute.urlMaps.use",
      "compute.urlMaps.validate",
      "compute.vpnGateways.create",
      "compute.vpnGateways.delete",
      "compute.vpnGateways.get",
      "compute.vpnGateways.list",
      "compute.vpnGateways.setLabels",
      "compute.vpnGateways.use",
      "compute.vpnTunnels.create",
      "compute.vpnTunnels.delete",
      "compute.vpnTunnels.get",
      "compute.vpnTunnels.list",
      "compute.vpnTunnels.setLabels",
      "compute.zoneOperations.delete",
      "compute.zoneOperations.get",
      "compute.zoneOperations.getIamPolicy",
      "compute.zoneOperations.list",
      "compute.zones.get",
      "compute.zones.list",
      "confidentialcomputing.challenges.create",
      "confidentialcomputing.challenges.verify",
      "confidentialcomputing.locations.get",
      "confidentialcomputing.locations.list",
      "config.deployments.create",
      "config.deployments.delete",
      "config.deployments.get",
      "config.deployments.getIamPolicy",
      "config.deployments.list",
      "config.deployments.update",
      "config.locations.get",
      "config.locations.list",
      "config.operations.cancel",
      "config.operations.delete",
      "config.operations.get",
      "config.operations.list",
      "config.resources.get",
      "config.resources.list",
      "config.revisions.get",
      "config.revisions.list",
      "connectors.actions.execute",
      "connectors.actions.list",
      "connectors.connections.create",
      "connectors.connections.delete",
      "connectors.connections.executeSqlQuery",
      "connectors.connections.get",
      "connectors.connections.getConnectionSchemaMetadata",
      "connectors.connections.getIamPolicy",
      "connectors.connections.getRuntimeActionSchema",
      "connectors.connections.getRuntimeEntitySchema",
      "connectors.connections.list",
      "connectors.connections.update",
      "connectors.connectors.get",
      "connectors.connectors.list",
      "connectors.endpointAttachments.create",
      "connectors.endpointAttachments.delete",
      "connectors.endpointAttachments.get",
      "connectors.endpointAttachments.getIamPolicy",
      "connectors.endpointAttachments.list",
      "connectors.endpointAttachments.update",
      "connectors.entities.create",
      "connectors.entities.delete",
      "connectors.entities.deleteEntitiesWithConditions",
      "connectors.entities.get",
      "connectors.entities.list",
      "connectors.entities.update",
      "connectors.entities.updateEntitiesWithConditions",
      "connectors.entityTypes.list",
      "connectors.eventSubscriptions.create",
      "connectors.eventSubscriptions.delete",
      "connectors.eventSubscriptions.get",
      "connectors.eventSubscriptions.list",
      "connectors.eventSubscriptions.update",
      "connectors.eventtypes.get",
      "connectors.eventtypes.list",
      "connectors.locations.get",
      "connectors.locations.list",
      "connectors.managedZones.create",
      "connectors.managedZones.delete",
      "connectors.managedZones.get",
      "connectors.managedZones.getIamPolicy",
      "connectors.managedZones.list",
      "connectors.managedZones.update",
      "connectors.operations.cancel",
      "connectors.operations.delete",
      "connectors.operations.get",
      "connectors.operations.list",
      "connectors.providers.get",
      "connectors.providers.list",
      "connectors.runtimeconfig.get",
      "connectors.schemaMetadata.refresh",
      "connectors.settings.get",
      "connectors.settings.update",
      "connectors.versions.get",
      "connectors.versions.list",
      "consumerprocurement.accounts.create",
      "consumerprocurement.accounts.delete",
      "consumerprocurement.accounts.get",
      "consumerprocurement.accounts.list",
      "consumerprocurement.consents.check",
      "consumerprocurement.consents.grant",
      "consumerprocurement.consents.list",
      "consumerprocurement.consents.revoke",
      "consumerprocurement.entitlements.get",
      "consumerprocurement.entitlements.list",
      "consumerprocurement.freeTrials.create",
      "consumerprocurement.freeTrials.get",
      "consumerprocurement.freeTrials.list",
      "consumerprocurement.orderAttributions.get",
      "consumerprocurement.orderAttributions.list",
      "consumerprocurement.orderAttributions.update",
      "consumerprocurement.orders.cancel",
      "consumerprocurement.orders.get",
      "consumerprocurement.orders.list",
      "consumerprocurement.orders.modify",
      "consumerprocurement.orders.place",
      "contactcenteraiplatform.contactCenters.create",
      "contactcenteraiplatform.contactCenters.delete",
      "contactcenteraiplatform.contactCenters.get",
      "contactcenteraiplatform.contactCenters.list",
      "contactcenteraiplatform.contactCenters.program",
      "contactcenteraiplatform.contactCenters.queryQuota",
      "contactcenteraiplatform.contactCenters.update",
      "contactcenteraiplatform.locations.get",
      "contactcenteraiplatform.locations.list",
      "contactcenteraiplatform.operations.cancel",
      "contactcenteraiplatform.operations.delete",
      "contactcenteraiplatform.operations.get",
      "contactcenteraiplatform.operations.list",
      "contactcenterinsights.analyses.create",
      "contactcenterinsights.analyses.delete",
      "contactcenterinsights.analyses.get",
      "contactcenterinsights.analyses.list",
      "contactcenterinsights.conversations.create",
      "contactcenterinsights.conversations.delete",
      "contactcenterinsights.conversations.export",
      "contactcenterinsights.conversations.get",
      "contactcenterinsights.conversations.list",
      "contactcenterinsights.conversations.update",
      "contactcenterinsights.conversations.upload",
      "contactcenterinsights.issueModels.create",
      "contactcenterinsights.issueModels.delete",
      "contactcenterinsights.issueModels.deploy",
      "contactcenterinsights.issueModels.export",
      "contactcenterinsights.issueModels.get",
      "contactcenterinsights.issueModels.list",
      "contactcenterinsights.issueModels.undeploy",
      "contactcenterinsights.issueModels.update",
      "contactcenterinsights.issues.create",
      "contactcenterinsights.issues.delete",
      "contactcenterinsights.issues.get",
      "contactcenterinsights.issues.list",
      "contactcenterinsights.issues.update",
      "contactcenterinsights.operations.get",
      "contactcenterinsights.operations.list",
      "contactcenterinsights.phraseMatchers.create",
      "contactcenterinsights.phraseMatchers.delete",
      "contactcenterinsights.phraseMatchers.get",
      "contactcenterinsights.phraseMatchers.list",
      "contactcenterinsights.phraseMatchers.update",
      "contactcenterinsights.settings.get",
      "contactcenterinsights.settings.update",
      "contactcenterinsights.views.create",
      "contactcenterinsights.views.delete",
      "contactcenterinsights.views.get",
      "contactcenterinsights.views.list",
      "contactcenterinsights.views.update",
      "container.apiServices.create",
      "container.apiServices.delete",
      "container.apiServices.get",
      "container.apiServices.getStatus",
      "container.apiServices.list",
      "container.apiServices.update",
      "container.apiServices.updateStatus",
      "container.auditSinks.create",
      "container.auditSinks.delete",
      "container.auditSinks.get",
      "container.auditSinks.list",
      "container.auditSinks.update",
      "container.backendConfigs.create",
      "container.backendConfigs.delete",
      "container.backendConfigs.get",
      "container.backendConfigs.list",
      "container.backendConfigs.update",
      "container.bindings.create",
      "container.bindings.delete",
      "container.bindings.get",
      "container.bindings.list",
      "container.bindings.update",
      "container.certificateSigningRequests.create",
      "container.certificateSigningRequests.delete",
      "container.certificateSigningRequests.get",
      "container.certificateSigningRequests.getStatus",
      "container.certificateSigningRequests.list",
      "container.certificateSigningRequests.update",
      "container.certificateSigningRequests.updateStatus",
      "container.clusterRoleBindings.get",
      "container.clusterRoleBindings.list",
      "container.clusterRoles.get",
      "container.clusterRoles.list",
      "container.clusters.create",
      "container.clusters.delete",
      "container.clusters.get",
      "container.clusters.getCredentials",
      "container.clusters.list",
      "container.clusters.listEffectiveTags",
      "container.clusters.listTagBindings",
      "container.clusters.update",
      "container.componentStatuses.get",
      "container.componentStatuses.list",
      "container.configMaps.create",
      "container.configMaps.delete",
      "container.configMaps.get",
      "container.configMaps.list",
      "container.configMaps.update",
      "container.controllerRevisions.create",
      "container.controllerRevisions.delete",
      "container.controllerRevisions.get",
      "container.controllerRevisions.list",
      "container.controllerRevisions.update",
      "container.cronJobs.create",
      "container.cronJobs.delete",
      "container.cronJobs.get",
      "container.cronJobs.getStatus",
      "container.cronJobs.list",
      "container.cronJobs.update",
      "container.cronJobs.updateStatus",
      "container.csiDrivers.create",
      "container.csiDrivers.delete",
      "container.csiDrivers.get",
      "container.csiDrivers.list",
      "container.csiDrivers.update",
      "container.csiNodeInfos.create",
      "container.csiNodeInfos.delete",
      "container.csiNodeInfos.get",
      "container.csiNodeInfos.list",
      "container.csiNodeInfos.update",
      "container.csiNodes.create",
      "container.csiNodes.delete",
      "container.csiNodes.get",
      "container.csiNodes.list",
      "container.csiNodes.update",
      "container.customResourceDefinitions.create",
      "container.customResourceDefinitions.delete",
      "container.customResourceDefinitions.get",
      "container.customResourceDefinitions.getStatus",
      "container.customResourceDefinitions.list",
      "container.customResourceDefinitions.update",
      "container.customResourceDefinitions.updateStatus",
      "container.daemonSets.create",
      "container.daemonSets.delete",
      "container.daemonSets.get",
      "container.daemonSets.getStatus",
      "container.daemonSets.list",
      "container.daemonSets.update",
      "container.daemonSets.updateStatus",
      "container.deployments.create",
      "container.deployments.delete",
      "container.deployments.get",
      "container.deployments.getScale",
      "container.deployments.getStatus",
      "container.deployments.list",
      "container.deployments.rollback",
      "container.deployments.update",
      "container.deployments.updateScale",
      "container.deployments.updateStatus",
      "container.endpointSlices.create",
      "container.endpointSlices.delete",
      "container.endpointSlices.get",
      "container.endpointSlices.list",
      "container.endpointSlices.update",
      "container.endpoints.create",
      "container.endpoints.delete",
      "container.endpoints.get",
      "container.endpoints.list",
      "container.endpoints.update",
      "container.events.create",
      "container.events.delete",
      "container.events.get",
      "container.events.list",
      "container.events.update",
      "container.frontendConfigs.create",
      "container.frontendConfigs.delete",
      "container.frontendConfigs.get",
      "container.frontendConfigs.list",
      "container.frontendConfigs.update",
      "container.horizontalPodAutoscalers.create",
      "container.horizontalPodAutoscalers.delete",
      "container.horizontalPodAutoscalers.get",
      "container.horizontalPodAutoscalers.getStatus",
      "container.horizontalPodAutoscalers.list",
      "container.horizontalPodAutoscalers.update",
      "container.horizontalPodAutoscalers.updateStatus",
      "container.ingresses.create",
      "container.ingresses.delete",
      "container.ingresses.get",
      "container.ingresses.getStatus",
      "container.ingresses.list",
      "container.ingresses.update",
      "container.ingresses.updateStatus",
      "container.initializerConfigurations.create",
      "container.initializerConfigurations.delete",
      "container.initializerConfigurations.get",
      "container.initializerConfigurations.list",
      "container.initializerConfigurations.update",
      "container.jobs.create",
      "container.jobs.delete",
      "container.jobs.get",
      "container.jobs.getStatus",
      "container.jobs.list",
      "container.jobs.update",
      "container.jobs.updateStatus",
      "container.leases.create",
      "container.leases.delete",
      "container.leases.get",
      "container.leases.list",
      "container.leases.update",
      "container.limitRanges.create",
      "container.limitRanges.delete",
      "container.limitRanges.get",
      "container.limitRanges.list",
      "container.limitRanges.update",
      "container.localSubjectAccessReviews.list",
      "container.managedCertificates.create",
      "container.managedCertificates.delete",
      "container.managedCertificates.get",
      "container.managedCertificates.list",
      "container.managedCertificates.update",
      "container.mutatingWebhookConfigurations.create",
      "container.mutatingWebhookConfigurations.delete",
      "container.mutatingWebhookConfigurations.get",
      "container.mutatingWebhookConfigurations.list",
      "container.mutatingWebhookConfigurations.update",
      "container.namespaces.create",
      "container.namespaces.delete",
      "container.namespaces.finalize",
      "container.namespaces.get",
      "container.namespaces.getStatus",
      "container.namespaces.list",
      "container.namespaces.update",
      "container.namespaces.updateStatus",
      "container.networkPolicies.create",
      "container.networkPolicies.delete",
      "container.networkPolicies.get",
      "container.networkPolicies.list",
      "container.networkPolicies.update",
      "container.nodes.create",
      "container.nodes.delete",
      "container.nodes.get",
      "container.nodes.getStatus",
      "container.nodes.list",
      "container.nodes.proxy",
      "container.nodes.update",
      "container.nodes.updateStatus",
      "container.operations.get",
      "container.operations.list",
      "container.persistentVolumeClaims.create",
      "container.persistentVolumeClaims.delete",
      "container.persistentVolumeClaims.get",
      "container.persistentVolumeClaims.getStatus",
      "container.persistentVolumeClaims.list",
      "container.persistentVolumeClaims.update",
      "container.persistentVolumeClaims.updateStatus",
      "container.persistentVolumes.create",
      "container.persistentVolumes.delete",
      "container.persistentVolumes.get",
      "container.persistentVolumes.getStatus",
      "container.persistentVolumes.list",
      "container.persistentVolumes.update",
      "container.persistentVolumes.updateStatus",
      "container.petSets.create",
      "container.petSets.delete",
      "container.petSets.get",
      "container.petSets.list",
      "container.petSets.update",
      "container.petSets.updateStatus",
      "container.podDisruptionBudgets.create",
      "container.podDisruptionBudgets.delete",
      "container.podDisruptionBudgets.get",
      "container.podDisruptionBudgets.getStatus",
      "container.podDisruptionBudgets.list",
      "container.podDisruptionBudgets.update",
      "container.podDisruptionBudgets.updateStatus",
      "container.podPresets.create",
      "container.podPresets.delete",
      "container.podPresets.get",
      "container.podPresets.list",
      "container.podPresets.update",
      "container.podSecurityPolicies.create",
      "container.podSecurityPolicies.delete",
      "container.podSecurityPolicies.get",
      "container.podSecurityPolicies.list",
      "container.podSecurityPolicies.update",
      "container.podSecurityPolicies.use",
      "container.podTemplates.create",
      "container.podTemplates.delete",
      "container.podTemplates.get",
      "container.podTemplates.list",
      "container.podTemplates.update",
      "container.pods.attach",
      "container.pods.create",
      "container.pods.delete",
      "container.pods.evict",
      "container.pods.exec",
      "container.pods.get",
      "container.pods.getLogs",
      "container.pods.getStatus",
      "container.pods.initialize",
      "container.pods.list",
      "container.pods.portForward",
      "container.pods.proxy",
      "container.pods.update",
      "container.pods.updateStatus",
      "container.priorityClasses.create",
      "container.priorityClasses.delete",
      "container.priorityClasses.get",
      "container.priorityClasses.list",
      "container.priorityClasses.update",
      "container.replicaSets.create",
      "container.replicaSets.delete",
      "container.replicaSets.get",
      "container.replicaSets.getScale",
      "container.replicaSets.getStatus",
      "container.replicaSets.list",
      "container.replicaSets.update",
      "container.replicaSets.updateScale",
      "container.replicaSets.updateStatus",
      "container.replicationControllers.create",
      "container.replicationControllers.delete",
      "container.replicationControllers.get",
      "container.replicationControllers.getScale",
      "container.replicationControllers.getStatus",
      "container.replicationControllers.list",
      "container.replicationControllers.update",
      "container.replicationControllers.updateScale",
      "container.replicationControllers.updateStatus",
      "container.resourceQuotas.create",
      "container.resourceQuotas.delete",
      "container.resourceQuotas.get",
      "container.resourceQuotas.getStatus",
      "container.resourceQuotas.list",
      "container.resourceQuotas.update",
      "container.resourceQuotas.updateStatus",
      "container.roleBindings.get",
      "container.roleBindings.list",
      "container.roles.get",
      "container.roles.list",
      "container.runtimeClasses.create",
      "container.runtimeClasses.delete",
      "container.runtimeClasses.get",
      "container.runtimeClasses.list",
      "container.runtimeClasses.update",
      "container.scheduledJobs.create",
      "container.scheduledJobs.delete",
      "container.scheduledJobs.get",
      "container.scheduledJobs.list",
      "container.scheduledJobs.update",
      "container.scheduledJobs.updateStatus",
      "container.secrets.create",
      "container.secrets.delete",
      "container.secrets.get",
      "container.secrets.list",
      "container.secrets.update",
      "container.selfSubjectAccessReviews.create",
      "container.selfSubjectAccessReviews.list",
      "container.selfSubjectRulesReviews.create",
      "container.serviceAccounts.create",
      "container.serviceAccounts.delete",
      "container.serviceAccounts.get",
      "container.serviceAccounts.list",
      "container.serviceAccounts.update",
      "container.services.create",
      "container.services.delete",
      "container.services.get",
      "container.services.getStatus",
      "container.services.list",
      "container.services.proxy",
      "container.services.update",
      "container.services.updateStatus",
      "container.statefulSets.create",
      "container.statefulSets.delete",
      "container.statefulSets.get",
      "container.statefulSets.getScale",
      "container.statefulSets.getStatus",
      "container.statefulSets.list",
      "container.statefulSets.update",
      "container.statefulSets.updateScale",
      "container.statefulSets.updateStatus",
      "container.storageClasses.create",
      "container.storageClasses.delete",
      "container.storageClasses.get",
      "container.storageClasses.list",
      "container.storageClasses.update",
      "container.storageStates.create",
      "container.storageStates.delete",
      "container.storageStates.get",
      "container.storageStates.getStatus",
      "container.storageStates.list",
      "container.storageStates.update",
      "container.storageStates.updateStatus",
      "container.storageVersionMigrations.create",
      "container.storageVersionMigrations.delete",
      "container.storageVersionMigrations.get",
      "container.storageVersionMigrations.getStatus",
      "container.storageVersionMigrations.list",
      "container.storageVersionMigrations.update",
      "container.storageVersionMigrations.updateStatus",
      "container.subjectAccessReviews.list",
      "container.thirdPartyObjects.create",
      "container.thirdPartyObjects.delete",
      "container.thirdPartyObjects.get",
      "container.thirdPartyObjects.list",
      "container.thirdPartyObjects.update",
      "container.thirdPartyResources.create",
      "container.thirdPartyResources.delete",
      "container.thirdPartyResources.get",
      "container.thirdPartyResources.list",
      "container.thirdPartyResources.update",
      "container.tokenReviews.create",
      "container.updateInfos.create",
      "container.updateInfos.delete",
      "container.updateInfos.get",
      "container.updateInfos.list",
      "container.updateInfos.update",
      "container.validatingWebhookConfigurations.create",
      "container.validatingWebhookConfigurations.delete",
      "container.validatingWebhookConfigurations.get",
      "container.validatingWebhookConfigurations.list",
      "container.validatingWebhookConfigurations.update",
      "container.volumeAttachments.create",
      "container.volumeAttachments.delete",
      "container.volumeAttachments.get",
      "container.volumeAttachments.getStatus",
      "container.volumeAttachments.list",
      "container.volumeAttachments.update",
      "container.volumeAttachments.updateStatus",
      "container.volumeSnapshotClasses.create",
      "container.volumeSnapshotClasses.delete",
      "container.volumeSnapshotClasses.get",
      "container.volumeSnapshotClasses.list",
      "container.volumeSnapshotClasses.update",
      "container.volumeSnapshotContents.create",
      "container.volumeSnapshotContents.delete",
      "container.volumeSnapshotContents.get",
      "container.volumeSnapshotContents.getStatus",
      "container.volumeSnapshotContents.list",
      "container.volumeSnapshotContents.update",
      "container.volumeSnapshotContents.updateStatus",
      "container.volumeSnapshots.create",
      "container.volumeSnapshots.delete",
      "container.volumeSnapshots.get",
      "container.volumeSnapshots.getStatus",
      "container.volumeSnapshots.list",
      "container.volumeSnapshots.update",
      "container.volumeSnapshots.updateStatus",
      "containeranalysis.notes.attachOccurrence",
      "containeranalysis.notes.create",
      "containeranalysis.notes.delete",
      "containeranalysis.notes.get",
      "containeranalysis.notes.getIamPolicy",
      "containeranalysis.notes.list",
      "containeranalysis.notes.listOccurrences",
      "containeranalysis.notes.update",
      "containeranalysis.occurrences.create",
      "containeranalysis.occurrences.delete",
      "containeranalysis.occurrences.get",
      "containeranalysis.occurrences.getIamPolicy",
      "containeranalysis.occurrences.list",
      "containeranalysis.occurrences.update",
      "containersecurity.clusterSummaries.list",
      "containersecurity.findings.list",
      "containersecurity.locations.get",
      "containersecurity.locations.list",
      "containersecurity.workloadConfigAudits.list",
      "contentwarehouse.dataExportJobs.create",
      "contentwarehouse.dataExportJobs.update",
      "contentwarehouse.documentSchemas.create",
      "contentwarehouse.documentSchemas.delete",
      "contentwarehouse.documentSchemas.get",
      "contentwarehouse.documentSchemas.list",
      "contentwarehouse.documentSchemas.update",
      "contentwarehouse.documents.create",
      "contentwarehouse.documents.delete",
      "contentwarehouse.documents.get",
      "contentwarehouse.documents.getIamPolicy",
      "contentwarehouse.documents.update",
      "contentwarehouse.links.create",
      "contentwarehouse.links.delete",
      "contentwarehouse.links.get",
      "contentwarehouse.links.update",
      "contentwarehouse.locations.initialize",
      "contentwarehouse.operations.get",
      "contentwarehouse.rawDocuments.download",
      "contentwarehouse.rawDocuments.upload",
      "contentwarehouse.ruleSets.create",
      "contentwarehouse.ruleSets.delete",
      "contentwarehouse.ruleSets.get",
      "contentwarehouse.ruleSets.list",
      "contentwarehouse.ruleSets.update",
      "contentwarehouse.schemas.create",
      "contentwarehouse.schemas.delete",
      "contentwarehouse.schemas.get",
      "contentwarehouse.schemas.list",
      "contentwarehouse.schemas.update",
      "contentwarehouse.synonymSets.create",
      "contentwarehouse.synonymSets.delete",
      "contentwarehouse.synonymSets.get",
      "contentwarehouse.synonymSets.list",
      "contentwarehouse.synonymSets.update",
      "datacatalog.catalogs.searchAll",
      "datacatalog.categories.getIamPolicy",
      "datacatalog.entries.create",
      "datacatalog.entries.createGlossary",
      "datacatalog.entries.createGlossaryCategory",
      "datacatalog.entries.createGlossaryTerm",
      "datacatalog.entries.delete",
      "datacatalog.entries.deleteGlossary",
      "datacatalog.entries.deleteGlossaryCategory",
      "datacatalog.entries.deleteGlossaryTerm",
      "datacatalog.entries.get",
      "datacatalog.entries.getIamPolicy",
      "datacatalog.entries.list",
      "datacatalog.entries.update",
      "datacatalog.entries.updateContacts",
      "datacatalog.entries.updateGlossary",
      "datacatalog.entries.updateGlossaryCategory",
      "datacatalog.entries.updateGlossaryTerm",
      "datacatalog.entries.updateOverview",
      "datacatalog.entries.updateTag",
      "datacatalog.entryGroups.create",
      "datacatalog.entryGroups.delete",
      "datacatalog.entryGroups.get",
      "datacatalog.entryGroups.getIamPolicy",
      "datacatalog.entryGroups.list",
      "datacatalog.entryGroups.update",
      "datacatalog.entryGroups.updateTag",
      "datacatalog.operations.list",
      "datacatalog.relationships.create",
      "datacatalog.relationships.createBelongsTo",
      "datacatalog.relationships.createIsDescribedBy",
      "datacatalog.relationships.createIsRelatedTo",
      "datacatalog.relationships.createIsSynonymousTo",
      "datacatalog.relationships.delete",
      "datacatalog.relationships.deleteBelongsTo",
      "datacatalog.relationships.deleteIsDescribedBy",
      "datacatalog.relationships.deleteIsRelatedTo",
      "datacatalog.relationships.deleteIsSynonymousTo",
      "datacatalog.relationships.list",
      "datacatalog.tagTemplates.create",
      "datacatalog.tagTemplates.delete",
      "datacatalog.tagTemplates.get",
      "datacatalog.tagTemplates.getIamPolicy",
      "datacatalog.tagTemplates.getTag",
      "datacatalog.tagTemplates.update",
      "datacatalog.tagTemplates.use",
      "datacatalog.taxonomies.get",
      "datacatalog.taxonomies.getIamPolicy",
      "datacatalog.taxonomies.list",
      "dataconnectors.connectors.create",
      "dataconnectors.connectors.delete",
      "dataconnectors.connectors.get",
      "dataconnectors.connectors.getIamPolicy",
      "dataconnectors.connectors.list",
      "dataconnectors.connectors.update",
      "dataconnectors.connectors.use",
      "dataconnectors.locations.get",
      "dataconnectors.locations.list",
      "dataconnectors.operations.cancel",
      "dataconnectors.operations.delete",
      "dataconnectors.operations.get",
      "dataconnectors.operations.list",
      "dataflow.jobs.cancel",
      "dataflow.jobs.create",
      "dataflow.jobs.get",
      "dataflow.jobs.list",
      "dataflow.jobs.snapshot",
      "dataflow.jobs.updateContents",
      "dataflow.messages.list",
      "dataflow.metrics.get",
      "dataflow.shuffle.read",
      "dataflow.shuffle.write",
      "dataflow.snapshots.delete",
      "dataflow.snapshots.get",
      "dataflow.snapshots.list",
      "dataflow.streamingWorkItems.ImportState",
      "dataflow.streamingWorkItems.commitWork",
      "dataflow.streamingWorkItems.getData",
      "dataflow.streamingWorkItems.getWork",
      "dataflow.streamingWorkItems.getWorkerMetadata",
      "dataflow.workItems.lease",
      "dataflow.workItems.sendMessage",
      "dataflow.workItems.update",
      "dataform.compilationResults.create",
      "dataform.compilationResults.get",
      "dataform.compilationResults.list",
      "dataform.compilationResults.query",
      "dataform.locations.get",
      "dataform.locations.list",
      "dataform.releaseConfigs.create",
      "dataform.releaseConfigs.delete",
      "dataform.releaseConfigs.get",
      "dataform.releaseConfigs.list",
      "dataform.releaseConfigs.update",
      "dataform.repositories.commit",
      "dataform.repositories.computeAccessTokenStatus",
      "dataform.repositories.create",
      "dataform.repositories.delete",
      "dataform.repositories.fetchHistory",
      "dataform.repositories.fetchRemoteBranches",
      "dataform.repositories.get",
      "dataform.repositories.getIamPolicy",
      "dataform.repositories.list",
      "dataform.repositories.queryDirectoryContents",
      "dataform.repositories.readFile",
      "dataform.repositories.update",
      "dataform.workflowConfigs.create",
      "dataform.workflowConfigs.delete",
      "dataform.workflowConfigs.get",
      "dataform.workflowConfigs.list",
      "dataform.workflowConfigs.update",
      "dataform.workflowInvocations.cancel",
      "dataform.workflowInvocations.create",
      "dataform.workflowInvocations.delete",
      "dataform.workflowInvocations.get",
      "dataform.workflowInvocations.list",
      "dataform.workflowInvocations.query",
      "dataform.workspaces.commit",
      "dataform.workspaces.create",
      "dataform.workspaces.delete",
      "dataform.workspaces.fetchFileDiff",
      "dataform.workspaces.fetchFileGitStatuses",
      "dataform.workspaces.fetchGitAheadBehind",
      "dataform.workspaces.get",
      "dataform.workspaces.getIamPolicy",
      "dataform.workspaces.installNpmPackages",
      "dataform.workspaces.list",
      "dataform.workspaces.makeDirectory",
      "dataform.workspaces.moveDirectory",
      "dataform.workspaces.moveFile",
      "dataform.workspaces.pull",
      "dataform.workspaces.push",
      "dataform.workspaces.queryDirectoryContents",
      "dataform.workspaces.readFile",
      "dataform.workspaces.removeDirectory",
      "dataform.workspaces.removeFile",
      "dataform.workspaces.reset",
      "dataform.workspaces.writeFile",
      "datafusion.artifacts.create",
      "datafusion.artifacts.delete",
      "datafusion.artifacts.get",
      "datafusion.artifacts.list",
      "datafusion.artifacts.update",
      "datafusion.instances.create",
      "datafusion.instances.delete",
      "datafusion.instances.get",
      "datafusion.instances.getIamPolicy",
      "datafusion.instances.list",
      "datafusion.instances.restart",
      "datafusion.instances.runtime",
      "datafusion.instances.update",
      "datafusion.instances.upgrade",
      "datafusion.locations.get",
      "datafusion.locations.list",
      "datafusion.operations.cancel",
      "datafusion.operations.delete",
      "datafusion.operations.get",
      "datafusion.operations.list",
      "datafusion.pipelineConnections.create",
      "datafusion.pipelineConnections.delete",
      "datafusion.pipelineConnections.get",
      "datafusion.pipelineConnections.list",
      "datafusion.pipelineConnections.update",
      "datafusion.pipelineConnections.use",
      "datafusion.pipelines.create",
      "datafusion.pipelines.delete",
      "datafusion.pipelines.execute",
      "datafusion.pipelines.get",
      "datafusion.pipelines.list",
      "datafusion.pipelines.preview",
      "datafusion.pipelines.update",
      "datafusion.profiles.create",
      "datafusion.profiles.delete",
      "datafusion.profiles.get",
      "datafusion.profiles.list",
      "datafusion.profiles.update",
      "datafusion.secureKeys.create",
      "datafusion.secureKeys.delete",
      "datafusion.secureKeys.getSecret",
      "datafusion.secureKeys.list",
      "datafusion.secureKeys.update",
      "datalabeling.annotateddatasets.delete",
      "datalabeling.annotateddatasets.get",
      "datalabeling.annotateddatasets.label",
      "datalabeling.annotateddatasets.list",
      "datalabeling.annotationspecsets.create",
      "datalabeling.annotationspecsets.delete",
      "datalabeling.annotationspecsets.get",
      "datalabeling.annotationspecsets.list",
      "datalabeling.dataitems.get",
      "datalabeling.dataitems.list",
      "datalabeling.datasets.create",
      "datalabeling.datasets.delete",
      "datalabeling.datasets.export",
      "datalabeling.datasets.get",
      "datalabeling.datasets.import",
      "datalabeling.datasets.list",
      "datalabeling.examples.get",
      "datalabeling.examples.list",
      "datalabeling.instructions.create",
      "datalabeling.instructions.delete",
      "datalabeling.instructions.get",
      "datalabeling.instructions.list",
      "datalabeling.operations.cancel",
      "datalabeling.operations.get",
      "datalabeling.operations.list",
      "datalineage.events.create",
      "datalineage.events.delete",
      "datalineage.events.get",
      "datalineage.events.list",
      "datalineage.locations.searchLinks",
      "datalineage.operations.get",
      "datalineage.processes.create",
      "datalineage.processes.delete",
      "datalineage.processes.get",
      "datalineage.processes.list",
      "datalineage.processes.update",
      "datalineage.runs.create",
      "datalineage.runs.delete",
      "datalineage.runs.get",
      "datalineage.runs.list",
      "datalineage.runs.update",
      "datamigration.connectionprofiles.create",
      "datamigration.connectionprofiles.delete",
      "datamigration.connectionprofiles.get",
      "datamigration.connectionprofiles.getIamPolicy",
      "datamigration.connectionprofiles.list",
      "datamigration.connectionprofiles.update",
      "datamigration.conversionworkspaces.commit",
      "datamigration.conversionworkspaces.convert",
      "datamigration.conversionworkspaces.create",
      "datamigration.conversionworkspaces.delete",
      "datamigration.conversionworkspaces.get",
      "datamigration.conversionworkspaces.getIamPolicy",
      "datamigration.conversionworkspaces.list",
      "datamigration.conversionworkspaces.rollback",
      "datamigration.conversionworkspaces.seed",
      "datamigration.conversionworkspaces.update",
      "datamigration.locations.fetchStaticIps",
      "datamigration.locations.get",
      "datamigration.locations.list",
      "datamigration.mappingrules.getIamPolicy",
      "datamigration.mappingrules.import",
      "datamigration.migrationjobs.create",
      "datamigration.migrationjobs.delete",
      "datamigration.migrationjobs.generateSshScript",
      "datamigration.migrationjobs.generateTcpProxyScript",
      "datamigration.migrationjobs.get",
      "datamigration.migrationjobs.getIamPolicy",
      "datamigration.migrationjobs.list",
      "datamigration.migrationjobs.promote",
      "datamigration.migrationjobs.restart",
      "datamigration.migrationjobs.resume",
      "datamigration.migrationjobs.start",
      "datamigration.migrationjobs.stop",
      "datamigration.migrationjobs.update",
      "datamigration.migrationjobs.verify",
      "datamigration.operations.cancel",
      "datamigration.operations.delete",
      "datamigration.operations.get",
      "datamigration.operations.list",
      "datamigration.privateconnections.create",
      "datamigration.privateconnections.delete",
      "datamigration.privateconnections.get",
      "datamigration.privateconnections.getIamPolicy",
      "datamigration.privateconnections.list",
      "datapipelines.jobs.list",
      "datapipelines.pipelines.create",
      "datapipelines.pipelines.delete",
      "datapipelines.pipelines.get",
      "datapipelines.pipelines.list",
      "datapipelines.pipelines.run",
      "datapipelines.pipelines.stop",
      "datapipelines.pipelines.update",
      "dataplex.assetActions.list",
      "dataplex.assets.create",
      "dataplex.assets.delete",
      "dataplex.assets.get",
      "dataplex.assets.getIamPolicy",
      "dataplex.assets.list",
      "dataplex.assets.readData",
      "dataplex.assets.update",
      "dataplex.assets.writeData",
      "dataplex.content.create",
      "dataplex.content.delete",
      "dataplex.content.get",
      "dataplex.content.getIamPolicy",
      "dataplex.content.list",
      "dataplex.content.update",
      "dataplex.dataAttributeBindings.create",
      "dataplex.dataAttributeBindings.delete",
      "dataplex.dataAttributeBindings.get",
      "dataplex.dataAttributeBindings.getIamPolicy",
      "dataplex.dataAttributeBindings.list",
      "dataplex.dataAttributeBindings.update",
      "dataplex.dataAttributes.bind",
      "dataplex.dataAttributes.create",
      "dataplex.dataAttributes.delete",
      "dataplex.dataAttributes.get",
      "dataplex.dataAttributes.getIamPolicy",
      "dataplex.dataAttributes.list",
      "dataplex.dataAttributes.update",
      "dataplex.dataTaxonomies.configureDataAccess",
      "dataplex.dataTaxonomies.configureResourceAccess",
      "dataplex.dataTaxonomies.create",
      "dataplex.dataTaxonomies.delete",
      "dataplex.dataTaxonomies.get",
      "dataplex.dataTaxonomies.getIamPolicy",
      "dataplex.dataTaxonomies.list",
      "dataplex.dataTaxonomies.update",
      "dataplex.datascans.create",
      "dataplex.datascans.delete",
      "dataplex.datascans.get",
      "dataplex.datascans.getData",
      "dataplex.datascans.getIamPolicy",
      "dataplex.datascans.list",
      "dataplex.datascans.run",
      "dataplex.datascans.update",
      "dataplex.entities.create",
      "dataplex.entities.delete",
      "dataplex.entities.get",
      "dataplex.entities.list",
      "dataplex.entities.update",
      "dataplex.environments.create",
      "dataplex.environments.delete",
      "dataplex.environments.execute",
      "dataplex.environments.get",
      "dataplex.environments.getIamPolicy",
      "dataplex.environments.list",
      "dataplex.environments.update",
      "dataplex.lakeActions.list",
      "dataplex.lakes.create",
      "dataplex.lakes.delete",
      "dataplex.lakes.get",
      "dataplex.lakes.getIamPolicy",
      "dataplex.lakes.list",
      "dataplex.lakes.update",
      "dataplex.locations.get",
      "dataplex.locations.list",
      "dataplex.operations.cancel",
      "dataplex.operations.delete",
      "dataplex.operations.get",
      "dataplex.operations.list",
      "dataplex.partitions.create",
      "dataplex.partitions.delete",
      "dataplex.partitions.get",
      "dataplex.partitions.list",
      "dataplex.partitions.update",
      "dataplex.tasks.cancel",
      "dataplex.tasks.create",
      "dataplex.tasks.delete",
      "dataplex.tasks.get",
      "dataplex.tasks.getIamPolicy",
      "dataplex.tasks.list",
      "dataplex.tasks.run",
      "dataplex.tasks.update",
      "dataplex.zoneActions.list",
      "dataplex.zones.create",
      "dataplex.zones.delete",
      "dataplex.zones.get",
      "dataplex.zones.getIamPolicy",
      "dataplex.zones.list",
      "dataplex.zones.update",
      "dataprep.projects.use",
      "dataproc.agents.create",
      "dataproc.agents.delete",
      "dataproc.agents.get",
      "dataproc.agents.list",
      "dataproc.agents.update",
      "dataproc.autoscalingPolicies.create",
      "dataproc.autoscalingPolicies.delete",
      "dataproc.autoscalingPolicies.get",
      "dataproc.autoscalingPolicies.getIamPolicy",
      "dataproc.autoscalingPolicies.list",
      "dataproc.autoscalingPolicies.update",
      "dataproc.autoscalingPolicies.use",
      "dataproc.batches.cancel",
      "dataproc.batches.create",
      "dataproc.batches.delete",
      "dataproc.batches.get",
      "dataproc.batches.list",
      "dataproc.clusters.create",
      "dataproc.clusters.delete",
      "dataproc.clusters.get",
      "dataproc.clusters.getIamPolicy",
      "dataproc.clusters.list",
      "dataproc.clusters.start",
      "dataproc.clusters.stop",
      "dataproc.clusters.update",
      "dataproc.clusters.use",
      "dataproc.jobs.cancel",
      "dataproc.jobs.create",
      "dataproc.jobs.delete",
      "dataproc.jobs.get",
      "dataproc.jobs.getIamPolicy",
      "dataproc.jobs.list",
      "dataproc.jobs.update",
      "dataproc.nodeGroups.create",
      "dataproc.nodeGroups.get",
      "dataproc.nodeGroups.update",
      "dataproc.operations.cancel",
      "dataproc.operations.delete",
      "dataproc.operations.get",
      "dataproc.operations.getIamPolicy",
      "dataproc.operations.list",
      "dataproc.tasks.lease",
      "dataproc.tasks.listInvalidatedLeases",
      "dataproc.tasks.reportStatus",
      "dataproc.workflowTemplates.create",
      "dataproc.workflowTemplates.delete",
      "dataproc.workflowTemplates.get",
      "dataproc.workflowTemplates.getIamPolicy",
      "dataproc.workflowTemplates.instantiate",
      "dataproc.workflowTemplates.instantiateInline",
      "dataproc.workflowTemplates.list",
      "dataproc.workflowTemplates.update",
      "dataprocessing.datasources.get",
      "dataprocessing.datasources.list",
      "dataprocessing.datasources.update",
      "dataprocessing.featurecontrols.list",
      "dataprocessing.groupcontrols.get",
      "dataprocessing.groupcontrols.list",
      "datastore.databases.get",
      "datastore.databases.getMetadata",
      "datastore.databases.list",
      "datastore.databases.listEffectiveTags",
      "datastore.databases.listTagBindings",
      "datastore.databases.update",
      "datastore.entities.allocateIds",
      "datastore.entities.create",
      "datastore.entities.delete",
      "datastore.entities.get",
      "datastore.entities.list",
      "datastore.entities.update",
      "datastore.indexes.create",
      "datastore.indexes.delete",
      "datastore.indexes.get",
      "datastore.indexes.list",
      "datastore.indexes.update",
      "datastore.keyVisualizerScans.get",
      "datastore.keyVisualizerScans.list",
      "datastore.namespaces.get",
      "datastore.namespaces.list",
      "datastore.operations.get",
      "datastore.operations.list",
      "datastore.statistics.get",
      "datastore.statistics.list",
      "datastream.connectionProfiles.create",
      "datastream.connectionProfiles.delete",
      "datastream.connectionProfiles.destinationTypes",
      "datastream.connectionProfiles.discover",
      "datastream.connectionProfiles.get",
      "datastream.connectionProfiles.getIamPolicy",
      "datastream.connectionProfiles.list",
      "datastream.connectionProfiles.listEffectiveTags",
      "datastream.connectionProfiles.listStaticServiceIps",
      "datastream.connectionProfiles.listTagBindings",
      "datastream.connectionProfiles.sourceTypes",
      "datastream.connectionProfiles.update",
      "datastream.locations.fetchStaticIps",
      "datastream.locations.get",
      "datastream.locations.list",
      "datastream.objects.get",
      "datastream.objects.list",
      "datastream.objects.startBackfillJob",
      "datastream.objects.stopBackfillJob",
      "datastream.operations.cancel",
      "datastream.operations.delete",
      "datastream.operations.get",
      "datastream.operations.list",
      "datastream.privateConnections.create",
      "datastream.privateConnections.delete",
      "datastream.privateConnections.get",
      "datastream.privateConnections.getIamPolicy",
      "datastream.privateConnections.list",
      "datastream.privateConnections.listEffectiveTags",
      "datastream.privateConnections.listTagBindings",
      "datastream.routes.create",
      "datastream.routes.delete",
      "datastream.routes.get",
      "datastream.routes.getIamPolicy",
      "datastream.routes.list",
      "datastream.streams.computeState",
      "datastream.streams.create",
      "datastream.streams.delete",
      "datastream.streams.fetchErrors",
      "datastream.streams.get",
      "datastream.streams.getIamPolicy",
      "datastream.streams.list",
      "datastream.streams.listEffectiveTags",
      "datastream.streams.listTagBindings",
      "datastream.streams.pause",
      "datastream.streams.resume",
      "datastream.streams.start",
      "datastream.streams.update",
      "datastudio.datasources.delete",
      "datastudio.datasources.get",
      "datastudio.datasources.getIamPolicy",
      "datastudio.datasources.move",
      "datastudio.datasources.restoreTrash",
      "datastudio.datasources.search",
      "datastudio.datasources.trash",
      "datastudio.datasources.update",
      "datastudio.reports.delete",
      "datastudio.reports.get",
      "datastudio.reports.getIamPolicy",
      "datastudio.reports.move",
      "datastudio.reports.restoreTrash",
      "datastudio.reports.search",
      "datastudio.reports.trash",
      "datastudio.reports.update",
      "datastudio.workspaces.createUnder",
      "datastudio.workspaces.delete",
      "datastudio.workspaces.get",
      "datastudio.workspaces.getIamPolicy",
      "datastudio.workspaces.moveIn",
      "datastudio.workspaces.moveOut",
      "datastudio.workspaces.restoreTrash",
      "datastudio.workspaces.search",
      "datastudio.workspaces.trash",
      "datastudio.workspaces.update",
      "deploymentmanager.compositeTypes.create",
      "deploymentmanager.compositeTypes.delete",
      "deploymentmanager.compositeTypes.get",
      "deploymentmanager.compositeTypes.list",
      "deploymentmanager.compositeTypes.update",
      "deploymentmanager.deployments.cancelPreview",
      "deploymentmanager.deployments.create",
      "deploymentmanager.deployments.delete",
      "deploymentmanager.deployments.get",
      "deploymentmanager.deployments.list",
      "deploymentmanager.deployments.stop",
      "deploymentmanager.deployments.update",
      "deploymentmanager.manifests.get",
      "deploymentmanager.manifests.list",
      "deploymentmanager.operations.get",
      "deploymentmanager.operations.list",
      "deploymentmanager.resources.get",
      "deploymentmanager.resources.list",
      "deploymentmanager.typeProviders.create",
      "deploymentmanager.typeProviders.delete",
      "deploymentmanager.typeProviders.get",
      "deploymentmanager.typeProviders.getType",
      "deploymentmanager.typeProviders.list",
      "deploymentmanager.typeProviders.listTypes",
      "deploymentmanager.typeProviders.update",
      "deploymentmanager.types.create",
      "deploymentmanager.types.delete",
      "deploymentmanager.types.get",
      "deploymentmanager.types.list",
      "deploymentmanager.types.update",
      "dialogflow.agents.create",
      "dialogflow.agents.delete",
      "dialogflow.agents.export",
      "dialogflow.agents.get",
      "dialogflow.agents.import",
      "dialogflow.agents.list",
      "dialogflow.agents.restore",
      "dialogflow.agents.search",
      "dialogflow.agents.searchResources",
      "dialogflow.agents.train",
      "dialogflow.agents.update",
      "dialogflow.agents.validate",
      "dialogflow.answerrecords.delete",
      "dialogflow.answerrecords.get",
      "dialogflow.answerrecords.list",
      "dialogflow.answerrecords.update",
      "dialogflow.callMatchers.create",
      "dialogflow.callMatchers.delete",
      "dialogflow.callMatchers.list",
      "dialogflow.changelogs.get",
      "dialogflow.changelogs.list",
      "dialogflow.contexts.create",
      "dialogflow.contexts.delete",
      "dialogflow.contexts.get",
      "dialogflow.contexts.list",
      "dialogflow.contexts.update",
      "dialogflow.conversationDatasets.create",
      "dialogflow.conversationDatasets.delete",
      "dialogflow.conversationDatasets.get",
      "dialogflow.conversationDatasets.import",
      "dialogflow.conversationDatasets.list",
      "dialogflow.conversationModels.create",
      "dialogflow.conversationModels.delete",
      "dialogflow.conversationModels.deploy",
      "dialogflow.conversationModels.get",
      "dialogflow.conversationModels.list",
      "dialogflow.conversationModels.undeploy",
      "dialogflow.conversationProfiles.create",
      "dialogflow.conversationProfiles.delete",
      "dialogflow.conversationProfiles.get",
      "dialogflow.conversationProfiles.list",
      "dialogflow.conversationProfiles.update",
      "dialogflow.conversations.addPhoneNumber",
      "dialogflow.conversations.complete",
      "dialogflow.conversations.create",
      "dialogflow.conversations.get",
      "dialogflow.conversations.list",
      "dialogflow.conversations.update",
      "dialogflow.deployments.get",
      "dialogflow.deployments.list",
      "dialogflow.documents.create",
      "dialogflow.documents.delete",
      "dialogflow.documents.get",
      "dialogflow.documents.list",
      "dialogflow.entityTypes.create",
      "dialogflow.entityTypes.createEntity",
      "dialogflow.entityTypes.delete",
      "dialogflow.entityTypes.deleteEntity",
      "dialogflow.entityTypes.get",
      "dialogflow.entityTypes.list",
      "dialogflow.entityTypes.update",
      "dialogflow.entityTypes.updateEntity",
      "dialogflow.environments.create",
      "dialogflow.environments.delete",
      "dialogflow.environments.get",
      "dialogflow.environments.getHistory",
      "dialogflow.environments.list",
      "dialogflow.environments.lookupHistory",
      "dialogflow.environments.runContinuousTest",
      "dialogflow.environments.update",
      "dialogflow.experiments.create",
      "dialogflow.experiments.delete",
      "dialogflow.experiments.get",
      "dialogflow.experiments.list",
      "dialogflow.experiments.update",
      "dialogflow.flows.create",
      "dialogflow.flows.delete",
      "dialogflow.flows.get",
      "dialogflow.flows.list",
      "dialogflow.flows.train",
      "dialogflow.flows.update",
      "dialogflow.flows.validate",
      "dialogflow.fulfillments.get",
      "dialogflow.fulfillments.update",
      "dialogflow.integrations.create",
      "dialogflow.integrations.delete",
      "dialogflow.integrations.get",
      "dialogflow.integrations.list",
      "dialogflow.integrations.update",
      "dialogflow.intents.create",
      "dialogflow.intents.delete",
      "dialogflow.intents.get",
      "dialogflow.intents.list",
      "dialogflow.intents.update",
      "dialogflow.knowledgeBases.create",
      "dialogflow.knowledgeBases.delete",
      "dialogflow.knowledgeBases.get",
      "dialogflow.knowledgeBases.list",
      "dialogflow.knowledgeBases.update",
      "dialogflow.messages.list",
      "dialogflow.modelEvaluations.get",
      "dialogflow.modelEvaluations.list",
      "dialogflow.operations.get",
      "dialogflow.pages.create",
      "dialogflow.pages.delete",
      "dialogflow.pages.get",
      "dialogflow.pages.list",
      "dialogflow.pages.update",
      "dialogflow.participants.analyzeContent",
      "dialogflow.participants.create",
      "dialogflow.participants.get",
      "dialogflow.participants.list",
      "dialogflow.participants.suggest",
      "dialogflow.participants.update",
      "dialogflow.phoneNumberOrders.cancel",
      "dialogflow.phoneNumberOrders.create",
      "dialogflow.phoneNumberOrders.get",
      "dialogflow.phoneNumberOrders.list",
      "dialogflow.phoneNumberOrders.update",
      "dialogflow.phoneNumbers.delete",
      "dialogflow.phoneNumbers.list",
      "dialogflow.phoneNumbers.undelete",
      "dialogflow.phoneNumbers.update",
      "dialogflow.securitySettings.create",
      "dialogflow.securitySettings.delete",
      "dialogflow.securitySettings.get",
      "dialogflow.securitySettings.list",
      "dialogflow.securitySettings.update",
      "dialogflow.sessionEntityTypes.create",
      "dialogflow.sessionEntityTypes.delete",
      "dialogflow.sessionEntityTypes.get",
      "dialogflow.sessionEntityTypes.list",
      "dialogflow.sessionEntityTypes.update",
      "dialogflow.sessions.detectIntent",
      "dialogflow.sessions.streamingDetectIntent",
      "dialogflow.smartMessagingEntries.create",
      "dialogflow.smartMessagingEntries.delete",
      "dialogflow.smartMessagingEntries.get",
      "dialogflow.smartMessagingEntries.list",
      "dialogflow.testcases.calculateCoverage",
      "dialogflow.testcases.create",
      "dialogflow.testcases.delete",
      "dialogflow.testcases.export",
      "dialogflow.testcases.get",
      "dialogflow.testcases.import",
      "dialogflow.testcases.list",
      "dialogflow.testcases.run",
      "dialogflow.testcases.update",
      "dialogflow.transitionRouteGroups.create",
      "dialogflow.transitionRouteGroups.delete",
      "dialogflow.transitionRouteGroups.get",
      "dialogflow.transitionRouteGroups.list",
      "dialogflow.transitionRouteGroups.update",
      "dialogflow.versions.create",
      "dialogflow.versions.delete",
      "dialogflow.versions.get",
      "dialogflow.versions.list",
      "dialogflow.versions.load",
      "dialogflow.versions.update",
      "dialogflow.webhooks.create",
      "dialogflow.webhooks.delete",
      "dialogflow.webhooks.get",
      "dialogflow.webhooks.list",
      "dialogflow.webhooks.update",
      "discoveryengine.completionConfigs.get",
      "discoveryengine.completionConfigs.update",
      "discoveryengine.controls.create",
      "discoveryengine.controls.delete",
      "discoveryengine.controls.get",
      "discoveryengine.controls.list",
      "discoveryengine.controls.update",
      "discoveryengine.conversations.converse",
      "discoveryengine.conversations.create",
      "discoveryengine.conversations.delete",
      "discoveryengine.conversations.get",
      "discoveryengine.conversations.list",
      "discoveryengine.conversations.update",
      "discoveryengine.dataStores.completeQuery",
      "discoveryengine.dataStores.create",
      "discoveryengine.dataStores.delete",
      "discoveryengine.dataStores.enrollSolutions",
      "discoveryengine.dataStores.get",
      "discoveryengine.dataStores.list",
      "discoveryengine.dataStores.update",
      "discoveryengine.documents.create",
      "discoveryengine.documents.delete",
      "discoveryengine.documents.get",
      "discoveryengine.documents.import",
      "discoveryengine.documents.list",
      "discoveryengine.documents.purge",
      "discoveryengine.documents.update",
      "discoveryengine.engines.create",
      "discoveryengine.engines.delete",
      "discoveryengine.engines.get",
      "discoveryengine.engines.list",
      "discoveryengine.engines.update",
      "discoveryengine.models.create",
      "discoveryengine.models.delete",
      "discoveryengine.models.get",
      "discoveryengine.models.list",
      "discoveryengine.models.pause",
      "discoveryengine.models.resume",
      "discoveryengine.models.tune",
      "discoveryengine.models.update",
      "discoveryengine.operations.get",
      "discoveryengine.operations.list",
      "discoveryengine.projects.get",
      "discoveryengine.projects.provision",
      "discoveryengine.projects.reportConsentChange",
      "discoveryengine.schemas.create",
      "discoveryengine.schemas.delete",
      "discoveryengine.schemas.get",
      "discoveryengine.schemas.list",
      "discoveryengine.schemas.update",
      "discoveryengine.servingConfigs.create",
      "discoveryengine.servingConfigs.delete",
      "discoveryengine.servingConfigs.get",
      "discoveryengine.servingConfigs.list",
      "discoveryengine.servingConfigs.recommend",
      "discoveryengine.servingConfigs.search",
      "discoveryengine.servingConfigs.update",
      "discoveryengine.siteSearchEngines.get",
      "discoveryengine.targetSites.batchCreate",
      "discoveryengine.targetSites.create",
      "discoveryengine.targetSites.delete",
      "discoveryengine.targetSites.get",
      "discoveryengine.targetSites.list",
      "discoveryengine.targetSites.update",
      "discoveryengine.userEvents.create",
      "discoveryengine.userEvents.fetchStats",
      "discoveryengine.userEvents.import",
      "discoveryengine.userEvents.purge",
      "discoveryengine.widgetConfigs.get",
      "discoveryengine.widgetConfigs.update",
      "dlp.analyzeRiskTemplates.create",
      "dlp.analyzeRiskTemplates.delete",
      "dlp.analyzeRiskTemplates.get",
      "dlp.analyzeRiskTemplates.list",
      "dlp.analyzeRiskTemplates.update",
      "dlp.columnDataProfiles.get",
      "dlp.columnDataProfiles.list",
      "dlp.deidentifyTemplates.create",
      "dlp.deidentifyTemplates.delete",
      "dlp.deidentifyTemplates.get",
      "dlp.deidentifyTemplates.list",
      "dlp.deidentifyTemplates.update",
      "dlp.estimates.cancel",
      "dlp.estimates.create",
      "dlp.estimates.delete",
      "dlp.estimates.get",
      "dlp.estimates.list",
      "dlp.inspectFindings.list",
      "dlp.inspectTemplates.create",
      "dlp.inspectTemplates.delete",
      "dlp.inspectTemplates.get",
      "dlp.inspectTemplates.list",
      "dlp.inspectTemplates.update",
      "dlp.jobTriggers.create",
      "dlp.jobTriggers.delete",
      "dlp.jobTriggers.get",
      "dlp.jobTriggers.hybridInspect",
      "dlp.jobTriggers.list",
      "dlp.jobTriggers.update",
      "dlp.jobs.cancel",
      "dlp.jobs.create",
      "dlp.jobs.delete",
      "dlp.jobs.get",
      "dlp.jobs.hybridInspect",
      "dlp.jobs.list",
      "dlp.locations.get",
      "dlp.locations.list",
      "dlp.projectDataProfiles.get",
      "dlp.projectDataProfiles.list",
      "dlp.storedInfoTypes.create",
      "dlp.storedInfoTypes.delete",
      "dlp.storedInfoTypes.get",
      "dlp.storedInfoTypes.list",
      "dlp.storedInfoTypes.update",
      "dlp.subscriptions.cancel",
      "dlp.subscriptions.create",
      "dlp.subscriptions.get",
      "dlp.subscriptions.list",
      "dlp.subscriptions.update",
      "dlp.tableDataProfiles.get",
      "dlp.tableDataProfiles.list",
      "dns.changes.create",
      "dns.changes.get",
      "dns.changes.list",
      "dns.dnsKeys.get",
      "dns.dnsKeys.list",
      "dns.gkeClusters.bindDNSResponsePolicy",
      "dns.gkeClusters.bindPrivateDNSZone",
      "dns.managedZoneOperations.get",
      "dns.managedZoneOperations.list",
      "dns.managedZones.create",
      "dns.managedZones.delete",
      "dns.managedZones.get",
      "dns.managedZones.getIamPolicy",
      "dns.managedZones.list",
      "dns.managedZones.update",
      "dns.networks.bindDNSResponsePolicy",
      "dns.networks.bindPrivateDNSPolicy",
      "dns.networks.bindPrivateDNSZone",
      "dns.networks.targetWithPeeringZone",
      "dns.networks.useHealthSignals",
      "dns.policies.create",
      "dns.policies.delete",
      "dns.policies.get",
      "dns.policies.getIamPolicy",
      "dns.policies.list",
      "dns.policies.update",
      "dns.projects.get",
      "dns.resourceRecordSets.create",
      "dns.resourceRecordSets.delete",
      "dns.resourceRecordSets.get",
      "dns.resourceRecordSets.list",
      "dns.resourceRecordSets.update",
      "dns.responsePolicies.create",
      "dns.responsePolicies.delete",
      "dns.responsePolicies.get",
      "dns.responsePolicies.list",
      "dns.responsePolicies.update",
      "dns.responsePolicyRules.create",
      "dns.responsePolicyRules.delete",
      "dns.responsePolicyRules.get",
      "dns.responsePolicyRules.list",
      "dns.responsePolicyRules.update",
      "documentai.dataLabelingJobs.cancel",
      "documentai.dataLabelingJobs.create",
      "documentai.dataLabelingJobs.delete",
      "documentai.dataLabelingJobs.list",
      "documentai.dataLabelingJobs.update",
      "documentai.datasetSchemas.get",
      "documentai.datasetSchemas.update",
      "documentai.datasets.createDocuments",
      "documentai.datasets.deleteDocuments",
      "documentai.datasets.get",
      "documentai.datasets.getDocuments",
      "documentai.datasets.listDocuments",
      "documentai.datasets.update",
      "documentai.datasets.updateDocuments",
      "documentai.evaluationDocuments.get",
      "documentai.evaluations.create",
      "documentai.evaluations.get",
      "documentai.evaluations.list",
      "documentai.humanReviewConfigs.get",
      "documentai.humanReviewConfigs.review",
      "documentai.humanReviewConfigs.update",
      "documentai.labelerPools.create",
      "documentai.labelerPools.delete",
      "documentai.labelerPools.get",
      "documentai.labelerPools.list",
      "documentai.labelerPools.update",
      "documentai.locations.get",
      "documentai.locations.list",
      "documentai.operations.getLegacy",
      "documentai.processedDocumentsSets.get",
      "documentai.processedDocumentsSets.getDocuments",
      "documentai.processedDocumentsSets.listDocuments",
      "documentai.processorTypes.get",
      "documentai.processorTypes.list",
      "documentai.processorVersions.create",
      "documentai.processorVersions.delete",
      "documentai.processorVersions.get",
      "documentai.processorVersions.list",
      "documentai.processorVersions.processBatch",
      "documentai.processorVersions.processOnline",
      "documentai.processorVersions.update",
      "documentai.processors.create",
      "documentai.processors.delete",
      "documentai.processors.fetchHumanReviewDetails",
      "documentai.processors.get",
      "documentai.processors.list",
      "documentai.processors.processBatch",
      "documentai.processors.processOnline",
      "documentai.processors.update",
      "domains.locations.get",
      "domains.locations.list",
      "domains.operations.cancel",
      "domains.operations.get",
      "domains.operations.list",
      "domains.registrations.configureContact",
      "domains.registrations.configureDns",
      "domains.registrations.configureManagement",
      "domains.registrations.create",
      "domains.registrations.delete",
      "domains.registrations.get",
      "domains.registrations.getIamPolicy",
      "domains.registrations.list",
      "domains.registrations.listEffectiveTags",
      "domains.registrations.listTagBindings",
      "domains.registrations.update",
      "earthengine.assets.create",
      "earthengine.assets.delete",
      "earthengine.assets.get",
      "earthengine.assets.getIamPolicy",
      "earthengine.assets.list",
      "earthengine.assets.update",
      "earthengine.computations.create",
      "earthengine.config.get",
      "earthengine.config.update",
      "earthengine.exports.create",
      "earthengine.featureviews.create",
      "earthengine.filmstripthumbnails.create",
      "earthengine.filmstripthumbnails.get",
      "earthengine.imports.create",
      "earthengine.maps.create",
      "earthengine.maps.get",
      "earthengine.operations.delete",
      "earthengine.operations.get",
      "earthengine.operations.list",
      "earthengine.operations.update",
      "earthengine.tables.create",
      "earthengine.tables.get",
      "earthengine.thumbnails.create",
      "earthengine.thumbnails.get",
      "earthengine.videothumbnails.create",
      "earthengine.videothumbnails.get",
      "edgecontainer.clusters.create",
      "edgecontainer.clusters.delete",
      "edgecontainer.clusters.generateAccessToken",
      "edgecontainer.clusters.get",
      "edgecontainer.clusters.getIamPolicy",
      "edgecontainer.clusters.list",
      "edgecontainer.clusters.update",
      "edgecontainer.locations.get",
      "edgecontainer.locations.list",
      "edgecontainer.machines.create",
      "edgecontainer.machines.delete",
      "edgecontainer.machines.get",
      "edgecontainer.machines.getIamPolicy",
      "edgecontainer.machines.list",
      "edgecontainer.machines.update",
      "edgecontainer.machines.use",
      "edgecontainer.nodePools.create",
      "edgecontainer.nodePools.delete",
      "edgecontainer.nodePools.get",
      "edgecontainer.nodePools.getIamPolicy",
      "edgecontainer.nodePools.list",
      "edgecontainer.nodePools.update",
      "edgecontainer.operations.cancel",
      "edgecontainer.operations.delete",
      "edgecontainer.operations.get",
      "edgecontainer.operations.list",
      "edgecontainer.vpnConnections.create",
      "edgecontainer.vpnConnections.delete",
      "edgecontainer.vpnConnections.get",
      "edgecontainer.vpnConnections.getIamPolicy",
      "edgecontainer.vpnConnections.list",
      "edgecontainer.vpnConnections.update",
      "edgenetwork.interconnectAttachments.create",
      "edgenetwork.interconnectAttachments.delete",
      "edgenetwork.interconnectAttachments.get",
      "edgenetwork.interconnectAttachments.getIamPolicy",
      "edgenetwork.interconnectAttachments.list",
      "edgenetwork.interconnectAttachments.update",
      "edgenetwork.interconnects.get",
      "edgenetwork.interconnects.getDiagnostics",
      "edgenetwork.interconnects.getIamPolicy",
      "edgenetwork.interconnects.list",
      "edgenetwork.locations.get",
      "edgenetwork.locations.list",
      "edgenetwork.networks.create",
      "edgenetwork.networks.delete",
      "edgenetwork.networks.get",
      "edgenetwork.networks.getIamPolicy",
      "edgenetwork.networks.getStatus",
      "edgenetwork.networks.list",
      "edgenetwork.networks.update",
      "edgenetwork.operations.cancel",
      "edgenetwork.operations.delete",
      "edgenetwork.operations.get",
      "edgenetwork.operations.list",
      "edgenetwork.routers.create",
      "edgenetwork.routers.delete",
      "edgenetwork.routers.get",
      "edgenetwork.routers.getIamPolicy",
      "edgenetwork.routers.getRouterStatus",
      "edgenetwork.routers.list",
      "edgenetwork.routers.patch",
      "edgenetwork.routers.update",
      "edgenetwork.routes.create",
      "edgenetwork.routes.delete",
      "edgenetwork.routes.get",
      "edgenetwork.routes.list",
      "edgenetwork.subnetworks.create",
      "edgenetwork.subnetworks.delete",
      "edgenetwork.subnetworks.get",
      "edgenetwork.subnetworks.getIamPolicy",
      "edgenetwork.subnetworks.getStatus",
      "edgenetwork.subnetworks.list",
      "edgenetwork.subnetworks.update",
      "edgenetwork.zones.get",
      "edgenetwork.zones.initialize",
      "edgenetwork.zones.list",
      "enterpriseknowledgegraph.cloudKnowledgeGraphEntities.lookup",
      "enterpriseknowledgegraph.cloudKnowledgeGraphEntities.search",
      "enterpriseknowledgegraph.entityReconciliationJobs.cancel",
      "enterpriseknowledgegraph.entityReconciliationJobs.create",
      "enterpriseknowledgegraph.entityReconciliationJobs.delete",
      "enterpriseknowledgegraph.entityReconciliationJobs.get",
      "enterpriseknowledgegraph.entityReconciliationJobs.list",
      "enterpriseknowledgegraph.publicKnowledgeGraphEntities.lookup",
      "enterpriseknowledgegraph.publicKnowledgeGraphEntities.search",
      "errorreporting.applications.list",
      "errorreporting.errorEvents.create",
      "errorreporting.errorEvents.delete",
      "errorreporting.errorEvents.list",
      "errorreporting.groupMetadata.get",
      "errorreporting.groupMetadata.update",
      "errorreporting.groups.list",
      "essentialcontacts.contacts.create",
      "essentialcontacts.contacts.delete",
      "essentialcontacts.contacts.get",
      "essentialcontacts.contacts.list",
      "essentialcontacts.contacts.send",
      "essentialcontacts.contacts.update",
      "eventarc.channelConnections.create",
      "eventarc.channelConnections.delete",
      "eventarc.channelConnections.get",
      "eventarc.channelConnections.getIamPolicy",
      "eventarc.channelConnections.list",
      "eventarc.channelConnections.publish",
      "eventarc.channels.attach",
      "eventarc.channels.create",
      "eventarc.channels.delete",
      "eventarc.channels.get",
      "eventarc.channels.getIamPolicy",
      "eventarc.channels.list",
      "eventarc.channels.publish",
      "eventarc.channels.undelete",
      "eventarc.channels.update",
      "eventarc.events.receiveEvent",
      "eventarc.googleChannelConfigs.get",
      "eventarc.googleChannelConfigs.update",
      "eventarc.locations.get",
      "eventarc.locations.list",
      "eventarc.operations.cancel",
      "eventarc.operations.delete",
      "eventarc.operations.get",
      "eventarc.operations.list",
      "eventarc.providers.get",
      "eventarc.providers.list",
      "eventarc.triggers.create",
      "eventarc.triggers.delete",
      "eventarc.triggers.get",
      "eventarc.triggers.getIamPolicy",
      "eventarc.triggers.list",
      "eventarc.triggers.undelete",
      "eventarc.triggers.update",
      "fcmdata.deliverydata.list",
      "file.backups.create",
      "file.backups.delete",
      "file.backups.get",
      "file.backups.list",
      "file.backups.listEffectiveTags",
      "file.backups.listTagBindings",
      "file.backups.update",
      "file.instances.create",
      "file.instances.delete",
      "file.instances.get",
      "file.instances.list",
      "file.instances.listEffectiveTags",
      "file.instances.listTagBindings",
      "file.instances.restore",
      "file.instances.revert",
      "file.instances.update",
      "file.locations.get",
      "file.locations.list",
      "file.operations.cancel",
      "file.operations.delete",
      "file.operations.get",
      "file.operations.list",
      "file.snapshots.create",
      "file.snapshots.delete",
      "file.snapshots.get",
      "file.snapshots.list",
      "file.snapshots.listEffectiveTags",
      "file.snapshots.listTagBindings",
      "file.snapshots.update",
      "firebase.billingPlans.get",
      "firebase.clients.create",
      "firebase.clients.delete",
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.clients.undelete",
      "firebase.clients.update",
      "firebase.links.list",
      "firebase.playLinks.get",
      "firebase.playLinks.list",
      "firebase.projects.get",
      "firebase.projects.update",
      "firebaseabt.experimentresults.get",
      "firebaseabt.experiments.create",
      "firebaseabt.experiments.delete",
      "firebaseabt.experiments.get",
      "firebaseabt.experiments.list",
      "firebaseabt.experiments.update",
      "firebaseabt.projectmetadata.get",
      "firebaseanalytics.resources.googleAnalyticsEdit",
      "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze",
      "firebaseappcheck.appAttestConfig.get",
      "firebaseappcheck.appAttestConfig.update",
      "firebaseappcheck.debugTokens.get",
      "firebaseappcheck.debugTokens.update",
      "firebaseappcheck.deviceCheckConfig.get",
      "firebaseappcheck.deviceCheckConfig.update",
      "firebaseappcheck.playIntegrityConfig.get",
      "firebaseappcheck.playIntegrityConfig.update",
      "firebaseappcheck.recaptchaEnterpriseConfig.get",
      "firebaseappcheck.recaptchaEnterpriseConfig.update",
      "firebaseappcheck.recaptchaV3Config.get",
      "firebaseappcheck.recaptchaV3Config.update",
      "firebaseappcheck.safetyNetConfig.get",
      "firebaseappcheck.safetyNetConfig.update",
      "firebaseappcheck.services.get",
      "firebaseappcheck.services.update",
      "firebaseappdistro.groups.list",
      "firebaseappdistro.groups.update",
      "firebaseappdistro.releases.list",
      "firebaseappdistro.releases.update",
      "firebaseappdistro.testers.list",
      "firebaseappdistro.testers.update",
      "firebaseauth.configs.create",
      "firebaseauth.configs.get",
      "firebaseauth.configs.getHashConfig",
      "firebaseauth.configs.getSecret",
      "firebaseauth.configs.update",
      "firebaseauth.users.create",
      "firebaseauth.users.createSession",
      "firebaseauth.users.delete",
      "firebaseauth.users.get",
      "firebaseauth.users.sendEmail",
      "firebaseauth.users.update",
      "firebasecrash.issues.update",
      "firebasecrash.reports.get",
      "firebasecrashlytics.config.get",
      "firebasecrashlytics.config.update",
      "firebasecrashlytics.data.get",
      "firebasecrashlytics.issues.get",
      "firebasecrashlytics.issues.list",
      "firebasecrashlytics.issues.update",
      "firebasecrashlytics.sessions.get",
      "firebasedatabase.instances.create",
      "firebasedatabase.instances.delete",
      "firebasedatabase.instances.disable",
      "firebasedatabase.instances.get",
      "firebasedatabase.instances.list",
      "firebasedatabase.instances.reenable",
      "firebasedatabase.instances.undelete",
      "firebasedatabase.instances.update",
      "firebasedynamiclinks.destinations.list",
      "firebasedynamiclinks.domains.create",
      "firebasedynamiclinks.domains.get",
      "firebasedynamiclinks.domains.list",
      "firebasedynamiclinks.domains.update",
      "firebasedynamiclinks.links.create",
      "firebasedynamiclinks.links.get",
      "firebasedynamiclinks.links.list",
      "firebasedynamiclinks.links.update",
      "firebasedynamiclinks.stats.get",
      "firebaseextensions.configs.list",
      "firebaseextensionspublisher.extensions.create",
      "firebaseextensionspublisher.extensions.delete",
      "firebaseextensionspublisher.extensions.get",
      "firebaseextensionspublisher.extensions.list",
      "firebasehosting.sites.create",
      "firebasehosting.sites.delete",
      "firebasehosting.sites.get",
      "firebasehosting.sites.list",
      "firebasehosting.sites.update",
      "firebaseinappmessaging.campaigns.create",
      "firebaseinappmessaging.campaigns.delete",
      "firebaseinappmessaging.campaigns.get",
      "firebaseinappmessaging.campaigns.list",
      "firebaseinappmessaging.campaigns.update",
      "firebasemessagingcampaigns.campaigns.create",
      "firebasemessagingcampaigns.campaigns.delete",
      "firebasemessagingcampaigns.campaigns.get",
      "firebasemessagingcampaigns.campaigns.list",
      "firebasemessagingcampaigns.campaigns.start",
      "firebasemessagingcampaigns.campaigns.stop",
      "firebasemessagingcampaigns.campaigns.update",
      "firebaseml.models.create",
      "firebaseml.models.delete",
      "firebaseml.models.get",
      "firebaseml.models.list",
      "firebaseml.models.update",
      "firebaseml.modelversions.create",
      "firebaseml.modelversions.get",
      "firebaseml.modelversions.list",
      "firebaseml.modelversions.update",
      "firebasenotifications.messages.create",
      "firebasenotifications.messages.delete",
      "firebasenotifications.messages.get",
      "firebasenotifications.messages.list",
      "firebasenotifications.messages.update",
      "firebaseperformance.config.update",
      "firebaseperformance.data.get",
      "firebaserules.releases.create",
      "firebaserules.releases.delete",
      "firebaserules.releases.get",
      "firebaserules.releases.getExecutable",
      "firebaserules.releases.list",
      "firebaserules.releases.update",
      "firebaserules.rulesets.create",
      "firebaserules.rulesets.delete",
      "firebaserules.rulesets.get",
      "firebaserules.rulesets.list",
      "firebaserules.rulesets.test",
      "firebasestorage.buckets.addFirebase",
      "firebasestorage.buckets.get",
      "firebasestorage.buckets.list",
      "firebasestorage.buckets.removeFirebase",
      "fleetengine.deliveryvehicles.create",
      "fleetengine.deliveryvehicles.get",
      "fleetengine.deliveryvehicles.list",
      "fleetengine.deliveryvehicles.update",
      "fleetengine.deliveryvehicles.updateLocation",
      "fleetengine.deliveryvehicles.updateVehicleStops",
      "fleetengine.tasks.create",
      "fleetengine.tasks.get",
      "fleetengine.tasks.list",
      "fleetengine.tasks.searchWithTrackingId",
      "fleetengine.tasks.update",
      "fleetengine.tasktrackinginfo.get",
      "fleetengine.trips.create",
      "fleetengine.trips.get",
      "fleetengine.trips.search",
      "fleetengine.trips.update",
      "fleetengine.trips.updateState",
      "fleetengine.vehicles.create",
      "fleetengine.vehicles.get",
      "fleetengine.vehicles.list",
      "fleetengine.vehicles.search",
      "fleetengine.vehicles.searchFuzzed",
      "fleetengine.vehicles.update",
      "fleetengine.vehicles.updateLocation",
      "gameservices.gameServerClusters.create",
      "gameservices.gameServerClusters.delete",
      "gameservices.gameServerClusters.get",
      "gameservices.gameServerClusters.list",
      "gameservices.gameServerClusters.update",
      "gameservices.gameServerConfigs.create",
      "gameservices.gameServerConfigs.delete",
      "gameservices.gameServerConfigs.get",
      "gameservices.gameServerConfigs.list",
      "gameservices.gameServerDeployments.create",
      "gameservices.gameServerDeployments.delete",
      "gameservices.gameServerDeployments.get",
      "gameservices.gameServerDeployments.list",
      "gameservices.gameServerDeployments.rollout",
      "gameservices.gameServerDeployments.update",
      "gameservices.locations.get",
      "gameservices.locations.list",
      "gameservices.operations.cancel",
      "gameservices.operations.delete",
      "gameservices.operations.get",
      "gameservices.operations.list",
      "gameservices.realms.create",
      "gameservices.realms.delete",
      "gameservices.realms.get",
      "gameservices.realms.list",
      "gameservices.realms.update",
      "gcp.redisenterprise.com/databases.create",
      "gcp.redisenterprise.com/databases.delete",
      "gcp.redisenterprise.com/databases.get",
      "gcp.redisenterprise.com/databases.list",
      "gcp.redisenterprise.com/databases.update",
      "gcp.redisenterprise.com/subscriptions.create",
      "gcp.redisenterprise.com/subscriptions.delete",
      "gcp.redisenterprise.com/subscriptions.get",
      "gcp.redisenterprise.com/subscriptions.list",
      "gcp.redisenterprise.com/subscriptions.update",
      "genomics.datasets.create",
      "genomics.datasets.delete",
      "genomics.datasets.get",
      "genomics.datasets.list",
      "genomics.datasets.update",
      "genomics.operations.cancel",
      "genomics.operations.create",
      "genomics.operations.get",
      "genomics.operations.list",
      "gkebackup.backupPlans.create",
      "gkebackup.backupPlans.delete",
      "gkebackup.backupPlans.get",
      "gkebackup.backupPlans.getIamPolicy",
      "gkebackup.backupPlans.list",
      "gkebackup.backupPlans.update",
      "gkebackup.backups.create",
      "gkebackup.backups.delete",
      "gkebackup.backups.get",
      "gkebackup.backups.list",
      "gkebackup.backups.update",
      "gkebackup.locations.get",
      "gkebackup.locations.list",
      "gkebackup.operations.cancel",
      "gkebackup.operations.delete",
      "gkebackup.operations.get",
      "gkebackup.operations.list",
      "gkebackup.restorePlans.create",
      "gkebackup.restorePlans.delete",
      "gkebackup.restorePlans.get",
      "gkebackup.restorePlans.getIamPolicy",
      "gkebackup.restorePlans.list",
      "gkebackup.restorePlans.update",
      "gkebackup.restores.create",
      "gkebackup.restores.delete",
      "gkebackup.restores.get",
      "gkebackup.restores.list",
      "gkebackup.restores.update",
      "gkebackup.volumeBackups.get",
      "gkebackup.volumeBackups.list",
      "gkebackup.volumeRestores.get",
      "gkebackup.volumeRestores.list",
      "gkehub.features.create",
      "gkehub.features.delete",
      "gkehub.features.get",
      "gkehub.features.getIamPolicy",
      "gkehub.features.list",
      "gkehub.features.update",
      "gkehub.fleet.create",
      "gkehub.fleet.delete",
      "gkehub.fleet.get",
      "gkehub.fleet.update",
      "gkehub.gateway.delete",
      "gkehub.gateway.get",
      "gkehub.gateway.getIamPolicy",
      "gkehub.gateway.patch",
      "gkehub.gateway.post",
      "gkehub.gateway.put",
      "gkehub.locations.get",
      "gkehub.locations.list",
      "gkehub.membershipbindings.create",
      "gkehub.membershipbindings.delete",
      "gkehub.membershipbindings.get",
      "gkehub.membershipbindings.list",
      "gkehub.membershipbindings.update",
      "gkehub.memberships.create",
      "gkehub.memberships.delete",
      "gkehub.memberships.generateConnectManifest",
      "gkehub.memberships.get",
      "gkehub.memberships.getIamPolicy",
      "gkehub.memberships.list",
      "gkehub.memberships.update",
      "gkehub.namespaces.create",
      "gkehub.namespaces.delete",
      "gkehub.namespaces.get",
      "gkehub.namespaces.list",
      "gkehub.namespaces.update",
      "gkehub.operations.cancel",
      "gkehub.operations.delete",
      "gkehub.operations.get",
      "gkehub.operations.list",
      "gkehub.rbacrolebindings.create",
      "gkehub.rbacrolebindings.delete",
      "gkehub.rbacrolebindings.get",
      "gkehub.rbacrolebindings.list",
      "gkehub.rbacrolebindings.update",
      "gkehub.scopes.create",
      "gkehub.scopes.delete",
      "gkehub.scopes.get",
      "gkehub.scopes.getIamPolicy",
      "gkehub.scopes.list",
      "gkehub.scopes.update",
      "gkemulticloud.attachedClusters.create",
      "gkemulticloud.attachedClusters.delete",
      "gkemulticloud.attachedClusters.generateInstallManifest",
      "gkemulticloud.attachedClusters.get",
      "gkemulticloud.attachedClusters.import",
      "gkemulticloud.attachedClusters.list",
      "gkemulticloud.attachedClusters.update",
      "gkemulticloud.attachedServerConfigs.get",
      "gkemulticloud.awsClusters.create",
      "gkemulticloud.awsClusters.delete",
      "gkemulticloud.awsClusters.generateAccessToken",
      "gkemulticloud.awsClusters.get",
      "gkemulticloud.awsClusters.list",
      "gkemulticloud.awsClusters.update",
      "gkemulticloud.awsNodePools.create",
      "gkemulticloud.awsNodePools.delete",
      "gkemulticloud.awsNodePools.get",
      "gkemulticloud.awsNodePools.list",
      "gkemulticloud.awsNodePools.update",
      "gkemulticloud.awsServerConfigs.get",
      "gkemulticloud.azureClients.create",
      "gkemulticloud.azureClients.delete",
      "gkemulticloud.azureClients.get",
      "gkemulticloud.azureClients.list",
      "gkemulticloud.azureClusters.create",
      "gkemulticloud.azureClusters.delete",
      "gkemulticloud.azureClusters.generateAccessToken",
      "gkemulticloud.azureClusters.get",
      "gkemulticloud.azureClusters.list",
      "gkemulticloud.azureClusters.update",
      "gkemulticloud.azureNodePools.create",
      "gkemulticloud.azureNodePools.delete",
      "gkemulticloud.azureNodePools.get",
      "gkemulticloud.azureNodePools.list",
      "gkemulticloud.azureNodePools.update",
      "gkemulticloud.azureServerConfigs.get",
      "gkemulticloud.operations.cancel",
      "gkemulticloud.operations.delete",
      "gkemulticloud.operations.get",
      "gkemulticloud.operations.list",
      "gkemulticloud.operations.wait",
      "gkeonprem.bareMetalAdminClusters.connect",
      "gkeonprem.bareMetalAdminClusters.create",
      "gkeonprem.bareMetalAdminClusters.enroll",
      "gkeonprem.bareMetalAdminClusters.get",
      "gkeonprem.bareMetalAdminClusters.getIamPolicy",
      "gkeonprem.bareMetalAdminClusters.list",
      "gkeonprem.bareMetalAdminClusters.queryVersionConfig",
      "gkeonprem.bareMetalAdminClusters.unenroll",
      "gkeonprem.bareMetalAdminClusters.update",
      "gkeonprem.bareMetalClusters.create",
      "gkeonprem.bareMetalClusters.delete",
      "gkeonprem.bareMetalClusters.enroll",
      "gkeonprem.bareMetalClusters.get",
      "gkeonprem.bareMetalClusters.getIamPolicy",
      "gkeonprem.bareMetalClusters.list",
      "gkeonprem.bareMetalClusters.queryVersionConfig",
      "gkeonprem.bareMetalClusters.unenroll",
      "gkeonprem.bareMetalClusters.update",
      "gkeonprem.bareMetalNodePools.create",
      "gkeonprem.bareMetalNodePools.delete",
      "gkeonprem.bareMetalNodePools.enroll",
      "gkeonprem.bareMetalNodePools.get",
      "gkeonprem.bareMetalNodePools.getIamPolicy",
      "gkeonprem.bareMetalNodePools.list",
      "gkeonprem.bareMetalNodePools.unenroll",
      "gkeonprem.bareMetalNodePools.update",
      "gkeonprem.locations.get",
      "gkeonprem.locations.list",
      "gkeonprem.operations.cancel",
      "gkeonprem.operations.delete",
      "gkeonprem.operations.get",
      "gkeonprem.operations.list",
      "gkeonprem.vmwareAdminClusters.connect",
      "gkeonprem.vmwareAdminClusters.enroll",
      "gkeonprem.vmwareAdminClusters.get",
      "gkeonprem.vmwareAdminClusters.getIamPolicy",
      "gkeonprem.vmwareAdminClusters.list",
      "gkeonprem.vmwareAdminClusters.unenroll",
      "gkeonprem.vmwareAdminClusters.update",
      "gkeonprem.vmwareClusters.create",
      "gkeonprem.vmwareClusters.delete",
      "gkeonprem.vmwareClusters.enroll",
      "gkeonprem.vmwareClusters.get",
      "gkeonprem.vmwareClusters.getIamPolicy",
      "gkeonprem.vmwareClusters.list",
      "gkeonprem.vmwareClusters.queryVersionConfig",
      "gkeonprem.vmwareClusters.unenroll",
      "gkeonprem.vmwareClusters.update",
      "gkeonprem.vmwareNodePools.create",
      "gkeonprem.vmwareNodePools.delete",
      "gkeonprem.vmwareNodePools.enroll",
      "gkeonprem.vmwareNodePools.get",
      "gkeonprem.vmwareNodePools.getIamPolicy",
      "gkeonprem.vmwareNodePools.list",
      "gkeonprem.vmwareNodePools.unenroll",
      "gkeonprem.vmwareNodePools.update",
      "gsuiteaddons.authorizations.get",
      "gsuiteaddons.deployments.create",
      "gsuiteaddons.deployments.delete",
      "gsuiteaddons.deployments.execute",
      "gsuiteaddons.deployments.get",
      "gsuiteaddons.deployments.install",
      "gsuiteaddons.deployments.installStatus",
      "gsuiteaddons.deployments.list",
      "gsuiteaddons.deployments.uninstall",
      "gsuiteaddons.deployments.update",
      "healthcare.annotationStores.create",
      "healthcare.annotationStores.delete",
      "healthcare.annotationStores.evaluate",
      "healthcare.annotationStores.export",
      "healthcare.annotationStores.get",
      "healthcare.annotationStores.getIamPolicy",
      "healthcare.annotationStores.import",
      "healthcare.annotationStores.list",
      "healthcare.annotationStores.update",
      "healthcare.annotations.create",
      "healthcare.annotations.delete",
      "healthcare.annotations.get",
      "healthcare.annotations.list",
      "healthcare.annotations.update",
      "healthcare.attributeDefinitions.create",
      "healthcare.attributeDefinitions.delete",
      "healthcare.attributeDefinitions.get",
      "healthcare.attributeDefinitions.list",
      "healthcare.attributeDefinitions.update",
      "healthcare.consentArtifacts.create",
      "healthcare.consentArtifacts.delete",
      "healthcare.consentArtifacts.get",
      "healthcare.consentArtifacts.list",
      "healthcare.consentStores.checkDataAccess",
      "healthcare.consentStores.create",
      "healthcare.consentStores.delete",
      "healthcare.consentStores.evaluateUserConsents",
      "healthcare.consentStores.get",
      "healthcare.consentStores.getIamPolicy",
      "healthcare.consentStores.list",
      "healthcare.consentStores.queryAccessibleData",
      "healthcare.consentStores.update",
      "healthcare.consents.activate",
      "healthcare.consents.create",
      "healthcare.consents.delete",
      "healthcare.consents.get",
      "healthcare.consents.list",
      "healthcare.consents.reject",
      "healthcare.consents.revoke",
      "healthcare.consents.update",
      "healthcare.datasets.create",
      "healthcare.datasets.deidentify",
      "healthcare.datasets.delete",
      "healthcare.datasets.get",
      "healthcare.datasets.getIamPolicy",
      "healthcare.datasets.list",
      "healthcare.datasets.update",
      "healthcare.dicomStores.create",
      "healthcare.dicomStores.deidentify",
      "healthcare.dicomStores.delete",
      "healthcare.dicomStores.dicomWebDelete",
      "healthcare.dicomStores.dicomWebRead",
      "healthcare.dicomStores.dicomWebWrite",
      "healthcare.dicomStores.export",
      "healthcare.dicomStores.get",
      "healthcare.dicomStores.getIamPolicy",
      "healthcare.dicomStores.import",
      "healthcare.dicomStores.list",
      "healthcare.dicomStores.update",
      "healthcare.fhirResources.create",
      "healthcare.fhirResources.delete",
      "healthcare.fhirResources.get",
      "healthcare.fhirResources.patch",
      "healthcare.fhirResources.purge",
      "healthcare.fhirResources.translateConceptMap",
      "healthcare.fhirResources.update",
      "healthcare.fhirStores.configureSearch",
      "healthcare.fhirStores.create",
      "healthcare.fhirStores.deidentify",
      "healthcare.fhirStores.delete",
      "healthcare.fhirStores.executeBundle",
      "healthcare.fhirStores.export",
      "healthcare.fhirStores.get",
      "healthcare.fhirStores.getIamPolicy",
      "healthcare.fhirStores.import",
      "healthcare.fhirStores.list",
      "healthcare.fhirStores.searchResources",
      "healthcare.fhirStores.update",
      "healthcare.hl7V2Messages.create",
      "healthcare.hl7V2Messages.delete",
      "healthcare.hl7V2Messages.get",
      "healthcare.hl7V2Messages.ingest",
      "healthcare.hl7V2Messages.list",
      "healthcare.hl7V2Messages.update",
      "healthcare.hl7V2Stores.create",
      "healthcare.hl7V2Stores.delete",
      "healthcare.hl7V2Stores.get",
      "healthcare.hl7V2Stores.getIamPolicy",
      "healthcare.hl7V2Stores.import",
      "healthcare.hl7V2Stores.list",
      "healthcare.hl7V2Stores.update",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.nlpservice.analyzeEntities",
      "healthcare.operations.cancel",
      "healthcare.operations.get",
      "healthcare.operations.list",
      "healthcare.userDataMappings.archive",
      "healthcare.userDataMappings.create",
      "healthcare.userDataMappings.delete",
      "healthcare.userDataMappings.get",
      "healthcare.userDataMappings.list",
      "healthcare.userDataMappings.update",
      "iam.denypolicies.get",
      "iam.denypolicies.list",
      "iam.googleapis.com/workforcePoolProviderKeys.get",
      "iam.googleapis.com/workforcePoolProviderKeys.list",
      "iam.googleapis.com/workforcePoolProviders.get",
      "iam.googleapis.com/workforcePoolProviders.list",
      "iam.googleapis.com/workforcePools.get",
      "iam.googleapis.com/workforcePools.getIamPolicy",
      "iam.googleapis.com/workforcePools.list",
      "iam.googleapis.com/workloadIdentityPoolProviderKeys.get",
      "iam.googleapis.com/workloadIdentityPoolProviderKeys.list",
      "iam.googleapis.com/workloadIdentityPoolProviders.get",
      "iam.googleapis.com/workloadIdentityPoolProviders.list",
      "iam.googleapis.com/workloadIdentityPools.get",
      "iam.googleapis.com/workloadIdentityPools.list",
      "iam.roles.get",
      "iam.roles.list",
      "iam.serviceAccountKeys.create",
      "iam.serviceAccountKeys.delete",
      "iam.serviceAccountKeys.disable",
      "iam.serviceAccountKeys.enable",
      "iam.serviceAccountKeys.get",
      "iam.serviceAccountKeys.list",
      "iam.serviceAccounts.actAs",
      "iam.serviceAccounts.create",
      "iam.serviceAccounts.delete",
      "iam.serviceAccounts.disable",
      "iam.serviceAccounts.enable",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.getIamPolicy",
      "iam.serviceAccounts.list",
      "iam.serviceAccounts.update",
      "iap.projects.getSettings",
      "iap.projects.updateSettings",
      "iap.tunnelDestGroups.create",
      "iap.tunnelDestGroups.delete",
      "iap.tunnelDestGroups.get",
      "iap.tunnelDestGroups.list",
      "iap.tunnelDestGroups.update",
      "iap.web.getSettings",
      "iap.web.updateSettings",
      "iap.webServiceVersions.getSettings",
      "iap.webServiceVersions.updateSettings",
      "iap.webServices.getSettings",
      "iap.webServices.updateSettings",
      "iap.webTypes.getSettings",
      "iap.webTypes.updateSettings",
      "identitytoolkit.tenants.create",
      "identitytoolkit.tenants.delete",
      "identitytoolkit.tenants.get",
      "identitytoolkit.tenants.getIamPolicy",
      "identitytoolkit.tenants.list",
      "identitytoolkit.tenants.update",
      "ids.endpoints.create",
      "ids.endpoints.delete",
      "ids.endpoints.get",
      "ids.endpoints.getIamPolicy",
      "ids.endpoints.list",
      "ids.endpoints.update",
      "ids.locations.get",
      "ids.locations.list",
      "ids.operations.cancel",
      "ids.operations.delete",
      "ids.operations.get",
      "ids.operations.list",
      "integrations.apigeeAuthConfigs.create",
      "integrations.apigeeAuthConfigs.delete",
      "integrations.apigeeAuthConfigs.get",
      "integrations.apigeeAuthConfigs.list",
      "integrations.apigeeAuthConfigs.update",
      "integrations.apigeeCertificates.create",
      "integrations.apigeeCertificates.delete",
      "integrations.apigeeCertificates.get",
      "integrations.apigeeCertificates.list",
      "integrations.apigeeCertificates.update",
      "integrations.apigeeExecutions.list",
      "integrations.apigeeIntegrationVers.create",
      "integrations.apigeeIntegrationVers.delete",
      "integrations.apigeeIntegrationVers.deploy",
      "integrations.apigeeIntegrationVers.get",
      "integrations.apigeeIntegrationVers.list",
      "integrations.apigeeIntegrationVers.update",
      "integrations.apigeeIntegrations.invoke",
      "integrations.apigeeIntegrations.list",
      "integrations.apigeeSfdcChannels.create",
      "integrations.apigeeSfdcChannels.delete",
      "integrations.apigeeSfdcChannels.get",
      "integrations.apigeeSfdcChannels.list",
      "integrations.apigeeSfdcChannels.update",
      "integrations.apigeeSfdcInstances.create",
      "integrations.apigeeSfdcInstances.delete",
      "integrations.apigeeSfdcInstances.get",
      "integrations.apigeeSfdcInstances.list",
      "integrations.apigeeSfdcInstances.update",
      "integrations.apigeeSuspensions.lift",
      "integrations.apigeeSuspensions.list",
      "integrations.apigeeSuspensions.resolve",
      "integrations.authConfigs.create",
      "integrations.authConfigs.delete",
      "integrations.authConfigs.get",
      "integrations.authConfigs.list",
      "integrations.authConfigs.update",
      "integrations.certificates.create",
      "integrations.certificates.delete",
      "integrations.certificates.get",
      "integrations.certificates.list",
      "integrations.certificates.update",
      "integrations.executions.get",
      "integrations.executions.list",
      "integrations.integrationVersions.create",
      "integrations.integrationVersions.delete",
      "integrations.integrationVersions.deploy",
      "integrations.integrationVersions.get",
      "integrations.integrationVersions.invoke",
      "integrations.integrationVersions.list",
      "integrations.integrationVersions.update",
      "integrations.integrations.create",
      "integrations.integrations.delete",
      "integrations.integrations.deploy",
      "integrations.integrations.get",
      "integrations.integrations.invoke",
      "integrations.integrations.list",
      "integrations.integrations.update",
      "integrations.securityAuthConfigs.create",
      "integrations.securityAuthConfigs.delete",
      "integrations.securityAuthConfigs.get",
      "integrations.securityAuthConfigs.list",
      "integrations.securityAuthConfigs.update",
      "integrations.securityExecutions.cancel",
      "integrations.securityExecutions.get",
      "integrations.securityExecutions.list",
      "integrations.securityIntegTempVers.create",
      "integrations.securityIntegTempVers.get",
      "integrations.securityIntegTempVers.list",
      "integrations.securityIntegrationVers.create",
      "integrations.securityIntegrationVers.delete",
      "integrations.securityIntegrationVers.deploy",
      "integrations.securityIntegrationVers.get",
      "integrations.securityIntegrationVers.list",
      "integrations.securityIntegrationVers.update",
      "integrations.securityIntegrations.invoke",
      "integrations.securityIntegrations.list",
      "integrations.sfdcChannels.create",
      "integrations.sfdcChannels.delete",
      "integrations.sfdcChannels.get",
      "integrations.sfdcChannels.list",
      "integrations.sfdcChannels.update",
      "integrations.sfdcInstances.create",
      "integrations.sfdcInstances.delete",
      "integrations.sfdcInstances.get",
      "integrations.sfdcInstances.list",
      "integrations.sfdcInstances.update",
      "integrations.suspensions.lift",
      "integrations.suspensions.list",
      "integrations.suspensions.resolve",
      "issuerswitch.accountManagerTransactions.list",
      "issuerswitch.complaintTransactions.list",
      "issuerswitch.complaints.create",
      "issuerswitch.complaints.resolve",
      "issuerswitch.disputes.create",
      "issuerswitch.disputes.resolve",
      "issuerswitch.financialTransactions.list",
      "issuerswitch.issuerParticipants.get",
      "issuerswitch.issuerParticipants.update",
      "issuerswitch.mandateTransactions.list",
      "issuerswitch.metadataTransactions.list",
      "issuerswitch.operations.cancel",
      "issuerswitch.operations.delete",
      "issuerswitch.operations.get",
      "issuerswitch.operations.list",
      "issuerswitch.operations.wait",
      "issuerswitch.ruleMetadata.list",
      "issuerswitch.ruleMetadataValues.create",
      "issuerswitch.ruleMetadataValues.delete",
      "issuerswitch.ruleMetadataValues.list",
      "issuerswitch.rules.list",
      "krmapihosting.krmApiHosts.create",
      "krmapihosting.krmApiHosts.delete",
      "krmapihosting.krmApiHosts.get",
      "krmapihosting.krmApiHosts.getIamPolicy",
      "krmapihosting.krmApiHosts.list",
      "krmapihosting.krmApiHosts.update",
      "krmapihosting.locations.get",
      "krmapihosting.locations.list",
      "krmapihosting.operations.cancel",
      "krmapihosting.operations.delete",
      "krmapihosting.operations.get",
      "krmapihosting.operations.list",
      "lifesciences.operations.cancel",
      "lifesciences.operations.get",
      "lifesciences.operations.list",
      "lifesciences.workflows.run",
      "livestream.channels.create",
      "livestream.channels.delete",
      "livestream.channels.get",
      "livestream.channels.list",
      "livestream.channels.start",
      "livestream.channels.stop",
      "livestream.channels.update",
      "livestream.events.create",
      "livestream.events.delete",
      "livestream.events.get",
      "livestream.events.list",
      "livestream.inputs.create",
      "livestream.inputs.delete",
      "livestream.inputs.get",
      "livestream.inputs.list",
      "livestream.inputs.update",
      "livestream.locations.get",
      "livestream.locations.list",
      "livestream.operations.cancel",
      "livestream.operations.delete",
      "livestream.operations.get",
      "livestream.operations.list",
      "logging.buckets.copyLogEntries",
      "logging.buckets.get",
      "logging.buckets.list",
      "logging.exclusions.get",
      "logging.exclusions.list",
      "logging.links.create",
      "logging.links.delete",
      "logging.links.get",
      "logging.links.list",
      "logging.locations.get",
      "logging.locations.list",
      "logging.logEntries.create",
      "logging.logEntries.download",
      "logging.logEntries.list",
      "logging.logEntries.route",
      "logging.logMetrics.create",
      "logging.logMetrics.delete",
      "logging.logMetrics.get",
      "logging.logMetrics.list",
      "logging.logMetrics.update",
      "logging.logServiceIndexes.list",
      "logging.logServices.list",
      "logging.logs.delete",
      "logging.logs.list",
      "logging.notificationRules.create",
      "logging.notificationRules.delete",
      "logging.notificationRules.get",
      "logging.notificationRules.list",
      "logging.notificationRules.update",
      "logging.operations.cancel",
      "logging.operations.get",
      "logging.operations.list",
      "logging.queries.create",
      "logging.queries.delete",
      "logging.queries.get",
      "logging.queries.list",
      "logging.queries.listShared",
      "logging.queries.update",
      "logging.settings.get",
      "logging.settings.update",
      "logging.sinks.get",
      "logging.sinks.list",
      "logging.usage.get",
      "logging.views.create",
      "logging.views.delete",
      "logging.views.get",
      "logging.views.list",
      "logging.views.listLogs",
      "logging.views.listResourceKeys",
      "logging.views.listResourceValues",
      "logging.views.update",
      "looker.backups.create",
      "looker.backups.delete",
      "looker.backups.get",
      "looker.backups.list",
      "looker.instances.create",
      "looker.instances.delete",
      "looker.instances.export",
      "looker.instances.get",
      "looker.instances.import",
      "looker.instances.list",
      "looker.instances.login",
      "looker.instances.update",
      "looker.locations.get",
      "looker.locations.list",
      "looker.operations.cancel",
      "looker.operations.delete",
      "looker.operations.get",
      "looker.operations.list",
      "managedidentities.backups.create",
      "managedidentities.backups.delete",
      "managedidentities.backups.get",
      "managedidentities.backups.getIamPolicy",
      "managedidentities.backups.list",
      "managedidentities.backups.update",
      "managedidentities.domains.attachTrust",
      "managedidentities.domains.checkMigrationPermission",
      "managedidentities.domains.create",
      "managedidentities.domains.delete",
      "managedidentities.domains.detachTrust",
      "managedidentities.domains.disableMigration",
      "managedidentities.domains.domainJoinMachine",
      "managedidentities.domains.enableMigration",
      "managedidentities.domains.extendSchema",
      "managedidentities.domains.get",
      "managedidentities.domains.getIamPolicy",
      "managedidentities.domains.list",
      "managedidentities.domains.listEffectiveTags",
      "managedidentities.domains.listTagBindings",
      "managedidentities.domains.reconfigureTrust",
      "managedidentities.domains.resetpassword",
      "managedidentities.domains.restore",
      "managedidentities.domains.update",
      "managedidentities.domains.updateLDAPSSettings",
      "managedidentities.domains.validateTrust",
      "managedidentities.locations.get",
      "managedidentities.locations.list",
      "managedidentities.operations.cancel",
      "managedidentities.operations.delete",
      "managedidentities.operations.get",
      "managedidentities.operations.list",
      "managedidentities.peerings.create",
      "managedidentities.peerings.delete",
      "managedidentities.peerings.get",
      "managedidentities.peerings.getIamPolicy",
      "managedidentities.peerings.list",
      "managedidentities.peerings.update",
      "managedidentities.sqlintegrations.get",
      "managedidentities.sqlintegrations.list",
      "mapsadmin.clientMaps.create",
      "mapsadmin.clientMaps.delete",
      "mapsadmin.clientMaps.get",
      "mapsadmin.clientMaps.list",
      "mapsadmin.clientMaps.update",
      "mapsadmin.clientStyleActivationRules.update",
      "mapsadmin.clientStyleSheetSnapshots.list",
      "mapsadmin.clientStyleSheetSnapshots.update",
      "mapsadmin.clientStyles.create",
      "mapsadmin.clientStyles.delete",
      "mapsadmin.clientStyles.get",
      "mapsadmin.clientStyles.list",
      "mapsadmin.clientStyles.update",
      "mapsadmin.styleEditorConfigs.get",
      "mapsadmin.styleSnapshots.list",
      "mapsadmin.styleSnapshots.update",
      "mapsplatformdatasets.datasets.create",
      "mapsplatformdatasets.datasets.delete",
      "mapsplatformdatasets.datasets.export",
      "mapsplatformdatasets.datasets.get",
      "mapsplatformdatasets.datasets.import",
      "mapsplatformdatasets.datasets.list",
      "mapsplatformdatasets.datasets.update",
      "memcache.instances.applyParameters",
      "memcache.instances.applySoftwareUpdate",
      "memcache.instances.create",
      "memcache.instances.delete",
      "memcache.instances.get",
      "memcache.instances.list",
      "memcache.instances.rescheduleMaintenance",
      "memcache.instances.update",
      "memcache.instances.updateParameters",
      "memcache.locations.get",
      "memcache.locations.list",
      "memcache.operations.cancel",
      "memcache.operations.delete",
      "memcache.operations.get",
      "memcache.operations.list",
      "meshconfig.projects.get",
      "meshconfig.projects.init",
      "metastore.backups.create",
      "metastore.backups.delete",
      "metastore.backups.get",
      "metastore.backups.getIamPolicy",
      "metastore.backups.list",
      "metastore.backups.use",
      "metastore.databases.create",
      "metastore.databases.delete",
      "metastore.databases.get",
      "metastore.databases.getIamPolicy",
      "metastore.databases.list",
      "metastore.databases.update",
      "metastore.federations.create",
      "metastore.federations.delete",
      "metastore.federations.get",
      "metastore.federations.getIamPolicy",
      "metastore.federations.list",
      "metastore.federations.update",
      "metastore.federations.use",
      "metastore.imports.create",
      "metastore.imports.get",
      "metastore.imports.list",
      "metastore.imports.update",
      "metastore.locations.get",
      "metastore.locations.list",
      "metastore.operations.cancel",
      "metastore.operations.delete",
      "metastore.operations.get",
      "metastore.operations.list",
      "metastore.services.create",
      "metastore.services.delete",
      "metastore.services.export",
      "metastore.services.get",
      "metastore.services.getIamPolicy",
      "metastore.services.list",
      "metastore.services.restore",
      "metastore.services.update",
      "metastore.services.use",
      "metastore.tables.create",
      "metastore.tables.delete",
      "metastore.tables.get",
      "metastore.tables.getIamPolicy",
      "metastore.tables.list",
      "metastore.tables.update",
      "migrationcenter.assets.create",
      "migrationcenter.assets.delete",
      "migrationcenter.assets.get",
      "migrationcenter.assets.list",
      "migrationcenter.assets.reportFrames",
      "migrationcenter.assets.update",
      "migrationcenter.errorFrames.get",
      "migrationcenter.errorFrames.list",
      "migrationcenter.groups.create",
      "migrationcenter.groups.delete",
      "migrationcenter.groups.get",
      "migrationcenter.groups.list",
      "migrationcenter.groups.update",
      "migrationcenter.importDataFiles.create",
      "migrationcenter.importDataFiles.delete",
      "migrationcenter.importDataFiles.get",
      "migrationcenter.importDataFiles.list",
      "migrationcenter.importJobs.create",
      "migrationcenter.importJobs.delete",
      "migrationcenter.importJobs.get",
      "migrationcenter.importJobs.list",
      "migrationcenter.importJobs.update",
      "migrationcenter.locations.get",
      "migrationcenter.locations.list",
      "migrationcenter.operations.cancel",
      "migrationcenter.operations.delete",
      "migrationcenter.operations.get",
      "migrationcenter.operations.list",
      "migrationcenter.preferenceSets.create",
      "migrationcenter.preferenceSets.delete",
      "migrationcenter.preferenceSets.get",
      "migrationcenter.preferenceSets.list",
      "migrationcenter.preferenceSets.update",
      "migrationcenter.reportConfigs.create",
      "migrationcenter.reportConfigs.delete",
      "migrationcenter.reportConfigs.get",
      "migrationcenter.reportConfigs.list",
      "migrationcenter.reports.create",
      "migrationcenter.reports.delete",
      "migrationcenter.reports.get",
      "migrationcenter.reports.list",
      "migrationcenter.settings.get",
      "migrationcenter.settings.update",
      "migrationcenter.sources.create",
      "migrationcenter.sources.delete",
      "migrationcenter.sources.get",
      "migrationcenter.sources.list",
      "migrationcenter.sources.update",
      "ml.jobs.cancel",
      "ml.jobs.create",
      "ml.jobs.get",
      "ml.jobs.getIamPolicy",
      "ml.jobs.list",
      "ml.jobs.update",
      "ml.locations.get",
      "ml.locations.list",
      "ml.models.create",
      "ml.models.delete",
      "ml.models.get",
      "ml.models.getIamPolicy",
      "ml.models.list",
      "ml.models.predict",
      "ml.models.update",
      "ml.operations.cancel",
      "ml.operations.get",
      "ml.operations.list",
      "ml.projects.getConfig",
      "ml.studies.create",
      "ml.studies.delete",
      "ml.studies.get",
      "ml.studies.getIamPolicy",
      "ml.studies.list",
      "ml.trials.create",
      "ml.trials.delete",
      "ml.trials.get",
      "ml.trials.list",
      "ml.trials.update",
      "ml.versions.create",
      "ml.versions.delete",
      "ml.versions.get",
      "ml.versions.list",
      "ml.versions.predict",
      "ml.versions.update",
      "monitoring.alertPolicies.create",
      "monitoring.alertPolicies.delete",
      "monitoring.alertPolicies.get",
      "monitoring.alertPolicies.list",
      "monitoring.alertPolicies.update",
      "monitoring.dashboards.create",
      "monitoring.dashboards.delete",
      "monitoring.dashboards.get",
      "monitoring.dashboards.list",
      "monitoring.dashboards.update",
      "monitoring.groups.create",
      "monitoring.groups.delete",
      "monitoring.groups.get",
      "monitoring.groups.list",
      "monitoring.groups.update",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.delete",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.notificationChannelDescriptors.get",
      "monitoring.notificationChannelDescriptors.list",
      "monitoring.notificationChannels.create",
      "monitoring.notificationChannels.delete",
      "monitoring.notificationChannels.get",
      "monitoring.notificationChannels.list",
      "monitoring.notificationChannels.sendVerificationCode",
      "monitoring.notificationChannels.update",
      "monitoring.notificationChannels.verify",
      "monitoring.publicWidgets.create",
      "monitoring.publicWidgets.delete",
      "monitoring.publicWidgets.get",
      "monitoring.publicWidgets.list",
      "monitoring.publicWidgets.update",
      "monitoring.services.create",
      "monitoring.services.delete",
      "monitoring.services.get",
      "monitoring.services.list",
      "monitoring.services.update",
      "monitoring.slos.create",
      "monitoring.slos.delete",
      "monitoring.slos.get",
      "monitoring.slos.list",
      "monitoring.slos.update",
      "monitoring.snoozes.create",
      "monitoring.snoozes.get",
      "monitoring.snoozes.list",
      "monitoring.snoozes.update",
      "monitoring.timeSeries.create",
      "monitoring.timeSeries.list",
      "monitoring.uptimeCheckConfigs.create",
      "monitoring.uptimeCheckConfigs.delete",
      "monitoring.uptimeCheckConfigs.get",
      "monitoring.uptimeCheckConfigs.list",
      "monitoring.uptimeCheckConfigs.update",
      "nestconsole.smarthomePreviews.update",
      "nestconsole.smarthomeProjects.get",
      "nestconsole.smarthomeProjects.update",
      "nestconsole.smarthomeVersions.create",
      "nestconsole.smarthomeVersions.get",
      "nestconsole.smarthomeVersions.submit",
      "netapp.activeDirectories.create",
      "netapp.activeDirectories.delete",
      "netapp.activeDirectories.get",
      "netapp.activeDirectories.list",
      "netapp.activeDirectories.update",
      "netapp.kmsConfigs.create",
      "netapp.kmsConfigs.delete",
      "netapp.kmsConfigs.encrypt",
      "netapp.kmsConfigs.get",
      "netapp.kmsConfigs.list",
      "netapp.kmsConfigs.update",
      "netapp.kmsConfigs.verify",
      "netapp.replications.create",
      "netapp.replications.delete",
      "netapp.replications.get",
      "netapp.replications.list",
      "netapp.replications.resume",
      "netapp.replications.reverse",
      "netapp.replications.stop",
      "netapp.replications.update",
      "netapp.snapshots.create",
      "netapp.snapshots.delete",
      "netapp.snapshots.get",
      "netapp.snapshots.list",
      "netapp.snapshots.update",
      "netapp.storagePools.create",
      "netapp.storagePools.delete",
      "netapp.storagePools.get",
      "netapp.storagePools.list",
      "netapp.storagePools.update",
      "netapp.volumes.create",
      "netapp.volumes.delete",
      "netapp.volumes.get",
      "netapp.volumes.list",
      "netapp.volumes.revert",
      "netapp.volumes.update",
      "networkconnectivity.groups.acceptSpoke",
      "networkconnectivity.groups.get",
      "networkconnectivity.groups.getIamPolicy",
      "networkconnectivity.groups.list",
      "networkconnectivity.groups.rejectSpoke",
      "networkconnectivity.groups.use",
      "networkconnectivity.hubRouteTables.get",
      "networkconnectivity.hubRouteTables.getIamPolicy",
      "networkconnectivity.hubRouteTables.list",
      "networkconnectivity.hubRoutes.get",
      "networkconnectivity.hubRoutes.getIamPolicy",
      "networkconnectivity.hubRoutes.list",
      "networkconnectivity.hubs.create",
      "networkconnectivity.hubs.delete",
      "networkconnectivity.hubs.get",
      "networkconnectivity.hubs.getIamPolicy",
      "networkconnectivity.hubs.list",
      "networkconnectivity.hubs.listSpokes",
      "networkconnectivity.hubs.update",
      "networkconnectivity.internalRanges.create",
      "networkconnectivity.internalRanges.delete",
      "networkconnectivity.internalRanges.get",
      "networkconnectivity.internalRanges.getIamPolicy",
      "networkconnectivity.internalRanges.list",
      "networkconnectivity.internalRanges.update",
      "networkconnectivity.locations.get",
      "networkconnectivity.locations.list",
      "networkconnectivity.operations.cancel",
      "networkconnectivity.operations.delete",
      "networkconnectivity.operations.get",
      "networkconnectivity.operations.list",
      "networkconnectivity.policyBasedRoutes.create",
      "networkconnectivity.policyBasedRoutes.delete",
      "networkconnectivity.policyBasedRoutes.get",
      "networkconnectivity.policyBasedRoutes.getIamPolicy",
      "networkconnectivity.policyBasedRoutes.list",
      "networkconnectivity.serviceClasses.create",
      "networkconnectivity.serviceClasses.delete",
      "networkconnectivity.serviceClasses.get",
      "networkconnectivity.serviceClasses.list",
      "networkconnectivity.serviceClasses.update",
      "networkconnectivity.serviceClasses.use",
      "networkconnectivity.serviceConnectionMaps.create",
      "networkconnectivity.serviceConnectionMaps.delete",
      "networkconnectivity.serviceConnectionMaps.get",
      "networkconnectivity.serviceConnectionMaps.list",
      "networkconnectivity.serviceConnectionMaps.update",
      "networkconnectivity.serviceConnectionPolicies.create",
      "networkconnectivity.serviceConnectionPolicies.delete",
      "networkconnectivity.serviceConnectionPolicies.get",
      "networkconnectivity.serviceConnectionPolicies.list",
      "networkconnectivity.serviceConnectionPolicies.update",
      "networkconnectivity.spokes.create",
      "networkconnectivity.spokes.delete",
      "networkconnectivity.spokes.get",
      "networkconnectivity.spokes.getIamPolicy",
      "networkconnectivity.spokes.list",
      "networkconnectivity.spokes.update",
      "networkmanagement.config.get",
      "networkmanagement.config.startFreeTrial",
      "networkmanagement.config.update",
      "networkmanagement.connectivitytests.create",
      "networkmanagement.connectivitytests.delete",
      "networkmanagement.connectivitytests.get",
      "networkmanagement.connectivitytests.getIamPolicy",
      "networkmanagement.connectivitytests.list",
      "networkmanagement.connectivitytests.rerun",
      "networkmanagement.connectivitytests.update",
      "networkmanagement.locations.get",
      "networkmanagement.locations.list",
      "networkmanagement.operations.get",
      "networkmanagement.operations.list",
      "networkmanagement.topologygraphs.read",
      "networksecurity.authorizationPolicies.create",
      "networksecurity.authorizationPolicies.delete",
      "networksecurity.authorizationPolicies.get",
      "networksecurity.authorizationPolicies.getIamPolicy",
      "networksecurity.authorizationPolicies.list",
      "networksecurity.authorizationPolicies.update",
      "networksecurity.authorizationPolicies.use",
      "networksecurity.clientTlsPolicies.create",
      "networksecurity.clientTlsPolicies.delete",
      "networksecurity.clientTlsPolicies.get",
      "networksecurity.clientTlsPolicies.getIamPolicy",
      "networksecurity.clientTlsPolicies.list",
      "networksecurity.clientTlsPolicies.update",
      "networksecurity.clientTlsPolicies.use",
      "networksecurity.firewallEndpointAssociations.create",
      "networksecurity.firewallEndpointAssociations.delete",
      "networksecurity.firewallEndpointAssociations.get",
      "networksecurity.firewallEndpointAssociations.list",
      "networksecurity.firewallEndpointAssociations.update",
      "networksecurity.firewallEndpoints.create",
      "networksecurity.firewallEndpoints.delete",
      "networksecurity.firewallEndpoints.get",
      "networksecurity.firewallEndpoints.list",
      "networksecurity.firewallEndpoints.update",
      "networksecurity.firewallEndpoints.use",
      "networksecurity.gatewaySecurityPolicies.create",
      "networksecurity.gatewaySecurityPolicies.delete",
      "networksecurity.gatewaySecurityPolicies.get",
      "networksecurity.gatewaySecurityPolicies.list",
      "networksecurity.gatewaySecurityPolicies.update",
      "networksecurity.gatewaySecurityPolicies.use",
      "networksecurity.gatewaySecurityPolicyRules.create",
      "networksecurity.gatewaySecurityPolicyRules.delete",
      "networksecurity.gatewaySecurityPolicyRules.get",
      "networksecurity.gatewaySecurityPolicyRules.list",
      "networksecurity.gatewaySecurityPolicyRules.update",
      "networksecurity.gatewaySecurityPolicyRules.use",
      "networksecurity.locations.get",
      "networksecurity.locations.list",
      "networksecurity.operations.cancel",
      "networksecurity.operations.delete",
      "networksecurity.operations.get",
      "networksecurity.operations.list",
      "networksecurity.securityProfileGroups.create",
      "networksecurity.securityProfileGroups.delete",
      "networksecurity.securityProfileGroups.get",
      "networksecurity.securityProfileGroups.list",
      "networksecurity.securityProfileGroups.update",
      "networksecurity.securityProfileGroups.use",
      "networksecurity.securityProfiles.create",
      "networksecurity.securityProfiles.delete",
      "networksecurity.securityProfiles.get",
      "networksecurity.securityProfiles.list",
      "networksecurity.securityProfiles.update",
      "networksecurity.securityProfiles.use",
      "networksecurity.serverTlsPolicies.create",
      "networksecurity.serverTlsPolicies.delete",
      "networksecurity.serverTlsPolicies.get",
      "networksecurity.serverTlsPolicies.getIamPolicy",
      "networksecurity.serverTlsPolicies.list",
      "networksecurity.serverTlsPolicies.update",
      "networksecurity.serverTlsPolicies.use",
      "networksecurity.tlsInspectionPolicies.create",
      "networksecurity.tlsInspectionPolicies.delete",
      "networksecurity.tlsInspectionPolicies.get",
      "networksecurity.tlsInspectionPolicies.list",
      "networksecurity.tlsInspectionPolicies.update",
      "networksecurity.tlsInspectionPolicies.use",
      "networksecurity.urlLists.create",
      "networksecurity.urlLists.delete",
      "networksecurity.urlLists.get",
      "networksecurity.urlLists.list",
      "networksecurity.urlLists.update",
      "networksecurity.urlLists.use",
      "networkservices.endpointConfigSelectors.create",
      "networkservices.endpointConfigSelectors.delete",
      "networkservices.endpointConfigSelectors.get",
      "networkservices.endpointConfigSelectors.getIamPolicy",
      "networkservices.endpointConfigSelectors.list",
      "networkservices.endpointConfigSelectors.update",
      "networkservices.endpointConfigSelectors.use",
      "networkservices.endpointPolicies.create",
      "networkservices.endpointPolicies.delete",
      "networkservices.endpointPolicies.get",
      "networkservices.endpointPolicies.getIamPolicy",
      "networkservices.endpointPolicies.list",
      "networkservices.endpointPolicies.update",
      "networkservices.endpointPolicies.use",
      "networkservices.gateways.create",
      "networkservices.gateways.delete",
      "networkservices.gateways.get",
      "networkservices.gateways.list",
      "networkservices.gateways.update",
      "networkservices.gateways.use",
      "networkservices.grpcRoutes.create",
      "networkservices.grpcRoutes.delete",
      "networkservices.grpcRoutes.get",
      "networkservices.grpcRoutes.getIamPolicy",
      "networkservices.grpcRoutes.list",
      "networkservices.grpcRoutes.update",
      "networkservices.grpcRoutes.use",
      "networkservices.httpFilters.create",
      "networkservices.httpFilters.delete",
      "networkservices.httpFilters.get",
      "networkservices.httpFilters.getIamPolicy",
      "networkservices.httpFilters.list",
      "networkservices.httpFilters.update",
      "networkservices.httpFilters.use",
      "networkservices.httpRoutes.create",
      "networkservices.httpRoutes.delete",
      "networkservices.httpRoutes.get",
      "networkservices.httpRoutes.getIamPolicy",
      "networkservices.httpRoutes.list",
      "networkservices.httpRoutes.update",
      "networkservices.httpRoutes.use",
      "networkservices.httpfilters.create",
      "networkservices.httpfilters.delete",
      "networkservices.httpfilters.get",
      "networkservices.httpfilters.getIamPolicy",
      "networkservices.httpfilters.list",
      "networkservices.httpfilters.update",
      "networkservices.httpfilters.use",
      "networkservices.locations.get",
      "networkservices.locations.list",
      "networkservices.meshes.create",
      "networkservices.meshes.delete",
      "networkservices.meshes.get",
      "networkservices.meshes.getIamPolicy",
      "networkservices.meshes.list",
      "networkservices.meshes.update",
      "networkservices.meshes.use",
      "networkservices.operations.cancel",
      "networkservices.operations.delete",
      "networkservices.operations.get",
      "networkservices.operations.list",
      "networkservices.serviceBindings.create",
      "networkservices.serviceBindings.delete",
      "networkservices.serviceBindings.get",
      "networkservices.serviceBindings.list",
      "networkservices.serviceBindings.update",
      "networkservices.tcpRoutes.create",
      "networkservices.tcpRoutes.delete",
      "networkservices.tcpRoutes.get",
      "networkservices.tcpRoutes.getIamPolicy",
      "networkservices.tcpRoutes.list",
      "networkservices.tcpRoutes.update",
      "networkservices.tcpRoutes.use",
      "networkservices.tlsRoutes.create",
      "networkservices.tlsRoutes.delete",
      "networkservices.tlsRoutes.get",
      "networkservices.tlsRoutes.list",
      "networkservices.tlsRoutes.update",
      "networkservices.tlsRoutes.use",
      "notebooks.environments.create",
      "notebooks.environments.delete",
      "notebooks.environments.get",
      "notebooks.environments.getIamPolicy",
      "notebooks.environments.list",
      "notebooks.executions.create",
      "notebooks.executions.delete",
      "notebooks.executions.get",
      "notebooks.executions.getIamPolicy",
      "notebooks.executions.list",
      "notebooks.instances.checkUpgradability",
      "notebooks.instances.create",
      "notebooks.instances.delete",
      "notebooks.instances.diagnose",
      "notebooks.instances.get",
      "notebooks.instances.getHealth",
      "notebooks.instances.getIamPolicy",
      "notebooks.instances.list",
      "notebooks.instances.reset",
      "notebooks.instances.setAccelerator",
      "notebooks.instances.setLabels",
      "notebooks.instances.setMachineType",
      "notebooks.instances.start",
      "notebooks.instances.stop",
      "notebooks.instances.update",
      "notebooks.instances.updateConfig",
      "notebooks.instances.updateShieldInstanceConfig",
      "notebooks.instances.upgrade",
      "notebooks.instances.use",
      "notebooks.locations.get",
      "notebooks.locations.list",
      "notebooks.operations.cancel",
      "notebooks.operations.delete",
      "notebooks.operations.get",
      "notebooks.operations.list",
      "notebooks.runtimes.create",
      "notebooks.runtimes.delete",
      "notebooks.runtimes.diagnose",
      "notebooks.runtimes.get",
      "notebooks.runtimes.getIamPolicy",
      "notebooks.runtimes.list",
      "notebooks.runtimes.reset",
      "notebooks.runtimes.start",
      "notebooks.runtimes.stop",
      "notebooks.runtimes.switch",
      "notebooks.runtimes.update",
      "notebooks.runtimes.upgrade",
      "notebooks.schedules.create",
      "notebooks.schedules.delete",
      "notebooks.schedules.get",
      "notebooks.schedules.getIamPolicy",
      "notebooks.schedules.list",
      "oauthconfig.clientpolicy.get",
      "oauthconfig.testusers.get",
      "oauthconfig.testusers.update",
      "oauthconfig.verification.get",
      "oauthconfig.verification.submit",
      "oauthconfig.verification.update",
      "ondemandscanning.operations.cancel",
      "ondemandscanning.operations.delete",
      "ondemandscanning.operations.get",
      "ondemandscanning.operations.list",
      "ondemandscanning.operations.wait",
      "ondemandscanning.scans.analyzePackages",
      "ondemandscanning.scans.listVulnerabilities",
      "ondemandscanning.scans.scan",
      "opsconfigmonitoring.resourceMetadata.list",
      "opsconfigmonitoring.resourceMetadata.write",
      "orgpolicy.constraints.list",
      "orgpolicy.customConstraints.get",
      "orgpolicy.customConstraints.list",
      "orgpolicy.policies.list",
      "orgpolicy.policy.get",
      "osconfig.guestPolicies.create",
      "osconfig.guestPolicies.delete",
      "osconfig.guestPolicies.get",
      "osconfig.guestPolicies.list",
      "osconfig.guestPolicies.update",
      "osconfig.instanceOSPoliciesCompliances.get",
      "osconfig.instanceOSPoliciesCompliances.list",
      "osconfig.inventories.get",
      "osconfig.inventories.list",
      "osconfig.osPolicyAssignmentReports.get",
      "osconfig.osPolicyAssignmentReports.list",
      "osconfig.osPolicyAssignments.create",
      "osconfig.osPolicyAssignments.delete",
      "osconfig.osPolicyAssignments.get",
      "osconfig.osPolicyAssignments.list",
      "osconfig.osPolicyAssignments.update",
      "osconfig.patchDeployments.create",
      "osconfig.patchDeployments.delete",
      "osconfig.patchDeployments.execute",
      "osconfig.patchDeployments.get",
      "osconfig.patchDeployments.list",
      "osconfig.patchDeployments.pause",
      "osconfig.patchDeployments.resume",
      "osconfig.patchDeployments.update",
      "osconfig.patchJobs.exec",
      "osconfig.patchJobs.get",
      "osconfig.patchJobs.list",
      "osconfig.vulnerabilityReports.get",
      "osconfig.vulnerabilityReports.list",
      "paymentsresellersubscription.products.list",
      "paymentsresellersubscription.promotions.list",
      "paymentsresellersubscription.subscriptions.cancel",
      "paymentsresellersubscription.subscriptions.extend",
      "paymentsresellersubscription.subscriptions.get",
      "paymentsresellersubscription.subscriptions.provision",
      "paymentsresellersubscription.subscriptions.undoCancel",
      "policyanalyzer.serviceAccountKeyLastAuthenticationActivities.query",
      "policyanalyzer.serviceAccountLastAuthenticationActivities.query",
      "policysimulator.orgPolicyViolations.list",
      "policysimulator.orgPolicyViolationsPreviews.create",
      "policysimulator.orgPolicyViolationsPreviews.get",
      "policysimulator.orgPolicyViolationsPreviews.list",
      "policysimulator.replayResults.list",
      "policysimulator.replays.get",
      "policysimulator.replays.list",
      "privateca.caPools.create",
      "privateca.caPools.delete",
      "privateca.caPools.get",
      "privateca.caPools.getIamPolicy",
      "privateca.caPools.list",
      "privateca.caPools.update",
      "privateca.caPools.use",
      "privateca.certificateAuthorities.create",
      "privateca.certificateAuthorities.delete",
      "privateca.certificateAuthorities.get",
      "privateca.certificateAuthorities.getIamPolicy",
      "privateca.certificateAuthorities.list",
      "privateca.certificateAuthorities.update",
      "privateca.certificateRevocationLists.create",
      "privateca.certificateRevocationLists.get",
      "privateca.certificateRevocationLists.getIamPolicy",
      "privateca.certificateRevocationLists.list",
      "privateca.certificateRevocationLists.update",
      "privateca.certificateTemplates.create",
      "privateca.certificateTemplates.delete",
      "privateca.certificateTemplates.get",
      "privateca.certificateTemplates.getIamPolicy",
      "privateca.certificateTemplates.list",
      "privateca.certificateTemplates.update",
      "privateca.certificateTemplates.use",
      "privateca.certificates.create",
      "privateca.certificates.createForSelf",
      "privateca.certificates.get",
      "privateca.certificates.getIamPolicy",
      "privateca.certificates.list",
      "privateca.certificates.update",
      "privateca.locations.get",
      "privateca.locations.list",
      "privateca.operations.cancel",
      "privateca.operations.delete",
      "privateca.operations.get",
      "privateca.operations.list",
      "privateca.reusableConfigs.create",
      "privateca.reusableConfigs.delete",
      "privateca.reusableConfigs.get",
      "privateca.reusableConfigs.getIamPolicy",
      "privateca.reusableConfigs.list",
      "privateca.reusableConfigs.update",
      "proximitybeacon.attachments.create",
      "proximitybeacon.attachments.delete",
      "proximitybeacon.attachments.get",
      "proximitybeacon.attachments.list",
      "proximitybeacon.beacons.attach",
      "proximitybeacon.beacons.create",
      "proximitybeacon.beacons.get",
      "proximitybeacon.beacons.list",
      "proximitybeacon.beacons.update",
      "proximitybeacon.namespaces.create",
      "proximitybeacon.namespaces.delete",
      "proximitybeacon.namespaces.get",
      "proximitybeacon.namespaces.list",
      "proximitybeacon.namespaces.update",
      "publicca.externalAccountKeys.create",
      "pubsub.schemas.attach",
      "pubsub.schemas.commit",
      "pubsub.schemas.create",
      "pubsub.schemas.delete",
      "pubsub.schemas.get",
      "pubsub.schemas.getIamPolicy",
      "pubsub.schemas.list",
      "pubsub.schemas.listRevisions",
      "pubsub.schemas.rollback",
      "pubsub.schemas.validate",
      "pubsub.snapshots.create",
      "pubsub.snapshots.delete",
      "pubsub.snapshots.get",
      "pubsub.snapshots.list",
      "pubsub.snapshots.seek",
      "pubsub.snapshots.update",
      "pubsub.subscriptions.consume",
      "pubsub.subscriptions.create",
      "pubsub.subscriptions.delete",
      "pubsub.subscriptions.get",
      "pubsub.subscriptions.list",
      "pubsub.subscriptions.update",
      "pubsub.topics.attachSubscription",
      "pubsub.topics.create",
      "pubsub.topics.delete",
      "pubsub.topics.detachSubscription",
      "pubsub.topics.get",
      "pubsub.topics.list",
      "pubsub.topics.publish",
      "pubsub.topics.update",
      "pubsub.topics.updateTag",
      "pubsublite.locations.openKafkaStream",
      "pubsublite.operations.get",
      "pubsublite.operations.list",
      "pubsublite.reservations.attachTopic",
      "pubsublite.reservations.create",
      "pubsublite.reservations.delete",
      "pubsublite.reservations.get",
      "pubsublite.reservations.list",
      "pubsublite.reservations.listTopics",
      "pubsublite.reservations.update",
      "pubsublite.subscriptions.create",
      "pubsublite.subscriptions.delete",
      "pubsublite.subscriptions.get",
      "pubsublite.subscriptions.getCursor",
      "pubsublite.subscriptions.list",
      "pubsublite.subscriptions.seek",
      "pubsublite.subscriptions.setCursor",
      "pubsublite.subscriptions.subscribe",
      "pubsublite.subscriptions.update",
      "pubsublite.topics.computeHeadCursor",
      "pubsublite.topics.computeMessageStats",
      "pubsublite.topics.computeTimeCursor",
      "pubsublite.topics.create",
      "pubsublite.topics.delete",
      "pubsublite.topics.get",
      "pubsublite.topics.getPartitions",
      "pubsublite.topics.list",
      "pubsublite.topics.listSubscriptions",
      "pubsublite.topics.publish",
      "pubsublite.topics.subscribe",
      "pubsublite.topics.update",
      "recaptchaenterprise.assessments.annotate",
      "recaptchaenterprise.assessments.create",
      "recaptchaenterprise.keys.create",
      "recaptchaenterprise.keys.delete",
      "recaptchaenterprise.keys.get",
      "recaptchaenterprise.keys.list",
      "recaptchaenterprise.keys.retrievelegacysecretkey",
      "recaptchaenterprise.keys.update",
      "recaptchaenterprise.metrics.get",
      "recaptchaenterprise.projectmetadata.get",
      "recaptchaenterprise.projectmetadata.update",
      "recaptchaenterprise.relatedaccountgroupmemberships.list",
      "recaptchaenterprise.relatedaccountgroups.list",
      "recommender.bigqueryCapacityCommitmentsInsights.get",
      "recommender.bigqueryCapacityCommitmentsInsights.list",
      "recommender.bigqueryCapacityCommitmentsInsights.update",
      "recommender.bigqueryCapacityCommitmentsRecommendations.get",
      "recommender.bigqueryCapacityCommitmentsRecommendations.list",
      "recommender.bigqueryCapacityCommitmentsRecommendations.update",
      "recommender.bigqueryPartitionClusterRecommendations.get",
      "recommender.bigqueryPartitionClusterRecommendations.list",
      "recommender.bigqueryPartitionClusterRecommendations.update",
      "recommender.bigqueryTableStatsInsights.get",
      "recommender.bigqueryTableStatsInsights.list",
      "recommender.bigqueryTableStatsInsights.update",
      "recommender.cloudAssetInsights.get",
      "recommender.cloudAssetInsights.list",
      "recommender.cloudAssetInsights.update",
      "recommender.cloudCostGeneralInsights.get",
      "recommender.cloudCostGeneralInsights.list",
      "recommender.cloudCostGeneralInsights.update",
      "recommender.cloudCostGeneralRecommendations.get",
      "recommender.cloudCostGeneralRecommendations.list",
      "recommender.cloudCostGeneralRecommendations.update",
      "recommender.cloudFunctionsPerformanceInsights.get",
      "recommender.cloudFunctionsPerformanceInsights.list",
      "recommender.cloudFunctionsPerformanceInsights.update",
      "recommender.cloudFunctionsPerformanceRecommendations.get",
      "recommender.cloudFunctionsPerformanceRecommendations.list",
      "recommender.cloudFunctionsPerformanceRecommendations.update",
      "recommender.cloudManageabilityGeneralInsights.get",
      "recommender.cloudManageabilityGeneralInsights.list",
      "recommender.cloudManageabilityGeneralInsights.update",
      "recommender.cloudManageabilityGeneralRecommendations.get",
      "recommender.cloudManageabilityGeneralRecommendations.list",
      "recommender.cloudManageabilityGeneralRecommendations.update",
      "recommender.cloudPerformanceGeneralInsights.get",
      "recommender.cloudPerformanceGeneralInsights.list",
      "recommender.cloudPerformanceGeneralInsights.update",
      "recommender.cloudPerformanceGeneralRecommendations.get",
      "recommender.cloudPerformanceGeneralRecommendations.list",
      "recommender.cloudPerformanceGeneralRecommendations.update",
      "recommender.cloudReliabilityGeneralInsights.get",
      "recommender.cloudReliabilityGeneralInsights.list",
      "recommender.cloudReliabilityGeneralInsights.update",
      "recommender.cloudReliabilityGeneralRecommendations.get",
      "recommender.cloudReliabilityGeneralRecommendations.list",
      "recommender.cloudReliabilityGeneralRecommendations.update",
      "recommender.cloudSecurityGeneralInsights.get",
      "recommender.cloudSecurityGeneralInsights.list",
      "recommender.cloudSecurityGeneralInsights.update",
      "recommender.cloudSecurityGeneralRecommendations.get",
      "recommender.cloudSecurityGeneralRecommendations.list",
      "recommender.cloudSecurityGeneralRecommendations.update",
      "recommender.cloudsqlIdleInstanceRecommendations.get",
      "recommender.cloudsqlIdleInstanceRecommendations.list",
      "recommender.cloudsqlIdleInstanceRecommendations.update",
      "recommender.cloudsqlInstanceActivityInsights.get",
      "recommender.cloudsqlInstanceActivityInsights.list",
      "recommender.cloudsqlInstanceActivityInsights.update",
      "recommender.cloudsqlInstanceCpuUsageInsights.get",
      "recommender.cloudsqlInstanceCpuUsageInsights.list",
      "recommender.cloudsqlInstanceCpuUsageInsights.update",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.get",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.list",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.update",
      "recommender.cloudsqlInstanceMemoryUsageInsights.get",
      "recommender.cloudsqlInstanceMemoryUsageInsights.list",
      "recommender.cloudsqlInstanceMemoryUsageInsights.update",
      "recommender.cloudsqlInstanceOomProbabilityInsights.get",
      "recommender.cloudsqlInstanceOomProbabilityInsights.list",
      "recommender.cloudsqlInstanceOomProbabilityInsights.update",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.get",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.list",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.update",
      "recommender.cloudsqlInstancePerformanceInsights.get",
      "recommender.cloudsqlInstancePerformanceInsights.list",
      "recommender.cloudsqlInstancePerformanceInsights.update",
      "recommender.cloudsqlInstancePerformanceRecommendations.get",
      "recommender.cloudsqlInstancePerformanceRecommendations.list",
      "recommender.cloudsqlInstancePerformanceRecommendations.update",
      "recommender.cloudsqlInstanceReliabilityInsights.get",
      "recommender.cloudsqlInstanceReliabilityInsights.list",
      "recommender.cloudsqlInstanceReliabilityInsights.update",
      "recommender.cloudsqlInstanceReliabilityRecommendations.get",
      "recommender.cloudsqlInstanceReliabilityRecommendations.list",
      "recommender.cloudsqlInstanceReliabilityRecommendations.update",
      "recommender.cloudsqlInstanceSecurityInsights.get",
      "recommender.cloudsqlInstanceSecurityInsights.list",
      "recommender.cloudsqlInstanceSecurityInsights.update",
      "recommender.cloudsqlInstanceSecurityRecommendations.get",
      "recommender.cloudsqlInstanceSecurityRecommendations.list",
      "recommender.cloudsqlInstanceSecurityRecommendations.update",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.get",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.list",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.update",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.get",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.list",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.update",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.get",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.update",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.get",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.list",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.update",
      "recommender.commitmentUtilizationInsights.get",
      "recommender.commitmentUtilizationInsights.list",
      "recommender.commitmentUtilizationInsights.update",
      "recommender.computeAddressIdleResourceInsights.get",
      "recommender.computeAddressIdleResourceInsights.list",
      "recommender.computeAddressIdleResourceInsights.update",
      "recommender.computeAddressIdleResourceRecommendations.get",
      "recommender.computeAddressIdleResourceRecommendations.list",
      "recommender.computeAddressIdleResourceRecommendations.update",
      "recommender.computeDiskIdleResourceInsights.get",
      "recommender.computeDiskIdleResourceInsights.list",
      "recommender.computeDiskIdleResourceInsights.update",
      "recommender.computeDiskIdleResourceRecommendations.get",
      "recommender.computeDiskIdleResourceRecommendations.list",
      "recommender.computeDiskIdleResourceRecommendations.update",
      "recommender.computeFirewallInsightTypeConfigs.get",
      "recommender.computeFirewallInsightTypeConfigs.update",
      "recommender.computeFirewallInsights.get",
      "recommender.computeFirewallInsights.list",
      "recommender.computeFirewallInsights.update",
      "recommender.computeImageIdleResourceInsights.get",
      "recommender.computeImageIdleResourceInsights.list",
      "recommender.computeImageIdleResourceInsights.update",
      "recommender.computeImageIdleResourceRecommendations.get",
      "recommender.computeImageIdleResourceRecommendations.list",
      "recommender.computeImageIdleResourceRecommendations.update",
      "recommender.computeInstanceCpuUsageInsights.get",
      "recommender.computeInstanceCpuUsageInsights.list",
      "recommender.computeInstanceCpuUsageInsights.update",
      "recommender.computeInstanceCpuUsagePredictionInsights.get",
      "recommender.computeInstanceCpuUsagePredictionInsights.list",
      "recommender.computeInstanceCpuUsagePredictionInsights.update",
      "recommender.computeInstanceCpuUsageTrendInsights.get",
      "recommender.computeInstanceCpuUsageTrendInsights.list",
      "recommender.computeInstanceCpuUsageTrendInsights.update",
      "recommender.computeInstanceGroupManagerCpuUsageInsights.get",
      "recommender.computeInstanceGroupManagerCpuUsageInsights.list",
      "recommender.computeInstanceGroupManagerCpuUsageInsights.update",
      "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.get",
      "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.list",
      "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.update",
      "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.get",
      "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.list",
      "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.update",
      "recommender.computeInstanceGroupManagerMachineTypeRecommendations.get",
      "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list",
      "recommender.computeInstanceGroupManagerMachineTypeRecommendations.update",
      "recommender.computeInstanceGroupManagerMemoryUsageInsights.get",
      "recommender.computeInstanceGroupManagerMemoryUsageInsights.list",
      "recommender.computeInstanceGroupManagerMemoryUsageInsights.update",
      "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.get",
      "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.list",
      "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.update",
      "recommender.computeInstanceIdleResourceRecommendations.get",
      "recommender.computeInstanceIdleResourceRecommendations.list",
      "recommender.computeInstanceIdleResourceRecommendations.update",
      "recommender.computeInstanceIdleResourceRecommenderConfig.get",
      "recommender.computeInstanceIdleResourceRecommenderConfig.update",
      "recommender.computeInstanceMachineTypeRecommendations.get",
      "recommender.computeInstanceMachineTypeRecommendations.list",
      "recommender.computeInstanceMachineTypeRecommendations.update",
      "recommender.computeInstanceMemoryUsageInsights.get",
      "recommender.computeInstanceMemoryUsageInsights.list",
      "recommender.computeInstanceMemoryUsageInsights.update",
      "recommender.computeInstanceMemoryUsagePredictionInsights.get",
      "recommender.computeInstanceMemoryUsagePredictionInsights.list",
      "recommender.computeInstanceMemoryUsagePredictionInsights.update",
      "recommender.computeInstanceNetworkThroughputInsights.get",
      "recommender.computeInstanceNetworkThroughputInsights.list",
      "recommender.computeInstanceNetworkThroughputInsights.update",
      "recommender.containerDiagnosisInsights.get",
      "recommender.containerDiagnosisInsights.list",
      "recommender.containerDiagnosisInsights.update",
      "recommender.containerDiagnosisRecommendations.get",
      "recommender.containerDiagnosisRecommendations.list",
      "recommender.containerDiagnosisRecommendations.update",
      "recommender.costInsights.get",
      "recommender.costInsights.list",
      "recommender.costInsights.update",
      "recommender.dataflowDiagnosticsInsights.get",
      "recommender.dataflowDiagnosticsInsights.list",
      "recommender.dataflowDiagnosticsInsights.update",
      "recommender.errorReportingInsights.get",
      "recommender.errorReportingInsights.list",
      "recommender.errorReportingInsights.update",
      "recommender.errorReportingRecommendations.get",
      "recommender.errorReportingRecommendations.list",
      "recommender.errorReportingRecommendations.update",
      "recommender.gmpGuidedExperienceInsights.get",
      "recommender.gmpGuidedExperienceInsights.list",
      "recommender.gmpGuidedExperienceInsights.update",
      "recommender.gmpGuidedExperienceRecommendations.get",
      "recommender.gmpGuidedExperienceRecommendations.list",
      "recommender.gmpGuidedExperienceRecommendations.update",
      "recommender.gmpProjectManagementInsights.get",
      "recommender.gmpProjectManagementInsights.list",
      "recommender.gmpProjectManagementInsights.update",
      "recommender.gmpProjectManagementRecommendations.get",
      "recommender.gmpProjectManagementRecommendations.list",
      "recommender.gmpProjectManagementRecommendations.update",
      "recommender.gmpProjectProductSuggestionsInsights.get",
      "recommender.gmpProjectProductSuggestionsInsights.list",
      "recommender.gmpProjectProductSuggestionsInsights.update",
      "recommender.gmpProjectProductSuggestionsRecommendations.get",
      "recommender.gmpProjectProductSuggestionsRecommendations.list",
      "recommender.gmpProjectProductSuggestionsRecommendations.update",
      "recommender.gmpProjectQuotaInsights.get",
      "recommender.gmpProjectQuotaInsights.list",
      "recommender.gmpProjectQuotaInsights.update",
      "recommender.gmpProjectQuotaRecommendations.get",
      "recommender.gmpProjectQuotaRecommendations.list",
      "recommender.gmpProjectQuotaRecommendations.update",
      "recommender.iamPolicyInsights.get",
      "recommender.iamPolicyInsights.list",
      "recommender.iamPolicyInsights.update",
      "recommender.iamPolicyLateralMovementInsights.get",
      "recommender.iamPolicyLateralMovementInsights.list",
      "recommender.iamPolicyLateralMovementInsights.update",
      "recommender.iamPolicyRecommendations.get",
      "recommender.iamPolicyRecommendations.list",
      "recommender.iamPolicyRecommendations.update",
      "recommender.iamPolicyRecommenderConfig.get",
      "recommender.iamPolicyRecommenderConfig.update",
      "recommender.iamServiceAccountInsights.get",
      "recommender.iamServiceAccountInsights.list",
      "recommender.iamServiceAccountInsights.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.loggingProductSuggestionContainerInsights.get",
      "recommender.loggingProductSuggestionContainerInsights.list",
      "recommender.loggingProductSuggestionContainerInsights.update",
      "recommender.loggingProductSuggestionContainerRecommendations.get",
      "recommender.loggingProductSuggestionContainerRecommendations.list",
      "recommender.loggingProductSuggestionContainerRecommendations.update",
      "recommender.monitoringProductSuggestionComputeInsights.get",
      "recommender.monitoringProductSuggestionComputeInsights.list",
      "recommender.monitoringProductSuggestionComputeInsights.update",
      "recommender.monitoringProductSuggestionComputeRecommendations.get",
      "recommender.monitoringProductSuggestionComputeRecommendations.list",
      "recommender.monitoringProductSuggestionComputeRecommendations.update",
      "recommender.networkAnalyzerCloudSqlInsights.get",
      "recommender.networkAnalyzerCloudSqlInsights.list",
      "recommender.networkAnalyzerCloudSqlInsights.update",
      "recommender.networkAnalyzerDynamicRouteInsights.get",
      "recommender.networkAnalyzerDynamicRouteInsights.list",
      "recommender.networkAnalyzerDynamicRouteInsights.update",
      "recommender.networkAnalyzerGkeConnectivityInsights.get",
      "recommender.networkAnalyzerGkeConnectivityInsights.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.update",
      "recommender.networkAnalyzerGkeIpAddressInsights.get",
      "recommender.networkAnalyzerGkeIpAddressInsights.list",
      "recommender.networkAnalyzerGkeIpAddressInsights.update",
      "recommender.networkAnalyzerIpAddressInsights.get",
      "recommender.networkAnalyzerIpAddressInsights.list",
      "recommender.networkAnalyzerIpAddressInsights.update",
      "recommender.networkAnalyzerLoadBalancerInsights.get",
      "recommender.networkAnalyzerLoadBalancerInsights.list",
      "recommender.networkAnalyzerLoadBalancerInsights.update",
      "recommender.networkAnalyzerVpcConnectivityInsights.get",
      "recommender.networkAnalyzerVpcConnectivityInsights.list",
      "recommender.networkAnalyzerVpcConnectivityInsights.update",
      "recommender.resourcemanagerProjectUtilizationInsightTypeConfigs.get",
      "recommender.resourcemanagerProjectUtilizationInsightTypeConfigs.update",
      "recommender.resourcemanagerProjectUtilizationInsights.get",
      "recommender.resourcemanagerProjectUtilizationInsights.list",
      "recommender.resourcemanagerProjectUtilizationInsights.update",
      "recommender.resourcemanagerProjectUtilizationRecommendations.get",
      "recommender.resourcemanagerProjectUtilizationRecommendations.list",
      "recommender.resourcemanagerProjectUtilizationRecommendations.update",
      "recommender.resourcemanagerProjectUtilizationRecommenderConfigs.get",
      "recommender.resourcemanagerProjectUtilizationRecommenderConfigs.update",
      "recommender.resourcemanagerServiceLimitInsights.get",
      "recommender.resourcemanagerServiceLimitInsights.list",
      "recommender.resourcemanagerServiceLimitInsights.update",
      "recommender.resourcemanagerServiceLimitRecommendations.get",
      "recommender.resourcemanagerServiceLimitRecommendations.list",
      "recommender.resourcemanagerServiceLimitRecommendations.update",
      "recommender.runServiceCostInsights.get",
      "recommender.runServiceCostInsights.list",
      "recommender.runServiceCostInsights.update",
      "recommender.runServiceCostRecommendations.get",
      "recommender.runServiceCostRecommendations.list",
      "recommender.runServiceCostRecommendations.update",
      "recommender.runServiceIdentityInsights.get",
      "recommender.runServiceIdentityInsights.list",
      "recommender.runServiceIdentityInsights.update",
      "recommender.runServiceIdentityRecommendations.get",
      "recommender.runServiceIdentityRecommendations.list",
      "recommender.runServiceIdentityRecommendations.update",
      "recommender.runServiceSecurityInsights.get",
      "recommender.runServiceSecurityInsights.list",
      "recommender.runServiceSecurityInsights.update",
      "recommender.runServiceSecurityRecommendations.get",
      "recommender.runServiceSecurityRecommendations.list",
      "recommender.runServiceSecurityRecommendations.update",
      "recommender.spendBasedCommitmentInsights.get",
      "recommender.spendBasedCommitmentInsights.list",
      "recommender.spendBasedCommitmentInsights.update",
      "recommender.spendBasedCommitmentRecommendations.get",
      "recommender.spendBasedCommitmentRecommendations.list",
      "recommender.spendBasedCommitmentRecommendations.update",
      "recommender.spendBasedCommitmentRecommenderConfig.get",
      "recommender.spendBasedCommitmentRecommenderConfig.update",
      "recommender.usageCommitmentRecommendations.get",
      "recommender.usageCommitmentRecommendations.list",
      "recommender.usageCommitmentRecommendations.update",
      "redis.clusters.connect",
      "redis.clusters.create",
      "redis.clusters.delete",
      "redis.clusters.get",
      "redis.clusters.list",
      "redis.clusters.update",
      "redis.instances.create",
      "redis.instances.delete",
      "redis.instances.export",
      "redis.instances.failover",
      "redis.instances.get",
      "redis.instances.getAuthString",
      "redis.instances.import",
      "redis.instances.list",
      "redis.instances.rescheduleMaintenance",
      "redis.instances.update",
      "redis.instances.updateAuth",
      "redis.instances.upgrade",
      "redis.locations.get",
      "redis.locations.list",
      "redis.operations.cancel",
      "redis.operations.delete",
      "redis.operations.get",
      "redis.operations.list",
      "remotebuildexecution.actions.create",
      "remotebuildexecution.actions.delete",
      "remotebuildexecution.actions.get",
      "remotebuildexecution.actions.update",
      "remotebuildexecution.blobs.create",
      "remotebuildexecution.blobs.get",
      "remotebuildexecution.botsessions.create",
      "remotebuildexecution.botsessions.update",
      "remotebuildexecution.instances.create",
      "remotebuildexecution.instances.get",
      "remotebuildexecution.instances.list",
      "remotebuildexecution.instances.update",
      "remotebuildexecution.logstreams.create",
      "remotebuildexecution.logstreams.get",
      "remotebuildexecution.logstreams.update",
      "remotebuildexecution.workerpools.create",
      "remotebuildexecution.workerpools.get",
      "remotebuildexecution.workerpools.list",
      "remotebuildexecution.workerpools.update",
      "resourcemanager.hierarchyNodes.createTagBinding",
      "resourcemanager.hierarchyNodes.deleteTagBinding",
      "resourcemanager.hierarchyNodes.listEffectiveTags",
      "resourcemanager.hierarchyNodes.listTagBindings",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list",
      "resourcemanager.projects.move",
      "resourcemanager.projects.update",
      "resourcemanager.tagHolds.create",
      "resourcemanager.tagHolds.delete",
      "resourcemanager.tagHolds.list",
      "resourcemanager.tagKeys.create",
      "resourcemanager.tagKeys.delete",
      "resourcemanager.tagKeys.get",
      "resourcemanager.tagKeys.getIamPolicy",
      "resourcemanager.tagKeys.list",
      "resourcemanager.tagKeys.update",
      "resourcemanager.tagValueBindings.create",
      "resourcemanager.tagValueBindings.delete",
      "resourcemanager.tagValues.create",
      "resourcemanager.tagValues.delete",
      "resourcemanager.tagValues.get",
      "resourcemanager.tagValues.getIamPolicy",
      "resourcemanager.tagValues.list",
      "resourcemanager.tagValues.update",
      "resourcesettings.settings.get",
      "resourcesettings.settings.list",
      "retail.attributesConfigs.addCatalogAttribute",
      "retail.attributesConfigs.batchRemoveCatalogAttributes",
      "retail.attributesConfigs.exportCatalogAttributes",
      "retail.attributesConfigs.get",
      "retail.attributesConfigs.importCatalogAttributes",
      "retail.attributesConfigs.removeCatalogAttribute",
      "retail.attributesConfigs.replaceCatalogAttribute",
      "retail.attributesConfigs.update",
      "retail.catalogs.completeQuery",
      "retail.catalogs.import",
      "retail.catalogs.list",
      "retail.catalogs.update",
      "retail.controls.create",
      "retail.controls.delete",
      "retail.controls.export",
      "retail.controls.get",
      "retail.controls.import",
      "retail.controls.list",
      "retail.controls.update",
      "retail.models.create",
      "retail.models.delete",
      "retail.models.get",
      "retail.models.list",
      "retail.models.pause",
      "retail.models.resume",
      "retail.models.tune",
      "retail.models.update",
      "retail.operations.get",
      "retail.operations.list",
      "retail.placements.predict",
      "retail.placements.search",
      "retail.products.create",
      "retail.products.delete",
      "retail.products.export",
      "retail.products.get",
      "retail.products.import",
      "retail.products.list",
      "retail.products.purge",
      "retail.products.setSponsorship",
      "retail.products.update",
      "retail.retailProjects.get",
      "retail.servingConfigs.create",
      "retail.servingConfigs.delete",
      "retail.servingConfigs.get",
      "retail.servingConfigs.list",
      "retail.servingConfigs.predict",
      "retail.servingConfigs.search",
      "retail.servingConfigs.update",
      "retail.userEvents.create",
      "retail.userEvents.import",
      "retail.userEvents.purge",
      "retail.userEvents.rejoin",
      "riscconfigurationservice.riscconfigs.createOrUpdate",
      "riscconfigurationservice.riscconfigs.delete",
      "riscconfigurationservice.riscconfigs.get",
      "riskmanager.controlScoreBreakdowns.get",
      "riskmanager.controlScoreBreakdowns.list",
      "riskmanager.operations.delete",
      "riskmanager.operations.get",
      "riskmanager.operations.list",
      "riskmanager.policies.get",
      "riskmanager.policies.list",
      "riskmanager.reports.create",
      "riskmanager.reports.delete",
      "riskmanager.reports.get",
      "riskmanager.reports.list",
      "riskmanager.reports.review",
      "riskmanager.reports.share",
      "riskmanager.serviceAccount.create",
      "riskmanager.settings.get",
      "riskmanager.settings.update",
      "rma.annotations.create",
      "rma.annotations.get",
      "rma.collectors.create",
      "rma.collectors.delete",
      "rma.collectors.get",
      "rma.collectors.list",
      "rma.collectors.update",
      "rma.locations.get",
      "rma.locations.list",
      "rma.operations.cancel",
      "rma.operations.delete",
      "rma.operations.get",
      "rma.operations.list",
      "run.configurations.get",
      "run.configurations.list",
      "run.executions.delete",
      "run.executions.get",
      "run.executions.list",
      "run.jobs.create",
      "run.jobs.delete",
      "run.jobs.get",
      "run.jobs.getIamPolicy",
      "run.jobs.list",
      "run.jobs.run",
      "run.jobs.runWithOverrides",
      "run.jobs.update",
      "run.locations.list",
      "run.operations.delete",
      "run.operations.get",
      "run.operations.list",
      "run.revisions.delete",
      "run.revisions.get",
      "run.revisions.list",
      "run.routes.get",
      "run.routes.invoke",
      "run.routes.list",
      "run.services.create",
      "run.services.delete",
      "run.services.get",
      "run.services.getIamPolicy",
      "run.services.list",
      "run.services.listEffectiveTags",
      "run.services.listTagBindings",
      "run.services.update",
      "run.tasks.get",
      "run.tasks.list",
      "runapps.applications.create",
      "runapps.applications.delete",
      "runapps.applications.get",
      "runapps.applications.getStatus",
      "runapps.applications.list",
      "runapps.applications.update",
      "runapps.deployments.create",
      "runapps.deployments.get",
      "runapps.deployments.list",
      "runapps.locations.get",
      "runapps.locations.list",
      "runapps.operations.cancel",
      "runapps.operations.delete",
      "runapps.operations.get",
      "runapps.operations.list",
      "runtimeconfig.configs.create",
      "runtimeconfig.configs.delete",
      "runtimeconfig.configs.get",
      "runtimeconfig.configs.list",
      "runtimeconfig.configs.update",
      "runtimeconfig.operations.get",
      "runtimeconfig.operations.list",
      "runtimeconfig.variables.create",
      "runtimeconfig.variables.delete",
      "runtimeconfig.variables.get",
      "runtimeconfig.variables.list",
      "runtimeconfig.variables.update",
      "runtimeconfig.variables.watch",
      "runtimeconfig.waiters.create",
      "runtimeconfig.waiters.delete",
      "runtimeconfig.waiters.get",
      "runtimeconfig.waiters.list",
      "runtimeconfig.waiters.update",
      "secretmanager.locations.get",
      "secretmanager.locations.list",
      "secretmanager.secrets.create",
      "secretmanager.secrets.delete",
      "secretmanager.secrets.get",
      "secretmanager.secrets.getIamPolicy",
      "secretmanager.secrets.list",
      "secretmanager.secrets.update",
      "secretmanager.versions.add",
      "secretmanager.versions.destroy",
      "secretmanager.versions.disable",
      "secretmanager.versions.enable",
      "secretmanager.versions.get",
      "secretmanager.versions.list",
      "securedlandingzone.operations.get",
      "securedlandingzone.overwatches.activate",
      "securedlandingzone.overwatches.create",
      "securedlandingzone.overwatches.delete",
      "securedlandingzone.overwatches.get",
      "securedlandingzone.overwatches.list",
      "securedlandingzone.overwatches.suspend",
      "securedlandingzone.overwatches.update",
      "securitycenter.assets.group",
      "securitycenter.assets.list",
      "securitycenter.assets.listAssetPropertyNames",
      "securitycenter.assets.runDiscovery",
      "securitycenter.assetsecuritymarks.update",
      "securitycenter.attackpaths.list",
      "securitycenter.bigQueryExports.create",
      "securitycenter.bigQueryExports.delete",
      "securitycenter.bigQueryExports.get",
      "securitycenter.bigQueryExports.list",
      "securitycenter.bigQueryExports.update",
      "securitycenter.containerthreatdetectionsettings.calculate",
      "securitycenter.containerthreatdetectionsettings.get",
      "securitycenter.containerthreatdetectionsettings.update",
      "securitycenter.effectivesecurityhealthanalyticscustommodules.get",
      "securitycenter.effectivesecurityhealthanalyticscustommodules.list",
      "securitycenter.eventthreatdetectionsettings.calculate",
      "securitycenter.eventthreatdetectionsettings.get",
      "securitycenter.eventthreatdetectionsettings.update",
      "securitycenter.findingexternalsystems.update",
      "securitycenter.findings.bulkMuteUpdate",
      "securitycenter.findings.group",
      "securitycenter.findings.list",
      "securitycenter.findings.listFindingPropertyNames",
      "securitycenter.findings.setMute",
      "securitycenter.findings.setState",
      "securitycenter.findings.setWorkflowState",
      "securitycenter.findings.update",
      "securitycenter.findingsecuritymarks.update",
      "securitycenter.integratedvulnerabilityscannersettings.calculate",
      "securitycenter.integratedvulnerabilityscannersettings.get",
      "securitycenter.integratedvulnerabilityscannersettings.update",
      "securitycenter.muteconfigs.create",
      "securitycenter.muteconfigs.delete",
      "securitycenter.muteconfigs.get",
      "securitycenter.muteconfigs.list",
      "securitycenter.muteconfigs.update",
      "securitycenter.notificationconfig.create",
      "securitycenter.notificationconfig.delete",
      "securitycenter.notificationconfig.get",
      "securitycenter.notificationconfig.list",
      "securitycenter.notificationconfig.update",
      "securitycenter.organizationsettings.get",
      "securitycenter.organizationsettings.update",
      "securitycenter.rapidvulnerabilitydetectionsettings.calculate",
      "securitycenter.rapidvulnerabilitydetectionsettings.get",
      "securitycenter.rapidvulnerabilitydetectionsettings.update",
      "securitycenter.resourcevalueconfigs.create",
      "securitycenter.resourcevalueconfigs.delete",
      "securitycenter.resourcevalueconfigs.get",
      "securitycenter.resourcevalueconfigs.list",
      "securitycenter.resourcevalueconfigs.update",
      "securitycenter.securitycentersettings.get",
      "securitycenter.securitycentersettings.update",
      "securitycenter.securityhealthanalyticscustommodules.create",
      "securitycenter.securityhealthanalyticscustommodules.delete",
      "securitycenter.securityhealthanalyticscustommodules.get",
      "securitycenter.securityhealthanalyticscustommodules.list",
      "securitycenter.securityhealthanalyticscustommodules.simulate",
      "securitycenter.securityhealthanalyticscustommodules.test",
      "securitycenter.securityhealthanalyticscustommodules.update",
      "securitycenter.securityhealthanalyticssettings.calculate",
      "securitycenter.securityhealthanalyticssettings.get",
      "securitycenter.securityhealthanalyticssettings.update",
      "securitycenter.simulations.get",
      "securitycenter.sources.get",
      "securitycenter.sources.getIamPolicy",
      "securitycenter.sources.list",
      "securitycenter.sources.update",
      "securitycenter.subscription.get",
      "securitycenter.userinterfacemetadata.get",
      "securitycenter.valuedresources.list",
      "securitycenter.virtualmachinethreatdetectionsettings.calculate",
      "securitycenter.virtualmachinethreatdetectionsettings.get",
      "securitycenter.virtualmachinethreatdetectionsettings.update",
      "securitycenter.websecurityscannersettings.calculate",
      "securitycenter.websecurityscannersettings.get",
      "securitycenter.websecurityscannersettings.update",
      "servicebroker.bindingoperations.get",
      "servicebroker.bindingoperations.list",
      "servicebroker.bindings.create",
      "servicebroker.bindings.delete",
      "servicebroker.bindings.get",
      "servicebroker.bindings.getIamPolicy",
      "servicebroker.bindings.list",
      "servicebroker.catalogs.create",
      "servicebroker.catalogs.delete",
      "servicebroker.catalogs.get",
      "servicebroker.catalogs.getIamPolicy",
      "servicebroker.catalogs.list",
      "servicebroker.instanceoperations.get",
      "servicebroker.instanceoperations.list",
      "servicebroker.instances.create",
      "servicebroker.instances.delete",
      "servicebroker.instances.get",
      "servicebroker.instances.getIamPolicy",
      "servicebroker.instances.list",
      "servicebroker.instances.update",
      "serviceconsumermanagement.consumers.get",
      "serviceconsumermanagement.quota.get",
      "serviceconsumermanagement.quota.update",
      "serviceconsumermanagement.tenancyu.addResource",
      "serviceconsumermanagement.tenancyu.create",
      "serviceconsumermanagement.tenancyu.delete",
      "serviceconsumermanagement.tenancyu.list",
      "serviceconsumermanagement.tenancyu.removeResource",
      "servicedirectory.endpoints.create",
      "servicedirectory.endpoints.delete",
      "servicedirectory.endpoints.get",
      "servicedirectory.endpoints.getIamPolicy",
      "servicedirectory.endpoints.list",
      "servicedirectory.endpoints.update",
      "servicedirectory.locations.get",
      "servicedirectory.locations.list",
      "servicedirectory.namespaces.associatePrivateZone",
      "servicedirectory.namespaces.create",
      "servicedirectory.namespaces.delete",
      "servicedirectory.namespaces.get",
      "servicedirectory.namespaces.getIamPolicy",
      "servicedirectory.namespaces.list",
      "servicedirectory.namespaces.update",
      "servicedirectory.networks.attach",
      "servicedirectory.services.bind",
      "servicedirectory.services.create",
      "servicedirectory.services.delete",
      "servicedirectory.services.get",
      "servicedirectory.services.getIamPolicy",
      "servicedirectory.services.list",
      "servicedirectory.services.resolve",
      "servicedirectory.services.update",
      "servicehealth.events.get",
      "servicehealth.events.list",
      "servicehealth.locations.get",
      "servicehealth.locations.list",
      "servicehealth.organizationEvents.get",
      "servicehealth.organizationEvents.list",
      "servicehealth.organizationImpacts.get",
      "servicehealth.organizationImpacts.list",
      "servicemanagement.services.bind",
      "servicemanagement.services.check",
      "servicemanagement.services.create",
      "servicemanagement.services.delete",
      "servicemanagement.services.get",
      "servicemanagement.services.list",
      "servicemanagement.services.quota",
      "servicemanagement.services.report",
      "servicemanagement.services.update",
      "servicenetworking.operations.cancel",
      "servicenetworking.operations.delete",
      "servicenetworking.operations.get",
      "servicenetworking.operations.list",
      "servicenetworking.services.addDnsRecordSet",
      "servicenetworking.services.addDnsZone",
      "servicenetworking.services.addSubnetwork",
      "servicenetworking.services.createPeeredDnsDomain",
      "servicenetworking.services.deleteConnection",
      "servicenetworking.services.deletePeeredDnsDomain",
      "servicenetworking.services.disableVpcServiceControls",
      "servicenetworking.services.enableVpcServiceControls",
      "servicenetworking.services.get",
      "servicenetworking.services.getConsumerConfig",
      "servicenetworking.services.listPeeredDnsDomains",
      "servicenetworking.services.removeDnsRecordSet",
      "servicenetworking.services.removeDnsZone",
      "servicenetworking.services.updateConsumerConfig",
      "servicenetworking.services.updateDnsRecordSet",
      "servicenetworking.services.use",
      "servicesecurityinsights.clusterSecurityInfo.get",
      "servicesecurityinsights.clusterSecurityInfo.list",
      "servicesecurityinsights.policies.get",
      "servicesecurityinsights.projectStates.get",
      "servicesecurityinsights.securityInfo.list",
      "servicesecurityinsights.securityViews.get",
      "servicesecurityinsights.workloadPolicies.list",
      "servicesecurityinsights.workloadSecurityInfo.get",
      "serviceusage.apiKeys.regenerate",
      "serviceusage.apiKeys.revert",
      "serviceusage.operations.cancel",
      "serviceusage.operations.delete",
      "serviceusage.operations.get",
      "serviceusage.operations.list",
      "serviceusage.quotas.get",
      "serviceusage.quotas.update",
      "serviceusage.services.disable",
      "serviceusage.services.enable",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "serviceusage.services.use",
      "source.repos.get",
      "source.repos.getIamPolicy",
      "source.repos.list",
      "source.repos.update",
      "spanner.backupOperations.cancel",
      "spanner.backupOperations.get",
      "spanner.backupOperations.list",
      "spanner.backups.copy",
      "spanner.backups.create",
      "spanner.backups.delete",
      "spanner.backups.get",
      "spanner.backups.getIamPolicy",
      "spanner.backups.list",
      "spanner.backups.restoreDatabase",
      "spanner.backups.update",
      "spanner.databaseOperations.cancel",
      "spanner.databaseOperations.delete",
      "spanner.databaseOperations.get",
      "spanner.databaseOperations.list",
      "spanner.databaseRoles.list",
      "spanner.databaseRoles.use",
      "spanner.databases.beginOrRollbackReadWriteTransaction",
      "spanner.databases.beginPartitionedDmlTransaction",
      "spanner.databases.beginReadOnlyTransaction",
      "spanner.databases.create",
      "spanner.databases.createBackup",
      "spanner.databases.drop",
      "spanner.databases.get",
      "spanner.databases.getDdl",
      "spanner.databases.getIamPolicy",
      "spanner.databases.list",
      "spanner.databases.partitionQuery",
      "spanner.databases.partitionRead",
      "spanner.databases.read",
      "spanner.databases.select",
      "spanner.databases.update",
      "spanner.databases.updateDdl",
      "spanner.databases.updateTag",
      "spanner.databases.useDataBoost",
      "spanner.databases.useRoleBasedAccess",
      "spanner.databases.write",
      "spanner.instanceConfigOperations.cancel",
      "spanner.instanceConfigOperations.delete",
      "spanner.instanceConfigOperations.get",
      "spanner.instanceConfigOperations.list",
      "spanner.instanceConfigs.create",
      "spanner.instanceConfigs.delete",
      "spanner.instanceConfigs.get",
      "spanner.instanceConfigs.list",
      "spanner.instanceConfigs.update",
      "spanner.instanceOperations.cancel",
      "spanner.instanceOperations.delete",
      "spanner.instanceOperations.get",
      "spanner.instanceOperations.list",
      "spanner.instances.create",
      "spanner.instances.delete",
      "spanner.instances.get",
      "spanner.instances.getIamPolicy",
      "spanner.instances.list",
      "spanner.instances.listEffectiveTags",
      "spanner.instances.listTagBindings",
      "spanner.instances.update",
      "spanner.instances.updateTag",
      "spanner.sessions.create",
      "spanner.sessions.delete",
      "spanner.sessions.get",
      "spanner.sessions.list",
      "speakerid.phrases.create",
      "speakerid.phrases.delete",
      "speakerid.phrases.get",
      "speakerid.phrases.list",
      "speakerid.settings.get",
      "speakerid.speakers.create",
      "speakerid.speakers.delete",
      "speakerid.speakers.get",
      "speakerid.speakers.list",
      "speakerid.speakers.verify",
      "speech.adaptations.execute",
      "speech.config.get",
      "speech.customClasses.create",
      "speech.customClasses.delete",
      "speech.customClasses.get",
      "speech.customClasses.list",
      "speech.customClasses.undelete",
      "speech.customClasses.update",
      "speech.locations.get",
      "speech.locations.list",
      "speech.operations.cancel",
      "speech.operations.delete",
      "speech.operations.get",
      "speech.operations.list",
      "speech.operations.wait",
      "speech.phraseSets.create",
      "speech.phraseSets.delete",
      "speech.phraseSets.get",
      "speech.phraseSets.list",
      "speech.phraseSets.undelete",
      "speech.phraseSets.update",
      "speech.recognizers.create",
      "speech.recognizers.delete",
      "speech.recognizers.get",
      "speech.recognizers.list",
      "speech.recognizers.recognize",
      "speech.recognizers.undelete",
      "speech.recognizers.update",
      "stackdriver.projects.get",
      "stackdriver.resourceMetadata.list",
      "stackdriver.resourceMetadata.write",
      "storage.buckets.create",
      "storage.buckets.delete",
      "storage.buckets.list",
      "storage.buckets.listEffectiveTags",
      "storage.buckets.listTagBindings",
      "storage.hmacKeys.create",
      "storage.hmacKeys.delete",
      "storage.hmacKeys.get",
      "storage.hmacKeys.list",
      "storage.hmacKeys.update",
      "storageinsights.locations.get",
      "storageinsights.locations.list",
      "storageinsights.operations.cancel",
      "storageinsights.operations.delete",
      "storageinsights.operations.get",
      "storageinsights.operations.list",
      "storageinsights.reportConfigs.create",
      "storageinsights.reportConfigs.delete",
      "storageinsights.reportConfigs.get",
      "storageinsights.reportConfigs.list",
      "storageinsights.reportConfigs.update",
      "storageinsights.reportDetails.get",
      "storageinsights.reportDetails.list",
      "storagetransfer.agentpools.create",
      "storagetransfer.agentpools.delete",
      "storagetransfer.agentpools.get",
      "storagetransfer.agentpools.list",
      "storagetransfer.agentpools.report",
      "storagetransfer.agentpools.update",
      "storagetransfer.jobs.create",
      "storagetransfer.jobs.delete",
      "storagetransfer.jobs.get",
      "storagetransfer.jobs.list",
      "storagetransfer.jobs.run",
      "storagetransfer.jobs.update",
      "storagetransfer.operations.assign",
      "storagetransfer.operations.cancel",
      "storagetransfer.operations.get",
      "storagetransfer.operations.list",
      "storagetransfer.operations.pause",
      "storagetransfer.operations.report",
      "storagetransfer.operations.resume",
      "storagetransfer.projects.getServiceAccount",
      "stream.locations.get",
      "stream.locations.list",
      "stream.operations.cancel",
      "stream.operations.delete",
      "stream.operations.get",
      "stream.operations.list",
      "stream.streamContents.build",
      "stream.streamContents.create",
      "stream.streamContents.delete",
      "stream.streamContents.get",
      "stream.streamContents.list",
      "stream.streamContents.update",
      "stream.streamInstances.create",
      "stream.streamInstances.delete",
      "stream.streamInstances.get",
      "stream.streamInstances.list",
      "stream.streamInstances.rollout",
      "stream.streamInstances.update",
      "subscribewithgoogledeveloper.tools.get",
      "timeseriesinsights.datasets.create",
      "timeseriesinsights.datasets.delete",
      "timeseriesinsights.datasets.evaluate",
      "timeseriesinsights.datasets.list",
      "timeseriesinsights.datasets.query",
      "timeseriesinsights.datasets.update",
      "timeseriesinsights.locations.get",
      "timeseriesinsights.locations.list",
      "tpu.acceleratortypes.get",
      "tpu.acceleratortypes.list",
      "tpu.locations.get",
      "tpu.locations.list",
      "tpu.nodes.create",
      "tpu.nodes.delete",
      "tpu.nodes.get",
      "tpu.nodes.list",
      "tpu.nodes.reimage",
      "tpu.nodes.reset",
      "tpu.nodes.simulateMaintenanceEvent",
      "tpu.nodes.start",
      "tpu.nodes.stop",
      "tpu.nodes.update",
      "tpu.operations.get",
      "tpu.operations.list",
      "tpu.runtimeversions.get",
      "tpu.runtimeversions.list",
      "tpu.tensorflowversions.get",
      "tpu.tensorflowversions.list",
      "trafficdirector.networks.getConfigs",
      "trafficdirector.networks.reportMetrics",
      "transcoder.jobTemplates.create",
      "transcoder.jobTemplates.delete",
      "transcoder.jobTemplates.get",
      "transcoder.jobTemplates.list",
      "transcoder.jobs.create",
      "transcoder.jobs.delete",
      "transcoder.jobs.get",
      "transcoder.jobs.list",
      "transferappliance.appliances.create",
      "transferappliance.appliances.delete",
      "transferappliance.appliances.get",
      "transferappliance.appliances.list",
      "transferappliance.appliances.update",
      "transferappliance.credentials.get",
      "transferappliance.locations.get",
      "transferappliance.locations.list",
      "transferappliance.operations.cancel",
      "transferappliance.operations.delete",
      "transferappliance.operations.get",
      "transferappliance.operations.list",
      "transferappliance.orders.create",
      "transferappliance.orders.delete",
      "transferappliance.orders.get",
      "transferappliance.orders.list",
      "transferappliance.orders.update",
      "transferappliance.savedAddresses.create",
      "transferappliance.savedAddresses.delete",
      "transferappliance.savedAddresses.get",
      "transferappliance.savedAddresses.list",
      "transferappliance.savedAddresses.update",
      "translationhub.portals.create",
      "translationhub.portals.delete",
      "translationhub.portals.get",
      "translationhub.portals.list",
      "translationhub.portals.update",
      "videostitcher.cdnKeys.create",
      "videostitcher.cdnKeys.delete",
      "videostitcher.cdnKeys.get",
      "videostitcher.cdnKeys.list",
      "videostitcher.cdnKeys.update",
      "videostitcher.liveAdTagDetails.get",
      "videostitcher.liveAdTagDetails.list",
      "videostitcher.liveSessions.create",
      "videostitcher.liveSessions.get",
      "videostitcher.slates.create",
      "videostitcher.slates.delete",
      "videostitcher.slates.get",
      "videostitcher.slates.list",
      "videostitcher.slates.update",
      "videostitcher.vodAdTagDetails.get",
      "videostitcher.vodAdTagDetails.list",
      "videostitcher.vodSessions.create",
      "videostitcher.vodSessions.get",
      "videostitcher.vodStitchDetails.get",
      "videostitcher.vodStitchDetails.list",
      "visionai.analyses.create",
      "visionai.analyses.delete",
      "visionai.analyses.get",
      "visionai.analyses.getIamPolicy",
      "visionai.analyses.list",
      "visionai.analyses.update",
      "visionai.annotations.create",
      "visionai.annotations.delete",
      "visionai.annotations.get",
      "visionai.annotations.list",
      "visionai.annotations.update",
      "visionai.applications.create",
      "visionai.applications.delete",
      "visionai.applications.deploy",
      "visionai.applications.get",
      "visionai.applications.list",
      "visionai.applications.undeploy",
      "visionai.applications.update",
      "visionai.assets.clip",
      "visionai.assets.create",
      "visionai.assets.delete",
      "visionai.assets.generateHlsUri",
      "visionai.assets.get",
      "visionai.assets.ingest",
      "visionai.assets.list",
      "visionai.assets.search",
      "visionai.assets.update",
      "visionai.clusters.create",
      "visionai.clusters.delete",
      "visionai.clusters.get",
      "visionai.clusters.getIamPolicy",
      "visionai.clusters.list",
      "visionai.clusters.update",
      "visionai.clusters.watch",
      "visionai.corpora.create",
      "visionai.corpora.delete",
      "visionai.corpora.get",
      "visionai.corpora.list",
      "visionai.corpora.suggest",
      "visionai.corpora.update",
      "visionai.dataSchemas.create",
      "visionai.dataSchemas.delete",
      "visionai.dataSchemas.get",
      "visionai.dataSchemas.list",
      "visionai.dataSchemas.update",
      "visionai.dataSchemas.validate",
      "visionai.drafts.create",
      "visionai.drafts.delete",
      "visionai.drafts.get",
      "visionai.drafts.list",
      "visionai.drafts.update",
      "visionai.events.create",
      "visionai.events.delete",
      "visionai.events.get",
      "visionai.events.getIamPolicy",
      "visionai.events.list",
      "visionai.events.update",
      "visionai.instances.get",
      "visionai.instances.list",
      "visionai.locations.get",
      "visionai.locations.list",
      "visionai.operations.cancel",
      "visionai.operations.delete",
      "visionai.operations.get",
      "visionai.operations.list",
      "visionai.operations.wait",
      "visionai.operators.create",
      "visionai.operators.delete",
      "visionai.operators.get",
      "visionai.operators.getIamPolicy",
      "visionai.operators.list",
      "visionai.operators.update",
      "visionai.processors.create",
      "visionai.processors.delete",
      "visionai.processors.get",
      "visionai.processors.list",
      "visionai.processors.listPrebuilt",
      "visionai.processors.update",
      "visionai.searchConfigs.create",
      "visionai.searchConfigs.delete",
      "visionai.searchConfigs.get",
      "visionai.searchConfigs.list",
      "visionai.searchConfigs.update",
      "visionai.series.acquireLease",
      "visionai.series.create",
      "visionai.series.delete",
      "visionai.series.get",
      "visionai.series.getIamPolicy",
      "visionai.series.list",
      "visionai.series.receive",
      "visionai.series.releaseLease",
      "visionai.series.renewLease",
      "visionai.series.send",
      "visionai.series.update",
      "visionai.streams.create",
      "visionai.streams.delete",
      "visionai.streams.get",
      "visionai.streams.getIamPolicy",
      "visionai.streams.list",
      "visionai.streams.receive",
      "visionai.streams.send",
      "visionai.streams.update",
      "visionai.uistreams.create",
      "visionai.uistreams.delete",
      "visionai.uistreams.generateStreamThumbnails",
      "visionai.uistreams.get",
      "visionai.uistreams.list",
      "visualinspection.annotationSets.create",
      "visualinspection.annotationSets.delete",
      "visualinspection.annotationSets.get",
      "visualinspection.annotationSets.list",
      "visualinspection.annotationSets.update",
      "visualinspection.annotationSpecs.create",
      "visualinspection.annotationSpecs.delete",
      "visualinspection.annotationSpecs.get",
      "visualinspection.annotationSpecs.list",
      "visualinspection.annotations.create",
      "visualinspection.annotations.delete",
      "visualinspection.annotations.get",
      "visualinspection.annotations.list",
      "visualinspection.annotations.update",
      "visualinspection.datasets.create",
      "visualinspection.datasets.delete",
      "visualinspection.datasets.export",
      "visualinspection.datasets.get",
      "visualinspection.datasets.import",
      "visualinspection.datasets.list",
      "visualinspection.datasets.update",
      "visualinspection.images.delete",
      "visualinspection.images.get",
      "visualinspection.images.list",
      "visualinspection.images.update",
      "visualinspection.locations.get",
      "visualinspection.locations.list",
      "visualinspection.locations.reportUsageMetrics",
      "visualinspection.modelEvaluations.get",
      "visualinspection.modelEvaluations.list",
      "visualinspection.models.create",
      "visualinspection.models.delete",
      "visualinspection.models.get",
      "visualinspection.models.list",
      "visualinspection.models.update",
      "visualinspection.models.writePrediction",
      "visualinspection.modules.create",
      "visualinspection.modules.delete",
      "visualinspection.modules.get",
      "visualinspection.modules.list",
      "visualinspection.modules.update",
      "visualinspection.operations.get",
      "visualinspection.operations.list",
      "visualinspection.solutionArtifacts.create",
      "visualinspection.solutionArtifacts.delete",
      "visualinspection.solutionArtifacts.get",
      "visualinspection.solutionArtifacts.list",
      "visualinspection.solutionArtifacts.predict",
      "visualinspection.solutionArtifacts.update",
      "visualinspection.solutions.create",
      "visualinspection.solutions.delete",
      "visualinspection.solutions.get",
      "visualinspection.solutions.list",
      "vmmigration.cloneJobs.create",
      "vmmigration.cloneJobs.get",
      "vmmigration.cloneJobs.list",
      "vmmigration.cloneJobs.update",
      "vmmigration.cutoverJobs.create",
      "vmmigration.cutoverJobs.get",
      "vmmigration.cutoverJobs.list",
      "vmmigration.cutoverJobs.update",
      "vmmigration.datacenterConnectors.create",
      "vmmigration.datacenterConnectors.delete",
      "vmmigration.datacenterConnectors.get",
      "vmmigration.datacenterConnectors.list",
      "vmmigration.datacenterConnectors.update",
      "vmmigration.deployments.create",
      "vmmigration.deployments.get",
      "vmmigration.deployments.list",
      "vmmigration.groups.create",
      "vmmigration.groups.delete",
      "vmmigration.groups.get",
      "vmmigration.groups.list",
      "vmmigration.groups.update",
      "vmmigration.locations.get",
      "vmmigration.locations.list",
      "vmmigration.migratingVms.create",
      "vmmigration.migratingVms.delete",
      "vmmigration.migratingVms.get",
      "vmmigration.migratingVms.list",
      "vmmigration.migratingVms.update",
      "vmmigration.operations.cancel",
      "vmmigration.operations.delete",
      "vmmigration.operations.get",
      "vmmigration.operations.list",
      "vmmigration.replicationCycles.get",
      "vmmigration.replicationCycles.list",
      "vmmigration.sources.create",
      "vmmigration.sources.delete",
      "vmmigration.sources.get",
      "vmmigration.sources.list",
      "vmmigration.sources.update",
      "vmmigration.targets.create",
      "vmmigration.targets.delete",
      "vmmigration.targets.get",
      "vmmigration.targets.list",
      "vmmigration.targets.update",
      "vmmigration.utilizationReports.create",
      "vmmigration.utilizationReports.delete",
      "vmmigration.utilizationReports.get",
      "vmmigration.utilizationReports.list",
      "vmwareengine.clusters.create",
      "vmwareengine.clusters.delete",
      "vmwareengine.clusters.get",
      "vmwareengine.clusters.getIamPolicy",
      "vmwareengine.clusters.list",
      "vmwareengine.clusters.update",
      "vmwareengine.hcxActivationKeys.create",
      "vmwareengine.hcxActivationKeys.get",
      "vmwareengine.hcxActivationKeys.getIamPolicy",
      "vmwareengine.hcxActivationKeys.list",
      "vmwareengine.locations.get",
      "vmwareengine.locations.list",
      "vmwareengine.networkPolicies.create",
      "vmwareengine.networkPolicies.delete",
      "vmwareengine.networkPolicies.get",
      "vmwareengine.networkPolicies.list",
      "vmwareengine.networkPolicies.update",
      "vmwareengine.nodeTypes.get",
      "vmwareengine.nodeTypes.list",
      "vmwareengine.operations.delete",
      "vmwareengine.operations.get",
      "vmwareengine.operations.list",
      "vmwareengine.privateClouds.create",
      "vmwareengine.privateClouds.delete",
      "vmwareengine.privateClouds.get",
      "vmwareengine.privateClouds.getIamPolicy",
      "vmwareengine.privateClouds.list",
      "vmwareengine.privateClouds.resetNsxCredentials",
      "vmwareengine.privateClouds.resetVcenterCredentials",
      "vmwareengine.privateClouds.showNsxCredentials",
      "vmwareengine.privateClouds.showVcenterCredentials",
      "vmwareengine.privateClouds.undelete",
      "vmwareengine.privateClouds.update",
      "vmwareengine.privateConnections.create",
      "vmwareengine.privateConnections.delete",
      "vmwareengine.privateConnections.get",
      "vmwareengine.privateConnections.list",
      "vmwareengine.privateConnections.listPeeringRoutes",
      "vmwareengine.privateConnections.update",
      "vmwareengine.services.use",
      "vmwareengine.services.view",
      "vmwareengine.subnets.get",
      "vmwareengine.subnets.list",
      "vmwareengine.subnets.update",
      "vmwareengine.vmwareEngineNetworks.create",
      "vmwareengine.vmwareEngineNetworks.delete",
      "vmwareengine.vmwareEngineNetworks.get",
      "vmwareengine.vmwareEngineNetworks.list",
      "vmwareengine.vmwareEngineNetworks.update",
      "vpcaccess.connectors.create",
      "vpcaccess.connectors.delete",
      "vpcaccess.connectors.get",
      "vpcaccess.connectors.list",
      "vpcaccess.connectors.update",
      "vpcaccess.connectors.use",
      "vpcaccess.locations.list",
      "vpcaccess.operations.get",
      "vpcaccess.operations.list",
      "workflows.callbacks.send",
      "workflows.executions.cancel",
      "workflows.executions.create",
      "workflows.executions.get",
      "workflows.executions.list",
      "workflows.locations.get",
      "workflows.locations.list",
      "workflows.operations.cancel",
      "workflows.operations.get",
      "workflows.operations.list",
      "workflows.workflows.create",
      "workflows.workflows.delete",
      "workflows.workflows.get",
      "workflows.workflows.list",
      "workflows.workflows.update",
      "workloadcertificate.locations.get",
      "workloadcertificate.locations.list",
      "workloadcertificate.operations.cancel",
      "workloadcertificate.operations.delete",
      "workloadcertificate.operations.get",
      "workloadcertificate.operations.list",
      "workloadcertificate.workloadCertificateFeature.get",
      "workloadcertificate.workloadCertificateFeature.update",
      "workloadcertificate.workloadRegistrations.create",
      "workloadcertificate.workloadRegistrations.delete",
      "workloadcertificate.workloadRegistrations.get",
      "workloadcertificate.workloadRegistrations.list",
      "workloadcertificate.workloadRegistrations.update",
      "workloadmanager.evaluations.create",
      "workloadmanager.evaluations.delete",
      "workloadmanager.evaluations.get",
      "workloadmanager.evaluations.list",
      "workloadmanager.evaluations.run",
      "workloadmanager.evaluations.update",
      "workloadmanager.executions.delete",
      "workloadmanager.executions.get",
      "workloadmanager.executions.list",
      "workloadmanager.locations.get",
      "workloadmanager.locations.list",
      "workloadmanager.operations.cancel",
      "workloadmanager.operations.delete",
      "workloadmanager.operations.get",
      "workloadmanager.operations.list",
      "workloadmanager.results.list",
      "workloadmanager.rules.list",
      "workstations.operations.get",
      "workstations.workstationClusters.create",
      "workstations.workstationClusters.delete",
      "workstations.workstationClusters.get",
      "workstations.workstationClusters.list",
      "workstations.workstationClusters.update",
      "workstations.workstationConfigs.create",
      "workstations.workstationConfigs.delete",
      "workstations.workstationConfigs.get",
      "workstations.workstationConfigs.getIamPolicy",
      "workstations.workstationConfigs.list",
      "workstations.workstationConfigs.update",
      "workstations.workstations.create",
      "workstations.workstations.delete",
      "workstations.workstations.get",
      "workstations.workstations.getIamPolicy",
      "workstations.workstations.list",
      "workstations.workstations.start",
      "workstations.workstations.stop",
      "workstations.workstations.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/endpoints.portalAdmin",
    "title": "Endpoints Portal Admin",
    "description": "Full access to Endpoints Portal resources",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "servicemanagement.services.get"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/endpoints.serviceAgent",
    "title": "Cloud Endpoints Service Agent",
    "description": "Gives the Cloud Endpoints service account access to Endpoints services and the ability to act as a service controller.",
    "includedPermissions": [
      "servicemanagement.services.check",
      "servicemanagement.services.get",
      "servicemanagement.services.quota",
      "servicemanagement.services.report"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/endpointsportal.serviceAgent",
    "title": "Endpoints Portal Service Agent",
    "description": "Can access information about Endpoints services for consumer portal management, and can read Source Repositories for consumer portal custom content.",
    "includedPermissions": [
      "servicemanagement.services.get",
      "servicemanagement.services.list",
      "source.repos.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/enterpriseknowledgegraph.admin",
    "title": "Enterprise Knowledge Graph Admin",
    "description": "Administrator of Enterprise Knowledge Graph resources",
    "includedPermissions": [
      "enterpriseknowledgegraph.cloudKnowledgeGraphEntities.lookup",
      "enterpriseknowledgegraph.cloudKnowledgeGraphEntities.search",
      "enterpriseknowledgegraph.entityReconciliationJobs.cancel",
      "enterpriseknowledgegraph.entityReconciliationJobs.create",
      "enterpriseknowledgegraph.entityReconciliationJobs.delete",
      "enterpriseknowledgegraph.entityReconciliationJobs.get",
      "enterpriseknowledgegraph.entityReconciliationJobs.list",
      "enterpriseknowledgegraph.publicKnowledgeGraphEntities.lookup",
      "enterpriseknowledgegraph.publicKnowledgeGraphEntities.search",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/enterpriseknowledgegraph.editor",
    "title": "Enterprise Knowledge Graph Editor",
    "description": "Editor of Enterprise Knowledge Graph resources",
    "includedPermissions": [
      "enterpriseknowledgegraph.cloudKnowledgeGraphEntities.lookup",
      "enterpriseknowledgegraph.cloudKnowledgeGraphEntities.search",
      "enterpriseknowledgegraph.entityReconciliationJobs.cancel",
      "enterpriseknowledgegraph.entityReconciliationJobs.create",
      "enterpriseknowledgegraph.entityReconciliationJobs.delete",
      "enterpriseknowledgegraph.entityReconciliationJobs.get",
      "enterpriseknowledgegraph.entityReconciliationJobs.list",
      "enterpriseknowledgegraph.publicKnowledgeGraphEntities.lookup",
      "enterpriseknowledgegraph.publicKnowledgeGraphEntities.search",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/enterpriseknowledgegraph.serviceAgent",
    "title": "Enterprise Knowledge Graph Service Agent",
    "description": "Gives Enterprise Knowledge Graph Service Account access to consumer resources.",
    "includedPermissions": [
      "bigquery.config.get",
      "bigquery.datasets.create",
      "bigquery.datasets.get",
      "bigquery.jobs.create",
      "bigquery.readsessions.create",
      "bigquery.readsessions.getData",
      "bigquery.tables.create",
      "bigquery.tables.get",
      "bigquery.tables.getData",
      "bigquery.tables.list",
      "bigquery.tables.update",
      "bigquery.tables.updateData",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storage.objects.get",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/enterpriseknowledgegraph.viewer",
    "title": "Enterprise Knowledge Graph Viewer",
    "description": "Viewer of Enterprise Knowledge Graph resources",
    "includedPermissions": [
      "enterpriseknowledgegraph.cloudKnowledgeGraphEntities.lookup",
      "enterpriseknowledgegraph.cloudKnowledgeGraphEntities.search",
      "enterpriseknowledgegraph.entityReconciliationJobs.get",
      "enterpriseknowledgegraph.entityReconciliationJobs.list",
      "enterpriseknowledgegraph.publicKnowledgeGraphEntities.lookup",
      "enterpriseknowledgegraph.publicKnowledgeGraphEntities.search",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/errorreporting.admin",
    "title": "Error Reporting Admin",
    "description": "Administrative access to Error Reporting.",
    "includedPermissions": [
      "cloudnotifications.activities.list",
      "errorreporting.applications.list",
      "errorreporting.errorEvents.create",
      "errorreporting.errorEvents.delete",
      "errorreporting.errorEvents.list",
      "errorreporting.groupMetadata.get",
      "errorreporting.groupMetadata.update",
      "errorreporting.groups.list",
      "logging.notificationRules.create",
      "logging.notificationRules.delete",
      "logging.notificationRules.get",
      "logging.notificationRules.list",
      "logging.notificationRules.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "stackdriver.projects.get"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/errorreporting.user",
    "title": "Error Reporting User",
    "description": "User access to Error Reporting. Can list all errors and update their metadata. Can delete error events.",
    "includedPermissions": [
      "cloudnotifications.activities.list",
      "errorreporting.applications.list",
      "errorreporting.errorEvents.delete",
      "errorreporting.errorEvents.list",
      "errorreporting.groupMetadata.get",
      "errorreporting.groupMetadata.update",
      "errorreporting.groups.list",
      "logging.notificationRules.create",
      "logging.notificationRules.delete",
      "logging.notificationRules.get",
      "logging.notificationRules.list",
      "logging.notificationRules.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "stackdriver.projects.get"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/errorreporting.viewer",
    "title": "Error Reporting Viewer",
    "description": "Read-only access to all Error Reporting data.",
    "includedPermissions": [
      "cloudnotifications.activities.list",
      "errorreporting.applications.list",
      "errorreporting.errorEvents.list",
      "errorreporting.groupMetadata.get",
      "errorreporting.groups.list",
      "logging.notificationRules.get",
      "logging.notificationRules.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "stackdriver.projects.get"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/errorreporting.writer",
    "title": "Error Reporting Writer",
    "description": "Can send error events to Error Reporting. Intended for service accounts.",
    "includedPermissions": [
      "errorreporting.errorEvents.create"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/essentialcontacts.admin",
    "title": "Essential Contacts Admin",
    "description": "Full access to all essential contacts",
    "includedPermissions": [
      "essentialcontacts.contacts.create",
      "essentialcontacts.contacts.delete",
      "essentialcontacts.contacts.get",
      "essentialcontacts.contacts.list",
      "essentialcontacts.contacts.send",
      "essentialcontacts.contacts.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/essentialcontacts.viewer",
    "title": "Essential Contacts Viewer",
    "description": "Viewer for all essential contacts",
    "includedPermissions": [
      "essentialcontacts.contacts.get",
      "essentialcontacts.contacts.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/eventarc.admin",
    "title": "Eventarc Admin",
    "description": "Full control over all Eventarc resources.",
    "includedPermissions": [
      "eventarc.channelConnections.create",
      "eventarc.channelConnections.delete",
      "eventarc.channelConnections.get",
      "eventarc.channelConnections.getIamPolicy",
      "eventarc.channelConnections.list",
      "eventarc.channelConnections.publish",
      "eventarc.channelConnections.setIamPolicy",
      "eventarc.channels.attach",
      "eventarc.channels.create",
      "eventarc.channels.delete",
      "eventarc.channels.get",
      "eventarc.channels.getIamPolicy",
      "eventarc.channels.list",
      "eventarc.channels.publish",
      "eventarc.channels.setIamPolicy",
      "eventarc.channels.undelete",
      "eventarc.channels.update",
      "eventarc.events.receiveAuditLogWritten",
      "eventarc.events.receiveEvent",
      "eventarc.googleChannelConfigs.get",
      "eventarc.googleChannelConfigs.update",
      "eventarc.locations.get",
      "eventarc.locations.list",
      "eventarc.operations.cancel",
      "eventarc.operations.delete",
      "eventarc.operations.get",
      "eventarc.operations.list",
      "eventarc.providers.get",
      "eventarc.providers.list",
      "eventarc.triggers.create",
      "eventarc.triggers.delete",
      "eventarc.triggers.get",
      "eventarc.triggers.getIamPolicy",
      "eventarc.triggers.list",
      "eventarc.triggers.setIamPolicy",
      "eventarc.triggers.undelete",
      "eventarc.triggers.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/eventarc.connectionPublisher",
    "title": "Eventarc Connection Publisher",
    "description": "Can publish events to Eventarc Channel Connections.",
    "includedPermissions": [
      "eventarc.channelConnections.get",
      "eventarc.channelConnections.list",
      "eventarc.channelConnections.publish",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/eventarc.developer",
    "title": "Eventarc Developer",
    "description": "Access to read and write Eventarc resources.",
    "includedPermissions": [
      "eventarc.channelConnections.create",
      "eventarc.channelConnections.delete",
      "eventarc.channelConnections.get",
      "eventarc.channelConnections.getIamPolicy",
      "eventarc.channelConnections.list",
      "eventarc.channelConnections.publish",
      "eventarc.channels.attach",
      "eventarc.channels.create",
      "eventarc.channels.delete",
      "eventarc.channels.get",
      "eventarc.channels.getIamPolicy",
      "eventarc.channels.list",
      "eventarc.channels.publish",
      "eventarc.channels.undelete",
      "eventarc.channels.update",
      "eventarc.googleChannelConfigs.get",
      "eventarc.googleChannelConfigs.update",
      "eventarc.locations.get",
      "eventarc.locations.list",
      "eventarc.operations.cancel",
      "eventarc.operations.delete",
      "eventarc.operations.get",
      "eventarc.operations.list",
      "eventarc.providers.get",
      "eventarc.providers.list",
      "eventarc.triggers.create",
      "eventarc.triggers.delete",
      "eventarc.triggers.get",
      "eventarc.triggers.getIamPolicy",
      "eventarc.triggers.list",
      "eventarc.triggers.undelete",
      "eventarc.triggers.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/eventarc.eventReceiver",
    "title": "Eventarc Event Receiver",
    "description": "Can receive events from all event providers.",
    "includedPermissions": [
      "eventarc.events.receiveAuditLogWritten",
      "eventarc.events.receiveEvent"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/eventarc.publisher",
    "title": "Eventarc Publisher",
    "description": "Can publish events to Eventarc channels.",
    "includedPermissions": [
      "eventarc.channels.get",
      "eventarc.channels.list",
      "eventarc.channels.publish",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/eventarc.serviceAgent",
    "title": "Eventarc Service Agent",
    "description": "Gives Eventarc service account access to managed resources.",
    "includedPermissions": [
      "cloudfunctions.functions.get",
      "compute.instanceGroupManagers.get",
      "compute.networkAttachments.get",
      "container.clusters.get",
      "container.deployments.create",
      "container.deployments.delete",
      "container.deployments.get",
      "container.deployments.list",
      "container.deployments.update",
      "container.namespaces.create",
      "container.namespaces.delete",
      "container.namespaces.get",
      "container.namespaces.list",
      "container.serviceAccounts.create",
      "container.serviceAccounts.delete",
      "container.serviceAccounts.get",
      "container.serviceAccounts.list",
      "container.services.get",
      "container.services.list",
      "dns.networks.targetWithPeeringZone",
      "eventarc.channels.publish",
      "iam.serviceAccounts.actAs",
      "iam.serviceAccounts.getAccessToken",
      "iam.serviceAccounts.getOpenIdToken",
      "monitoring.timeSeries.create",
      "pubsub.subscriptions.consume",
      "pubsub.subscriptions.create",
      "pubsub.subscriptions.delete",
      "pubsub.subscriptions.get",
      "pubsub.subscriptions.list",
      "pubsub.subscriptions.update",
      "pubsub.topics.attachSubscription",
      "pubsub.topics.create",
      "pubsub.topics.delete",
      "pubsub.topics.get",
      "pubsub.topics.list",
      "pubsub.topics.publish",
      "pubsub.topics.update",
      "run.jobs.get",
      "run.services.get",
      "serviceusage.services.use",
      "storage.buckets.get",
      "storage.buckets.update",
      "workflows.workflows.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/eventarc.viewer",
    "title": "Eventarc Viewer",
    "description": "Can view the state of all Eventarc resources, including IAM policies.",
    "includedPermissions": [
      "eventarc.channelConnections.get",
      "eventarc.channelConnections.getIamPolicy",
      "eventarc.channelConnections.list",
      "eventarc.channels.get",
      "eventarc.channels.getIamPolicy",
      "eventarc.channels.list",
      "eventarc.googleChannelConfigs.get",
      "eventarc.locations.get",
      "eventarc.locations.list",
      "eventarc.operations.get",
      "eventarc.operations.list",
      "eventarc.providers.get",
      "eventarc.providers.list",
      "eventarc.triggers.get",
      "eventarc.triggers.getIamPolicy",
      "eventarc.triggers.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/file.editor",
    "title": "Cloud Filestore Editor",
    "description": "Read-write access to Filestore instances and related resources.",
    "includedPermissions": [
      "file.backups.create",
      "file.backups.createTagBinding",
      "file.backups.delete",
      "file.backups.deleteTagBinding",
      "file.backups.get",
      "file.backups.list",
      "file.backups.listEffectiveTags",
      "file.backups.listTagBindings",
      "file.backups.update",
      "file.instances.create",
      "file.instances.createTagBinding",
      "file.instances.delete",
      "file.instances.deleteTagBinding",
      "file.instances.get",
      "file.instances.list",
      "file.instances.listEffectiveTags",
      "file.instances.listTagBindings",
      "file.instances.restore",
      "file.instances.revert",
      "file.instances.update",
      "file.locations.get",
      "file.locations.list",
      "file.operations.cancel",
      "file.operations.delete",
      "file.operations.get",
      "file.operations.list",
      "file.snapshots.create",
      "file.snapshots.createTagBinding",
      "file.snapshots.delete",
      "file.snapshots.deleteTagBinding",
      "file.snapshots.get",
      "file.snapshots.list",
      "file.snapshots.listEffectiveTags",
      "file.snapshots.listTagBindings",
      "file.snapshots.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/file.serviceAgent",
    "title": "Cloud Filestore Service Agent",
    "description": "Gives Cloud Filestore service account access to managed resources.",
    "includedPermissions": [
      "compute.globalOperations.get",
      "compute.networks.addPeering",
      "compute.networks.get",
      "compute.networks.removePeering",
      "compute.networks.update",
      "compute.networks.updatePeering",
      "compute.routes.list",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.timeSeries.create",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/file.viewer",
    "title": "Cloud Filestore Viewer",
    "description": "Read-only access to Filestore instances and related resources.",
    "includedPermissions": [
      "file.backups.get",
      "file.backups.list",
      "file.backups.listEffectiveTags",
      "file.backups.listTagBindings",
      "file.instances.get",
      "file.instances.list",
      "file.instances.listEffectiveTags",
      "file.instances.listTagBindings",
      "file.locations.get",
      "file.locations.list",
      "file.operations.get",
      "file.operations.list",
      "file.snapshots.get",
      "file.snapshots.list",
      "file.snapshots.listEffectiveTags",
      "file.snapshots.listTagBindings"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebase.admin",
    "title": "Firebase Admin",
    "description": "Full access to Firebase products.",
    "includedPermissions": [
      "apikeys.keys.get",
      "apikeys.keys.getKeyString",
      "apikeys.keys.list",
      "apikeys.keys.lookup",
      "appengine.applications.get",
      "automl.annotationSpecs.create",
      "automl.annotationSpecs.delete",
      "automl.annotationSpecs.get",
      "automl.annotationSpecs.list",
      "automl.annotationSpecs.update",
      "automl.annotations.approve",
      "automl.annotations.create",
      "automl.annotations.list",
      "automl.annotations.manipulate",
      "automl.annotations.reject",
      "automl.columnSpecs.get",
      "automl.columnSpecs.list",
      "automl.columnSpecs.update",
      "automl.datasets.create",
      "automl.datasets.delete",
      "automl.datasets.export",
      "automl.datasets.get",
      "automl.datasets.getIamPolicy",
      "automl.datasets.import",
      "automl.datasets.list",
      "automl.datasets.setIamPolicy",
      "automl.datasets.update",
      "automl.examples.delete",
      "automl.examples.get",
      "automl.examples.list",
      "automl.examples.update",
      "automl.files.delete",
      "automl.files.list",
      "automl.humanAnnotationTasks.create",
      "automl.humanAnnotationTasks.delete",
      "automl.humanAnnotationTasks.get",
      "automl.humanAnnotationTasks.list",
      "automl.locations.get",
      "automl.locations.getIamPolicy",
      "automl.locations.list",
      "automl.locations.setIamPolicy",
      "automl.modelEvaluations.create",
      "automl.modelEvaluations.get",
      "automl.modelEvaluations.list",
      "automl.models.create",
      "automl.models.delete",
      "automl.models.deploy",
      "automl.models.export",
      "automl.models.get",
      "automl.models.getIamPolicy",
      "automl.models.list",
      "automl.models.predict",
      "automl.models.setIamPolicy",
      "automl.models.undeploy",
      "automl.operations.cancel",
      "automl.operations.delete",
      "automl.operations.get",
      "automl.operations.list",
      "automl.tableSpecs.get",
      "automl.tableSpecs.list",
      "automl.tableSpecs.update",
      "clientauthconfig.brands.get",
      "clientauthconfig.brands.list",
      "clientauthconfig.brands.update",
      "clientauthconfig.clients.create",
      "clientauthconfig.clients.delete",
      "clientauthconfig.clients.get",
      "clientauthconfig.clients.list",
      "clientauthconfig.clients.update",
      "cloudbuild.builds.get",
      "cloudbuild.builds.list",
      "cloudbuild.operations.get",
      "cloudbuild.operations.list",
      "cloudconfig.configs.get",
      "cloudconfig.configs.update",
      "cloudfunctions.functions.call",
      "cloudfunctions.functions.create",
      "cloudfunctions.functions.delete",
      "cloudfunctions.functions.get",
      "cloudfunctions.functions.getIamPolicy",
      "cloudfunctions.functions.invoke",
      "cloudfunctions.functions.list",
      "cloudfunctions.functions.setIamPolicy",
      "cloudfunctions.functions.sourceCodeGet",
      "cloudfunctions.functions.sourceCodeSet",
      "cloudfunctions.functions.update",
      "cloudfunctions.locations.get",
      "cloudfunctions.locations.list",
      "cloudfunctions.operations.get",
      "cloudfunctions.operations.list",
      "cloudfunctions.runtimes.list",
      "cloudmessaging.messages.create",
      "cloudnotifications.activities.list",
      "cloudtestservice.environmentcatalog.get",
      "cloudtestservice.matrices.create",
      "cloudtestservice.matrices.get",
      "cloudtestservice.matrices.update",
      "cloudtoolresults.executions.create",
      "cloudtoolresults.executions.get",
      "cloudtoolresults.executions.list",
      "cloudtoolresults.executions.update",
      "cloudtoolresults.histories.create",
      "cloudtoolresults.histories.get",
      "cloudtoolresults.histories.list",
      "cloudtoolresults.settings.create",
      "cloudtoolresults.settings.get",
      "cloudtoolresults.settings.update",
      "cloudtoolresults.steps.create",
      "cloudtoolresults.steps.get",
      "cloudtoolresults.steps.list",
      "cloudtoolresults.steps.update",
      "datastore.databases.create",
      "datastore.databases.createTagBinding",
      "datastore.databases.delete",
      "datastore.databases.deleteTagBinding",
      "datastore.databases.export",
      "datastore.databases.get",
      "datastore.databases.getMetadata",
      "datastore.databases.import",
      "datastore.databases.list",
      "datastore.databases.listEffectiveTags",
      "datastore.databases.listTagBindings",
      "datastore.databases.update",
      "datastore.entities.allocateIds",
      "datastore.entities.create",
      "datastore.entities.delete",
      "datastore.entities.get",
      "datastore.entities.list",
      "datastore.entities.update",
      "datastore.indexes.create",
      "datastore.indexes.delete",
      "datastore.indexes.get",
      "datastore.indexes.list",
      "datastore.indexes.update",
      "datastore.keyVisualizerScans.get",
      "datastore.keyVisualizerScans.list",
      "datastore.locations.get",
      "datastore.locations.list",
      "datastore.namespaces.get",
      "datastore.namespaces.list",
      "datastore.operations.cancel",
      "datastore.operations.delete",
      "datastore.operations.get",
      "datastore.operations.list",
      "datastore.statistics.get",
      "datastore.statistics.list",
      "errorreporting.groups.list",
      "eventarc.channelConnections.create",
      "eventarc.channelConnections.delete",
      "eventarc.channelConnections.get",
      "eventarc.channelConnections.getIamPolicy",
      "eventarc.channelConnections.list",
      "eventarc.channelConnections.publish",
      "eventarc.channelConnections.setIamPolicy",
      "eventarc.channels.attach",
      "eventarc.channels.create",
      "eventarc.channels.delete",
      "eventarc.channels.get",
      "eventarc.channels.getIamPolicy",
      "eventarc.channels.list",
      "eventarc.channels.publish",
      "eventarc.channels.setIamPolicy",
      "eventarc.channels.undelete",
      "eventarc.channels.update",
      "eventarc.events.receiveAuditLogWritten",
      "eventarc.events.receiveEvent",
      "eventarc.googleChannelConfigs.get",
      "eventarc.googleChannelConfigs.update",
      "eventarc.locations.get",
      "eventarc.locations.list",
      "eventarc.operations.cancel",
      "eventarc.operations.delete",
      "eventarc.operations.get",
      "eventarc.operations.list",
      "eventarc.providers.get",
      "eventarc.providers.list",
      "eventarc.triggers.create",
      "eventarc.triggers.delete",
      "eventarc.triggers.get",
      "eventarc.triggers.getIamPolicy",
      "eventarc.triggers.list",
      "eventarc.triggers.setIamPolicy",
      "eventarc.triggers.undelete",
      "eventarc.triggers.update",
      "fcmdata.deliverydata.list",
      "firebase.billingPlans.get",
      "firebase.billingPlans.update",
      "firebase.clients.create",
      "firebase.clients.delete",
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.clients.undelete",
      "firebase.clients.update",
      "firebase.links.create",
      "firebase.links.delete",
      "firebase.links.list",
      "firebase.links.update",
      "firebase.playLinks.get",
      "firebase.playLinks.list",
      "firebase.playLinks.update",
      "firebase.projects.delete",
      "firebase.projects.get",
      "firebase.projects.update",
      "firebaseabt.experimentresults.get",
      "firebaseabt.experiments.create",
      "firebaseabt.experiments.delete",
      "firebaseabt.experiments.get",
      "firebaseabt.experiments.list",
      "firebaseabt.experiments.update",
      "firebaseabt.projectmetadata.get",
      "firebaseanalytics.resources.googleAnalyticsEdit",
      "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze",
      "firebaseappcheck.appAttestConfig.get",
      "firebaseappcheck.appAttestConfig.update",
      "firebaseappcheck.appCheckTokens.verify",
      "firebaseappcheck.debugTokens.get",
      "firebaseappcheck.debugTokens.update",
      "firebaseappcheck.deviceCheckConfig.get",
      "firebaseappcheck.deviceCheckConfig.update",
      "firebaseappcheck.playIntegrityConfig.get",
      "firebaseappcheck.playIntegrityConfig.update",
      "firebaseappcheck.recaptchaEnterpriseConfig.get",
      "firebaseappcheck.recaptchaEnterpriseConfig.update",
      "firebaseappcheck.recaptchaV3Config.get",
      "firebaseappcheck.recaptchaV3Config.update",
      "firebaseappcheck.safetyNetConfig.get",
      "firebaseappcheck.safetyNetConfig.update",
      "firebaseappcheck.services.get",
      "firebaseappcheck.services.update",
      "firebaseappdistro.groups.list",
      "firebaseappdistro.groups.update",
      "firebaseappdistro.releases.list",
      "firebaseappdistro.releases.update",
      "firebaseappdistro.testers.list",
      "firebaseappdistro.testers.update",
      "firebaseauth.configs.create",
      "firebaseauth.configs.get",
      "firebaseauth.configs.getHashConfig",
      "firebaseauth.configs.getSecret",
      "firebaseauth.configs.update",
      "firebaseauth.users.create",
      "firebaseauth.users.createSession",
      "firebaseauth.users.delete",
      "firebaseauth.users.get",
      "firebaseauth.users.sendEmail",
      "firebaseauth.users.update",
      "firebasecrash.issues.update",
      "firebasecrash.reports.get",
      "firebasecrashlytics.config.get",
      "firebasecrashlytics.config.update",
      "firebasecrashlytics.data.get",
      "firebasecrashlytics.issues.get",
      "firebasecrashlytics.issues.list",
      "firebasecrashlytics.issues.update",
      "firebasecrashlytics.sessions.get",
      "firebasedatabase.instances.create",
      "firebasedatabase.instances.delete",
      "firebasedatabase.instances.disable",
      "firebasedatabase.instances.get",
      "firebasedatabase.instances.list",
      "firebasedatabase.instances.reenable",
      "firebasedatabase.instances.undelete",
      "firebasedatabase.instances.update",
      "firebasedynamiclinks.destinations.list",
      "firebasedynamiclinks.destinations.update",
      "firebasedynamiclinks.domains.create",
      "firebasedynamiclinks.domains.delete",
      "firebasedynamiclinks.domains.get",
      "firebasedynamiclinks.domains.list",
      "firebasedynamiclinks.domains.update",
      "firebasedynamiclinks.links.create",
      "firebasedynamiclinks.links.get",
      "firebasedynamiclinks.links.list",
      "firebasedynamiclinks.links.update",
      "firebasedynamiclinks.stats.get",
      "firebaseextensions.configs.create",
      "firebaseextensions.configs.delete",
      "firebaseextensions.configs.list",
      "firebaseextensions.configs.update",
      "firebaseextensionspublisher.extensions.create",
      "firebaseextensionspublisher.extensions.delete",
      "firebaseextensionspublisher.extensions.get",
      "firebaseextensionspublisher.extensions.list",
      "firebasehosting.sites.create",
      "firebasehosting.sites.delete",
      "firebasehosting.sites.get",
      "firebasehosting.sites.list",
      "firebasehosting.sites.update",
      "firebaseinappmessaging.campaigns.create",
      "firebaseinappmessaging.campaigns.delete",
      "firebaseinappmessaging.campaigns.get",
      "firebaseinappmessaging.campaigns.list",
      "firebaseinappmessaging.campaigns.update",
      "firebasemessagingcampaigns.campaigns.create",
      "firebasemessagingcampaigns.campaigns.delete",
      "firebasemessagingcampaigns.campaigns.get",
      "firebasemessagingcampaigns.campaigns.list",
      "firebasemessagingcampaigns.campaigns.start",
      "firebasemessagingcampaigns.campaigns.stop",
      "firebasemessagingcampaigns.campaigns.update",
      "firebaseml.models.create",
      "firebaseml.models.delete",
      "firebaseml.models.get",
      "firebaseml.models.list",
      "firebaseml.models.update",
      "firebaseml.modelversions.create",
      "firebaseml.modelversions.get",
      "firebaseml.modelversions.list",
      "firebaseml.modelversions.update",
      "firebasenotifications.messages.create",
      "firebasenotifications.messages.delete",
      "firebasenotifications.messages.get",
      "firebasenotifications.messages.list",
      "firebasenotifications.messages.update",
      "firebaseperformance.config.update",
      "firebaseperformance.data.get",
      "firebaserules.releases.create",
      "firebaserules.releases.delete",
      "firebaserules.releases.get",
      "firebaserules.releases.getExecutable",
      "firebaserules.releases.list",
      "firebaserules.releases.update",
      "firebaserules.rulesets.create",
      "firebaserules.rulesets.delete",
      "firebaserules.rulesets.get",
      "firebaserules.rulesets.list",
      "firebaserules.rulesets.test",
      "firebasestorage.buckets.addFirebase",
      "firebasestorage.buckets.get",
      "firebasestorage.buckets.list",
      "firebasestorage.buckets.removeFirebase",
      "logging.logEntries.list",
      "monitoring.timeSeries.list",
      "oauthconfig.verification.get",
      "orgpolicy.policy.get",
      "recommender.cloudFunctionsPerformanceInsights.get",
      "recommender.cloudFunctionsPerformanceInsights.list",
      "recommender.cloudFunctionsPerformanceInsights.update",
      "recommender.cloudFunctionsPerformanceRecommendations.get",
      "recommender.cloudFunctionsPerformanceRecommendations.list",
      "recommender.cloudFunctionsPerformanceRecommendations.update",
      "recommender.iamPolicyInsights.get",
      "recommender.iamPolicyInsights.list",
      "recommender.iamPolicyInsights.update",
      "recommender.iamPolicyRecommendations.get",
      "recommender.iamPolicyRecommendations.list",
      "recommender.iamPolicyRecommendations.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.runServiceCostInsights.get",
      "recommender.runServiceCostInsights.list",
      "recommender.runServiceCostInsights.update",
      "recommender.runServiceCostRecommendations.get",
      "recommender.runServiceCostRecommendations.list",
      "recommender.runServiceCostRecommendations.update",
      "recommender.runServiceIdentityInsights.get",
      "recommender.runServiceIdentityInsights.list",
      "recommender.runServiceIdentityInsights.update",
      "recommender.runServiceIdentityRecommendations.get",
      "recommender.runServiceIdentityRecommendations.list",
      "recommender.runServiceIdentityRecommendations.update",
      "recommender.runServiceSecurityInsights.get",
      "recommender.runServiceSecurityInsights.list",
      "recommender.runServiceSecurityInsights.update",
      "recommender.runServiceSecurityRecommendations.get",
      "recommender.runServiceSecurityRecommendations.list",
      "recommender.runServiceSecurityRecommendations.update",
      "remotebuildexecution.blobs.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list",
      "run.configurations.get",
      "run.configurations.list",
      "run.executions.delete",
      "run.executions.get",
      "run.executions.list",
      "run.jobs.create",
      "run.jobs.delete",
      "run.jobs.get",
      "run.jobs.getIamPolicy",
      "run.jobs.list",
      "run.jobs.run",
      "run.jobs.runWithOverrides",
      "run.jobs.setIamPolicy",
      "run.jobs.update",
      "run.locations.list",
      "run.operations.delete",
      "run.operations.get",
      "run.operations.list",
      "run.revisions.delete",
      "run.revisions.get",
      "run.revisions.list",
      "run.routes.get",
      "run.routes.invoke",
      "run.routes.list",
      "run.services.create",
      "run.services.createTagBinding",
      "run.services.delete",
      "run.services.deleteTagBinding",
      "run.services.get",
      "run.services.getIamPolicy",
      "run.services.list",
      "run.services.listEffectiveTags",
      "run.services.listTagBindings",
      "run.services.setIamPolicy",
      "run.services.update",
      "run.tasks.get",
      "run.tasks.list",
      "runtimeconfig.configs.create",
      "runtimeconfig.configs.delete",
      "runtimeconfig.configs.get",
      "runtimeconfig.configs.list",
      "runtimeconfig.configs.update",
      "runtimeconfig.operations.get",
      "runtimeconfig.operations.list",
      "runtimeconfig.variables.create",
      "runtimeconfig.variables.delete",
      "runtimeconfig.variables.get",
      "runtimeconfig.variables.list",
      "runtimeconfig.variables.update",
      "runtimeconfig.variables.watch",
      "runtimeconfig.waiters.create",
      "runtimeconfig.waiters.delete",
      "runtimeconfig.waiters.get",
      "runtimeconfig.waiters.list",
      "runtimeconfig.waiters.update",
      "serviceusage.operations.get",
      "serviceusage.operations.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "storage.buckets.create",
      "storage.buckets.createTagBinding",
      "storage.buckets.delete",
      "storage.buckets.deleteTagBinding",
      "storage.buckets.get",
      "storage.buckets.getIamPolicy",
      "storage.buckets.getObjectInsights",
      "storage.buckets.list",
      "storage.buckets.listEffectiveTags",
      "storage.buckets.listTagBindings",
      "storage.buckets.setIamPolicy",
      "storage.buckets.update",
      "storage.multipartUploads.abort",
      "storage.multipartUploads.create",
      "storage.multipartUploads.list",
      "storage.multipartUploads.listParts",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.getIamPolicy",
      "storage.objects.list",
      "storage.objects.setIamPolicy",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebase.analyticsAdmin",
    "title": "Firebase Analytics Admin",
    "description": "Full access to Google Analytics for Firebase.",
    "includedPermissions": [
      "cloudnotifications.activities.list",
      "firebase.billingPlans.get",
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.links.list",
      "firebase.playLinks.get",
      "firebase.playLinks.list",
      "firebase.projects.get",
      "firebaseanalytics.resources.googleAnalyticsEdit",
      "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze",
      "firebaseextensions.configs.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebase.analyticsViewer",
    "title": "Firebase Analytics Viewer",
    "description": "Read access to Google Analytics for Firebase.",
    "includedPermissions": [
      "cloudnotifications.activities.list",
      "firebase.billingPlans.get",
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.links.list",
      "firebase.playLinks.get",
      "firebase.playLinks.list",
      "firebase.projects.get",
      "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze",
      "firebaseextensions.configs.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebase.appDistributionSdkServiceAgent",
    "title": "Firebase App Distribution Admin SDK Service Agent",
    "description": "Read and write access to Firebase App Distribution with the Admin SDK",
    "includedPermissions": [
      "firebaseappdistro.groups.list",
      "firebaseappdistro.groups.update",
      "firebaseappdistro.releases.list",
      "firebaseappdistro.releases.update",
      "firebaseappdistro.testers.list",
      "firebaseappdistro.testers.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebase.developAdmin",
    "title": "Firebase Develop Admin",
    "description": "Full access to Firebase Develop products and Analytics.",
    "includedPermissions": [
      "apikeys.keys.get",
      "apikeys.keys.getKeyString",
      "apikeys.keys.list",
      "apikeys.keys.lookup",
      "appengine.applications.get",
      "automl.annotationSpecs.create",
      "automl.annotationSpecs.delete",
      "automl.annotationSpecs.get",
      "automl.annotationSpecs.list",
      "automl.annotationSpecs.update",
      "automl.annotations.approve",
      "automl.annotations.create",
      "automl.annotations.list",
      "automl.annotations.manipulate",
      "automl.annotations.reject",
      "automl.columnSpecs.get",
      "automl.columnSpecs.list",
      "automl.columnSpecs.update",
      "automl.datasets.create",
      "automl.datasets.delete",
      "automl.datasets.export",
      "automl.datasets.get",
      "automl.datasets.getIamPolicy",
      "automl.datasets.import",
      "automl.datasets.list",
      "automl.datasets.setIamPolicy",
      "automl.datasets.update",
      "automl.examples.delete",
      "automl.examples.get",
      "automl.examples.list",
      "automl.examples.update",
      "automl.files.delete",
      "automl.files.list",
      "automl.humanAnnotationTasks.create",
      "automl.humanAnnotationTasks.delete",
      "automl.humanAnnotationTasks.get",
      "automl.humanAnnotationTasks.list",
      "automl.locations.get",
      "automl.locations.getIamPolicy",
      "automl.locations.list",
      "automl.locations.setIamPolicy",
      "automl.modelEvaluations.create",
      "automl.modelEvaluations.get",
      "automl.modelEvaluations.list",
      "automl.models.create",
      "automl.models.delete",
      "automl.models.deploy",
      "automl.models.export",
      "automl.models.get",
      "automl.models.getIamPolicy",
      "automl.models.list",
      "automl.models.predict",
      "automl.models.setIamPolicy",
      "automl.models.undeploy",
      "automl.operations.cancel",
      "automl.operations.delete",
      "automl.operations.get",
      "automl.operations.list",
      "automl.tableSpecs.get",
      "automl.tableSpecs.list",
      "automl.tableSpecs.update",
      "clientauthconfig.brands.get",
      "clientauthconfig.brands.list",
      "clientauthconfig.brands.update",
      "clientauthconfig.clients.get",
      "clientauthconfig.clients.list",
      "cloudbuild.builds.get",
      "cloudbuild.builds.list",
      "cloudbuild.operations.get",
      "cloudbuild.operations.list",
      "cloudfunctions.functions.call",
      "cloudfunctions.functions.create",
      "cloudfunctions.functions.delete",
      "cloudfunctions.functions.get",
      "cloudfunctions.functions.getIamPolicy",
      "cloudfunctions.functions.invoke",
      "cloudfunctions.functions.list",
      "cloudfunctions.functions.setIamPolicy",
      "cloudfunctions.functions.sourceCodeGet",
      "cloudfunctions.functions.sourceCodeSet",
      "cloudfunctions.functions.update",
      "cloudfunctions.locations.get",
      "cloudfunctions.locations.list",
      "cloudfunctions.operations.get",
      "cloudfunctions.operations.list",
      "cloudfunctions.runtimes.list",
      "cloudnotifications.activities.list",
      "datastore.databases.create",
      "datastore.databases.createTagBinding",
      "datastore.databases.delete",
      "datastore.databases.deleteTagBinding",
      "datastore.databases.export",
      "datastore.databases.get",
      "datastore.databases.getMetadata",
      "datastore.databases.import",
      "datastore.databases.list",
      "datastore.databases.listEffectiveTags",
      "datastore.databases.listTagBindings",
      "datastore.databases.update",
      "datastore.entities.allocateIds",
      "datastore.entities.create",
      "datastore.entities.delete",
      "datastore.entities.get",
      "datastore.entities.list",
      "datastore.entities.update",
      "datastore.indexes.create",
      "datastore.indexes.delete",
      "datastore.indexes.get",
      "datastore.indexes.list",
      "datastore.indexes.update",
      "datastore.keyVisualizerScans.get",
      "datastore.keyVisualizerScans.list",
      "datastore.locations.get",
      "datastore.locations.list",
      "datastore.namespaces.get",
      "datastore.namespaces.list",
      "datastore.operations.cancel",
      "datastore.operations.delete",
      "datastore.operations.get",
      "datastore.operations.list",
      "datastore.statistics.get",
      "datastore.statistics.list",
      "errorreporting.groups.list",
      "eventarc.channelConnections.create",
      "eventarc.channelConnections.delete",
      "eventarc.channelConnections.get",
      "eventarc.channelConnections.getIamPolicy",
      "eventarc.channelConnections.list",
      "eventarc.channelConnections.publish",
      "eventarc.channelConnections.setIamPolicy",
      "eventarc.channels.attach",
      "eventarc.channels.create",
      "eventarc.channels.delete",
      "eventarc.channels.get",
      "eventarc.channels.getIamPolicy",
      "eventarc.channels.list",
      "eventarc.channels.publish",
      "eventarc.channels.setIamPolicy",
      "eventarc.channels.undelete",
      "eventarc.channels.update",
      "eventarc.events.receiveAuditLogWritten",
      "eventarc.events.receiveEvent",
      "eventarc.googleChannelConfigs.get",
      "eventarc.googleChannelConfigs.update",
      "eventarc.locations.get",
      "eventarc.locations.list",
      "eventarc.operations.cancel",
      "eventarc.operations.delete",
      "eventarc.operations.get",
      "eventarc.operations.list",
      "eventarc.providers.get",
      "eventarc.providers.list",
      "eventarc.triggers.create",
      "eventarc.triggers.delete",
      "eventarc.triggers.get",
      "eventarc.triggers.getIamPolicy",
      "eventarc.triggers.list",
      "eventarc.triggers.setIamPolicy",
      "eventarc.triggers.undelete",
      "eventarc.triggers.update",
      "firebase.billingPlans.get",
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.links.list",
      "firebase.playLinks.get",
      "firebase.playLinks.list",
      "firebase.projects.get",
      "firebaseanalytics.resources.googleAnalyticsEdit",
      "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze",
      "firebaseappcheck.appAttestConfig.get",
      "firebaseappcheck.appAttestConfig.update",
      "firebaseappcheck.appCheckTokens.verify",
      "firebaseappcheck.debugTokens.get",
      "firebaseappcheck.debugTokens.update",
      "firebaseappcheck.deviceCheckConfig.get",
      "firebaseappcheck.deviceCheckConfig.update",
      "firebaseappcheck.playIntegrityConfig.get",
      "firebaseappcheck.playIntegrityConfig.update",
      "firebaseappcheck.recaptchaEnterpriseConfig.get",
      "firebaseappcheck.recaptchaEnterpriseConfig.update",
      "firebaseappcheck.recaptchaV3Config.get",
      "firebaseappcheck.recaptchaV3Config.update",
      "firebaseappcheck.safetyNetConfig.get",
      "firebaseappcheck.safetyNetConfig.update",
      "firebaseappcheck.services.get",
      "firebaseappcheck.services.update",
      "firebaseauth.configs.create",
      "firebaseauth.configs.get",
      "firebaseauth.configs.getHashConfig",
      "firebaseauth.configs.getSecret",
      "firebaseauth.configs.update",
      "firebaseauth.users.create",
      "firebaseauth.users.createSession",
      "firebaseauth.users.delete",
      "firebaseauth.users.get",
      "firebaseauth.users.sendEmail",
      "firebaseauth.users.update",
      "firebasedatabase.instances.create",
      "firebasedatabase.instances.delete",
      "firebasedatabase.instances.disable",
      "firebasedatabase.instances.get",
      "firebasedatabase.instances.list",
      "firebasedatabase.instances.reenable",
      "firebasedatabase.instances.undelete",
      "firebasedatabase.instances.update",
      "firebaseextensions.configs.list",
      "firebasehosting.sites.create",
      "firebasehosting.sites.delete",
      "firebasehosting.sites.get",
      "firebasehosting.sites.list",
      "firebasehosting.sites.update",
      "firebaseml.models.create",
      "firebaseml.models.delete",
      "firebaseml.models.get",
      "firebaseml.models.list",
      "firebaseml.models.update",
      "firebaseml.modelversions.create",
      "firebaseml.modelversions.get",
      "firebaseml.modelversions.list",
      "firebaseml.modelversions.update",
      "firebaserules.releases.create",
      "firebaserules.releases.delete",
      "firebaserules.releases.get",
      "firebaserules.releases.getExecutable",
      "firebaserules.releases.list",
      "firebaserules.releases.update",
      "firebaserules.rulesets.create",
      "firebaserules.rulesets.delete",
      "firebaserules.rulesets.get",
      "firebaserules.rulesets.list",
      "firebaserules.rulesets.test",
      "firebasestorage.buckets.addFirebase",
      "firebasestorage.buckets.get",
      "firebasestorage.buckets.list",
      "firebasestorage.buckets.removeFirebase",
      "logging.logEntries.list",
      "monitoring.timeSeries.list",
      "oauthconfig.verification.get",
      "orgpolicy.policy.get",
      "recommender.cloudFunctionsPerformanceInsights.get",
      "recommender.cloudFunctionsPerformanceInsights.list",
      "recommender.cloudFunctionsPerformanceInsights.update",
      "recommender.cloudFunctionsPerformanceRecommendations.get",
      "recommender.cloudFunctionsPerformanceRecommendations.list",
      "recommender.cloudFunctionsPerformanceRecommendations.update",
      "recommender.iamPolicyInsights.get",
      "recommender.iamPolicyInsights.list",
      "recommender.iamPolicyInsights.update",
      "recommender.iamPolicyRecommendations.get",
      "recommender.iamPolicyRecommendations.list",
      "recommender.iamPolicyRecommendations.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.runServiceCostInsights.get",
      "recommender.runServiceCostInsights.list",
      "recommender.runServiceCostInsights.update",
      "recommender.runServiceCostRecommendations.get",
      "recommender.runServiceCostRecommendations.list",
      "recommender.runServiceCostRecommendations.update",
      "recommender.runServiceIdentityInsights.get",
      "recommender.runServiceIdentityInsights.list",
      "recommender.runServiceIdentityInsights.update",
      "recommender.runServiceIdentityRecommendations.get",
      "recommender.runServiceIdentityRecommendations.list",
      "recommender.runServiceIdentityRecommendations.update",
      "recommender.runServiceSecurityInsights.get",
      "recommender.runServiceSecurityInsights.list",
      "recommender.runServiceSecurityInsights.update",
      "recommender.runServiceSecurityRecommendations.get",
      "recommender.runServiceSecurityRecommendations.list",
      "recommender.runServiceSecurityRecommendations.update",
      "remotebuildexecution.blobs.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list",
      "run.configurations.get",
      "run.configurations.list",
      "run.executions.delete",
      "run.executions.get",
      "run.executions.list",
      "run.jobs.create",
      "run.jobs.delete",
      "run.jobs.get",
      "run.jobs.getIamPolicy",
      "run.jobs.list",
      "run.jobs.run",
      "run.jobs.runWithOverrides",
      "run.jobs.setIamPolicy",
      "run.jobs.update",
      "run.locations.list",
      "run.operations.delete",
      "run.operations.get",
      "run.operations.list",
      "run.revisions.delete",
      "run.revisions.get",
      "run.revisions.list",
      "run.routes.get",
      "run.routes.invoke",
      "run.routes.list",
      "run.services.create",
      "run.services.createTagBinding",
      "run.services.delete",
      "run.services.deleteTagBinding",
      "run.services.get",
      "run.services.getIamPolicy",
      "run.services.list",
      "run.services.listEffectiveTags",
      "run.services.listTagBindings",
      "run.services.setIamPolicy",
      "run.services.update",
      "run.tasks.get",
      "run.tasks.list",
      "runtimeconfig.configs.create",
      "runtimeconfig.configs.delete",
      "runtimeconfig.configs.get",
      "runtimeconfig.configs.list",
      "runtimeconfig.configs.update",
      "runtimeconfig.operations.get",
      "runtimeconfig.operations.list",
      "runtimeconfig.variables.create",
      "runtimeconfig.variables.delete",
      "runtimeconfig.variables.get",
      "runtimeconfig.variables.list",
      "runtimeconfig.variables.update",
      "runtimeconfig.variables.watch",
      "runtimeconfig.waiters.create",
      "runtimeconfig.waiters.delete",
      "runtimeconfig.waiters.get",
      "runtimeconfig.waiters.list",
      "runtimeconfig.waiters.update",
      "serviceusage.operations.get",
      "serviceusage.operations.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "storage.buckets.create",
      "storage.buckets.createTagBinding",
      "storage.buckets.delete",
      "storage.buckets.deleteTagBinding",
      "storage.buckets.get",
      "storage.buckets.getIamPolicy",
      "storage.buckets.getObjectInsights",
      "storage.buckets.list",
      "storage.buckets.listEffectiveTags",
      "storage.buckets.listTagBindings",
      "storage.buckets.setIamPolicy",
      "storage.buckets.update",
      "storage.multipartUploads.abort",
      "storage.multipartUploads.create",
      "storage.multipartUploads.list",
      "storage.multipartUploads.listParts",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.getIamPolicy",
      "storage.objects.list",
      "storage.objects.setIamPolicy",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebase.developViewer",
    "title": "Firebase Develop Viewer",
    "description": "Read access to Firebase Develop products and Analytics.",
    "includedPermissions": [
      "automl.annotationSpecs.get",
      "automl.annotationSpecs.list",
      "automl.annotations.list",
      "automl.columnSpecs.get",
      "automl.columnSpecs.list",
      "automl.datasets.get",
      "automl.datasets.list",
      "automl.examples.get",
      "automl.examples.list",
      "automl.files.list",
      "automl.humanAnnotationTasks.get",
      "automl.humanAnnotationTasks.list",
      "automl.locations.get",
      "automl.locations.list",
      "automl.modelEvaluations.get",
      "automl.modelEvaluations.list",
      "automl.models.get",
      "automl.models.list",
      "automl.operations.get",
      "automl.operations.list",
      "automl.tableSpecs.get",
      "automl.tableSpecs.list",
      "clientauthconfig.brands.get",
      "clientauthconfig.brands.list",
      "cloudbuild.builds.get",
      "cloudbuild.builds.list",
      "cloudbuild.operations.get",
      "cloudbuild.operations.list",
      "cloudfunctions.functions.get",
      "cloudfunctions.functions.getIamPolicy",
      "cloudfunctions.functions.list",
      "cloudfunctions.locations.get",
      "cloudfunctions.locations.list",
      "cloudfunctions.operations.get",
      "cloudfunctions.operations.list",
      "cloudfunctions.runtimes.list",
      "cloudnotifications.activities.list",
      "datastore.databases.get",
      "datastore.databases.getMetadata",
      "datastore.databases.list",
      "datastore.entities.get",
      "datastore.entities.list",
      "datastore.indexes.get",
      "datastore.indexes.list",
      "datastore.namespaces.get",
      "datastore.namespaces.list",
      "datastore.statistics.get",
      "datastore.statistics.list",
      "errorreporting.groups.list",
      "eventarc.channelConnections.get",
      "eventarc.channelConnections.getIamPolicy",
      "eventarc.channelConnections.list",
      "eventarc.channels.get",
      "eventarc.channels.getIamPolicy",
      "eventarc.channels.list",
      "eventarc.googleChannelConfigs.get",
      "eventarc.locations.get",
      "eventarc.locations.list",
      "eventarc.operations.get",
      "eventarc.operations.list",
      "eventarc.providers.get",
      "eventarc.providers.list",
      "eventarc.triggers.get",
      "eventarc.triggers.getIamPolicy",
      "eventarc.triggers.list",
      "firebase.billingPlans.get",
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.links.list",
      "firebase.playLinks.get",
      "firebase.playLinks.list",
      "firebase.projects.get",
      "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze",
      "firebaseappcheck.appAttestConfig.get",
      "firebaseappcheck.debugTokens.get",
      "firebaseappcheck.deviceCheckConfig.get",
      "firebaseappcheck.playIntegrityConfig.get",
      "firebaseappcheck.recaptchaEnterpriseConfig.get",
      "firebaseappcheck.recaptchaV3Config.get",
      "firebaseappcheck.safetyNetConfig.get",
      "firebaseappcheck.services.get",
      "firebaseauth.configs.get",
      "firebaseauth.users.get",
      "firebasedatabase.instances.get",
      "firebasedatabase.instances.list",
      "firebaseextensions.configs.list",
      "firebasehosting.sites.get",
      "firebasehosting.sites.list",
      "firebaseml.models.get",
      "firebaseml.models.list",
      "firebaseml.modelversions.get",
      "firebaseml.modelversions.list",
      "firebaserules.releases.get",
      "firebaserules.releases.list",
      "firebaserules.rulesets.get",
      "firebaserules.rulesets.list",
      "firebasestorage.buckets.get",
      "firebasestorage.buckets.list",
      "logging.logEntries.list",
      "monitoring.timeSeries.list",
      "oauthconfig.verification.get",
      "recommender.cloudFunctionsPerformanceInsights.get",
      "recommender.cloudFunctionsPerformanceInsights.list",
      "recommender.cloudFunctionsPerformanceRecommendations.get",
      "recommender.cloudFunctionsPerformanceRecommendations.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.runServiceCostInsights.get",
      "recommender.runServiceCostInsights.list",
      "recommender.runServiceCostRecommendations.get",
      "recommender.runServiceCostRecommendations.list",
      "recommender.runServiceIdentityInsights.get",
      "recommender.runServiceIdentityInsights.list",
      "recommender.runServiceIdentityRecommendations.get",
      "recommender.runServiceIdentityRecommendations.list",
      "recommender.runServiceSecurityInsights.get",
      "recommender.runServiceSecurityInsights.list",
      "recommender.runServiceSecurityRecommendations.get",
      "recommender.runServiceSecurityRecommendations.list",
      "remotebuildexecution.blobs.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list",
      "run.configurations.get",
      "run.configurations.list",
      "run.executions.get",
      "run.executions.list",
      "run.jobs.get",
      "run.jobs.getIamPolicy",
      "run.jobs.list",
      "run.locations.list",
      "run.operations.get",
      "run.operations.list",
      "run.revisions.get",
      "run.revisions.list",
      "run.routes.get",
      "run.routes.list",
      "run.services.get",
      "run.services.getIamPolicy",
      "run.services.list",
      "run.services.listEffectiveTags",
      "run.services.listTagBindings",
      "run.tasks.get",
      "run.tasks.list",
      "serviceusage.operations.get",
      "serviceusage.operations.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "storage.buckets.get",
      "storage.buckets.getIamPolicy",
      "storage.buckets.list",
      "storage.objects.get",
      "storage.objects.getIamPolicy",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebase.growthAdmin",
    "title": "Firebase Grow Admin",
    "description": "Full access to Firebase Grow products and Analytics.",
    "includedPermissions": [
      "clientauthconfig.clients.get",
      "clientauthconfig.clients.list",
      "cloudconfig.configs.get",
      "cloudconfig.configs.update",
      "cloudmessaging.messages.create",
      "cloudnotifications.activities.list",
      "fcmdata.deliverydata.list",
      "firebase.billingPlans.get",
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.links.list",
      "firebase.playLinks.get",
      "firebase.playLinks.list",
      "firebase.projects.get",
      "firebaseabt.experimentresults.get",
      "firebaseabt.experiments.create",
      "firebaseabt.experiments.delete",
      "firebaseabt.experiments.get",
      "firebaseabt.experiments.list",
      "firebaseabt.experiments.update",
      "firebaseabt.projectmetadata.get",
      "firebaseanalytics.resources.googleAnalyticsEdit",
      "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze",
      "firebasedynamiclinks.destinations.list",
      "firebasedynamiclinks.destinations.update",
      "firebasedynamiclinks.domains.create",
      "firebasedynamiclinks.domains.delete",
      "firebasedynamiclinks.domains.get",
      "firebasedynamiclinks.domains.list",
      "firebasedynamiclinks.domains.update",
      "firebasedynamiclinks.links.create",
      "firebasedynamiclinks.links.get",
      "firebasedynamiclinks.links.list",
      "firebasedynamiclinks.links.update",
      "firebasedynamiclinks.stats.get",
      "firebaseextensions.configs.list",
      "firebaseinappmessaging.campaigns.create",
      "firebaseinappmessaging.campaigns.delete",
      "firebaseinappmessaging.campaigns.get",
      "firebaseinappmessaging.campaigns.list",
      "firebaseinappmessaging.campaigns.update",
      "firebasemessagingcampaigns.campaigns.create",
      "firebasemessagingcampaigns.campaigns.delete",
      "firebasemessagingcampaigns.campaigns.get",
      "firebasemessagingcampaigns.campaigns.list",
      "firebasemessagingcampaigns.campaigns.start",
      "firebasemessagingcampaigns.campaigns.stop",
      "firebasemessagingcampaigns.campaigns.update",
      "firebasenotifications.messages.create",
      "firebasenotifications.messages.delete",
      "firebasenotifications.messages.get",
      "firebasenotifications.messages.list",
      "firebasenotifications.messages.update",
      "monitoring.timeSeries.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list",
      "serviceusage.operations.get",
      "serviceusage.operations.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebase.growthViewer",
    "title": "Firebase Grow Viewer",
    "description": "Read access to Firebase Grow products and Analytics.",
    "includedPermissions": [
      "cloudconfig.configs.get",
      "cloudnotifications.activities.list",
      "fcmdata.deliverydata.list",
      "firebase.billingPlans.get",
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.links.list",
      "firebase.playLinks.get",
      "firebase.playLinks.list",
      "firebase.projects.get",
      "firebaseabt.experimentresults.get",
      "firebaseabt.experiments.get",
      "firebaseabt.experiments.list",
      "firebaseabt.projectmetadata.get",
      "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze",
      "firebasedynamiclinks.destinations.list",
      "firebasedynamiclinks.domains.get",
      "firebasedynamiclinks.domains.list",
      "firebasedynamiclinks.links.get",
      "firebasedynamiclinks.links.list",
      "firebasedynamiclinks.stats.get",
      "firebaseextensions.configs.list",
      "firebaseinappmessaging.campaigns.get",
      "firebaseinappmessaging.campaigns.list",
      "firebasemessagingcampaigns.campaigns.get",
      "firebasemessagingcampaigns.campaigns.list",
      "firebasenotifications.messages.get",
      "firebasenotifications.messages.list",
      "monitoring.timeSeries.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list",
      "serviceusage.operations.get",
      "serviceusage.operations.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebase.managementServiceAgent",
    "title": "Firebase Service Management Service Agent",
    "description": "Access to create new service agents for Firebase projects; assign roles to service agents; provision GCP resources as required by Firebase services.",
    "includedPermissions": [
      "apikeys.keys.create",
      "apikeys.keys.get",
      "apikeys.keys.list",
      "apikeys.keys.update",
      "appengine.applications.create",
      "appengine.applications.get",
      "appengine.applications.update",
      "appengine.operations.get",
      "appengine.services.list",
      "bigquery.datasets.create",
      "bigquery.datasets.get",
      "bigquery.transfers.get",
      "bigquery.transfers.update",
      "clientauthconfig.brands.create",
      "clientauthconfig.brands.update",
      "clientauthconfig.clients.create",
      "clientauthconfig.clients.getWithSecret",
      "clientauthconfig.clients.list",
      "clientauthconfig.clients.update",
      "firebase.clients.create",
      "firebase.clients.delete",
      "firebase.clients.get",
      "firebase.clients.undelete",
      "firebase.projects.delete",
      "firebase.projects.get",
      "firebase.projects.update",
      "firebaseauth.configs.create",
      "firebaseauth.configs.get",
      "firebaseauth.configs.update",
      "firebaserules.releases.create",
      "firebaserules.releases.delete",
      "firebaserules.releases.get",
      "firebaserules.rulesets.create",
      "iam.roles.get",
      "iam.serviceAccounts.create",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.list",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.setIamPolicy",
      "resourcemanager.projects.update",
      "servicemanagement.services.bind",
      "serviceusage.services.enable",
      "serviceusage.services.get",
      "serviceusage.services.use",
      "storage.buckets.create",
      "storage.buckets.get",
      "storage.buckets.getIamPolicy",
      "storage.buckets.list",
      "storage.buckets.setIamPolicy"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebase.qualityAdmin",
    "title": "Firebase Quality Admin",
    "description": "Full access to Firebase Quality products and Analytics.",
    "includedPermissions": [
      "cloudnotifications.activities.list",
      "firebase.billingPlans.get",
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.links.list",
      "firebase.playLinks.get",
      "firebase.playLinks.list",
      "firebase.projects.get",
      "firebaseanalytics.resources.googleAnalyticsEdit",
      "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze",
      "firebaseappdistro.groups.list",
      "firebaseappdistro.groups.update",
      "firebaseappdistro.releases.list",
      "firebaseappdistro.releases.update",
      "firebaseappdistro.testers.list",
      "firebaseappdistro.testers.update",
      "firebasecrash.issues.update",
      "firebasecrash.reports.get",
      "firebasecrashlytics.config.get",
      "firebasecrashlytics.config.update",
      "firebasecrashlytics.data.get",
      "firebasecrashlytics.issues.get",
      "firebasecrashlytics.issues.list",
      "firebasecrashlytics.issues.update",
      "firebasecrashlytics.sessions.get",
      "firebaseextensions.configs.list",
      "firebaseperformance.config.update",
      "firebaseperformance.data.get",
      "monitoring.timeSeries.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list",
      "serviceusage.operations.get",
      "serviceusage.operations.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebase.qualityViewer",
    "title": "Firebase Quality Viewer",
    "description": "Read access to Firebase Quality products and Analytics.",
    "includedPermissions": [
      "cloudnotifications.activities.list",
      "firebase.billingPlans.get",
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.links.list",
      "firebase.playLinks.get",
      "firebase.playLinks.list",
      "firebase.projects.get",
      "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze",
      "firebaseappdistro.groups.list",
      "firebaseappdistro.releases.list",
      "firebaseappdistro.testers.list",
      "firebasecrash.reports.get",
      "firebasecrashlytics.config.get",
      "firebasecrashlytics.data.get",
      "firebasecrashlytics.issues.get",
      "firebasecrashlytics.issues.list",
      "firebasecrashlytics.sessions.get",
      "firebaseextensions.configs.list",
      "firebaseperformance.data.get",
      "monitoring.timeSeries.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list",
      "serviceusage.operations.get",
      "serviceusage.operations.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebase.sdkAdminServiceAgent",
    "title": "Firebase Admin SDK Administrator Service Agent",
    "description": "Read and write access to Firebase products available in the Admin SDK",
    "includedPermissions": [
      "appengine.applications.get",
      "cloudconfig.configs.get",
      "cloudconfig.configs.update",
      "cloudmessaging.messages.create",
      "datastore.databases.get",
      "datastore.databases.getMetadata",
      "datastore.databases.list",
      "datastore.entities.allocateIds",
      "datastore.entities.create",
      "datastore.entities.delete",
      "datastore.entities.get",
      "datastore.entities.list",
      "datastore.entities.update",
      "datastore.indexes.get",
      "datastore.indexes.list",
      "datastore.namespaces.get",
      "datastore.namespaces.list",
      "datastore.statistics.get",
      "datastore.statistics.list",
      "firebase.clients.create",
      "firebase.clients.delete",
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.clients.undelete",
      "firebase.clients.update",
      "firebase.projects.get",
      "firebase.projects.update",
      "firebaseappcheck.appAttestConfig.get",
      "firebaseappcheck.appAttestConfig.update",
      "firebaseappcheck.appCheckTokens.verify",
      "firebaseappcheck.debugTokens.get",
      "firebaseappcheck.debugTokens.update",
      "firebaseappcheck.deviceCheckConfig.get",
      "firebaseappcheck.deviceCheckConfig.update",
      "firebaseappcheck.playIntegrityConfig.get",
      "firebaseappcheck.playIntegrityConfig.update",
      "firebaseappcheck.recaptchaEnterpriseConfig.get",
      "firebaseappcheck.recaptchaEnterpriseConfig.update",
      "firebaseappcheck.recaptchaV3Config.get",
      "firebaseappcheck.recaptchaV3Config.update",
      "firebaseappcheck.safetyNetConfig.get",
      "firebaseappcheck.safetyNetConfig.update",
      "firebaseappcheck.services.get",
      "firebaseappcheck.services.update",
      "firebaseauth.configs.create",
      "firebaseauth.configs.get",
      "firebaseauth.configs.getSecret",
      "firebaseauth.configs.update",
      "firebaseauth.users.create",
      "firebaseauth.users.createSession",
      "firebaseauth.users.delete",
      "firebaseauth.users.get",
      "firebaseauth.users.sendEmail",
      "firebaseauth.users.update",
      "firebasedatabase.instances.create",
      "firebasedatabase.instances.delete",
      "firebasedatabase.instances.disable",
      "firebasedatabase.instances.get",
      "firebasedatabase.instances.list",
      "firebasedatabase.instances.reenable",
      "firebasedatabase.instances.undelete",
      "firebasedatabase.instances.update",
      "firebasehosting.sites.create",
      "firebasehosting.sites.delete",
      "firebasehosting.sites.get",
      "firebasehosting.sites.list",
      "firebasehosting.sites.update",
      "firebaseml.models.create",
      "firebaseml.models.delete",
      "firebaseml.models.get",
      "firebaseml.models.list",
      "firebaseml.models.update",
      "firebaseml.modelversions.create",
      "firebaseml.modelversions.get",
      "firebaseml.modelversions.list",
      "firebaseml.modelversions.update",
      "firebasenotifications.messages.create",
      "firebasenotifications.messages.delete",
      "firebasenotifications.messages.get",
      "firebasenotifications.messages.list",
      "firebasenotifications.messages.update",
      "firebaserules.releases.get",
      "firebaserules.releases.list",
      "firebaserules.releases.update",
      "firebaserules.rulesets.create",
      "firebaserules.rulesets.delete",
      "firebaserules.rulesets.get",
      "firebaserules.rulesets.list",
      "identitytoolkit.tenants.create",
      "identitytoolkit.tenants.delete",
      "identitytoolkit.tenants.get",
      "identitytoolkit.tenants.getIamPolicy",
      "identitytoolkit.tenants.list",
      "identitytoolkit.tenants.setIamPolicy",
      "identitytoolkit.tenants.update",
      "orgpolicy.policy.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "resourcemanager.projects.update",
      "storage.buckets.create",
      "storage.buckets.delete",
      "storage.buckets.get",
      "storage.buckets.list",
      "storage.buckets.update",
      "storage.multipartUploads.abort",
      "storage.multipartUploads.create",
      "storage.multipartUploads.list",
      "storage.multipartUploads.listParts",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.getIamPolicy",
      "storage.objects.list",
      "storage.objects.setIamPolicy",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebase.sdkProvisioningServiceAgent",
    "title": "Firebase SDK Provisioning Service Agent",
    "description": "Access to provision apps with the Admin SDK.",
    "includedPermissions": [
      "apikeys.keys.list",
      "clientauthconfig.clients.list",
      "cloudmessaging.messages.create",
      "firebase.clients.create",
      "servicemanagement.services.bind",
      "serviceusage.services.enable"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebase.viewer",
    "title": "Firebase Viewer",
    "description": "Read-only access to Firebase products.",
    "includedPermissions": [
      "automl.annotationSpecs.get",
      "automl.annotationSpecs.list",
      "automl.annotations.list",
      "automl.columnSpecs.get",
      "automl.columnSpecs.list",
      "automl.datasets.get",
      "automl.datasets.list",
      "automl.examples.get",
      "automl.examples.list",
      "automl.files.list",
      "automl.humanAnnotationTasks.get",
      "automl.humanAnnotationTasks.list",
      "automl.locations.get",
      "automl.locations.list",
      "automl.modelEvaluations.get",
      "automl.modelEvaluations.list",
      "automl.models.get",
      "automl.models.list",
      "automl.operations.get",
      "automl.operations.list",
      "automl.tableSpecs.get",
      "automl.tableSpecs.list",
      "clientauthconfig.brands.get",
      "clientauthconfig.brands.list",
      "cloudbuild.builds.get",
      "cloudbuild.builds.list",
      "cloudbuild.operations.get",
      "cloudbuild.operations.list",
      "cloudconfig.configs.get",
      "cloudfunctions.functions.get",
      "cloudfunctions.functions.getIamPolicy",
      "cloudfunctions.functions.list",
      "cloudfunctions.locations.get",
      "cloudfunctions.locations.list",
      "cloudfunctions.operations.get",
      "cloudfunctions.operations.list",
      "cloudfunctions.runtimes.list",
      "cloudnotifications.activities.list",
      "cloudtestservice.environmentcatalog.get",
      "cloudtestservice.matrices.get",
      "cloudtoolresults.executions.get",
      "cloudtoolresults.executions.list",
      "cloudtoolresults.histories.get",
      "cloudtoolresults.histories.list",
      "cloudtoolresults.settings.get",
      "cloudtoolresults.steps.get",
      "cloudtoolresults.steps.list",
      "datastore.databases.get",
      "datastore.databases.getMetadata",
      "datastore.databases.list",
      "datastore.entities.get",
      "datastore.entities.list",
      "datastore.indexes.get",
      "datastore.indexes.list",
      "datastore.namespaces.get",
      "datastore.namespaces.list",
      "datastore.statistics.get",
      "datastore.statistics.list",
      "errorreporting.groups.list",
      "eventarc.channelConnections.get",
      "eventarc.channelConnections.getIamPolicy",
      "eventarc.channelConnections.list",
      "eventarc.channels.get",
      "eventarc.channels.getIamPolicy",
      "eventarc.channels.list",
      "eventarc.googleChannelConfigs.get",
      "eventarc.locations.get",
      "eventarc.locations.list",
      "eventarc.operations.get",
      "eventarc.operations.list",
      "eventarc.providers.get",
      "eventarc.providers.list",
      "eventarc.triggers.get",
      "eventarc.triggers.getIamPolicy",
      "eventarc.triggers.list",
      "fcmdata.deliverydata.list",
      "firebase.billingPlans.get",
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.links.list",
      "firebase.playLinks.get",
      "firebase.playLinks.list",
      "firebase.projects.get",
      "firebaseabt.experimentresults.get",
      "firebaseabt.experiments.get",
      "firebaseabt.experiments.list",
      "firebaseabt.projectmetadata.get",
      "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze",
      "firebaseappcheck.appAttestConfig.get",
      "firebaseappcheck.debugTokens.get",
      "firebaseappcheck.deviceCheckConfig.get",
      "firebaseappcheck.playIntegrityConfig.get",
      "firebaseappcheck.recaptchaEnterpriseConfig.get",
      "firebaseappcheck.recaptchaV3Config.get",
      "firebaseappcheck.safetyNetConfig.get",
      "firebaseappcheck.services.get",
      "firebaseappdistro.groups.list",
      "firebaseappdistro.releases.list",
      "firebaseappdistro.testers.list",
      "firebaseauth.configs.get",
      "firebaseauth.users.get",
      "firebasecrash.reports.get",
      "firebasecrashlytics.config.get",
      "firebasecrashlytics.data.get",
      "firebasecrashlytics.issues.get",
      "firebasecrashlytics.issues.list",
      "firebasecrashlytics.sessions.get",
      "firebasedatabase.instances.get",
      "firebasedatabase.instances.list",
      "firebasedynamiclinks.destinations.list",
      "firebasedynamiclinks.domains.get",
      "firebasedynamiclinks.domains.list",
      "firebasedynamiclinks.links.get",
      "firebasedynamiclinks.links.list",
      "firebasedynamiclinks.stats.get",
      "firebaseextensions.configs.list",
      "firebaseextensionspublisher.extensions.get",
      "firebaseextensionspublisher.extensions.list",
      "firebasehosting.sites.get",
      "firebasehosting.sites.list",
      "firebaseinappmessaging.campaigns.get",
      "firebaseinappmessaging.campaigns.list",
      "firebasemessagingcampaigns.campaigns.get",
      "firebasemessagingcampaigns.campaigns.list",
      "firebaseml.models.get",
      "firebaseml.models.list",
      "firebaseml.modelversions.get",
      "firebaseml.modelversions.list",
      "firebasenotifications.messages.get",
      "firebasenotifications.messages.list",
      "firebaseperformance.data.get",
      "firebaserules.releases.get",
      "firebaserules.releases.list",
      "firebaserules.rulesets.get",
      "firebaserules.rulesets.list",
      "firebasestorage.buckets.get",
      "firebasestorage.buckets.list",
      "logging.logEntries.list",
      "monitoring.timeSeries.list",
      "oauthconfig.verification.get",
      "recommender.cloudFunctionsPerformanceInsights.get",
      "recommender.cloudFunctionsPerformanceInsights.list",
      "recommender.cloudFunctionsPerformanceRecommendations.get",
      "recommender.cloudFunctionsPerformanceRecommendations.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.runServiceCostInsights.get",
      "recommender.runServiceCostInsights.list",
      "recommender.runServiceCostRecommendations.get",
      "recommender.runServiceCostRecommendations.list",
      "recommender.runServiceIdentityInsights.get",
      "recommender.runServiceIdentityInsights.list",
      "recommender.runServiceIdentityRecommendations.get",
      "recommender.runServiceIdentityRecommendations.list",
      "recommender.runServiceSecurityInsights.get",
      "recommender.runServiceSecurityInsights.list",
      "recommender.runServiceSecurityRecommendations.get",
      "recommender.runServiceSecurityRecommendations.list",
      "remotebuildexecution.blobs.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list",
      "run.configurations.get",
      "run.configurations.list",
      "run.executions.get",
      "run.executions.list",
      "run.jobs.get",
      "run.jobs.getIamPolicy",
      "run.jobs.list",
      "run.locations.list",
      "run.operations.get",
      "run.operations.list",
      "run.revisions.get",
      "run.revisions.list",
      "run.routes.get",
      "run.routes.list",
      "run.services.get",
      "run.services.getIamPolicy",
      "run.services.list",
      "run.services.listEffectiveTags",
      "run.services.listTagBindings",
      "run.tasks.get",
      "run.tasks.list",
      "serviceusage.operations.get",
      "serviceusage.operations.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "storage.buckets.get",
      "storage.buckets.getIamPolicy",
      "storage.buckets.list",
      "storage.objects.get",
      "storage.objects.getIamPolicy",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebaseabt.admin",
    "title": "Firebase A/B Testing Admin",
    "description": "Full read/write access to Firebase A/B Testing resources.",
    "includedPermissions": [
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "firebaseabt.experimentresults.get",
      "firebaseabt.experiments.create",
      "firebaseabt.experiments.delete",
      "firebaseabt.experiments.get",
      "firebaseabt.experiments.list",
      "firebaseabt.experiments.update",
      "firebaseabt.projectmetadata.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebaseabt.viewer",
    "title": "Firebase A/B Testing Viewer",
    "description": "Read-only access to Firebase A/B Testing resources.",
    "includedPermissions": [
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "firebaseabt.experimentresults.get",
      "firebaseabt.experiments.get",
      "firebaseabt.experiments.list",
      "firebaseabt.projectmetadata.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebaseappcheck.admin",
    "title": "Firebase App Check Admin",
    "description": "Full management of Firebase App Check.",
    "includedPermissions": [
      "firebaseappcheck.appAttestConfig.get",
      "firebaseappcheck.appAttestConfig.update",
      "firebaseappcheck.appCheckTokens.verify",
      "firebaseappcheck.debugTokens.get",
      "firebaseappcheck.debugTokens.update",
      "firebaseappcheck.deviceCheckConfig.get",
      "firebaseappcheck.deviceCheckConfig.update",
      "firebaseappcheck.playIntegrityConfig.get",
      "firebaseappcheck.playIntegrityConfig.update",
      "firebaseappcheck.recaptchaEnterpriseConfig.get",
      "firebaseappcheck.recaptchaEnterpriseConfig.update",
      "firebaseappcheck.recaptchaV3Config.get",
      "firebaseappcheck.recaptchaV3Config.update",
      "firebaseappcheck.safetyNetConfig.get",
      "firebaseappcheck.safetyNetConfig.update",
      "firebaseappcheck.services.get",
      "firebaseappcheck.services.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebaseappcheck.serviceAgent",
    "title": "Firebase App Check Service Agent",
    "description": "Grants Firebase App Check Service Account access to consumer app attestation resources, such as reCAPTCHA Enterprise and Play Integrity API.",
    "includedPermissions": [
      "recaptchaenterprise.assessments.annotate",
      "recaptchaenterprise.assessments.create",
      "serviceusage.services.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebaseappcheck.tokenVerifier",
    "title": "Firebase App Check Token Verifier",
    "description": "Access to token verification capabilities for Firebase App Check.",
    "includedPermissions": [
      "firebaseappcheck.appCheckTokens.verify"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebaseappcheck.viewer",
    "title": "Firebase App Check Viewer",
    "description": "Read-only access for Firebase App Check.",
    "includedPermissions": [
      "firebaseappcheck.appAttestConfig.get",
      "firebaseappcheck.debugTokens.get",
      "firebaseappcheck.deviceCheckConfig.get",
      "firebaseappcheck.playIntegrityConfig.get",
      "firebaseappcheck.recaptchaEnterpriseConfig.get",
      "firebaseappcheck.recaptchaV3Config.get",
      "firebaseappcheck.safetyNetConfig.get",
      "firebaseappcheck.services.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebaseappdistro.admin",
    "title": "Firebase App Distribution Admin",
    "description": "Full read/write access to Firebase App Distribution resources.",
    "includedPermissions": [
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "firebaseappdistro.groups.list",
      "firebaseappdistro.groups.update",
      "firebaseappdistro.releases.list",
      "firebaseappdistro.releases.update",
      "firebaseappdistro.testers.list",
      "firebaseappdistro.testers.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebaseappdistro.viewer",
    "title": "Firebase App Distribution Viewer",
    "description": "Read-only access to Firebase App Distribution resources.",
    "includedPermissions": [
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "firebaseappdistro.groups.list",
      "firebaseappdistro.releases.list",
      "firebaseappdistro.testers.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebaseauth.admin",
    "title": "Firebase Authentication Admin",
    "description": "Full read/write access to Firebase Authentication resources.",
    "includedPermissions": [
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "firebaseauth.configs.create",
      "firebaseauth.configs.get",
      "firebaseauth.configs.getHashConfig",
      "firebaseauth.configs.getSecret",
      "firebaseauth.configs.update",
      "firebaseauth.users.create",
      "firebaseauth.users.createSession",
      "firebaseauth.users.delete",
      "firebaseauth.users.get",
      "firebaseauth.users.sendEmail",
      "firebaseauth.users.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebaseauth.viewer",
    "title": "Firebase Authentication Viewer",
    "description": "Read-only access to Firebase Authentication resources.",
    "includedPermissions": [
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "firebaseauth.configs.get",
      "firebaseauth.users.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebasecloudmessaging.admin",
    "title": "Firebase Cloud Messaging API Admin",
    "description": "Full read/write access to Firebase Cloud Messaging API resources.",
    "includedPermissions": [
      "cloudmessaging.messages.create",
      "fcmdata.deliverydata.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebasecrash.symbolMappingsAdmin",
    "title": "Firebase Crash Symbol Uploader",
    "description": "Full read/write access to symbol mapping file resources for Firebase Crash Reporting.",
    "includedPermissions": [
      "firebase.clients.get",
      "firebase.clients.list",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebasecrashlytics.admin",
    "title": "Firebase Crashlytics Admin",
    "description": "Full read/write access to Firebase Crashlytics resources.",
    "includedPermissions": [
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "firebasecrashlytics.config.get",
      "firebasecrashlytics.config.update",
      "firebasecrashlytics.data.get",
      "firebasecrashlytics.issues.get",
      "firebasecrashlytics.issues.list",
      "firebasecrashlytics.issues.update",
      "firebasecrashlytics.sessions.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebasecrashlytics.viewer",
    "title": "Firebase Crashlytics Viewer",
    "description": "Read-only access to Firebase Crashlytics resources.",
    "includedPermissions": [
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "firebasecrashlytics.config.get",
      "firebasecrashlytics.data.get",
      "firebasecrashlytics.issues.get",
      "firebasecrashlytics.issues.list",
      "firebasecrashlytics.sessions.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebasedatabase.admin",
    "title": "Firebase Realtime Database Admin",
    "description": "Full read/write access to Firebase Realtime Database resources.",
    "includedPermissions": [
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "firebasedatabase.instances.create",
      "firebasedatabase.instances.delete",
      "firebasedatabase.instances.disable",
      "firebasedatabase.instances.get",
      "firebasedatabase.instances.list",
      "firebasedatabase.instances.reenable",
      "firebasedatabase.instances.undelete",
      "firebasedatabase.instances.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebasedatabase.serviceAgent",
    "title": "Firebase Realtime Database Service Agent",
    "description": "Access to publish triggers",
    "includedPermissions": [
      "pubsub.topics.publish",
      "serviceusage.services.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebasedatabase.viewer",
    "title": "Firebase Realtime Database Viewer",
    "description": "Read-only access to Firebase Realtime Database resources.",
    "includedPermissions": [
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "firebasedatabase.instances.get",
      "firebasedatabase.instances.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebasedynamiclinks.admin",
    "title": "Firebase Dynamic Links Admin",
    "description": "Full read/write access to Firebase Dynamic Links resources.",
    "includedPermissions": [
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "firebasedynamiclinks.destinations.list",
      "firebasedynamiclinks.destinations.update",
      "firebasedynamiclinks.domains.create",
      "firebasedynamiclinks.domains.delete",
      "firebasedynamiclinks.domains.get",
      "firebasedynamiclinks.domains.list",
      "firebasedynamiclinks.domains.update",
      "firebasedynamiclinks.links.create",
      "firebasedynamiclinks.links.get",
      "firebasedynamiclinks.links.list",
      "firebasedynamiclinks.links.update",
      "firebasedynamiclinks.stats.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebasedynamiclinks.viewer",
    "title": "Firebase Dynamic Links Viewer",
    "description": "Read-only access to Firebase Dynamic Links resources.",
    "includedPermissions": [
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "firebasedynamiclinks.destinations.list",
      "firebasedynamiclinks.domains.get",
      "firebasedynamiclinks.domains.list",
      "firebasedynamiclinks.links.get",
      "firebasedynamiclinks.links.list",
      "firebasedynamiclinks.stats.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebaseextensionspublisher.extensionsAdmin",
    "title": "Firebase Extensions Publisher - Extensions Admin",
    "description": "Fully manage Firebase Extensions",
    "includedPermissions": [
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "firebaseextensionspublisher.extensions.create",
      "firebaseextensionspublisher.extensions.delete",
      "firebaseextensionspublisher.extensions.get",
      "firebaseextensionspublisher.extensions.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebaseextensionspublisher.extensionsViewer",
    "title": "Firebase Extensions Publisher - Extensions Viewer",
    "description": "View Firebase Extensions",
    "includedPermissions": [
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "firebaseextensionspublisher.extensions.get",
      "firebaseextensionspublisher.extensions.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebasehosting.admin",
    "title": "Firebase Hosting Admin",
    "description": "Full read/write access to Firebase Hosting resources.",
    "includedPermissions": [
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "firebasehosting.sites.create",
      "firebasehosting.sites.delete",
      "firebasehosting.sites.get",
      "firebasehosting.sites.list",
      "firebasehosting.sites.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebasehosting.viewer",
    "title": "Firebase Hosting Viewer",
    "description": "Read-only access to Firebase Hosting resources.",
    "includedPermissions": [
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "firebasehosting.sites.get",
      "firebasehosting.sites.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebaseinappmessaging.admin",
    "title": "Firebase In-App Messaging Admin",
    "description": "Full read/write access to Firebase In-App Messaging resources.",
    "includedPermissions": [
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "firebaseinappmessaging.campaigns.create",
      "firebaseinappmessaging.campaigns.delete",
      "firebaseinappmessaging.campaigns.get",
      "firebaseinappmessaging.campaigns.list",
      "firebaseinappmessaging.campaigns.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebaseinappmessaging.viewer",
    "title": "Firebase In-App Messaging Viewer",
    "description": "Read-only access to Firebase In-App Messaging resources.",
    "includedPermissions": [
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "firebaseinappmessaging.campaigns.get",
      "firebaseinappmessaging.campaigns.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebasemessagingcampaigns.admin",
    "title": "Firebase Messaging Campaigns Admin",
    "description": "Full management of Firebase Messaging Campaigns.",
    "includedPermissions": [
      "firebasemessagingcampaigns.campaigns.create",
      "firebasemessagingcampaigns.campaigns.delete",
      "firebasemessagingcampaigns.campaigns.get",
      "firebasemessagingcampaigns.campaigns.list",
      "firebasemessagingcampaigns.campaigns.start",
      "firebasemessagingcampaigns.campaigns.stop",
      "firebasemessagingcampaigns.campaigns.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebasemessagingcampaigns.viewer",
    "title": "Firebase Messaging Campaigns Viewer",
    "description": "Read-only access for Firebase Messaging Campaigns.",
    "includedPermissions": [
      "firebasemessagingcampaigns.campaigns.get",
      "firebasemessagingcampaigns.campaigns.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebaseml.admin",
    "title": "Firebase ML Kit Admin",
    "description": "Full read/write access to Firebase ML Kit resources.",
    "includedPermissions": [
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "firebaseml.models.create",
      "firebaseml.models.delete",
      "firebaseml.models.get",
      "firebaseml.models.list",
      "firebaseml.models.update",
      "firebaseml.modelversions.create",
      "firebaseml.modelversions.get",
      "firebaseml.modelversions.list",
      "firebaseml.modelversions.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebaseml.viewer",
    "title": "Firebase ML Kit Viewer",
    "description": "Read-only access to Firebase ML Kit resources.",
    "includedPermissions": [
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "firebaseml.models.get",
      "firebaseml.models.list",
      "firebaseml.modelversions.get",
      "firebaseml.modelversions.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebasemods.serviceAgent",
    "title": "Firebase Extensions API Service Agent",
    "description": "Grants Firebase Extensions API Service Account access to manage resources.",
    "includedPermissions": [
      "appengine.applications.get",
      "artifactregistry.packages.delete",
      "cloudfunctions.functions.getIamPolicy",
      "cloudfunctions.functions.setIamPolicy",
      "cloudtasks.locations.get",
      "cloudtasks.locations.list",
      "cloudtasks.queues.create",
      "cloudtasks.queues.delete",
      "cloudtasks.queues.get",
      "cloudtasks.queues.getIamPolicy",
      "cloudtasks.queues.list",
      "cloudtasks.queues.pause",
      "cloudtasks.queues.purge",
      "cloudtasks.queues.resume",
      "cloudtasks.queues.setIamPolicy",
      "cloudtasks.queues.update",
      "cloudtasks.tasks.create",
      "cloudtasks.tasks.fullView",
      "deploymentmanager.compositeTypes.create",
      "deploymentmanager.compositeTypes.delete",
      "deploymentmanager.compositeTypes.get",
      "deploymentmanager.compositeTypes.list",
      "deploymentmanager.compositeTypes.update",
      "deploymentmanager.deployments.cancelPreview",
      "deploymentmanager.deployments.create",
      "deploymentmanager.deployments.delete",
      "deploymentmanager.deployments.get",
      "deploymentmanager.deployments.list",
      "deploymentmanager.deployments.stop",
      "deploymentmanager.deployments.update",
      "deploymentmanager.manifests.get",
      "deploymentmanager.manifests.list",
      "deploymentmanager.operations.get",
      "deploymentmanager.operations.list",
      "deploymentmanager.resources.get",
      "deploymentmanager.resources.list",
      "deploymentmanager.typeProviders.create",
      "deploymentmanager.typeProviders.delete",
      "deploymentmanager.typeProviders.get",
      "deploymentmanager.typeProviders.getType",
      "deploymentmanager.typeProviders.list",
      "deploymentmanager.typeProviders.listTypes",
      "deploymentmanager.typeProviders.update",
      "deploymentmanager.types.create",
      "deploymentmanager.types.delete",
      "deploymentmanager.types.get",
      "deploymentmanager.types.list",
      "deploymentmanager.types.update",
      "eventarc.channels.create",
      "eventarc.channels.delete",
      "eventarc.channels.get",
      "eventarc.channels.setIamPolicy",
      "iam.serviceAccounts.actAs",
      "iam.serviceAccounts.create",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "resourcemanager.projects.updateLiens",
      "run.services.getIamPolicy",
      "run.services.setIamPolicy",
      "serviceusage.quotas.get",
      "serviceusage.services.enable",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebasenotifications.admin",
    "title": "Firebase Cloud Messaging Admin",
    "description": "Full read/write access to Firebase Cloud Messaging resources.",
    "includedPermissions": [
      "fcmdata.deliverydata.list",
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "firebasenotifications.messages.create",
      "firebasenotifications.messages.delete",
      "firebasenotifications.messages.get",
      "firebasenotifications.messages.list",
      "firebasenotifications.messages.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebasenotifications.viewer",
    "title": "Firebase Cloud Messaging Viewer",
    "description": "Read-only access to Firebase Cloud Messaging resources.",
    "includedPermissions": [
      "fcmdata.deliverydata.list",
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "firebasenotifications.messages.get",
      "firebasenotifications.messages.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebaseperformance.admin",
    "title": "Firebase Performance Reporting Admin",
    "description": "Full access to firebaseperformance resources.",
    "includedPermissions": [
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "firebaseperformance.config.update",
      "firebaseperformance.data.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebaseperformance.viewer",
    "title": "Firebase Performance Reporting Viewer",
    "description": "Read-only access to firebaseperformance resources.",
    "includedPermissions": [
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "firebaseperformance.data.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebaserules.admin",
    "title": "Firebase Rules Admin",
    "description": "Full management of Firebase Rules.",
    "includedPermissions": [
      "firebaserules.releases.create",
      "firebaserules.releases.delete",
      "firebaserules.releases.get",
      "firebaserules.releases.getExecutable",
      "firebaserules.releases.list",
      "firebaserules.releases.update",
      "firebaserules.rulesets.create",
      "firebaserules.rulesets.delete",
      "firebaserules.rulesets.get",
      "firebaserules.rulesets.list",
      "firebaserules.rulesets.test",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebaserules.firestoreServiceAgent",
    "title": "Firebase Rules Firestore Service Agent",
    "description": "Grants Firebase Security Rules access to Firestore for providing cross-service Rules.",
    "includedPermissions": [
      "datastore.entities.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebaserules.system",
    "title": "Firebase Rules System",
    "description": "Read/write/list access for Datastore entities and Cloud Storage objects, as well as get/list/publish access for PubSub topics.",
    "includedPermissions": [
      "datastore.databases.get",
      "datastore.entities.allocateIds",
      "datastore.entities.create",
      "datastore.entities.delete",
      "datastore.entities.get",
      "datastore.entities.list",
      "datastore.entities.update",
      "pubsub.topics.get",
      "pubsub.topics.list",
      "pubsub.topics.publish",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebaserules.viewer",
    "title": "Firebase Rules Viewer",
    "description": "Read-only access on all resources with the ability to test Rulesets.",
    "includedPermissions": [
      "firebaserules.releases.get",
      "firebaserules.releases.list",
      "firebaserules.rulesets.get",
      "firebaserules.rulesets.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebasestorage.admin",
    "title": "Cloud Storage for Firebase Admin",
    "description": "Full management of Cloud Storage for Firebase.",
    "includedPermissions": [
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.projects.get",
      "firebasestorage.buckets.addFirebase",
      "firebasestorage.buckets.get",
      "firebasestorage.buckets.list",
      "firebasestorage.buckets.removeFirebase",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebasestorage.serviceAgent",
    "title": "Cloud Storage for Firebase Service Agent",
    "description": "Access to Cloud Storage for Firebase through API and SDK.",
    "includedPermissions": [
      "storage.buckets.get",
      "storage.buckets.getIamPolicy",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.getIamPolicy",
      "storage.objects.list",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firebasestorage.viewer",
    "title": "Cloud Storage for Firebase Viewer",
    "description": "Read-only access for Cloud Storage for Firebase.",
    "includedPermissions": [
      "firebasestorage.buckets.get",
      "firebasestorage.buckets.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/firestore.serviceAgent",
    "title": "Firestore Service Agent",
    "description": "Gives Firestore service account access to managed resources.",
    "includedPermissions": [
      "storage.buckets.get",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/firewallinsights.serviceAgent",
    "title": "Cloud Firewall Insights Service Agent",
    "description": "Gives Cloud Firewall Insights service agent permissions to retrieve Firewall, VM and route resources on user behalf.",
    "includedPermissions": [
      "compute.backendServices.list",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.forwardingRules.list",
      "compute.healthChecks.list",
      "compute.httpHealthChecks.list",
      "compute.httpsHealthChecks.list",
      "compute.instanceGroups.list",
      "compute.instances.get",
      "compute.instances.list",
      "compute.networks.getEffectiveFirewalls",
      "compute.networks.list",
      "compute.projects.get",
      "compute.routers.list",
      "compute.routes.get",
      "compute.routes.list",
      "compute.subnetworks.list",
      "compute.targetHttpProxies.list",
      "compute.targetHttpsProxies.list",
      "compute.targetPools.list",
      "compute.targetSslProxies.list",
      "compute.targetTcpProxies.list",
      "compute.targetVpnGateways.list",
      "compute.urlMaps.list",
      "compute.vpnGateways.list",
      "compute.vpnTunnels.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/fleetengine.consumerSdkUser",
    "title": "Fleet Engine Consumer SDK User",
    "description": "Limited read access to Fleet Engine resources",
    "includedPermissions": [
      "fleetengine.trips.get",
      "fleetengine.vehicles.get",
      "fleetengine.vehicles.search",
      "fleetengine.vehicles.searchFuzzed"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/fleetengine.deliveryConsumer",
    "title": "Fleet Engine Delivery Consumer User",
    "description": "Limited read access to Fleet Engine Delivery resources",
    "includedPermissions": [
      "fleetengine.tasks.searchWithTrackingId",
      "fleetengine.tasktrackinginfo.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/fleetengine.deliveryFleetReader",
    "title": "Fleet Engine Delivery Fleet Reader User",
    "description": "Grants read access to all Fleet Engine Delivery resources",
    "includedPermissions": [
      "fleetengine.deliveryvehicles.get",
      "fleetengine.deliveryvehicles.list",
      "fleetengine.tasks.get",
      "fleetengine.tasks.list",
      "fleetengine.tasks.searchWithTrackingId",
      "fleetengine.tasktrackinginfo.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/fleetengine.deliverySuperUser",
    "title": "Fleet Engine Delivery Super User",
    "description": "Full access to Fleet Engine DeliveryVehicles and Tasks resources.",
    "includedPermissions": [
      "fleetengine.deliveryvehicles.create",
      "fleetengine.deliveryvehicles.get",
      "fleetengine.deliveryvehicles.list",
      "fleetengine.deliveryvehicles.update",
      "fleetengine.deliveryvehicles.updateLocation",
      "fleetengine.deliveryvehicles.updateVehicleStops",
      "fleetengine.tasks.create",
      "fleetengine.tasks.get",
      "fleetengine.tasks.list",
      "fleetengine.tasks.searchWithTrackingId",
      "fleetengine.tasks.update",
      "fleetengine.tasktrackinginfo.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/fleetengine.deliveryTrustedDriver",
    "title": "Fleet Engine Delivery Trusted Driver User",
    "description": "Read and write access to Fleet Engine Delivery resources",
    "includedPermissions": [
      "fleetengine.deliveryvehicles.create",
      "fleetengine.deliveryvehicles.get",
      "fleetengine.deliveryvehicles.update",
      "fleetengine.deliveryvehicles.updateLocation",
      "fleetengine.deliveryvehicles.updateVehicleStops",
      "fleetengine.tasks.create",
      "fleetengine.tasks.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/fleetengine.deliveryUntrustedDriver",
    "title": "Fleet Engine Delivery Untrusted Driver User",
    "description": "Limited write access to Fleet Engine Delivery Vehicle resources",
    "includedPermissions": [
      "fleetengine.deliveryvehicles.get",
      "fleetengine.deliveryvehicles.updateLocation"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/fleetengine.driverSdkUser",
    "title": "Fleet Engine Driver SDK User",
    "description": "Read and limited update access to Fleet Engine resources",
    "includedPermissions": [
      "fleetengine.trips.get",
      "fleetengine.trips.search",
      "fleetengine.trips.update",
      "fleetengine.vehicles.get",
      "fleetengine.vehicles.updateLocation"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/fleetengine.serviceAgent",
    "title": "FleetEngine Service Agent",
    "description": "Grants the FleetEngine Service Account access to manage resources.",
    "includedPermissions": [
      "bigquery.config.get",
      "bigquery.datasets.get",
      "bigquery.jobs.create",
      "bigquery.tables.getData",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/fleetengine.serviceSuperUser",
    "title": "Fleet Engine Service Super User",
    "description": "Full access to all Fleet Engine resources.",
    "includedPermissions": [
      "fleetengine.trips.create",
      "fleetengine.trips.get",
      "fleetengine.trips.search",
      "fleetengine.trips.update",
      "fleetengine.trips.updateState",
      "fleetengine.vehicles.create",
      "fleetengine.vehicles.get",
      "fleetengine.vehicles.list",
      "fleetengine.vehicles.search",
      "fleetengine.vehicles.searchFuzzed",
      "fleetengine.vehicles.update",
      "fleetengine.vehicles.updateLocation",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gameservices.admin",
    "title": "Game Services API Admin",
    "description": "Full access to Game Services API and related resources.",
    "includedPermissions": [
      "gameservices.gameServerClusters.create",
      "gameservices.gameServerClusters.delete",
      "gameservices.gameServerClusters.get",
      "gameservices.gameServerClusters.list",
      "gameservices.gameServerClusters.update",
      "gameservices.gameServerConfigs.create",
      "gameservices.gameServerConfigs.delete",
      "gameservices.gameServerConfigs.get",
      "gameservices.gameServerConfigs.list",
      "gameservices.gameServerDeployments.create",
      "gameservices.gameServerDeployments.delete",
      "gameservices.gameServerDeployments.get",
      "gameservices.gameServerDeployments.list",
      "gameservices.gameServerDeployments.rollout",
      "gameservices.gameServerDeployments.update",
      "gameservices.locations.get",
      "gameservices.locations.list",
      "gameservices.operations.cancel",
      "gameservices.operations.delete",
      "gameservices.operations.get",
      "gameservices.operations.list",
      "gameservices.realms.create",
      "gameservices.realms.delete",
      "gameservices.realms.get",
      "gameservices.realms.list",
      "gameservices.realms.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gameservices.serviceAgent",
    "title": "Game Services Service Agent",
    "description": "Gives Game Services Service Account access to GCP resources.",
    "includedPermissions": [
      "container.apiServices.create",
      "container.apiServices.delete",
      "container.apiServices.get",
      "container.apiServices.getStatus",
      "container.apiServices.list",
      "container.apiServices.update",
      "container.apiServices.updateStatus",
      "container.auditSinks.create",
      "container.auditSinks.delete",
      "container.auditSinks.get",
      "container.auditSinks.list",
      "container.auditSinks.update",
      "container.backendConfigs.create",
      "container.backendConfigs.delete",
      "container.backendConfigs.get",
      "container.backendConfigs.list",
      "container.backendConfigs.update",
      "container.bindings.create",
      "container.bindings.delete",
      "container.bindings.get",
      "container.bindings.list",
      "container.bindings.update",
      "container.certificateSigningRequests.create",
      "container.certificateSigningRequests.delete",
      "container.certificateSigningRequests.get",
      "container.certificateSigningRequests.list",
      "container.certificateSigningRequests.update",
      "container.certificateSigningRequests.updateStatus",
      "container.clusterRoleBindings.create",
      "container.clusterRoleBindings.get",
      "container.clusterRoleBindings.list",
      "container.clusterRoleBindings.update",
      "container.clusterRoles.bind",
      "container.clusterRoles.create",
      "container.clusterRoles.escalate",
      "container.clusterRoles.get",
      "container.clusterRoles.list",
      "container.clusterRoles.update",
      "container.clusters.create",
      "container.clusters.delete",
      "container.clusters.get",
      "container.clusters.list",
      "container.clusters.update",
      "container.componentStatuses.get",
      "container.componentStatuses.list",
      "container.configMaps.create",
      "container.configMaps.delete",
      "container.configMaps.get",
      "container.configMaps.list",
      "container.configMaps.update",
      "container.controllerRevisions.get",
      "container.controllerRevisions.list",
      "container.cronJobs.create",
      "container.cronJobs.delete",
      "container.cronJobs.get",
      "container.cronJobs.getStatus",
      "container.cronJobs.list",
      "container.cronJobs.update",
      "container.cronJobs.updateStatus",
      "container.csiDrivers.create",
      "container.csiDrivers.delete",
      "container.csiDrivers.get",
      "container.csiDrivers.list",
      "container.csiDrivers.update",
      "container.csiNodeInfos.create",
      "container.csiNodeInfos.delete",
      "container.csiNodeInfos.get",
      "container.csiNodeInfos.list",
      "container.csiNodeInfos.update",
      "container.csiNodes.create",
      "container.csiNodes.delete",
      "container.csiNodes.get",
      "container.csiNodes.list",
      "container.csiNodes.update",
      "container.customResourceDefinitions.create",
      "container.customResourceDefinitions.delete",
      "container.customResourceDefinitions.get",
      "container.customResourceDefinitions.getStatus",
      "container.customResourceDefinitions.list",
      "container.customResourceDefinitions.update",
      "container.customResourceDefinitions.updateStatus",
      "container.daemonSets.create",
      "container.daemonSets.delete",
      "container.daemonSets.get",
      "container.daemonSets.getStatus",
      "container.daemonSets.list",
      "container.daemonSets.update",
      "container.daemonSets.updateStatus",
      "container.deployments.create",
      "container.deployments.delete",
      "container.deployments.get",
      "container.deployments.getScale",
      "container.deployments.getStatus",
      "container.deployments.list",
      "container.deployments.rollback",
      "container.deployments.update",
      "container.deployments.updateScale",
      "container.deployments.updateStatus",
      "container.endpointSlices.create",
      "container.endpointSlices.delete",
      "container.endpointSlices.get",
      "container.endpointSlices.list",
      "container.endpointSlices.update",
      "container.endpoints.create",
      "container.endpoints.delete",
      "container.endpoints.get",
      "container.endpoints.list",
      "container.endpoints.update",
      "container.events.create",
      "container.events.delete",
      "container.events.get",
      "container.events.list",
      "container.events.update",
      "container.frontendConfigs.create",
      "container.frontendConfigs.delete",
      "container.frontendConfigs.get",
      "container.frontendConfigs.list",
      "container.frontendConfigs.update",
      "container.horizontalPodAutoscalers.create",
      "container.horizontalPodAutoscalers.delete",
      "container.horizontalPodAutoscalers.get",
      "container.horizontalPodAutoscalers.getStatus",
      "container.horizontalPodAutoscalers.list",
      "container.horizontalPodAutoscalers.update",
      "container.horizontalPodAutoscalers.updateStatus",
      "container.ingresses.create",
      "container.ingresses.delete",
      "container.ingresses.get",
      "container.ingresses.getStatus",
      "container.ingresses.list",
      "container.ingresses.update",
      "container.ingresses.updateStatus",
      "container.initializerConfigurations.create",
      "container.initializerConfigurations.delete",
      "container.initializerConfigurations.get",
      "container.initializerConfigurations.list",
      "container.initializerConfigurations.update",
      "container.jobs.create",
      "container.jobs.delete",
      "container.jobs.get",
      "container.jobs.getStatus",
      "container.jobs.list",
      "container.jobs.update",
      "container.jobs.updateStatus",
      "container.leases.create",
      "container.leases.delete",
      "container.leases.get",
      "container.leases.list",
      "container.leases.update",
      "container.limitRanges.create",
      "container.limitRanges.delete",
      "container.limitRanges.get",
      "container.limitRanges.list",
      "container.limitRanges.update",
      "container.localSubjectAccessReviews.create",
      "container.localSubjectAccessReviews.list",
      "container.managedCertificates.create",
      "container.managedCertificates.delete",
      "container.managedCertificates.get",
      "container.managedCertificates.list",
      "container.managedCertificates.update",
      "container.mutatingWebhookConfigurations.create",
      "container.mutatingWebhookConfigurations.delete",
      "container.mutatingWebhookConfigurations.get",
      "container.mutatingWebhookConfigurations.list",
      "container.mutatingWebhookConfigurations.update",
      "container.namespaces.create",
      "container.namespaces.delete",
      "container.namespaces.finalize",
      "container.namespaces.get",
      "container.namespaces.getStatus",
      "container.namespaces.list",
      "container.namespaces.update",
      "container.namespaces.updateStatus",
      "container.networkPolicies.create",
      "container.networkPolicies.delete",
      "container.networkPolicies.get",
      "container.networkPolicies.list",
      "container.networkPolicies.update",
      "container.nodes.create",
      "container.nodes.delete",
      "container.nodes.get",
      "container.nodes.getStatus",
      "container.nodes.list",
      "container.nodes.proxy",
      "container.nodes.update",
      "container.nodes.updateStatus",
      "container.operations.get",
      "container.operations.list",
      "container.persistentVolumeClaims.create",
      "container.persistentVolumeClaims.delete",
      "container.persistentVolumeClaims.get",
      "container.persistentVolumeClaims.getStatus",
      "container.persistentVolumeClaims.list",
      "container.persistentVolumeClaims.update",
      "container.persistentVolumeClaims.updateStatus",
      "container.persistentVolumes.create",
      "container.persistentVolumes.delete",
      "container.persistentVolumes.get",
      "container.persistentVolumes.getStatus",
      "container.persistentVolumes.list",
      "container.persistentVolumes.update",
      "container.persistentVolumes.updateStatus",
      "container.petSets.create",
      "container.petSets.delete",
      "container.petSets.get",
      "container.petSets.list",
      "container.petSets.update",
      "container.petSets.updateStatus",
      "container.podDisruptionBudgets.create",
      "container.podDisruptionBudgets.delete",
      "container.podDisruptionBudgets.get",
      "container.podDisruptionBudgets.getStatus",
      "container.podDisruptionBudgets.list",
      "container.podDisruptionBudgets.update",
      "container.podDisruptionBudgets.updateStatus",
      "container.podPresets.create",
      "container.podPresets.delete",
      "container.podPresets.get",
      "container.podPresets.list",
      "container.podPresets.update",
      "container.podSecurityPolicies.get",
      "container.podSecurityPolicies.list",
      "container.podTemplates.create",
      "container.podTemplates.delete",
      "container.podTemplates.get",
      "container.podTemplates.list",
      "container.podTemplates.update",
      "container.pods.attach",
      "container.pods.create",
      "container.pods.delete",
      "container.pods.evict",
      "container.pods.exec",
      "container.pods.get",
      "container.pods.getLogs",
      "container.pods.getStatus",
      "container.pods.initialize",
      "container.pods.list",
      "container.pods.portForward",
      "container.pods.proxy",
      "container.pods.update",
      "container.pods.updateStatus",
      "container.priorityClasses.create",
      "container.priorityClasses.delete",
      "container.priorityClasses.get",
      "container.priorityClasses.list",
      "container.priorityClasses.update",
      "container.replicaSets.create",
      "container.replicaSets.delete",
      "container.replicaSets.get",
      "container.replicaSets.getScale",
      "container.replicaSets.getStatus",
      "container.replicaSets.list",
      "container.replicaSets.update",
      "container.replicaSets.updateScale",
      "container.replicaSets.updateStatus",
      "container.replicationControllers.create",
      "container.replicationControllers.delete",
      "container.replicationControllers.get",
      "container.replicationControllers.getScale",
      "container.replicationControllers.getStatus",
      "container.replicationControllers.list",
      "container.replicationControllers.update",
      "container.replicationControllers.updateScale",
      "container.replicationControllers.updateStatus",
      "container.resourceQuotas.create",
      "container.resourceQuotas.delete",
      "container.resourceQuotas.get",
      "container.resourceQuotas.getStatus",
      "container.resourceQuotas.list",
      "container.resourceQuotas.update",
      "container.resourceQuotas.updateStatus",
      "container.roleBindings.create",
      "container.roleBindings.get",
      "container.roleBindings.list",
      "container.roles.bind",
      "container.roles.create",
      "container.roles.escalate",
      "container.roles.get",
      "container.roles.list",
      "container.runtimeClasses.create",
      "container.runtimeClasses.delete",
      "container.runtimeClasses.get",
      "container.runtimeClasses.list",
      "container.runtimeClasses.update",
      "container.scheduledJobs.create",
      "container.scheduledJobs.delete",
      "container.scheduledJobs.get",
      "container.scheduledJobs.list",
      "container.scheduledJobs.update",
      "container.scheduledJobs.updateStatus",
      "container.secrets.create",
      "container.secrets.delete",
      "container.secrets.get",
      "container.secrets.list",
      "container.secrets.update",
      "container.selfSubjectAccessReviews.create",
      "container.selfSubjectAccessReviews.list",
      "container.selfSubjectRulesReviews.create",
      "container.serviceAccounts.create",
      "container.serviceAccounts.createToken",
      "container.serviceAccounts.delete",
      "container.serviceAccounts.get",
      "container.serviceAccounts.list",
      "container.serviceAccounts.update",
      "container.services.create",
      "container.services.delete",
      "container.services.get",
      "container.services.getStatus",
      "container.services.list",
      "container.services.proxy",
      "container.services.update",
      "container.services.updateStatus",
      "container.statefulSets.create",
      "container.statefulSets.delete",
      "container.statefulSets.get",
      "container.statefulSets.getScale",
      "container.statefulSets.getStatus",
      "container.statefulSets.list",
      "container.statefulSets.update",
      "container.statefulSets.updateScale",
      "container.statefulSets.updateStatus",
      "container.storageClasses.create",
      "container.storageClasses.delete",
      "container.storageClasses.get",
      "container.storageClasses.list",
      "container.storageClasses.update",
      "container.storageStates.create",
      "container.storageStates.delete",
      "container.storageStates.get",
      "container.storageStates.getStatus",
      "container.storageStates.list",
      "container.storageStates.update",
      "container.storageStates.updateStatus",
      "container.storageVersionMigrations.create",
      "container.storageVersionMigrations.delete",
      "container.storageVersionMigrations.get",
      "container.storageVersionMigrations.getStatus",
      "container.storageVersionMigrations.list",
      "container.storageVersionMigrations.update",
      "container.storageVersionMigrations.updateStatus",
      "container.subjectAccessReviews.create",
      "container.subjectAccessReviews.list",
      "container.thirdPartyObjects.create",
      "container.thirdPartyObjects.delete",
      "container.thirdPartyObjects.get",
      "container.thirdPartyObjects.list",
      "container.thirdPartyObjects.update",
      "container.thirdPartyResources.create",
      "container.thirdPartyResources.delete",
      "container.thirdPartyResources.get",
      "container.thirdPartyResources.list",
      "container.thirdPartyResources.update",
      "container.tokenReviews.create",
      "container.updateInfos.create",
      "container.updateInfos.delete",
      "container.updateInfos.get",
      "container.updateInfos.list",
      "container.updateInfos.update",
      "container.validatingWebhookConfigurations.create",
      "container.validatingWebhookConfigurations.delete",
      "container.validatingWebhookConfigurations.get",
      "container.validatingWebhookConfigurations.list",
      "container.validatingWebhookConfigurations.update",
      "container.volumeAttachments.create",
      "container.volumeAttachments.delete",
      "container.volumeAttachments.get",
      "container.volumeAttachments.getStatus",
      "container.volumeAttachments.list",
      "container.volumeAttachments.update",
      "container.volumeAttachments.updateStatus",
      "container.volumeSnapshotClasses.create",
      "container.volumeSnapshotClasses.delete",
      "container.volumeSnapshotClasses.get",
      "container.volumeSnapshotClasses.list",
      "container.volumeSnapshotClasses.update",
      "container.volumeSnapshotContents.create",
      "container.volumeSnapshotContents.delete",
      "container.volumeSnapshotContents.get",
      "container.volumeSnapshotContents.getStatus",
      "container.volumeSnapshotContents.list",
      "container.volumeSnapshotContents.update",
      "container.volumeSnapshotContents.updateStatus",
      "container.volumeSnapshots.create",
      "container.volumeSnapshots.delete",
      "container.volumeSnapshots.get",
      "container.volumeSnapshots.getStatus",
      "container.volumeSnapshots.list",
      "container.volumeSnapshots.update",
      "container.volumeSnapshots.updateStatus",
      "gkehub.features.get",
      "gkehub.features.getIamPolicy",
      "gkehub.features.list",
      "gkehub.fleet.get",
      "gkehub.locations.get",
      "gkehub.locations.list",
      "gkehub.membershipbindings.get",
      "gkehub.membershipbindings.list",
      "gkehub.memberships.generateConnectManifest",
      "gkehub.memberships.get",
      "gkehub.memberships.getIamPolicy",
      "gkehub.memberships.list",
      "gkehub.namespaces.get",
      "gkehub.namespaces.list",
      "gkehub.operations.get",
      "gkehub.operations.list",
      "gkehub.rbacrolebindings.get",
      "gkehub.rbacrolebindings.list",
      "gkehub.scopes.get",
      "gkehub.scopes.list",
      "iam.serviceAccounts.actAs",
      "recommender.containerDiagnosisInsights.get",
      "recommender.containerDiagnosisInsights.list",
      "recommender.containerDiagnosisInsights.update",
      "recommender.containerDiagnosisRecommendations.get",
      "recommender.containerDiagnosisRecommendations.list",
      "recommender.containerDiagnosisRecommendations.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.get",
      "recommender.networkAnalyzerGkeConnectivityInsights.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.update",
      "recommender.networkAnalyzerGkeIpAddressInsights.get",
      "recommender.networkAnalyzerGkeIpAddressInsights.list",
      "recommender.networkAnalyzerGkeIpAddressInsights.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gameservices.viewer",
    "title": "Game Services API Viewer",
    "description": "Read-only access to Game Services API and related resources.",
    "includedPermissions": [
      "gameservices.gameServerClusters.get",
      "gameservices.gameServerClusters.list",
      "gameservices.gameServerConfigs.get",
      "gameservices.gameServerConfigs.list",
      "gameservices.gameServerDeployments.get",
      "gameservices.gameServerDeployments.list",
      "gameservices.locations.get",
      "gameservices.locations.list",
      "gameservices.operations.get",
      "gameservices.operations.list",
      "gameservices.realms.get",
      "gameservices.realms.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/genomics.admin",
    "title": "Genomics Admin",
    "description": "Full access to genomics datasets and operations.",
    "includedPermissions": [
      "genomics.datasets.create",
      "genomics.datasets.delete",
      "genomics.datasets.get",
      "genomics.datasets.getIamPolicy",
      "genomics.datasets.list",
      "genomics.datasets.setIamPolicy",
      "genomics.datasets.update",
      "genomics.operations.cancel",
      "genomics.operations.create",
      "genomics.operations.get",
      "genomics.operations.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/genomics.editor",
    "title": "Genomics Editor",
    "description": "Access to read and edit genomics datasets and operations.",
    "includedPermissions": [
      "genomics.datasets.create",
      "genomics.datasets.delete",
      "genomics.datasets.get",
      "genomics.datasets.list",
      "genomics.datasets.update",
      "genomics.operations.cancel",
      "genomics.operations.create",
      "genomics.operations.get",
      "genomics.operations.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/genomics.pipelinesRunner",
    "title": "Genomics Pipelines Runner",
    "description": "Full access to operate on genomics pipelines.",
    "includedPermissions": [
      "genomics.operations.cancel",
      "genomics.operations.create",
      "genomics.operations.get",
      "genomics.operations.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/genomics.serviceAgent",
    "title": "Genomics Service Agent",
    "description": "Gives Genomics Service Account access to compute resources. Includes access to service accounts.",
    "includedPermissions": [
      "compute.acceleratorTypes.get",
      "compute.acceleratorTypes.list",
      "compute.addresses.createInternal",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.addresses.use",
      "compute.addresses.useInternal",
      "compute.autoscalers.create",
      "compute.autoscalers.delete",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.autoscalers.update",
      "compute.backendBuckets.get",
      "compute.backendBuckets.list",
      "compute.backendBuckets.listEffectiveTags",
      "compute.backendBuckets.listTagBindings",
      "compute.backendServices.get",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.diskTypes.get",
      "compute.diskTypes.list",
      "compute.disks.addResourcePolicies",
      "compute.disks.create",
      "compute.disks.createSnapshot",
      "compute.disks.createTagBinding",
      "compute.disks.delete",
      "compute.disks.deleteTagBinding",
      "compute.disks.get",
      "compute.disks.getIamPolicy",
      "compute.disks.list",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.disks.removeResourcePolicies",
      "compute.disks.resize",
      "compute.disks.setIamPolicy",
      "compute.disks.setLabels",
      "compute.disks.startAsyncReplication",
      "compute.disks.stopAsyncReplication",
      "compute.disks.stopGroupAsyncReplication",
      "compute.disks.update",
      "compute.disks.use",
      "compute.disks.useReadOnly",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.list",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalAddresses.use",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalForwardingRules.pscGet",
      "compute.globalNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.create",
      "compute.globalNetworkEndpointGroups.createTagBinding",
      "compute.globalNetworkEndpointGroups.delete",
      "compute.globalNetworkEndpointGroups.deleteTagBinding",
      "compute.globalNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.get",
      "compute.globalNetworkEndpointGroups.list",
      "compute.globalNetworkEndpointGroups.listEffectiveTags",
      "compute.globalNetworkEndpointGroups.listTagBindings",
      "compute.globalNetworkEndpointGroups.use",
      "compute.globalOperations.get",
      "compute.globalOperations.list",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.images.create",
      "compute.images.createTagBinding",
      "compute.images.delete",
      "compute.images.deleteTagBinding",
      "compute.images.deprecate",
      "compute.images.get",
      "compute.images.getFromFamily",
      "compute.images.getIamPolicy",
      "compute.images.list",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.images.setIamPolicy",
      "compute.images.setLabels",
      "compute.images.update",
      "compute.images.useReadOnly",
      "compute.instanceGroupManagers.create",
      "compute.instanceGroupManagers.delete",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroupManagers.update",
      "compute.instanceGroupManagers.use",
      "compute.instanceGroups.create",
      "compute.instanceGroups.delete",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instanceGroups.update",
      "compute.instanceGroups.use",
      "compute.instanceTemplates.create",
      "compute.instanceTemplates.delete",
      "compute.instanceTemplates.get",
      "compute.instanceTemplates.getIamPolicy",
      "compute.instanceTemplates.list",
      "compute.instanceTemplates.setIamPolicy",
      "compute.instanceTemplates.useReadOnly",
      "compute.instances.addAccessConfig",
      "compute.instances.addMaintenancePolicies",
      "compute.instances.addResourcePolicies",
      "compute.instances.attachDisk",
      "compute.instances.create",
      "compute.instances.createTagBinding",
      "compute.instances.delete",
      "compute.instances.deleteAccessConfig",
      "compute.instances.deleteTagBinding",
      "compute.instances.detachDisk",
      "compute.instances.get",
      "compute.instances.getEffectiveFirewalls",
      "compute.instances.getGuestAttributes",
      "compute.instances.getIamPolicy",
      "compute.instances.getScreenshot",
      "compute.instances.getSerialPortOutput",
      "compute.instances.getShieldedInstanceIdentity",
      "compute.instances.getShieldedVmIdentity",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listReferrers",
      "compute.instances.listTagBindings",
      "compute.instances.osAdminLogin",
      "compute.instances.osLogin",
      "compute.instances.removeMaintenancePolicies",
      "compute.instances.removeResourcePolicies",
      "compute.instances.reset",
      "compute.instances.resume",
      "compute.instances.sendDiagnosticInterrupt",
      "compute.instances.setDeletionProtection",
      "compute.instances.setDiskAutoDelete",
      "compute.instances.setIamPolicy",
      "compute.instances.setLabels",
      "compute.instances.setMachineResources",
      "compute.instances.setMachineType",
      "compute.instances.setMetadata",
      "compute.instances.setMinCpuPlatform",
      "compute.instances.setName",
      "compute.instances.setScheduling",
      "compute.instances.setSecurityPolicy",
      "compute.instances.setServiceAccount",
      "compute.instances.setShieldedInstanceIntegrityPolicy",
      "compute.instances.setShieldedVmIntegrityPolicy",
      "compute.instances.setTags",
      "compute.instances.simulateMaintenanceEvent",
      "compute.instances.start",
      "compute.instances.startWithEncryptionKey",
      "compute.instances.stop",
      "compute.instances.suspend",
      "compute.instances.update",
      "compute.instances.updateAccessConfig",
      "compute.instances.updateDisplayDevice",
      "compute.instances.updateNetworkInterface",
      "compute.instances.updateSecurity",
      "compute.instances.updateShieldedInstanceConfig",
      "compute.instances.updateShieldedVmConfig",
      "compute.instances.use",
      "compute.instances.useReadOnly",
      "compute.instantSnapshots.create",
      "compute.instantSnapshots.delete",
      "compute.instantSnapshots.export",
      "compute.instantSnapshots.get",
      "compute.instantSnapshots.getIamPolicy",
      "compute.instantSnapshots.list",
      "compute.instantSnapshots.setIamPolicy",
      "compute.instantSnapshots.setLabels",
      "compute.instantSnapshots.useReadOnly",
      "compute.interconnectAttachments.get",
      "compute.interconnectAttachments.list",
      "compute.interconnectLocations.get",
      "compute.interconnectLocations.list",
      "compute.interconnectRemoteLocations.get",
      "compute.interconnectRemoteLocations.list",
      "compute.interconnects.get",
      "compute.interconnects.list",
      "compute.licenseCodes.get",
      "compute.licenseCodes.getIamPolicy",
      "compute.licenseCodes.list",
      "compute.licenseCodes.setIamPolicy",
      "compute.licenseCodes.update",
      "compute.licenseCodes.use",
      "compute.licenses.create",
      "compute.licenses.delete",
      "compute.licenses.get",
      "compute.licenses.getIamPolicy",
      "compute.licenses.list",
      "compute.licenses.setIamPolicy",
      "compute.machineImages.create",
      "compute.machineImages.delete",
      "compute.machineImages.get",
      "compute.machineImages.getIamPolicy",
      "compute.machineImages.list",
      "compute.machineImages.setIamPolicy",
      "compute.machineImages.useReadOnly",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.networkAttachments.get",
      "compute.networkAttachments.list",
      "compute.networkEndpointGroups.attachNetworkEndpoints",
      "compute.networkEndpointGroups.create",
      "compute.networkEndpointGroups.createTagBinding",
      "compute.networkEndpointGroups.delete",
      "compute.networkEndpointGroups.deleteTagBinding",
      "compute.networkEndpointGroups.detachNetworkEndpoints",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.getIamPolicy",
      "compute.networkEndpointGroups.list",
      "compute.networkEndpointGroups.listEffectiveTags",
      "compute.networkEndpointGroups.listTagBindings",
      "compute.networkEndpointGroups.setIamPolicy",
      "compute.networkEndpointGroups.use",
      "compute.networks.get",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listTagBindings",
      "compute.networks.use",
      "compute.networks.useExternalIp",
      "compute.projects.get",
      "compute.projects.setCommonInstanceMetadata",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionHealthCheckServices.get",
      "compute.regionHealthCheckServices.list",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.create",
      "compute.regionNetworkEndpointGroups.createTagBinding",
      "compute.regionNetworkEndpointGroups.delete",
      "compute.regionNetworkEndpointGroups.deleteTagBinding",
      "compute.regionNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionNetworkEndpointGroups.listEffectiveTags",
      "compute.regionNetworkEndpointGroups.listTagBindings",
      "compute.regionNetworkEndpointGroups.use",
      "compute.regionNotificationEndpoints.get",
      "compute.regionNotificationEndpoints.list",
      "compute.regionOperations.get",
      "compute.regionOperations.list",
      "compute.regionSslCertificates.get",
      "compute.regionSslCertificates.list",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionSslPolicies.get",
      "compute.regionSslPolicies.list",
      "compute.regionSslPolicies.listAvailableFeatures",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionTargetTcpProxies.get",
      "compute.regionTargetTcpProxies.list",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.list",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.regions.get",
      "compute.regions.list",
      "compute.reservations.get",
      "compute.reservations.list",
      "compute.resourcePolicies.create",
      "compute.resourcePolicies.delete",
      "compute.resourcePolicies.get",
      "compute.resourcePolicies.getIamPolicy",
      "compute.resourcePolicies.list",
      "compute.resourcePolicies.setIamPolicy",
      "compute.resourcePolicies.update",
      "compute.resourcePolicies.use",
      "compute.resourcePolicies.useReadOnly",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routes.get",
      "compute.routes.list",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.serviceAttachments.get",
      "compute.serviceAttachments.list",
      "compute.snapshots.create",
      "compute.snapshots.createTagBinding",
      "compute.snapshots.delete",
      "compute.snapshots.deleteTagBinding",
      "compute.snapshots.get",
      "compute.snapshots.getIamPolicy",
      "compute.snapshots.list",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.snapshots.setIamPolicy",
      "compute.snapshots.setLabels",
      "compute.snapshots.useReadOnly",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.get",
      "compute.sslPolicies.list",
      "compute.sslPolicies.listAvailableFeatures",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.targetGrpcProxies.get",
      "compute.targetGrpcProxies.list",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetInstances.get",
      "compute.targetInstances.list",
      "compute.targetInstances.listEffectiveTags",
      "compute.targetInstances.listTagBindings",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetSslProxies.listEffectiveTags",
      "compute.targetSslProxies.listTagBindings",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.targetVpnGateways.get",
      "compute.targetVpnGateways.list",
      "compute.urlMaps.get",
      "compute.urlMaps.list",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "compute.vpnGateways.get",
      "compute.vpnGateways.list",
      "compute.vpnTunnels.get",
      "compute.vpnTunnels.list",
      "compute.zoneOperations.get",
      "compute.zoneOperations.list",
      "compute.zones.get",
      "compute.zones.list",
      "iam.serviceAccounts.actAs",
      "pubsub.topics.publish",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "serviceusage.services.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/genomics.viewer",
    "title": "Genomics Viewer",
    "description": "Access to view genomics datasets and operations.",
    "includedPermissions": [
      "genomics.datasets.get",
      "genomics.datasets.list",
      "genomics.operations.get",
      "genomics.operations.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gkebackup.admin",
    "title": "Backup for GKE Admin",
    "description": "Full access to all Backup for GKE resources.",
    "includedPermissions": [
      "gkebackup.backupPlans.create",
      "gkebackup.backupPlans.delete",
      "gkebackup.backupPlans.get",
      "gkebackup.backupPlans.getIamPolicy",
      "gkebackup.backupPlans.list",
      "gkebackup.backupPlans.setIamPolicy",
      "gkebackup.backupPlans.update",
      "gkebackup.backups.create",
      "gkebackup.backups.delete",
      "gkebackup.backups.get",
      "gkebackup.backups.list",
      "gkebackup.backups.update",
      "gkebackup.locations.get",
      "gkebackup.locations.list",
      "gkebackup.operations.cancel",
      "gkebackup.operations.delete",
      "gkebackup.operations.get",
      "gkebackup.operations.list",
      "gkebackup.restorePlans.create",
      "gkebackup.restorePlans.delete",
      "gkebackup.restorePlans.get",
      "gkebackup.restorePlans.getIamPolicy",
      "gkebackup.restorePlans.list",
      "gkebackup.restorePlans.setIamPolicy",
      "gkebackup.restorePlans.update",
      "gkebackup.restores.create",
      "gkebackup.restores.delete",
      "gkebackup.restores.get",
      "gkebackup.restores.list",
      "gkebackup.restores.update",
      "gkebackup.volumeBackups.get",
      "gkebackup.volumeBackups.list",
      "gkebackup.volumeRestores.get",
      "gkebackup.volumeRestores.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gkebackup.backupAdmin",
    "title": "Backup for GKE Backup Admin",
    "description": "Allows administrators to manage all BackupPlan and Backup resources.",
    "includedPermissions": [
      "gkebackup.backupPlans.create",
      "gkebackup.backupPlans.delete",
      "gkebackup.backupPlans.get",
      "gkebackup.backupPlans.getIamPolicy",
      "gkebackup.backupPlans.list",
      "gkebackup.backupPlans.setIamPolicy",
      "gkebackup.backupPlans.update",
      "gkebackup.backups.create",
      "gkebackup.backups.delete",
      "gkebackup.backups.get",
      "gkebackup.backups.list",
      "gkebackup.backups.update",
      "gkebackup.locations.get",
      "gkebackup.locations.list",
      "gkebackup.operations.get",
      "gkebackup.operations.list",
      "gkebackup.volumeBackups.get",
      "gkebackup.volumeBackups.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gkebackup.delegatedBackupAdmin",
    "title": "Backup for GKE Delegated Backup Admin",
    "description": "Allows administrators to manage Backup resources for specific BackupPlans",
    "includedPermissions": [
      "gkebackup.backupPlans.get",
      "gkebackup.backups.create",
      "gkebackup.backups.delete",
      "gkebackup.backups.get",
      "gkebackup.backups.list",
      "gkebackup.backups.update",
      "gkebackup.volumeBackups.get",
      "gkebackup.volumeBackups.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gkebackup.delegatedRestoreAdmin",
    "title": "Backup for GKE Delegated Restore Admin",
    "description": "Allows administrators to manage Restore resources for specific RestorePlans",
    "includedPermissions": [
      "gkebackup.restorePlans.get",
      "gkebackup.restores.create",
      "gkebackup.restores.delete",
      "gkebackup.restores.get",
      "gkebackup.restores.list",
      "gkebackup.restores.update",
      "gkebackup.volumeRestores.get",
      "gkebackup.volumeRestores.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gkebackup.restoreAdmin",
    "title": "Backup for GKE Restore Admin",
    "description": "Allows administrators to manage all RestorePlan and Restore resources.",
    "includedPermissions": [
      "gkebackup.backupPlans.get",
      "gkebackup.backupPlans.list",
      "gkebackup.backups.get",
      "gkebackup.backups.list",
      "gkebackup.locations.get",
      "gkebackup.locations.list",
      "gkebackup.operations.get",
      "gkebackup.operations.list",
      "gkebackup.restorePlans.create",
      "gkebackup.restorePlans.delete",
      "gkebackup.restorePlans.get",
      "gkebackup.restorePlans.getIamPolicy",
      "gkebackup.restorePlans.list",
      "gkebackup.restorePlans.setIamPolicy",
      "gkebackup.restorePlans.update",
      "gkebackup.restores.create",
      "gkebackup.restores.delete",
      "gkebackup.restores.get",
      "gkebackup.restores.list",
      "gkebackup.restores.update",
      "gkebackup.volumeBackups.get",
      "gkebackup.volumeBackups.list",
      "gkebackup.volumeRestores.get",
      "gkebackup.volumeRestores.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gkebackup.serviceAgent",
    "title": "Backup for GKE Service Agent",
    "description": "Grants the Backup for GKE Service Account access to managed resources.",
    "includedPermissions": [
      "compute.disks.create",
      "compute.disks.createSnapshot",
      "compute.disks.get",
      "compute.disks.list",
      "compute.disks.setLabels",
      "compute.disks.useReadOnly",
      "compute.globalOperations.get",
      "compute.regionOperations.get",
      "compute.snapshots.delete",
      "compute.snapshots.get",
      "compute.zoneOperations.get",
      "container.apiServices.create",
      "container.apiServices.delete",
      "container.apiServices.get",
      "container.apiServices.getStatus",
      "container.apiServices.list",
      "container.apiServices.update",
      "container.apiServices.updateStatus",
      "container.auditSinks.create",
      "container.auditSinks.delete",
      "container.auditSinks.get",
      "container.auditSinks.list",
      "container.auditSinks.update",
      "container.backendConfigs.create",
      "container.backendConfigs.delete",
      "container.backendConfigs.get",
      "container.backendConfigs.list",
      "container.backendConfigs.update",
      "container.bindings.create",
      "container.bindings.delete",
      "container.bindings.get",
      "container.bindings.list",
      "container.bindings.update",
      "container.certificateSigningRequests.create",
      "container.certificateSigningRequests.delete",
      "container.certificateSigningRequests.get",
      "container.certificateSigningRequests.list",
      "container.certificateSigningRequests.update",
      "container.certificateSigningRequests.updateStatus",
      "container.clusterRoleBindings.get",
      "container.clusterRoleBindings.list",
      "container.clusterRoles.get",
      "container.clusterRoles.list",
      "container.clusters.get",
      "container.clusters.list",
      "container.clusters.update",
      "container.componentStatuses.get",
      "container.componentStatuses.list",
      "container.configMaps.create",
      "container.configMaps.delete",
      "container.configMaps.get",
      "container.configMaps.list",
      "container.configMaps.update",
      "container.controllerRevisions.get",
      "container.controllerRevisions.list",
      "container.cronJobs.create",
      "container.cronJobs.delete",
      "container.cronJobs.get",
      "container.cronJobs.getStatus",
      "container.cronJobs.list",
      "container.cronJobs.update",
      "container.cronJobs.updateStatus",
      "container.csiDrivers.create",
      "container.csiDrivers.delete",
      "container.csiDrivers.get",
      "container.csiDrivers.list",
      "container.csiDrivers.update",
      "container.csiNodeInfos.create",
      "container.csiNodeInfos.delete",
      "container.csiNodeInfos.get",
      "container.csiNodeInfos.list",
      "container.csiNodeInfos.update",
      "container.csiNodes.create",
      "container.csiNodes.delete",
      "container.csiNodes.get",
      "container.csiNodes.list",
      "container.csiNodes.update",
      "container.customResourceDefinitions.create",
      "container.customResourceDefinitions.delete",
      "container.customResourceDefinitions.get",
      "container.customResourceDefinitions.getStatus",
      "container.customResourceDefinitions.list",
      "container.customResourceDefinitions.update",
      "container.customResourceDefinitions.updateStatus",
      "container.daemonSets.create",
      "container.daemonSets.delete",
      "container.daemonSets.get",
      "container.daemonSets.getStatus",
      "container.daemonSets.list",
      "container.daemonSets.update",
      "container.daemonSets.updateStatus",
      "container.deployments.create",
      "container.deployments.delete",
      "container.deployments.get",
      "container.deployments.getScale",
      "container.deployments.getStatus",
      "container.deployments.list",
      "container.deployments.rollback",
      "container.deployments.update",
      "container.deployments.updateScale",
      "container.deployments.updateStatus",
      "container.endpointSlices.create",
      "container.endpointSlices.delete",
      "container.endpointSlices.get",
      "container.endpointSlices.list",
      "container.endpointSlices.update",
      "container.endpoints.create",
      "container.endpoints.delete",
      "container.endpoints.get",
      "container.endpoints.list",
      "container.endpoints.update",
      "container.events.create",
      "container.events.delete",
      "container.events.get",
      "container.events.list",
      "container.events.update",
      "container.frontendConfigs.create",
      "container.frontendConfigs.delete",
      "container.frontendConfigs.get",
      "container.frontendConfigs.list",
      "container.frontendConfigs.update",
      "container.horizontalPodAutoscalers.create",
      "container.horizontalPodAutoscalers.delete",
      "container.horizontalPodAutoscalers.get",
      "container.horizontalPodAutoscalers.getStatus",
      "container.horizontalPodAutoscalers.list",
      "container.horizontalPodAutoscalers.update",
      "container.horizontalPodAutoscalers.updateStatus",
      "container.ingresses.create",
      "container.ingresses.delete",
      "container.ingresses.get",
      "container.ingresses.getStatus",
      "container.ingresses.list",
      "container.ingresses.update",
      "container.ingresses.updateStatus",
      "container.initializerConfigurations.create",
      "container.initializerConfigurations.delete",
      "container.initializerConfigurations.get",
      "container.initializerConfigurations.list",
      "container.initializerConfigurations.update",
      "container.jobs.create",
      "container.jobs.delete",
      "container.jobs.get",
      "container.jobs.getStatus",
      "container.jobs.list",
      "container.jobs.update",
      "container.jobs.updateStatus",
      "container.leases.create",
      "container.leases.delete",
      "container.leases.get",
      "container.leases.list",
      "container.leases.update",
      "container.limitRanges.create",
      "container.limitRanges.delete",
      "container.limitRanges.get",
      "container.limitRanges.list",
      "container.limitRanges.update",
      "container.localSubjectAccessReviews.create",
      "container.localSubjectAccessReviews.list",
      "container.managedCertificates.create",
      "container.managedCertificates.delete",
      "container.managedCertificates.get",
      "container.managedCertificates.list",
      "container.managedCertificates.update",
      "container.mutatingWebhookConfigurations.get",
      "container.mutatingWebhookConfigurations.list",
      "container.namespaces.create",
      "container.namespaces.delete",
      "container.namespaces.finalize",
      "container.namespaces.get",
      "container.namespaces.getStatus",
      "container.namespaces.list",
      "container.namespaces.update",
      "container.namespaces.updateStatus",
      "container.networkPolicies.create",
      "container.networkPolicies.delete",
      "container.networkPolicies.get",
      "container.networkPolicies.list",
      "container.networkPolicies.update",
      "container.nodes.create",
      "container.nodes.delete",
      "container.nodes.get",
      "container.nodes.getStatus",
      "container.nodes.list",
      "container.nodes.proxy",
      "container.nodes.update",
      "container.nodes.updateStatus",
      "container.operations.get",
      "container.operations.list",
      "container.persistentVolumeClaims.create",
      "container.persistentVolumeClaims.delete",
      "container.persistentVolumeClaims.get",
      "container.persistentVolumeClaims.getStatus",
      "container.persistentVolumeClaims.list",
      "container.persistentVolumeClaims.update",
      "container.persistentVolumeClaims.updateStatus",
      "container.persistentVolumes.create",
      "container.persistentVolumes.delete",
      "container.persistentVolumes.get",
      "container.persistentVolumes.getStatus",
      "container.persistentVolumes.list",
      "container.persistentVolumes.update",
      "container.persistentVolumes.updateStatus",
      "container.petSets.create",
      "container.petSets.delete",
      "container.petSets.get",
      "container.petSets.list",
      "container.petSets.update",
      "container.petSets.updateStatus",
      "container.podDisruptionBudgets.create",
      "container.podDisruptionBudgets.delete",
      "container.podDisruptionBudgets.get",
      "container.podDisruptionBudgets.getStatus",
      "container.podDisruptionBudgets.list",
      "container.podDisruptionBudgets.update",
      "container.podDisruptionBudgets.updateStatus",
      "container.podPresets.create",
      "container.podPresets.delete",
      "container.podPresets.get",
      "container.podPresets.list",
      "container.podPresets.update",
      "container.podSecurityPolicies.get",
      "container.podSecurityPolicies.list",
      "container.podTemplates.create",
      "container.podTemplates.delete",
      "container.podTemplates.get",
      "container.podTemplates.list",
      "container.podTemplates.update",
      "container.pods.attach",
      "container.pods.create",
      "container.pods.delete",
      "container.pods.evict",
      "container.pods.exec",
      "container.pods.get",
      "container.pods.getLogs",
      "container.pods.getStatus",
      "container.pods.initialize",
      "container.pods.list",
      "container.pods.portForward",
      "container.pods.proxy",
      "container.pods.update",
      "container.pods.updateStatus",
      "container.priorityClasses.create",
      "container.priorityClasses.delete",
      "container.priorityClasses.get",
      "container.priorityClasses.list",
      "container.priorityClasses.update",
      "container.replicaSets.create",
      "container.replicaSets.delete",
      "container.replicaSets.get",
      "container.replicaSets.getScale",
      "container.replicaSets.getStatus",
      "container.replicaSets.list",
      "container.replicaSets.update",
      "container.replicaSets.updateScale",
      "container.replicaSets.updateStatus",
      "container.replicationControllers.create",
      "container.replicationControllers.delete",
      "container.replicationControllers.get",
      "container.replicationControllers.getScale",
      "container.replicationControllers.getStatus",
      "container.replicationControllers.list",
      "container.replicationControllers.update",
      "container.replicationControllers.updateScale",
      "container.replicationControllers.updateStatus",
      "container.resourceQuotas.create",
      "container.resourceQuotas.delete",
      "container.resourceQuotas.get",
      "container.resourceQuotas.getStatus",
      "container.resourceQuotas.list",
      "container.resourceQuotas.update",
      "container.resourceQuotas.updateStatus",
      "container.roleBindings.get",
      "container.roleBindings.list",
      "container.roles.get",
      "container.roles.list",
      "container.runtimeClasses.create",
      "container.runtimeClasses.delete",
      "container.runtimeClasses.get",
      "container.runtimeClasses.list",
      "container.runtimeClasses.update",
      "container.scheduledJobs.create",
      "container.scheduledJobs.delete",
      "container.scheduledJobs.get",
      "container.scheduledJobs.list",
      "container.scheduledJobs.update",
      "container.scheduledJobs.updateStatus",
      "container.secrets.create",
      "container.secrets.delete",
      "container.secrets.get",
      "container.secrets.list",
      "container.secrets.update",
      "container.selfSubjectAccessReviews.create",
      "container.selfSubjectAccessReviews.list",
      "container.selfSubjectRulesReviews.create",
      "container.serviceAccounts.create",
      "container.serviceAccounts.createToken",
      "container.serviceAccounts.delete",
      "container.serviceAccounts.get",
      "container.serviceAccounts.list",
      "container.serviceAccounts.update",
      "container.services.create",
      "container.services.delete",
      "container.services.get",
      "container.services.getStatus",
      "container.services.list",
      "container.services.proxy",
      "container.services.update",
      "container.services.updateStatus",
      "container.statefulSets.create",
      "container.statefulSets.delete",
      "container.statefulSets.get",
      "container.statefulSets.getScale",
      "container.statefulSets.getStatus",
      "container.statefulSets.list",
      "container.statefulSets.update",
      "container.statefulSets.updateScale",
      "container.statefulSets.updateStatus",
      "container.storageClasses.create",
      "container.storageClasses.delete",
      "container.storageClasses.get",
      "container.storageClasses.list",
      "container.storageClasses.update",
      "container.storageStates.create",
      "container.storageStates.delete",
      "container.storageStates.get",
      "container.storageStates.getStatus",
      "container.storageStates.list",
      "container.storageStates.update",
      "container.storageStates.updateStatus",
      "container.storageVersionMigrations.create",
      "container.storageVersionMigrations.delete",
      "container.storageVersionMigrations.get",
      "container.storageVersionMigrations.getStatus",
      "container.storageVersionMigrations.list",
      "container.storageVersionMigrations.update",
      "container.storageVersionMigrations.updateStatus",
      "container.subjectAccessReviews.create",
      "container.subjectAccessReviews.list",
      "container.thirdPartyObjects.create",
      "container.thirdPartyObjects.delete",
      "container.thirdPartyObjects.get",
      "container.thirdPartyObjects.list",
      "container.thirdPartyObjects.update",
      "container.thirdPartyResources.create",
      "container.thirdPartyResources.delete",
      "container.thirdPartyResources.get",
      "container.thirdPartyResources.list",
      "container.thirdPartyResources.update",
      "container.tokenReviews.create",
      "container.updateInfos.create",
      "container.updateInfos.delete",
      "container.updateInfos.get",
      "container.updateInfos.list",
      "container.updateInfos.update",
      "container.validatingWebhookConfigurations.get",
      "container.validatingWebhookConfigurations.list",
      "container.volumeAttachments.create",
      "container.volumeAttachments.delete",
      "container.volumeAttachments.get",
      "container.volumeAttachments.getStatus",
      "container.volumeAttachments.list",
      "container.volumeAttachments.update",
      "container.volumeAttachments.updateStatus",
      "container.volumeSnapshotClasses.create",
      "container.volumeSnapshotClasses.delete",
      "container.volumeSnapshotClasses.get",
      "container.volumeSnapshotClasses.list",
      "container.volumeSnapshotClasses.update",
      "container.volumeSnapshotContents.create",
      "container.volumeSnapshotContents.delete",
      "container.volumeSnapshotContents.get",
      "container.volumeSnapshotContents.getStatus",
      "container.volumeSnapshotContents.list",
      "container.volumeSnapshotContents.update",
      "container.volumeSnapshotContents.updateStatus",
      "container.volumeSnapshots.create",
      "container.volumeSnapshots.delete",
      "container.volumeSnapshots.get",
      "container.volumeSnapshots.getStatus",
      "container.volumeSnapshots.list",
      "container.volumeSnapshots.update",
      "container.volumeSnapshots.updateStatus",
      "gkebackup.operations.get",
      "recommender.containerDiagnosisInsights.get",
      "recommender.containerDiagnosisInsights.list",
      "recommender.containerDiagnosisInsights.update",
      "recommender.containerDiagnosisRecommendations.get",
      "recommender.containerDiagnosisRecommendations.list",
      "recommender.containerDiagnosisRecommendations.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.get",
      "recommender.networkAnalyzerGkeConnectivityInsights.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.update",
      "recommender.networkAnalyzerGkeIpAddressInsights.get",
      "recommender.networkAnalyzerGkeIpAddressInsights.list",
      "recommender.networkAnalyzerGkeIpAddressInsights.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "resourcemanager.projects.updateLiens"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gkebackup.viewer",
    "title": "Backup for GKE Viewer",
    "description": "Read-only access to all Backup for GKE resources.",
    "includedPermissions": [
      "gkebackup.backupPlans.get",
      "gkebackup.backupPlans.getIamPolicy",
      "gkebackup.backupPlans.list",
      "gkebackup.backups.get",
      "gkebackup.backups.list",
      "gkebackup.locations.get",
      "gkebackup.locations.list",
      "gkebackup.operations.get",
      "gkebackup.operations.list",
      "gkebackup.restorePlans.get",
      "gkebackup.restorePlans.getIamPolicy",
      "gkebackup.restorePlans.list",
      "gkebackup.restores.get",
      "gkebackup.restores.list",
      "gkebackup.volumeBackups.get",
      "gkebackup.volumeBackups.list",
      "gkebackup.volumeRestores.get",
      "gkebackup.volumeRestores.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gkedataplanemanagement.warpRunServiceAgent",
    "title": "Warp Run Service Agent",
    "description": "Gives the Warp Run service agent access to Cloud Platform resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gkehub.admin",
    "title": "Fleet Admin (formerly GKE Hub Admin)",
    "description": "Full access to Fleet resources.",
    "includedPermissions": [
      "gkehub.features.create",
      "gkehub.features.delete",
      "gkehub.features.get",
      "gkehub.features.getIamPolicy",
      "gkehub.features.list",
      "gkehub.features.setIamPolicy",
      "gkehub.features.update",
      "gkehub.fleet.create",
      "gkehub.fleet.delete",
      "gkehub.fleet.get",
      "gkehub.fleet.update",
      "gkehub.locations.get",
      "gkehub.locations.list",
      "gkehub.membershipbindings.create",
      "gkehub.membershipbindings.delete",
      "gkehub.membershipbindings.get",
      "gkehub.membershipbindings.list",
      "gkehub.membershipbindings.update",
      "gkehub.memberships.create",
      "gkehub.memberships.delete",
      "gkehub.memberships.generateConnectManifest",
      "gkehub.memberships.get",
      "gkehub.memberships.getIamPolicy",
      "gkehub.memberships.list",
      "gkehub.memberships.setIamPolicy",
      "gkehub.memberships.update",
      "gkehub.namespaces.create",
      "gkehub.namespaces.delete",
      "gkehub.namespaces.get",
      "gkehub.namespaces.list",
      "gkehub.namespaces.update",
      "gkehub.operations.cancel",
      "gkehub.operations.delete",
      "gkehub.operations.get",
      "gkehub.operations.list",
      "gkehub.rbacrolebindings.create",
      "gkehub.rbacrolebindings.delete",
      "gkehub.rbacrolebindings.get",
      "gkehub.rbacrolebindings.list",
      "gkehub.rbacrolebindings.update",
      "gkehub.scopes.create",
      "gkehub.scopes.delete",
      "gkehub.scopes.get",
      "gkehub.scopes.getIamPolicy",
      "gkehub.scopes.list",
      "gkehub.scopes.setIamPolicy",
      "gkehub.scopes.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gkehub.connect",
    "title": "GKE Connect Agent",
    "description": "Ability to set up GKE Connect between external clusters and Google.",
    "includedPermissions": [
      "gkehub.endpoints.connect"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gkehub.editor",
    "title": "Fleet Editor (formerly GKE Hub Editor)",
    "description": "Edit access to Fleet resources.",
    "includedPermissions": [
      "gkehub.features.create",
      "gkehub.features.delete",
      "gkehub.features.get",
      "gkehub.features.getIamPolicy",
      "gkehub.features.list",
      "gkehub.features.update",
      "gkehub.fleet.create",
      "gkehub.fleet.delete",
      "gkehub.fleet.get",
      "gkehub.fleet.update",
      "gkehub.locations.get",
      "gkehub.locations.list",
      "gkehub.membershipbindings.create",
      "gkehub.membershipbindings.delete",
      "gkehub.membershipbindings.get",
      "gkehub.membershipbindings.list",
      "gkehub.membershipbindings.update",
      "gkehub.memberships.create",
      "gkehub.memberships.delete",
      "gkehub.memberships.generateConnectManifest",
      "gkehub.memberships.get",
      "gkehub.memberships.getIamPolicy",
      "gkehub.memberships.list",
      "gkehub.memberships.update",
      "gkehub.namespaces.create",
      "gkehub.namespaces.delete",
      "gkehub.namespaces.get",
      "gkehub.namespaces.list",
      "gkehub.namespaces.update",
      "gkehub.operations.cancel",
      "gkehub.operations.delete",
      "gkehub.operations.get",
      "gkehub.operations.list",
      "gkehub.rbacrolebindings.create",
      "gkehub.rbacrolebindings.delete",
      "gkehub.rbacrolebindings.get",
      "gkehub.rbacrolebindings.list",
      "gkehub.rbacrolebindings.update",
      "gkehub.scopes.create",
      "gkehub.scopes.delete",
      "gkehub.scopes.get",
      "gkehub.scopes.getIamPolicy",
      "gkehub.scopes.list",
      "gkehub.scopes.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gkehub.gatewayAdmin",
    "title": "Connect Gateway Admin",
    "description": "Full access to Connect Gateway.",
    "includedPermissions": [
      "gkehub.gateway.delete",
      "gkehub.gateway.get",
      "gkehub.gateway.getIamPolicy",
      "gkehub.gateway.patch",
      "gkehub.gateway.post",
      "gkehub.gateway.put",
      "gkehub.gateway.setIamPolicy",
      "serviceusage.services.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gkehub.gatewayEditor",
    "title": "Connect Gateway Editor",
    "description": "Edit access to Connect Gateway.",
    "includedPermissions": [
      "gkehub.gateway.delete",
      "gkehub.gateway.get",
      "gkehub.gateway.patch",
      "gkehub.gateway.post",
      "gkehub.gateway.put",
      "serviceusage.services.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gkehub.gatewayReader",
    "title": "Connect Gateway Reader",
    "description": "Read-only access to Connect Gateway.",
    "includedPermissions": [
      "gkehub.gateway.get",
      "serviceusage.services.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gkehub.serviceAgent",
    "title": "GKE Hub Service Agent",
    "description": "Gives the GKE Hub service agent access to Cloud Platform resources.",
    "includedPermissions": [
      "container.clusterRoleBindings.create",
      "container.clusterRoleBindings.delete",
      "container.clusterRoleBindings.get",
      "container.clusterRoleBindings.list",
      "container.clusterRoleBindings.update",
      "container.clusterRoles.bind",
      "container.clusterRoles.create",
      "container.clusterRoles.delete",
      "container.clusterRoles.escalate",
      "container.clusterRoles.get",
      "container.clusterRoles.list",
      "container.clusterRoles.update",
      "container.clusters.get",
      "container.clusters.update",
      "container.customResourceDefinitions.create",
      "container.customResourceDefinitions.delete",
      "container.customResourceDefinitions.get",
      "container.customResourceDefinitions.list",
      "container.customResourceDefinitions.update",
      "container.namespaces.get",
      "container.operations.get",
      "container.thirdPartyObjects.create",
      "container.thirdPartyObjects.delete",
      "container.thirdPartyObjects.get",
      "container.thirdPartyObjects.list",
      "container.thirdPartyObjects.update",
      "gkehub.features.create",
      "gkehub.features.get",
      "gkehub.features.list",
      "gkehub.fleet.create",
      "gkehub.fleet.get",
      "gkehub.locations.get",
      "gkehub.locations.list",
      "gkehub.memberships.create",
      "gkehub.memberships.generateConnectManifest",
      "gkehub.memberships.get",
      "gkehub.memberships.list",
      "gkehub.operations.get",
      "gkemulticloud.awsClusters.get",
      "gkemulticloud.azureClusters.get",
      "gkeonprem.bareMetalClusters.get",
      "gkeonprem.vmwareClusters.get",
      "logging.buckets.create",
      "logging.buckets.get",
      "logging.buckets.list",
      "logging.buckets.update",
      "logging.exclusions.create",
      "logging.exclusions.delete",
      "logging.exclusions.get",
      "logging.exclusions.list",
      "logging.exclusions.update",
      "logging.sinks.create",
      "logging.sinks.delete",
      "logging.sinks.get",
      "logging.sinks.list",
      "logging.sinks.update",
      "logging.views.create",
      "logging.views.get",
      "logging.views.list",
      "logging.views.update",
      "monitoring.metricsScopes.link",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gkehub.viewer",
    "title": "Fleet Viewer (formerly GKE Hub Viewer)",
    "description": "Read-only access to Fleets and related resources.",
    "includedPermissions": [
      "gkehub.features.get",
      "gkehub.features.getIamPolicy",
      "gkehub.features.list",
      "gkehub.fleet.get",
      "gkehub.locations.get",
      "gkehub.locations.list",
      "gkehub.membershipbindings.get",
      "gkehub.membershipbindings.list",
      "gkehub.memberships.generateConnectManifest",
      "gkehub.memberships.get",
      "gkehub.memberships.getIamPolicy",
      "gkehub.memberships.list",
      "gkehub.namespaces.get",
      "gkehub.namespaces.list",
      "gkehub.operations.get",
      "gkehub.operations.list",
      "gkehub.rbacrolebindings.get",
      "gkehub.rbacrolebindings.list",
      "gkehub.scopes.get",
      "gkehub.scopes.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gkemulticloud.admin",
    "title": "Anthos Multi-cloud Admin",
    "description": "Admin access to Anthos Multi-cloud resources.",
    "includedPermissions": [
      "gkemulticloud.attachedClusters.create",
      "gkemulticloud.attachedClusters.delete",
      "gkemulticloud.attachedClusters.generateInstallManifest",
      "gkemulticloud.attachedClusters.get",
      "gkemulticloud.attachedClusters.import",
      "gkemulticloud.attachedClusters.list",
      "gkemulticloud.attachedClusters.update",
      "gkemulticloud.attachedServerConfigs.get",
      "gkemulticloud.awsClusters.create",
      "gkemulticloud.awsClusters.delete",
      "gkemulticloud.awsClusters.generateAccessToken",
      "gkemulticloud.awsClusters.get",
      "gkemulticloud.awsClusters.getAdminKubeconfig",
      "gkemulticloud.awsClusters.list",
      "gkemulticloud.awsClusters.update",
      "gkemulticloud.awsNodePools.create",
      "gkemulticloud.awsNodePools.delete",
      "gkemulticloud.awsNodePools.get",
      "gkemulticloud.awsNodePools.list",
      "gkemulticloud.awsNodePools.update",
      "gkemulticloud.awsServerConfigs.get",
      "gkemulticloud.azureClients.create",
      "gkemulticloud.azureClients.delete",
      "gkemulticloud.azureClients.get",
      "gkemulticloud.azureClients.list",
      "gkemulticloud.azureClusters.create",
      "gkemulticloud.azureClusters.delete",
      "gkemulticloud.azureClusters.generateAccessToken",
      "gkemulticloud.azureClusters.get",
      "gkemulticloud.azureClusters.getAdminKubeconfig",
      "gkemulticloud.azureClusters.list",
      "gkemulticloud.azureClusters.update",
      "gkemulticloud.azureNodePools.create",
      "gkemulticloud.azureNodePools.delete",
      "gkemulticloud.azureNodePools.get",
      "gkemulticloud.azureNodePools.list",
      "gkemulticloud.azureNodePools.update",
      "gkemulticloud.azureServerConfigs.get",
      "gkemulticloud.operations.cancel",
      "gkemulticloud.operations.delete",
      "gkemulticloud.operations.get",
      "gkemulticloud.operations.list",
      "gkemulticloud.operations.wait",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gkemulticloud.serviceAgent",
    "title": "Anthos Multi-Cloud Service Agent",
    "description": "Grants the Anthos Multi-Cloud Service Account access to manage resources.",
    "includedPermissions": [
      "gkehub.features.create",
      "gkehub.features.delete",
      "gkehub.features.get",
      "gkehub.features.getIamPolicy",
      "gkehub.features.list",
      "gkehub.features.setIamPolicy",
      "gkehub.features.update",
      "gkehub.fleet.create",
      "gkehub.fleet.delete",
      "gkehub.fleet.get",
      "gkehub.fleet.update",
      "gkehub.locations.get",
      "gkehub.locations.list",
      "gkehub.membershipbindings.create",
      "gkehub.membershipbindings.delete",
      "gkehub.membershipbindings.get",
      "gkehub.membershipbindings.list",
      "gkehub.membershipbindings.update",
      "gkehub.memberships.create",
      "gkehub.memberships.delete",
      "gkehub.memberships.generateConnectManifest",
      "gkehub.memberships.get",
      "gkehub.memberships.getIamPolicy",
      "gkehub.memberships.list",
      "gkehub.memberships.setIamPolicy",
      "gkehub.memberships.update",
      "gkehub.namespaces.create",
      "gkehub.namespaces.delete",
      "gkehub.namespaces.get",
      "gkehub.namespaces.list",
      "gkehub.namespaces.update",
      "gkehub.operations.cancel",
      "gkehub.operations.delete",
      "gkehub.operations.get",
      "gkehub.operations.list",
      "gkehub.rbacrolebindings.create",
      "gkehub.rbacrolebindings.delete",
      "gkehub.rbacrolebindings.get",
      "gkehub.rbacrolebindings.list",
      "gkehub.rbacrolebindings.update",
      "gkehub.scopes.create",
      "gkehub.scopes.delete",
      "gkehub.scopes.get",
      "gkehub.scopes.getIamPolicy",
      "gkehub.scopes.list",
      "gkehub.scopes.update",
      "gkemulticloud.awsClusters.delete",
      "gkemulticloud.awsNodePools.delete",
      "gkemulticloud.azureClients.delete",
      "gkemulticloud.azureClusters.delete",
      "gkemulticloud.azureNodePools.delete",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gkemulticloud.telemetryWriter",
    "title": "Anthos Multi-cloud Telemetry Writer",
    "description": "Grant access to write cluster telemetry data such as logs, metrics, and resource metadata.",
    "includedPermissions": [
      "logging.logEntries.create",
      "logging.logEntries.route",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.timeSeries.create",
      "opsconfigmonitoring.resourceMetadata.write"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gkemulticloud.viewer",
    "title": "Anthos Multi-cloud Viewer",
    "description": "Viewer access to Anthos Multi-cloud resources.",
    "includedPermissions": [
      "gkemulticloud.attachedClusters.generateInstallManifest",
      "gkemulticloud.attachedClusters.get",
      "gkemulticloud.attachedClusters.list",
      "gkemulticloud.attachedServerConfigs.get",
      "gkemulticloud.awsClusters.generateAccessToken",
      "gkemulticloud.awsClusters.get",
      "gkemulticloud.awsClusters.list",
      "gkemulticloud.awsNodePools.get",
      "gkemulticloud.awsNodePools.list",
      "gkemulticloud.awsServerConfigs.get",
      "gkemulticloud.azureClients.get",
      "gkemulticloud.azureClients.list",
      "gkemulticloud.azureClusters.generateAccessToken",
      "gkemulticloud.azureClusters.get",
      "gkemulticloud.azureClusters.list",
      "gkemulticloud.azureNodePools.get",
      "gkemulticloud.azureNodePools.list",
      "gkemulticloud.azureServerConfigs.get",
      "gkemulticloud.operations.get",
      "gkemulticloud.operations.list",
      "gkemulticloud.operations.wait",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gkeonprem.admin",
    "title": "GKE on-prem Admin",
    "description": "Full access to GKE on-prem all resources.",
    "includedPermissions": [
      "gkeonprem.bareMetalAdminClusters.connect",
      "gkeonprem.bareMetalAdminClusters.create",
      "gkeonprem.bareMetalAdminClusters.enroll",
      "gkeonprem.bareMetalAdminClusters.get",
      "gkeonprem.bareMetalAdminClusters.getIamPolicy",
      "gkeonprem.bareMetalAdminClusters.list",
      "gkeonprem.bareMetalAdminClusters.queryVersionConfig",
      "gkeonprem.bareMetalAdminClusters.setIamPolicy",
      "gkeonprem.bareMetalAdminClusters.unenroll",
      "gkeonprem.bareMetalAdminClusters.update",
      "gkeonprem.bareMetalClusters.create",
      "gkeonprem.bareMetalClusters.delete",
      "gkeonprem.bareMetalClusters.enroll",
      "gkeonprem.bareMetalClusters.get",
      "gkeonprem.bareMetalClusters.getIamPolicy",
      "gkeonprem.bareMetalClusters.list",
      "gkeonprem.bareMetalClusters.queryVersionConfig",
      "gkeonprem.bareMetalClusters.setIamPolicy",
      "gkeonprem.bareMetalClusters.unenroll",
      "gkeonprem.bareMetalClusters.update",
      "gkeonprem.bareMetalNodePools.create",
      "gkeonprem.bareMetalNodePools.delete",
      "gkeonprem.bareMetalNodePools.enroll",
      "gkeonprem.bareMetalNodePools.get",
      "gkeonprem.bareMetalNodePools.getIamPolicy",
      "gkeonprem.bareMetalNodePools.list",
      "gkeonprem.bareMetalNodePools.setIamPolicy",
      "gkeonprem.bareMetalNodePools.unenroll",
      "gkeonprem.bareMetalNodePools.update",
      "gkeonprem.locations.get",
      "gkeonprem.locations.list",
      "gkeonprem.operations.cancel",
      "gkeonprem.operations.delete",
      "gkeonprem.operations.get",
      "gkeonprem.operations.list",
      "gkeonprem.vmwareAdminClusters.connect",
      "gkeonprem.vmwareAdminClusters.enroll",
      "gkeonprem.vmwareAdminClusters.get",
      "gkeonprem.vmwareAdminClusters.getIamPolicy",
      "gkeonprem.vmwareAdminClusters.list",
      "gkeonprem.vmwareAdminClusters.setIamPolicy",
      "gkeonprem.vmwareAdminClusters.unenroll",
      "gkeonprem.vmwareAdminClusters.update",
      "gkeonprem.vmwareClusters.create",
      "gkeonprem.vmwareClusters.delete",
      "gkeonprem.vmwareClusters.enroll",
      "gkeonprem.vmwareClusters.get",
      "gkeonprem.vmwareClusters.getIamPolicy",
      "gkeonprem.vmwareClusters.list",
      "gkeonprem.vmwareClusters.queryVersionConfig",
      "gkeonprem.vmwareClusters.setIamPolicy",
      "gkeonprem.vmwareClusters.unenroll",
      "gkeonprem.vmwareClusters.update",
      "gkeonprem.vmwareNodePools.create",
      "gkeonprem.vmwareNodePools.delete",
      "gkeonprem.vmwareNodePools.enroll",
      "gkeonprem.vmwareNodePools.get",
      "gkeonprem.vmwareNodePools.getIamPolicy",
      "gkeonprem.vmwareNodePools.list",
      "gkeonprem.vmwareNodePools.setIamPolicy",
      "gkeonprem.vmwareNodePools.unenroll",
      "gkeonprem.vmwareNodePools.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gkeonprem.serviceAgent",
    "title": "GKE On-Prem Service Agent",
    "description": "Gives the GKE On-Prem service agent access to Cloud Platform resources.",
    "includedPermissions": [
      "gkehub.memberships.delete",
      "gkehub.memberships.get",
      "gkehub.memberships.update",
      "gkeonprem.bareMetalAdminClusters.connect",
      "gkeonprem.bareMetalAdminClusters.enroll",
      "gkeonprem.bareMetalAdminClusters.get",
      "gkeonprem.bareMetalAdminClusters.unenroll",
      "gkeonprem.bareMetalClusters.enroll",
      "gkeonprem.bareMetalClusters.get",
      "gkeonprem.bareMetalClusters.unenroll",
      "gkeonprem.bareMetalNodePools.enroll",
      "gkeonprem.bareMetalNodePools.get",
      "gkeonprem.bareMetalNodePools.unenroll",
      "gkeonprem.operations.get",
      "gkeonprem.operations.list",
      "gkeonprem.vmwareAdminClusters.connect",
      "gkeonprem.vmwareAdminClusters.enroll",
      "gkeonprem.vmwareAdminClusters.get",
      "gkeonprem.vmwareAdminClusters.unenroll",
      "gkeonprem.vmwareClusters.enroll",
      "gkeonprem.vmwareClusters.get",
      "gkeonprem.vmwareClusters.unenroll",
      "gkeonprem.vmwareNodePools.enroll",
      "gkeonprem.vmwareNodePools.get",
      "gkeonprem.vmwareNodePools.unenroll"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gkeonprem.viewer",
    "title": "GKE on-prem Viewer",
    "description": "Read-only access to GKE on-prem all resources.",
    "includedPermissions": [
      "gkeonprem.bareMetalAdminClusters.connect",
      "gkeonprem.bareMetalAdminClusters.get",
      "gkeonprem.bareMetalAdminClusters.getIamPolicy",
      "gkeonprem.bareMetalAdminClusters.list",
      "gkeonprem.bareMetalAdminClusters.queryVersionConfig",
      "gkeonprem.bareMetalClusters.get",
      "gkeonprem.bareMetalClusters.getIamPolicy",
      "gkeonprem.bareMetalClusters.list",
      "gkeonprem.bareMetalClusters.queryVersionConfig",
      "gkeonprem.bareMetalNodePools.get",
      "gkeonprem.bareMetalNodePools.getIamPolicy",
      "gkeonprem.bareMetalNodePools.list",
      "gkeonprem.locations.get",
      "gkeonprem.locations.list",
      "gkeonprem.operations.get",
      "gkeonprem.operations.list",
      "gkeonprem.vmwareAdminClusters.connect",
      "gkeonprem.vmwareAdminClusters.get",
      "gkeonprem.vmwareAdminClusters.getIamPolicy",
      "gkeonprem.vmwareAdminClusters.list",
      "gkeonprem.vmwareClusters.get",
      "gkeonprem.vmwareClusters.getIamPolicy",
      "gkeonprem.vmwareClusters.list",
      "gkeonprem.vmwareClusters.queryVersionConfig",
      "gkeonprem.vmwareNodePools.get",
      "gkeonprem.vmwareNodePools.getIamPolicy",
      "gkeonprem.vmwareNodePools.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gsuiteaddons.developer",
    "title": "Google Workspace Add-ons Developer",
    "description": "Full access to Google Workspace Add-ons resources",
    "includedPermissions": [
      "gsuiteaddons.authorizations.get",
      "gsuiteaddons.deployments.create",
      "gsuiteaddons.deployments.delete",
      "gsuiteaddons.deployments.execute",
      "gsuiteaddons.deployments.get",
      "gsuiteaddons.deployments.install",
      "gsuiteaddons.deployments.installStatus",
      "gsuiteaddons.deployments.list",
      "gsuiteaddons.deployments.uninstall",
      "gsuiteaddons.deployments.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gsuiteaddons.reader",
    "title": "Google Workspace Add-ons Reader",
    "description": "Read-only access to Google Workspace Add-ons resources",
    "includedPermissions": [
      "gsuiteaddons.authorizations.get",
      "gsuiteaddons.deployments.get",
      "gsuiteaddons.deployments.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/gsuiteaddons.tester",
    "title": "Google Workspace Add-ons Tester",
    "description": "Testing execution access to Google Workspace Add-ons resources",
    "includedPermissions": [
      "gsuiteaddons.deployments.execute",
      "gsuiteaddons.deployments.install",
      "gsuiteaddons.deployments.installStatus",
      "gsuiteaddons.deployments.uninstall",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.annotationEditor",
    "title": "Healthcare Annotation Editor",
    "description": "Create, delete, update, read and list annotations.",
    "includedPermissions": [
      "healthcare.annotationStores.get",
      "healthcare.annotationStores.list",
      "healthcare.annotations.create",
      "healthcare.annotations.delete",
      "healthcare.annotations.get",
      "healthcare.annotations.list",
      "healthcare.annotations.update",
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.annotationReader",
    "title": "Healthcare Annotation Reader",
    "description": "Read and list annotations in an Annotation store.",
    "includedPermissions": [
      "healthcare.annotationStores.get",
      "healthcare.annotationStores.list",
      "healthcare.annotations.get",
      "healthcare.annotations.list",
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.annotationStoreAdmin",
    "title": "Healthcare Annotation Administrator",
    "description": "Administer Annotation stores.",
    "includedPermissions": [
      "healthcare.annotationStores.create",
      "healthcare.annotationStores.delete",
      "healthcare.annotationStores.evaluate",
      "healthcare.annotationStores.export",
      "healthcare.annotationStores.get",
      "healthcare.annotationStores.getIamPolicy",
      "healthcare.annotationStores.import",
      "healthcare.annotationStores.list",
      "healthcare.annotationStores.setIamPolicy",
      "healthcare.annotationStores.update",
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.annotationStoreViewer",
    "title": "Healthcare Annotation Store Viewer",
    "description": "List Annotation Stores in a dataset.",
    "includedPermissions": [
      "healthcare.annotationStores.get",
      "healthcare.annotationStores.list",
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.attributeDefinitionEditor",
    "title": "Healthcare Attribute Definition Editor",
    "description": "Edit AttributeDefinition objects.",
    "includedPermissions": [
      "healthcare.attributeDefinitions.create",
      "healthcare.attributeDefinitions.delete",
      "healthcare.attributeDefinitions.get",
      "healthcare.attributeDefinitions.list",
      "healthcare.attributeDefinitions.update",
      "healthcare.consentStores.checkDataAccess",
      "healthcare.consentStores.evaluateUserConsents",
      "healthcare.consentStores.get",
      "healthcare.consentStores.list",
      "healthcare.consentStores.queryAccessibleData",
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.attributeDefinitionReader",
    "title": "Healthcare Attribute Definition Reader",
    "description": "Read AttributeDefinition objects in a consent store.",
    "includedPermissions": [
      "healthcare.attributeDefinitions.get",
      "healthcare.attributeDefinitions.list",
      "healthcare.consentStores.checkDataAccess",
      "healthcare.consentStores.evaluateUserConsents",
      "healthcare.consentStores.get",
      "healthcare.consentStores.list",
      "healthcare.consentStores.queryAccessibleData",
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.consentArtifactAdmin",
    "title": "Healthcare Consent Artifact Administrator",
    "description": "Administer ConsentArtifact objects.",
    "includedPermissions": [
      "healthcare.consentArtifacts.create",
      "healthcare.consentArtifacts.delete",
      "healthcare.consentArtifacts.get",
      "healthcare.consentArtifacts.list",
      "healthcare.consentStores.checkDataAccess",
      "healthcare.consentStores.evaluateUserConsents",
      "healthcare.consentStores.get",
      "healthcare.consentStores.list",
      "healthcare.consentStores.queryAccessibleData",
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.consentArtifactEditor",
    "title": "Healthcare Consent Artifact Editor",
    "description": "Edit ConsentArtifact objects.",
    "includedPermissions": [
      "healthcare.consentArtifacts.create",
      "healthcare.consentArtifacts.get",
      "healthcare.consentArtifacts.list",
      "healthcare.consentStores.checkDataAccess",
      "healthcare.consentStores.evaluateUserConsents",
      "healthcare.consentStores.get",
      "healthcare.consentStores.list",
      "healthcare.consentStores.queryAccessibleData",
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.consentArtifactReader",
    "title": "Healthcare Consent Artifact Reader",
    "description": "Read ConsentArtifact objects in a consent store.",
    "includedPermissions": [
      "healthcare.consentArtifacts.get",
      "healthcare.consentArtifacts.list",
      "healthcare.consentStores.checkDataAccess",
      "healthcare.consentStores.evaluateUserConsents",
      "healthcare.consentStores.get",
      "healthcare.consentStores.list",
      "healthcare.consentStores.queryAccessibleData",
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.consentEditor",
    "title": "Healthcare Consent Editor",
    "description": "Edit Consent objects.",
    "includedPermissions": [
      "healthcare.consentStores.checkDataAccess",
      "healthcare.consentStores.evaluateUserConsents",
      "healthcare.consentStores.get",
      "healthcare.consentStores.list",
      "healthcare.consentStores.queryAccessibleData",
      "healthcare.consents.activate",
      "healthcare.consents.create",
      "healthcare.consents.delete",
      "healthcare.consents.get",
      "healthcare.consents.list",
      "healthcare.consents.reject",
      "healthcare.consents.revoke",
      "healthcare.consents.update",
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.consentReader",
    "title": "Healthcare Consent Reader",
    "description": "Read Consent objects in a consent store.",
    "includedPermissions": [
      "healthcare.consentStores.checkDataAccess",
      "healthcare.consentStores.evaluateUserConsents",
      "healthcare.consentStores.get",
      "healthcare.consentStores.list",
      "healthcare.consentStores.queryAccessibleData",
      "healthcare.consents.get",
      "healthcare.consents.list",
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.consentStoreAdmin",
    "title": "Healthcare Consent Store Administrator",
    "description": "Administer Consent stores.",
    "includedPermissions": [
      "healthcare.consentStores.checkDataAccess",
      "healthcare.consentStores.create",
      "healthcare.consentStores.delete",
      "healthcare.consentStores.evaluateUserConsents",
      "healthcare.consentStores.get",
      "healthcare.consentStores.getIamPolicy",
      "healthcare.consentStores.list",
      "healthcare.consentStores.queryAccessibleData",
      "healthcare.consentStores.setIamPolicy",
      "healthcare.consentStores.update",
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.consentStoreViewer",
    "title": "Healthcare Consent Store Viewer",
    "description": "List Consent Stores in a dataset.",
    "includedPermissions": [
      "healthcare.consentStores.checkDataAccess",
      "healthcare.consentStores.evaluateUserConsents",
      "healthcare.consentStores.get",
      "healthcare.consentStores.list",
      "healthcare.consentStores.queryAccessibleData",
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.datasetAdmin",
    "title": "Healthcare Dataset Administrator",
    "description": "Administer Healthcare Datasets.",
    "includedPermissions": [
      "healthcare.datasets.create",
      "healthcare.datasets.deidentify",
      "healthcare.datasets.delete",
      "healthcare.datasets.get",
      "healthcare.datasets.getIamPolicy",
      "healthcare.datasets.list",
      "healthcare.datasets.setIamPolicy",
      "healthcare.datasets.update",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.cancel",
      "healthcare.operations.get",
      "healthcare.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.datasetViewer",
    "title": "Healthcare Dataset Viewer",
    "description": "List the Healthcare Datasets in a project.",
    "includedPermissions": [
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.dicomEditor",
    "title": "Healthcare DICOM Editor",
    "description": "Edit DICOM images individually and in bulk.",
    "includedPermissions": [
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.dicomStores.dicomWebDelete",
      "healthcare.dicomStores.dicomWebRead",
      "healthcare.dicomStores.dicomWebWrite",
      "healthcare.dicomStores.export",
      "healthcare.dicomStores.get",
      "healthcare.dicomStores.import",
      "healthcare.dicomStores.list",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.cancel",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.dicomStoreAdmin",
    "title": "Healthcare DICOM Store Administrator",
    "description": "Administer DICOM stores.",
    "includedPermissions": [
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.dicomStores.create",
      "healthcare.dicomStores.deidentify",
      "healthcare.dicomStores.delete",
      "healthcare.dicomStores.dicomWebDelete",
      "healthcare.dicomStores.get",
      "healthcare.dicomStores.getIamPolicy",
      "healthcare.dicomStores.list",
      "healthcare.dicomStores.setIamPolicy",
      "healthcare.dicomStores.update",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.cancel",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.dicomStoreViewer",
    "title": "Healthcare DICOM Store Viewer",
    "description": "List DICOM Stores in a dataset.",
    "includedPermissions": [
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.dicomStores.get",
      "healthcare.dicomStores.list",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.dicomViewer",
    "title": "Healthcare DICOM Viewer",
    "description": "Retrieve DICOM images from a DICOM store.",
    "includedPermissions": [
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.dicomStores.dicomWebRead",
      "healthcare.dicomStores.export",
      "healthcare.dicomStores.get",
      "healthcare.dicomStores.list",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.fhirResourceEditor",
    "title": "Healthcare FHIR Resource Editor",
    "description": "Create, delete, update, read and search FHIR resources.",
    "includedPermissions": [
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.fhirResources.create",
      "healthcare.fhirResources.delete",
      "healthcare.fhirResources.get",
      "healthcare.fhirResources.patch",
      "healthcare.fhirResources.translateConceptMap",
      "healthcare.fhirResources.update",
      "healthcare.fhirStores.executeBundle",
      "healthcare.fhirStores.get",
      "healthcare.fhirStores.list",
      "healthcare.fhirStores.searchResources",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.cancel",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.fhirResourceReader",
    "title": "Healthcare FHIR Resource Reader",
    "description": "Read and search FHIR resources.",
    "includedPermissions": [
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.fhirResources.get",
      "healthcare.fhirResources.translateConceptMap",
      "healthcare.fhirStores.executeBundle",
      "healthcare.fhirStores.get",
      "healthcare.fhirStores.list",
      "healthcare.fhirStores.searchResources",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.fhirStoreAdmin",
    "title": "Healthcare FHIR Store Administrator",
    "description": "Administer FHIR resource stores.",
    "includedPermissions": [
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.fhirResources.purge",
      "healthcare.fhirStores.configureSearch",
      "healthcare.fhirStores.create",
      "healthcare.fhirStores.deidentify",
      "healthcare.fhirStores.delete",
      "healthcare.fhirStores.export",
      "healthcare.fhirStores.get",
      "healthcare.fhirStores.getIamPolicy",
      "healthcare.fhirStores.import",
      "healthcare.fhirStores.list",
      "healthcare.fhirStores.setIamPolicy",
      "healthcare.fhirStores.update",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.cancel",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.fhirStoreViewer",
    "title": "Healthcare FHIR Store Viewer",
    "description": "List FHIR Stores in a dataset.",
    "includedPermissions": [
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.fhirStores.get",
      "healthcare.fhirStores.list",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.hl7V2Consumer",
    "title": "Healthcare HL7v2 Message Consumer",
    "description": "List and read HL7v2 messages, update message labels, and publish new messages.",
    "includedPermissions": [
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.hl7V2Messages.create",
      "healthcare.hl7V2Messages.get",
      "healthcare.hl7V2Messages.list",
      "healthcare.hl7V2Messages.update",
      "healthcare.hl7V2Stores.get",
      "healthcare.hl7V2Stores.list",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.hl7V2Editor",
    "title": "Healthcare HL7v2 Message Editor",
    "description": "Read, write, and delete access to HL7v2 messages.",
    "includedPermissions": [
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.hl7V2Messages.create",
      "healthcare.hl7V2Messages.delete",
      "healthcare.hl7V2Messages.get",
      "healthcare.hl7V2Messages.ingest",
      "healthcare.hl7V2Messages.list",
      "healthcare.hl7V2Messages.update",
      "healthcare.hl7V2Stores.get",
      "healthcare.hl7V2Stores.list",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.cancel",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.hl7V2Ingest",
    "title": "Healthcare HL7v2 Message Ingest",
    "description": "Ingest HL7v2 messages received from a source network.",
    "includedPermissions": [
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.hl7V2Messages.ingest",
      "healthcare.hl7V2Stores.get",
      "healthcare.hl7V2Stores.list",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.hl7V2StoreAdmin",
    "title": "Healthcare HL7v2 Store Administrator",
    "description": "Administer HL7v2 Stores.",
    "includedPermissions": [
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.hl7V2Stores.create",
      "healthcare.hl7V2Stores.delete",
      "healthcare.hl7V2Stores.get",
      "healthcare.hl7V2Stores.getIamPolicy",
      "healthcare.hl7V2Stores.import",
      "healthcare.hl7V2Stores.list",
      "healthcare.hl7V2Stores.setIamPolicy",
      "healthcare.hl7V2Stores.update",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.cancel",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.hl7V2StoreViewer",
    "title": "Healthcare HL7v2 Store Viewer",
    "description": "View HL7v2 Stores in a dataset.",
    "includedPermissions": [
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.hl7V2Stores.get",
      "healthcare.hl7V2Stores.list",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.nlpServiceViewer",
    "title": "Healthcare NLP Service Viewer",
    "description": "Extract and analyze medical entities from a given text.",
    "includedPermissions": [
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.nlpservice.analyzeEntities",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.serviceAgent",
    "title": "Healthcare Service Agent",
    "description": "Gives the Healthcare Service Account access to networks,Kubernetes engine, and pubsub resources.",
    "includedPermissions": [
      "cloudnotifications.activities.list",
      "monitoring.alertPolicies.get",
      "monitoring.alertPolicies.list",
      "monitoring.dashboards.get",
      "monitoring.dashboards.list",
      "monitoring.groups.get",
      "monitoring.groups.list",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.notificationChannelDescriptors.get",
      "monitoring.notificationChannelDescriptors.list",
      "monitoring.notificationChannels.get",
      "monitoring.notificationChannels.list",
      "monitoring.publicWidgets.get",
      "monitoring.publicWidgets.list",
      "monitoring.services.get",
      "monitoring.services.list",
      "monitoring.slos.get",
      "monitoring.slos.list",
      "monitoring.snoozes.get",
      "monitoring.snoozes.list",
      "monitoring.timeSeries.create",
      "monitoring.timeSeries.list",
      "monitoring.uptimeCheckConfigs.get",
      "monitoring.uptimeCheckConfigs.list",
      "opsconfigmonitoring.resourceMetadata.list",
      "pubsub.snapshots.seek",
      "pubsub.subscriptions.consume",
      "pubsub.topics.attachSubscription",
      "pubsub.topics.publish",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "stackdriver.projects.get",
      "stackdriver.resourceMetadata.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.userDataMappingEditor",
    "title": "Healthcare User Data Mapping Editor",
    "description": "Edit UserDataMapping objects.",
    "includedPermissions": [
      "healthcare.consentStores.checkDataAccess",
      "healthcare.consentStores.evaluateUserConsents",
      "healthcare.consentStores.get",
      "healthcare.consentStores.list",
      "healthcare.consentStores.queryAccessibleData",
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.get",
      "healthcare.userDataMappings.archive",
      "healthcare.userDataMappings.create",
      "healthcare.userDataMappings.delete",
      "healthcare.userDataMappings.get",
      "healthcare.userDataMappings.list",
      "healthcare.userDataMappings.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/healthcare.userDataMappingReader",
    "title": "Healthcare User Data Mapping Reader",
    "description": "Read UserDataMapping objects in a consent store.",
    "includedPermissions": [
      "healthcare.consentStores.checkDataAccess",
      "healthcare.consentStores.evaluateUserConsents",
      "healthcare.consentStores.get",
      "healthcare.consentStores.list",
      "healthcare.consentStores.queryAccessibleData",
      "healthcare.datasets.get",
      "healthcare.datasets.list",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.operations.get",
      "healthcare.userDataMappings.get",
      "healthcare.userDataMappings.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/iam.denyAdmin",
    "title": "Deny Admin",
    "description": "Deny admin role, with permissions to read and modify deny policies",
    "includedPermissions": [
      "iam.denypolicies.create",
      "iam.denypolicies.delete",
      "iam.denypolicies.get",
      "iam.denypolicies.list",
      "iam.denypolicies.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/iam.denyReviewer",
    "title": "Deny Reviewer",
    "description": "Deny Reviewer role, with permissions to read deny policies",
    "includedPermissions": [
      "iam.denypolicies.get",
      "iam.denypolicies.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/iam.organizationRoleAdmin",
    "title": "Organization Role Administrator",
    "description": "Access to administer all custom roles in the organization and the projects below it.",
    "includedPermissions": [
      "iam.roles.create",
      "iam.roles.delete",
      "iam.roles.get",
      "iam.roles.list",
      "iam.roles.undelete",
      "iam.roles.update",
      "resourcemanager.organizations.get",
      "resourcemanager.organizations.getIamPolicy",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/iam.organizationRoleViewer",
    "title": "Organization Role Viewer",
    "description": "Read access to all custom roles in the organization and the projects below it.",
    "includedPermissions": [
      "iam.roles.get",
      "iam.roles.list",
      "resourcemanager.organizations.get",
      "resourcemanager.organizations.getIamPolicy",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/iam.roleAdmin",
    "title": "Role Administrator",
    "description": "Access to administer all custom roles in the project.",
    "includedPermissions": [
      "iam.roles.create",
      "iam.roles.delete",
      "iam.roles.get",
      "iam.roles.list",
      "iam.roles.undelete",
      "iam.roles.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/iam.roleViewer",
    "title": "Role Viewer",
    "description": "Read access to all custom roles in the project.",
    "includedPermissions": [
      "iam.roles.get",
      "iam.roles.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/iam.securityAdmin",
    "title": "Security Admin",
    "description": "Security admin role, with permissions to get and set any IAM policy.",
    "includedPermissions": [
      "accessapproval.requests.list",
      "accesscontextmanager.accessLevels.list",
      "accesscontextmanager.accessPolicies.getIamPolicy",
      "accesscontextmanager.accessPolicies.list",
      "accesscontextmanager.accessPolicies.setIamPolicy",
      "accesscontextmanager.accessZones.list",
      "accesscontextmanager.authorizedOrgsDescs.list",
      "accesscontextmanager.gcpUserAccessBindings.list",
      "accesscontextmanager.policies.getIamPolicy",
      "accesscontextmanager.policies.list",
      "accesscontextmanager.policies.setIamPolicy",
      "accesscontextmanager.servicePerimeters.list",
      "actions.agentVersions.list",
      "advisorynotifications.notifications.get",
      "advisorynotifications.notifications.list",
      "aiplatform.annotationSpecs.list",
      "aiplatform.annotations.list",
      "aiplatform.artifacts.list",
      "aiplatform.batchPredictionJobs.list",
      "aiplatform.contexts.list",
      "aiplatform.customJobs.list",
      "aiplatform.dataItems.list",
      "aiplatform.dataLabelingJobs.list",
      "aiplatform.datasets.list",
      "aiplatform.deploymentResourcePools.list",
      "aiplatform.edgeDeploymentJobs.list",
      "aiplatform.edgeDevices.list",
      "aiplatform.endpoints.list",
      "aiplatform.entityTypes.getIamPolicy",
      "aiplatform.entityTypes.list",
      "aiplatform.entityTypes.setIamPolicy",
      "aiplatform.executions.list",
      "aiplatform.featureOnlineStores.list",
      "aiplatform.featureViewSyncs.list",
      "aiplatform.featureViews.list",
      "aiplatform.features.list",
      "aiplatform.featurestores.getIamPolicy",
      "aiplatform.featurestores.list",
      "aiplatform.featurestores.setIamPolicy",
      "aiplatform.humanInTheLoops.list",
      "aiplatform.hyperparameterTuningJobs.list",
      "aiplatform.indexEndpoints.list",
      "aiplatform.indexes.list",
      "aiplatform.locations.list",
      "aiplatform.metadataSchemas.list",
      "aiplatform.metadataStores.list",
      "aiplatform.modelDeploymentMonitoringJobs.list",
      "aiplatform.modelEvaluationSlices.list",
      "aiplatform.modelEvaluations.list",
      "aiplatform.models.list",
      "aiplatform.nasJobs.list",
      "aiplatform.nasTrialDetails.list",
      "aiplatform.operations.list",
      "aiplatform.persistentResources.list",
      "aiplatform.pipelineJobs.list",
      "aiplatform.schedules.list",
      "aiplatform.specialistPools.list",
      "aiplatform.studies.list",
      "aiplatform.tensorboardExperiments.list",
      "aiplatform.tensorboardRuns.list",
      "aiplatform.tensorboardTimeSeries.list",
      "aiplatform.tensorboards.list",
      "aiplatform.trainingPipelines.list",
      "aiplatform.trials.list",
      "alloydb.backups.list",
      "alloydb.clusters.list",
      "alloydb.instances.list",
      "alloydb.locations.list",
      "alloydb.operations.list",
      "alloydb.supportedDatabaseFlags.list",
      "alloydb.users.list",
      "analyticshub.dataExchanges.getIamPolicy",
      "analyticshub.dataExchanges.list",
      "analyticshub.dataExchanges.setIamPolicy",
      "analyticshub.listings.getIamPolicy",
      "analyticshub.listings.list",
      "analyticshub.listings.setIamPolicy",
      "analyticshub.subscriptions.list",
      "apigateway.apiconfigs.getIamPolicy",
      "apigateway.apiconfigs.list",
      "apigateway.apiconfigs.setIamPolicy",
      "apigateway.apis.getIamPolicy",
      "apigateway.apis.list",
      "apigateway.apis.setIamPolicy",
      "apigateway.gateways.getIamPolicy",
      "apigateway.gateways.list",
      "apigateway.gateways.setIamPolicy",
      "apigateway.locations.list",
      "apigateway.operations.list",
      "apigee.apiproductattributes.list",
      "apigee.apiproducts.list",
      "apigee.appgroupapps.list",
      "apigee.appgroups.list",
      "apigee.apps.list",
      "apigee.archivedeployments.list",
      "apigee.caches.list",
      "apigee.datacollectors.list",
      "apigee.datastores.list",
      "apigee.deployments.list",
      "apigee.developerappattributes.list",
      "apigee.developerapps.list",
      "apigee.developerattributes.list",
      "apigee.developers.list",
      "apigee.developersubscriptions.list",
      "apigee.endpointattachments.list",
      "apigee.envgroupattachments.list",
      "apigee.envgroups.list",
      "apigee.environments.getIamPolicy",
      "apigee.environments.list",
      "apigee.environments.setIamPolicy",
      "apigee.exports.list",
      "apigee.flowhooks.list",
      "apigee.hostqueries.list",
      "apigee.hostsecurityreports.list",
      "apigee.instanceattachments.list",
      "apigee.instances.list",
      "apigee.keystorealiases.list",
      "apigee.keystores.list",
      "apigee.keyvaluemapentries.list",
      "apigee.keyvaluemaps.list",
      "apigee.nataddresses.list",
      "apigee.operations.list",
      "apigee.organizations.list",
      "apigee.portals.list",
      "apigee.proxies.list",
      "apigee.proxyrevisions.list",
      "apigee.queries.list",
      "apigee.rateplans.list",
      "apigee.references.list",
      "apigee.reports.list",
      "apigee.resourcefiles.list",
      "apigee.securityActions.list",
      "apigee.securityIncidents.list",
      "apigee.securityProfiles.list",
      "apigee.securityreports.list",
      "apigee.sharedflowrevisions.list",
      "apigee.sharedflows.list",
      "apigee.targetservers.list",
      "apigee.traceconfigoverrides.list",
      "apigee.tracesessions.list",
      "apigeeconnect.connections.list",
      "apigeeregistry.apis.getIamPolicy",
      "apigeeregistry.apis.list",
      "apigeeregistry.apis.setIamPolicy",
      "apigeeregistry.artifacts.getIamPolicy",
      "apigeeregistry.artifacts.list",
      "apigeeregistry.artifacts.setIamPolicy",
      "apigeeregistry.deployments.list",
      "apigeeregistry.locations.list",
      "apigeeregistry.operations.list",
      "apigeeregistry.specs.getIamPolicy",
      "apigeeregistry.specs.list",
      "apigeeregistry.specs.setIamPolicy",
      "apigeeregistry.versions.getIamPolicy",
      "apigeeregistry.versions.list",
      "apigeeregistry.versions.setIamPolicy",
      "apikeys.keys.list",
      "appengine.instances.list",
      "appengine.memcache.list",
      "appengine.operations.list",
      "appengine.services.list",
      "appengine.versions.list",
      "applianceactivation.rttCommands.list",
      "artifactregistry.dockerimages.list",
      "artifactregistry.files.list",
      "artifactregistry.locations.list",
      "artifactregistry.mavenartifacts.list",
      "artifactregistry.npmpackages.list",
      "artifactregistry.packages.list",
      "artifactregistry.pythonpackages.list",
      "artifactregistry.repositories.getIamPolicy",
      "artifactregistry.repositories.list",
      "artifactregistry.repositories.setIamPolicy",
      "artifactregistry.tags.list",
      "artifactregistry.versions.list",
      "assuredworkloads.operations.list",
      "assuredworkloads.violations.list",
      "assuredworkloads.workload.list",
      "automl.annotationSpecs.list",
      "automl.annotations.list",
      "automl.columnSpecs.list",
      "automl.datasets.getIamPolicy",
      "automl.datasets.list",
      "automl.datasets.setIamPolicy",
      "automl.examples.list",
      "automl.files.list",
      "automl.humanAnnotationTasks.list",
      "automl.locations.getIamPolicy",
      "automl.locations.list",
      "automl.locations.setIamPolicy",
      "automl.modelEvaluations.list",
      "automl.models.getIamPolicy",
      "automl.models.list",
      "automl.models.setIamPolicy",
      "automl.operations.list",
      "automl.tableSpecs.list",
      "automlrecommendations.apiKeys.list",
      "automlrecommendations.catalogItems.list",
      "automlrecommendations.catalogs.list",
      "automlrecommendations.eventStores.list",
      "automlrecommendations.events.list",
      "automlrecommendations.placements.list",
      "automlrecommendations.recommendations.list",
      "autoscaling.sites.getIamPolicy",
      "autoscaling.sites.setIamPolicy",
      "backupdr.locations.list",
      "backupdr.managementServers.getIamPolicy",
      "backupdr.managementServers.list",
      "backupdr.managementServers.setIamPolicy",
      "backupdr.operations.list",
      "baremetalsolution.instancequotas.list",
      "baremetalsolution.instances.list",
      "baremetalsolution.luns.list",
      "baremetalsolution.maintenanceevents.list",
      "baremetalsolution.networkquotas.list",
      "baremetalsolution.networks.list",
      "baremetalsolution.nfsshares.list",
      "baremetalsolution.osimages.list",
      "baremetalsolution.procurements.list",
      "baremetalsolution.skus.list",
      "baremetalsolution.snapshotschedulepolicies.list",
      "baremetalsolution.sshKeys.list",
      "baremetalsolution.storageaggregatepools.list",
      "baremetalsolution.volumequotas.list",
      "baremetalsolution.volumes.list",
      "baremetalsolution.volumesnapshots.list",
      "batch.jobs.list",
      "batch.locations.list",
      "batch.operations.list",
      "batch.tasks.list",
      "beyondcorp.appConnections.getIamPolicy",
      "beyondcorp.appConnections.list",
      "beyondcorp.appConnections.setIamPolicy",
      "beyondcorp.appConnectors.getIamPolicy",
      "beyondcorp.appConnectors.list",
      "beyondcorp.appConnectors.setIamPolicy",
      "beyondcorp.appGateways.getIamPolicy",
      "beyondcorp.appGateways.list",
      "beyondcorp.appGateways.setIamPolicy",
      "beyondcorp.clientConnectorServices.getIamPolicy",
      "beyondcorp.clientConnectorServices.list",
      "beyondcorp.clientConnectorServices.setIamPolicy",
      "beyondcorp.clientGateways.getIamPolicy",
      "beyondcorp.clientGateways.list",
      "beyondcorp.clientGateways.setIamPolicy",
      "beyondcorp.locations.list",
      "beyondcorp.operations.list",
      "beyondcorp.subscriptions.list",
      "biglake.catalogs.list",
      "biglake.databases.list",
      "biglake.locks.list",
      "biglake.tables.list",
      "bigquery.capacityCommitments.list",
      "bigquery.connections.getIamPolicy",
      "bigquery.connections.list",
      "bigquery.connections.setIamPolicy",
      "bigquery.dataPolicies.getIamPolicy",
      "bigquery.dataPolicies.list",
      "bigquery.dataPolicies.setIamPolicy",
      "bigquery.datasets.getIamPolicy",
      "bigquery.datasets.setIamPolicy",
      "bigquery.jobs.list",
      "bigquery.models.list",
      "bigquery.reservationAssignments.list",
      "bigquery.reservations.list",
      "bigquery.routines.list",
      "bigquery.rowAccessPolicies.getIamPolicy",
      "bigquery.rowAccessPolicies.list",
      "bigquery.rowAccessPolicies.setIamPolicy",
      "bigquery.savedqueries.list",
      "bigquery.tables.getIamPolicy",
      "bigquery.tables.list",
      "bigquery.tables.setIamPolicy",
      "bigquerymigration.locations.list",
      "bigquerymigration.subtasks.list",
      "bigquerymigration.workflows.list",
      "bigtable.appProfiles.list",
      "bigtable.backups.getIamPolicy",
      "bigtable.backups.list",
      "bigtable.backups.setIamPolicy",
      "bigtable.clusters.list",
      "bigtable.hotTablets.list",
      "bigtable.instances.getIamPolicy",
      "bigtable.instances.list",
      "bigtable.instances.setIamPolicy",
      "bigtable.keyvisualizer.list",
      "bigtable.locations.list",
      "bigtable.tables.getIamPolicy",
      "bigtable.tables.list",
      "bigtable.tables.setIamPolicy",
      "billing.accounts.getIamPolicy",
      "billing.accounts.list",
      "billing.accounts.setIamPolicy",
      "billing.billingAccountServices.list",
      "billing.billingAccountSkuGroupSkus.list",
      "billing.billingAccountSkuGroups.list",
      "billing.billingAccountSkus.list",
      "billing.budgets.list",
      "billing.credits.list",
      "billing.resourceAssociations.list",
      "billing.subscriptions.list",
      "binaryauthorization.attestors.getIamPolicy",
      "binaryauthorization.attestors.list",
      "binaryauthorization.attestors.setIamPolicy",
      "binaryauthorization.continuousValidationConfig.getIamPolicy",
      "binaryauthorization.continuousValidationConfig.setIamPolicy",
      "binaryauthorization.platformPolicies.list",
      "binaryauthorization.policy.getIamPolicy",
      "binaryauthorization.policy.setIamPolicy",
      "blockchainnodeengine.blockchainNodes.list",
      "blockchainnodeengine.locations.list",
      "blockchainnodeengine.operations.list",
      "carestudio.patients.list",
      "certificatemanager.certissuanceconfigs.list",
      "certificatemanager.certmapentries.getIamPolicy",
      "certificatemanager.certmapentries.list",
      "certificatemanager.certmapentries.setIamPolicy",
      "certificatemanager.certmaps.getIamPolicy",
      "certificatemanager.certmaps.list",
      "certificatemanager.certmaps.setIamPolicy",
      "certificatemanager.certs.getIamPolicy",
      "certificatemanager.certs.list",
      "certificatemanager.certs.setIamPolicy",
      "certificatemanager.dnsauthorizations.getIamPolicy",
      "certificatemanager.dnsauthorizations.list",
      "certificatemanager.dnsauthorizations.setIamPolicy",
      "certificatemanager.locations.list",
      "certificatemanager.operations.list",
      "certificatemanager.trustconfigs.list",
      "chronicle.collectors.list",
      "chronicle.curatedRuleSetCategories.list",
      "chronicle.curatedRuleSetDeployments.list",
      "chronicle.curatedRuleSets.list",
      "chronicle.curatedRules.list",
      "chronicle.dashboards.list",
      "chronicle.extensionValidationReports.list",
      "chronicle.feedSourceTypeSchemas.list",
      "chronicle.feeds.list",
      "chronicle.forwarders.list",
      "chronicle.logTypeSchemas.list",
      "chronicle.operations.list",
      "chronicle.parserExtensions.list",
      "chronicle.parsers.list",
      "chronicle.parsingErrors.list",
      "chronicle.referenceLists.list",
      "chronicle.retrohunts.list",
      "chronicle.ruleDeployments.list",
      "chronicle.ruleExecutionErrors.list",
      "chronicle.rules.list",
      "chronicle.validationErrors.list",
      "clientauthconfig.brands.list",
      "clientauthconfig.clients.list",
      "cloud.locations.list",
      "cloudasset.assets.searchAllResources",
      "cloudasset.feeds.list",
      "cloudasset.savedqueries.list",
      "cloudbuild.builds.list",
      "cloudbuild.connections.getIamPolicy",
      "cloudbuild.connections.list",
      "cloudbuild.connections.setIamPolicy",
      "cloudbuild.integrations.list",
      "cloudbuild.operations.list",
      "cloudbuild.repositories.list",
      "cloudbuild.workerpools.list",
      "cloudcontrolspartner.customers.list",
      "cloudcontrolspartner.violations.list",
      "cloudcontrolspartner.workloads.list",
      "clouddebugger.breakpoints.list",
      "clouddebugger.debuggees.list",
      "clouddeploy.deliveryPipelines.getIamPolicy",
      "clouddeploy.deliveryPipelines.list",
      "clouddeploy.deliveryPipelines.setIamPolicy",
      "clouddeploy.jobRuns.list",
      "clouddeploy.locations.list",
      "clouddeploy.operations.list",
      "clouddeploy.releases.list",
      "clouddeploy.rollouts.list",
      "clouddeploy.targets.getIamPolicy",
      "clouddeploy.targets.list",
      "clouddeploy.targets.setIamPolicy",
      "cloudfunctions.functions.getIamPolicy",
      "cloudfunctions.functions.list",
      "cloudfunctions.functions.setIamPolicy",
      "cloudfunctions.locations.list",
      "cloudfunctions.operations.list",
      "cloudfunctions.runtimes.list",
      "cloudiot.devices.list",
      "cloudiot.registries.getIamPolicy",
      "cloudiot.registries.list",
      "cloudiot.registries.setIamPolicy",
      "cloudjobdiscovery.companies.list",
      "cloudkms.cryptoKeyVersions.list",
      "cloudkms.cryptoKeys.getIamPolicy",
      "cloudkms.cryptoKeys.list",
      "cloudkms.cryptoKeys.setIamPolicy",
      "cloudkms.ekmConfigs.getIamPolicy",
      "cloudkms.ekmConfigs.setIamPolicy",
      "cloudkms.ekmConnections.getIamPolicy",
      "cloudkms.ekmConnections.list",
      "cloudkms.ekmConnections.setIamPolicy",
      "cloudkms.importJobs.getIamPolicy",
      "cloudkms.importJobs.list",
      "cloudkms.importJobs.setIamPolicy",
      "cloudkms.keyRings.getIamPolicy",
      "cloudkms.keyRings.list",
      "cloudkms.keyRings.setIamPolicy",
      "cloudkms.locations.list",
      "cloudnotifications.activities.list",
      "cloudonefs.isiloncloud.com/clusters.list",
      "cloudonefs.isiloncloud.com/fileshares.list",
      "cloudprivatecatalogproducer.associations.list",
      "cloudprivatecatalogproducer.catalogAssociations.list",
      "cloudprivatecatalogproducer.catalogs.getIamPolicy",
      "cloudprivatecatalogproducer.catalogs.list",
      "cloudprivatecatalogproducer.catalogs.setIamPolicy",
      "cloudprivatecatalogproducer.producerCatalogs.getIamPolicy",
      "cloudprivatecatalogproducer.producerCatalogs.list",
      "cloudprivatecatalogproducer.producerCatalogs.setIamPolicy",
      "cloudprivatecatalogproducer.products.getIamPolicy",
      "cloudprivatecatalogproducer.products.list",
      "cloudprivatecatalogproducer.products.setIamPolicy",
      "cloudprofiler.profiles.list",
      "cloudscheduler.jobs.list",
      "cloudscheduler.locations.list",
      "cloudsecurityscanner.crawledurls.list",
      "cloudsecurityscanner.results.list",
      "cloudsecurityscanner.scanruns.list",
      "cloudsecurityscanner.scans.list",
      "cloudsql.backupRuns.list",
      "cloudsql.databases.list",
      "cloudsql.instances.list",
      "cloudsql.sslCerts.list",
      "cloudsql.users.list",
      "cloudsupport.accounts.getIamPolicy",
      "cloudsupport.accounts.list",
      "cloudsupport.accounts.setIamPolicy",
      "cloudsupport.techCases.list",
      "cloudtasks.locations.list",
      "cloudtasks.queues.getIamPolicy",
      "cloudtasks.queues.list",
      "cloudtasks.queues.setIamPolicy",
      "cloudtasks.tasks.list",
      "cloudtoolresults.executions.list",
      "cloudtoolresults.histories.list",
      "cloudtoolresults.steps.list",
      "cloudtrace.insights.list",
      "cloudtrace.tasks.list",
      "cloudtrace.traces.list",
      "cloudtranslate.customModels.list",
      "cloudtranslate.datasets.list",
      "cloudtranslate.glossaries.list",
      "cloudtranslate.glossaryentries.list",
      "cloudtranslate.locations.list",
      "cloudtranslate.operations.list",
      "cloudvolumesgcp-api.netapp.com/activeDirectories.list",
      "cloudvolumesgcp-api.netapp.com/ipRanges.list",
      "cloudvolumesgcp-api.netapp.com/jobs.list",
      "cloudvolumesgcp-api.netapp.com/regions.list",
      "cloudvolumesgcp-api.netapp.com/serviceLevels.list",
      "cloudvolumesgcp-api.netapp.com/snapshots.list",
      "cloudvolumesgcp-api.netapp.com/volumereplication.list",
      "cloudvolumesgcp-api.netapp.com/volumes.list",
      "commerceagreementpublishing.agreements.list",
      "commerceagreementpublishing.documents.list",
      "commercebusinessenablement.partnerAccounts.list",
      "commercebusinessenablement.resellerDiscountOffers.list",
      "commerceoffercatalog.agreements.list",
      "commerceoffercatalog.documents.list",
      "commerceorggovernance.collections.list",
      "commerceorggovernance.services.list",
      "commerceprice.events.list",
      "commerceprice.privateoffers.list",
      "composer.dags.list",
      "composer.environments.list",
      "composer.imageversions.list",
      "composer.operations.list",
      "compute.acceleratorTypes.list",
      "compute.addresses.list",
      "compute.autoscalers.list",
      "compute.backendBuckets.getIamPolicy",
      "compute.backendBuckets.list",
      "compute.backendBuckets.setIamPolicy",
      "compute.backendServices.getIamPolicy",
      "compute.backendServices.list",
      "compute.backendServices.setIamPolicy",
      "compute.commitments.list",
      "compute.diskTypes.list",
      "compute.disks.getIamPolicy",
      "compute.disks.list",
      "compute.disks.setIamPolicy",
      "compute.externalVpnGateways.list",
      "compute.firewallPolicies.getIamPolicy",
      "compute.firewallPolicies.list",
      "compute.firewallPolicies.setIamPolicy",
      "compute.firewalls.list",
      "compute.forwardingRules.list",
      "compute.futureReservations.getIamPolicy",
      "compute.futureReservations.list",
      "compute.futureReservations.setIamPolicy",
      "compute.globalAddresses.list",
      "compute.globalForwardingRules.list",
      "compute.globalNetworkEndpointGroups.list",
      "compute.globalOperations.getIamPolicy",
      "compute.globalOperations.list",
      "compute.globalOperations.setIamPolicy",
      "compute.globalPublicDelegatedPrefixes.list",
      "compute.healthChecks.list",
      "compute.httpHealthChecks.list",
      "compute.httpsHealthChecks.list",
      "compute.images.getIamPolicy",
      "compute.images.list",
      "compute.images.setIamPolicy",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroups.list",
      "compute.instanceTemplates.getIamPolicy",
      "compute.instanceTemplates.list",
      "compute.instanceTemplates.setIamPolicy",
      "compute.instances.getIamPolicy",
      "compute.instances.list",
      "compute.instances.setIamPolicy",
      "compute.instantSnapshots.getIamPolicy",
      "compute.instantSnapshots.list",
      "compute.instantSnapshots.setIamPolicy",
      "compute.interconnectAttachments.list",
      "compute.interconnectLocations.list",
      "compute.interconnectRemoteLocations.list",
      "compute.interconnects.list",
      "compute.licenseCodes.getIamPolicy",
      "compute.licenseCodes.list",
      "compute.licenseCodes.setIamPolicy",
      "compute.licenses.getIamPolicy",
      "compute.licenses.list",
      "compute.licenses.setIamPolicy",
      "compute.machineImages.getIamPolicy",
      "compute.machineImages.list",
      "compute.machineImages.setIamPolicy",
      "compute.machineTypes.list",
      "compute.maintenancePolicies.getIamPolicy",
      "compute.maintenancePolicies.list",
      "compute.maintenancePolicies.setIamPolicy",
      "compute.networkAttachments.getIamPolicy",
      "compute.networkAttachments.list",
      "compute.networkAttachments.setIamPolicy",
      "compute.networkEdgeSecurityServices.list",
      "compute.networkEndpointGroups.getIamPolicy",
      "compute.networkEndpointGroups.list",
      "compute.networkEndpointGroups.setIamPolicy",
      "compute.networks.list",
      "compute.nodeGroups.getIamPolicy",
      "compute.nodeGroups.list",
      "compute.nodeGroups.setIamPolicy",
      "compute.nodeTemplates.getIamPolicy",
      "compute.nodeTemplates.list",
      "compute.nodeTemplates.setIamPolicy",
      "compute.nodeTypes.list",
      "compute.packetMirrorings.list",
      "compute.publicAdvertisedPrefixes.list",
      "compute.publicDelegatedPrefixes.list",
      "compute.regionBackendServices.getIamPolicy",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.setIamPolicy",
      "compute.regionFirewallPolicies.getIamPolicy",
      "compute.regionFirewallPolicies.list",
      "compute.regionFirewallPolicies.setIamPolicy",
      "compute.regionHealthCheckServices.list",
      "compute.regionHealthChecks.list",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionNotificationEndpoints.list",
      "compute.regionOperations.getIamPolicy",
      "compute.regionOperations.list",
      "compute.regionOperations.setIamPolicy",
      "compute.regionSecurityPolicies.list",
      "compute.regionSslCertificates.list",
      "compute.regionSslPolicies.list",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetTcpProxies.list",
      "compute.regionUrlMaps.list",
      "compute.regions.list",
      "compute.reservations.list",
      "compute.resourcePolicies.getIamPolicy",
      "compute.resourcePolicies.list",
      "compute.resourcePolicies.setIamPolicy",
      "compute.routers.list",
      "compute.routes.list",
      "compute.securityPolicies.getIamPolicy",
      "compute.securityPolicies.list",
      "compute.securityPolicies.setIamPolicy",
      "compute.serviceAttachments.getIamPolicy",
      "compute.serviceAttachments.list",
      "compute.serviceAttachments.setIamPolicy",
      "compute.snapshots.getIamPolicy",
      "compute.snapshots.list",
      "compute.snapshots.setIamPolicy",
      "compute.sslCertificates.list",
      "compute.sslPolicies.list",
      "compute.subnetworks.getIamPolicy",
      "compute.subnetworks.list",
      "compute.subnetworks.setIamPolicy",
      "compute.targetGrpcProxies.list",
      "compute.targetHttpProxies.list",
      "compute.targetHttpsProxies.list",
      "compute.targetInstances.list",
      "compute.targetPools.list",
      "compute.targetSslProxies.list",
      "compute.targetTcpProxies.list",
      "compute.targetVpnGateways.list",
      "compute.urlMaps.list",
      "compute.vpnGateways.list",
      "compute.vpnTunnels.list",
      "compute.zoneOperations.getIamPolicy",
      "compute.zoneOperations.list",
      "compute.zoneOperations.setIamPolicy",
      "compute.zones.list",
      "confidentialcomputing.locations.list",
      "config.deployments.getIamPolicy",
      "config.deployments.list",
      "config.deployments.setIamPolicy",
      "config.locations.list",
      "config.operations.list",
      "config.resources.list",
      "config.revisions.list",
      "connectors.actions.list",
      "connectors.connections.getIamPolicy",
      "connectors.connections.list",
      "connectors.connections.setIamPolicy",
      "connectors.connectors.list",
      "connectors.endpointAttachments.getIamPolicy",
      "connectors.endpointAttachments.list",
      "connectors.endpointAttachments.setIamPolicy",
      "connectors.entities.list",
      "connectors.entityTypes.list",
      "connectors.eventSubscriptions.list",
      "connectors.eventtypes.list",
      "connectors.locations.list",
      "connectors.managedZones.getIamPolicy",
      "connectors.managedZones.list",
      "connectors.managedZones.setIamPolicy",
      "connectors.operations.list",
      "connectors.providers.list",
      "connectors.versions.list",
      "consumerprocurement.accounts.list",
      "consumerprocurement.consents.list",
      "consumerprocurement.entitlements.list",
      "consumerprocurement.events.list",
      "consumerprocurement.freeTrials.list",
      "consumerprocurement.orderAttributions.list",
      "consumerprocurement.orders.list",
      "contactcenteraiplatform.contactCenters.list",
      "contactcenteraiplatform.locations.list",
      "contactcenteraiplatform.operations.list",
      "contactcenterinsights.analyses.list",
      "contactcenterinsights.conversations.list",
      "contactcenterinsights.issueModels.list",
      "contactcenterinsights.issues.list",
      "contactcenterinsights.operations.list",
      "contactcenterinsights.phraseMatchers.list",
      "contactcenterinsights.views.list",
      "container.apiServices.list",
      "container.auditSinks.list",
      "container.backendConfigs.list",
      "container.bindings.list",
      "container.certificateSigningRequests.list",
      "container.clusterRoleBindings.list",
      "container.clusterRoles.list",
      "container.clusters.list",
      "container.componentStatuses.list",
      "container.configMaps.list",
      "container.controllerRevisions.list",
      "container.cronJobs.list",
      "container.csiDrivers.list",
      "container.csiNodeInfos.list",
      "container.csiNodes.list",
      "container.customResourceDefinitions.list",
      "container.daemonSets.list",
      "container.deployments.list",
      "container.endpointSlices.list",
      "container.endpoints.list",
      "container.events.list",
      "container.frontendConfigs.list",
      "container.horizontalPodAutoscalers.list",
      "container.ingresses.list",
      "container.initializerConfigurations.list",
      "container.jobs.list",
      "container.leases.list",
      "container.limitRanges.list",
      "container.localSubjectAccessReviews.list",
      "container.managedCertificates.list",
      "container.mutatingWebhookConfigurations.list",
      "container.namespaces.list",
      "container.networkPolicies.list",
      "container.nodes.list",
      "container.operations.list",
      "container.persistentVolumeClaims.list",
      "container.persistentVolumes.list",
      "container.petSets.list",
      "container.podDisruptionBudgets.list",
      "container.podPresets.list",
      "container.podSecurityPolicies.list",
      "container.podTemplates.list",
      "container.pods.list",
      "container.priorityClasses.list",
      "container.replicaSets.list",
      "container.replicationControllers.list",
      "container.resourceQuotas.list",
      "container.roleBindings.list",
      "container.roles.list",
      "container.runtimeClasses.list",
      "container.scheduledJobs.list",
      "container.selfSubjectAccessReviews.list",
      "container.serviceAccounts.list",
      "container.services.list",
      "container.statefulSets.list",
      "container.storageClasses.list",
      "container.storageStates.list",
      "container.storageVersionMigrations.list",
      "container.subjectAccessReviews.list",
      "container.thirdPartyObjects.list",
      "container.thirdPartyResources.list",
      "container.updateInfos.list",
      "container.validatingWebhookConfigurations.list",
      "container.volumeAttachments.list",
      "container.volumeSnapshotClasses.list",
      "container.volumeSnapshotContents.list",
      "container.volumeSnapshots.list",
      "containeranalysis.notes.getIamPolicy",
      "containeranalysis.notes.list",
      "containeranalysis.notes.setIamPolicy",
      "containeranalysis.occurrences.getIamPolicy",
      "containeranalysis.occurrences.list",
      "containeranalysis.occurrences.setIamPolicy",
      "containersecurity.clusterSummaries.list",
      "containersecurity.findings.list",
      "containersecurity.locations.list",
      "containersecurity.workloadConfigAudits.list",
      "contentwarehouse.documentSchemas.list",
      "contentwarehouse.documents.getIamPolicy",
      "contentwarehouse.documents.setIamPolicy",
      "contentwarehouse.ruleSets.list",
      "contentwarehouse.schemas.list",
      "contentwarehouse.synonymSets.list",
      "datacatalog.categories.getIamPolicy",
      "datacatalog.categories.setIamPolicy",
      "datacatalog.entries.getIamPolicy",
      "datacatalog.entries.list",
      "datacatalog.entries.setIamPolicy",
      "datacatalog.entryGroups.getIamPolicy",
      "datacatalog.entryGroups.list",
      "datacatalog.entryGroups.setIamPolicy",
      "datacatalog.operations.list",
      "datacatalog.relationships.list",
      "datacatalog.tagTemplates.getIamPolicy",
      "datacatalog.tagTemplates.setIamPolicy",
      "datacatalog.taxonomies.getIamPolicy",
      "datacatalog.taxonomies.list",
      "datacatalog.taxonomies.setIamPolicy",
      "dataconnectors.connectors.getIamPolicy",
      "dataconnectors.connectors.list",
      "dataconnectors.connectors.setIamPolicy",
      "dataconnectors.locations.list",
      "dataconnectors.operations.list",
      "dataflow.jobs.list",
      "dataflow.messages.list",
      "dataflow.snapshots.list",
      "dataform.compilationResults.list",
      "dataform.locations.list",
      "dataform.releaseConfigs.list",
      "dataform.repositories.getIamPolicy",
      "dataform.repositories.list",
      "dataform.repositories.setIamPolicy",
      "dataform.workflowConfigs.list",
      "dataform.workflowInvocations.list",
      "dataform.workspaces.getIamPolicy",
      "dataform.workspaces.list",
      "dataform.workspaces.setIamPolicy",
      "datafusion.artifacts.list",
      "datafusion.instances.getIamPolicy",
      "datafusion.instances.list",
      "datafusion.instances.setIamPolicy",
      "datafusion.locations.list",
      "datafusion.operations.list",
      "datafusion.pipelineConnections.list",
      "datafusion.pipelines.list",
      "datafusion.profiles.list",
      "datafusion.secureKeys.list",
      "datalabeling.annotateddatasets.list",
      "datalabeling.annotationspecsets.list",
      "datalabeling.dataitems.list",
      "datalabeling.datasets.list",
      "datalabeling.examples.list",
      "datalabeling.instructions.list",
      "datalabeling.operations.list",
      "datalineage.events.list",
      "datalineage.processes.list",
      "datalineage.runs.list",
      "datamigration.connectionprofiles.getIamPolicy",
      "datamigration.connectionprofiles.list",
      "datamigration.connectionprofiles.setIamPolicy",
      "datamigration.conversionworkspaces.getIamPolicy",
      "datamigration.conversionworkspaces.list",
      "datamigration.conversionworkspaces.setIamPolicy",
      "datamigration.locations.list",
      "datamigration.mappingrules.getIamPolicy",
      "datamigration.mappingrules.setIamPolicy",
      "datamigration.migrationjobs.getIamPolicy",
      "datamigration.migrationjobs.list",
      "datamigration.migrationjobs.setIamPolicy",
      "datamigration.operations.list",
      "datamigration.privateconnections.getIamPolicy",
      "datamigration.privateconnections.list",
      "datamigration.privateconnections.setIamPolicy",
      "datapipelines.jobs.list",
      "datapipelines.pipelines.list",
      "dataplex.assetActions.list",
      "dataplex.assets.getIamPolicy",
      "dataplex.assets.list",
      "dataplex.assets.setIamPolicy",
      "dataplex.content.getIamPolicy",
      "dataplex.content.list",
      "dataplex.content.setIamPolicy",
      "dataplex.dataAttributeBindings.getIamPolicy",
      "dataplex.dataAttributeBindings.list",
      "dataplex.dataAttributeBindings.setIamPolicy",
      "dataplex.dataAttributes.getIamPolicy",
      "dataplex.dataAttributes.list",
      "dataplex.dataAttributes.setIamPolicy",
      "dataplex.dataTaxonomies.getIamPolicy",
      "dataplex.dataTaxonomies.list",
      "dataplex.dataTaxonomies.setIamPolicy",
      "dataplex.datascans.getIamPolicy",
      "dataplex.datascans.list",
      "dataplex.datascans.setIamPolicy",
      "dataplex.entities.list",
      "dataplex.environments.getIamPolicy",
      "dataplex.environments.list",
      "dataplex.environments.setIamPolicy",
      "dataplex.lakeActions.list",
      "dataplex.lakes.getIamPolicy",
      "dataplex.lakes.list",
      "dataplex.lakes.setIamPolicy",
      "dataplex.locations.list",
      "dataplex.operations.list",
      "dataplex.partitions.list",
      "dataplex.tasks.getIamPolicy",
      "dataplex.tasks.list",
      "dataplex.tasks.setIamPolicy",
      "dataplex.zoneActions.list",
      "dataplex.zones.getIamPolicy",
      "dataplex.zones.list",
      "dataplex.zones.setIamPolicy",
      "dataproc.agents.list",
      "dataproc.autoscalingPolicies.getIamPolicy",
      "dataproc.autoscalingPolicies.list",
      "dataproc.autoscalingPolicies.setIamPolicy",
      "dataproc.batches.list",
      "dataproc.clusters.getIamPolicy",
      "dataproc.clusters.list",
      "dataproc.clusters.setIamPolicy",
      "dataproc.jobs.getIamPolicy",
      "dataproc.jobs.list",
      "dataproc.jobs.setIamPolicy",
      "dataproc.operations.getIamPolicy",
      "dataproc.operations.list",
      "dataproc.operations.setIamPolicy",
      "dataproc.workflowTemplates.getIamPolicy",
      "dataproc.workflowTemplates.list",
      "dataproc.workflowTemplates.setIamPolicy",
      "dataprocessing.datasources.list",
      "dataprocessing.featurecontrols.list",
      "dataprocessing.groupcontrols.list",
      "datastore.databases.list",
      "datastore.entities.list",
      "datastore.indexes.list",
      "datastore.keyVisualizerScans.list",
      "datastore.locations.list",
      "datastore.namespaces.list",
      "datastore.operations.list",
      "datastore.statistics.list",
      "datastream.connectionProfiles.getIamPolicy",
      "datastream.connectionProfiles.list",
      "datastream.connectionProfiles.setIamPolicy",
      "datastream.locations.list",
      "datastream.objects.list",
      "datastream.operations.list",
      "datastream.privateConnections.getIamPolicy",
      "datastream.privateConnections.list",
      "datastream.privateConnections.setIamPolicy",
      "datastream.routes.getIamPolicy",
      "datastream.routes.list",
      "datastream.routes.setIamPolicy",
      "datastream.streams.getIamPolicy",
      "datastream.streams.list",
      "datastream.streams.setIamPolicy",
      "datastudio.datasources.getIamPolicy",
      "datastudio.datasources.setIamPolicy",
      "datastudio.reports.getIamPolicy",
      "datastudio.reports.setIamPolicy",
      "datastudio.workspaces.getIamPolicy",
      "datastudio.workspaces.setIamPolicy",
      "deploymentmanager.compositeTypes.list",
      "deploymentmanager.deployments.getIamPolicy",
      "deploymentmanager.deployments.list",
      "deploymentmanager.deployments.setIamPolicy",
      "deploymentmanager.manifests.list",
      "deploymentmanager.operations.list",
      "deploymentmanager.resources.list",
      "deploymentmanager.typeProviders.list",
      "deploymentmanager.types.list",
      "dialogflow.agents.list",
      "dialogflow.answerrecords.list",
      "dialogflow.callMatchers.list",
      "dialogflow.changelogs.list",
      "dialogflow.contexts.list",
      "dialogflow.conversationDatasets.list",
      "dialogflow.conversationModels.list",
      "dialogflow.conversationProfiles.list",
      "dialogflow.conversations.list",
      "dialogflow.deployments.list",
      "dialogflow.documents.list",
      "dialogflow.entityTypes.list",
      "dialogflow.environments.list",
      "dialogflow.experiments.list",
      "dialogflow.flows.list",
      "dialogflow.integrations.list",
      "dialogflow.intents.list",
      "dialogflow.knowledgeBases.list",
      "dialogflow.messages.list",
      "dialogflow.modelEvaluations.list",
      "dialogflow.pages.list",
      "dialogflow.participants.list",
      "dialogflow.phoneNumberOrders.list",
      "dialogflow.phoneNumbers.list",
      "dialogflow.securitySettings.list",
      "dialogflow.sessionEntityTypes.list",
      "dialogflow.smartMessagingEntries.list",
      "dialogflow.testcases.list",
      "dialogflow.transitionRouteGroups.list",
      "dialogflow.versions.list",
      "dialogflow.webhooks.list",
      "discoveryengine.controls.list",
      "discoveryengine.conversations.list",
      "discoveryengine.dataStores.list",
      "discoveryengine.documents.list",
      "discoveryengine.engines.list",
      "discoveryengine.models.list",
      "discoveryengine.operations.list",
      "discoveryengine.schemas.list",
      "discoveryengine.servingConfigs.list",
      "discoveryengine.targetSites.list",
      "dlp.analyzeRiskTemplates.list",
      "dlp.columnDataProfiles.list",
      "dlp.deidentifyTemplates.list",
      "dlp.estimates.list",
      "dlp.inspectFindings.list",
      "dlp.inspectTemplates.list",
      "dlp.jobTriggers.list",
      "dlp.jobs.list",
      "dlp.locations.list",
      "dlp.projectDataProfiles.list",
      "dlp.storedInfoTypes.list",
      "dlp.subscriptions.list",
      "dlp.tableDataProfiles.list",
      "dns.changes.list",
      "dns.dnsKeys.list",
      "dns.managedZoneOperations.list",
      "dns.managedZones.getIamPolicy",
      "dns.managedZones.list",
      "dns.managedZones.setIamPolicy",
      "dns.policies.getIamPolicy",
      "dns.policies.list",
      "dns.policies.setIamPolicy",
      "dns.resourceRecordSets.list",
      "dns.responsePolicies.list",
      "dns.responsePolicyRules.list",
      "documentai.dataLabelingJobs.list",
      "documentai.evaluations.list",
      "documentai.labelerPools.list",
      "documentai.locations.list",
      "documentai.processorTypes.list",
      "documentai.processorVersions.list",
      "documentai.processors.list",
      "domains.locations.list",
      "domains.operations.list",
      "domains.registrations.getIamPolicy",
      "domains.registrations.list",
      "domains.registrations.setIamPolicy",
      "earthengine.assets.getIamPolicy",
      "earthengine.assets.list",
      "earthengine.assets.setIamPolicy",
      "earthengine.operations.list",
      "edgecontainer.clusters.getIamPolicy",
      "edgecontainer.clusters.list",
      "edgecontainer.clusters.setIamPolicy",
      "edgecontainer.locations.list",
      "edgecontainer.machines.getIamPolicy",
      "edgecontainer.machines.list",
      "edgecontainer.machines.setIamPolicy",
      "edgecontainer.nodePools.getIamPolicy",
      "edgecontainer.nodePools.list",
      "edgecontainer.nodePools.setIamPolicy",
      "edgecontainer.operations.list",
      "edgecontainer.vpnConnections.getIamPolicy",
      "edgecontainer.vpnConnections.list",
      "edgecontainer.vpnConnections.setIamPolicy",
      "edgenetwork.interconnectAttachments.getIamPolicy",
      "edgenetwork.interconnectAttachments.list",
      "edgenetwork.interconnectAttachments.setIamPolicy",
      "edgenetwork.interconnects.getIamPolicy",
      "edgenetwork.interconnects.list",
      "edgenetwork.interconnects.setIamPolicy",
      "edgenetwork.locations.list",
      "edgenetwork.networks.getIamPolicy",
      "edgenetwork.networks.list",
      "edgenetwork.networks.setIamPolicy",
      "edgenetwork.operations.list",
      "edgenetwork.routers.getIamPolicy",
      "edgenetwork.routers.list",
      "edgenetwork.routers.setIamPolicy",
      "edgenetwork.routes.list",
      "edgenetwork.subnetworks.getIamPolicy",
      "edgenetwork.subnetworks.list",
      "edgenetwork.subnetworks.setIamPolicy",
      "edgenetwork.zones.list",
      "enterpriseknowledgegraph.entityReconciliationJobs.list",
      "errorreporting.applications.list",
      "errorreporting.errorEvents.list",
      "errorreporting.groups.list",
      "essentialcontacts.contacts.list",
      "eventarc.channelConnections.getIamPolicy",
      "eventarc.channelConnections.list",
      "eventarc.channelConnections.setIamPolicy",
      "eventarc.channels.getIamPolicy",
      "eventarc.channels.list",
      "eventarc.channels.setIamPolicy",
      "eventarc.locations.list",
      "eventarc.operations.list",
      "eventarc.providers.list",
      "eventarc.triggers.getIamPolicy",
      "eventarc.triggers.list",
      "eventarc.triggers.setIamPolicy",
      "fcmdata.deliverydata.list",
      "file.backups.list",
      "file.instances.list",
      "file.locations.list",
      "file.operations.list",
      "file.snapshots.list",
      "firebase.clients.list",
      "firebase.links.list",
      "firebase.playLinks.list",
      "firebaseabt.experiments.list",
      "firebaseappdistro.groups.list",
      "firebaseappdistro.releases.list",
      "firebaseappdistro.testers.list",
      "firebasecrashlytics.issues.list",
      "firebasedatabase.instances.list",
      "firebasedynamiclinks.destinations.list",
      "firebasedynamiclinks.domains.list",
      "firebasedynamiclinks.links.list",
      "firebaseextensions.configs.list",
      "firebaseextensionspublisher.extensions.list",
      "firebasehosting.sites.list",
      "firebaseinappmessaging.campaigns.list",
      "firebasemessagingcampaigns.campaigns.list",
      "firebaseml.models.list",
      "firebaseml.modelversions.list",
      "firebasenotifications.messages.list",
      "firebaserules.releases.list",
      "firebaserules.rulesets.list",
      "firebasestorage.buckets.list",
      "fleetengine.deliveryvehicles.list",
      "fleetengine.tasks.list",
      "fleetengine.vehicles.list",
      "gameservices.gameServerClusters.list",
      "gameservices.gameServerConfigs.list",
      "gameservices.gameServerDeployments.list",
      "gameservices.locations.list",
      "gameservices.operations.list",
      "gameservices.realms.list",
      "gcp.redisenterprise.com/databases.list",
      "gcp.redisenterprise.com/subscriptions.list",
      "genomics.datasets.getIamPolicy",
      "genomics.datasets.list",
      "genomics.datasets.setIamPolicy",
      "genomics.operations.list",
      "gkebackup.backupPlans.getIamPolicy",
      "gkebackup.backupPlans.list",
      "gkebackup.backupPlans.setIamPolicy",
      "gkebackup.backups.list",
      "gkebackup.locations.list",
      "gkebackup.operations.list",
      "gkebackup.restorePlans.getIamPolicy",
      "gkebackup.restorePlans.list",
      "gkebackup.restorePlans.setIamPolicy",
      "gkebackup.restores.list",
      "gkebackup.volumeBackups.list",
      "gkebackup.volumeRestores.list",
      "gkehub.features.getIamPolicy",
      "gkehub.features.list",
      "gkehub.features.setIamPolicy",
      "gkehub.gateway.getIamPolicy",
      "gkehub.gateway.setIamPolicy",
      "gkehub.locations.list",
      "gkehub.membershipbindings.list",
      "gkehub.memberships.getIamPolicy",
      "gkehub.memberships.list",
      "gkehub.memberships.setIamPolicy",
      "gkehub.namespaces.list",
      "gkehub.operations.list",
      "gkehub.rbacrolebindings.list",
      "gkehub.scopes.getIamPolicy",
      "gkehub.scopes.list",
      "gkehub.scopes.setIamPolicy",
      "gkemulticloud.attachedClusters.list",
      "gkemulticloud.awsClusters.list",
      "gkemulticloud.awsNodePools.list",
      "gkemulticloud.azureClients.list",
      "gkemulticloud.azureClusters.list",
      "gkemulticloud.azureNodePools.list",
      "gkemulticloud.operations.list",
      "gkeonprem.bareMetalAdminClusters.getIamPolicy",
      "gkeonprem.bareMetalAdminClusters.list",
      "gkeonprem.bareMetalAdminClusters.setIamPolicy",
      "gkeonprem.bareMetalClusters.getIamPolicy",
      "gkeonprem.bareMetalClusters.list",
      "gkeonprem.bareMetalClusters.setIamPolicy",
      "gkeonprem.bareMetalNodePools.getIamPolicy",
      "gkeonprem.bareMetalNodePools.list",
      "gkeonprem.bareMetalNodePools.setIamPolicy",
      "gkeonprem.locations.list",
      "gkeonprem.operations.list",
      "gkeonprem.vmwareAdminClusters.getIamPolicy",
      "gkeonprem.vmwareAdminClusters.list",
      "gkeonprem.vmwareAdminClusters.setIamPolicy",
      "gkeonprem.vmwareClusters.getIamPolicy",
      "gkeonprem.vmwareClusters.list",
      "gkeonprem.vmwareClusters.setIamPolicy",
      "gkeonprem.vmwareNodePools.getIamPolicy",
      "gkeonprem.vmwareNodePools.list",
      "gkeonprem.vmwareNodePools.setIamPolicy",
      "gsuiteaddons.deployments.list",
      "healthcare.annotationStores.getIamPolicy",
      "healthcare.annotationStores.list",
      "healthcare.annotationStores.setIamPolicy",
      "healthcare.annotations.list",
      "healthcare.attributeDefinitions.list",
      "healthcare.consentArtifacts.list",
      "healthcare.consentStores.getIamPolicy",
      "healthcare.consentStores.list",
      "healthcare.consentStores.setIamPolicy",
      "healthcare.consents.list",
      "healthcare.datasets.getIamPolicy",
      "healthcare.datasets.list",
      "healthcare.datasets.setIamPolicy",
      "healthcare.dicomStores.getIamPolicy",
      "healthcare.dicomStores.list",
      "healthcare.dicomStores.setIamPolicy",
      "healthcare.fhirStores.getIamPolicy",
      "healthcare.fhirStores.list",
      "healthcare.fhirStores.setIamPolicy",
      "healthcare.hl7V2Messages.list",
      "healthcare.hl7V2Stores.getIamPolicy",
      "healthcare.hl7V2Stores.list",
      "healthcare.hl7V2Stores.setIamPolicy",
      "healthcare.locations.list",
      "healthcare.operations.list",
      "healthcare.userDataMappings.list",
      "iam.denypolicies.list",
      "iam.googleapis.com/workforcePoolProviderKeys.list",
      "iam.googleapis.com/workforcePoolProviders.list",
      "iam.googleapis.com/workforcePools.getIamPolicy",
      "iam.googleapis.com/workforcePools.list",
      "iam.googleapis.com/workforcePools.setIamPolicy",
      "iam.googleapis.com/workloadIdentityPoolProviderKeys.list",
      "iam.googleapis.com/workloadIdentityPoolProviders.list",
      "iam.googleapis.com/workloadIdentityPools.list",
      "iam.roles.get",
      "iam.roles.list",
      "iam.serviceAccountKeys.list",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.getIamPolicy",
      "iam.serviceAccounts.list",
      "iam.serviceAccounts.setIamPolicy",
      "iap.tunnel.getIamPolicy",
      "iap.tunnel.setIamPolicy",
      "iap.tunnelDestGroups.getIamPolicy",
      "iap.tunnelDestGroups.list",
      "iap.tunnelDestGroups.setIamPolicy",
      "iap.tunnelInstances.getIamPolicy",
      "iap.tunnelInstances.setIamPolicy",
      "iap.tunnelLocations.getIamPolicy",
      "iap.tunnelLocations.setIamPolicy",
      "iap.tunnelZones.getIamPolicy",
      "iap.tunnelZones.setIamPolicy",
      "iap.web.getIamPolicy",
      "iap.web.setIamPolicy",
      "iap.webServiceVersions.getIamPolicy",
      "iap.webServiceVersions.setIamPolicy",
      "iap.webServices.getIamPolicy",
      "iap.webServices.setIamPolicy",
      "iap.webTypes.getIamPolicy",
      "iap.webTypes.setIamPolicy",
      "identitytoolkit.tenants.getIamPolicy",
      "identitytoolkit.tenants.list",
      "identitytoolkit.tenants.setIamPolicy",
      "ids.endpoints.getIamPolicy",
      "ids.endpoints.list",
      "ids.endpoints.setIamPolicy",
      "ids.locations.list",
      "ids.operations.list",
      "integrations.apigeeAuthConfigs.list",
      "integrations.apigeeCertificates.list",
      "integrations.apigeeExecutions.list",
      "integrations.apigeeIntegrationVers.list",
      "integrations.apigeeIntegrations.list",
      "integrations.apigeeSfdcChannels.list",
      "integrations.apigeeSfdcInstances.list",
      "integrations.apigeeSuspensions.list",
      "integrations.authConfigs.list",
      "integrations.certificates.list",
      "integrations.executions.list",
      "integrations.integrationVersions.list",
      "integrations.integrations.list",
      "integrations.securityAuthConfigs.list",
      "integrations.securityExecutions.list",
      "integrations.securityIntegTempVers.list",
      "integrations.securityIntegrationVers.list",
      "integrations.securityIntegrations.list",
      "integrations.sfdcChannels.list",
      "integrations.sfdcInstances.list",
      "integrations.suspensions.list",
      "issuerswitch.accountManagerTransactions.list",
      "issuerswitch.complaintTransactions.list",
      "issuerswitch.financialTransactions.list",
      "issuerswitch.mandateTransactions.list",
      "issuerswitch.metadataTransactions.list",
      "issuerswitch.operations.list",
      "issuerswitch.ruleMetadata.list",
      "issuerswitch.ruleMetadataValues.list",
      "issuerswitch.rules.list",
      "krmapihosting.krmApiHosts.getIamPolicy",
      "krmapihosting.krmApiHosts.list",
      "krmapihosting.krmApiHosts.setIamPolicy",
      "krmapihosting.locations.list",
      "krmapihosting.operations.list",
      "lifesciences.operations.list",
      "livestream.channels.list",
      "livestream.events.list",
      "livestream.inputs.list",
      "livestream.locations.list",
      "livestream.operations.list",
      "logging.buckets.list",
      "logging.exclusions.list",
      "logging.links.list",
      "logging.locations.list",
      "logging.logEntries.list",
      "logging.logMetrics.list",
      "logging.logServiceIndexes.list",
      "logging.logServices.list",
      "logging.logs.list",
      "logging.notificationRules.list",
      "logging.operations.list",
      "logging.privateLogEntries.list",
      "logging.queries.list",
      "logging.sinks.list",
      "logging.views.list",
      "looker.backups.list",
      "looker.instances.list",
      "looker.locations.list",
      "looker.operations.list",
      "managedidentities.backups.getIamPolicy",
      "managedidentities.backups.list",
      "managedidentities.backups.setIamPolicy",
      "managedidentities.domains.getIamPolicy",
      "managedidentities.domains.list",
      "managedidentities.domains.setIamPolicy",
      "managedidentities.locations.list",
      "managedidentities.operations.list",
      "managedidentities.peerings.getIamPolicy",
      "managedidentities.peerings.list",
      "managedidentities.peerings.setIamPolicy",
      "managedidentities.sqlintegrations.list",
      "mapsadmin.clientMaps.list",
      "mapsadmin.clientStyleSheetSnapshots.list",
      "mapsadmin.clientStyles.list",
      "mapsadmin.styleSnapshots.list",
      "mapsplatformdatasets.datasets.list",
      "memcache.instances.list",
      "memcache.locations.list",
      "memcache.operations.list",
      "metastore.backups.getIamPolicy",
      "metastore.backups.list",
      "metastore.backups.setIamPolicy",
      "metastore.databases.getIamPolicy",
      "metastore.databases.list",
      "metastore.databases.setIamPolicy",
      "metastore.federations.getIamPolicy",
      "metastore.federations.list",
      "metastore.federations.setIamPolicy",
      "metastore.imports.list",
      "metastore.locations.list",
      "metastore.operations.list",
      "metastore.services.getIamPolicy",
      "metastore.services.list",
      "metastore.services.setIamPolicy",
      "metastore.tables.getIamPolicy",
      "metastore.tables.list",
      "metastore.tables.setIamPolicy",
      "migrationcenter.assets.list",
      "migrationcenter.errorFrames.list",
      "migrationcenter.groups.list",
      "migrationcenter.importDataFiles.list",
      "migrationcenter.importJobs.list",
      "migrationcenter.locations.list",
      "migrationcenter.operations.list",
      "migrationcenter.preferenceSets.list",
      "migrationcenter.reportConfigs.list",
      "migrationcenter.reports.list",
      "migrationcenter.sources.list",
      "ml.jobs.getIamPolicy",
      "ml.jobs.list",
      "ml.jobs.setIamPolicy",
      "ml.locations.list",
      "ml.models.getIamPolicy",
      "ml.models.list",
      "ml.models.setIamPolicy",
      "ml.operations.list",
      "ml.studies.getIamPolicy",
      "ml.studies.list",
      "ml.studies.setIamPolicy",
      "ml.trials.list",
      "ml.versions.list",
      "monitoring.alertPolicies.list",
      "monitoring.dashboards.list",
      "monitoring.groups.list",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.notificationChannelDescriptors.list",
      "monitoring.notificationChannels.list",
      "monitoring.publicWidgets.list",
      "monitoring.services.list",
      "monitoring.slos.list",
      "monitoring.snoozes.list",
      "monitoring.timeSeries.list",
      "monitoring.uptimeCheckConfigs.list",
      "netapp.activeDirectories.list",
      "netapp.kmsConfigs.list",
      "netapp.replications.list",
      "netapp.snapshots.list",
      "netapp.storagePools.list",
      "netapp.volumes.list",
      "networkconnectivity.groups.getIamPolicy",
      "networkconnectivity.groups.list",
      "networkconnectivity.groups.setIamPolicy",
      "networkconnectivity.hubRouteTables.getIamPolicy",
      "networkconnectivity.hubRouteTables.list",
      "networkconnectivity.hubRouteTables.setIamPolicy",
      "networkconnectivity.hubRoutes.getIamPolicy",
      "networkconnectivity.hubRoutes.list",
      "networkconnectivity.hubRoutes.setIamPolicy",
      "networkconnectivity.hubs.getIamPolicy",
      "networkconnectivity.hubs.list",
      "networkconnectivity.hubs.setIamPolicy",
      "networkconnectivity.internalRanges.getIamPolicy",
      "networkconnectivity.internalRanges.list",
      "networkconnectivity.internalRanges.setIamPolicy",
      "networkconnectivity.locations.list",
      "networkconnectivity.operations.list",
      "networkconnectivity.policyBasedRoutes.getIamPolicy",
      "networkconnectivity.policyBasedRoutes.list",
      "networkconnectivity.policyBasedRoutes.setIamPolicy",
      "networkconnectivity.serviceClasses.list",
      "networkconnectivity.serviceConnectionMaps.list",
      "networkconnectivity.serviceConnectionPolicies.list",
      "networkconnectivity.spokes.getIamPolicy",
      "networkconnectivity.spokes.list",
      "networkconnectivity.spokes.setIamPolicy",
      "networkmanagement.connectivitytests.getIamPolicy",
      "networkmanagement.connectivitytests.list",
      "networkmanagement.connectivitytests.setIamPolicy",
      "networkmanagement.locations.list",
      "networkmanagement.operations.list",
      "networksecurity.authorizationPolicies.getIamPolicy",
      "networksecurity.authorizationPolicies.list",
      "networksecurity.authorizationPolicies.setIamPolicy",
      "networksecurity.clientTlsPolicies.getIamPolicy",
      "networksecurity.clientTlsPolicies.list",
      "networksecurity.clientTlsPolicies.setIamPolicy",
      "networksecurity.firewallEndpointAssociations.list",
      "networksecurity.firewallEndpoints.list",
      "networksecurity.gatewaySecurityPolicies.list",
      "networksecurity.gatewaySecurityPolicyRules.list",
      "networksecurity.locations.list",
      "networksecurity.operations.list",
      "networksecurity.securityProfileGroups.list",
      "networksecurity.securityProfiles.list",
      "networksecurity.serverTlsPolicies.getIamPolicy",
      "networksecurity.serverTlsPolicies.list",
      "networksecurity.serverTlsPolicies.setIamPolicy",
      "networksecurity.tlsInspectionPolicies.list",
      "networksecurity.urlLists.list",
      "networkservices.endpointConfigSelectors.getIamPolicy",
      "networkservices.endpointConfigSelectors.list",
      "networkservices.endpointConfigSelectors.setIamPolicy",
      "networkservices.endpointPolicies.getIamPolicy",
      "networkservices.endpointPolicies.list",
      "networkservices.endpointPolicies.setIamPolicy",
      "networkservices.gateways.list",
      "networkservices.grpcRoutes.getIamPolicy",
      "networkservices.grpcRoutes.list",
      "networkservices.grpcRoutes.setIamPolicy",
      "networkservices.httpFilters.getIamPolicy",
      "networkservices.httpFilters.list",
      "networkservices.httpFilters.setIamPolicy",
      "networkservices.httpRoutes.getIamPolicy",
      "networkservices.httpRoutes.list",
      "networkservices.httpRoutes.setIamPolicy",
      "networkservices.httpfilters.getIamPolicy",
      "networkservices.httpfilters.list",
      "networkservices.httpfilters.setIamPolicy",
      "networkservices.locations.list",
      "networkservices.meshes.getIamPolicy",
      "networkservices.meshes.list",
      "networkservices.meshes.setIamPolicy",
      "networkservices.operations.list",
      "networkservices.serviceBindings.list",
      "networkservices.tcpRoutes.getIamPolicy",
      "networkservices.tcpRoutes.list",
      "networkservices.tcpRoutes.setIamPolicy",
      "networkservices.tlsRoutes.list",
      "notebooks.environments.getIamPolicy",
      "notebooks.environments.list",
      "notebooks.environments.setIamPolicy",
      "notebooks.executions.getIamPolicy",
      "notebooks.executions.list",
      "notebooks.executions.setIamPolicy",
      "notebooks.instances.getIamPolicy",
      "notebooks.instances.list",
      "notebooks.instances.setIamPolicy",
      "notebooks.locations.list",
      "notebooks.operations.list",
      "notebooks.runtimes.getIamPolicy",
      "notebooks.runtimes.list",
      "notebooks.runtimes.setIamPolicy",
      "notebooks.schedules.getIamPolicy",
      "notebooks.schedules.list",
      "notebooks.schedules.setIamPolicy",
      "ondemandscanning.operations.list",
      "opsconfigmonitoring.resourceMetadata.list",
      "orgpolicy.constraints.list",
      "orgpolicy.customConstraints.list",
      "orgpolicy.policies.list",
      "osconfig.guestPolicies.list",
      "osconfig.instanceOSPoliciesCompliances.list",
      "osconfig.inventories.list",
      "osconfig.osPolicyAssignmentReports.list",
      "osconfig.osPolicyAssignments.list",
      "osconfig.patchDeployments.list",
      "osconfig.patchJobs.list",
      "osconfig.vulnerabilityReports.list",
      "paymentsresellersubscription.products.list",
      "paymentsresellersubscription.promotions.list",
      "policysimulator.orgPolicyViolations.list",
      "policysimulator.orgPolicyViolationsPreviews.list",
      "policysimulator.replayResults.list",
      "policysimulator.replays.create",
      "policysimulator.replays.get",
      "policysimulator.replays.list",
      "policysimulator.replays.run",
      "privateca.caPools.getIamPolicy",
      "privateca.caPools.list",
      "privateca.caPools.setIamPolicy",
      "privateca.certificateAuthorities.getIamPolicy",
      "privateca.certificateAuthorities.list",
      "privateca.certificateAuthorities.setIamPolicy",
      "privateca.certificateRevocationLists.getIamPolicy",
      "privateca.certificateRevocationLists.list",
      "privateca.certificateRevocationLists.setIamPolicy",
      "privateca.certificateTemplates.getIamPolicy",
      "privateca.certificateTemplates.list",
      "privateca.certificateTemplates.setIamPolicy",
      "privateca.certificates.getIamPolicy",
      "privateca.certificates.list",
      "privateca.certificates.setIamPolicy",
      "privateca.locations.list",
      "privateca.operations.list",
      "privateca.reusableConfigs.getIamPolicy",
      "privateca.reusableConfigs.list",
      "privateca.reusableConfigs.setIamPolicy",
      "proximitybeacon.attachments.list",
      "proximitybeacon.beacons.getIamPolicy",
      "proximitybeacon.beacons.list",
      "proximitybeacon.beacons.setIamPolicy",
      "proximitybeacon.namespaces.getIamPolicy",
      "proximitybeacon.namespaces.list",
      "proximitybeacon.namespaces.setIamPolicy",
      "pubsub.schemas.getIamPolicy",
      "pubsub.schemas.list",
      "pubsub.schemas.setIamPolicy",
      "pubsub.snapshots.getIamPolicy",
      "pubsub.snapshots.list",
      "pubsub.snapshots.setIamPolicy",
      "pubsub.subscriptions.getIamPolicy",
      "pubsub.subscriptions.list",
      "pubsub.subscriptions.setIamPolicy",
      "pubsub.topics.getIamPolicy",
      "pubsub.topics.list",
      "pubsub.topics.setIamPolicy",
      "pubsublite.operations.list",
      "pubsublite.reservations.list",
      "pubsublite.subscriptions.list",
      "pubsublite.topics.list",
      "recaptchaenterprise.keys.list",
      "recaptchaenterprise.relatedaccountgroupmemberships.list",
      "recaptchaenterprise.relatedaccountgroups.list",
      "recommender.bigqueryCapacityCommitmentsInsights.list",
      "recommender.bigqueryCapacityCommitmentsRecommendations.list",
      "recommender.bigqueryPartitionClusterRecommendations.list",
      "recommender.bigqueryTableStatsInsights.list",
      "recommender.cloudAssetInsights.list",
      "recommender.cloudCostGeneralInsights.list",
      "recommender.cloudCostGeneralRecommendations.list",
      "recommender.cloudFunctionsPerformanceInsights.list",
      "recommender.cloudFunctionsPerformanceRecommendations.list",
      "recommender.cloudManageabilityGeneralInsights.list",
      "recommender.cloudManageabilityGeneralRecommendations.list",
      "recommender.cloudPerformanceGeneralInsights.list",
      "recommender.cloudPerformanceGeneralRecommendations.list",
      "recommender.cloudReliabilityGeneralInsights.list",
      "recommender.cloudReliabilityGeneralRecommendations.list",
      "recommender.cloudSecurityGeneralInsights.list",
      "recommender.cloudSecurityGeneralRecommendations.list",
      "recommender.cloudsqlIdleInstanceRecommendations.list",
      "recommender.cloudsqlInstanceActivityInsights.list",
      "recommender.cloudsqlInstanceCpuUsageInsights.list",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.list",
      "recommender.cloudsqlInstanceMemoryUsageInsights.list",
      "recommender.cloudsqlInstanceOomProbabilityInsights.list",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.list",
      "recommender.cloudsqlInstancePerformanceInsights.list",
      "recommender.cloudsqlInstancePerformanceRecommendations.list",
      "recommender.cloudsqlInstanceReliabilityInsights.list",
      "recommender.cloudsqlInstanceReliabilityRecommendations.list",
      "recommender.cloudsqlInstanceSecurityInsights.list",
      "recommender.cloudsqlInstanceSecurityRecommendations.list",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.list",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.list",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.list",
      "recommender.commitmentUtilizationInsights.list",
      "recommender.computeAddressIdleResourceInsights.list",
      "recommender.computeAddressIdleResourceRecommendations.list",
      "recommender.computeDiskIdleResourceInsights.list",
      "recommender.computeDiskIdleResourceRecommendations.list",
      "recommender.computeFirewallInsights.list",
      "recommender.computeImageIdleResourceInsights.list",
      "recommender.computeImageIdleResourceRecommendations.list",
      "recommender.computeInstanceCpuUsageInsights.list",
      "recommender.computeInstanceCpuUsagePredictionInsights.list",
      "recommender.computeInstanceCpuUsageTrendInsights.list",
      "recommender.computeInstanceGroupManagerCpuUsageInsights.list",
      "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.list",
      "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.list",
      "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list",
      "recommender.computeInstanceGroupManagerMemoryUsageInsights.list",
      "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.list",
      "recommender.computeInstanceIdleResourceRecommendations.list",
      "recommender.computeInstanceMachineTypeRecommendations.list",
      "recommender.computeInstanceMemoryUsageInsights.list",
      "recommender.computeInstanceMemoryUsagePredictionInsights.list",
      "recommender.computeInstanceNetworkThroughputInsights.list",
      "recommender.containerDiagnosisInsights.list",
      "recommender.containerDiagnosisRecommendations.list",
      "recommender.costInsights.list",
      "recommender.dataflowDiagnosticsInsights.list",
      "recommender.errorReportingInsights.list",
      "recommender.errorReportingRecommendations.list",
      "recommender.gmpGuidedExperienceInsights.list",
      "recommender.gmpGuidedExperienceRecommendations.list",
      "recommender.gmpProjectManagementInsights.list",
      "recommender.gmpProjectManagementRecommendations.list",
      "recommender.gmpProjectProductSuggestionsInsights.list",
      "recommender.gmpProjectProductSuggestionsRecommendations.list",
      "recommender.gmpProjectQuotaInsights.list",
      "recommender.gmpProjectQuotaRecommendations.list",
      "recommender.iamPolicyInsights.list",
      "recommender.iamPolicyLateralMovementInsights.list",
      "recommender.iamPolicyRecommendations.list",
      "recommender.iamServiceAccountInsights.list",
      "recommender.locations.list",
      "recommender.loggingProductSuggestionContainerInsights.list",
      "recommender.loggingProductSuggestionContainerRecommendations.list",
      "recommender.monitoringProductSuggestionComputeInsights.list",
      "recommender.monitoringProductSuggestionComputeRecommendations.list",
      "recommender.networkAnalyzerCloudSqlInsights.list",
      "recommender.networkAnalyzerDynamicRouteInsights.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.list",
      "recommender.networkAnalyzerGkeIpAddressInsights.list",
      "recommender.networkAnalyzerIpAddressInsights.list",
      "recommender.networkAnalyzerLoadBalancerInsights.list",
      "recommender.networkAnalyzerVpcConnectivityInsights.list",
      "recommender.resourcemanagerProjectUtilizationInsights.list",
      "recommender.resourcemanagerProjectUtilizationRecommendations.list",
      "recommender.resourcemanagerServiceLimitInsights.list",
      "recommender.resourcemanagerServiceLimitRecommendations.list",
      "recommender.runServiceCostInsights.list",
      "recommender.runServiceCostRecommendations.list",
      "recommender.runServiceIdentityInsights.list",
      "recommender.runServiceIdentityRecommendations.list",
      "recommender.runServiceSecurityInsights.list",
      "recommender.runServiceSecurityRecommendations.list",
      "recommender.spendBasedCommitmentInsights.list",
      "recommender.spendBasedCommitmentRecommendations.list",
      "recommender.usageCommitmentRecommendations.list",
      "redis.clusters.list",
      "redis.instances.list",
      "redis.locations.list",
      "redis.operations.list",
      "remotebuildexecution.instances.list",
      "remotebuildexecution.workerpools.list",
      "resourcemanager.folders.getIamPolicy",
      "resourcemanager.folders.list",
      "resourcemanager.folders.setIamPolicy",
      "resourcemanager.hierarchyNodes.listTagBindings",
      "resourcemanager.organizations.getIamPolicy",
      "resourcemanager.organizations.setIamPolicy",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list",
      "resourcemanager.projects.setIamPolicy",
      "resourcemanager.tagHolds.list",
      "resourcemanager.tagKeys.getIamPolicy",
      "resourcemanager.tagKeys.list",
      "resourcemanager.tagKeys.setIamPolicy",
      "resourcemanager.tagValues.getIamPolicy",
      "resourcemanager.tagValues.list",
      "resourcemanager.tagValues.setIamPolicy",
      "resourcesettings.settings.list",
      "retail.catalogs.list",
      "retail.controls.list",
      "retail.models.list",
      "retail.operations.list",
      "retail.products.list",
      "retail.servingConfigs.list",
      "riskmanager.controlScoreBreakdowns.list",
      "riskmanager.operations.list",
      "riskmanager.policies.list",
      "riskmanager.reports.list",
      "rma.collectors.list",
      "rma.locations.list",
      "rma.operations.list",
      "run.configurations.list",
      "run.executions.list",
      "run.jobs.getIamPolicy",
      "run.jobs.list",
      "run.jobs.setIamPolicy",
      "run.locations.list",
      "run.operations.list",
      "run.revisions.list",
      "run.routes.list",
      "run.services.getIamPolicy",
      "run.services.list",
      "run.services.setIamPolicy",
      "run.tasks.list",
      "runapps.applications.list",
      "runapps.deployments.list",
      "runapps.locations.list",
      "runapps.operations.list",
      "runtimeconfig.configs.getIamPolicy",
      "runtimeconfig.configs.list",
      "runtimeconfig.configs.setIamPolicy",
      "runtimeconfig.operations.list",
      "runtimeconfig.variables.getIamPolicy",
      "runtimeconfig.variables.list",
      "runtimeconfig.variables.setIamPolicy",
      "runtimeconfig.waiters.getIamPolicy",
      "runtimeconfig.waiters.list",
      "runtimeconfig.waiters.setIamPolicy",
      "secretmanager.locations.list",
      "secretmanager.secrets.getIamPolicy",
      "secretmanager.secrets.list",
      "secretmanager.secrets.setIamPolicy",
      "secretmanager.versions.list",
      "securedlandingzone.overwatches.list",
      "securitycenter.assets.list",
      "securitycenter.attackpaths.list",
      "securitycenter.bigQueryExports.list",
      "securitycenter.effectivesecurityhealthanalyticscustommodules.list",
      "securitycenter.findings.list",
      "securitycenter.muteconfigs.list",
      "securitycenter.notificationconfig.list",
      "securitycenter.resourcevalueconfigs.list",
      "securitycenter.securityhealthanalyticscustommodules.list",
      "securitycenter.sources.getIamPolicy",
      "securitycenter.sources.list",
      "securitycenter.sources.setIamPolicy",
      "securitycenter.valuedresources.list",
      "servicebroker.bindingoperations.list",
      "servicebroker.bindings.getIamPolicy",
      "servicebroker.bindings.list",
      "servicebroker.bindings.setIamPolicy",
      "servicebroker.catalogs.getIamPolicy",
      "servicebroker.catalogs.list",
      "servicebroker.catalogs.setIamPolicy",
      "servicebroker.instanceoperations.list",
      "servicebroker.instances.getIamPolicy",
      "servicebroker.instances.list",
      "servicebroker.instances.setIamPolicy",
      "serviceconsumermanagement.tenancyu.list",
      "servicedirectory.endpoints.getIamPolicy",
      "servicedirectory.endpoints.list",
      "servicedirectory.endpoints.setIamPolicy",
      "servicedirectory.locations.list",
      "servicedirectory.namespaces.getIamPolicy",
      "servicedirectory.namespaces.list",
      "servicedirectory.namespaces.setIamPolicy",
      "servicedirectory.services.getIamPolicy",
      "servicedirectory.services.list",
      "servicedirectory.services.setIamPolicy",
      "servicehealth.events.list",
      "servicehealth.locations.list",
      "servicehealth.organizationEvents.list",
      "servicehealth.organizationImpacts.list",
      "servicemanagement.services.getIamPolicy",
      "servicemanagement.services.list",
      "servicemanagement.services.setIamPolicy",
      "servicenetworking.operations.list",
      "servicesecurityinsights.clusterSecurityInfo.list",
      "servicesecurityinsights.securityInfo.list",
      "servicesecurityinsights.workloadPolicies.list",
      "serviceusage.operations.list",
      "serviceusage.services.list",
      "source.repos.getIamPolicy",
      "source.repos.list",
      "source.repos.setIamPolicy",
      "spanner.backupOperations.list",
      "spanner.backups.getIamPolicy",
      "spanner.backups.list",
      "spanner.backups.setIamPolicy",
      "spanner.databaseOperations.list",
      "spanner.databaseRoles.list",
      "spanner.databases.getIamPolicy",
      "spanner.databases.list",
      "spanner.databases.setIamPolicy",
      "spanner.instanceConfigOperations.list",
      "spanner.instanceConfigs.list",
      "spanner.instanceOperations.list",
      "spanner.instances.getIamPolicy",
      "spanner.instances.list",
      "spanner.instances.setIamPolicy",
      "spanner.sessions.list",
      "speakerid.phrases.list",
      "speakerid.speakers.list",
      "speech.customClasses.list",
      "speech.locations.list",
      "speech.operations.list",
      "speech.phraseSets.list",
      "speech.recognizers.list",
      "stackdriver.resourceMetadata.list",
      "storage.buckets.getIamPolicy",
      "storage.buckets.list",
      "storage.buckets.setIamPolicy",
      "storage.hmacKeys.list",
      "storage.multipartUploads.list",
      "storage.objects.getIamPolicy",
      "storage.objects.list",
      "storage.objects.setIamPolicy",
      "storageinsights.locations.list",
      "storageinsights.operations.list",
      "storageinsights.reportConfigs.list",
      "storageinsights.reportDetails.list",
      "storagetransfer.agentpools.list",
      "storagetransfer.jobs.list",
      "storagetransfer.operations.list",
      "stream.locations.list",
      "stream.operations.list",
      "stream.streamContents.list",
      "stream.streamInstances.list",
      "timeseriesinsights.datasets.list",
      "timeseriesinsights.locations.list",
      "tpu.acceleratortypes.list",
      "tpu.locations.list",
      "tpu.nodes.list",
      "tpu.operations.list",
      "tpu.runtimeversions.list",
      "tpu.tensorflowversions.list",
      "transcoder.jobTemplates.list",
      "transcoder.jobs.list",
      "transferappliance.appliances.list",
      "transferappliance.locations.list",
      "transferappliance.operations.list",
      "transferappliance.orders.list",
      "transferappliance.savedAddresses.list",
      "translationhub.portals.list",
      "videostitcher.cdnKeys.list",
      "videostitcher.liveAdTagDetails.list",
      "videostitcher.slates.list",
      "videostitcher.vodAdTagDetails.list",
      "videostitcher.vodStitchDetails.list",
      "visionai.analyses.getIamPolicy",
      "visionai.analyses.list",
      "visionai.analyses.setIamPolicy",
      "visionai.annotations.list",
      "visionai.applications.list",
      "visionai.assets.list",
      "visionai.clusters.getIamPolicy",
      "visionai.clusters.list",
      "visionai.clusters.setIamPolicy",
      "visionai.corpora.list",
      "visionai.dataSchemas.list",
      "visionai.drafts.list",
      "visionai.events.getIamPolicy",
      "visionai.events.list",
      "visionai.events.setIamPolicy",
      "visionai.instances.list",
      "visionai.locations.list",
      "visionai.operations.list",
      "visionai.operators.getIamPolicy",
      "visionai.operators.list",
      "visionai.operators.setIamPolicy",
      "visionai.processors.list",
      "visionai.searchConfigs.list",
      "visionai.series.getIamPolicy",
      "visionai.series.list",
      "visionai.series.setIamPolicy",
      "visionai.streams.getIamPolicy",
      "visionai.streams.list",
      "visionai.streams.setIamPolicy",
      "visionai.uistreams.list",
      "visualinspection.annotationSets.list",
      "visualinspection.annotationSpecs.list",
      "visualinspection.annotations.list",
      "visualinspection.datasets.list",
      "visualinspection.images.list",
      "visualinspection.locations.list",
      "visualinspection.modelEvaluations.list",
      "visualinspection.models.list",
      "visualinspection.modules.list",
      "visualinspection.operations.list",
      "visualinspection.solutionArtifacts.list",
      "visualinspection.solutions.list",
      "vmmigration.cloneJobs.list",
      "vmmigration.cutoverJobs.list",
      "vmmigration.datacenterConnectors.list",
      "vmmigration.deployments.list",
      "vmmigration.groups.list",
      "vmmigration.locations.list",
      "vmmigration.migratingVms.list",
      "vmmigration.operations.list",
      "vmmigration.replicationCycles.list",
      "vmmigration.sources.list",
      "vmmigration.targets.list",
      "vmmigration.utilizationReports.list",
      "vmwareengine.clusters.getIamPolicy",
      "vmwareengine.clusters.list",
      "vmwareengine.clusters.setIamPolicy",
      "vmwareengine.hcxActivationKeys.getIamPolicy",
      "vmwareengine.hcxActivationKeys.list",
      "vmwareengine.hcxActivationKeys.setIamPolicy",
      "vmwareengine.locations.list",
      "vmwareengine.networkPolicies.list",
      "vmwareengine.nodeTypes.list",
      "vmwareengine.operations.list",
      "vmwareengine.privateClouds.getIamPolicy",
      "vmwareengine.privateClouds.list",
      "vmwareengine.privateClouds.setIamPolicy",
      "vmwareengine.privateConnections.list",
      "vmwareengine.subnets.list",
      "vmwareengine.vmwareEngineNetworks.list",
      "vpcaccess.connectors.list",
      "vpcaccess.locations.list",
      "vpcaccess.operations.list",
      "workflows.executions.list",
      "workflows.locations.list",
      "workflows.operations.list",
      "workflows.workflows.list",
      "workloadcertificate.locations.list",
      "workloadcertificate.operations.list",
      "workloadcertificate.workloadRegistrations.list",
      "workloadmanager.evaluations.list",
      "workloadmanager.executions.list",
      "workloadmanager.locations.list",
      "workloadmanager.operations.list",
      "workloadmanager.results.list",
      "workloadmanager.rules.list",
      "workstations.workstationClusters.list",
      "workstations.workstationConfigs.getIamPolicy",
      "workstations.workstationConfigs.list",
      "workstations.workstationConfigs.setIamPolicy",
      "workstations.workstations.getIamPolicy",
      "workstations.workstations.list",
      "workstations.workstations.setIamPolicy"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/iam.securityReviewer",
    "title": "Security Reviewer",
    "description": "Security reviewer role, with permissions to get any IAM policy.",
    "includedPermissions": [
      "accessapproval.requests.list",
      "accesscontextmanager.accessLevels.list",
      "accesscontextmanager.accessPolicies.getIamPolicy",
      "accesscontextmanager.accessPolicies.list",
      "accesscontextmanager.accessZones.list",
      "accesscontextmanager.authorizedOrgsDescs.list",
      "accesscontextmanager.gcpUserAccessBindings.list",
      "accesscontextmanager.policies.getIamPolicy",
      "accesscontextmanager.policies.list",
      "accesscontextmanager.servicePerimeters.list",
      "actions.agentVersions.list",
      "advisorynotifications.notifications.get",
      "advisorynotifications.notifications.list",
      "aiplatform.annotationSpecs.list",
      "aiplatform.annotations.list",
      "aiplatform.artifacts.list",
      "aiplatform.batchPredictionJobs.list",
      "aiplatform.contexts.list",
      "aiplatform.customJobs.list",
      "aiplatform.dataItems.list",
      "aiplatform.dataLabelingJobs.list",
      "aiplatform.datasets.list",
      "aiplatform.deploymentResourcePools.list",
      "aiplatform.edgeDeploymentJobs.list",
      "aiplatform.edgeDevices.list",
      "aiplatform.endpoints.list",
      "aiplatform.entityTypes.getIamPolicy",
      "aiplatform.entityTypes.list",
      "aiplatform.executions.list",
      "aiplatform.featureOnlineStores.list",
      "aiplatform.featureViewSyncs.list",
      "aiplatform.featureViews.list",
      "aiplatform.features.list",
      "aiplatform.featurestores.getIamPolicy",
      "aiplatform.featurestores.list",
      "aiplatform.humanInTheLoops.list",
      "aiplatform.hyperparameterTuningJobs.list",
      "aiplatform.indexEndpoints.list",
      "aiplatform.indexes.list",
      "aiplatform.locations.list",
      "aiplatform.metadataSchemas.list",
      "aiplatform.metadataStores.list",
      "aiplatform.modelDeploymentMonitoringJobs.list",
      "aiplatform.modelEvaluationSlices.list",
      "aiplatform.modelEvaluations.list",
      "aiplatform.models.list",
      "aiplatform.nasJobs.list",
      "aiplatform.nasTrialDetails.list",
      "aiplatform.operations.list",
      "aiplatform.persistentResources.list",
      "aiplatform.pipelineJobs.list",
      "aiplatform.schedules.list",
      "aiplatform.specialistPools.list",
      "aiplatform.studies.list",
      "aiplatform.tensorboardExperiments.list",
      "aiplatform.tensorboardRuns.list",
      "aiplatform.tensorboardTimeSeries.list",
      "aiplatform.tensorboards.list",
      "aiplatform.trainingPipelines.list",
      "aiplatform.trials.list",
      "alloydb.backups.list",
      "alloydb.clusters.list",
      "alloydb.instances.list",
      "alloydb.locations.list",
      "alloydb.operations.list",
      "alloydb.supportedDatabaseFlags.list",
      "alloydb.users.list",
      "analyticshub.dataExchanges.getIamPolicy",
      "analyticshub.dataExchanges.list",
      "analyticshub.listings.getIamPolicy",
      "analyticshub.listings.list",
      "analyticshub.subscriptions.list",
      "apigateway.apiconfigs.getIamPolicy",
      "apigateway.apiconfigs.list",
      "apigateway.apis.getIamPolicy",
      "apigateway.apis.list",
      "apigateway.gateways.getIamPolicy",
      "apigateway.gateways.list",
      "apigateway.locations.list",
      "apigateway.operations.list",
      "apigee.apiproductattributes.list",
      "apigee.apiproducts.list",
      "apigee.appgroupapps.list",
      "apigee.appgroups.list",
      "apigee.apps.list",
      "apigee.archivedeployments.list",
      "apigee.caches.list",
      "apigee.datacollectors.list",
      "apigee.datastores.list",
      "apigee.deployments.list",
      "apigee.developerappattributes.list",
      "apigee.developerapps.list",
      "apigee.developerattributes.list",
      "apigee.developers.list",
      "apigee.developersubscriptions.list",
      "apigee.endpointattachments.list",
      "apigee.envgroupattachments.list",
      "apigee.envgroups.list",
      "apigee.environments.getIamPolicy",
      "apigee.environments.list",
      "apigee.exports.list",
      "apigee.flowhooks.list",
      "apigee.hostqueries.list",
      "apigee.hostsecurityreports.list",
      "apigee.instanceattachments.list",
      "apigee.instances.list",
      "apigee.keystorealiases.list",
      "apigee.keystores.list",
      "apigee.keyvaluemapentries.list",
      "apigee.keyvaluemaps.list",
      "apigee.nataddresses.list",
      "apigee.operations.list",
      "apigee.organizations.list",
      "apigee.portals.list",
      "apigee.proxies.list",
      "apigee.proxyrevisions.list",
      "apigee.queries.list",
      "apigee.rateplans.list",
      "apigee.references.list",
      "apigee.reports.list",
      "apigee.resourcefiles.list",
      "apigee.securityActions.list",
      "apigee.securityIncidents.list",
      "apigee.securityProfiles.list",
      "apigee.securityreports.list",
      "apigee.sharedflowrevisions.list",
      "apigee.sharedflows.list",
      "apigee.targetservers.list",
      "apigee.traceconfigoverrides.list",
      "apigee.tracesessions.list",
      "apigeeconnect.connections.list",
      "apigeeregistry.apis.getIamPolicy",
      "apigeeregistry.apis.list",
      "apigeeregistry.artifacts.getIamPolicy",
      "apigeeregistry.artifacts.list",
      "apigeeregistry.deployments.list",
      "apigeeregistry.locations.list",
      "apigeeregistry.operations.list",
      "apigeeregistry.specs.getIamPolicy",
      "apigeeregistry.specs.list",
      "apigeeregistry.versions.getIamPolicy",
      "apigeeregistry.versions.list",
      "apikeys.keys.list",
      "appengine.instances.list",
      "appengine.memcache.list",
      "appengine.operations.list",
      "appengine.services.list",
      "appengine.versions.list",
      "applianceactivation.rttCommands.list",
      "artifactregistry.dockerimages.list",
      "artifactregistry.files.list",
      "artifactregistry.locations.list",
      "artifactregistry.mavenartifacts.list",
      "artifactregistry.npmpackages.list",
      "artifactregistry.packages.list",
      "artifactregistry.pythonpackages.list",
      "artifactregistry.repositories.getIamPolicy",
      "artifactregistry.repositories.list",
      "artifactregistry.tags.list",
      "artifactregistry.versions.list",
      "assuredworkloads.operations.list",
      "assuredworkloads.violations.list",
      "assuredworkloads.workload.list",
      "automl.annotationSpecs.list",
      "automl.annotations.list",
      "automl.columnSpecs.list",
      "automl.datasets.getIamPolicy",
      "automl.datasets.list",
      "automl.examples.list",
      "automl.files.list",
      "automl.humanAnnotationTasks.list",
      "automl.locations.getIamPolicy",
      "automl.locations.list",
      "automl.modelEvaluations.list",
      "automl.models.getIamPolicy",
      "automl.models.list",
      "automl.operations.list",
      "automl.tableSpecs.list",
      "automlrecommendations.apiKeys.list",
      "automlrecommendations.catalogItems.list",
      "automlrecommendations.catalogs.list",
      "automlrecommendations.eventStores.list",
      "automlrecommendations.events.list",
      "automlrecommendations.placements.list",
      "automlrecommendations.recommendations.list",
      "autoscaling.sites.getIamPolicy",
      "backupdr.locations.list",
      "backupdr.managementServers.getIamPolicy",
      "backupdr.managementServers.list",
      "backupdr.operations.list",
      "baremetalsolution.instancequotas.list",
      "baremetalsolution.instances.list",
      "baremetalsolution.luns.list",
      "baremetalsolution.maintenanceevents.list",
      "baremetalsolution.networkquotas.list",
      "baremetalsolution.networks.list",
      "baremetalsolution.nfsshares.list",
      "baremetalsolution.osimages.list",
      "baremetalsolution.procurements.list",
      "baremetalsolution.skus.list",
      "baremetalsolution.snapshotschedulepolicies.list",
      "baremetalsolution.sshKeys.list",
      "baremetalsolution.storageaggregatepools.list",
      "baremetalsolution.volumequotas.list",
      "baremetalsolution.volumes.list",
      "baremetalsolution.volumesnapshots.list",
      "batch.jobs.list",
      "batch.locations.list",
      "batch.operations.list",
      "batch.tasks.list",
      "beyondcorp.appConnections.getIamPolicy",
      "beyondcorp.appConnections.list",
      "beyondcorp.appConnectors.getIamPolicy",
      "beyondcorp.appConnectors.list",
      "beyondcorp.appGateways.getIamPolicy",
      "beyondcorp.appGateways.list",
      "beyondcorp.clientConnectorServices.getIamPolicy",
      "beyondcorp.clientConnectorServices.list",
      "beyondcorp.clientGateways.getIamPolicy",
      "beyondcorp.clientGateways.list",
      "beyondcorp.locations.list",
      "beyondcorp.operations.list",
      "beyondcorp.subscriptions.list",
      "biglake.catalogs.list",
      "biglake.databases.list",
      "biglake.locks.list",
      "biglake.tables.list",
      "bigquery.capacityCommitments.list",
      "bigquery.connections.getIamPolicy",
      "bigquery.connections.list",
      "bigquery.dataPolicies.getIamPolicy",
      "bigquery.dataPolicies.list",
      "bigquery.datasets.getIamPolicy",
      "bigquery.jobs.list",
      "bigquery.models.list",
      "bigquery.reservationAssignments.list",
      "bigquery.reservations.list",
      "bigquery.routines.list",
      "bigquery.rowAccessPolicies.getIamPolicy",
      "bigquery.rowAccessPolicies.list",
      "bigquery.savedqueries.list",
      "bigquery.tables.getIamPolicy",
      "bigquery.tables.list",
      "bigquerymigration.locations.list",
      "bigquerymigration.subtasks.list",
      "bigquerymigration.workflows.list",
      "bigtable.appProfiles.list",
      "bigtable.backups.getIamPolicy",
      "bigtable.backups.list",
      "bigtable.clusters.list",
      "bigtable.hotTablets.list",
      "bigtable.instances.getIamPolicy",
      "bigtable.instances.list",
      "bigtable.keyvisualizer.list",
      "bigtable.locations.list",
      "bigtable.tables.getIamPolicy",
      "bigtable.tables.list",
      "billing.accounts.getIamPolicy",
      "billing.accounts.list",
      "billing.billingAccountServices.list",
      "billing.billingAccountSkuGroupSkus.list",
      "billing.billingAccountSkuGroups.list",
      "billing.billingAccountSkus.list",
      "billing.budgets.list",
      "billing.credits.list",
      "billing.resourceAssociations.list",
      "billing.subscriptions.list",
      "binaryauthorization.attestors.getIamPolicy",
      "binaryauthorization.attestors.list",
      "binaryauthorization.continuousValidationConfig.getIamPolicy",
      "binaryauthorization.platformPolicies.list",
      "binaryauthorization.policy.getIamPolicy",
      "blockchainnodeengine.blockchainNodes.list",
      "blockchainnodeengine.locations.list",
      "blockchainnodeengine.operations.list",
      "carestudio.patients.list",
      "certificatemanager.certissuanceconfigs.list",
      "certificatemanager.certmapentries.getIamPolicy",
      "certificatemanager.certmapentries.list",
      "certificatemanager.certmaps.getIamPolicy",
      "certificatemanager.certmaps.list",
      "certificatemanager.certs.getIamPolicy",
      "certificatemanager.certs.list",
      "certificatemanager.dnsauthorizations.getIamPolicy",
      "certificatemanager.dnsauthorizations.list",
      "certificatemanager.locations.list",
      "certificatemanager.operations.list",
      "certificatemanager.trustconfigs.list",
      "chronicle.collectors.list",
      "chronicle.curatedRuleSetCategories.list",
      "chronicle.curatedRuleSetDeployments.list",
      "chronicle.curatedRuleSets.list",
      "chronicle.curatedRules.list",
      "chronicle.dashboards.list",
      "chronicle.extensionValidationReports.list",
      "chronicle.feedSourceTypeSchemas.list",
      "chronicle.feeds.list",
      "chronicle.forwarders.list",
      "chronicle.logTypeSchemas.list",
      "chronicle.operations.list",
      "chronicle.parserExtensions.list",
      "chronicle.parsers.list",
      "chronicle.parsingErrors.list",
      "chronicle.referenceLists.list",
      "chronicle.retrohunts.list",
      "chronicle.ruleDeployments.list",
      "chronicle.ruleExecutionErrors.list",
      "chronicle.rules.list",
      "chronicle.validationErrors.list",
      "clientauthconfig.brands.list",
      "clientauthconfig.clients.list",
      "cloud.locations.list",
      "cloudasset.feeds.list",
      "cloudasset.savedqueries.list",
      "cloudbuild.builds.list",
      "cloudbuild.connections.getIamPolicy",
      "cloudbuild.connections.list",
      "cloudbuild.integrations.list",
      "cloudbuild.operations.list",
      "cloudbuild.repositories.list",
      "cloudbuild.workerpools.list",
      "cloudcontrolspartner.customers.list",
      "cloudcontrolspartner.violations.list",
      "cloudcontrolspartner.workloads.list",
      "clouddebugger.breakpoints.list",
      "clouddebugger.debuggees.list",
      "clouddeploy.deliveryPipelines.getIamPolicy",
      "clouddeploy.deliveryPipelines.list",
      "clouddeploy.jobRuns.list",
      "clouddeploy.locations.list",
      "clouddeploy.operations.list",
      "clouddeploy.releases.list",
      "clouddeploy.rollouts.list",
      "clouddeploy.targets.getIamPolicy",
      "clouddeploy.targets.list",
      "cloudfunctions.functions.getIamPolicy",
      "cloudfunctions.functions.list",
      "cloudfunctions.locations.list",
      "cloudfunctions.operations.list",
      "cloudfunctions.runtimes.list",
      "cloudiot.devices.list",
      "cloudiot.registries.getIamPolicy",
      "cloudiot.registries.list",
      "cloudjobdiscovery.companies.list",
      "cloudkms.cryptoKeyVersions.list",
      "cloudkms.cryptoKeys.getIamPolicy",
      "cloudkms.cryptoKeys.list",
      "cloudkms.ekmConfigs.getIamPolicy",
      "cloudkms.ekmConnections.getIamPolicy",
      "cloudkms.ekmConnections.list",
      "cloudkms.importJobs.getIamPolicy",
      "cloudkms.importJobs.list",
      "cloudkms.keyRings.getIamPolicy",
      "cloudkms.keyRings.list",
      "cloudkms.locations.list",
      "cloudnotifications.activities.list",
      "cloudonefs.isiloncloud.com/clusters.list",
      "cloudonefs.isiloncloud.com/fileshares.list",
      "cloudprivatecatalogproducer.associations.list",
      "cloudprivatecatalogproducer.catalogAssociations.list",
      "cloudprivatecatalogproducer.catalogs.getIamPolicy",
      "cloudprivatecatalogproducer.catalogs.list",
      "cloudprivatecatalogproducer.producerCatalogs.getIamPolicy",
      "cloudprivatecatalogproducer.producerCatalogs.list",
      "cloudprivatecatalogproducer.products.getIamPolicy",
      "cloudprivatecatalogproducer.products.list",
      "cloudprofiler.profiles.list",
      "cloudscheduler.jobs.list",
      "cloudscheduler.locations.list",
      "cloudsecurityscanner.crawledurls.list",
      "cloudsecurityscanner.results.list",
      "cloudsecurityscanner.scanruns.list",
      "cloudsecurityscanner.scans.list",
      "cloudsql.backupRuns.list",
      "cloudsql.databases.list",
      "cloudsql.instances.list",
      "cloudsql.sslCerts.list",
      "cloudsql.users.list",
      "cloudsupport.accounts.getIamPolicy",
      "cloudsupport.accounts.list",
      "cloudsupport.techCases.list",
      "cloudtasks.locations.list",
      "cloudtasks.queues.getIamPolicy",
      "cloudtasks.queues.list",
      "cloudtasks.tasks.list",
      "cloudtoolresults.executions.list",
      "cloudtoolresults.histories.list",
      "cloudtoolresults.steps.list",
      "cloudtrace.insights.list",
      "cloudtrace.tasks.list",
      "cloudtrace.traces.list",
      "cloudtranslate.customModels.list",
      "cloudtranslate.datasets.list",
      "cloudtranslate.glossaries.list",
      "cloudtranslate.glossaryentries.list",
      "cloudtranslate.locations.list",
      "cloudtranslate.operations.list",
      "cloudvolumesgcp-api.netapp.com/activeDirectories.list",
      "cloudvolumesgcp-api.netapp.com/ipRanges.list",
      "cloudvolumesgcp-api.netapp.com/jobs.list",
      "cloudvolumesgcp-api.netapp.com/regions.list",
      "cloudvolumesgcp-api.netapp.com/serviceLevels.list",
      "cloudvolumesgcp-api.netapp.com/snapshots.list",
      "cloudvolumesgcp-api.netapp.com/volumereplication.list",
      "cloudvolumesgcp-api.netapp.com/volumes.list",
      "commerceagreementpublishing.agreements.list",
      "commerceagreementpublishing.documents.list",
      "commercebusinessenablement.partnerAccounts.list",
      "commercebusinessenablement.resellerDiscountOffers.list",
      "commerceoffercatalog.agreements.list",
      "commerceoffercatalog.documents.list",
      "commerceorggovernance.collections.list",
      "commerceorggovernance.services.list",
      "commerceprice.events.list",
      "commerceprice.privateoffers.list",
      "composer.dags.list",
      "composer.environments.list",
      "composer.imageversions.list",
      "composer.operations.list",
      "compute.acceleratorTypes.list",
      "compute.addresses.list",
      "compute.autoscalers.list",
      "compute.backendBuckets.getIamPolicy",
      "compute.backendBuckets.list",
      "compute.backendServices.getIamPolicy",
      "compute.backendServices.list",
      "compute.commitments.list",
      "compute.diskTypes.list",
      "compute.disks.getIamPolicy",
      "compute.disks.list",
      "compute.externalVpnGateways.list",
      "compute.firewallPolicies.getIamPolicy",
      "compute.firewallPolicies.list",
      "compute.firewalls.list",
      "compute.forwardingRules.list",
      "compute.futureReservations.getIamPolicy",
      "compute.futureReservations.list",
      "compute.globalAddresses.list",
      "compute.globalForwardingRules.list",
      "compute.globalNetworkEndpointGroups.list",
      "compute.globalOperations.getIamPolicy",
      "compute.globalOperations.list",
      "compute.globalPublicDelegatedPrefixes.list",
      "compute.healthChecks.list",
      "compute.httpHealthChecks.list",
      "compute.httpsHealthChecks.list",
      "compute.images.getIamPolicy",
      "compute.images.list",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroups.list",
      "compute.instanceTemplates.getIamPolicy",
      "compute.instanceTemplates.list",
      "compute.instances.getIamPolicy",
      "compute.instances.list",
      "compute.instantSnapshots.getIamPolicy",
      "compute.instantSnapshots.list",
      "compute.interconnectAttachments.list",
      "compute.interconnectLocations.list",
      "compute.interconnectRemoteLocations.list",
      "compute.interconnects.list",
      "compute.licenseCodes.getIamPolicy",
      "compute.licenseCodes.list",
      "compute.licenses.getIamPolicy",
      "compute.licenses.list",
      "compute.machineImages.getIamPolicy",
      "compute.machineImages.list",
      "compute.machineTypes.list",
      "compute.maintenancePolicies.getIamPolicy",
      "compute.maintenancePolicies.list",
      "compute.networkAttachments.getIamPolicy",
      "compute.networkAttachments.list",
      "compute.networkEdgeSecurityServices.list",
      "compute.networkEndpointGroups.getIamPolicy",
      "compute.networkEndpointGroups.list",
      "compute.networks.list",
      "compute.nodeGroups.getIamPolicy",
      "compute.nodeGroups.list",
      "compute.nodeTemplates.getIamPolicy",
      "compute.nodeTemplates.list",
      "compute.nodeTypes.list",
      "compute.packetMirrorings.list",
      "compute.publicAdvertisedPrefixes.list",
      "compute.publicDelegatedPrefixes.list",
      "compute.regionBackendServices.getIamPolicy",
      "compute.regionBackendServices.list",
      "compute.regionFirewallPolicies.getIamPolicy",
      "compute.regionFirewallPolicies.list",
      "compute.regionHealthCheckServices.list",
      "compute.regionHealthChecks.list",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionNotificationEndpoints.list",
      "compute.regionOperations.getIamPolicy",
      "compute.regionOperations.list",
      "compute.regionSecurityPolicies.list",
      "compute.regionSslCertificates.list",
      "compute.regionSslPolicies.list",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetTcpProxies.list",
      "compute.regionUrlMaps.list",
      "compute.regions.list",
      "compute.reservations.list",
      "compute.resourcePolicies.getIamPolicy",
      "compute.resourcePolicies.list",
      "compute.routers.list",
      "compute.routes.list",
      "compute.securityPolicies.getIamPolicy",
      "compute.securityPolicies.list",
      "compute.serviceAttachments.getIamPolicy",
      "compute.serviceAttachments.list",
      "compute.snapshots.getIamPolicy",
      "compute.snapshots.list",
      "compute.sslCertificates.list",
      "compute.sslPolicies.list",
      "compute.subnetworks.getIamPolicy",
      "compute.subnetworks.list",
      "compute.targetGrpcProxies.list",
      "compute.targetHttpProxies.list",
      "compute.targetHttpsProxies.list",
      "compute.targetInstances.list",
      "compute.targetPools.list",
      "compute.targetSslProxies.list",
      "compute.targetTcpProxies.list",
      "compute.targetVpnGateways.list",
      "compute.urlMaps.list",
      "compute.vpnGateways.list",
      "compute.vpnTunnels.list",
      "compute.zoneOperations.getIamPolicy",
      "compute.zoneOperations.list",
      "compute.zones.list",
      "confidentialcomputing.locations.list",
      "config.deployments.getIamPolicy",
      "config.deployments.list",
      "config.locations.list",
      "config.operations.list",
      "config.resources.list",
      "config.revisions.list",
      "connectors.actions.list",
      "connectors.connections.getIamPolicy",
      "connectors.connections.list",
      "connectors.connectors.list",
      "connectors.endpointAttachments.getIamPolicy",
      "connectors.endpointAttachments.list",
      "connectors.entities.list",
      "connectors.entityTypes.list",
      "connectors.eventSubscriptions.list",
      "connectors.eventtypes.list",
      "connectors.locations.list",
      "connectors.managedZones.getIamPolicy",
      "connectors.managedZones.list",
      "connectors.operations.list",
      "connectors.providers.list",
      "connectors.versions.list",
      "consumerprocurement.accounts.list",
      "consumerprocurement.consents.list",
      "consumerprocurement.entitlements.list",
      "consumerprocurement.events.list",
      "consumerprocurement.freeTrials.list",
      "consumerprocurement.orderAttributions.list",
      "consumerprocurement.orders.list",
      "contactcenteraiplatform.contactCenters.list",
      "contactcenteraiplatform.locations.list",
      "contactcenteraiplatform.operations.list",
      "contactcenterinsights.analyses.list",
      "contactcenterinsights.conversations.list",
      "contactcenterinsights.issueModels.list",
      "contactcenterinsights.issues.list",
      "contactcenterinsights.operations.list",
      "contactcenterinsights.phraseMatchers.list",
      "contactcenterinsights.views.list",
      "container.apiServices.list",
      "container.auditSinks.list",
      "container.backendConfigs.list",
      "container.bindings.list",
      "container.certificateSigningRequests.list",
      "container.clusterRoleBindings.list",
      "container.clusterRoles.list",
      "container.clusters.list",
      "container.componentStatuses.list",
      "container.configMaps.list",
      "container.controllerRevisions.list",
      "container.cronJobs.list",
      "container.csiDrivers.list",
      "container.csiNodeInfos.list",
      "container.csiNodes.list",
      "container.customResourceDefinitions.list",
      "container.daemonSets.list",
      "container.deployments.list",
      "container.endpointSlices.list",
      "container.endpoints.list",
      "container.events.list",
      "container.frontendConfigs.list",
      "container.horizontalPodAutoscalers.list",
      "container.ingresses.list",
      "container.initializerConfigurations.list",
      "container.jobs.list",
      "container.leases.list",
      "container.limitRanges.list",
      "container.localSubjectAccessReviews.list",
      "container.managedCertificates.list",
      "container.mutatingWebhookConfigurations.list",
      "container.namespaces.list",
      "container.networkPolicies.list",
      "container.nodes.list",
      "container.operations.list",
      "container.persistentVolumeClaims.list",
      "container.persistentVolumes.list",
      "container.petSets.list",
      "container.podDisruptionBudgets.list",
      "container.podPresets.list",
      "container.podSecurityPolicies.list",
      "container.podTemplates.list",
      "container.pods.list",
      "container.priorityClasses.list",
      "container.replicaSets.list",
      "container.replicationControllers.list",
      "container.resourceQuotas.list",
      "container.roleBindings.list",
      "container.roles.list",
      "container.runtimeClasses.list",
      "container.scheduledJobs.list",
      "container.selfSubjectAccessReviews.list",
      "container.serviceAccounts.list",
      "container.services.list",
      "container.statefulSets.list",
      "container.storageClasses.list",
      "container.storageStates.list",
      "container.storageVersionMigrations.list",
      "container.subjectAccessReviews.list",
      "container.thirdPartyObjects.list",
      "container.thirdPartyResources.list",
      "container.updateInfos.list",
      "container.validatingWebhookConfigurations.list",
      "container.volumeAttachments.list",
      "container.volumeSnapshotClasses.list",
      "container.volumeSnapshotContents.list",
      "container.volumeSnapshots.list",
      "containeranalysis.notes.getIamPolicy",
      "containeranalysis.notes.list",
      "containeranalysis.occurrences.getIamPolicy",
      "containeranalysis.occurrences.list",
      "containersecurity.clusterSummaries.list",
      "containersecurity.findings.list",
      "containersecurity.locations.list",
      "containersecurity.workloadConfigAudits.list",
      "contentwarehouse.documentSchemas.list",
      "contentwarehouse.documents.getIamPolicy",
      "contentwarehouse.ruleSets.list",
      "contentwarehouse.schemas.list",
      "contentwarehouse.synonymSets.list",
      "datacatalog.categories.getIamPolicy",
      "datacatalog.entries.getIamPolicy",
      "datacatalog.entries.list",
      "datacatalog.entryGroups.getIamPolicy",
      "datacatalog.entryGroups.list",
      "datacatalog.operations.list",
      "datacatalog.relationships.list",
      "datacatalog.tagTemplates.getIamPolicy",
      "datacatalog.taxonomies.getIamPolicy",
      "datacatalog.taxonomies.list",
      "dataconnectors.connectors.getIamPolicy",
      "dataconnectors.connectors.list",
      "dataconnectors.locations.list",
      "dataconnectors.operations.list",
      "dataflow.jobs.list",
      "dataflow.messages.list",
      "dataflow.snapshots.list",
      "dataform.compilationResults.list",
      "dataform.locations.list",
      "dataform.releaseConfigs.list",
      "dataform.repositories.getIamPolicy",
      "dataform.repositories.list",
      "dataform.workflowConfigs.list",
      "dataform.workflowInvocations.list",
      "dataform.workspaces.getIamPolicy",
      "dataform.workspaces.list",
      "datafusion.artifacts.list",
      "datafusion.instances.getIamPolicy",
      "datafusion.instances.list",
      "datafusion.locations.list",
      "datafusion.operations.list",
      "datafusion.pipelineConnections.list",
      "datafusion.pipelines.list",
      "datafusion.profiles.list",
      "datafusion.secureKeys.list",
      "datalabeling.annotateddatasets.list",
      "datalabeling.annotationspecsets.list",
      "datalabeling.dataitems.list",
      "datalabeling.datasets.list",
      "datalabeling.examples.list",
      "datalabeling.instructions.list",
      "datalabeling.operations.list",
      "datalineage.events.list",
      "datalineage.processes.list",
      "datalineage.runs.list",
      "datamigration.connectionprofiles.getIamPolicy",
      "datamigration.connectionprofiles.list",
      "datamigration.conversionworkspaces.getIamPolicy",
      "datamigration.conversionworkspaces.list",
      "datamigration.locations.list",
      "datamigration.mappingrules.getIamPolicy",
      "datamigration.migrationjobs.getIamPolicy",
      "datamigration.migrationjobs.list",
      "datamigration.operations.list",
      "datamigration.privateconnections.getIamPolicy",
      "datamigration.privateconnections.list",
      "datapipelines.jobs.list",
      "datapipelines.pipelines.list",
      "dataplex.assetActions.list",
      "dataplex.assets.getIamPolicy",
      "dataplex.assets.list",
      "dataplex.content.getIamPolicy",
      "dataplex.content.list",
      "dataplex.dataAttributeBindings.getIamPolicy",
      "dataplex.dataAttributeBindings.list",
      "dataplex.dataAttributes.getIamPolicy",
      "dataplex.dataAttributes.list",
      "dataplex.dataTaxonomies.getIamPolicy",
      "dataplex.dataTaxonomies.list",
      "dataplex.datascans.getIamPolicy",
      "dataplex.datascans.list",
      "dataplex.entities.list",
      "dataplex.environments.getIamPolicy",
      "dataplex.environments.list",
      "dataplex.lakeActions.list",
      "dataplex.lakes.getIamPolicy",
      "dataplex.lakes.list",
      "dataplex.locations.list",
      "dataplex.operations.list",
      "dataplex.partitions.list",
      "dataplex.tasks.getIamPolicy",
      "dataplex.tasks.list",
      "dataplex.zoneActions.list",
      "dataplex.zones.getIamPolicy",
      "dataplex.zones.list",
      "dataproc.agents.list",
      "dataproc.autoscalingPolicies.getIamPolicy",
      "dataproc.autoscalingPolicies.list",
      "dataproc.batches.list",
      "dataproc.clusters.getIamPolicy",
      "dataproc.clusters.list",
      "dataproc.jobs.getIamPolicy",
      "dataproc.jobs.list",
      "dataproc.operations.getIamPolicy",
      "dataproc.operations.list",
      "dataproc.workflowTemplates.getIamPolicy",
      "dataproc.workflowTemplates.list",
      "dataprocessing.datasources.list",
      "dataprocessing.featurecontrols.list",
      "dataprocessing.groupcontrols.list",
      "datastore.databases.list",
      "datastore.entities.list",
      "datastore.indexes.list",
      "datastore.keyVisualizerScans.list",
      "datastore.locations.list",
      "datastore.namespaces.list",
      "datastore.operations.list",
      "datastore.statistics.list",
      "datastream.connectionProfiles.getIamPolicy",
      "datastream.connectionProfiles.list",
      "datastream.locations.list",
      "datastream.objects.list",
      "datastream.operations.list",
      "datastream.privateConnections.getIamPolicy",
      "datastream.privateConnections.list",
      "datastream.routes.getIamPolicy",
      "datastream.routes.list",
      "datastream.streams.getIamPolicy",
      "datastream.streams.list",
      "datastudio.datasources.getIamPolicy",
      "datastudio.reports.getIamPolicy",
      "datastudio.workspaces.getIamPolicy",
      "deploymentmanager.compositeTypes.list",
      "deploymentmanager.deployments.getIamPolicy",
      "deploymentmanager.deployments.list",
      "deploymentmanager.manifests.list",
      "deploymentmanager.operations.list",
      "deploymentmanager.resources.list",
      "deploymentmanager.typeProviders.list",
      "deploymentmanager.types.list",
      "dialogflow.agents.list",
      "dialogflow.answerrecords.list",
      "dialogflow.callMatchers.list",
      "dialogflow.changelogs.list",
      "dialogflow.contexts.list",
      "dialogflow.conversationDatasets.list",
      "dialogflow.conversationModels.list",
      "dialogflow.conversationProfiles.list",
      "dialogflow.conversations.list",
      "dialogflow.deployments.list",
      "dialogflow.documents.list",
      "dialogflow.entityTypes.list",
      "dialogflow.environments.list",
      "dialogflow.experiments.list",
      "dialogflow.flows.list",
      "dialogflow.integrations.list",
      "dialogflow.intents.list",
      "dialogflow.knowledgeBases.list",
      "dialogflow.messages.list",
      "dialogflow.modelEvaluations.list",
      "dialogflow.pages.list",
      "dialogflow.participants.list",
      "dialogflow.phoneNumberOrders.list",
      "dialogflow.phoneNumbers.list",
      "dialogflow.securitySettings.list",
      "dialogflow.sessionEntityTypes.list",
      "dialogflow.smartMessagingEntries.list",
      "dialogflow.testcases.list",
      "dialogflow.transitionRouteGroups.list",
      "dialogflow.versions.list",
      "dialogflow.webhooks.list",
      "discoveryengine.controls.list",
      "discoveryengine.conversations.list",
      "discoveryengine.dataStores.list",
      "discoveryengine.documents.list",
      "discoveryengine.engines.list",
      "discoveryengine.models.list",
      "discoveryengine.operations.list",
      "discoveryengine.schemas.list",
      "discoveryengine.servingConfigs.list",
      "discoveryengine.targetSites.list",
      "dlp.analyzeRiskTemplates.list",
      "dlp.columnDataProfiles.list",
      "dlp.deidentifyTemplates.list",
      "dlp.estimates.list",
      "dlp.inspectFindings.list",
      "dlp.inspectTemplates.list",
      "dlp.jobTriggers.list",
      "dlp.jobs.list",
      "dlp.locations.list",
      "dlp.projectDataProfiles.list",
      "dlp.storedInfoTypes.list",
      "dlp.subscriptions.list",
      "dlp.tableDataProfiles.list",
      "dns.changes.list",
      "dns.dnsKeys.list",
      "dns.managedZoneOperations.list",
      "dns.managedZones.getIamPolicy",
      "dns.managedZones.list",
      "dns.policies.getIamPolicy",
      "dns.policies.list",
      "dns.resourceRecordSets.list",
      "dns.responsePolicies.list",
      "dns.responsePolicyRules.list",
      "documentai.dataLabelingJobs.list",
      "documentai.evaluations.list",
      "documentai.labelerPools.list",
      "documentai.locations.list",
      "documentai.processorTypes.list",
      "documentai.processorVersions.list",
      "documentai.processors.list",
      "domains.locations.list",
      "domains.operations.list",
      "domains.registrations.getIamPolicy",
      "domains.registrations.list",
      "earthengine.assets.getIamPolicy",
      "earthengine.assets.list",
      "earthengine.operations.list",
      "edgecontainer.clusters.getIamPolicy",
      "edgecontainer.clusters.list",
      "edgecontainer.locations.list",
      "edgecontainer.machines.getIamPolicy",
      "edgecontainer.machines.list",
      "edgecontainer.nodePools.getIamPolicy",
      "edgecontainer.nodePools.list",
      "edgecontainer.operations.list",
      "edgecontainer.vpnConnections.getIamPolicy",
      "edgecontainer.vpnConnections.list",
      "edgenetwork.interconnectAttachments.getIamPolicy",
      "edgenetwork.interconnectAttachments.list",
      "edgenetwork.interconnects.getIamPolicy",
      "edgenetwork.interconnects.list",
      "edgenetwork.locations.list",
      "edgenetwork.networks.getIamPolicy",
      "edgenetwork.networks.list",
      "edgenetwork.operations.list",
      "edgenetwork.routers.getIamPolicy",
      "edgenetwork.routers.list",
      "edgenetwork.routes.list",
      "edgenetwork.subnetworks.getIamPolicy",
      "edgenetwork.subnetworks.list",
      "edgenetwork.zones.list",
      "enterpriseknowledgegraph.entityReconciliationJobs.list",
      "errorreporting.applications.list",
      "errorreporting.errorEvents.list",
      "errorreporting.groups.list",
      "essentialcontacts.contacts.list",
      "eventarc.channelConnections.getIamPolicy",
      "eventarc.channelConnections.list",
      "eventarc.channels.getIamPolicy",
      "eventarc.channels.list",
      "eventarc.locations.list",
      "eventarc.operations.list",
      "eventarc.providers.list",
      "eventarc.triggers.getIamPolicy",
      "eventarc.triggers.list",
      "fcmdata.deliverydata.list",
      "file.backups.list",
      "file.instances.list",
      "file.locations.list",
      "file.operations.list",
      "file.snapshots.list",
      "firebase.clients.list",
      "firebase.links.list",
      "firebase.playLinks.list",
      "firebaseabt.experiments.list",
      "firebaseappdistro.groups.list",
      "firebaseappdistro.releases.list",
      "firebaseappdistro.testers.list",
      "firebasecrashlytics.issues.list",
      "firebasedatabase.instances.list",
      "firebasedynamiclinks.destinations.list",
      "firebasedynamiclinks.domains.list",
      "firebasedynamiclinks.links.list",
      "firebaseextensions.configs.list",
      "firebaseextensionspublisher.extensions.list",
      "firebasehosting.sites.list",
      "firebaseinappmessaging.campaigns.list",
      "firebasemessagingcampaigns.campaigns.list",
      "firebaseml.models.list",
      "firebaseml.modelversions.list",
      "firebasenotifications.messages.list",
      "firebaserules.releases.list",
      "firebaserules.rulesets.list",
      "firebasestorage.buckets.list",
      "fleetengine.deliveryvehicles.list",
      "fleetengine.tasks.list",
      "fleetengine.vehicles.list",
      "gameservices.gameServerClusters.list",
      "gameservices.gameServerConfigs.list",
      "gameservices.gameServerDeployments.list",
      "gameservices.locations.list",
      "gameservices.operations.list",
      "gameservices.realms.list",
      "gcp.redisenterprise.com/databases.list",
      "gcp.redisenterprise.com/subscriptions.list",
      "genomics.datasets.getIamPolicy",
      "genomics.datasets.list",
      "genomics.operations.list",
      "gkebackup.backupPlans.getIamPolicy",
      "gkebackup.backupPlans.list",
      "gkebackup.backups.list",
      "gkebackup.locations.list",
      "gkebackup.operations.list",
      "gkebackup.restorePlans.getIamPolicy",
      "gkebackup.restorePlans.list",
      "gkebackup.restores.list",
      "gkebackup.volumeBackups.list",
      "gkebackup.volumeRestores.list",
      "gkehub.features.getIamPolicy",
      "gkehub.features.list",
      "gkehub.gateway.getIamPolicy",
      "gkehub.locations.list",
      "gkehub.membershipbindings.list",
      "gkehub.memberships.getIamPolicy",
      "gkehub.memberships.list",
      "gkehub.namespaces.list",
      "gkehub.operations.list",
      "gkehub.rbacrolebindings.list",
      "gkehub.scopes.getIamPolicy",
      "gkehub.scopes.list",
      "gkemulticloud.attachedClusters.list",
      "gkemulticloud.awsClusters.list",
      "gkemulticloud.awsNodePools.list",
      "gkemulticloud.azureClients.list",
      "gkemulticloud.azureClusters.list",
      "gkemulticloud.azureNodePools.list",
      "gkemulticloud.operations.list",
      "gkeonprem.bareMetalAdminClusters.getIamPolicy",
      "gkeonprem.bareMetalAdminClusters.list",
      "gkeonprem.bareMetalClusters.getIamPolicy",
      "gkeonprem.bareMetalClusters.list",
      "gkeonprem.bareMetalNodePools.getIamPolicy",
      "gkeonprem.bareMetalNodePools.list",
      "gkeonprem.locations.list",
      "gkeonprem.operations.list",
      "gkeonprem.vmwareAdminClusters.getIamPolicy",
      "gkeonprem.vmwareAdminClusters.list",
      "gkeonprem.vmwareClusters.getIamPolicy",
      "gkeonprem.vmwareClusters.list",
      "gkeonprem.vmwareNodePools.getIamPolicy",
      "gkeonprem.vmwareNodePools.list",
      "gsuiteaddons.deployments.list",
      "healthcare.annotationStores.getIamPolicy",
      "healthcare.annotationStores.list",
      "healthcare.annotations.list",
      "healthcare.attributeDefinitions.list",
      "healthcare.consentArtifacts.list",
      "healthcare.consentStores.getIamPolicy",
      "healthcare.consentStores.list",
      "healthcare.consents.list",
      "healthcare.datasets.getIamPolicy",
      "healthcare.datasets.list",
      "healthcare.dicomStores.getIamPolicy",
      "healthcare.dicomStores.list",
      "healthcare.fhirStores.getIamPolicy",
      "healthcare.fhirStores.list",
      "healthcare.hl7V2Messages.list",
      "healthcare.hl7V2Stores.getIamPolicy",
      "healthcare.hl7V2Stores.list",
      "healthcare.locations.list",
      "healthcare.operations.list",
      "healthcare.userDataMappings.list",
      "iam.denypolicies.list",
      "iam.googleapis.com/workforcePoolProviderKeys.list",
      "iam.googleapis.com/workforcePoolProviders.list",
      "iam.googleapis.com/workforcePools.getIamPolicy",
      "iam.googleapis.com/workforcePools.list",
      "iam.googleapis.com/workloadIdentityPoolProviderKeys.list",
      "iam.googleapis.com/workloadIdentityPoolProviders.list",
      "iam.googleapis.com/workloadIdentityPools.list",
      "iam.roles.get",
      "iam.roles.list",
      "iam.serviceAccountKeys.list",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.getIamPolicy",
      "iam.serviceAccounts.list",
      "iap.tunnel.getIamPolicy",
      "iap.tunnelDestGroups.getIamPolicy",
      "iap.tunnelDestGroups.list",
      "iap.tunnelInstances.getIamPolicy",
      "iap.tunnelLocations.getIamPolicy",
      "iap.tunnelZones.getIamPolicy",
      "iap.web.getIamPolicy",
      "iap.webServiceVersions.getIamPolicy",
      "iap.webServices.getIamPolicy",
      "iap.webTypes.getIamPolicy",
      "identitytoolkit.tenants.getIamPolicy",
      "identitytoolkit.tenants.list",
      "ids.endpoints.getIamPolicy",
      "ids.endpoints.list",
      "ids.locations.list",
      "ids.operations.list",
      "integrations.apigeeAuthConfigs.list",
      "integrations.apigeeCertificates.list",
      "integrations.apigeeExecutions.list",
      "integrations.apigeeIntegrationVers.list",
      "integrations.apigeeIntegrations.list",
      "integrations.apigeeSfdcChannels.list",
      "integrations.apigeeSfdcInstances.list",
      "integrations.apigeeSuspensions.list",
      "integrations.authConfigs.list",
      "integrations.certificates.list",
      "integrations.executions.list",
      "integrations.integrationVersions.list",
      "integrations.integrations.list",
      "integrations.securityAuthConfigs.list",
      "integrations.securityExecutions.list",
      "integrations.securityIntegTempVers.list",
      "integrations.securityIntegrationVers.list",
      "integrations.securityIntegrations.list",
      "integrations.sfdcChannels.list",
      "integrations.sfdcInstances.list",
      "integrations.suspensions.list",
      "issuerswitch.accountManagerTransactions.list",
      "issuerswitch.complaintTransactions.list",
      "issuerswitch.financialTransactions.list",
      "issuerswitch.mandateTransactions.list",
      "issuerswitch.metadataTransactions.list",
      "issuerswitch.operations.list",
      "issuerswitch.ruleMetadata.list",
      "issuerswitch.ruleMetadataValues.list",
      "issuerswitch.rules.list",
      "krmapihosting.krmApiHosts.getIamPolicy",
      "krmapihosting.krmApiHosts.list",
      "krmapihosting.locations.list",
      "krmapihosting.operations.list",
      "lifesciences.operations.list",
      "livestream.channels.list",
      "livestream.events.list",
      "livestream.inputs.list",
      "livestream.locations.list",
      "livestream.operations.list",
      "logging.buckets.list",
      "logging.exclusions.list",
      "logging.links.list",
      "logging.locations.list",
      "logging.logEntries.list",
      "logging.logMetrics.list",
      "logging.logServiceIndexes.list",
      "logging.logServices.list",
      "logging.logs.list",
      "logging.notificationRules.list",
      "logging.operations.list",
      "logging.privateLogEntries.list",
      "logging.queries.list",
      "logging.sinks.list",
      "logging.views.list",
      "looker.backups.list",
      "looker.instances.list",
      "looker.locations.list",
      "looker.operations.list",
      "managedidentities.backups.getIamPolicy",
      "managedidentities.backups.list",
      "managedidentities.domains.getIamPolicy",
      "managedidentities.domains.list",
      "managedidentities.locations.list",
      "managedidentities.operations.list",
      "managedidentities.peerings.getIamPolicy",
      "managedidentities.peerings.list",
      "managedidentities.sqlintegrations.list",
      "mapsadmin.clientMaps.list",
      "mapsadmin.clientStyleSheetSnapshots.list",
      "mapsadmin.clientStyles.list",
      "mapsadmin.styleSnapshots.list",
      "mapsplatformdatasets.datasets.list",
      "memcache.instances.list",
      "memcache.locations.list",
      "memcache.operations.list",
      "metastore.backups.getIamPolicy",
      "metastore.backups.list",
      "metastore.databases.getIamPolicy",
      "metastore.databases.list",
      "metastore.federations.getIamPolicy",
      "metastore.federations.list",
      "metastore.imports.list",
      "metastore.locations.list",
      "metastore.operations.list",
      "metastore.services.getIamPolicy",
      "metastore.services.list",
      "metastore.tables.getIamPolicy",
      "metastore.tables.list",
      "migrationcenter.assets.list",
      "migrationcenter.errorFrames.list",
      "migrationcenter.groups.list",
      "migrationcenter.importDataFiles.list",
      "migrationcenter.importJobs.list",
      "migrationcenter.locations.list",
      "migrationcenter.operations.list",
      "migrationcenter.preferenceSets.list",
      "migrationcenter.reportConfigs.list",
      "migrationcenter.reports.list",
      "migrationcenter.sources.list",
      "ml.jobs.getIamPolicy",
      "ml.jobs.list",
      "ml.locations.list",
      "ml.models.getIamPolicy",
      "ml.models.list",
      "ml.operations.list",
      "ml.studies.getIamPolicy",
      "ml.studies.list",
      "ml.trials.list",
      "ml.versions.list",
      "monitoring.alertPolicies.list",
      "monitoring.dashboards.list",
      "monitoring.groups.list",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.notificationChannelDescriptors.list",
      "monitoring.notificationChannels.list",
      "monitoring.publicWidgets.list",
      "monitoring.services.list",
      "monitoring.slos.list",
      "monitoring.snoozes.list",
      "monitoring.timeSeries.list",
      "monitoring.uptimeCheckConfigs.list",
      "netapp.activeDirectories.list",
      "netapp.kmsConfigs.list",
      "netapp.replications.list",
      "netapp.snapshots.list",
      "netapp.storagePools.list",
      "netapp.volumes.list",
      "networkconnectivity.groups.getIamPolicy",
      "networkconnectivity.groups.list",
      "networkconnectivity.hubRouteTables.getIamPolicy",
      "networkconnectivity.hubRouteTables.list",
      "networkconnectivity.hubRoutes.getIamPolicy",
      "networkconnectivity.hubRoutes.list",
      "networkconnectivity.hubs.getIamPolicy",
      "networkconnectivity.hubs.list",
      "networkconnectivity.internalRanges.getIamPolicy",
      "networkconnectivity.internalRanges.list",
      "networkconnectivity.locations.list",
      "networkconnectivity.operations.list",
      "networkconnectivity.policyBasedRoutes.getIamPolicy",
      "networkconnectivity.policyBasedRoutes.list",
      "networkconnectivity.serviceClasses.list",
      "networkconnectivity.serviceConnectionMaps.list",
      "networkconnectivity.serviceConnectionPolicies.list",
      "networkconnectivity.spokes.getIamPolicy",
      "networkconnectivity.spokes.list",
      "networkmanagement.connectivitytests.getIamPolicy",
      "networkmanagement.connectivitytests.list",
      "networkmanagement.locations.list",
      "networkmanagement.operations.list",
      "networksecurity.authorizationPolicies.getIamPolicy",
      "networksecurity.authorizationPolicies.list",
      "networksecurity.clientTlsPolicies.getIamPolicy",
      "networksecurity.clientTlsPolicies.list",
      "networksecurity.firewallEndpointAssociations.list",
      "networksecurity.firewallEndpoints.list",
      "networksecurity.gatewaySecurityPolicies.list",
      "networksecurity.gatewaySecurityPolicyRules.list",
      "networksecurity.locations.list",
      "networksecurity.operations.list",
      "networksecurity.securityProfileGroups.list",
      "networksecurity.securityProfiles.list",
      "networksecurity.serverTlsPolicies.getIamPolicy",
      "networksecurity.serverTlsPolicies.list",
      "networksecurity.tlsInspectionPolicies.list",
      "networksecurity.urlLists.list",
      "networkservices.endpointConfigSelectors.getIamPolicy",
      "networkservices.endpointConfigSelectors.list",
      "networkservices.endpointPolicies.getIamPolicy",
      "networkservices.endpointPolicies.list",
      "networkservices.gateways.list",
      "networkservices.grpcRoutes.getIamPolicy",
      "networkservices.grpcRoutes.list",
      "networkservices.httpFilters.getIamPolicy",
      "networkservices.httpFilters.list",
      "networkservices.httpRoutes.getIamPolicy",
      "networkservices.httpRoutes.list",
      "networkservices.httpfilters.getIamPolicy",
      "networkservices.httpfilters.list",
      "networkservices.locations.list",
      "networkservices.meshes.getIamPolicy",
      "networkservices.meshes.list",
      "networkservices.operations.list",
      "networkservices.serviceBindings.list",
      "networkservices.tcpRoutes.getIamPolicy",
      "networkservices.tcpRoutes.list",
      "networkservices.tlsRoutes.list",
      "notebooks.environments.getIamPolicy",
      "notebooks.environments.list",
      "notebooks.executions.getIamPolicy",
      "notebooks.executions.list",
      "notebooks.instances.getIamPolicy",
      "notebooks.instances.list",
      "notebooks.locations.list",
      "notebooks.operations.list",
      "notebooks.runtimes.getIamPolicy",
      "notebooks.runtimes.list",
      "notebooks.schedules.getIamPolicy",
      "notebooks.schedules.list",
      "ondemandscanning.operations.list",
      "opsconfigmonitoring.resourceMetadata.list",
      "orgpolicy.constraints.list",
      "orgpolicy.customConstraints.list",
      "orgpolicy.policies.list",
      "osconfig.guestPolicies.list",
      "osconfig.instanceOSPoliciesCompliances.list",
      "osconfig.inventories.list",
      "osconfig.osPolicyAssignmentReports.list",
      "osconfig.osPolicyAssignments.list",
      "osconfig.patchDeployments.list",
      "osconfig.patchJobs.list",
      "osconfig.vulnerabilityReports.list",
      "paymentsresellersubscription.products.list",
      "paymentsresellersubscription.promotions.list",
      "policysimulator.orgPolicyViolations.list",
      "policysimulator.orgPolicyViolationsPreviews.list",
      "policysimulator.replayResults.list",
      "policysimulator.replays.list",
      "privateca.caPools.getIamPolicy",
      "privateca.caPools.list",
      "privateca.certificateAuthorities.getIamPolicy",
      "privateca.certificateAuthorities.list",
      "privateca.certificateRevocationLists.getIamPolicy",
      "privateca.certificateRevocationLists.list",
      "privateca.certificateTemplates.getIamPolicy",
      "privateca.certificateTemplates.list",
      "privateca.certificates.getIamPolicy",
      "privateca.certificates.list",
      "privateca.locations.list",
      "privateca.operations.list",
      "privateca.reusableConfigs.getIamPolicy",
      "privateca.reusableConfigs.list",
      "proximitybeacon.attachments.list",
      "proximitybeacon.beacons.getIamPolicy",
      "proximitybeacon.beacons.list",
      "proximitybeacon.namespaces.getIamPolicy",
      "proximitybeacon.namespaces.list",
      "pubsub.schemas.getIamPolicy",
      "pubsub.schemas.list",
      "pubsub.snapshots.getIamPolicy",
      "pubsub.snapshots.list",
      "pubsub.subscriptions.getIamPolicy",
      "pubsub.subscriptions.list",
      "pubsub.topics.getIamPolicy",
      "pubsub.topics.list",
      "pubsublite.operations.list",
      "pubsublite.reservations.list",
      "pubsublite.subscriptions.list",
      "pubsublite.topics.list",
      "recaptchaenterprise.keys.list",
      "recaptchaenterprise.relatedaccountgroupmemberships.list",
      "recaptchaenterprise.relatedaccountgroups.list",
      "recommender.bigqueryCapacityCommitmentsInsights.list",
      "recommender.bigqueryCapacityCommitmentsRecommendations.list",
      "recommender.bigqueryPartitionClusterRecommendations.list",
      "recommender.bigqueryTableStatsInsights.list",
      "recommender.cloudAssetInsights.list",
      "recommender.cloudCostGeneralInsights.list",
      "recommender.cloudCostGeneralRecommendations.list",
      "recommender.cloudFunctionsPerformanceInsights.list",
      "recommender.cloudFunctionsPerformanceRecommendations.list",
      "recommender.cloudManageabilityGeneralInsights.list",
      "recommender.cloudManageabilityGeneralRecommendations.list",
      "recommender.cloudPerformanceGeneralInsights.list",
      "recommender.cloudPerformanceGeneralRecommendations.list",
      "recommender.cloudReliabilityGeneralInsights.list",
      "recommender.cloudReliabilityGeneralRecommendations.list",
      "recommender.cloudSecurityGeneralInsights.list",
      "recommender.cloudSecurityGeneralRecommendations.list",
      "recommender.cloudsqlIdleInstanceRecommendations.list",
      "recommender.cloudsqlInstanceActivityInsights.list",
      "recommender.cloudsqlInstanceCpuUsageInsights.list",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.list",
      "recommender.cloudsqlInstanceMemoryUsageInsights.list",
      "recommender.cloudsqlInstanceOomProbabilityInsights.list",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.list",
      "recommender.cloudsqlInstancePerformanceInsights.list",
      "recommender.cloudsqlInstancePerformanceRecommendations.list",
      "recommender.cloudsqlInstanceReliabilityInsights.list",
      "recommender.cloudsqlInstanceReliabilityRecommendations.list",
      "recommender.cloudsqlInstanceSecurityInsights.list",
      "recommender.cloudsqlInstanceSecurityRecommendations.list",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.list",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.list",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.list",
      "recommender.commitmentUtilizationInsights.list",
      "recommender.computeAddressIdleResourceInsights.list",
      "recommender.computeAddressIdleResourceRecommendations.list",
      "recommender.computeDiskIdleResourceInsights.list",
      "recommender.computeDiskIdleResourceRecommendations.list",
      "recommender.computeFirewallInsights.list",
      "recommender.computeImageIdleResourceInsights.list",
      "recommender.computeImageIdleResourceRecommendations.list",
      "recommender.computeInstanceCpuUsageInsights.list",
      "recommender.computeInstanceCpuUsagePredictionInsights.list",
      "recommender.computeInstanceCpuUsageTrendInsights.list",
      "recommender.computeInstanceGroupManagerCpuUsageInsights.list",
      "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.list",
      "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.list",
      "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list",
      "recommender.computeInstanceGroupManagerMemoryUsageInsights.list",
      "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.list",
      "recommender.computeInstanceIdleResourceRecommendations.list",
      "recommender.computeInstanceMachineTypeRecommendations.list",
      "recommender.computeInstanceMemoryUsageInsights.list",
      "recommender.computeInstanceMemoryUsagePredictionInsights.list",
      "recommender.computeInstanceNetworkThroughputInsights.list",
      "recommender.containerDiagnosisInsights.list",
      "recommender.containerDiagnosisRecommendations.list",
      "recommender.costInsights.list",
      "recommender.dataflowDiagnosticsInsights.list",
      "recommender.errorReportingInsights.list",
      "recommender.errorReportingRecommendations.list",
      "recommender.gmpGuidedExperienceInsights.list",
      "recommender.gmpGuidedExperienceRecommendations.list",
      "recommender.gmpProjectManagementInsights.list",
      "recommender.gmpProjectManagementRecommendations.list",
      "recommender.gmpProjectProductSuggestionsInsights.list",
      "recommender.gmpProjectProductSuggestionsRecommendations.list",
      "recommender.gmpProjectQuotaInsights.list",
      "recommender.gmpProjectQuotaRecommendations.list",
      "recommender.iamPolicyInsights.list",
      "recommender.iamPolicyLateralMovementInsights.list",
      "recommender.iamPolicyRecommendations.list",
      "recommender.iamServiceAccountInsights.list",
      "recommender.locations.list",
      "recommender.loggingProductSuggestionContainerInsights.list",
      "recommender.loggingProductSuggestionContainerRecommendations.list",
      "recommender.monitoringProductSuggestionComputeInsights.list",
      "recommender.monitoringProductSuggestionComputeRecommendations.list",
      "recommender.networkAnalyzerCloudSqlInsights.list",
      "recommender.networkAnalyzerDynamicRouteInsights.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.list",
      "recommender.networkAnalyzerGkeIpAddressInsights.list",
      "recommender.networkAnalyzerIpAddressInsights.list",
      "recommender.networkAnalyzerLoadBalancerInsights.list",
      "recommender.networkAnalyzerVpcConnectivityInsights.list",
      "recommender.resourcemanagerProjectUtilizationInsights.list",
      "recommender.resourcemanagerProjectUtilizationRecommendations.list",
      "recommender.resourcemanagerServiceLimitInsights.list",
      "recommender.resourcemanagerServiceLimitRecommendations.list",
      "recommender.runServiceCostInsights.list",
      "recommender.runServiceCostRecommendations.list",
      "recommender.runServiceIdentityInsights.list",
      "recommender.runServiceIdentityRecommendations.list",
      "recommender.runServiceSecurityInsights.list",
      "recommender.runServiceSecurityRecommendations.list",
      "recommender.spendBasedCommitmentInsights.list",
      "recommender.spendBasedCommitmentRecommendations.list",
      "recommender.usageCommitmentRecommendations.list",
      "redis.clusters.list",
      "redis.instances.list",
      "redis.locations.list",
      "redis.operations.list",
      "remotebuildexecution.instances.list",
      "remotebuildexecution.workerpools.list",
      "resourcemanager.folders.getIamPolicy",
      "resourcemanager.folders.list",
      "resourcemanager.hierarchyNodes.listTagBindings",
      "resourcemanager.organizations.getIamPolicy",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list",
      "resourcemanager.tagHolds.list",
      "resourcemanager.tagKeys.getIamPolicy",
      "resourcemanager.tagKeys.list",
      "resourcemanager.tagValues.getIamPolicy",
      "resourcemanager.tagValues.list",
      "resourcesettings.settings.list",
      "retail.catalogs.list",
      "retail.controls.list",
      "retail.models.list",
      "retail.operations.list",
      "retail.products.list",
      "retail.servingConfigs.list",
      "riskmanager.controlScoreBreakdowns.list",
      "riskmanager.operations.list",
      "riskmanager.policies.list",
      "riskmanager.reports.list",
      "rma.collectors.list",
      "rma.locations.list",
      "rma.operations.list",
      "run.configurations.list",
      "run.executions.list",
      "run.jobs.getIamPolicy",
      "run.jobs.list",
      "run.locations.list",
      "run.operations.list",
      "run.revisions.list",
      "run.routes.list",
      "run.services.getIamPolicy",
      "run.services.list",
      "run.tasks.list",
      "runapps.applications.list",
      "runapps.deployments.list",
      "runapps.locations.list",
      "runapps.operations.list",
      "runtimeconfig.configs.getIamPolicy",
      "runtimeconfig.configs.list",
      "runtimeconfig.operations.list",
      "runtimeconfig.variables.getIamPolicy",
      "runtimeconfig.variables.list",
      "runtimeconfig.waiters.getIamPolicy",
      "runtimeconfig.waiters.list",
      "secretmanager.locations.list",
      "secretmanager.secrets.getIamPolicy",
      "secretmanager.secrets.list",
      "secretmanager.versions.list",
      "securedlandingzone.overwatches.list",
      "securitycenter.assets.list",
      "securitycenter.attackpaths.list",
      "securitycenter.bigQueryExports.list",
      "securitycenter.effectivesecurityhealthanalyticscustommodules.list",
      "securitycenter.findings.list",
      "securitycenter.muteconfigs.list",
      "securitycenter.notificationconfig.list",
      "securitycenter.resourcevalueconfigs.list",
      "securitycenter.securityhealthanalyticscustommodules.list",
      "securitycenter.sources.getIamPolicy",
      "securitycenter.sources.list",
      "securitycenter.valuedresources.list",
      "servicebroker.bindingoperations.list",
      "servicebroker.bindings.getIamPolicy",
      "servicebroker.bindings.list",
      "servicebroker.catalogs.getIamPolicy",
      "servicebroker.catalogs.list",
      "servicebroker.instanceoperations.list",
      "servicebroker.instances.getIamPolicy",
      "servicebroker.instances.list",
      "serviceconsumermanagement.tenancyu.list",
      "servicedirectory.endpoints.getIamPolicy",
      "servicedirectory.endpoints.list",
      "servicedirectory.locations.list",
      "servicedirectory.namespaces.getIamPolicy",
      "servicedirectory.namespaces.list",
      "servicedirectory.services.getIamPolicy",
      "servicedirectory.services.list",
      "servicehealth.events.list",
      "servicehealth.locations.list",
      "servicehealth.organizationEvents.list",
      "servicehealth.organizationImpacts.list",
      "servicemanagement.services.getIamPolicy",
      "servicemanagement.services.list",
      "servicenetworking.operations.list",
      "servicesecurityinsights.clusterSecurityInfo.list",
      "servicesecurityinsights.securityInfo.list",
      "servicesecurityinsights.workloadPolicies.list",
      "serviceusage.operations.list",
      "serviceusage.services.list",
      "source.repos.getIamPolicy",
      "source.repos.list",
      "spanner.backupOperations.list",
      "spanner.backups.getIamPolicy",
      "spanner.backups.list",
      "spanner.databaseOperations.list",
      "spanner.databaseRoles.list",
      "spanner.databases.getIamPolicy",
      "spanner.databases.list",
      "spanner.instanceConfigOperations.list",
      "spanner.instanceConfigs.list",
      "spanner.instanceOperations.list",
      "spanner.instances.getIamPolicy",
      "spanner.instances.list",
      "spanner.sessions.list",
      "speakerid.phrases.list",
      "speakerid.speakers.list",
      "speech.customClasses.list",
      "speech.locations.list",
      "speech.operations.list",
      "speech.phraseSets.list",
      "speech.recognizers.list",
      "stackdriver.resourceMetadata.list",
      "storage.buckets.getIamPolicy",
      "storage.buckets.list",
      "storage.hmacKeys.list",
      "storage.multipartUploads.list",
      "storage.objects.getIamPolicy",
      "storage.objects.list",
      "storageinsights.locations.list",
      "storageinsights.operations.list",
      "storageinsights.reportConfigs.list",
      "storageinsights.reportDetails.list",
      "storagetransfer.agentpools.list",
      "storagetransfer.jobs.list",
      "storagetransfer.operations.list",
      "stream.locations.list",
      "stream.operations.list",
      "stream.streamContents.list",
      "stream.streamInstances.list",
      "timeseriesinsights.datasets.list",
      "timeseriesinsights.locations.list",
      "tpu.acceleratortypes.list",
      "tpu.locations.list",
      "tpu.nodes.list",
      "tpu.operations.list",
      "tpu.runtimeversions.list",
      "tpu.tensorflowversions.list",
      "transcoder.jobTemplates.list",
      "transcoder.jobs.list",
      "transferappliance.appliances.list",
      "transferappliance.locations.list",
      "transferappliance.operations.list",
      "transferappliance.orders.list",
      "transferappliance.savedAddresses.list",
      "translationhub.portals.list",
      "videostitcher.cdnKeys.list",
      "videostitcher.liveAdTagDetails.list",
      "videostitcher.slates.list",
      "videostitcher.vodAdTagDetails.list",
      "videostitcher.vodStitchDetails.list",
      "visionai.analyses.getIamPolicy",
      "visionai.analyses.list",
      "visionai.annotations.list",
      "visionai.applications.list",
      "visionai.assets.list",
      "visionai.clusters.getIamPolicy",
      "visionai.clusters.list",
      "visionai.corpora.list",
      "visionai.dataSchemas.list",
      "visionai.drafts.list",
      "visionai.events.getIamPolicy",
      "visionai.events.list",
      "visionai.instances.list",
      "visionai.locations.list",
      "visionai.operations.list",
      "visionai.operators.getIamPolicy",
      "visionai.operators.list",
      "visionai.processors.list",
      "visionai.searchConfigs.list",
      "visionai.series.getIamPolicy",
      "visionai.series.list",
      "visionai.streams.getIamPolicy",
      "visionai.streams.list",
      "visionai.uistreams.list",
      "visualinspection.annotationSets.list",
      "visualinspection.annotationSpecs.list",
      "visualinspection.annotations.list",
      "visualinspection.datasets.list",
      "visualinspection.images.list",
      "visualinspection.locations.list",
      "visualinspection.modelEvaluations.list",
      "visualinspection.models.list",
      "visualinspection.modules.list",
      "visualinspection.operations.list",
      "visualinspection.solutionArtifacts.list",
      "visualinspection.solutions.list",
      "vmmigration.cloneJobs.list",
      "vmmigration.cutoverJobs.list",
      "vmmigration.datacenterConnectors.list",
      "vmmigration.deployments.list",
      "vmmigration.groups.list",
      "vmmigration.locations.list",
      "vmmigration.migratingVms.list",
      "vmmigration.operations.list",
      "vmmigration.replicationCycles.list",
      "vmmigration.sources.list",
      "vmmigration.targets.list",
      "vmmigration.utilizationReports.list",
      "vmwareengine.clusters.getIamPolicy",
      "vmwareengine.clusters.list",
      "vmwareengine.hcxActivationKeys.getIamPolicy",
      "vmwareengine.hcxActivationKeys.list",
      "vmwareengine.locations.list",
      "vmwareengine.networkPolicies.list",
      "vmwareengine.nodeTypes.list",
      "vmwareengine.operations.list",
      "vmwareengine.privateClouds.getIamPolicy",
      "vmwareengine.privateClouds.list",
      "vmwareengine.privateConnections.list",
      "vmwareengine.subnets.list",
      "vmwareengine.vmwareEngineNetworks.list",
      "vpcaccess.connectors.list",
      "vpcaccess.locations.list",
      "vpcaccess.operations.list",
      "workflows.executions.list",
      "workflows.locations.list",
      "workflows.operations.list",
      "workflows.workflows.list",
      "workloadcertificate.locations.list",
      "workloadcertificate.operations.list",
      "workloadcertificate.workloadRegistrations.list",
      "workloadmanager.evaluations.list",
      "workloadmanager.executions.list",
      "workloadmanager.locations.list",
      "workloadmanager.operations.list",
      "workloadmanager.results.list",
      "workloadmanager.rules.list",
      "workstations.workstationClusters.list",
      "workstations.workstationConfigs.getIamPolicy",
      "workstations.workstationConfigs.list",
      "workstations.workstations.getIamPolicy",
      "workstations.workstations.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/iam.serviceAccountAdmin",
    "title": "Service Account Admin",
    "description": "Create and manage service accounts.",
    "includedPermissions": [
      "iam.serviceAccounts.create",
      "iam.serviceAccounts.delete",
      "iam.serviceAccounts.disable",
      "iam.serviceAccounts.enable",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.getIamPolicy",
      "iam.serviceAccounts.list",
      "iam.serviceAccounts.setIamPolicy",
      "iam.serviceAccounts.undelete",
      "iam.serviceAccounts.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/iam.serviceAccountCreator",
    "title": "Create Service Accounts",
    "description": "Access to create service accounts.",
    "includedPermissions": [
      "iam.serviceAccounts.create",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/iam.serviceAccountDeleter",
    "title": "Delete Service Accounts",
    "description": "Access to delete service accounts.",
    "includedPermissions": [
      "iam.serviceAccounts.delete",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/iam.serviceAccountKeyAdmin",
    "title": "Service Account Key Admin",
    "description": "Create and manage (and rotate) service account keys.",
    "includedPermissions": [
      "iam.serviceAccountKeys.create",
      "iam.serviceAccountKeys.delete",
      "iam.serviceAccountKeys.disable",
      "iam.serviceAccountKeys.enable",
      "iam.serviceAccountKeys.get",
      "iam.serviceAccountKeys.list",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/iam.serviceAccountOpenIdTokenCreator",
    "title": "Service Account OpenID Connect Identity Token Creator",
    "description": "Create OpenID Connect (OIDC) identity tokens",
    "includedPermissions": [
      "iam.serviceAccounts.getOpenIdToken"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/iam.serviceAccountTokenCreator",
    "title": "Service Account Token Creator",
    "description": "Impersonate service accounts (create OAuth2 access tokens, sign blobs or JWTs, etc).",
    "includedPermissions": [
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.getAccessToken",
      "iam.serviceAccounts.getOpenIdToken",
      "iam.serviceAccounts.implicitDelegation",
      "iam.serviceAccounts.list",
      "iam.serviceAccounts.signBlob",
      "iam.serviceAccounts.signJwt",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/iam.serviceAccountUser",
    "title": "Service Account User",
    "description": "Run operations as the service account.",
    "includedPermissions": [
      "iam.serviceAccounts.actAs",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/iam.serviceAccountViewer",
    "title": "View Service Accounts",
    "description": "Read access to service accounts, metadata, and keys.",
    "includedPermissions": [
      "iam.serviceAccountKeys.get",
      "iam.serviceAccountKeys.list",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.getIamPolicy",
      "iam.serviceAccounts.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/iam.workforcePoolAdmin",
    "title": "IAM Workforce Pool Admin",
    "description": "Full rights to create and manage all workforce pools in the org, along with the ability to delegate permissions to other admins.",
    "includedPermissions": [
      "iam.googleapis.com/workforcePoolProviderKeys.create",
      "iam.googleapis.com/workforcePoolProviderKeys.delete",
      "iam.googleapis.com/workforcePoolProviderKeys.get",
      "iam.googleapis.com/workforcePoolProviderKeys.list",
      "iam.googleapis.com/workforcePoolProviderKeys.undelete",
      "iam.googleapis.com/workforcePoolProviders.create",
      "iam.googleapis.com/workforcePoolProviders.delete",
      "iam.googleapis.com/workforcePoolProviders.get",
      "iam.googleapis.com/workforcePoolProviders.list",
      "iam.googleapis.com/workforcePoolProviders.undelete",
      "iam.googleapis.com/workforcePoolProviders.update",
      "iam.googleapis.com/workforcePoolSubjects.delete",
      "iam.googleapis.com/workforcePoolSubjects.undelete",
      "iam.googleapis.com/workforcePools.create",
      "iam.googleapis.com/workforcePools.delete",
      "iam.googleapis.com/workforcePools.get",
      "iam.googleapis.com/workforcePools.getIamPolicy",
      "iam.googleapis.com/workforcePools.list",
      "iam.googleapis.com/workforcePools.setIamPolicy",
      "iam.googleapis.com/workforcePools.undelete",
      "iam.googleapis.com/workforcePools.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/iam.workforcePoolEditor",
    "title": "IAM Workforce Pool Editor",
    "description": "Rights to edit a particular instance of a workforce pool.",
    "includedPermissions": [
      "iam.googleapis.com/workforcePoolProviderKeys.get",
      "iam.googleapis.com/workforcePoolProviderKeys.list",
      "iam.googleapis.com/workforcePoolProviders.create",
      "iam.googleapis.com/workforcePoolProviders.delete",
      "iam.googleapis.com/workforcePoolProviders.get",
      "iam.googleapis.com/workforcePoolProviders.list",
      "iam.googleapis.com/workforcePoolProviders.undelete",
      "iam.googleapis.com/workforcePoolProviders.update",
      "iam.googleapis.com/workforcePools.get",
      "iam.googleapis.com/workforcePools.list",
      "iam.googleapis.com/workforcePools.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/iam.workforcePoolViewer",
    "title": "IAM Workforce Pool Viewer",
    "description": "Rights to read workforce pool.",
    "includedPermissions": [
      "iam.googleapis.com/workforcePoolProviderKeys.get",
      "iam.googleapis.com/workforcePoolProviderKeys.list",
      "iam.googleapis.com/workforcePoolProviders.get",
      "iam.googleapis.com/workforcePoolProviders.list",
      "iam.googleapis.com/workforcePools.get",
      "iam.googleapis.com/workforcePools.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/iam.workloadIdentityPoolAdmin",
    "title": "IAM Workload Identity Pool Admin",
    "description": "Full rights to create and manage workload identity pools.",
    "includedPermissions": [
      "iam.googleapis.com/workloadIdentityPoolProviderKeys.create",
      "iam.googleapis.com/workloadIdentityPoolProviderKeys.delete",
      "iam.googleapis.com/workloadIdentityPoolProviderKeys.get",
      "iam.googleapis.com/workloadIdentityPoolProviderKeys.list",
      "iam.googleapis.com/workloadIdentityPoolProviderKeys.undelete",
      "iam.googleapis.com/workloadIdentityPoolProviders.create",
      "iam.googleapis.com/workloadIdentityPoolProviders.delete",
      "iam.googleapis.com/workloadIdentityPoolProviders.get",
      "iam.googleapis.com/workloadIdentityPoolProviders.list",
      "iam.googleapis.com/workloadIdentityPoolProviders.undelete",
      "iam.googleapis.com/workloadIdentityPoolProviders.update",
      "iam.googleapis.com/workloadIdentityPools.create",
      "iam.googleapis.com/workloadIdentityPools.delete",
      "iam.googleapis.com/workloadIdentityPools.get",
      "iam.googleapis.com/workloadIdentityPools.list",
      "iam.googleapis.com/workloadIdentityPools.undelete",
      "iam.googleapis.com/workloadIdentityPools.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/iam.workloadIdentityPoolViewer",
    "title": "IAM Workload Identity Pool Viewer",
    "description": "Read access to workload identity pools.",
    "includedPermissions": [
      "iam.googleapis.com/workloadIdentityPoolProviderKeys.get",
      "iam.googleapis.com/workloadIdentityPoolProviderKeys.list",
      "iam.googleapis.com/workloadIdentityPoolProviders.get",
      "iam.googleapis.com/workloadIdentityPoolProviders.list",
      "iam.googleapis.com/workloadIdentityPools.get",
      "iam.googleapis.com/workloadIdentityPools.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/iam.workloadIdentityUser",
    "title": "Workload Identity User",
    "description": "Impersonate service accounts from GKE Workloads",
    "includedPermissions": [
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.getAccessToken",
      "iam.serviceAccounts.getOpenIdToken",
      "iam.serviceAccounts.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/iap.admin",
    "title": "IAP Policy Admin",
    "description": "Administrator of IAP Permissions",
    "includedPermissions": [
      "iap.tunnel.getIamPolicy",
      "iap.tunnel.setIamPolicy",
      "iap.tunnelDestGroups.getIamPolicy",
      "iap.tunnelDestGroups.setIamPolicy",
      "iap.tunnelInstances.getIamPolicy",
      "iap.tunnelInstances.setIamPolicy",
      "iap.tunnelLocations.getIamPolicy",
      "iap.tunnelLocations.setIamPolicy",
      "iap.tunnelZones.getIamPolicy",
      "iap.tunnelZones.setIamPolicy",
      "iap.web.getIamPolicy",
      "iap.web.setIamPolicy",
      "iap.webServiceVersions.getIamPolicy",
      "iap.webServiceVersions.setIamPolicy",
      "iap.webServices.getIamPolicy",
      "iap.webServices.setIamPolicy",
      "iap.webTypes.getIamPolicy",
      "iap.webTypes.setIamPolicy"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/iap.httpsResourceAccessor",
    "title": "IAP-secured Web App User",
    "description": "Access HTTPS resources which use Identity-Aware Proxy",
    "includedPermissions": [
      "iap.webServiceVersions.accessViaIAP"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/iap.settingsAdmin",
    "title": "IAP Settings Admin",
    "description": "Administrator of IAP Settings.",
    "includedPermissions": [
      "iap.projects.getSettings",
      "iap.projects.updateSettings",
      "iap.web.getSettings",
      "iap.web.updateSettings",
      "iap.webServiceVersions.getSettings",
      "iap.webServiceVersions.updateSettings",
      "iap.webServices.getSettings",
      "iap.webServices.updateSettings",
      "iap.webTypes.getSettings",
      "iap.webTypes.updateSettings"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/iap.tunnelDestGroupEditor",
    "title": "IAP-secured Tunnel Destination Group Editor",
    "description": "Edit Tunnel Destination Group resources which use Identity-Aware Proxy",
    "includedPermissions": [
      "iap.tunnelDestGroups.create",
      "iap.tunnelDestGroups.delete",
      "iap.tunnelDestGroups.get",
      "iap.tunnelDestGroups.list",
      "iap.tunnelDestGroups.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/iap.tunnelDestGroupViewer",
    "title": "IAP-secured Tunnel Destination Group Viewer",
    "description": "View Tunnel Destination Group resources which use Identity-Aware Proxy",
    "includedPermissions": [
      "iap.tunnelDestGroups.get",
      "iap.tunnelDestGroups.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/iap.tunnelResourceAccessor",
    "title": "IAP-secured Tunnel User",
    "description": "Access Tunnel resources which use Identity-Aware Proxy",
    "includedPermissions": [
      "iap.tunnelDestGroups.accessViaIAP",
      "iap.tunnelInstances.accessViaIAP"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/identityplatform.admin",
    "title": "Identity Platform Admin",
    "description": "Full access to Identity Platform resources.",
    "includedPermissions": [
      "firebaseauth.configs.create",
      "firebaseauth.configs.get",
      "firebaseauth.configs.getHashConfig",
      "firebaseauth.configs.getSecret",
      "firebaseauth.configs.update",
      "firebaseauth.users.create",
      "firebaseauth.users.createSession",
      "firebaseauth.users.delete",
      "firebaseauth.users.get",
      "firebaseauth.users.sendEmail",
      "firebaseauth.users.update",
      "identitytoolkit.tenants.create",
      "identitytoolkit.tenants.delete",
      "identitytoolkit.tenants.get",
      "identitytoolkit.tenants.getIamPolicy",
      "identitytoolkit.tenants.list",
      "identitytoolkit.tenants.setIamPolicy",
      "identitytoolkit.tenants.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/identityplatform.viewer",
    "title": "Identity Platform Viewer",
    "description": "Read access to Identity Platform resources.",
    "includedPermissions": [
      "firebaseauth.configs.get",
      "firebaseauth.users.get",
      "identitytoolkit.tenants.get",
      "identitytoolkit.tenants.getIamPolicy",
      "identitytoolkit.tenants.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/identitytoolkit.admin",
    "title": "Identity Toolkit Admin",
    "description": "Full access to Identity Toolkit resources.",
    "includedPermissions": [
      "firebaseauth.configs.create",
      "firebaseauth.configs.get",
      "firebaseauth.configs.getHashConfig",
      "firebaseauth.configs.getSecret",
      "firebaseauth.configs.update",
      "firebaseauth.users.create",
      "firebaseauth.users.createSession",
      "firebaseauth.users.delete",
      "firebaseauth.users.get",
      "firebaseauth.users.sendEmail",
      "firebaseauth.users.update",
      "identitytoolkit.tenants.create",
      "identitytoolkit.tenants.delete",
      "identitytoolkit.tenants.get",
      "identitytoolkit.tenants.getIamPolicy",
      "identitytoolkit.tenants.list",
      "identitytoolkit.tenants.setIamPolicy",
      "identitytoolkit.tenants.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/identitytoolkit.serviceAgent",
    "title": "Identity Platform Service Agent",
    "description": "Gives Identity Platform service account access to customer project resources.",
    "includedPermissions": [
      "recaptchaenterprise.assessments.create",
      "recaptchaenterprise.keys.create",
      "recaptchaenterprise.keys.delete",
      "recaptchaenterprise.keys.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/identitytoolkit.viewer",
    "title": "Identity Toolkit Viewer",
    "description": "Read access to Identity Toolkit resources.",
    "includedPermissions": [
      "firebaseauth.configs.get",
      "firebaseauth.users.get",
      "identitytoolkit.tenants.get",
      "identitytoolkit.tenants.getIamPolicy",
      "identitytoolkit.tenants.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/ids.admin",
    "title": "Cloud IDS Admin",
    "description": "Full access to Cloud IDS all resources.",
    "includedPermissions": [
      "ids.endpoints.create",
      "ids.endpoints.delete",
      "ids.endpoints.get",
      "ids.endpoints.getIamPolicy",
      "ids.endpoints.list",
      "ids.endpoints.setIamPolicy",
      "ids.endpoints.update",
      "ids.locations.get",
      "ids.locations.list",
      "ids.operations.cancel",
      "ids.operations.delete",
      "ids.operations.get",
      "ids.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/ids.viewer",
    "title": "Cloud IDS Viewer",
    "description": "Read-only access to Cloud IDS all resources.",
    "includedPermissions": [
      "ids.endpoints.get",
      "ids.endpoints.getIamPolicy",
      "ids.endpoints.list",
      "ids.locations.get",
      "ids.locations.list",
      "ids.operations.get",
      "ids.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/integrations.apigeeIntegrationAdminRole",
    "title": "Apigee Integration Admin",
    "description": "A user that has full access to all Apigee integrations.",
    "includedPermissions": [
      "connectors.actions.execute",
      "connectors.actions.list",
      "connectors.connections.executeSqlQuery",
      "connectors.entities.create",
      "connectors.entities.delete",
      "connectors.entities.deleteEntitiesWithConditions",
      "connectors.entities.get",
      "connectors.entities.list",
      "connectors.entities.update",
      "connectors.entities.updateEntitiesWithConditions",
      "connectors.entityTypes.list",
      "integrations.apigeeAuthConfigs.create",
      "integrations.apigeeAuthConfigs.delete",
      "integrations.apigeeAuthConfigs.get",
      "integrations.apigeeAuthConfigs.list",
      "integrations.apigeeAuthConfigs.update",
      "integrations.apigeeCertificates.create",
      "integrations.apigeeCertificates.delete",
      "integrations.apigeeCertificates.get",
      "integrations.apigeeCertificates.list",
      "integrations.apigeeCertificates.update",
      "integrations.apigeeExecutions.list",
      "integrations.apigeeIntegrationVers.create",
      "integrations.apigeeIntegrationVers.delete",
      "integrations.apigeeIntegrationVers.deploy",
      "integrations.apigeeIntegrationVers.get",
      "integrations.apigeeIntegrationVers.list",
      "integrations.apigeeIntegrationVers.update",
      "integrations.apigeeIntegrations.invoke",
      "integrations.apigeeIntegrations.list",
      "integrations.apigeeSfdcChannels.create",
      "integrations.apigeeSfdcChannels.delete",
      "integrations.apigeeSfdcChannels.get",
      "integrations.apigeeSfdcChannels.list",
      "integrations.apigeeSfdcChannels.update",
      "integrations.apigeeSfdcInstances.create",
      "integrations.apigeeSfdcInstances.delete",
      "integrations.apigeeSfdcInstances.get",
      "integrations.apigeeSfdcInstances.list",
      "integrations.apigeeSfdcInstances.update",
      "integrations.apigeeSuspensions.lift",
      "integrations.apigeeSuspensions.list",
      "integrations.apigeeSuspensions.resolve",
      "integrations.authConfigs.create",
      "integrations.authConfigs.delete",
      "integrations.authConfigs.get",
      "integrations.authConfigs.list",
      "integrations.authConfigs.update",
      "integrations.certificates.create",
      "integrations.certificates.delete",
      "integrations.certificates.get",
      "integrations.certificates.list",
      "integrations.certificates.update",
      "integrations.executions.get",
      "integrations.executions.list",
      "integrations.integrationVersions.create",
      "integrations.integrationVersions.delete",
      "integrations.integrationVersions.deploy",
      "integrations.integrationVersions.get",
      "integrations.integrationVersions.list",
      "integrations.integrationVersions.update",
      "integrations.integrations.create",
      "integrations.integrations.delete",
      "integrations.integrations.deploy",
      "integrations.integrations.get",
      "integrations.integrations.invoke",
      "integrations.integrations.list",
      "integrations.integrations.update",
      "integrations.sfdcChannels.create",
      "integrations.sfdcChannels.delete",
      "integrations.sfdcChannels.get",
      "integrations.sfdcChannels.list",
      "integrations.sfdcChannels.update",
      "integrations.sfdcInstances.create",
      "integrations.sfdcInstances.delete",
      "integrations.sfdcInstances.get",
      "integrations.sfdcInstances.list",
      "integrations.sfdcInstances.update",
      "integrations.suspensions.lift",
      "integrations.suspensions.list",
      "integrations.suspensions.resolve",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/integrations.apigeeIntegrationDeployerRole",
    "title": "Apigee Integration Deployer",
    "description": "A developer that can deploy/undeploy Apigee integrations to the integration runtime.",
    "includedPermissions": [
      "integrations.apigeeIntegrationVers.deploy",
      "integrations.apigeeIntegrationVers.get",
      "integrations.apigeeIntegrationVers.list",
      "integrations.apigeeIntegrations.list",
      "integrations.integrationVersions.deploy",
      "integrations.integrationVersions.get",
      "integrations.integrationVersions.list",
      "integrations.integrations.deploy",
      "integrations.integrations.get",
      "integrations.integrations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/integrations.apigeeIntegrationEditorRole",
    "title": "Apigee Integration Editor",
    "description": "A developer that can list, create and update Apigee integrations.",
    "includedPermissions": [
      "connectors.actions.execute",
      "connectors.actions.list",
      "connectors.connections.executeSqlQuery",
      "connectors.entities.create",
      "connectors.entities.delete",
      "connectors.entities.deleteEntitiesWithConditions",
      "connectors.entities.get",
      "connectors.entities.list",
      "connectors.entities.update",
      "connectors.entities.updateEntitiesWithConditions",
      "connectors.entityTypes.list",
      "integrations.apigeeAuthConfigs.create",
      "integrations.apigeeAuthConfigs.get",
      "integrations.apigeeAuthConfigs.list",
      "integrations.apigeeAuthConfigs.update",
      "integrations.apigeeCertificates.create",
      "integrations.apigeeCertificates.get",
      "integrations.apigeeCertificates.list",
      "integrations.apigeeCertificates.update",
      "integrations.apigeeExecutions.list",
      "integrations.apigeeIntegrationVers.create",
      "integrations.apigeeIntegrationVers.delete",
      "integrations.apigeeIntegrationVers.deploy",
      "integrations.apigeeIntegrationVers.get",
      "integrations.apigeeIntegrationVers.list",
      "integrations.apigeeIntegrationVers.update",
      "integrations.apigeeIntegrations.invoke",
      "integrations.apigeeIntegrations.list",
      "integrations.apigeeSfdcChannels.create",
      "integrations.apigeeSfdcChannels.get",
      "integrations.apigeeSfdcChannels.list",
      "integrations.apigeeSfdcChannels.update",
      "integrations.apigeeSfdcInstances.create",
      "integrations.apigeeSfdcInstances.get",
      "integrations.apigeeSfdcInstances.list",
      "integrations.apigeeSfdcInstances.update",
      "integrations.authConfigs.create",
      "integrations.authConfigs.get",
      "integrations.authConfigs.list",
      "integrations.authConfigs.update",
      "integrations.certificates.get",
      "integrations.executions.get",
      "integrations.executions.list",
      "integrations.integrationVersions.create",
      "integrations.integrationVersions.delete",
      "integrations.integrationVersions.deploy",
      "integrations.integrationVersions.get",
      "integrations.integrationVersions.list",
      "integrations.integrationVersions.update",
      "integrations.integrations.create",
      "integrations.integrations.get",
      "integrations.integrations.invoke",
      "integrations.integrations.list",
      "integrations.integrations.update",
      "integrations.sfdcChannels.create",
      "integrations.sfdcChannels.delete",
      "integrations.sfdcChannels.get",
      "integrations.sfdcChannels.list",
      "integrations.sfdcChannels.update",
      "integrations.sfdcInstances.create",
      "integrations.sfdcInstances.delete",
      "integrations.sfdcInstances.get",
      "integrations.sfdcInstances.list",
      "integrations.sfdcInstances.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/integrations.apigeeIntegrationInvokerRole",
    "title": "Apigee Integration Invoker",
    "description": "A role that can invoke Apigee integrations.",
    "includedPermissions": [
      "connectors.actions.execute",
      "connectors.actions.list",
      "connectors.connections.executeSqlQuery",
      "connectors.entities.create",
      "connectors.entities.delete",
      "connectors.entities.deleteEntitiesWithConditions",
      "connectors.entities.get",
      "connectors.entities.list",
      "connectors.entities.update",
      "connectors.entities.updateEntitiesWithConditions",
      "connectors.entityTypes.list",
      "integrations.apigeeExecutions.list",
      "integrations.apigeeIntegrationVers.get",
      "integrations.apigeeIntegrationVers.list",
      "integrations.apigeeIntegrations.invoke",
      "integrations.apigeeIntegrations.list",
      "integrations.executions.get",
      "integrations.executions.list",
      "integrations.integrationVersions.get",
      "integrations.integrationVersions.invoke",
      "integrations.integrationVersions.list",
      "integrations.integrations.get",
      "integrations.integrations.invoke",
      "integrations.integrations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/integrations.apigeeIntegrationsViewer",
    "title": "Apigee Integration Viewer",
    "description": "A developer that can list and view Apigee integrations.",
    "includedPermissions": [
      "integrations.apigeeAuthConfigs.list",
      "integrations.apigeeCertificates.list",
      "integrations.apigeeIntegrationVers.get",
      "integrations.apigeeIntegrationVers.list",
      "integrations.apigeeIntegrations.list",
      "integrations.apigeeSfdcChannels.list",
      "integrations.apigeeSfdcInstances.list",
      "integrations.authConfigs.get",
      "integrations.authConfigs.list",
      "integrations.certificates.get",
      "integrations.certificates.list",
      "integrations.executions.get",
      "integrations.executions.list",
      "integrations.integrationVersions.get",
      "integrations.integrationVersions.list",
      "integrations.integrations.get",
      "integrations.integrations.list",
      "integrations.sfdcChannels.list",
      "integrations.sfdcInstances.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/integrations.apigeeSuspensionResolver",
    "title": "Apigee Integration Approver",
    "description": "A role that can approve / reject Apigee integrations that contain a suspension/wait task.",
    "includedPermissions": [
      "integrations.apigeeSuspensions.lift",
      "integrations.apigeeSuspensions.list",
      "integrations.apigeeSuspensions.resolve",
      "integrations.suspensions.lift",
      "integrations.suspensions.list",
      "integrations.suspensions.resolve",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/integrations.certificateViewer",
    "title": "Certificate Viewer",
    "description": "A developer that can list and view Certificates.",
    "includedPermissions": [
      "integrations.certificates.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/integrations.integrationAdmin",
    "title": "Application Integration Admin",
    "description": "A user that has full access (CRUD) to all integrations.",
    "includedPermissions": [
      "integrations.apigeeAuthConfigs.create",
      "integrations.apigeeAuthConfigs.delete",
      "integrations.apigeeAuthConfigs.get",
      "integrations.apigeeAuthConfigs.list",
      "integrations.apigeeAuthConfigs.update",
      "integrations.apigeeCertificates.create",
      "integrations.apigeeCertificates.delete",
      "integrations.apigeeCertificates.get",
      "integrations.apigeeCertificates.list",
      "integrations.apigeeCertificates.update",
      "integrations.apigeeExecutions.list",
      "integrations.apigeeIntegrationVers.create",
      "integrations.apigeeIntegrationVers.delete",
      "integrations.apigeeIntegrationVers.deploy",
      "integrations.apigeeIntegrationVers.get",
      "integrations.apigeeIntegrationVers.list",
      "integrations.apigeeIntegrationVers.update",
      "integrations.apigeeIntegrations.invoke",
      "integrations.apigeeIntegrations.list",
      "integrations.apigeeSfdcChannels.create",
      "integrations.apigeeSfdcChannels.delete",
      "integrations.apigeeSfdcChannels.get",
      "integrations.apigeeSfdcChannels.list",
      "integrations.apigeeSfdcChannels.update",
      "integrations.apigeeSfdcInstances.create",
      "integrations.apigeeSfdcInstances.delete",
      "integrations.apigeeSfdcInstances.get",
      "integrations.apigeeSfdcInstances.list",
      "integrations.apigeeSfdcInstances.update",
      "integrations.apigeeSuspensions.lift",
      "integrations.apigeeSuspensions.list",
      "integrations.apigeeSuspensions.resolve",
      "integrations.authConfigs.create",
      "integrations.authConfigs.delete",
      "integrations.authConfigs.get",
      "integrations.authConfigs.list",
      "integrations.authConfigs.update",
      "integrations.certificates.create",
      "integrations.certificates.delete",
      "integrations.certificates.get",
      "integrations.certificates.list",
      "integrations.certificates.update",
      "integrations.executions.get",
      "integrations.executions.list",
      "integrations.integrationVersions.create",
      "integrations.integrationVersions.delete",
      "integrations.integrationVersions.deploy",
      "integrations.integrationVersions.get",
      "integrations.integrationVersions.list",
      "integrations.integrationVersions.update",
      "integrations.integrations.create",
      "integrations.integrations.delete",
      "integrations.integrations.deploy",
      "integrations.integrations.get",
      "integrations.integrations.invoke",
      "integrations.integrations.list",
      "integrations.integrations.update",
      "integrations.sfdcChannels.create",
      "integrations.sfdcChannels.delete",
      "integrations.sfdcChannels.get",
      "integrations.sfdcChannels.list",
      "integrations.sfdcChannels.update",
      "integrations.sfdcInstances.create",
      "integrations.sfdcInstances.delete",
      "integrations.sfdcInstances.get",
      "integrations.sfdcInstances.list",
      "integrations.sfdcInstances.update",
      "integrations.suspensions.lift",
      "integrations.suspensions.list",
      "integrations.suspensions.resolve",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/integrations.integrationDeployer",
    "title": "Application Integration Deployer",
    "description": "A developer that can deploy/undeploy integrations to the integration runtime.",
    "includedPermissions": [
      "integrations.apigeeIntegrationVers.deploy",
      "integrations.apigeeIntegrationVers.get",
      "integrations.apigeeIntegrationVers.list",
      "integrations.apigeeIntegrations.list",
      "integrations.integrationVersions.deploy",
      "integrations.integrationVersions.get",
      "integrations.integrationVersions.list",
      "integrations.integrations.deploy",
      "integrations.integrations.get",
      "integrations.integrations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/integrations.integrationEditor",
    "title": "Application Integration Editor",
    "description": "A developer that can list, create and update integrations.",
    "includedPermissions": [
      "integrations.apigeeAuthConfigs.create",
      "integrations.apigeeAuthConfigs.get",
      "integrations.apigeeAuthConfigs.list",
      "integrations.apigeeAuthConfigs.update",
      "integrations.apigeeCertificates.create",
      "integrations.apigeeCertificates.get",
      "integrations.apigeeCertificates.list",
      "integrations.apigeeCertificates.update",
      "integrations.apigeeExecutions.list",
      "integrations.apigeeIntegrationVers.create",
      "integrations.apigeeIntegrationVers.delete",
      "integrations.apigeeIntegrationVers.deploy",
      "integrations.apigeeIntegrationVers.get",
      "integrations.apigeeIntegrationVers.list",
      "integrations.apigeeIntegrationVers.update",
      "integrations.apigeeIntegrations.invoke",
      "integrations.apigeeIntegrations.list",
      "integrations.apigeeSfdcChannels.create",
      "integrations.apigeeSfdcChannels.get",
      "integrations.apigeeSfdcChannels.list",
      "integrations.apigeeSfdcChannels.update",
      "integrations.apigeeSfdcInstances.create",
      "integrations.apigeeSfdcInstances.get",
      "integrations.apigeeSfdcInstances.list",
      "integrations.apigeeSfdcInstances.update",
      "integrations.authConfigs.create",
      "integrations.authConfigs.get",
      "integrations.authConfigs.list",
      "integrations.authConfigs.update",
      "integrations.certificates.get",
      "integrations.executions.get",
      "integrations.executions.list",
      "integrations.integrationVersions.create",
      "integrations.integrationVersions.delete",
      "integrations.integrationVersions.deploy",
      "integrations.integrationVersions.get",
      "integrations.integrationVersions.list",
      "integrations.integrationVersions.update",
      "integrations.integrations.create",
      "integrations.integrations.get",
      "integrations.integrations.invoke",
      "integrations.integrations.list",
      "integrations.integrations.update",
      "integrations.sfdcChannels.create",
      "integrations.sfdcChannels.delete",
      "integrations.sfdcChannels.get",
      "integrations.sfdcChannels.list",
      "integrations.sfdcChannels.update",
      "integrations.sfdcInstances.create",
      "integrations.sfdcInstances.delete",
      "integrations.sfdcInstances.get",
      "integrations.sfdcInstances.list",
      "integrations.sfdcInstances.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/integrations.integrationInvoker",
    "title": "Application Integration Invoker",
    "description": "A role that can invoke integrations.",
    "includedPermissions": [
      "integrations.apigeeExecutions.list",
      "integrations.apigeeIntegrationVers.get",
      "integrations.apigeeIntegrationVers.list",
      "integrations.apigeeIntegrations.invoke",
      "integrations.apigeeIntegrations.list",
      "integrations.executions.get",
      "integrations.executions.list",
      "integrations.integrationVersions.get",
      "integrations.integrationVersions.invoke",
      "integrations.integrationVersions.list",
      "integrations.integrations.get",
      "integrations.integrations.invoke",
      "integrations.integrations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/integrations.integrationViewer",
    "title": "Application Integration Viewer",
    "description": "A developer that can list and view integrations.",
    "includedPermissions": [
      "integrations.apigeeAuthConfigs.list",
      "integrations.apigeeCertificates.list",
      "integrations.apigeeIntegrationVers.get",
      "integrations.apigeeIntegrationVers.list",
      "integrations.apigeeIntegrations.list",
      "integrations.apigeeSfdcChannels.list",
      "integrations.apigeeSfdcInstances.list",
      "integrations.authConfigs.get",
      "integrations.authConfigs.list",
      "integrations.certificates.get",
      "integrations.certificates.list",
      "integrations.executions.get",
      "integrations.executions.list",
      "integrations.integrationVersions.get",
      "integrations.integrationVersions.list",
      "integrations.integrations.get",
      "integrations.integrations.list",
      "integrations.sfdcChannels.list",
      "integrations.sfdcInstances.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/integrations.securityIntegrationAdmin",
    "title": "Security Integration Admin",
    "description": "A user that has full access to all Security integrations.",
    "includedPermissions": [
      "integrations.securityAuthConfigs.create",
      "integrations.securityAuthConfigs.delete",
      "integrations.securityAuthConfigs.get",
      "integrations.securityAuthConfigs.list",
      "integrations.securityAuthConfigs.update",
      "integrations.securityExecutions.cancel",
      "integrations.securityExecutions.get",
      "integrations.securityExecutions.list",
      "integrations.securityIntegTempVers.create",
      "integrations.securityIntegTempVers.get",
      "integrations.securityIntegTempVers.list",
      "integrations.securityIntegrationVers.create",
      "integrations.securityIntegrationVers.delete",
      "integrations.securityIntegrationVers.deploy",
      "integrations.securityIntegrationVers.get",
      "integrations.securityIntegrationVers.list",
      "integrations.securityIntegrationVers.update",
      "integrations.securityIntegrations.invoke",
      "integrations.securityIntegrations.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/integrations.serviceAgent",
    "title": "Application Integration Service Agent",
    "description": "Service agent that grants access to execute an integration.",
    "includedPermissions": [
      "cloudfunctions.functions.invoke",
      "cloudscheduler.jobs.create",
      "cloudscheduler.jobs.delete",
      "cloudscheduler.jobs.enable",
      "cloudscheduler.jobs.fullView",
      "cloudscheduler.jobs.get",
      "cloudscheduler.jobs.pause",
      "cloudscheduler.jobs.run",
      "cloudscheduler.jobs.update",
      "cloudscheduler.locations.get",
      "cloudscheduler.locations.list",
      "connectors.actions.execute",
      "connectors.actions.list",
      "connectors.connections.executeSqlQuery",
      "connectors.entities.create",
      "connectors.entities.delete",
      "connectors.entities.deleteEntitiesWithConditions",
      "connectors.entities.get",
      "connectors.entities.list",
      "connectors.entities.update",
      "connectors.entities.updateEntitiesWithConditions",
      "connectors.entityTypes.list",
      "iam.serviceAccounts.getAccessToken",
      "iam.serviceAccounts.getOpenIdToken",
      "integrations.apigeeAuthConfigs.create",
      "integrations.apigeeAuthConfigs.delete",
      "integrations.apigeeAuthConfigs.get",
      "integrations.apigeeAuthConfigs.list",
      "integrations.apigeeAuthConfigs.update",
      "integrations.apigeeCertificates.create",
      "integrations.apigeeCertificates.delete",
      "integrations.apigeeCertificates.get",
      "integrations.apigeeCertificates.list",
      "integrations.apigeeCertificates.update",
      "integrations.apigeeExecutions.list",
      "integrations.apigeeIntegrationVers.create",
      "integrations.apigeeIntegrationVers.delete",
      "integrations.apigeeIntegrationVers.deploy",
      "integrations.apigeeIntegrationVers.get",
      "integrations.apigeeIntegrationVers.list",
      "integrations.apigeeIntegrationVers.update",
      "integrations.apigeeIntegrations.invoke",
      "integrations.apigeeIntegrations.list",
      "integrations.apigeeSfdcChannels.create",
      "integrations.apigeeSfdcChannels.delete",
      "integrations.apigeeSfdcChannels.get",
      "integrations.apigeeSfdcChannels.list",
      "integrations.apigeeSfdcChannels.update",
      "integrations.apigeeSfdcInstances.create",
      "integrations.apigeeSfdcInstances.delete",
      "integrations.apigeeSfdcInstances.get",
      "integrations.apigeeSfdcInstances.list",
      "integrations.apigeeSfdcInstances.update",
      "integrations.apigeeSuspensions.lift",
      "integrations.apigeeSuspensions.list",
      "integrations.apigeeSuspensions.resolve",
      "integrations.authConfigs.create",
      "integrations.authConfigs.delete",
      "integrations.authConfigs.get",
      "integrations.authConfigs.list",
      "integrations.authConfigs.update",
      "integrations.certificates.create",
      "integrations.certificates.delete",
      "integrations.certificates.get",
      "integrations.certificates.list",
      "integrations.certificates.update",
      "integrations.executions.list",
      "integrations.integrationVersions.create",
      "integrations.integrationVersions.delete",
      "integrations.integrationVersions.deploy",
      "integrations.integrationVersions.get",
      "integrations.integrationVersions.list",
      "integrations.integrationVersions.update",
      "integrations.integrations.create",
      "integrations.integrations.delete",
      "integrations.integrations.deploy",
      "integrations.integrations.get",
      "integrations.integrations.invoke",
      "integrations.integrations.list",
      "integrations.integrations.update",
      "integrations.sfdcChannels.create",
      "integrations.sfdcChannels.delete",
      "integrations.sfdcChannels.get",
      "integrations.sfdcChannels.list",
      "integrations.sfdcChannels.update",
      "integrations.sfdcInstances.create",
      "integrations.sfdcInstances.delete",
      "integrations.sfdcInstances.get",
      "integrations.sfdcInstances.list",
      "integrations.sfdcInstances.update",
      "integrations.suspensions.lift",
      "integrations.suspensions.list",
      "integrations.suspensions.resolve",
      "pubsub.schemas.attach",
      "pubsub.schemas.create",
      "pubsub.schemas.delete",
      "pubsub.schemas.get",
      "pubsub.schemas.list",
      "pubsub.schemas.validate",
      "pubsub.snapshots.create",
      "pubsub.snapshots.delete",
      "pubsub.snapshots.get",
      "pubsub.snapshots.list",
      "pubsub.snapshots.seek",
      "pubsub.snapshots.update",
      "pubsub.subscriptions.consume",
      "pubsub.subscriptions.create",
      "pubsub.subscriptions.delete",
      "pubsub.subscriptions.get",
      "pubsub.subscriptions.list",
      "pubsub.subscriptions.update",
      "pubsub.topics.attachSubscription",
      "pubsub.topics.create",
      "pubsub.topics.delete",
      "pubsub.topics.detachSubscription",
      "pubsub.topics.get",
      "pubsub.topics.list",
      "pubsub.topics.publish",
      "pubsub.topics.update",
      "pubsub.topics.updateTag",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "run.jobs.run",
      "run.routes.invoke",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/integrations.sfdcInstanceAdmin",
    "title": "Application Integration SFDC Instance Admin",
    "description": "A user that has full access (CRUD) to all SFDC instances.",
    "includedPermissions": [
      "integrations.sfdcChannels.create",
      "integrations.sfdcChannels.delete",
      "integrations.sfdcChannels.get",
      "integrations.sfdcChannels.list",
      "integrations.sfdcChannels.update",
      "integrations.sfdcInstances.create",
      "integrations.sfdcInstances.delete",
      "integrations.sfdcInstances.get",
      "integrations.sfdcInstances.list",
      "integrations.sfdcInstances.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/integrations.sfdcInstanceEditor",
    "title": "Application Integration SFDC Instance Editor",
    "description": "A developer that can list, create and update integrations.",
    "includedPermissions": [
      "integrations.sfdcChannels.create",
      "integrations.sfdcChannels.get",
      "integrations.sfdcChannels.list",
      "integrations.sfdcChannels.update",
      "integrations.sfdcInstances.create",
      "integrations.sfdcInstances.get",
      "integrations.sfdcInstances.list",
      "integrations.sfdcInstances.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/integrations.sfdcInstanceViewer",
    "title": "Application Integration SFDC Instance Viewer",
    "description": "A developer that can list and view SFDC instances.",
    "includedPermissions": [
      "integrations.sfdcChannels.get",
      "integrations.sfdcChannels.list",
      "integrations.sfdcInstances.get",
      "integrations.sfdcInstances.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/integrations.suspensionResolver",
    "title": "Application Integration Approver",
    "description": "A role that can resolve suspended integrations.",
    "includedPermissions": [
      "integrations.apigeeSuspensions.lift",
      "integrations.apigeeSuspensions.list",
      "integrations.apigeeSuspensions.resolve",
      "integrations.suspensions.lift",
      "integrations.suspensions.list",
      "integrations.suspensions.resolve",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/issuerswitch.accountManagerAdmin",
    "title": "Issuerswitch Account Manager Admin",
    "description": "This role can perform all account manager related operations",
    "includedPermissions": [
      "issuerswitch.accountManagerTransactions.list",
      "issuerswitch.operations.get",
      "issuerswitch.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "etag": "AA=="
  },
  {
    "name": "roles/issuerswitch.accountManagerTransactionsAdmin",
    "title": "Issuerswitch Account Manager Transactions Admin",
    "description": "This role can perform all account manager transactions related operations",
    "includedPermissions": [
      "issuerswitch.accountManagerTransactions.list",
      "issuerswitch.operations.get",
      "issuerswitch.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "etag": "AA=="
  },
  {
    "name": "roles/issuerswitch.accountManagerTransactionsViewer",
    "title": "Issuerswitch Account Manager Transactions Viewer",
    "description": "This role can view all account manager transactions",
    "includedPermissions": [
      "issuerswitch.accountManagerTransactions.list",
      "issuerswitch.operations.get",
      "issuerswitch.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "etag": "AA=="
  },
  {
    "name": "roles/issuerswitch.admin",
    "title": "Issuerswitch Admin",
    "description": "Access to all issuer switch roles",
    "includedPermissions": [
      "issuerswitch.accountManagerTransactions.list",
      "issuerswitch.complaintTransactions.list",
      "issuerswitch.complaints.create",
      "issuerswitch.complaints.resolve",
      "issuerswitch.disputes.create",
      "issuerswitch.disputes.resolve",
      "issuerswitch.financialTransactions.list",
      "issuerswitch.issuerParticipants.get",
      "issuerswitch.issuerParticipants.update",
      "issuerswitch.mandateTransactions.list",
      "issuerswitch.metadataTransactions.list",
      "issuerswitch.operations.cancel",
      "issuerswitch.operations.delete",
      "issuerswitch.operations.get",
      "issuerswitch.operations.list",
      "issuerswitch.operations.wait",
      "issuerswitch.ruleMetadata.list",
      "issuerswitch.ruleMetadataValues.create",
      "issuerswitch.ruleMetadataValues.delete",
      "issuerswitch.ruleMetadataValues.list",
      "issuerswitch.rules.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/issuerswitch.issuerParticipantsAdmin",
    "title": "Issuerswitch Participants Admin",
    "description": "Full access to issuer switch participants",
    "includedPermissions": [
      "issuerswitch.issuerParticipants.get",
      "issuerswitch.issuerParticipants.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "etag": "AA=="
  },
  {
    "name": "roles/issuerswitch.resolutionsAdmin",
    "title": "Issuerswitch Resolutions Admin",
    "description": "Full access to issuer switch resolutions",
    "includedPermissions": [
      "issuerswitch.complaintTransactions.list",
      "issuerswitch.complaints.create",
      "issuerswitch.complaints.resolve",
      "issuerswitch.disputes.create",
      "issuerswitch.disputes.resolve",
      "issuerswitch.operations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/issuerswitch.rulesAdmin",
    "title": "Issuerswitch Rules Admin",
    "description": "Full access to issuer switch rules",
    "includedPermissions": [
      "issuerswitch.ruleMetadata.list",
      "issuerswitch.ruleMetadataValues.create",
      "issuerswitch.ruleMetadataValues.delete",
      "issuerswitch.ruleMetadataValues.list",
      "issuerswitch.rules.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/issuerswitch.rulesViewer",
    "title": "Issuerswitch Rules Viewer",
    "description": "This role can view rules and related metadata.",
    "includedPermissions": [
      "issuerswitch.ruleMetadata.list",
      "issuerswitch.ruleMetadataValues.list",
      "issuerswitch.rules.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/issuerswitch.transactionsViewer",
    "title": "Issuerswitch Transactions Viewer",
    "description": "This role can view all transactions",
    "includedPermissions": [
      "issuerswitch.complaintTransactions.list",
      "issuerswitch.financialTransactions.list",
      "issuerswitch.mandateTransactions.list",
      "issuerswitch.metadataTransactions.list",
      "issuerswitch.operations.get",
      "issuerswitch.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/krmapihosting.admin",
    "title": "Config Controller Admin",
    "description": "Full access to all Config Controller resources.",
    "includedPermissions": [
      "krmapihosting.krmApiHosts.create",
      "krmapihosting.krmApiHosts.delete",
      "krmapihosting.krmApiHosts.get",
      "krmapihosting.krmApiHosts.getIamPolicy",
      "krmapihosting.krmApiHosts.list",
      "krmapihosting.krmApiHosts.setIamPolicy",
      "krmapihosting.krmApiHosts.update",
      "krmapihosting.locations.get",
      "krmapihosting.locations.list",
      "krmapihosting.operations.cancel",
      "krmapihosting.operations.delete",
      "krmapihosting.operations.get",
      "krmapihosting.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/krmapihosting.anthosApiEndpointServiceAgent",
    "title": "KRM API Hosting AnthosApiEndpoint Service Agent",
    "description": "Grants permissions to resources managed by AnthosApiEndpoint.",
    "includedPermissions": [
      "compute.instanceGroupManagers.get",
      "container.apiServices.create",
      "container.apiServices.delete",
      "container.apiServices.get",
      "container.apiServices.getStatus",
      "container.apiServices.list",
      "container.apiServices.update",
      "container.apiServices.updateStatus",
      "container.auditSinks.create",
      "container.auditSinks.delete",
      "container.auditSinks.get",
      "container.auditSinks.list",
      "container.auditSinks.update",
      "container.backendConfigs.create",
      "container.backendConfigs.delete",
      "container.backendConfigs.get",
      "container.backendConfigs.list",
      "container.backendConfigs.update",
      "container.bindings.create",
      "container.bindings.delete",
      "container.bindings.get",
      "container.bindings.list",
      "container.bindings.update",
      "container.certificateSigningRequests.approve",
      "container.certificateSigningRequests.create",
      "container.certificateSigningRequests.delete",
      "container.certificateSigningRequests.get",
      "container.certificateSigningRequests.getStatus",
      "container.certificateSigningRequests.list",
      "container.certificateSigningRequests.update",
      "container.certificateSigningRequests.updateStatus",
      "container.clusterRoleBindings.create",
      "container.clusterRoleBindings.delete",
      "container.clusterRoleBindings.get",
      "container.clusterRoleBindings.list",
      "container.clusterRoleBindings.update",
      "container.clusterRoles.bind",
      "container.clusterRoles.create",
      "container.clusterRoles.delete",
      "container.clusterRoles.escalate",
      "container.clusterRoles.get",
      "container.clusterRoles.list",
      "container.clusterRoles.update",
      "container.clusters.create",
      "container.clusters.createTagBinding",
      "container.clusters.delete",
      "container.clusters.deleteTagBinding",
      "container.clusters.get",
      "container.clusters.getCredentials",
      "container.clusters.impersonate",
      "container.clusters.list",
      "container.clusters.listEffectiveTags",
      "container.clusters.listTagBindings",
      "container.clusters.update",
      "container.componentStatuses.get",
      "container.componentStatuses.list",
      "container.configMaps.create",
      "container.configMaps.delete",
      "container.configMaps.get",
      "container.configMaps.list",
      "container.configMaps.update",
      "container.controllerRevisions.create",
      "container.controllerRevisions.delete",
      "container.controllerRevisions.get",
      "container.controllerRevisions.list",
      "container.controllerRevisions.update",
      "container.cronJobs.create",
      "container.cronJobs.delete",
      "container.cronJobs.get",
      "container.cronJobs.getStatus",
      "container.cronJobs.list",
      "container.cronJobs.update",
      "container.cronJobs.updateStatus",
      "container.csiDrivers.create",
      "container.csiDrivers.delete",
      "container.csiDrivers.get",
      "container.csiDrivers.list",
      "container.csiDrivers.update",
      "container.csiNodeInfos.create",
      "container.csiNodeInfos.delete",
      "container.csiNodeInfos.get",
      "container.csiNodeInfos.list",
      "container.csiNodeInfos.update",
      "container.csiNodes.create",
      "container.csiNodes.delete",
      "container.csiNodes.get",
      "container.csiNodes.list",
      "container.csiNodes.update",
      "container.customResourceDefinitions.create",
      "container.customResourceDefinitions.delete",
      "container.customResourceDefinitions.get",
      "container.customResourceDefinitions.getStatus",
      "container.customResourceDefinitions.list",
      "container.customResourceDefinitions.update",
      "container.customResourceDefinitions.updateStatus",
      "container.daemonSets.create",
      "container.daemonSets.delete",
      "container.daemonSets.get",
      "container.daemonSets.getStatus",
      "container.daemonSets.list",
      "container.daemonSets.update",
      "container.daemonSets.updateStatus",
      "container.deployments.create",
      "container.deployments.delete",
      "container.deployments.get",
      "container.deployments.getScale",
      "container.deployments.getStatus",
      "container.deployments.list",
      "container.deployments.rollback",
      "container.deployments.update",
      "container.deployments.updateScale",
      "container.deployments.updateStatus",
      "container.endpointSlices.create",
      "container.endpointSlices.delete",
      "container.endpointSlices.get",
      "container.endpointSlices.list",
      "container.endpointSlices.update",
      "container.endpoints.create",
      "container.endpoints.delete",
      "container.endpoints.get",
      "container.endpoints.list",
      "container.endpoints.update",
      "container.events.create",
      "container.events.delete",
      "container.events.get",
      "container.events.list",
      "container.events.update",
      "container.frontendConfigs.create",
      "container.frontendConfigs.delete",
      "container.frontendConfigs.get",
      "container.frontendConfigs.list",
      "container.frontendConfigs.update",
      "container.horizontalPodAutoscalers.create",
      "container.horizontalPodAutoscalers.delete",
      "container.horizontalPodAutoscalers.get",
      "container.horizontalPodAutoscalers.getStatus",
      "container.horizontalPodAutoscalers.list",
      "container.horizontalPodAutoscalers.update",
      "container.horizontalPodAutoscalers.updateStatus",
      "container.hostServiceAgent.use",
      "container.ingresses.create",
      "container.ingresses.delete",
      "container.ingresses.get",
      "container.ingresses.getStatus",
      "container.ingresses.list",
      "container.ingresses.update",
      "container.ingresses.updateStatus",
      "container.initializerConfigurations.create",
      "container.initializerConfigurations.delete",
      "container.initializerConfigurations.get",
      "container.initializerConfigurations.list",
      "container.initializerConfigurations.update",
      "container.jobs.create",
      "container.jobs.delete",
      "container.jobs.get",
      "container.jobs.getStatus",
      "container.jobs.list",
      "container.jobs.update",
      "container.jobs.updateStatus",
      "container.leases.create",
      "container.leases.delete",
      "container.leases.get",
      "container.leases.list",
      "container.leases.update",
      "container.limitRanges.create",
      "container.limitRanges.delete",
      "container.limitRanges.get",
      "container.limitRanges.list",
      "container.limitRanges.update",
      "container.localSubjectAccessReviews.create",
      "container.localSubjectAccessReviews.list",
      "container.managedCertificates.create",
      "container.managedCertificates.delete",
      "container.managedCertificates.get",
      "container.managedCertificates.list",
      "container.managedCertificates.update",
      "container.mutatingWebhookConfigurations.create",
      "container.mutatingWebhookConfigurations.delete",
      "container.mutatingWebhookConfigurations.get",
      "container.mutatingWebhookConfigurations.list",
      "container.mutatingWebhookConfigurations.update",
      "container.namespaces.create",
      "container.namespaces.delete",
      "container.namespaces.finalize",
      "container.namespaces.get",
      "container.namespaces.getStatus",
      "container.namespaces.list",
      "container.namespaces.update",
      "container.namespaces.updateStatus",
      "container.networkPolicies.create",
      "container.networkPolicies.delete",
      "container.networkPolicies.get",
      "container.networkPolicies.list",
      "container.networkPolicies.update",
      "container.nodes.create",
      "container.nodes.delete",
      "container.nodes.get",
      "container.nodes.getStatus",
      "container.nodes.list",
      "container.nodes.proxy",
      "container.nodes.update",
      "container.nodes.updateStatus",
      "container.operations.get",
      "container.operations.list",
      "container.persistentVolumeClaims.create",
      "container.persistentVolumeClaims.delete",
      "container.persistentVolumeClaims.get",
      "container.persistentVolumeClaims.getStatus",
      "container.persistentVolumeClaims.list",
      "container.persistentVolumeClaims.update",
      "container.persistentVolumeClaims.updateStatus",
      "container.persistentVolumes.create",
      "container.persistentVolumes.delete",
      "container.persistentVolumes.get",
      "container.persistentVolumes.getStatus",
      "container.persistentVolumes.list",
      "container.persistentVolumes.update",
      "container.persistentVolumes.updateStatus",
      "container.petSets.create",
      "container.petSets.delete",
      "container.petSets.get",
      "container.petSets.list",
      "container.petSets.update",
      "container.petSets.updateStatus",
      "container.podDisruptionBudgets.create",
      "container.podDisruptionBudgets.delete",
      "container.podDisruptionBudgets.get",
      "container.podDisruptionBudgets.getStatus",
      "container.podDisruptionBudgets.list",
      "container.podDisruptionBudgets.update",
      "container.podDisruptionBudgets.updateStatus",
      "container.podPresets.create",
      "container.podPresets.delete",
      "container.podPresets.get",
      "container.podPresets.list",
      "container.podPresets.update",
      "container.podSecurityPolicies.create",
      "container.podSecurityPolicies.delete",
      "container.podSecurityPolicies.get",
      "container.podSecurityPolicies.list",
      "container.podSecurityPolicies.update",
      "container.podSecurityPolicies.use",
      "container.podTemplates.create",
      "container.podTemplates.delete",
      "container.podTemplates.get",
      "container.podTemplates.list",
      "container.podTemplates.update",
      "container.pods.attach",
      "container.pods.create",
      "container.pods.delete",
      "container.pods.evict",
      "container.pods.exec",
      "container.pods.get",
      "container.pods.getLogs",
      "container.pods.getStatus",
      "container.pods.initialize",
      "container.pods.list",
      "container.pods.portForward",
      "container.pods.proxy",
      "container.pods.update",
      "container.pods.updateStatus",
      "container.priorityClasses.create",
      "container.priorityClasses.delete",
      "container.priorityClasses.get",
      "container.priorityClasses.list",
      "container.priorityClasses.update",
      "container.replicaSets.create",
      "container.replicaSets.delete",
      "container.replicaSets.get",
      "container.replicaSets.getScale",
      "container.replicaSets.getStatus",
      "container.replicaSets.list",
      "container.replicaSets.update",
      "container.replicaSets.updateScale",
      "container.replicaSets.updateStatus",
      "container.replicationControllers.create",
      "container.replicationControllers.delete",
      "container.replicationControllers.get",
      "container.replicationControllers.getScale",
      "container.replicationControllers.getStatus",
      "container.replicationControllers.list",
      "container.replicationControllers.update",
      "container.replicationControllers.updateScale",
      "container.replicationControllers.updateStatus",
      "container.resourceQuotas.create",
      "container.resourceQuotas.delete",
      "container.resourceQuotas.get",
      "container.resourceQuotas.getStatus",
      "container.resourceQuotas.list",
      "container.resourceQuotas.update",
      "container.resourceQuotas.updateStatus",
      "container.roleBindings.create",
      "container.roleBindings.delete",
      "container.roleBindings.get",
      "container.roleBindings.list",
      "container.roleBindings.update",
      "container.roles.bind",
      "container.roles.create",
      "container.roles.delete",
      "container.roles.escalate",
      "container.roles.get",
      "container.roles.list",
      "container.roles.update",
      "container.runtimeClasses.create",
      "container.runtimeClasses.delete",
      "container.runtimeClasses.get",
      "container.runtimeClasses.list",
      "container.runtimeClasses.update",
      "container.scheduledJobs.create",
      "container.scheduledJobs.delete",
      "container.scheduledJobs.get",
      "container.scheduledJobs.list",
      "container.scheduledJobs.update",
      "container.scheduledJobs.updateStatus",
      "container.secrets.create",
      "container.secrets.delete",
      "container.secrets.get",
      "container.secrets.list",
      "container.secrets.update",
      "container.selfSubjectAccessReviews.create",
      "container.selfSubjectAccessReviews.list",
      "container.selfSubjectRulesReviews.create",
      "container.serviceAccounts.create",
      "container.serviceAccounts.createToken",
      "container.serviceAccounts.delete",
      "container.serviceAccounts.get",
      "container.serviceAccounts.list",
      "container.serviceAccounts.update",
      "container.services.create",
      "container.services.delete",
      "container.services.get",
      "container.services.getStatus",
      "container.services.list",
      "container.services.proxy",
      "container.services.update",
      "container.services.updateStatus",
      "container.statefulSets.create",
      "container.statefulSets.delete",
      "container.statefulSets.get",
      "container.statefulSets.getScale",
      "container.statefulSets.getStatus",
      "container.statefulSets.list",
      "container.statefulSets.update",
      "container.statefulSets.updateScale",
      "container.statefulSets.updateStatus",
      "container.storageClasses.create",
      "container.storageClasses.delete",
      "container.storageClasses.get",
      "container.storageClasses.list",
      "container.storageClasses.update",
      "container.storageStates.create",
      "container.storageStates.delete",
      "container.storageStates.get",
      "container.storageStates.getStatus",
      "container.storageStates.list",
      "container.storageStates.update",
      "container.storageStates.updateStatus",
      "container.storageVersionMigrations.create",
      "container.storageVersionMigrations.delete",
      "container.storageVersionMigrations.get",
      "container.storageVersionMigrations.getStatus",
      "container.storageVersionMigrations.list",
      "container.storageVersionMigrations.update",
      "container.storageVersionMigrations.updateStatus",
      "container.subjectAccessReviews.create",
      "container.subjectAccessReviews.list",
      "container.thirdPartyObjects.create",
      "container.thirdPartyObjects.delete",
      "container.thirdPartyObjects.get",
      "container.thirdPartyObjects.list",
      "container.thirdPartyObjects.update",
      "container.thirdPartyResources.create",
      "container.thirdPartyResources.delete",
      "container.thirdPartyResources.get",
      "container.thirdPartyResources.list",
      "container.thirdPartyResources.update",
      "container.tokenReviews.create",
      "container.updateInfos.create",
      "container.updateInfos.delete",
      "container.updateInfos.get",
      "container.updateInfos.list",
      "container.updateInfos.update",
      "container.validatingWebhookConfigurations.create",
      "container.validatingWebhookConfigurations.delete",
      "container.validatingWebhookConfigurations.get",
      "container.validatingWebhookConfigurations.list",
      "container.validatingWebhookConfigurations.update",
      "container.volumeAttachments.create",
      "container.volumeAttachments.delete",
      "container.volumeAttachments.get",
      "container.volumeAttachments.getStatus",
      "container.volumeAttachments.list",
      "container.volumeAttachments.update",
      "container.volumeAttachments.updateStatus",
      "container.volumeSnapshotClasses.create",
      "container.volumeSnapshotClasses.delete",
      "container.volumeSnapshotClasses.get",
      "container.volumeSnapshotClasses.list",
      "container.volumeSnapshotClasses.update",
      "container.volumeSnapshotContents.create",
      "container.volumeSnapshotContents.delete",
      "container.volumeSnapshotContents.get",
      "container.volumeSnapshotContents.getStatus",
      "container.volumeSnapshotContents.list",
      "container.volumeSnapshotContents.update",
      "container.volumeSnapshotContents.updateStatus",
      "container.volumeSnapshots.create",
      "container.volumeSnapshots.delete",
      "container.volumeSnapshots.get",
      "container.volumeSnapshots.getStatus",
      "container.volumeSnapshots.list",
      "container.volumeSnapshots.update",
      "container.volumeSnapshots.updateStatus",
      "gkehub.features.create",
      "gkehub.features.delete",
      "gkehub.features.get",
      "gkehub.features.getIamPolicy",
      "gkehub.features.list",
      "gkehub.features.setIamPolicy",
      "gkehub.features.update",
      "gkehub.fleet.create",
      "gkehub.fleet.delete",
      "gkehub.fleet.get",
      "gkehub.fleet.update",
      "gkehub.gateway.delete",
      "gkehub.gateway.get",
      "gkehub.gateway.getIamPolicy",
      "gkehub.gateway.patch",
      "gkehub.gateway.post",
      "gkehub.gateway.put",
      "gkehub.gateway.setIamPolicy",
      "gkehub.locations.get",
      "gkehub.locations.list",
      "gkehub.membershipbindings.create",
      "gkehub.membershipbindings.delete",
      "gkehub.membershipbindings.get",
      "gkehub.membershipbindings.list",
      "gkehub.membershipbindings.update",
      "gkehub.memberships.create",
      "gkehub.memberships.delete",
      "gkehub.memberships.generateConnectManifest",
      "gkehub.memberships.get",
      "gkehub.memberships.getIamPolicy",
      "gkehub.memberships.list",
      "gkehub.memberships.setIamPolicy",
      "gkehub.memberships.update",
      "gkehub.namespaces.create",
      "gkehub.namespaces.delete",
      "gkehub.namespaces.get",
      "gkehub.namespaces.list",
      "gkehub.namespaces.update",
      "gkehub.operations.cancel",
      "gkehub.operations.delete",
      "gkehub.operations.get",
      "gkehub.operations.list",
      "gkehub.rbacrolebindings.create",
      "gkehub.rbacrolebindings.delete",
      "gkehub.rbacrolebindings.get",
      "gkehub.rbacrolebindings.list",
      "gkehub.rbacrolebindings.update",
      "gkehub.scopes.create",
      "gkehub.scopes.delete",
      "gkehub.scopes.get",
      "gkehub.scopes.getIamPolicy",
      "gkehub.scopes.list",
      "gkehub.scopes.update",
      "iam.serviceAccounts.actAs",
      "meshconfig.projects.init",
      "recommender.containerDiagnosisInsights.get",
      "recommender.containerDiagnosisInsights.list",
      "recommender.containerDiagnosisInsights.update",
      "recommender.containerDiagnosisRecommendations.get",
      "recommender.containerDiagnosisRecommendations.list",
      "recommender.containerDiagnosisRecommendations.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.get",
      "recommender.networkAnalyzerGkeConnectivityInsights.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.update",
      "recommender.networkAnalyzerGkeIpAddressInsights.get",
      "recommender.networkAnalyzerGkeIpAddressInsights.list",
      "recommender.networkAnalyzerGkeIpAddressInsights.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list",
      "resourcemanager.projects.setIamPolicy",
      "serviceusage.services.enable",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "serviceusage.services.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/krmapihosting.serviceAgent",
    "title": "KRM API Hosting Service Agent",
    "description": "Gives KRM API Hosting service account access to managed resource.",
    "includedPermissions": [
      "compute.instanceGroupManagers.get",
      "compute.regions.get",
      "container.apiServices.create",
      "container.apiServices.delete",
      "container.apiServices.get",
      "container.apiServices.getStatus",
      "container.apiServices.list",
      "container.apiServices.update",
      "container.apiServices.updateStatus",
      "container.auditSinks.create",
      "container.auditSinks.delete",
      "container.auditSinks.get",
      "container.auditSinks.list",
      "container.auditSinks.update",
      "container.backendConfigs.create",
      "container.backendConfigs.delete",
      "container.backendConfigs.get",
      "container.backendConfigs.list",
      "container.backendConfigs.update",
      "container.bindings.create",
      "container.bindings.delete",
      "container.bindings.get",
      "container.bindings.list",
      "container.bindings.update",
      "container.certificateSigningRequests.approve",
      "container.certificateSigningRequests.create",
      "container.certificateSigningRequests.delete",
      "container.certificateSigningRequests.get",
      "container.certificateSigningRequests.getStatus",
      "container.certificateSigningRequests.list",
      "container.certificateSigningRequests.update",
      "container.certificateSigningRequests.updateStatus",
      "container.clusterRoleBindings.create",
      "container.clusterRoleBindings.delete",
      "container.clusterRoleBindings.get",
      "container.clusterRoleBindings.list",
      "container.clusterRoleBindings.update",
      "container.clusterRoles.bind",
      "container.clusterRoles.create",
      "container.clusterRoles.delete",
      "container.clusterRoles.escalate",
      "container.clusterRoles.get",
      "container.clusterRoles.list",
      "container.clusterRoles.update",
      "container.clusters.create",
      "container.clusters.createTagBinding",
      "container.clusters.delete",
      "container.clusters.deleteTagBinding",
      "container.clusters.get",
      "container.clusters.getCredentials",
      "container.clusters.impersonate",
      "container.clusters.list",
      "container.clusters.listEffectiveTags",
      "container.clusters.listTagBindings",
      "container.clusters.update",
      "container.componentStatuses.get",
      "container.componentStatuses.list",
      "container.configMaps.create",
      "container.configMaps.delete",
      "container.configMaps.get",
      "container.configMaps.list",
      "container.configMaps.update",
      "container.controllerRevisions.create",
      "container.controllerRevisions.delete",
      "container.controllerRevisions.get",
      "container.controllerRevisions.list",
      "container.controllerRevisions.update",
      "container.cronJobs.create",
      "container.cronJobs.delete",
      "container.cronJobs.get",
      "container.cronJobs.getStatus",
      "container.cronJobs.list",
      "container.cronJobs.update",
      "container.cronJobs.updateStatus",
      "container.csiDrivers.create",
      "container.csiDrivers.delete",
      "container.csiDrivers.get",
      "container.csiDrivers.list",
      "container.csiDrivers.update",
      "container.csiNodeInfos.create",
      "container.csiNodeInfos.delete",
      "container.csiNodeInfos.get",
      "container.csiNodeInfos.list",
      "container.csiNodeInfos.update",
      "container.csiNodes.create",
      "container.csiNodes.delete",
      "container.csiNodes.get",
      "container.csiNodes.list",
      "container.csiNodes.update",
      "container.customResourceDefinitions.create",
      "container.customResourceDefinitions.delete",
      "container.customResourceDefinitions.get",
      "container.customResourceDefinitions.getStatus",
      "container.customResourceDefinitions.list",
      "container.customResourceDefinitions.update",
      "container.customResourceDefinitions.updateStatus",
      "container.daemonSets.create",
      "container.daemonSets.delete",
      "container.daemonSets.get",
      "container.daemonSets.getStatus",
      "container.daemonSets.list",
      "container.daemonSets.update",
      "container.daemonSets.updateStatus",
      "container.deployments.create",
      "container.deployments.delete",
      "container.deployments.get",
      "container.deployments.getScale",
      "container.deployments.getStatus",
      "container.deployments.list",
      "container.deployments.rollback",
      "container.deployments.update",
      "container.deployments.updateScale",
      "container.deployments.updateStatus",
      "container.endpointSlices.create",
      "container.endpointSlices.delete",
      "container.endpointSlices.get",
      "container.endpointSlices.list",
      "container.endpointSlices.update",
      "container.endpoints.create",
      "container.endpoints.delete",
      "container.endpoints.get",
      "container.endpoints.list",
      "container.endpoints.update",
      "container.events.create",
      "container.events.delete",
      "container.events.get",
      "container.events.list",
      "container.events.update",
      "container.frontendConfigs.create",
      "container.frontendConfigs.delete",
      "container.frontendConfigs.get",
      "container.frontendConfigs.list",
      "container.frontendConfigs.update",
      "container.horizontalPodAutoscalers.create",
      "container.horizontalPodAutoscalers.delete",
      "container.horizontalPodAutoscalers.get",
      "container.horizontalPodAutoscalers.getStatus",
      "container.horizontalPodAutoscalers.list",
      "container.horizontalPodAutoscalers.update",
      "container.horizontalPodAutoscalers.updateStatus",
      "container.hostServiceAgent.use",
      "container.ingresses.create",
      "container.ingresses.delete",
      "container.ingresses.get",
      "container.ingresses.getStatus",
      "container.ingresses.list",
      "container.ingresses.update",
      "container.ingresses.updateStatus",
      "container.initializerConfigurations.create",
      "container.initializerConfigurations.delete",
      "container.initializerConfigurations.get",
      "container.initializerConfigurations.list",
      "container.initializerConfigurations.update",
      "container.jobs.create",
      "container.jobs.delete",
      "container.jobs.get",
      "container.jobs.getStatus",
      "container.jobs.list",
      "container.jobs.update",
      "container.jobs.updateStatus",
      "container.leases.create",
      "container.leases.delete",
      "container.leases.get",
      "container.leases.list",
      "container.leases.update",
      "container.limitRanges.create",
      "container.limitRanges.delete",
      "container.limitRanges.get",
      "container.limitRanges.list",
      "container.limitRanges.update",
      "container.localSubjectAccessReviews.create",
      "container.localSubjectAccessReviews.list",
      "container.managedCertificates.create",
      "container.managedCertificates.delete",
      "container.managedCertificates.get",
      "container.managedCertificates.list",
      "container.managedCertificates.update",
      "container.mutatingWebhookConfigurations.create",
      "container.mutatingWebhookConfigurations.delete",
      "container.mutatingWebhookConfigurations.get",
      "container.mutatingWebhookConfigurations.list",
      "container.mutatingWebhookConfigurations.update",
      "container.namespaces.create",
      "container.namespaces.delete",
      "container.namespaces.finalize",
      "container.namespaces.get",
      "container.namespaces.getStatus",
      "container.namespaces.list",
      "container.namespaces.update",
      "container.namespaces.updateStatus",
      "container.networkPolicies.create",
      "container.networkPolicies.delete",
      "container.networkPolicies.get",
      "container.networkPolicies.list",
      "container.networkPolicies.update",
      "container.nodes.create",
      "container.nodes.delete",
      "container.nodes.get",
      "container.nodes.getStatus",
      "container.nodes.list",
      "container.nodes.proxy",
      "container.nodes.update",
      "container.nodes.updateStatus",
      "container.operations.get",
      "container.operations.list",
      "container.persistentVolumeClaims.create",
      "container.persistentVolumeClaims.delete",
      "container.persistentVolumeClaims.get",
      "container.persistentVolumeClaims.getStatus",
      "container.persistentVolumeClaims.list",
      "container.persistentVolumeClaims.update",
      "container.persistentVolumeClaims.updateStatus",
      "container.persistentVolumes.create",
      "container.persistentVolumes.delete",
      "container.persistentVolumes.get",
      "container.persistentVolumes.getStatus",
      "container.persistentVolumes.list",
      "container.persistentVolumes.update",
      "container.persistentVolumes.updateStatus",
      "container.petSets.create",
      "container.petSets.delete",
      "container.petSets.get",
      "container.petSets.list",
      "container.petSets.update",
      "container.petSets.updateStatus",
      "container.podDisruptionBudgets.create",
      "container.podDisruptionBudgets.delete",
      "container.podDisruptionBudgets.get",
      "container.podDisruptionBudgets.getStatus",
      "container.podDisruptionBudgets.list",
      "container.podDisruptionBudgets.update",
      "container.podDisruptionBudgets.updateStatus",
      "container.podPresets.create",
      "container.podPresets.delete",
      "container.podPresets.get",
      "container.podPresets.list",
      "container.podPresets.update",
      "container.podSecurityPolicies.create",
      "container.podSecurityPolicies.delete",
      "container.podSecurityPolicies.get",
      "container.podSecurityPolicies.list",
      "container.podSecurityPolicies.update",
      "container.podSecurityPolicies.use",
      "container.podTemplates.create",
      "container.podTemplates.delete",
      "container.podTemplates.get",
      "container.podTemplates.list",
      "container.podTemplates.update",
      "container.pods.attach",
      "container.pods.create",
      "container.pods.delete",
      "container.pods.evict",
      "container.pods.exec",
      "container.pods.get",
      "container.pods.getLogs",
      "container.pods.getStatus",
      "container.pods.initialize",
      "container.pods.list",
      "container.pods.portForward",
      "container.pods.proxy",
      "container.pods.update",
      "container.pods.updateStatus",
      "container.priorityClasses.create",
      "container.priorityClasses.delete",
      "container.priorityClasses.get",
      "container.priorityClasses.list",
      "container.priorityClasses.update",
      "container.replicaSets.create",
      "container.replicaSets.delete",
      "container.replicaSets.get",
      "container.replicaSets.getScale",
      "container.replicaSets.getStatus",
      "container.replicaSets.list",
      "container.replicaSets.update",
      "container.replicaSets.updateScale",
      "container.replicaSets.updateStatus",
      "container.replicationControllers.create",
      "container.replicationControllers.delete",
      "container.replicationControllers.get",
      "container.replicationControllers.getScale",
      "container.replicationControllers.getStatus",
      "container.replicationControllers.list",
      "container.replicationControllers.update",
      "container.replicationControllers.updateScale",
      "container.replicationControllers.updateStatus",
      "container.resourceQuotas.create",
      "container.resourceQuotas.delete",
      "container.resourceQuotas.get",
      "container.resourceQuotas.getStatus",
      "container.resourceQuotas.list",
      "container.resourceQuotas.update",
      "container.resourceQuotas.updateStatus",
      "container.roleBindings.create",
      "container.roleBindings.delete",
      "container.roleBindings.get",
      "container.roleBindings.list",
      "container.roleBindings.update",
      "container.roles.bind",
      "container.roles.create",
      "container.roles.delete",
      "container.roles.escalate",
      "container.roles.get",
      "container.roles.list",
      "container.roles.update",
      "container.runtimeClasses.create",
      "container.runtimeClasses.delete",
      "container.runtimeClasses.get",
      "container.runtimeClasses.list",
      "container.runtimeClasses.update",
      "container.scheduledJobs.create",
      "container.scheduledJobs.delete",
      "container.scheduledJobs.get",
      "container.scheduledJobs.list",
      "container.scheduledJobs.update",
      "container.scheduledJobs.updateStatus",
      "container.secrets.create",
      "container.secrets.delete",
      "container.secrets.get",
      "container.secrets.list",
      "container.secrets.update",
      "container.selfSubjectAccessReviews.create",
      "container.selfSubjectAccessReviews.list",
      "container.selfSubjectRulesReviews.create",
      "container.serviceAccounts.create",
      "container.serviceAccounts.createToken",
      "container.serviceAccounts.delete",
      "container.serviceAccounts.get",
      "container.serviceAccounts.list",
      "container.serviceAccounts.update",
      "container.services.create",
      "container.services.delete",
      "container.services.get",
      "container.services.getStatus",
      "container.services.list",
      "container.services.proxy",
      "container.services.update",
      "container.services.updateStatus",
      "container.statefulSets.create",
      "container.statefulSets.delete",
      "container.statefulSets.get",
      "container.statefulSets.getScale",
      "container.statefulSets.getStatus",
      "container.statefulSets.list",
      "container.statefulSets.update",
      "container.statefulSets.updateScale",
      "container.statefulSets.updateStatus",
      "container.storageClasses.create",
      "container.storageClasses.delete",
      "container.storageClasses.get",
      "container.storageClasses.list",
      "container.storageClasses.update",
      "container.storageStates.create",
      "container.storageStates.delete",
      "container.storageStates.get",
      "container.storageStates.getStatus",
      "container.storageStates.list",
      "container.storageStates.update",
      "container.storageStates.updateStatus",
      "container.storageVersionMigrations.create",
      "container.storageVersionMigrations.delete",
      "container.storageVersionMigrations.get",
      "container.storageVersionMigrations.getStatus",
      "container.storageVersionMigrations.list",
      "container.storageVersionMigrations.update",
      "container.storageVersionMigrations.updateStatus",
      "container.subjectAccessReviews.create",
      "container.subjectAccessReviews.list",
      "container.thirdPartyObjects.create",
      "container.thirdPartyObjects.delete",
      "container.thirdPartyObjects.get",
      "container.thirdPartyObjects.list",
      "container.thirdPartyObjects.update",
      "container.thirdPartyResources.create",
      "container.thirdPartyResources.delete",
      "container.thirdPartyResources.get",
      "container.thirdPartyResources.list",
      "container.thirdPartyResources.update",
      "container.tokenReviews.create",
      "container.updateInfos.create",
      "container.updateInfos.delete",
      "container.updateInfos.get",
      "container.updateInfos.list",
      "container.updateInfos.update",
      "container.validatingWebhookConfigurations.create",
      "container.validatingWebhookConfigurations.delete",
      "container.validatingWebhookConfigurations.get",
      "container.validatingWebhookConfigurations.list",
      "container.validatingWebhookConfigurations.update",
      "container.volumeAttachments.create",
      "container.volumeAttachments.delete",
      "container.volumeAttachments.get",
      "container.volumeAttachments.getStatus",
      "container.volumeAttachments.list",
      "container.volumeAttachments.update",
      "container.volumeAttachments.updateStatus",
      "container.volumeSnapshotClasses.create",
      "container.volumeSnapshotClasses.delete",
      "container.volumeSnapshotClasses.get",
      "container.volumeSnapshotClasses.list",
      "container.volumeSnapshotClasses.update",
      "container.volumeSnapshotContents.create",
      "container.volumeSnapshotContents.delete",
      "container.volumeSnapshotContents.get",
      "container.volumeSnapshotContents.getStatus",
      "container.volumeSnapshotContents.list",
      "container.volumeSnapshotContents.update",
      "container.volumeSnapshotContents.updateStatus",
      "container.volumeSnapshots.create",
      "container.volumeSnapshots.delete",
      "container.volumeSnapshots.get",
      "container.volumeSnapshots.getStatus",
      "container.volumeSnapshots.list",
      "container.volumeSnapshots.update",
      "container.volumeSnapshots.updateStatus",
      "iam.serviceAccounts.actAs",
      "recommender.containerDiagnosisInsights.get",
      "recommender.containerDiagnosisInsights.list",
      "recommender.containerDiagnosisInsights.update",
      "recommender.containerDiagnosisRecommendations.get",
      "recommender.containerDiagnosisRecommendations.list",
      "recommender.containerDiagnosisRecommendations.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.get",
      "recommender.networkAnalyzerGkeConnectivityInsights.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.update",
      "recommender.networkAnalyzerGkeIpAddressInsights.get",
      "recommender.networkAnalyzerGkeIpAddressInsights.list",
      "recommender.networkAnalyzerGkeIpAddressInsights.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/krmapihosting.viewer",
    "title": "Config Controller Viewer",
    "description": "Read-only access to all Config Controller resources.",
    "includedPermissions": [
      "krmapihosting.krmApiHosts.get",
      "krmapihosting.krmApiHosts.getIamPolicy",
      "krmapihosting.krmApiHosts.list",
      "krmapihosting.locations.get",
      "krmapihosting.locations.list",
      "krmapihosting.operations.get",
      "krmapihosting.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/kuberun.eventsControlPlaneServiceAgent",
    "title": "KubeRun Events Control Plane Service Agent",
    "description": "Service account role used to setup authentication for the control plane used by KubeRun Events.",
    "includedPermissions": [
      "cloudscheduler.jobs.create",
      "cloudscheduler.jobs.delete",
      "cloudscheduler.jobs.get",
      "logging.sinks.create",
      "logging.sinks.delete",
      "logging.sinks.get",
      "pubsub.subscriptions.create",
      "pubsub.subscriptions.delete",
      "pubsub.subscriptions.get",
      "pubsub.topics.attachSubscription",
      "pubsub.topics.create",
      "pubsub.topics.delete",
      "pubsub.topics.get",
      "pubsub.topics.getIamPolicy",
      "pubsub.topics.setIamPolicy",
      "resourcemanager.projects.get",
      "storage.buckets.get",
      "storage.buckets.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/kuberun.eventsDataPlaneServiceAgent",
    "title": "KubeRun Events Data Plane Service Agent",
    "description": "Service account role used to setup authentication for the data plane used by KubeRun Events.",
    "includedPermissions": [
      "cloudtrace.traces.patch",
      "monitoring.timeSeries.create",
      "pubsub.subscriptions.consume",
      "pubsub.subscriptions.get",
      "pubsub.topics.get",
      "pubsub.topics.publish",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/lifesciences.admin",
    "title": "Cloud Life Sciences Admin",
    "description": "Full control of Cloud Life Sciences resources.",
    "includedPermissions": [
      "lifesciences.operations.cancel",
      "lifesciences.operations.get",
      "lifesciences.operations.list",
      "lifesciences.workflows.run"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/lifesciences.editor",
    "title": "Cloud Life Sciences Editor",
    "description": "Access to read and edit Cloud Life Sciences resources.",
    "includedPermissions": [
      "lifesciences.operations.cancel",
      "lifesciences.operations.get",
      "lifesciences.operations.list",
      "lifesciences.workflows.run"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/lifesciences.serviceAgent",
    "title": "Cloud Life Sciences Service Agent",
    "description": "Gives Cloud Life Sciences Service Account access to compute resources. Includes access to service accounts.",
    "includedPermissions": [
      "compute.acceleratorTypes.get",
      "compute.acceleratorTypes.list",
      "compute.addresses.createInternal",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.addresses.use",
      "compute.addresses.useInternal",
      "compute.autoscalers.create",
      "compute.autoscalers.delete",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.autoscalers.update",
      "compute.backendBuckets.get",
      "compute.backendBuckets.list",
      "compute.backendBuckets.listEffectiveTags",
      "compute.backendBuckets.listTagBindings",
      "compute.backendServices.get",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.diskTypes.get",
      "compute.diskTypes.list",
      "compute.disks.addResourcePolicies",
      "compute.disks.create",
      "compute.disks.createSnapshot",
      "compute.disks.createTagBinding",
      "compute.disks.delete",
      "compute.disks.deleteTagBinding",
      "compute.disks.get",
      "compute.disks.getIamPolicy",
      "compute.disks.list",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.disks.removeResourcePolicies",
      "compute.disks.resize",
      "compute.disks.setIamPolicy",
      "compute.disks.setLabels",
      "compute.disks.startAsyncReplication",
      "compute.disks.stopAsyncReplication",
      "compute.disks.stopGroupAsyncReplication",
      "compute.disks.update",
      "compute.disks.use",
      "compute.disks.useReadOnly",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.list",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalAddresses.use",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalForwardingRules.pscGet",
      "compute.globalNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.create",
      "compute.globalNetworkEndpointGroups.createTagBinding",
      "compute.globalNetworkEndpointGroups.delete",
      "compute.globalNetworkEndpointGroups.deleteTagBinding",
      "compute.globalNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.get",
      "compute.globalNetworkEndpointGroups.list",
      "compute.globalNetworkEndpointGroups.listEffectiveTags",
      "compute.globalNetworkEndpointGroups.listTagBindings",
      "compute.globalNetworkEndpointGroups.use",
      "compute.globalOperations.get",
      "compute.globalOperations.list",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.images.create",
      "compute.images.createTagBinding",
      "compute.images.delete",
      "compute.images.deleteTagBinding",
      "compute.images.deprecate",
      "compute.images.get",
      "compute.images.getFromFamily",
      "compute.images.getIamPolicy",
      "compute.images.list",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.images.setIamPolicy",
      "compute.images.setLabels",
      "compute.images.update",
      "compute.images.useReadOnly",
      "compute.instanceGroupManagers.create",
      "compute.instanceGroupManagers.delete",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroupManagers.update",
      "compute.instanceGroupManagers.use",
      "compute.instanceGroups.create",
      "compute.instanceGroups.delete",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instanceGroups.update",
      "compute.instanceGroups.use",
      "compute.instanceTemplates.create",
      "compute.instanceTemplates.delete",
      "compute.instanceTemplates.get",
      "compute.instanceTemplates.getIamPolicy",
      "compute.instanceTemplates.list",
      "compute.instanceTemplates.setIamPolicy",
      "compute.instanceTemplates.useReadOnly",
      "compute.instances.addAccessConfig",
      "compute.instances.addMaintenancePolicies",
      "compute.instances.addResourcePolicies",
      "compute.instances.attachDisk",
      "compute.instances.create",
      "compute.instances.createTagBinding",
      "compute.instances.delete",
      "compute.instances.deleteAccessConfig",
      "compute.instances.deleteTagBinding",
      "compute.instances.detachDisk",
      "compute.instances.get",
      "compute.instances.getEffectiveFirewalls",
      "compute.instances.getGuestAttributes",
      "compute.instances.getIamPolicy",
      "compute.instances.getScreenshot",
      "compute.instances.getSerialPortOutput",
      "compute.instances.getShieldedInstanceIdentity",
      "compute.instances.getShieldedVmIdentity",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listReferrers",
      "compute.instances.listTagBindings",
      "compute.instances.osAdminLogin",
      "compute.instances.osLogin",
      "compute.instances.removeMaintenancePolicies",
      "compute.instances.removeResourcePolicies",
      "compute.instances.reset",
      "compute.instances.resume",
      "compute.instances.sendDiagnosticInterrupt",
      "compute.instances.setDeletionProtection",
      "compute.instances.setDiskAutoDelete",
      "compute.instances.setIamPolicy",
      "compute.instances.setLabels",
      "compute.instances.setMachineResources",
      "compute.instances.setMachineType",
      "compute.instances.setMetadata",
      "compute.instances.setMinCpuPlatform",
      "compute.instances.setName",
      "compute.instances.setScheduling",
      "compute.instances.setSecurityPolicy",
      "compute.instances.setServiceAccount",
      "compute.instances.setShieldedInstanceIntegrityPolicy",
      "compute.instances.setShieldedVmIntegrityPolicy",
      "compute.instances.setTags",
      "compute.instances.simulateMaintenanceEvent",
      "compute.instances.start",
      "compute.instances.startWithEncryptionKey",
      "compute.instances.stop",
      "compute.instances.suspend",
      "compute.instances.update",
      "compute.instances.updateAccessConfig",
      "compute.instances.updateDisplayDevice",
      "compute.instances.updateNetworkInterface",
      "compute.instances.updateSecurity",
      "compute.instances.updateShieldedInstanceConfig",
      "compute.instances.updateShieldedVmConfig",
      "compute.instances.use",
      "compute.instances.useReadOnly",
      "compute.instantSnapshots.create",
      "compute.instantSnapshots.delete",
      "compute.instantSnapshots.export",
      "compute.instantSnapshots.get",
      "compute.instantSnapshots.getIamPolicy",
      "compute.instantSnapshots.list",
      "compute.instantSnapshots.setIamPolicy",
      "compute.instantSnapshots.setLabels",
      "compute.instantSnapshots.useReadOnly",
      "compute.interconnectAttachments.get",
      "compute.interconnectAttachments.list",
      "compute.interconnectLocations.get",
      "compute.interconnectLocations.list",
      "compute.interconnectRemoteLocations.get",
      "compute.interconnectRemoteLocations.list",
      "compute.interconnects.get",
      "compute.interconnects.list",
      "compute.licenseCodes.get",
      "compute.licenseCodes.getIamPolicy",
      "compute.licenseCodes.list",
      "compute.licenseCodes.setIamPolicy",
      "compute.licenseCodes.update",
      "compute.licenseCodes.use",
      "compute.licenses.create",
      "compute.licenses.delete",
      "compute.licenses.get",
      "compute.licenses.getIamPolicy",
      "compute.licenses.list",
      "compute.licenses.setIamPolicy",
      "compute.machineImages.create",
      "compute.machineImages.delete",
      "compute.machineImages.get",
      "compute.machineImages.getIamPolicy",
      "compute.machineImages.list",
      "compute.machineImages.setIamPolicy",
      "compute.machineImages.useReadOnly",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.networkAttachments.get",
      "compute.networkAttachments.list",
      "compute.networkEndpointGroups.attachNetworkEndpoints",
      "compute.networkEndpointGroups.create",
      "compute.networkEndpointGroups.createTagBinding",
      "compute.networkEndpointGroups.delete",
      "compute.networkEndpointGroups.deleteTagBinding",
      "compute.networkEndpointGroups.detachNetworkEndpoints",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.getIamPolicy",
      "compute.networkEndpointGroups.list",
      "compute.networkEndpointGroups.listEffectiveTags",
      "compute.networkEndpointGroups.listTagBindings",
      "compute.networkEndpointGroups.setIamPolicy",
      "compute.networkEndpointGroups.use",
      "compute.networks.get",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listTagBindings",
      "compute.networks.use",
      "compute.networks.useExternalIp",
      "compute.projects.get",
      "compute.projects.setCommonInstanceMetadata",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionHealthCheckServices.get",
      "compute.regionHealthCheckServices.list",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.create",
      "compute.regionNetworkEndpointGroups.createTagBinding",
      "compute.regionNetworkEndpointGroups.delete",
      "compute.regionNetworkEndpointGroups.deleteTagBinding",
      "compute.regionNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionNetworkEndpointGroups.listEffectiveTags",
      "compute.regionNetworkEndpointGroups.listTagBindings",
      "compute.regionNetworkEndpointGroups.use",
      "compute.regionNotificationEndpoints.get",
      "compute.regionNotificationEndpoints.list",
      "compute.regionOperations.get",
      "compute.regionOperations.list",
      "compute.regionSslCertificates.get",
      "compute.regionSslCertificates.list",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionSslPolicies.get",
      "compute.regionSslPolicies.list",
      "compute.regionSslPolicies.listAvailableFeatures",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionTargetTcpProxies.get",
      "compute.regionTargetTcpProxies.list",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.list",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.regions.get",
      "compute.regions.list",
      "compute.reservations.get",
      "compute.reservations.list",
      "compute.resourcePolicies.create",
      "compute.resourcePolicies.delete",
      "compute.resourcePolicies.get",
      "compute.resourcePolicies.getIamPolicy",
      "compute.resourcePolicies.list",
      "compute.resourcePolicies.setIamPolicy",
      "compute.resourcePolicies.update",
      "compute.resourcePolicies.use",
      "compute.resourcePolicies.useReadOnly",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routes.get",
      "compute.routes.list",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.serviceAttachments.get",
      "compute.serviceAttachments.list",
      "compute.snapshots.create",
      "compute.snapshots.createTagBinding",
      "compute.snapshots.delete",
      "compute.snapshots.deleteTagBinding",
      "compute.snapshots.get",
      "compute.snapshots.getIamPolicy",
      "compute.snapshots.list",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.snapshots.setIamPolicy",
      "compute.snapshots.setLabels",
      "compute.snapshots.useReadOnly",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.get",
      "compute.sslPolicies.list",
      "compute.sslPolicies.listAvailableFeatures",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.targetGrpcProxies.get",
      "compute.targetGrpcProxies.list",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetInstances.get",
      "compute.targetInstances.list",
      "compute.targetInstances.listEffectiveTags",
      "compute.targetInstances.listTagBindings",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetSslProxies.listEffectiveTags",
      "compute.targetSslProxies.listTagBindings",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.targetVpnGateways.get",
      "compute.targetVpnGateways.list",
      "compute.urlMaps.get",
      "compute.urlMaps.list",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "compute.vpnGateways.get",
      "compute.vpnGateways.list",
      "compute.vpnTunnels.get",
      "compute.vpnTunnels.list",
      "compute.zoneOperations.get",
      "compute.zoneOperations.list",
      "compute.zones.get",
      "compute.zones.list",
      "iam.serviceAccounts.actAs",
      "pubsub.topics.publish",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "serviceusage.services.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/lifesciences.viewer",
    "title": "Cloud Life Sciences Viewer",
    "description": "Access to read Cloud Life Sciences resources.",
    "includedPermissions": [
      "lifesciences.operations.get",
      "lifesciences.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/lifesciences.workflowsRunner",
    "title": "Cloud Life Sciences Workflows Runner",
    "description": "Full access to operate on Cloud Life Sciences workflows.",
    "includedPermissions": [
      "lifesciences.operations.cancel",
      "lifesciences.operations.get",
      "lifesciences.operations.list",
      "lifesciences.workflows.run"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/livestream.editor",
    "title": "Live Stream Editor",
    "description": "Full access to Live Stream resources.",
    "includedPermissions": [
      "livestream.channels.create",
      "livestream.channels.delete",
      "livestream.channels.get",
      "livestream.channels.list",
      "livestream.channels.start",
      "livestream.channels.stop",
      "livestream.channels.update",
      "livestream.events.create",
      "livestream.events.delete",
      "livestream.events.get",
      "livestream.events.list",
      "livestream.inputs.create",
      "livestream.inputs.delete",
      "livestream.inputs.get",
      "livestream.inputs.list",
      "livestream.inputs.update",
      "livestream.locations.get",
      "livestream.locations.list",
      "livestream.operations.cancel",
      "livestream.operations.delete",
      "livestream.operations.get",
      "livestream.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/livestream.serviceAgent",
    "title": "Live Stream Service Agent",
    "description": "Uploads media files to customer GCS buckets.",
    "includedPermissions": [
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/livestream.viewer",
    "title": "Live Stream Viewer",
    "description": "Read access to Live Stream resources.",
    "includedPermissions": [
      "livestream.channels.get",
      "livestream.channels.list",
      "livestream.events.get",
      "livestream.events.list",
      "livestream.inputs.get",
      "livestream.inputs.list",
      "livestream.locations.get",
      "livestream.locations.list",
      "livestream.operations.get",
      "livestream.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/logging.admin",
    "title": "Logging Admin",
    "description": "Access to all logging permissions, and dependent permissions.",
    "includedPermissions": [
      "logging.buckets.copyLogEntries",
      "logging.buckets.create",
      "logging.buckets.delete",
      "logging.buckets.get",
      "logging.buckets.list",
      "logging.buckets.undelete",
      "logging.buckets.update",
      "logging.exclusions.create",
      "logging.exclusions.delete",
      "logging.exclusions.get",
      "logging.exclusions.list",
      "logging.exclusions.update",
      "logging.fields.access",
      "logging.links.create",
      "logging.links.delete",
      "logging.links.get",
      "logging.links.list",
      "logging.locations.get",
      "logging.locations.list",
      "logging.logEntries.create",
      "logging.logEntries.download",
      "logging.logEntries.list",
      "logging.logEntries.route",
      "logging.logMetrics.create",
      "logging.logMetrics.delete",
      "logging.logMetrics.get",
      "logging.logMetrics.list",
      "logging.logMetrics.update",
      "logging.logServiceIndexes.list",
      "logging.logServices.list",
      "logging.logs.delete",
      "logging.logs.list",
      "logging.notificationRules.create",
      "logging.notificationRules.delete",
      "logging.notificationRules.get",
      "logging.notificationRules.list",
      "logging.notificationRules.update",
      "logging.operations.cancel",
      "logging.operations.get",
      "logging.operations.list",
      "logging.privateLogEntries.list",
      "logging.queries.create",
      "logging.queries.delete",
      "logging.queries.get",
      "logging.queries.list",
      "logging.queries.listShared",
      "logging.queries.share",
      "logging.queries.update",
      "logging.queries.updateShared",
      "logging.settings.get",
      "logging.settings.update",
      "logging.sinks.create",
      "logging.sinks.delete",
      "logging.sinks.get",
      "logging.sinks.list",
      "logging.sinks.update",
      "logging.usage.get",
      "logging.views.access",
      "logging.views.create",
      "logging.views.delete",
      "logging.views.get",
      "logging.views.list",
      "logging.views.listLogs",
      "logging.views.listResourceKeys",
      "logging.views.listResourceValues",
      "logging.views.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/logging.bucketWriter",
    "title": "Logs Bucket Writer",
    "description": "Ability to write logs to a log bucket.",
    "includedPermissions": [
      "logging.buckets.write"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/logging.configWriter",
    "title": "Logs Configuration Writer",
    "description": "Access to configure log exporting and metrics.",
    "includedPermissions": [
      "logging.buckets.create",
      "logging.buckets.delete",
      "logging.buckets.get",
      "logging.buckets.list",
      "logging.buckets.undelete",
      "logging.buckets.update",
      "logging.exclusions.create",
      "logging.exclusions.delete",
      "logging.exclusions.get",
      "logging.exclusions.list",
      "logging.exclusions.update",
      "logging.links.create",
      "logging.links.delete",
      "logging.links.get",
      "logging.links.list",
      "logging.locations.get",
      "logging.locations.list",
      "logging.logMetrics.create",
      "logging.logMetrics.delete",
      "logging.logMetrics.get",
      "logging.logMetrics.list",
      "logging.logMetrics.update",
      "logging.logServiceIndexes.list",
      "logging.logServices.list",
      "logging.logs.list",
      "logging.notificationRules.create",
      "logging.notificationRules.delete",
      "logging.notificationRules.get",
      "logging.notificationRules.list",
      "logging.notificationRules.update",
      "logging.operations.cancel",
      "logging.operations.get",
      "logging.operations.list",
      "logging.settings.get",
      "logging.settings.update",
      "logging.sinks.create",
      "logging.sinks.delete",
      "logging.sinks.get",
      "logging.sinks.list",
      "logging.sinks.update",
      "logging.views.create",
      "logging.views.delete",
      "logging.views.get",
      "logging.views.list",
      "logging.views.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/logging.fieldAccessor",
    "title": "Log Field Accessor",
    "description": "Ability to read restricted fields in a log bucket.",
    "includedPermissions": [
      "logging.fields.access"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/logging.linkViewer",
    "title": "Log Link Accessor",
    "description": "Ability to see links for a bucket.",
    "includedPermissions": [
      "logging.links.get",
      "logging.links.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/logging.logWriter",
    "title": "Logs Writer",
    "description": "Access to write logs.",
    "includedPermissions": [
      "logging.logEntries.create",
      "logging.logEntries.route"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/logging.privateLogViewer",
    "title": "Private Logs Viewer",
    "description": "Access to view all logs, including logs with private contents.",
    "includedPermissions": [
      "logging.buckets.get",
      "logging.buckets.list",
      "logging.exclusions.get",
      "logging.exclusions.list",
      "logging.links.get",
      "logging.links.list",
      "logging.locations.get",
      "logging.locations.list",
      "logging.logEntries.list",
      "logging.logMetrics.get",
      "logging.logMetrics.list",
      "logging.logServiceIndexes.list",
      "logging.logServices.list",
      "logging.logs.list",
      "logging.privateLogEntries.list",
      "logging.queries.create",
      "logging.queries.delete",
      "logging.queries.get",
      "logging.queries.list",
      "logging.queries.listShared",
      "logging.queries.update",
      "logging.sinks.get",
      "logging.sinks.list",
      "logging.usage.get",
      "logging.views.access",
      "logging.views.get",
      "logging.views.list",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/logging.serviceAgent",
    "title": "Cloud Logging Service Agent",
    "description": "Grants a Cloud Logging Service Account the ability to create and link datasets.",
    "includedPermissions": [
      "bigquery.datasets.create",
      "bigquery.datasets.get",
      "bigquery.datasets.link"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/logging.viewAccessor",
    "title": "Logs View Accessor",
    "description": "Ability to read logs in a view.",
    "includedPermissions": [
      "logging.logEntries.download",
      "logging.views.access",
      "logging.views.listLogs",
      "logging.views.listResourceKeys",
      "logging.views.listResourceValues"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/logging.viewer",
    "title": "Logs Viewer",
    "description": "Access to view logs, except for logs with private contents.",
    "includedPermissions": [
      "logging.buckets.get",
      "logging.buckets.list",
      "logging.exclusions.get",
      "logging.exclusions.list",
      "logging.links.get",
      "logging.links.list",
      "logging.locations.get",
      "logging.locations.list",
      "logging.logEntries.list",
      "logging.logMetrics.get",
      "logging.logMetrics.list",
      "logging.logServiceIndexes.list",
      "logging.logServices.list",
      "logging.logs.list",
      "logging.operations.get",
      "logging.operations.list",
      "logging.queries.create",
      "logging.queries.delete",
      "logging.queries.get",
      "logging.queries.list",
      "logging.queries.listShared",
      "logging.queries.update",
      "logging.sinks.get",
      "logging.sinks.list",
      "logging.usage.get",
      "logging.views.get",
      "logging.views.list",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/looker.admin",
    "title": "Looker Admin",
    "description": "Full access to all Looker resources.",
    "includedPermissions": [
      "looker.backups.create",
      "looker.backups.delete",
      "looker.backups.get",
      "looker.backups.list",
      "looker.instances.create",
      "looker.instances.delete",
      "looker.instances.export",
      "looker.instances.get",
      "looker.instances.import",
      "looker.instances.list",
      "looker.instances.login",
      "looker.instances.update",
      "looker.locations.get",
      "looker.locations.list",
      "looker.operations.cancel",
      "looker.operations.delete",
      "looker.operations.get",
      "looker.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/looker.instanceUser",
    "title": "Looker Instance User",
    "description": "Access to log in to a Looker instance.",
    "includedPermissions": [
      "looker.instances.get",
      "looker.instances.login",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/looker.viewer",
    "title": "Looker Viewer",
    "description": "Read-only access to all Looker resources.",
    "includedPermissions": [
      "looker.backups.get",
      "looker.backups.list",
      "looker.instances.get",
      "looker.instances.list",
      "looker.instances.login",
      "looker.locations.get",
      "looker.locations.list",
      "looker.operations.get",
      "looker.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/managedidentities.admin",
    "title": "Google Cloud Managed Identities Admin",
    "description": "Full access to Google Cloud Managed Identities Domains and related resources. Intended to be granted on a project-level.",
    "includedPermissions": [
      "managedidentities.backups.create",
      "managedidentities.backups.delete",
      "managedidentities.backups.get",
      "managedidentities.backups.getIamPolicy",
      "managedidentities.backups.list",
      "managedidentities.backups.setIamPolicy",
      "managedidentities.backups.update",
      "managedidentities.domains.attachTrust",
      "managedidentities.domains.checkMigrationPermission",
      "managedidentities.domains.create",
      "managedidentities.domains.createTagBinding",
      "managedidentities.domains.delete",
      "managedidentities.domains.deleteTagBinding",
      "managedidentities.domains.detachTrust",
      "managedidentities.domains.disableMigration",
      "managedidentities.domains.domainJoinMachine",
      "managedidentities.domains.enableMigration",
      "managedidentities.domains.extendSchema",
      "managedidentities.domains.get",
      "managedidentities.domains.getIamPolicy",
      "managedidentities.domains.list",
      "managedidentities.domains.listEffectiveTags",
      "managedidentities.domains.listTagBindings",
      "managedidentities.domains.reconfigureTrust",
      "managedidentities.domains.resetpassword",
      "managedidentities.domains.restore",
      "managedidentities.domains.setIamPolicy",
      "managedidentities.domains.update",
      "managedidentities.domains.updateLDAPSSettings",
      "managedidentities.domains.validateTrust",
      "managedidentities.locations.get",
      "managedidentities.locations.list",
      "managedidentities.operations.cancel",
      "managedidentities.operations.delete",
      "managedidentities.operations.get",
      "managedidentities.operations.list",
      "managedidentities.peerings.create",
      "managedidentities.peerings.delete",
      "managedidentities.peerings.get",
      "managedidentities.peerings.getIamPolicy",
      "managedidentities.peerings.list",
      "managedidentities.peerings.setIamPolicy",
      "managedidentities.peerings.update",
      "managedidentities.sqlintegrations.get",
      "managedidentities.sqlintegrations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/managedidentities.backupAdmin",
    "title": "Google Cloud Managed Identities Backup Admin",
    "description": "Full access to Google Cloud Managed Identities Backup and related resources. Intended to be granted on a project-level",
    "includedPermissions": [
      "managedidentities.backups.create",
      "managedidentities.backups.delete",
      "managedidentities.backups.get",
      "managedidentities.backups.getIamPolicy",
      "managedidentities.backups.list",
      "managedidentities.backups.setIamPolicy",
      "managedidentities.backups.update",
      "managedidentities.domains.get",
      "managedidentities.locations.get",
      "managedidentities.locations.list",
      "managedidentities.operations.cancel",
      "managedidentities.operations.delete",
      "managedidentities.operations.get",
      "managedidentities.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/managedidentities.backupViewer",
    "title": "Google Cloud Managed Identities Backup Viewer",
    "description": "Read-only access to Google Cloud Managed Identities Backup and related resources.",
    "includedPermissions": [
      "managedidentities.backups.get",
      "managedidentities.backups.getIamPolicy",
      "managedidentities.backups.list",
      "managedidentities.domains.get",
      "managedidentities.locations.get",
      "managedidentities.locations.list",
      "managedidentities.operations.get",
      "managedidentities.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/managedidentities.domainAdmin",
    "title": "Google Cloud Managed Identities Domain Admin",
    "description": "Read-Update-Delete to Google Cloud Managed Identities Domains and related resources. Intended to be granted on a resource (domain) level.",
    "includedPermissions": [
      "managedidentities.backups.create",
      "managedidentities.backups.delete",
      "managedidentities.backups.get",
      "managedidentities.backups.getIamPolicy",
      "managedidentities.backups.list",
      "managedidentities.backups.setIamPolicy",
      "managedidentities.backups.update",
      "managedidentities.domains.attachTrust",
      "managedidentities.domains.checkMigrationPermission",
      "managedidentities.domains.createTagBinding",
      "managedidentities.domains.delete",
      "managedidentities.domains.deleteTagBinding",
      "managedidentities.domains.detachTrust",
      "managedidentities.domains.disableMigration",
      "managedidentities.domains.domainJoinMachine",
      "managedidentities.domains.enableMigration",
      "managedidentities.domains.extendSchema",
      "managedidentities.domains.get",
      "managedidentities.domains.getIamPolicy",
      "managedidentities.domains.listEffectiveTags",
      "managedidentities.domains.listTagBindings",
      "managedidentities.domains.reconfigureTrust",
      "managedidentities.domains.resetpassword",
      "managedidentities.domains.restore",
      "managedidentities.domains.update",
      "managedidentities.domains.updateLDAPSSettings",
      "managedidentities.domains.validateTrust",
      "managedidentities.locations.get",
      "managedidentities.locations.list",
      "managedidentities.operations.get",
      "managedidentities.operations.list",
      "managedidentities.sqlintegrations.get",
      "managedidentities.sqlintegrations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/managedidentities.domainJoin",
    "title": "Google Cloud Managed Identities Domain Join",
    "description": "Access to domain join VMs with Cloud AD",
    "includedPermissions": [
      "managedidentities.domains.domainJoinMachine",
      "managedidentities.domains.get"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/managedidentities.peeringAdmin",
    "title": "Google Cloud Managed Identities Peering Admin",
    "description": "Full access to Google Cloud Managed Identities Domains and related resources. Intended to be granted on a project-level",
    "includedPermissions": [
      "managedidentities.locations.get",
      "managedidentities.locations.list",
      "managedidentities.operations.cancel",
      "managedidentities.operations.delete",
      "managedidentities.operations.get",
      "managedidentities.operations.list",
      "managedidentities.peerings.create",
      "managedidentities.peerings.delete",
      "managedidentities.peerings.get",
      "managedidentities.peerings.getIamPolicy",
      "managedidentities.peerings.list",
      "managedidentities.peerings.setIamPolicy",
      "managedidentities.peerings.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/managedidentities.peeringViewer",
    "title": "Google Cloud Managed Identities Peering Viewer",
    "description": "Read-only access to Google Cloud Managed Identities Peering and related resources.",
    "includedPermissions": [
      "managedidentities.locations.get",
      "managedidentities.locations.list",
      "managedidentities.operations.get",
      "managedidentities.operations.list",
      "managedidentities.peerings.get",
      "managedidentities.peerings.getIamPolicy",
      "managedidentities.peerings.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/managedidentities.serviceAgent",
    "title": "Cloud Managed Identities Service Agent",
    "description": "Gives Managed Identities service account access to managed resources.",
    "includedPermissions": [
      "compute.globalOperations.get",
      "compute.networks.addPeering",
      "compute.networks.get",
      "compute.networks.removePeering",
      "compute.networks.update",
      "compute.routes.list",
      "dns.changes.create",
      "dns.changes.get",
      "dns.changes.list",
      "dns.dnsKeys.get",
      "dns.dnsKeys.list",
      "dns.managedZoneOperations.get",
      "dns.managedZoneOperations.list",
      "dns.managedZones.create",
      "dns.managedZones.delete",
      "dns.managedZones.get",
      "dns.managedZones.list",
      "dns.managedZones.update",
      "dns.networks.bindPrivateDNSPolicy",
      "dns.networks.bindPrivateDNSZone",
      "dns.policies.create",
      "dns.policies.delete",
      "dns.policies.get",
      "dns.policies.list",
      "dns.policies.update",
      "dns.projects.get",
      "dns.resourceRecordSets.create",
      "dns.resourceRecordSets.delete",
      "dns.resourceRecordSets.get",
      "dns.resourceRecordSets.list",
      "dns.resourceRecordSets.update",
      "dns.responsePolicies.create",
      "dns.responsePolicies.delete",
      "dns.responsePolicies.get",
      "dns.responsePolicies.list",
      "dns.responsePolicies.update",
      "dns.responsePolicyRules.create",
      "dns.responsePolicyRules.delete",
      "dns.responsePolicyRules.get",
      "dns.responsePolicyRules.list",
      "dns.responsePolicyRules.update",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.timeSeries.create",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/managedidentities.viewer",
    "title": "Google Cloud Managed Identities Viewer",
    "description": "Read-only access to Google Cloud Managed Identities Domains and related resources.",
    "includedPermissions": [
      "managedidentities.backups.get",
      "managedidentities.backups.getIamPolicy",
      "managedidentities.backups.list",
      "managedidentities.domains.get",
      "managedidentities.domains.getIamPolicy",
      "managedidentities.domains.list",
      "managedidentities.domains.listEffectiveTags",
      "managedidentities.domains.listTagBindings",
      "managedidentities.locations.get",
      "managedidentities.locations.list",
      "managedidentities.operations.get",
      "managedidentities.operations.list",
      "managedidentities.peerings.get",
      "managedidentities.peerings.getIamPolicy",
      "managedidentities.peerings.list",
      "managedidentities.sqlintegrations.get",
      "managedidentities.sqlintegrations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/mapsadmin.admin",
    "title": "Maps API Admin",
    "description": "Grants permission to read and write everything",
    "includedPermissions": [
      "mapsadmin.clientMaps.create",
      "mapsadmin.clientMaps.delete",
      "mapsadmin.clientMaps.get",
      "mapsadmin.clientMaps.list",
      "mapsadmin.clientMaps.update",
      "mapsadmin.clientStyleActivationRules.update",
      "mapsadmin.clientStyleSheetSnapshots.list",
      "mapsadmin.clientStyleSheetSnapshots.update",
      "mapsadmin.clientStyles.create",
      "mapsadmin.clientStyles.delete",
      "mapsadmin.clientStyles.get",
      "mapsadmin.clientStyles.list",
      "mapsadmin.clientStyles.update",
      "mapsadmin.styleEditorConfigs.get",
      "mapsadmin.styleSnapshots.list",
      "mapsadmin.styleSnapshots.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/mapsadmin.viewer",
    "title": "Maps API Viewer",
    "description": "Grants permission to read everything",
    "includedPermissions": [
      "mapsadmin.clientMaps.get",
      "mapsadmin.clientMaps.list",
      "mapsadmin.clientStyleSheetSnapshots.list",
      "mapsadmin.clientStyles.get",
      "mapsadmin.clientStyles.list",
      "mapsadmin.styleEditorConfigs.get",
      "mapsadmin.styleSnapshots.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/mapsplatformdatasets.admin",
    "title": "Maps Platform Datasets Admin",
    "description": "Grants read and write access to all the Maps Platform Datasets API resources",
    "includedPermissions": [
      "mapsadmin.clientStyles.create",
      "mapsadmin.clientStyles.delete",
      "mapsadmin.clientStyles.get",
      "mapsadmin.clientStyles.list",
      "mapsadmin.clientStyles.update",
      "mapsplatformdatasets.datasets.create",
      "mapsplatformdatasets.datasets.delete",
      "mapsplatformdatasets.datasets.export",
      "mapsplatformdatasets.datasets.get",
      "mapsplatformdatasets.datasets.import",
      "mapsplatformdatasets.datasets.list",
      "mapsplatformdatasets.datasets.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/mapsplatformdatasets.viewer",
    "title": "Maps Platform Datasets Viewer",
    "description": "Grants readonly access to all the Maps Platform Datasets API resources",
    "includedPermissions": [
      "mapsadmin.clientStyles.get",
      "mapsadmin.clientStyles.list",
      "mapsplatformdatasets.datasets.export",
      "mapsplatformdatasets.datasets.get",
      "mapsplatformdatasets.datasets.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/mediaasset.serviceAgent",
    "title": "Media Asset Service Agent",
    "description": "Downloads and uploads media files from and to customer GCS buckets.",
    "includedPermissions": [
      "pubsub.topics.get",
      "pubsub.topics.publish",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "transcoder.jobs.create",
      "transcoder.jobs.delete",
      "transcoder.jobs.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/memcache.admin",
    "title": "Cloud Memorystore Memcached Admin",
    "description": "Full access to Memcached instances and related resources.",
    "includedPermissions": [
      "compute.networks.list",
      "memcache.instances.applyParameters",
      "memcache.instances.applySoftwareUpdate",
      "memcache.instances.create",
      "memcache.instances.delete",
      "memcache.instances.get",
      "memcache.instances.list",
      "memcache.instances.rescheduleMaintenance",
      "memcache.instances.update",
      "memcache.instances.updateParameters",
      "memcache.locations.get",
      "memcache.locations.list",
      "memcache.operations.cancel",
      "memcache.operations.delete",
      "memcache.operations.get",
      "memcache.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/memcache.editor",
    "title": "Cloud Memorystore Memcached Editor",
    "description": "Read-Write access to Memcached instances and related resources.",
    "includedPermissions": [
      "memcache.instances.applyParameters",
      "memcache.instances.get",
      "memcache.instances.list",
      "memcache.instances.update",
      "memcache.instances.updateParameters",
      "memcache.locations.get",
      "memcache.locations.list",
      "memcache.operations.cancel",
      "memcache.operations.delete",
      "memcache.operations.get",
      "memcache.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/memcache.serviceAgent",
    "title": "Cloud Memorystore Memcached Service Agent",
    "description": "Gives Cloud Memorystore Memcached service account access to managed resource",
    "includedPermissions": [
      "compute.globalOperations.get",
      "compute.networks.addPeering",
      "compute.networks.get",
      "compute.networks.removePeering",
      "compute.networks.update",
      "compute.routes.get",
      "compute.routes.list",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.timeSeries.create",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/memcache.viewer",
    "title": "Cloud Memorystore Memcached Viewer",
    "description": "Read-only access to Memcached instances and related resources.",
    "includedPermissions": [
      "memcache.instances.get",
      "memcache.instances.list",
      "memcache.locations.get",
      "memcache.locations.list",
      "memcache.operations.get",
      "memcache.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/meshconfig.admin",
    "title": "Mesh Config Admin",
    "description": "Full access to all mesh configuration resources",
    "includedPermissions": [
      "meshconfig.projects.get",
      "meshconfig.projects.init"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/meshconfig.serviceAgent",
    "title": "Mesh Config Service Agent",
    "description": "Apply mesh configuration",
    "includedPermissions": [
      "compute.backendServices.create",
      "compute.backendServices.delete",
      "compute.backendServices.get",
      "compute.backendServices.list",
      "compute.backendServices.setSecurityPolicy",
      "compute.backendServices.update",
      "compute.backendServices.use",
      "compute.firewalls.create",
      "compute.firewalls.delete",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.update",
      "compute.globalForwardingRules.create",
      "compute.globalForwardingRules.delete",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.setLabels",
      "compute.globalForwardingRules.setTarget",
      "compute.globalOperations.get",
      "compute.globalOperations.list",
      "compute.healthChecks.create",
      "compute.healthChecks.delete",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.update",
      "compute.healthChecks.use",
      "compute.healthChecks.useReadOnly",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.list",
      "compute.networkEndpointGroups.use",
      "compute.networks.get",
      "compute.networks.updatePolicy",
      "compute.networks.use",
      "compute.subnetworks.use",
      "compute.targetHttpProxies.create",
      "compute.targetHttpProxies.delete",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.setUrlMap",
      "compute.targetHttpProxies.use",
      "compute.targetHttpsProxies.create",
      "compute.targetHttpsProxies.delete",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.setSslCertificates",
      "compute.targetHttpsProxies.setSslPolicy",
      "compute.targetHttpsProxies.setUrlMap",
      "compute.targetHttpsProxies.use",
      "compute.targetSslProxies.create",
      "compute.targetSslProxies.delete",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetSslProxies.setBackendService",
      "compute.targetSslProxies.setProxyHeader",
      "compute.targetSslProxies.setSslCertificates",
      "compute.targetSslProxies.use",
      "compute.targetTcpProxies.create",
      "compute.targetTcpProxies.delete",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetTcpProxies.update",
      "compute.targetTcpProxies.use",
      "compute.urlMaps.create",
      "compute.urlMaps.delete",
      "compute.urlMaps.get",
      "compute.urlMaps.invalidateCache",
      "compute.urlMaps.list",
      "compute.urlMaps.update",
      "compute.urlMaps.use",
      "compute.urlMaps.validate",
      "networksecurity.clientTlsPolicies.create",
      "networksecurity.clientTlsPolicies.delete",
      "networksecurity.clientTlsPolicies.get",
      "networksecurity.clientTlsPolicies.list",
      "networksecurity.clientTlsPolicies.update",
      "networksecurity.serverTlsPolicies.create",
      "networksecurity.serverTlsPolicies.delete",
      "networksecurity.serverTlsPolicies.get",
      "networksecurity.serverTlsPolicies.list",
      "networksecurity.serverTlsPolicies.update",
      "networkservices.endpointConfigSelectors.create",
      "networkservices.endpointConfigSelectors.delete",
      "networkservices.endpointConfigSelectors.get",
      "networkservices.endpointConfigSelectors.list",
      "networkservices.endpointConfigSelectors.update",
      "networkservices.httpFilters.create",
      "networkservices.httpFilters.delete",
      "networkservices.httpFilters.get",
      "networkservices.httpFilters.list",
      "networkservices.httpFilters.update",
      "networkservices.httpfilters.create",
      "networkservices.httpfilters.delete",
      "networkservices.httpfilters.get",
      "networkservices.httpfilters.list",
      "networkservices.httpfilters.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/meshconfig.viewer",
    "title": "Mesh Config Viewer",
    "description": "Read access to mesh configuration",
    "includedPermissions": [
      "meshconfig.projects.get"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/meshcontrolplane.serviceAgent",
    "title": "Mesh Managed Control Plane Service Agent",
    "description": "Anthos Service Mesh Managed Control Plane Agent",
    "includedPermissions": [
      "container.apiServices.create",
      "container.apiServices.delete",
      "container.apiServices.get",
      "container.apiServices.getStatus",
      "container.apiServices.list",
      "container.apiServices.update",
      "container.apiServices.updateStatus",
      "container.auditSinks.create",
      "container.auditSinks.delete",
      "container.auditSinks.get",
      "container.auditSinks.list",
      "container.auditSinks.update",
      "container.backendConfigs.create",
      "container.backendConfigs.delete",
      "container.backendConfigs.get",
      "container.backendConfigs.list",
      "container.backendConfigs.update",
      "container.bindings.create",
      "container.bindings.delete",
      "container.bindings.get",
      "container.bindings.list",
      "container.bindings.update",
      "container.certificateSigningRequests.approve",
      "container.certificateSigningRequests.create",
      "container.certificateSigningRequests.delete",
      "container.certificateSigningRequests.get",
      "container.certificateSigningRequests.getStatus",
      "container.certificateSigningRequests.list",
      "container.certificateSigningRequests.update",
      "container.certificateSigningRequests.updateStatus",
      "container.clusterRoleBindings.create",
      "container.clusterRoleBindings.delete",
      "container.clusterRoleBindings.get",
      "container.clusterRoleBindings.list",
      "container.clusterRoleBindings.update",
      "container.clusterRoles.bind",
      "container.clusterRoles.create",
      "container.clusterRoles.delete",
      "container.clusterRoles.escalate",
      "container.clusterRoles.get",
      "container.clusterRoles.list",
      "container.clusterRoles.update",
      "container.clusters.get",
      "container.clusters.getCredentials",
      "container.clusters.list",
      "container.clusters.update",
      "container.componentStatuses.get",
      "container.componentStatuses.list",
      "container.configMaps.create",
      "container.configMaps.delete",
      "container.configMaps.get",
      "container.configMaps.list",
      "container.configMaps.update",
      "container.controllerRevisions.create",
      "container.controllerRevisions.delete",
      "container.controllerRevisions.get",
      "container.controllerRevisions.list",
      "container.controllerRevisions.update",
      "container.cronJobs.create",
      "container.cronJobs.delete",
      "container.cronJobs.get",
      "container.cronJobs.getStatus",
      "container.cronJobs.list",
      "container.cronJobs.update",
      "container.cronJobs.updateStatus",
      "container.csiDrivers.create",
      "container.csiDrivers.delete",
      "container.csiDrivers.get",
      "container.csiDrivers.list",
      "container.csiDrivers.update",
      "container.csiNodeInfos.create",
      "container.csiNodeInfos.delete",
      "container.csiNodeInfos.get",
      "container.csiNodeInfos.list",
      "container.csiNodeInfos.update",
      "container.csiNodes.create",
      "container.csiNodes.delete",
      "container.csiNodes.get",
      "container.csiNodes.list",
      "container.csiNodes.update",
      "container.customResourceDefinitions.create",
      "container.customResourceDefinitions.delete",
      "container.customResourceDefinitions.get",
      "container.customResourceDefinitions.getStatus",
      "container.customResourceDefinitions.list",
      "container.customResourceDefinitions.update",
      "container.customResourceDefinitions.updateStatus",
      "container.daemonSets.create",
      "container.daemonSets.delete",
      "container.daemonSets.get",
      "container.daemonSets.getStatus",
      "container.daemonSets.list",
      "container.daemonSets.update",
      "container.daemonSets.updateStatus",
      "container.deployments.create",
      "container.deployments.delete",
      "container.deployments.get",
      "container.deployments.getScale",
      "container.deployments.getStatus",
      "container.deployments.list",
      "container.deployments.rollback",
      "container.deployments.update",
      "container.deployments.updateScale",
      "container.deployments.updateStatus",
      "container.endpointSlices.create",
      "container.endpointSlices.delete",
      "container.endpointSlices.get",
      "container.endpointSlices.list",
      "container.endpointSlices.update",
      "container.endpoints.create",
      "container.endpoints.delete",
      "container.endpoints.get",
      "container.endpoints.list",
      "container.endpoints.update",
      "container.events.create",
      "container.events.delete",
      "container.events.get",
      "container.events.list",
      "container.events.update",
      "container.frontendConfigs.create",
      "container.frontendConfigs.delete",
      "container.frontendConfigs.get",
      "container.frontendConfigs.list",
      "container.frontendConfigs.update",
      "container.horizontalPodAutoscalers.create",
      "container.horizontalPodAutoscalers.delete",
      "container.horizontalPodAutoscalers.get",
      "container.horizontalPodAutoscalers.getStatus",
      "container.horizontalPodAutoscalers.list",
      "container.horizontalPodAutoscalers.update",
      "container.horizontalPodAutoscalers.updateStatus",
      "container.hostServiceAgent.use",
      "container.ingresses.create",
      "container.ingresses.delete",
      "container.ingresses.get",
      "container.ingresses.getStatus",
      "container.ingresses.list",
      "container.ingresses.update",
      "container.ingresses.updateStatus",
      "container.initializerConfigurations.create",
      "container.initializerConfigurations.delete",
      "container.initializerConfigurations.get",
      "container.initializerConfigurations.list",
      "container.initializerConfigurations.update",
      "container.jobs.create",
      "container.jobs.delete",
      "container.jobs.get",
      "container.jobs.getStatus",
      "container.jobs.list",
      "container.jobs.update",
      "container.jobs.updateStatus",
      "container.leases.create",
      "container.leases.delete",
      "container.leases.get",
      "container.leases.list",
      "container.leases.update",
      "container.limitRanges.create",
      "container.limitRanges.delete",
      "container.limitRanges.get",
      "container.limitRanges.list",
      "container.limitRanges.update",
      "container.localSubjectAccessReviews.create",
      "container.localSubjectAccessReviews.list",
      "container.managedCertificates.create",
      "container.managedCertificates.delete",
      "container.managedCertificates.get",
      "container.managedCertificates.list",
      "container.managedCertificates.update",
      "container.mutatingWebhookConfigurations.create",
      "container.mutatingWebhookConfigurations.delete",
      "container.mutatingWebhookConfigurations.get",
      "container.mutatingWebhookConfigurations.list",
      "container.mutatingWebhookConfigurations.update",
      "container.namespaces.create",
      "container.namespaces.delete",
      "container.namespaces.finalize",
      "container.namespaces.get",
      "container.namespaces.getStatus",
      "container.namespaces.list",
      "container.namespaces.update",
      "container.namespaces.updateStatus",
      "container.networkPolicies.create",
      "container.networkPolicies.delete",
      "container.networkPolicies.get",
      "container.networkPolicies.list",
      "container.networkPolicies.update",
      "container.nodes.create",
      "container.nodes.delete",
      "container.nodes.get",
      "container.nodes.getStatus",
      "container.nodes.list",
      "container.nodes.proxy",
      "container.nodes.update",
      "container.nodes.updateStatus",
      "container.operations.get",
      "container.operations.list",
      "container.persistentVolumeClaims.create",
      "container.persistentVolumeClaims.delete",
      "container.persistentVolumeClaims.get",
      "container.persistentVolumeClaims.getStatus",
      "container.persistentVolumeClaims.list",
      "container.persistentVolumeClaims.update",
      "container.persistentVolumeClaims.updateStatus",
      "container.persistentVolumes.create",
      "container.persistentVolumes.delete",
      "container.persistentVolumes.get",
      "container.persistentVolumes.getStatus",
      "container.persistentVolumes.list",
      "container.persistentVolumes.update",
      "container.persistentVolumes.updateStatus",
      "container.petSets.create",
      "container.petSets.delete",
      "container.petSets.get",
      "container.petSets.list",
      "container.petSets.update",
      "container.petSets.updateStatus",
      "container.podDisruptionBudgets.create",
      "container.podDisruptionBudgets.delete",
      "container.podDisruptionBudgets.get",
      "container.podDisruptionBudgets.getStatus",
      "container.podDisruptionBudgets.list",
      "container.podDisruptionBudgets.update",
      "container.podDisruptionBudgets.updateStatus",
      "container.podPresets.create",
      "container.podPresets.delete",
      "container.podPresets.get",
      "container.podPresets.list",
      "container.podPresets.update",
      "container.podSecurityPolicies.create",
      "container.podSecurityPolicies.delete",
      "container.podSecurityPolicies.get",
      "container.podSecurityPolicies.list",
      "container.podSecurityPolicies.update",
      "container.podSecurityPolicies.use",
      "container.podTemplates.create",
      "container.podTemplates.delete",
      "container.podTemplates.get",
      "container.podTemplates.list",
      "container.podTemplates.update",
      "container.pods.attach",
      "container.pods.create",
      "container.pods.delete",
      "container.pods.evict",
      "container.pods.exec",
      "container.pods.get",
      "container.pods.getLogs",
      "container.pods.getStatus",
      "container.pods.initialize",
      "container.pods.list",
      "container.pods.portForward",
      "container.pods.proxy",
      "container.pods.update",
      "container.pods.updateStatus",
      "container.priorityClasses.create",
      "container.priorityClasses.delete",
      "container.priorityClasses.get",
      "container.priorityClasses.list",
      "container.priorityClasses.update",
      "container.replicaSets.create",
      "container.replicaSets.delete",
      "container.replicaSets.get",
      "container.replicaSets.getScale",
      "container.replicaSets.getStatus",
      "container.replicaSets.list",
      "container.replicaSets.update",
      "container.replicaSets.updateScale",
      "container.replicaSets.updateStatus",
      "container.replicationControllers.create",
      "container.replicationControllers.delete",
      "container.replicationControllers.get",
      "container.replicationControllers.getScale",
      "container.replicationControllers.getStatus",
      "container.replicationControllers.list",
      "container.replicationControllers.update",
      "container.replicationControllers.updateScale",
      "container.replicationControllers.updateStatus",
      "container.resourceQuotas.create",
      "container.resourceQuotas.delete",
      "container.resourceQuotas.get",
      "container.resourceQuotas.getStatus",
      "container.resourceQuotas.list",
      "container.resourceQuotas.update",
      "container.resourceQuotas.updateStatus",
      "container.roleBindings.create",
      "container.roleBindings.delete",
      "container.roleBindings.get",
      "container.roleBindings.list",
      "container.roleBindings.update",
      "container.roles.bind",
      "container.roles.create",
      "container.roles.delete",
      "container.roles.escalate",
      "container.roles.get",
      "container.roles.list",
      "container.roles.update",
      "container.runtimeClasses.create",
      "container.runtimeClasses.delete",
      "container.runtimeClasses.get",
      "container.runtimeClasses.list",
      "container.runtimeClasses.update",
      "container.scheduledJobs.create",
      "container.scheduledJobs.delete",
      "container.scheduledJobs.get",
      "container.scheduledJobs.list",
      "container.scheduledJobs.update",
      "container.scheduledJobs.updateStatus",
      "container.secrets.create",
      "container.secrets.delete",
      "container.secrets.get",
      "container.secrets.list",
      "container.secrets.update",
      "container.selfSubjectAccessReviews.create",
      "container.selfSubjectAccessReviews.list",
      "container.selfSubjectRulesReviews.create",
      "container.serviceAccounts.create",
      "container.serviceAccounts.createToken",
      "container.serviceAccounts.delete",
      "container.serviceAccounts.get",
      "container.serviceAccounts.list",
      "container.serviceAccounts.update",
      "container.services.create",
      "container.services.delete",
      "container.services.get",
      "container.services.getStatus",
      "container.services.list",
      "container.services.proxy",
      "container.services.update",
      "container.services.updateStatus",
      "container.statefulSets.create",
      "container.statefulSets.delete",
      "container.statefulSets.get",
      "container.statefulSets.getScale",
      "container.statefulSets.getStatus",
      "container.statefulSets.list",
      "container.statefulSets.update",
      "container.statefulSets.updateScale",
      "container.statefulSets.updateStatus",
      "container.storageClasses.create",
      "container.storageClasses.delete",
      "container.storageClasses.get",
      "container.storageClasses.list",
      "container.storageClasses.update",
      "container.storageStates.create",
      "container.storageStates.delete",
      "container.storageStates.get",
      "container.storageStates.getStatus",
      "container.storageStates.list",
      "container.storageStates.update",
      "container.storageStates.updateStatus",
      "container.storageVersionMigrations.create",
      "container.storageVersionMigrations.delete",
      "container.storageVersionMigrations.get",
      "container.storageVersionMigrations.getStatus",
      "container.storageVersionMigrations.list",
      "container.storageVersionMigrations.update",
      "container.storageVersionMigrations.updateStatus",
      "container.subjectAccessReviews.create",
      "container.subjectAccessReviews.list",
      "container.thirdPartyObjects.create",
      "container.thirdPartyObjects.delete",
      "container.thirdPartyObjects.get",
      "container.thirdPartyObjects.list",
      "container.thirdPartyObjects.update",
      "container.thirdPartyResources.create",
      "container.thirdPartyResources.delete",
      "container.thirdPartyResources.get",
      "container.thirdPartyResources.list",
      "container.thirdPartyResources.update",
      "container.tokenReviews.create",
      "container.updateInfos.create",
      "container.updateInfos.delete",
      "container.updateInfos.get",
      "container.updateInfos.list",
      "container.updateInfos.update",
      "container.validatingWebhookConfigurations.create",
      "container.validatingWebhookConfigurations.delete",
      "container.validatingWebhookConfigurations.get",
      "container.validatingWebhookConfigurations.list",
      "container.validatingWebhookConfigurations.update",
      "container.volumeAttachments.create",
      "container.volumeAttachments.delete",
      "container.volumeAttachments.get",
      "container.volumeAttachments.getStatus",
      "container.volumeAttachments.list",
      "container.volumeAttachments.update",
      "container.volumeAttachments.updateStatus",
      "container.volumeSnapshotClasses.create",
      "container.volumeSnapshotClasses.delete",
      "container.volumeSnapshotClasses.get",
      "container.volumeSnapshotClasses.list",
      "container.volumeSnapshotClasses.update",
      "container.volumeSnapshotContents.create",
      "container.volumeSnapshotContents.delete",
      "container.volumeSnapshotContents.get",
      "container.volumeSnapshotContents.getStatus",
      "container.volumeSnapshotContents.list",
      "container.volumeSnapshotContents.update",
      "container.volumeSnapshotContents.updateStatus",
      "container.volumeSnapshots.create",
      "container.volumeSnapshots.delete",
      "container.volumeSnapshots.get",
      "container.volumeSnapshots.getStatus",
      "container.volumeSnapshots.list",
      "container.volumeSnapshots.update",
      "container.volumeSnapshots.updateStatus",
      "gkehub.features.get",
      "gkehub.features.getIamPolicy",
      "gkehub.features.list",
      "gkehub.fleet.get",
      "gkehub.gateway.delete",
      "gkehub.gateway.get",
      "gkehub.gateway.getIamPolicy",
      "gkehub.gateway.patch",
      "gkehub.gateway.post",
      "gkehub.gateway.put",
      "gkehub.gateway.setIamPolicy",
      "gkehub.locations.get",
      "gkehub.locations.list",
      "gkehub.membershipbindings.get",
      "gkehub.membershipbindings.list",
      "gkehub.memberships.generateConnectManifest",
      "gkehub.memberships.get",
      "gkehub.memberships.getIamPolicy",
      "gkehub.memberships.list",
      "gkehub.namespaces.get",
      "gkehub.namespaces.list",
      "gkehub.operations.get",
      "gkehub.operations.list",
      "gkehub.rbacrolebindings.get",
      "gkehub.rbacrolebindings.list",
      "gkehub.scopes.get",
      "gkehub.scopes.list",
      "logging.logEntries.create",
      "logging.logEntries.route",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.timeSeries.create",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.get",
      "serviceusage.services.use",
      "trafficdirector.networks.getConfigs",
      "trafficdirector.networks.reportMetrics"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/meshdataplane.serviceAgent",
    "title": "Mesh Data Plane Service Agent",
    "description": "Run user-space Istio components",
    "includedPermissions": [
      "cloudtrace.traces.patch",
      "compute.forwardingRules.get",
      "compute.globalForwardingRules.get",
      "logging.logEntries.create",
      "logging.logEntries.route",
      "meshconfig.projects.get",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.timeSeries.create",
      "serviceusage.services.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/metastore.admin",
    "title": "Dataproc Metastore Admin",
    "description": "Full access to all Dataproc Metastore resources.",
    "includedPermissions": [
      "metastore.backups.create",
      "metastore.backups.delete",
      "metastore.backups.get",
      "metastore.backups.getIamPolicy",
      "metastore.backups.list",
      "metastore.backups.setIamPolicy",
      "metastore.backups.use",
      "metastore.federations.create",
      "metastore.federations.delete",
      "metastore.federations.get",
      "metastore.federations.getIamPolicy",
      "metastore.federations.list",
      "metastore.federations.setIamPolicy",
      "metastore.federations.update",
      "metastore.federations.use",
      "metastore.imports.create",
      "metastore.imports.get",
      "metastore.imports.list",
      "metastore.imports.update",
      "metastore.locations.get",
      "metastore.locations.list",
      "metastore.operations.cancel",
      "metastore.operations.delete",
      "metastore.operations.get",
      "metastore.operations.list",
      "metastore.services.create",
      "metastore.services.delete",
      "metastore.services.export",
      "metastore.services.get",
      "metastore.services.getIamPolicy",
      "metastore.services.list",
      "metastore.services.restore",
      "metastore.services.setIamPolicy",
      "metastore.services.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/metastore.editor",
    "title": "Dataproc Metastore Editor",
    "description": "Read and write access to all Dataproc Metastore resources.",
    "includedPermissions": [
      "metastore.backups.create",
      "metastore.backups.delete",
      "metastore.backups.get",
      "metastore.backups.list",
      "metastore.backups.use",
      "metastore.federations.create",
      "metastore.federations.delete",
      "metastore.federations.get",
      "metastore.federations.list",
      "metastore.federations.update",
      "metastore.imports.create",
      "metastore.imports.get",
      "metastore.imports.list",
      "metastore.imports.update",
      "metastore.locations.get",
      "metastore.locations.list",
      "metastore.operations.cancel",
      "metastore.operations.delete",
      "metastore.operations.get",
      "metastore.operations.list",
      "metastore.services.create",
      "metastore.services.delete",
      "metastore.services.export",
      "metastore.services.get",
      "metastore.services.getIamPolicy",
      "metastore.services.list",
      "metastore.services.restore",
      "metastore.services.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/metastore.federationAccessor",
    "title": "Metastore Federation Accessor",
    "description": "Access to the Metastore Federation resource.",
    "includedPermissions": [
      "metastore.federations.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/metastore.metadataEditor",
    "title": "Dataproc Metastore Metadata Editor",
    "description": "Access to read and modify the metadata of databases and tables under those databases.",
    "includedPermissions": [
      "metastore.databases.create",
      "metastore.databases.delete",
      "metastore.databases.get",
      "metastore.databases.getIamPolicy",
      "metastore.databases.list",
      "metastore.databases.update",
      "metastore.services.get",
      "metastore.services.use",
      "metastore.tables.create",
      "metastore.tables.delete",
      "metastore.tables.get",
      "metastore.tables.getIamPolicy",
      "metastore.tables.list",
      "metastore.tables.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/metastore.metadataMutateAdmin",
    "title": "Dataproc Metastore Metadata Mutate Admin",
    "description": "Access to mutate metadata from a Dataproc Metastore service's underlying metadata store.",
    "includedPermissions": [
      "metastore.services.mutateMetadata"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/metastore.metadataOperator",
    "title": "Dataproc Metastore Metadata Operator",
    "description": "Read-only access to Dataproc Metastore resources with additional metadata operations permission.",
    "includedPermissions": [
      "metastore.backups.create",
      "metastore.backups.delete",
      "metastore.backups.get",
      "metastore.backups.list",
      "metastore.backups.use",
      "metastore.imports.create",
      "metastore.imports.get",
      "metastore.imports.list",
      "metastore.imports.update",
      "metastore.locations.get",
      "metastore.locations.list",
      "metastore.operations.get",
      "metastore.operations.list",
      "metastore.services.export",
      "metastore.services.get",
      "metastore.services.getIamPolicy",
      "metastore.services.list",
      "metastore.services.restore",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/metastore.metadataOwner",
    "title": "Dataproc Metastore Data Owner",
    "description": "Full access to the metadata of databases and tables under those databases.",
    "includedPermissions": [
      "metastore.databases.create",
      "metastore.databases.delete",
      "metastore.databases.get",
      "metastore.databases.getIamPolicy",
      "metastore.databases.list",
      "metastore.databases.setIamPolicy",
      "metastore.databases.update",
      "metastore.services.get",
      "metastore.services.getIamPolicy",
      "metastore.services.list",
      "metastore.services.use",
      "metastore.tables.create",
      "metastore.tables.delete",
      "metastore.tables.get",
      "metastore.tables.getIamPolicy",
      "metastore.tables.list",
      "metastore.tables.setIamPolicy",
      "metastore.tables.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/metastore.metadataQueryAdmin",
    "title": "Dataproc Metastore Metadata Query Admin",
    "description": "Access to query metadata from a Dataproc Metastore service's underlying metadata store. ",
    "includedPermissions": [
      "metastore.services.queryMetadata"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/metastore.metadataUser",
    "title": "Dataproc Metastore Metadata User",
    "description": "Access to the Dataproc Metastore gRPC endpoint",
    "includedPermissions": [
      "metastore.databases.get",
      "metastore.databases.list",
      "metastore.services.get",
      "metastore.services.use"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/metastore.metadataViewer",
    "title": "Dataproc Metastore Metadata Viewer",
    "description": "Access to read the metadata of databases and tables under those databases",
    "includedPermissions": [
      "metastore.databases.get",
      "metastore.databases.getIamPolicy",
      "metastore.databases.list",
      "metastore.services.get",
      "metastore.services.use",
      "metastore.tables.get",
      "metastore.tables.getIamPolicy",
      "metastore.tables.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/metastore.serviceAgent",
    "title": "Dataproc Metastore Service Agent",
    "description": "Gives the Dataproc Metastore service account access to managed resources.",
    "includedPermissions": [
      "compute.addresses.createInternal",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.use",
      "compute.forwardingRules.create",
      "compute.forwardingRules.delete",
      "compute.forwardingRules.get",
      "compute.forwardingRules.pscCreate",
      "compute.forwardingRules.pscDelete",
      "compute.globalAddresses.createInternal",
      "compute.globalAddresses.deleteInternal",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalOperations.get",
      "compute.globalOperations.list",
      "compute.networks.addPeering",
      "compute.networks.get",
      "compute.networks.removePeering",
      "compute.networks.updatePeering",
      "compute.networks.use",
      "compute.regionOperations.get",
      "compute.subnetworks.get",
      "compute.subnetworks.use",
      "dns.changes.create",
      "dns.changes.get",
      "dns.managedZones.create",
      "dns.managedZones.delete",
      "dns.managedZones.get",
      "dns.managedZones.list",
      "dns.networks.bindPrivateDNSZone",
      "dns.networks.targetWithPeeringZone",
      "dns.resourceRecordSets.create",
      "dns.resourceRecordSets.delete",
      "dns.resourceRecordSets.get",
      "dns.resourceRecordSets.list",
      "dns.resourceRecordSets.update",
      "metastore.databases.get",
      "metastore.databases.setIamPolicy",
      "metastore.databases.update",
      "metastore.services.get",
      "metastore.tables.get",
      "metastore.tables.setIamPolicy",
      "metastore.tables.update",
      "servicedirectory.namespaces.create",
      "servicedirectory.namespaces.delete",
      "servicedirectory.services.create",
      "servicedirectory.services.delete",
      "storage.buckets.create",
      "storage.buckets.delete",
      "storage.buckets.get",
      "storage.buckets.update",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/metastore.user",
    "title": "Dataproc Metastore Viewer",
    "description": "Read-only access to all Dataproc Metastore resources.",
    "includedPermissions": [
      "metastore.backups.get",
      "metastore.backups.list",
      "metastore.federations.get",
      "metastore.federations.getIamPolicy",
      "metastore.federations.list",
      "metastore.imports.get",
      "metastore.imports.list",
      "metastore.locations.get",
      "metastore.locations.list",
      "metastore.operations.get",
      "metastore.operations.list",
      "metastore.services.export",
      "metastore.services.get",
      "metastore.services.getIamPolicy",
      "metastore.services.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/migrationcenter.admin",
    "title": "Migration Center Admin",
    "description": "Full access to Migration Center all resources.",
    "includedPermissions": [
      "migrationcenter.assets.create",
      "migrationcenter.assets.delete",
      "migrationcenter.assets.get",
      "migrationcenter.assets.list",
      "migrationcenter.assets.reportFrames",
      "migrationcenter.assets.update",
      "migrationcenter.errorFrames.get",
      "migrationcenter.errorFrames.list",
      "migrationcenter.groups.create",
      "migrationcenter.groups.delete",
      "migrationcenter.groups.get",
      "migrationcenter.groups.list",
      "migrationcenter.groups.update",
      "migrationcenter.importDataFiles.create",
      "migrationcenter.importDataFiles.delete",
      "migrationcenter.importDataFiles.get",
      "migrationcenter.importDataFiles.list",
      "migrationcenter.importJobs.create",
      "migrationcenter.importJobs.delete",
      "migrationcenter.importJobs.get",
      "migrationcenter.importJobs.list",
      "migrationcenter.importJobs.update",
      "migrationcenter.locations.get",
      "migrationcenter.locations.list",
      "migrationcenter.operations.cancel",
      "migrationcenter.operations.delete",
      "migrationcenter.operations.get",
      "migrationcenter.operations.list",
      "migrationcenter.preferenceSets.create",
      "migrationcenter.preferenceSets.delete",
      "migrationcenter.preferenceSets.get",
      "migrationcenter.preferenceSets.list",
      "migrationcenter.preferenceSets.update",
      "migrationcenter.reportConfigs.create",
      "migrationcenter.reportConfigs.delete",
      "migrationcenter.reportConfigs.get",
      "migrationcenter.reportConfigs.list",
      "migrationcenter.reports.create",
      "migrationcenter.reports.delete",
      "migrationcenter.reports.get",
      "migrationcenter.reports.list",
      "migrationcenter.settings.get",
      "migrationcenter.settings.update",
      "migrationcenter.sources.create",
      "migrationcenter.sources.delete",
      "migrationcenter.sources.get",
      "migrationcenter.sources.list",
      "migrationcenter.sources.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "rma.annotations.create",
      "rma.annotations.get",
      "rma.collectors.create",
      "rma.collectors.delete",
      "rma.collectors.get",
      "rma.collectors.list",
      "rma.collectors.update",
      "rma.locations.get",
      "rma.locations.list",
      "rma.operations.cancel",
      "rma.operations.delete",
      "rma.operations.get",
      "rma.operations.list",
      "serviceusage.quotas.get"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/migrationcenter.serviceAgent",
    "title": "Migration Center Service Agent",
    "description": "Gives Migration Center Service Account access to objects storedin object store and Cloud Migration products.",
    "includedPermissions": [
      "storage.objects.get",
      "vmmigration.migratingVms.create"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/migrationcenter.viewer",
    "title": "Migration Center Viewer",
    "description": "Read-only access to Migration Center all resources.",
    "includedPermissions": [
      "migrationcenter.assets.get",
      "migrationcenter.assets.list",
      "migrationcenter.errorFrames.get",
      "migrationcenter.errorFrames.list",
      "migrationcenter.groups.get",
      "migrationcenter.groups.list",
      "migrationcenter.importDataFiles.get",
      "migrationcenter.importDataFiles.list",
      "migrationcenter.importJobs.get",
      "migrationcenter.importJobs.list",
      "migrationcenter.locations.get",
      "migrationcenter.locations.list",
      "migrationcenter.operations.get",
      "migrationcenter.operations.list",
      "migrationcenter.preferenceSets.get",
      "migrationcenter.preferenceSets.list",
      "migrationcenter.reportConfigs.get",
      "migrationcenter.reportConfigs.list",
      "migrationcenter.reports.get",
      "migrationcenter.reports.list",
      "migrationcenter.settings.get",
      "migrationcenter.sources.get",
      "migrationcenter.sources.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "rma.annotations.get",
      "rma.collectors.get",
      "rma.collectors.list",
      "rma.locations.get",
      "rma.locations.list",
      "rma.operations.get",
      "rma.operations.list",
      "serviceusage.quotas.get"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/ml.admin",
    "title": "AI Platform Admin",
    "description": "Full access to AI Platform.",
    "includedPermissions": [
      "ml.jobs.cancel",
      "ml.jobs.create",
      "ml.jobs.get",
      "ml.jobs.getIamPolicy",
      "ml.jobs.list",
      "ml.jobs.setIamPolicy",
      "ml.jobs.update",
      "ml.locations.get",
      "ml.locations.list",
      "ml.models.create",
      "ml.models.delete",
      "ml.models.get",
      "ml.models.getIamPolicy",
      "ml.models.list",
      "ml.models.predict",
      "ml.models.setIamPolicy",
      "ml.models.update",
      "ml.operations.cancel",
      "ml.operations.get",
      "ml.operations.list",
      "ml.projects.getConfig",
      "ml.studies.create",
      "ml.studies.delete",
      "ml.studies.get",
      "ml.studies.getIamPolicy",
      "ml.studies.list",
      "ml.studies.setIamPolicy",
      "ml.trials.create",
      "ml.trials.delete",
      "ml.trials.get",
      "ml.trials.list",
      "ml.trials.update",
      "ml.versions.create",
      "ml.versions.delete",
      "ml.versions.get",
      "ml.versions.list",
      "ml.versions.predict",
      "ml.versions.update",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/ml.developer",
    "title": "AI Platform Developer",
    "description": "Access to create training and prediction jobs, models and versions, send online prediction requests.",
    "includedPermissions": [
      "ml.jobs.create",
      "ml.jobs.get",
      "ml.jobs.getIamPolicy",
      "ml.jobs.list",
      "ml.locations.get",
      "ml.locations.list",
      "ml.models.create",
      "ml.models.get",
      "ml.models.getIamPolicy",
      "ml.models.list",
      "ml.models.predict",
      "ml.operations.get",
      "ml.operations.list",
      "ml.projects.getConfig",
      "ml.studies.create",
      "ml.studies.delete",
      "ml.studies.get",
      "ml.studies.getIamPolicy",
      "ml.studies.list",
      "ml.studies.setIamPolicy",
      "ml.trials.create",
      "ml.trials.delete",
      "ml.trials.get",
      "ml.trials.list",
      "ml.trials.update",
      "ml.versions.get",
      "ml.versions.list",
      "ml.versions.predict",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/ml.jobOwner",
    "title": "AI Platform Job Owner",
    "description": "Full access to the job.",
    "includedPermissions": [
      "ml.jobs.cancel",
      "ml.jobs.create",
      "ml.jobs.get",
      "ml.jobs.getIamPolicy",
      "ml.jobs.list",
      "ml.jobs.setIamPolicy",
      "ml.jobs.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/ml.modelOwner",
    "title": "AI Platform Model Owner",
    "description": "Full access to the model and its versions.",
    "includedPermissions": [
      "ml.models.create",
      "ml.models.delete",
      "ml.models.get",
      "ml.models.getIamPolicy",
      "ml.models.list",
      "ml.models.predict",
      "ml.models.setIamPolicy",
      "ml.models.update",
      "ml.versions.create",
      "ml.versions.delete",
      "ml.versions.get",
      "ml.versions.list",
      "ml.versions.predict",
      "ml.versions.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/ml.modelUser",
    "title": "AI Platform Model User",
    "description": "Permissions to read the model and its versions, and use them for prediction.",
    "includedPermissions": [
      "ml.models.get",
      "ml.models.predict",
      "ml.versions.get",
      "ml.versions.list",
      "ml.versions.predict"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/ml.operationOwner",
    "title": "AI Platform Operation Owner",
    "description": "Full access to the operation.",
    "includedPermissions": [
      "ml.operations.cancel",
      "ml.operations.get",
      "ml.operations.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/ml.serviceAgent",
    "title": "AI Platform Service Agent",
    "description": "AI Platform service agent can act as log writer, Cloud Storage admin, Artifact Registry Reader, BigQuery writer, and service account access token creator.",
    "includedPermissions": [
      "artifactregistry.dockerimages.get",
      "artifactregistry.dockerimages.list",
      "artifactregistry.files.get",
      "artifactregistry.files.list",
      "artifactregistry.locations.get",
      "artifactregistry.locations.list",
      "artifactregistry.mavenartifacts.get",
      "artifactregistry.mavenartifacts.list",
      "artifactregistry.npmpackages.get",
      "artifactregistry.npmpackages.list",
      "artifactregistry.packages.get",
      "artifactregistry.packages.list",
      "artifactregistry.projectsettings.get",
      "artifactregistry.pythonpackages.get",
      "artifactregistry.pythonpackages.list",
      "artifactregistry.repositories.downloadArtifacts",
      "artifactregistry.repositories.get",
      "artifactregistry.repositories.list",
      "artifactregistry.repositories.listEffectiveTags",
      "artifactregistry.repositories.listTagBindings",
      "artifactregistry.repositories.readViaVirtualRepository",
      "artifactregistry.tags.get",
      "artifactregistry.tags.list",
      "artifactregistry.versions.get",
      "artifactregistry.versions.list",
      "bigquery.datasets.create",
      "bigquery.datasets.get",
      "bigquery.jobs.create",
      "bigquery.jobs.get",
      "bigquery.jobs.list",
      "bigquery.jobs.update",
      "bigquery.tables.create",
      "bigquery.tables.get",
      "bigquery.tables.getData",
      "bigquery.tables.list",
      "bigquery.tables.updateData",
      "firebase.projects.get",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.getAccessToken",
      "iam.serviceAccounts.getOpenIdToken",
      "iam.serviceAccounts.implicitDelegation",
      "iam.serviceAccounts.list",
      "iam.serviceAccounts.signBlob",
      "iam.serviceAccounts.signJwt",
      "logging.logEntries.create",
      "logging.logEntries.route",
      "orgpolicy.policy.get",
      "recommender.iamPolicyInsights.get",
      "recommender.iamPolicyInsights.list",
      "recommender.iamPolicyInsights.update",
      "recommender.iamPolicyRecommendations.get",
      "recommender.iamPolicyRecommendations.list",
      "recommender.iamPolicyRecommendations.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storage.buckets.create",
      "storage.buckets.createTagBinding",
      "storage.buckets.delete",
      "storage.buckets.deleteTagBinding",
      "storage.buckets.get",
      "storage.buckets.getIamPolicy",
      "storage.buckets.getObjectInsights",
      "storage.buckets.list",
      "storage.buckets.listEffectiveTags",
      "storage.buckets.listTagBindings",
      "storage.buckets.setIamPolicy",
      "storage.buckets.update",
      "storage.multipartUploads.abort",
      "storage.multipartUploads.create",
      "storage.multipartUploads.list",
      "storage.multipartUploads.listParts",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.getIamPolicy",
      "storage.objects.list",
      "storage.objects.setIamPolicy",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/ml.viewer",
    "title": "AI Platform Viewer",
    "description": "Read-only access to AI Platform resources.",
    "includedPermissions": [
      "ml.jobs.get",
      "ml.jobs.list",
      "ml.locations.get",
      "ml.locations.list",
      "ml.models.get",
      "ml.models.list",
      "ml.operations.get",
      "ml.operations.list",
      "ml.projects.getConfig",
      "ml.studies.get",
      "ml.studies.getIamPolicy",
      "ml.studies.list",
      "ml.trials.get",
      "ml.trials.list",
      "ml.versions.get",
      "ml.versions.list",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/monitoring.admin",
    "title": "Monitoring Admin",
    "description": "All current and future monitoring permissions.",
    "includedPermissions": [
      "cloudnotifications.activities.list",
      "monitoring.alertPolicies.create",
      "monitoring.alertPolicies.delete",
      "monitoring.alertPolicies.get",
      "monitoring.alertPolicies.list",
      "monitoring.alertPolicies.update",
      "monitoring.dashboards.create",
      "monitoring.dashboards.delete",
      "monitoring.dashboards.get",
      "monitoring.dashboards.list",
      "monitoring.dashboards.update",
      "monitoring.groups.create",
      "monitoring.groups.delete",
      "monitoring.groups.get",
      "monitoring.groups.list",
      "monitoring.groups.update",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.delete",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.metricsScopes.link",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.notificationChannelDescriptors.get",
      "monitoring.notificationChannelDescriptors.list",
      "monitoring.notificationChannels.create",
      "monitoring.notificationChannels.delete",
      "monitoring.notificationChannels.get",
      "monitoring.notificationChannels.getVerificationCode",
      "monitoring.notificationChannels.list",
      "monitoring.notificationChannels.sendVerificationCode",
      "monitoring.notificationChannels.update",
      "monitoring.notificationChannels.verify",
      "monitoring.publicWidgets.create",
      "monitoring.publicWidgets.delete",
      "monitoring.publicWidgets.get",
      "monitoring.publicWidgets.list",
      "monitoring.publicWidgets.update",
      "monitoring.services.create",
      "monitoring.services.delete",
      "monitoring.services.get",
      "monitoring.services.list",
      "monitoring.services.update",
      "monitoring.slos.create",
      "monitoring.slos.delete",
      "monitoring.slos.get",
      "monitoring.slos.list",
      "monitoring.slos.update",
      "monitoring.snoozes.create",
      "monitoring.snoozes.get",
      "monitoring.snoozes.list",
      "monitoring.snoozes.update",
      "monitoring.timeSeries.create",
      "monitoring.timeSeries.list",
      "monitoring.uptimeCheckConfigs.create",
      "monitoring.uptimeCheckConfigs.delete",
      "monitoring.uptimeCheckConfigs.get",
      "monitoring.uptimeCheckConfigs.list",
      "monitoring.uptimeCheckConfigs.update",
      "opsconfigmonitoring.resourceMetadata.list",
      "opsconfigmonitoring.resourceMetadata.write",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.enable",
      "stackdriver.projects.edit",
      "stackdriver.projects.get",
      "stackdriver.resourceMetadata.list",
      "stackdriver.resourceMetadata.write"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/monitoring.alertPolicyEditor",
    "title": "Monitoring AlertPolicy Editor",
    "description": "Read/write access to alerting policies.",
    "includedPermissions": [
      "monitoring.alertPolicies.create",
      "monitoring.alertPolicies.delete",
      "monitoring.alertPolicies.get",
      "monitoring.alertPolicies.list",
      "monitoring.alertPolicies.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/monitoring.alertPolicyViewer",
    "title": "Monitoring AlertPolicy Viewer",
    "description": "Read-only access to alerting policies.",
    "includedPermissions": [
      "monitoring.alertPolicies.get",
      "monitoring.alertPolicies.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/monitoring.cloudConsoleIncidentEditor",
    "title": "Monitoring Cloud Console Incident Editor",
    "description": "Read/write access to incidents from Cloud Console.",
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/monitoring.cloudConsoleIncidentViewer",
    "title": "Monitoring Cloud Console Incident Viewer",
    "description": "Read access to incidents from Cloud Console.",
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/monitoring.dashboardEditor",
    "title": "Monitoring Dashboard Configuration Editor",
    "description": "Read/write access to dashboard configurations.",
    "includedPermissions": [
      "monitoring.dashboards.create",
      "monitoring.dashboards.delete",
      "monitoring.dashboards.get",
      "monitoring.dashboards.list",
      "monitoring.dashboards.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/monitoring.dashboardViewer",
    "title": "Monitoring Dashboard Configuration Viewer",
    "description": "Read-only access to dashboard configurations.",
    "includedPermissions": [
      "monitoring.dashboards.get",
      "monitoring.dashboards.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/monitoring.editor",
    "title": "Monitoring Editor",
    "description": "Read/write access to all monitoring data and configuration.",
    "includedPermissions": [
      "cloudnotifications.activities.list",
      "monitoring.alertPolicies.create",
      "monitoring.alertPolicies.delete",
      "monitoring.alertPolicies.get",
      "monitoring.alertPolicies.list",
      "monitoring.alertPolicies.update",
      "monitoring.dashboards.create",
      "monitoring.dashboards.delete",
      "monitoring.dashboards.get",
      "monitoring.dashboards.list",
      "monitoring.dashboards.update",
      "monitoring.groups.create",
      "monitoring.groups.delete",
      "monitoring.groups.get",
      "monitoring.groups.list",
      "monitoring.groups.update",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.delete",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.notificationChannelDescriptors.get",
      "monitoring.notificationChannelDescriptors.list",
      "monitoring.notificationChannels.create",
      "monitoring.notificationChannels.delete",
      "monitoring.notificationChannels.get",
      "monitoring.notificationChannels.list",
      "monitoring.notificationChannels.sendVerificationCode",
      "monitoring.notificationChannels.update",
      "monitoring.notificationChannels.verify",
      "monitoring.publicWidgets.create",
      "monitoring.publicWidgets.delete",
      "monitoring.publicWidgets.get",
      "monitoring.publicWidgets.list",
      "monitoring.publicWidgets.update",
      "monitoring.services.create",
      "monitoring.services.delete",
      "monitoring.services.get",
      "monitoring.services.list",
      "monitoring.services.update",
      "monitoring.slos.create",
      "monitoring.slos.delete",
      "monitoring.slos.get",
      "monitoring.slos.list",
      "monitoring.slos.update",
      "monitoring.snoozes.create",
      "monitoring.snoozes.get",
      "monitoring.snoozes.list",
      "monitoring.snoozes.update",
      "monitoring.timeSeries.create",
      "monitoring.timeSeries.list",
      "monitoring.uptimeCheckConfigs.create",
      "monitoring.uptimeCheckConfigs.delete",
      "monitoring.uptimeCheckConfigs.get",
      "monitoring.uptimeCheckConfigs.list",
      "monitoring.uptimeCheckConfigs.update",
      "opsconfigmonitoring.resourceMetadata.list",
      "opsconfigmonitoring.resourceMetadata.write",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.enable",
      "stackdriver.projects.edit",
      "stackdriver.projects.get",
      "stackdriver.resourceMetadata.list",
      "stackdriver.resourceMetadata.write"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/monitoring.metricWriter",
    "title": "Monitoring Metric Writer",
    "description": "Write-only access to metrics.  This provides exactly the permissions needed by the Stackdriver agent and other systems that send metrics.",
    "includedPermissions": [
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.timeSeries.create"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/monitoring.metricsScopesAdmin",
    "title": "Monitoring Metrics Scopes Admin",
    "description": "Access to add and remove monitored projects from metrics scopes.",
    "includedPermissions": [
      "monitoring.metricsScopes.link",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/monitoring.metricsScopesViewer",
    "title": "Monitoring Metrics Scopes Viewer",
    "description": "Read-only access to metrics scopes and their monitored projects.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/monitoring.notificationChannelEditor",
    "title": "Monitoring NotificationChannel Editor",
    "description": "Read/write access to notification channels.",
    "includedPermissions": [
      "monitoring.notificationChannelDescriptors.get",
      "monitoring.notificationChannelDescriptors.list",
      "monitoring.notificationChannels.create",
      "monitoring.notificationChannels.delete",
      "monitoring.notificationChannels.get",
      "monitoring.notificationChannels.list",
      "monitoring.notificationChannels.sendVerificationCode",
      "monitoring.notificationChannels.update",
      "monitoring.notificationChannels.verify"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/monitoring.notificationChannelViewer",
    "title": "Monitoring NotificationChannel Viewer",
    "description": "Read-only access to notification channels.",
    "includedPermissions": [
      "monitoring.notificationChannelDescriptors.get",
      "monitoring.notificationChannelDescriptors.list",
      "monitoring.notificationChannels.get",
      "monitoring.notificationChannels.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/monitoring.notificationServiceAgent",
    "title": "Monitoring Service Agent",
    "description": "Grants Cloud Monitoring and Cloud Alerting permission to access consumer resources and track usage.",
    "includedPermissions": [
      "cloudfunctions.functions.get",
      "cloudtrace.traces.patch",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.timeSeries.list",
      "run.routes.invoke",
      "servicedirectory.networks.access",
      "servicedirectory.services.resolve",
      "serviceusage.services.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/monitoring.servicesEditor",
    "title": "Monitoring Services Editor",
    "description": "Read/write access to services.",
    "includedPermissions": [
      "monitoring.services.create",
      "monitoring.services.delete",
      "monitoring.services.get",
      "monitoring.services.list",
      "monitoring.services.update",
      "monitoring.slos.create",
      "monitoring.slos.delete",
      "monitoring.slos.get",
      "monitoring.slos.list",
      "monitoring.slos.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/monitoring.servicesViewer",
    "title": "Monitoring Services Viewer",
    "description": "Read-only access to services.",
    "includedPermissions": [
      "monitoring.services.get",
      "monitoring.services.list",
      "monitoring.slos.get",
      "monitoring.slos.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/monitoring.snoozeEditor",
    "title": "Monitoring Snooze Editor",
    "includedPermissions": [
      "monitoring.snoozes.create",
      "monitoring.snoozes.get",
      "monitoring.snoozes.list",
      "monitoring.snoozes.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/monitoring.snoozeViewer",
    "title": "Monitoring Snooze Viewer",
    "includedPermissions": [
      "monitoring.snoozes.get",
      "monitoring.snoozes.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/monitoring.uptimeCheckConfigEditor",
    "title": "Monitoring Uptime Check Configuration Editor",
    "description": "Read/write access to uptime check configurations.",
    "includedPermissions": [
      "monitoring.uptimeCheckConfigs.create",
      "monitoring.uptimeCheckConfigs.delete",
      "monitoring.uptimeCheckConfigs.get",
      "monitoring.uptimeCheckConfigs.list",
      "monitoring.uptimeCheckConfigs.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/monitoring.uptimeCheckConfigViewer",
    "title": "Monitoring Uptime Check Configuration Viewer",
    "description": "Read-only access to uptime check configurations.",
    "includedPermissions": [
      "monitoring.uptimeCheckConfigs.get",
      "monitoring.uptimeCheckConfigs.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/monitoring.viewer",
    "title": "Monitoring Viewer",
    "description": "Read-only access to get and list information about all monitoring data and configuration.",
    "includedPermissions": [
      "cloudnotifications.activities.list",
      "monitoring.alertPolicies.get",
      "monitoring.alertPolicies.list",
      "monitoring.dashboards.get",
      "monitoring.dashboards.list",
      "monitoring.groups.get",
      "monitoring.groups.list",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.notificationChannelDescriptors.get",
      "monitoring.notificationChannelDescriptors.list",
      "monitoring.notificationChannels.get",
      "monitoring.notificationChannels.list",
      "monitoring.publicWidgets.get",
      "monitoring.publicWidgets.list",
      "monitoring.services.get",
      "monitoring.services.list",
      "monitoring.slos.get",
      "monitoring.slos.list",
      "monitoring.snoozes.get",
      "monitoring.snoozes.list",
      "monitoring.timeSeries.list",
      "monitoring.uptimeCheckConfigs.get",
      "monitoring.uptimeCheckConfigs.list",
      "opsconfigmonitoring.resourceMetadata.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "stackdriver.projects.get",
      "stackdriver.resourceMetadata.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/multiclusteringress.serviceAgent",
    "title": "Multi Cluster Ingress Service Agent",
    "description": "Gives the Multi Cluster Ingress service agent access to CloudPlatform resources.",
    "includedPermissions": [
      "certificatemanager.certmapentries.create",
      "certificatemanager.certmapentries.delete",
      "certificatemanager.certmapentries.get",
      "certificatemanager.certmapentries.getIamPolicy",
      "certificatemanager.certmapentries.list",
      "certificatemanager.certmapentries.update",
      "certificatemanager.certmaps.create",
      "certificatemanager.certmaps.delete",
      "certificatemanager.certmaps.get",
      "certificatemanager.certmaps.getIamPolicy",
      "certificatemanager.certmaps.list",
      "certificatemanager.certmaps.update",
      "certificatemanager.certmaps.use",
      "certificatemanager.certs.create",
      "certificatemanager.certs.delete",
      "certificatemanager.certs.get",
      "certificatemanager.certs.getIamPolicy",
      "certificatemanager.certs.list",
      "certificatemanager.certs.update",
      "certificatemanager.certs.use",
      "certificatemanager.dnsauthorizations.create",
      "certificatemanager.dnsauthorizations.delete",
      "certificatemanager.dnsauthorizations.get",
      "certificatemanager.dnsauthorizations.getIamPolicy",
      "certificatemanager.dnsauthorizations.list",
      "certificatemanager.dnsauthorizations.update",
      "certificatemanager.dnsauthorizations.use",
      "compute.addresses.create",
      "compute.addresses.createInternal",
      "compute.addresses.delete",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.addresses.use",
      "compute.addresses.useInternal",
      "compute.backendServices.addSignedUrlKey",
      "compute.backendServices.create",
      "compute.backendServices.createTagBinding",
      "compute.backendServices.delete",
      "compute.backendServices.deleteSignedUrlKey",
      "compute.backendServices.deleteTagBinding",
      "compute.backendServices.get",
      "compute.backendServices.getIamPolicy",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.backendServices.setIamPolicy",
      "compute.backendServices.setSecurityPolicy",
      "compute.backendServices.update",
      "compute.backendServices.use",
      "compute.firewalls.create",
      "compute.firewalls.createTagBinding",
      "compute.firewalls.delete",
      "compute.firewalls.deleteTagBinding",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.firewalls.update",
      "compute.forwardingRules.create",
      "compute.forwardingRules.createTagBinding",
      "compute.forwardingRules.delete",
      "compute.forwardingRules.deleteTagBinding",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.forwardingRules.pscCreate",
      "compute.forwardingRules.pscDelete",
      "compute.forwardingRules.pscSetLabels",
      "compute.forwardingRules.pscSetTarget",
      "compute.forwardingRules.pscUpdate",
      "compute.forwardingRules.setLabels",
      "compute.forwardingRules.setTarget",
      "compute.forwardingRules.update",
      "compute.forwardingRules.use",
      "compute.globalAddresses.create",
      "compute.globalAddresses.delete",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalAddresses.use",
      "compute.globalForwardingRules.create",
      "compute.globalForwardingRules.createTagBinding",
      "compute.globalForwardingRules.delete",
      "compute.globalForwardingRules.deleteTagBinding",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalForwardingRules.pscCreate",
      "compute.globalForwardingRules.pscDelete",
      "compute.globalForwardingRules.pscGet",
      "compute.globalForwardingRules.pscSetLabels",
      "compute.globalForwardingRules.pscSetTarget",
      "compute.globalForwardingRules.pscUpdate",
      "compute.globalForwardingRules.setLabels",
      "compute.globalForwardingRules.setTarget",
      "compute.globalForwardingRules.update",
      "compute.healthChecks.create",
      "compute.healthChecks.createTagBinding",
      "compute.healthChecks.delete",
      "compute.healthChecks.deleteTagBinding",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.healthChecks.update",
      "compute.healthChecks.use",
      "compute.healthChecks.useReadOnly",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.use",
      "compute.networks.updatePolicy",
      "compute.networks.use",
      "compute.regionBackendServices.create",
      "compute.regionBackendServices.createTagBinding",
      "compute.regionBackendServices.delete",
      "compute.regionBackendServices.deleteTagBinding",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.getIamPolicy",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionBackendServices.setIamPolicy",
      "compute.regionBackendServices.setSecurityPolicy",
      "compute.regionBackendServices.update",
      "compute.regionBackendServices.use",
      "compute.regionHealthChecks.create",
      "compute.regionHealthChecks.createTagBinding",
      "compute.regionHealthChecks.delete",
      "compute.regionHealthChecks.deleteTagBinding",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionHealthChecks.update",
      "compute.regionHealthChecks.use",
      "compute.regionHealthChecks.useReadOnly",
      "compute.regionSslCertificates.create",
      "compute.regionSslCertificates.createTagBinding",
      "compute.regionSslCertificates.delete",
      "compute.regionSslCertificates.deleteTagBinding",
      "compute.regionSslCertificates.get",
      "compute.regionSslCertificates.list",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionTargetHttpProxies.create",
      "compute.regionTargetHttpProxies.createTagBinding",
      "compute.regionTargetHttpProxies.delete",
      "compute.regionTargetHttpProxies.deleteTagBinding",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpProxies.setUrlMap",
      "compute.regionTargetHttpProxies.update",
      "compute.regionTargetHttpProxies.use",
      "compute.regionTargetHttpsProxies.create",
      "compute.regionTargetHttpsProxies.createTagBinding",
      "compute.regionTargetHttpsProxies.delete",
      "compute.regionTargetHttpsProxies.deleteTagBinding",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.setSslCertificates",
      "compute.regionTargetHttpsProxies.setUrlMap",
      "compute.regionTargetHttpsProxies.update",
      "compute.regionTargetHttpsProxies.use",
      "compute.regionUrlMaps.create",
      "compute.regionUrlMaps.createTagBinding",
      "compute.regionUrlMaps.delete",
      "compute.regionUrlMaps.deleteTagBinding",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.invalidateCache",
      "compute.regionUrlMaps.list",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.regionUrlMaps.update",
      "compute.regionUrlMaps.use",
      "compute.regionUrlMaps.validate",
      "compute.securityPolicies.use",
      "compute.sslCertificates.create",
      "compute.sslCertificates.createTagBinding",
      "compute.sslCertificates.delete",
      "compute.sslCertificates.deleteTagBinding",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.use",
      "compute.subnetworks.list",
      "compute.subnetworks.use",
      "compute.targetHttpProxies.create",
      "compute.targetHttpProxies.createTagBinding",
      "compute.targetHttpProxies.delete",
      "compute.targetHttpProxies.deleteTagBinding",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpProxies.setUrlMap",
      "compute.targetHttpProxies.update",
      "compute.targetHttpProxies.use",
      "compute.targetHttpsProxies.create",
      "compute.targetHttpsProxies.createTagBinding",
      "compute.targetHttpsProxies.delete",
      "compute.targetHttpsProxies.deleteTagBinding",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetHttpsProxies.setCertificateMap",
      "compute.targetHttpsProxies.setQuicOverride",
      "compute.targetHttpsProxies.setSslCertificates",
      "compute.targetHttpsProxies.setSslPolicy",
      "compute.targetHttpsProxies.setUrlMap",
      "compute.targetHttpsProxies.update",
      "compute.targetHttpsProxies.use",
      "compute.urlMaps.create",
      "compute.urlMaps.createTagBinding",
      "compute.urlMaps.delete",
      "compute.urlMaps.deleteTagBinding",
      "compute.urlMaps.get",
      "compute.urlMaps.invalidateCache",
      "compute.urlMaps.list",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "compute.urlMaps.update",
      "compute.urlMaps.use",
      "compute.urlMaps.validate",
      "container.backendConfigs.create",
      "container.backendConfigs.delete",
      "container.backendConfigs.get",
      "container.backendConfigs.list",
      "container.backendConfigs.update",
      "container.clusters.get",
      "container.customResourceDefinitions.create",
      "container.customResourceDefinitions.delete",
      "container.customResourceDefinitions.get",
      "container.customResourceDefinitions.list",
      "container.customResourceDefinitions.update",
      "container.deployments.create",
      "container.deployments.delete",
      "container.deployments.get",
      "container.deployments.getScale",
      "container.deployments.getStatus",
      "container.deployments.list",
      "container.deployments.rollback",
      "container.deployments.update",
      "container.deployments.updateScale",
      "container.deployments.updateStatus",
      "container.events.create",
      "container.events.update",
      "container.frontendConfigs.create",
      "container.frontendConfigs.delete",
      "container.frontendConfigs.get",
      "container.frontendConfigs.list",
      "container.frontendConfigs.update",
      "container.namespaces.list",
      "container.secrets.get",
      "container.secrets.list",
      "container.services.create",
      "container.services.delete",
      "container.services.get",
      "container.services.getStatus",
      "container.services.list",
      "container.services.proxy",
      "container.services.update",
      "container.services.updateStatus",
      "container.thirdPartyObjects.create",
      "container.thirdPartyObjects.delete",
      "container.thirdPartyObjects.get",
      "container.thirdPartyObjects.list",
      "container.thirdPartyObjects.update",
      "gkehub.features.get",
      "gkehub.locations.get",
      "gkehub.locations.list",
      "gkehub.memberships.get",
      "gkehub.memberships.list",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "serviceusage.services.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/multiclustermetering.serviceAgent",
    "title": "Multi-cluster metering Service Agent",
    "description": "Gives the Multi-cluster metering service agent access to CloudPlatform resources.",
    "includedPermissions": [
      "gkehub.features.get",
      "gkehub.locations.get",
      "gkehub.locations.list",
      "gkehub.memberships.get",
      "gkehub.memberships.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/multiclusterservicediscovery.serviceAgent",
    "title": "Multi-Cluster Service Discovery Service Agent",
    "description": "Gives the Multi-Cluster Service Discovery service access to Cloud Platform resources.",
    "includedPermissions": [
      "compute.backendServices.addSignedUrlKey",
      "compute.backendServices.create",
      "compute.backendServices.createTagBinding",
      "compute.backendServices.delete",
      "compute.backendServices.deleteSignedUrlKey",
      "compute.backendServices.deleteTagBinding",
      "compute.backendServices.get",
      "compute.backendServices.getIamPolicy",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.backendServices.setIamPolicy",
      "compute.backendServices.setSecurityPolicy",
      "compute.backendServices.update",
      "compute.backendServices.use",
      "compute.firewalls.create",
      "compute.firewalls.createTagBinding",
      "compute.firewalls.delete",
      "compute.firewalls.deleteTagBinding",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.firewalls.update",
      "compute.forwardingRules.create",
      "compute.forwardingRules.createTagBinding",
      "compute.forwardingRules.delete",
      "compute.forwardingRules.deleteTagBinding",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.forwardingRules.pscCreate",
      "compute.forwardingRules.pscDelete",
      "compute.forwardingRules.pscSetLabels",
      "compute.forwardingRules.pscSetTarget",
      "compute.forwardingRules.pscUpdate",
      "compute.forwardingRules.setLabels",
      "compute.forwardingRules.setTarget",
      "compute.forwardingRules.update",
      "compute.forwardingRules.use",
      "compute.globalForwardingRules.create",
      "compute.globalForwardingRules.createTagBinding",
      "compute.globalForwardingRules.delete",
      "compute.globalForwardingRules.deleteTagBinding",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalForwardingRules.pscCreate",
      "compute.globalForwardingRules.pscDelete",
      "compute.globalForwardingRules.pscGet",
      "compute.globalForwardingRules.pscSetLabels",
      "compute.globalForwardingRules.pscSetTarget",
      "compute.globalForwardingRules.pscUpdate",
      "compute.globalForwardingRules.setLabels",
      "compute.globalForwardingRules.setTarget",
      "compute.globalForwardingRules.update",
      "compute.globalOperations.get",
      "compute.healthChecks.create",
      "compute.healthChecks.createTagBinding",
      "compute.healthChecks.delete",
      "compute.healthChecks.deleteTagBinding",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.healthChecks.update",
      "compute.healthChecks.use",
      "compute.healthChecks.useReadOnly",
      "compute.httpHealthChecks.create",
      "compute.httpHealthChecks.createTagBinding",
      "compute.httpHealthChecks.delete",
      "compute.httpHealthChecks.deleteTagBinding",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpHealthChecks.update",
      "compute.httpHealthChecks.use",
      "compute.httpHealthChecks.useReadOnly",
      "compute.httpsHealthChecks.create",
      "compute.httpsHealthChecks.createTagBinding",
      "compute.httpsHealthChecks.delete",
      "compute.httpsHealthChecks.deleteTagBinding",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.update",
      "compute.httpsHealthChecks.use",
      "compute.httpsHealthChecks.useReadOnly",
      "compute.networkEndpointGroups.use",
      "compute.networks.get",
      "compute.networks.list",
      "compute.networks.updatePolicy",
      "compute.networks.use",
      "compute.regions.get",
      "compute.regions.list",
      "compute.targetHttpProxies.create",
      "compute.targetHttpProxies.createTagBinding",
      "compute.targetHttpProxies.delete",
      "compute.targetHttpProxies.deleteTagBinding",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpProxies.setUrlMap",
      "compute.targetHttpProxies.update",
      "compute.targetHttpProxies.use",
      "compute.targetHttpsProxies.create",
      "compute.targetHttpsProxies.createTagBinding",
      "compute.targetHttpsProxies.delete",
      "compute.targetHttpsProxies.deleteTagBinding",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetHttpsProxies.setCertificateMap",
      "compute.targetHttpsProxies.setQuicOverride",
      "compute.targetHttpsProxies.setSslCertificates",
      "compute.targetHttpsProxies.setSslPolicy",
      "compute.targetHttpsProxies.setUrlMap",
      "compute.targetHttpsProxies.update",
      "compute.targetHttpsProxies.use",
      "compute.targetTcpProxies.create",
      "compute.targetTcpProxies.createTagBinding",
      "compute.targetTcpProxies.delete",
      "compute.targetTcpProxies.deleteTagBinding",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.targetTcpProxies.update",
      "compute.targetTcpProxies.use",
      "compute.urlMaps.create",
      "compute.urlMaps.createTagBinding",
      "compute.urlMaps.delete",
      "compute.urlMaps.deleteTagBinding",
      "compute.urlMaps.get",
      "compute.urlMaps.invalidateCache",
      "compute.urlMaps.list",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "compute.urlMaps.update",
      "compute.urlMaps.use",
      "compute.urlMaps.validate",
      "container.clusters.get",
      "container.clusters.list",
      "dns.changes.create",
      "dns.changes.get",
      "dns.changes.list",
      "dns.dnsKeys.get",
      "dns.dnsKeys.list",
      "dns.gkeClusters.bindDNSResponsePolicy",
      "dns.gkeClusters.bindPrivateDNSZone",
      "dns.managedZoneOperations.get",
      "dns.managedZoneOperations.list",
      "dns.managedZones.create",
      "dns.managedZones.delete",
      "dns.managedZones.get",
      "dns.managedZones.getIamPolicy",
      "dns.managedZones.list",
      "dns.managedZones.update",
      "dns.networks.bindDNSResponsePolicy",
      "dns.networks.bindPrivateDNSPolicy",
      "dns.networks.bindPrivateDNSZone",
      "dns.networks.targetWithPeeringZone",
      "dns.networks.useHealthSignals",
      "dns.policies.create",
      "dns.policies.delete",
      "dns.policies.get",
      "dns.policies.getIamPolicy",
      "dns.policies.list",
      "dns.policies.update",
      "dns.projects.get",
      "dns.resourceRecordSets.create",
      "dns.resourceRecordSets.delete",
      "dns.resourceRecordSets.get",
      "dns.resourceRecordSets.list",
      "dns.resourceRecordSets.update",
      "dns.responsePolicies.create",
      "dns.responsePolicies.delete",
      "dns.responsePolicies.get",
      "dns.responsePolicies.list",
      "dns.responsePolicies.update",
      "dns.responsePolicyRules.create",
      "dns.responsePolicyRules.delete",
      "dns.responsePolicyRules.get",
      "dns.responsePolicyRules.list",
      "dns.responsePolicyRules.update",
      "gkehub.features.get",
      "gkehub.locations.get",
      "gkehub.locations.list",
      "gkehub.memberships.get",
      "gkehub.memberships.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/nestconsole.homeDeveloperAdmin",
    "title": "Google Home Developer Console Admin",
    "description": "Admin access to Google Home Developer Console resources",
    "includedPermissions": [
      "nestconsole.smarthomePreviews.update",
      "nestconsole.smarthomeProjects.create",
      "nestconsole.smarthomeProjects.delete",
      "nestconsole.smarthomeProjects.get",
      "nestconsole.smarthomeProjects.update",
      "nestconsole.smarthomeVersions.create",
      "nestconsole.smarthomeVersions.get",
      "nestconsole.smarthomeVersions.submit",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/nestconsole.homeDeveloperEditor",
    "title": "Google Home Developer Console Editor",
    "description": "Read-Write access to Google Home Developer Console resources",
    "includedPermissions": [
      "nestconsole.smarthomePreviews.update",
      "nestconsole.smarthomeProjects.get",
      "nestconsole.smarthomeProjects.update",
      "nestconsole.smarthomeVersions.create",
      "nestconsole.smarthomeVersions.get",
      "nestconsole.smarthomeVersions.submit",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/nestconsole.homeDeveloperViewer",
    "title": "Google Home Developer Console Reader",
    "description": "Read-only access to Google Home Developer Console resources",
    "includedPermissions": [
      "nestconsole.smarthomeProjects.get",
      "nestconsole.smarthomeVersions.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/netapp.admin",
    "title": "Google Cloud NetApp Volumes Admin",
    "description": "Full access to Google Cloud NetApp Volumes resources.",
    "includedPermissions": [
      "netapp.activeDirectories.create",
      "netapp.activeDirectories.delete",
      "netapp.activeDirectories.get",
      "netapp.activeDirectories.list",
      "netapp.activeDirectories.update",
      "netapp.kmsConfigs.create",
      "netapp.kmsConfigs.delete",
      "netapp.kmsConfigs.encrypt",
      "netapp.kmsConfigs.get",
      "netapp.kmsConfigs.list",
      "netapp.kmsConfigs.update",
      "netapp.kmsConfigs.verify",
      "netapp.replications.create",
      "netapp.replications.delete",
      "netapp.replications.get",
      "netapp.replications.list",
      "netapp.replications.resume",
      "netapp.replications.reverse",
      "netapp.replications.stop",
      "netapp.replications.update",
      "netapp.snapshots.create",
      "netapp.snapshots.delete",
      "netapp.snapshots.get",
      "netapp.snapshots.list",
      "netapp.snapshots.update",
      "netapp.storagePools.create",
      "netapp.storagePools.delete",
      "netapp.storagePools.get",
      "netapp.storagePools.list",
      "netapp.storagePools.update",
      "netapp.volumes.create",
      "netapp.volumes.delete",
      "netapp.volumes.get",
      "netapp.volumes.list",
      "netapp.volumes.revert",
      "netapp.volumes.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/netapp.viewer",
    "title": "Google Cloud NetApp Volumes Viewer",
    "description": "Readonly access to Google Cloud NetApp Volumes resources.",
    "includedPermissions": [
      "netapp.activeDirectories.get",
      "netapp.activeDirectories.list",
      "netapp.kmsConfigs.get",
      "netapp.kmsConfigs.list",
      "netapp.replications.get",
      "netapp.replications.list",
      "netapp.snapshots.get",
      "netapp.snapshots.list",
      "netapp.storagePools.get",
      "netapp.storagePools.list",
      "netapp.volumes.get",
      "netapp.volumes.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/netappcloudvolumes.admin",
    "title": "NetApp Cloud Volumes Admin",
    "description": "This role is managed by NetApp, not Google.",
    "includedPermissions": [
      "cloudvolumesgcp-api.netapp.com/activeDirectories.create",
      "cloudvolumesgcp-api.netapp.com/activeDirectories.delete",
      "cloudvolumesgcp-api.netapp.com/activeDirectories.get",
      "cloudvolumesgcp-api.netapp.com/activeDirectories.list",
      "cloudvolumesgcp-api.netapp.com/activeDirectories.update",
      "cloudvolumesgcp-api.netapp.com/ipRanges.list",
      "cloudvolumesgcp-api.netapp.com/jobs.get",
      "cloudvolumesgcp-api.netapp.com/jobs.list",
      "cloudvolumesgcp-api.netapp.com/regions.list",
      "cloudvolumesgcp-api.netapp.com/serviceLevels.list",
      "cloudvolumesgcp-api.netapp.com/snapshots.create",
      "cloudvolumesgcp-api.netapp.com/snapshots.delete",
      "cloudvolumesgcp-api.netapp.com/snapshots.get",
      "cloudvolumesgcp-api.netapp.com/snapshots.list",
      "cloudvolumesgcp-api.netapp.com/snapshots.update",
      "cloudvolumesgcp-api.netapp.com/volumereplication.authorize",
      "cloudvolumesgcp-api.netapp.com/volumereplication.break",
      "cloudvolumesgcp-api.netapp.com/volumereplication.create",
      "cloudvolumesgcp-api.netapp.com/volumereplication.delete",
      "cloudvolumesgcp-api.netapp.com/volumereplication.get",
      "cloudvolumesgcp-api.netapp.com/volumereplication.list",
      "cloudvolumesgcp-api.netapp.com/volumereplication.release",
      "cloudvolumesgcp-api.netapp.com/volumereplication.resync",
      "cloudvolumesgcp-api.netapp.com/volumereplication.update",
      "cloudvolumesgcp-api.netapp.com/volumes.create",
      "cloudvolumesgcp-api.netapp.com/volumes.delete",
      "cloudvolumesgcp-api.netapp.com/volumes.get",
      "cloudvolumesgcp-api.netapp.com/volumes.list",
      "cloudvolumesgcp-api.netapp.com/volumes.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/netappcloudvolumes.viewer",
    "title": "NetApp Cloud Volumes Viewer",
    "description": "This role is managed by NetApp, not Google.",
    "includedPermissions": [
      "cloudvolumesgcp-api.netapp.com/activeDirectories.get",
      "cloudvolumesgcp-api.netapp.com/activeDirectories.list",
      "cloudvolumesgcp-api.netapp.com/ipRanges.list",
      "cloudvolumesgcp-api.netapp.com/jobs.get",
      "cloudvolumesgcp-api.netapp.com/jobs.list",
      "cloudvolumesgcp-api.netapp.com/regions.list",
      "cloudvolumesgcp-api.netapp.com/serviceLevels.list",
      "cloudvolumesgcp-api.netapp.com/snapshots.get",
      "cloudvolumesgcp-api.netapp.com/snapshots.list",
      "cloudvolumesgcp-api.netapp.com/volumes.get",
      "cloudvolumesgcp-api.netapp.com/volumes.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/networkactions.serviceAgent",
    "title": "Network Actions Service Agent",
    "description": "Gives Network Actions service account access to read required resources.",
    "includedPermissions": [
      "artifactregistry.repositories.downloadArtifacts"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/networkconnectivity.consumerNetworkAdmin",
    "title": "Service Automation Consumer Network Admin",
    "description": "Service Automation Consumer Network Admin is responsible for setting up ServiceConnectionPolicies.",
    "includedPermissions": [
      "networkconnectivity.serviceConnectionPolicies.create",
      "networkconnectivity.serviceConnectionPolicies.delete",
      "networkconnectivity.serviceConnectionPolicies.get",
      "networkconnectivity.serviceConnectionPolicies.list",
      "networkconnectivity.serviceConnectionPolicies.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/networkconnectivity.groupUser",
    "title": "Group User",
    "description": "Enables use access on group resources",
    "includedPermissions": [
      "networkconnectivity.groups.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/networkconnectivity.hubAdmin",
    "title": "Hub & Spoke Admin",
    "description": "Enables full access to hub and spoke resources",
    "includedPermissions": [
      "networkconnectivity.groups.acceptSpoke",
      "networkconnectivity.groups.get",
      "networkconnectivity.groups.getIamPolicy",
      "networkconnectivity.groups.list",
      "networkconnectivity.groups.rejectSpoke",
      "networkconnectivity.groups.setIamPolicy",
      "networkconnectivity.groups.use",
      "networkconnectivity.hubRouteTables.get",
      "networkconnectivity.hubRouteTables.getIamPolicy",
      "networkconnectivity.hubRouteTables.list",
      "networkconnectivity.hubRouteTables.setIamPolicy",
      "networkconnectivity.hubRoutes.get",
      "networkconnectivity.hubRoutes.getIamPolicy",
      "networkconnectivity.hubRoutes.list",
      "networkconnectivity.hubRoutes.setIamPolicy",
      "networkconnectivity.hubs.create",
      "networkconnectivity.hubs.delete",
      "networkconnectivity.hubs.get",
      "networkconnectivity.hubs.getIamPolicy",
      "networkconnectivity.hubs.list",
      "networkconnectivity.hubs.listSpokes",
      "networkconnectivity.hubs.setIamPolicy",
      "networkconnectivity.hubs.update",
      "networkconnectivity.locations.get",
      "networkconnectivity.locations.list",
      "networkconnectivity.operations.cancel",
      "networkconnectivity.operations.delete",
      "networkconnectivity.operations.get",
      "networkconnectivity.operations.list",
      "networkconnectivity.spokes.create",
      "networkconnectivity.spokes.delete",
      "networkconnectivity.spokes.get",
      "networkconnectivity.spokes.getIamPolicy",
      "networkconnectivity.spokes.list",
      "networkconnectivity.spokes.setIamPolicy",
      "networkconnectivity.spokes.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/networkconnectivity.hubViewer",
    "title": "Hub & Spoke Viewer",
    "description": "Enables read-only access to hub and spoke resources",
    "includedPermissions": [
      "networkconnectivity.groups.get",
      "networkconnectivity.groups.getIamPolicy",
      "networkconnectivity.groups.list",
      "networkconnectivity.hubRouteTables.get",
      "networkconnectivity.hubRouteTables.getIamPolicy",
      "networkconnectivity.hubRouteTables.list",
      "networkconnectivity.hubRoutes.get",
      "networkconnectivity.hubRoutes.getIamPolicy",
      "networkconnectivity.hubRoutes.list",
      "networkconnectivity.hubs.get",
      "networkconnectivity.hubs.getIamPolicy",
      "networkconnectivity.hubs.list",
      "networkconnectivity.hubs.listSpokes",
      "networkconnectivity.locations.get",
      "networkconnectivity.locations.list",
      "networkconnectivity.spokes.get",
      "networkconnectivity.spokes.getIamPolicy",
      "networkconnectivity.spokes.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/networkconnectivity.serviceAgent",
    "title": "Network Connectivity Service Agent",
    "description": "Grants the Network Connectivity API authority to read some networking resources. It does not mutate these resources.",
    "includedPermissions": [
      "compute.addresses.create",
      "compute.addresses.createInternal",
      "compute.addresses.delete",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.use",
      "compute.forwardingRules.create",
      "compute.forwardingRules.delete",
      "compute.forwardingRules.get",
      "compute.forwardingRules.pscCreate",
      "compute.forwardingRules.pscDelete",
      "compute.forwardingRules.pscSetLabels",
      "compute.forwardingRules.pscSetTarget",
      "compute.forwardingRules.pscUpdate",
      "compute.instances.get",
      "compute.interconnectAttachments.get",
      "compute.networks.get",
      "compute.networks.use",
      "compute.projects.get",
      "compute.regionOperations.get",
      "compute.routers.get",
      "compute.subnetworks.list",
      "compute.subnetworks.use",
      "compute.vpnTunnels.get",
      "dns.managedZones.create",
      "dns.networks.bindPrivateDNSZone",
      "networkconnectivity.operations.get",
      "servicedirectory.namespaces.associatePrivateZone",
      "servicedirectory.namespaces.create",
      "servicedirectory.namespaces.delete",
      "servicedirectory.services.create",
      "servicedirectory.services.delete"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/networkconnectivity.serviceClassUser",
    "title": "Service Class User",
    "description": "Service Class User uses a ServiceClass",
    "includedPermissions": [
      "networkconnectivity.serviceClasses.get",
      "networkconnectivity.serviceClasses.list",
      "networkconnectivity.serviceClasses.use",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/networkconnectivity.serviceProducerAdmin",
    "title": "Service Automation Service Producer Admin",
    "description": "Service Automation Producer Admin uses information from a consumer request to manage ServiceClasses and ServiceConnectionMaps",
    "includedPermissions": [
      "networkconnectivity.operations.get",
      "networkconnectivity.operations.list",
      "networkconnectivity.serviceClasses.create",
      "networkconnectivity.serviceClasses.delete",
      "networkconnectivity.serviceClasses.get",
      "networkconnectivity.serviceClasses.list",
      "networkconnectivity.serviceClasses.update",
      "networkconnectivity.serviceClasses.use",
      "networkconnectivity.serviceConnectionMaps.create",
      "networkconnectivity.serviceConnectionMaps.delete",
      "networkconnectivity.serviceConnectionMaps.get",
      "networkconnectivity.serviceConnectionMaps.list",
      "networkconnectivity.serviceConnectionMaps.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/networkconnectivity.spokeAdmin",
    "title": "Spoke Admin",
    "description": "Enables full access to spoke resources and read-only access to hub resources",
    "includedPermissions": [
      "networkconnectivity.hubRouteTables.get",
      "networkconnectivity.hubRouteTables.getIamPolicy",
      "networkconnectivity.hubRouteTables.list",
      "networkconnectivity.hubRoutes.get",
      "networkconnectivity.hubRoutes.getIamPolicy",
      "networkconnectivity.hubRoutes.list",
      "networkconnectivity.hubs.get",
      "networkconnectivity.hubs.getIamPolicy",
      "networkconnectivity.hubs.list",
      "networkconnectivity.locations.get",
      "networkconnectivity.locations.list",
      "networkconnectivity.operations.get",
      "networkconnectivity.operations.list",
      "networkconnectivity.spokes.create",
      "networkconnectivity.spokes.delete",
      "networkconnectivity.spokes.get",
      "networkconnectivity.spokes.getIamPolicy",
      "networkconnectivity.spokes.list",
      "networkconnectivity.spokes.setIamPolicy",
      "networkconnectivity.spokes.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/networkmanagement.admin",
    "title": "Network Management Admin",
    "description": "Full access to Network Management resources.",
    "includedPermissions": [
      "networkmanagement.config.get",
      "networkmanagement.config.startFreeTrial",
      "networkmanagement.config.update",
      "networkmanagement.connectivitytests.create",
      "networkmanagement.connectivitytests.delete",
      "networkmanagement.connectivitytests.get",
      "networkmanagement.connectivitytests.getIamPolicy",
      "networkmanagement.connectivitytests.list",
      "networkmanagement.connectivitytests.rerun",
      "networkmanagement.connectivitytests.setIamPolicy",
      "networkmanagement.connectivitytests.update",
      "networkmanagement.locations.get",
      "networkmanagement.locations.list",
      "networkmanagement.operations.get",
      "networkmanagement.operations.list",
      "networkmanagement.topologygraphs.read",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/networkmanagement.serviceAgent",
    "title": "GCP Network Management Service Agent",
    "description": "Grants the GCP Network Management API the authority to complete analysis based on network configurations from Compute Engine and Container Engine.",
    "includedPermissions": [
      "cloudsql.instances.get",
      "cloudsql.instances.list",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.backendServices.get",
      "compute.backendServices.list",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.list",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalNetworkEndpointGroups.get",
      "compute.globalNetworkEndpointGroups.list",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instances.get",
      "compute.instances.list",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.list",
      "compute.networks.get",
      "compute.networks.getEffectiveFirewalls",
      "compute.networks.list",
      "compute.networks.listPeeringRoutes",
      "compute.packetMirrorings.get",
      "compute.packetMirrorings.list",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.list",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.list",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routes.get",
      "compute.routes.list",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "compute.targetGrpcProxies.get",
      "compute.targetGrpcProxies.list",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetInstances.get",
      "compute.targetInstances.list",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetVpnGateways.get",
      "compute.targetVpnGateways.list",
      "compute.urlMaps.get",
      "compute.urlMaps.list",
      "compute.vpnGateways.get",
      "compute.vpnGateways.list",
      "compute.vpnTunnels.get",
      "compute.vpnTunnels.list",
      "container.clusters.get",
      "container.clusters.list",
      "container.nodes.get",
      "container.nodes.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/networkmanagement.viewer",
    "title": "Network Management Viewer",
    "description": "Read-only access to Network Management resources.",
    "includedPermissions": [
      "networkmanagement.config.get",
      "networkmanagement.connectivitytests.get",
      "networkmanagement.connectivitytests.getIamPolicy",
      "networkmanagement.connectivitytests.list",
      "networkmanagement.locations.get",
      "networkmanagement.locations.list",
      "networkmanagement.operations.get",
      "networkmanagement.operations.list",
      "networkmanagement.topologygraphs.read",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/notebooks.admin",
    "title": "Notebooks Admin",
    "description": "Full access to Notebooks all resources.",
    "includedPermissions": [
      "compute.acceleratorTypes.get",
      "compute.acceleratorTypes.list",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.backendBuckets.get",
      "compute.backendBuckets.getIamPolicy",
      "compute.backendBuckets.list",
      "compute.backendBuckets.listEffectiveTags",
      "compute.backendBuckets.listTagBindings",
      "compute.backendServices.get",
      "compute.backendServices.getIamPolicy",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.commitments.get",
      "compute.commitments.list",
      "compute.diskTypes.get",
      "compute.diskTypes.list",
      "compute.disks.get",
      "compute.disks.getIamPolicy",
      "compute.disks.list",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.list",
      "compute.firewallPolicies.get",
      "compute.firewallPolicies.getIamPolicy",
      "compute.firewallPolicies.list",
      "compute.firewallPolicies.listEffectiveTags",
      "compute.firewallPolicies.listTagBindings",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.futureReservations.get",
      "compute.futureReservations.getIamPolicy",
      "compute.futureReservations.list",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalForwardingRules.pscGet",
      "compute.globalNetworkEndpointGroups.get",
      "compute.globalNetworkEndpointGroups.list",
      "compute.globalNetworkEndpointGroups.listEffectiveTags",
      "compute.globalNetworkEndpointGroups.listTagBindings",
      "compute.globalOperations.get",
      "compute.globalOperations.getIamPolicy",
      "compute.globalOperations.list",
      "compute.globalPublicDelegatedPrefixes.get",
      "compute.globalPublicDelegatedPrefixes.list",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.images.get",
      "compute.images.getFromFamily",
      "compute.images.getIamPolicy",
      "compute.images.list",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instanceTemplates.get",
      "compute.instanceTemplates.getIamPolicy",
      "compute.instanceTemplates.list",
      "compute.instances.get",
      "compute.instances.getEffectiveFirewalls",
      "compute.instances.getGuestAttributes",
      "compute.instances.getIamPolicy",
      "compute.instances.getScreenshot",
      "compute.instances.getSerialPortOutput",
      "compute.instances.getShieldedInstanceIdentity",
      "compute.instances.getShieldedVmIdentity",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listReferrers",
      "compute.instances.listTagBindings",
      "compute.instantSnapshots.get",
      "compute.instantSnapshots.getIamPolicy",
      "compute.instantSnapshots.list",
      "compute.interconnectAttachments.get",
      "compute.interconnectAttachments.list",
      "compute.interconnectLocations.get",
      "compute.interconnectLocations.list",
      "compute.interconnectRemoteLocations.get",
      "compute.interconnectRemoteLocations.list",
      "compute.interconnects.get",
      "compute.interconnects.list",
      "compute.licenseCodes.get",
      "compute.licenseCodes.getIamPolicy",
      "compute.licenseCodes.list",
      "compute.licenses.get",
      "compute.licenses.getIamPolicy",
      "compute.licenses.list",
      "compute.machineImages.get",
      "compute.machineImages.getIamPolicy",
      "compute.machineImages.list",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.maintenancePolicies.get",
      "compute.maintenancePolicies.getIamPolicy",
      "compute.maintenancePolicies.list",
      "compute.networkAttachments.get",
      "compute.networkAttachments.getIamPolicy",
      "compute.networkAttachments.list",
      "compute.networkEdgeSecurityServices.get",
      "compute.networkEdgeSecurityServices.list",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.getIamPolicy",
      "compute.networkEndpointGroups.list",
      "compute.networkEndpointGroups.listEffectiveTags",
      "compute.networkEndpointGroups.listTagBindings",
      "compute.networks.get",
      "compute.networks.getEffectiveFirewalls",
      "compute.networks.getRegionEffectiveFirewalls",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listPeeringRoutes",
      "compute.networks.listTagBindings",
      "compute.nodeGroups.get",
      "compute.nodeGroups.getIamPolicy",
      "compute.nodeGroups.list",
      "compute.nodeTemplates.get",
      "compute.nodeTemplates.getIamPolicy",
      "compute.nodeTemplates.list",
      "compute.nodeTypes.get",
      "compute.nodeTypes.list",
      "compute.organizations.listAssociations",
      "compute.packetMirrorings.get",
      "compute.packetMirrorings.list",
      "compute.projects.get",
      "compute.publicAdvertisedPrefixes.get",
      "compute.publicAdvertisedPrefixes.list",
      "compute.publicDelegatedPrefixes.get",
      "compute.publicDelegatedPrefixes.list",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.getIamPolicy",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionFirewallPolicies.get",
      "compute.regionFirewallPolicies.getIamPolicy",
      "compute.regionFirewallPolicies.list",
      "compute.regionFirewallPolicies.listEffectiveTags",
      "compute.regionFirewallPolicies.listTagBindings",
      "compute.regionHealthCheckServices.get",
      "compute.regionHealthCheckServices.list",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionNetworkEndpointGroups.listEffectiveTags",
      "compute.regionNetworkEndpointGroups.listTagBindings",
      "compute.regionNotificationEndpoints.get",
      "compute.regionNotificationEndpoints.list",
      "compute.regionOperations.get",
      "compute.regionOperations.getIamPolicy",
      "compute.regionOperations.list",
      "compute.regionSecurityPolicies.get",
      "compute.regionSecurityPolicies.list",
      "compute.regionSecurityPolicies.listEffectiveTags",
      "compute.regionSecurityPolicies.listTagBindings",
      "compute.regionSslCertificates.get",
      "compute.regionSslCertificates.list",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionSslPolicies.get",
      "compute.regionSslPolicies.list",
      "compute.regionSslPolicies.listAvailableFeatures",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionTargetTcpProxies.get",
      "compute.regionTargetTcpProxies.list",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.list",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.regionUrlMaps.validate",
      "compute.regions.get",
      "compute.regions.list",
      "compute.reservations.get",
      "compute.reservations.list",
      "compute.resourcePolicies.get",
      "compute.resourcePolicies.getIamPolicy",
      "compute.resourcePolicies.list",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routes.get",
      "compute.routes.list",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.securityPolicies.get",
      "compute.securityPolicies.getIamPolicy",
      "compute.securityPolicies.list",
      "compute.securityPolicies.listEffectiveTags",
      "compute.securityPolicies.listTagBindings",
      "compute.serviceAttachments.get",
      "compute.serviceAttachments.getIamPolicy",
      "compute.serviceAttachments.list",
      "compute.snapshots.get",
      "compute.snapshots.getIamPolicy",
      "compute.snapshots.list",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.get",
      "compute.sslPolicies.list",
      "compute.sslPolicies.listAvailableFeatures",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.subnetworks.get",
      "compute.subnetworks.getIamPolicy",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.targetGrpcProxies.get",
      "compute.targetGrpcProxies.list",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetInstances.get",
      "compute.targetInstances.list",
      "compute.targetInstances.listEffectiveTags",
      "compute.targetInstances.listTagBindings",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetSslProxies.listEffectiveTags",
      "compute.targetSslProxies.listTagBindings",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.targetVpnGateways.get",
      "compute.targetVpnGateways.list",
      "compute.urlMaps.get",
      "compute.urlMaps.list",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "compute.urlMaps.validate",
      "compute.vpnGateways.get",
      "compute.vpnGateways.list",
      "compute.vpnTunnels.get",
      "compute.vpnTunnels.list",
      "compute.zoneOperations.get",
      "compute.zoneOperations.getIamPolicy",
      "compute.zoneOperations.list",
      "compute.zones.get",
      "compute.zones.list",
      "notebooks.environments.create",
      "notebooks.environments.delete",
      "notebooks.environments.get",
      "notebooks.environments.getIamPolicy",
      "notebooks.environments.list",
      "notebooks.environments.setIamPolicy",
      "notebooks.executions.create",
      "notebooks.executions.delete",
      "notebooks.executions.get",
      "notebooks.executions.getIamPolicy",
      "notebooks.executions.list",
      "notebooks.executions.setIamPolicy",
      "notebooks.instances.checkUpgradability",
      "notebooks.instances.create",
      "notebooks.instances.delete",
      "notebooks.instances.diagnose",
      "notebooks.instances.get",
      "notebooks.instances.getHealth",
      "notebooks.instances.getIamPolicy",
      "notebooks.instances.list",
      "notebooks.instances.reset",
      "notebooks.instances.setAccelerator",
      "notebooks.instances.setIamPolicy",
      "notebooks.instances.setLabels",
      "notebooks.instances.setMachineType",
      "notebooks.instances.start",
      "notebooks.instances.stop",
      "notebooks.instances.update",
      "notebooks.instances.updateConfig",
      "notebooks.instances.updateShieldInstanceConfig",
      "notebooks.instances.upgrade",
      "notebooks.instances.use",
      "notebooks.locations.get",
      "notebooks.locations.list",
      "notebooks.operations.cancel",
      "notebooks.operations.delete",
      "notebooks.operations.get",
      "notebooks.operations.list",
      "notebooks.runtimes.create",
      "notebooks.runtimes.delete",
      "notebooks.runtimes.diagnose",
      "notebooks.runtimes.get",
      "notebooks.runtimes.getIamPolicy",
      "notebooks.runtimes.list",
      "notebooks.runtimes.reset",
      "notebooks.runtimes.setIamPolicy",
      "notebooks.runtimes.start",
      "notebooks.runtimes.stop",
      "notebooks.runtimes.switch",
      "notebooks.runtimes.update",
      "notebooks.runtimes.upgrade",
      "notebooks.schedules.create",
      "notebooks.schedules.delete",
      "notebooks.schedules.get",
      "notebooks.schedules.getIamPolicy",
      "notebooks.schedules.list",
      "notebooks.schedules.setIamPolicy",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/notebooks.legacyAdmin",
    "title": "Notebooks Legacy Admin",
    "description": "Full access to Notebooks all resources through compute API.",
    "includedPermissions": [
      "compute.acceleratorTypes.get",
      "compute.acceleratorTypes.list",
      "compute.addresses.create",
      "compute.addresses.createInternal",
      "compute.addresses.delete",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.addresses.setLabels",
      "compute.addresses.use",
      "compute.addresses.useInternal",
      "compute.autoscalers.create",
      "compute.autoscalers.delete",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.autoscalers.update",
      "compute.backendBuckets.addSignedUrlKey",
      "compute.backendBuckets.create",
      "compute.backendBuckets.createTagBinding",
      "compute.backendBuckets.delete",
      "compute.backendBuckets.deleteSignedUrlKey",
      "compute.backendBuckets.deleteTagBinding",
      "compute.backendBuckets.get",
      "compute.backendBuckets.getIamPolicy",
      "compute.backendBuckets.list",
      "compute.backendBuckets.listEffectiveTags",
      "compute.backendBuckets.listTagBindings",
      "compute.backendBuckets.setIamPolicy",
      "compute.backendBuckets.setSecurityPolicy",
      "compute.backendBuckets.update",
      "compute.backendBuckets.use",
      "compute.backendServices.addSignedUrlKey",
      "compute.backendServices.create",
      "compute.backendServices.createTagBinding",
      "compute.backendServices.delete",
      "compute.backendServices.deleteSignedUrlKey",
      "compute.backendServices.deleteTagBinding",
      "compute.backendServices.get",
      "compute.backendServices.getIamPolicy",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.backendServices.setIamPolicy",
      "compute.backendServices.setSecurityPolicy",
      "compute.backendServices.update",
      "compute.backendServices.use",
      "compute.commitments.create",
      "compute.commitments.get",
      "compute.commitments.list",
      "compute.commitments.update",
      "compute.commitments.updateReservations",
      "compute.diskTypes.get",
      "compute.diskTypes.list",
      "compute.disks.addResourcePolicies",
      "compute.disks.create",
      "compute.disks.createSnapshot",
      "compute.disks.createTagBinding",
      "compute.disks.delete",
      "compute.disks.deleteTagBinding",
      "compute.disks.get",
      "compute.disks.getIamPolicy",
      "compute.disks.list",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.disks.removeResourcePolicies",
      "compute.disks.resize",
      "compute.disks.setIamPolicy",
      "compute.disks.setLabels",
      "compute.disks.startAsyncReplication",
      "compute.disks.stopAsyncReplication",
      "compute.disks.stopGroupAsyncReplication",
      "compute.disks.update",
      "compute.disks.use",
      "compute.disks.useReadOnly",
      "compute.externalVpnGateways.create",
      "compute.externalVpnGateways.delete",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.list",
      "compute.externalVpnGateways.setLabels",
      "compute.externalVpnGateways.use",
      "compute.firewallPolicies.addAssociation",
      "compute.firewallPolicies.cloneRules",
      "compute.firewallPolicies.copyRules",
      "compute.firewallPolicies.create",
      "compute.firewallPolicies.createTagBinding",
      "compute.firewallPolicies.delete",
      "compute.firewallPolicies.deleteTagBinding",
      "compute.firewallPolicies.get",
      "compute.firewallPolicies.getIamPolicy",
      "compute.firewallPolicies.list",
      "compute.firewallPolicies.listEffectiveTags",
      "compute.firewallPolicies.listTagBindings",
      "compute.firewallPolicies.move",
      "compute.firewallPolicies.removeAssociation",
      "compute.firewallPolicies.setIamPolicy",
      "compute.firewallPolicies.update",
      "compute.firewallPolicies.use",
      "compute.firewalls.create",
      "compute.firewalls.createTagBinding",
      "compute.firewalls.delete",
      "compute.firewalls.deleteTagBinding",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.firewalls.update",
      "compute.forwardingRules.create",
      "compute.forwardingRules.createTagBinding",
      "compute.forwardingRules.delete",
      "compute.forwardingRules.deleteTagBinding",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.forwardingRules.pscCreate",
      "compute.forwardingRules.pscDelete",
      "compute.forwardingRules.pscSetLabels",
      "compute.forwardingRules.pscSetTarget",
      "compute.forwardingRules.pscUpdate",
      "compute.forwardingRules.setLabels",
      "compute.forwardingRules.setTarget",
      "compute.forwardingRules.update",
      "compute.forwardingRules.use",
      "compute.futureReservations.cancel",
      "compute.futureReservations.create",
      "compute.futureReservations.delete",
      "compute.futureReservations.get",
      "compute.futureReservations.getIamPolicy",
      "compute.futureReservations.list",
      "compute.futureReservations.setIamPolicy",
      "compute.futureReservations.update",
      "compute.globalAddresses.create",
      "compute.globalAddresses.createInternal",
      "compute.globalAddresses.delete",
      "compute.globalAddresses.deleteInternal",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalAddresses.setLabels",
      "compute.globalAddresses.use",
      "compute.globalForwardingRules.create",
      "compute.globalForwardingRules.createTagBinding",
      "compute.globalForwardingRules.delete",
      "compute.globalForwardingRules.deleteTagBinding",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalForwardingRules.pscCreate",
      "compute.globalForwardingRules.pscDelete",
      "compute.globalForwardingRules.pscGet",
      "compute.globalForwardingRules.pscSetLabels",
      "compute.globalForwardingRules.pscSetTarget",
      "compute.globalForwardingRules.pscUpdate",
      "compute.globalForwardingRules.setLabels",
      "compute.globalForwardingRules.setTarget",
      "compute.globalForwardingRules.update",
      "compute.globalNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.create",
      "compute.globalNetworkEndpointGroups.createTagBinding",
      "compute.globalNetworkEndpointGroups.delete",
      "compute.globalNetworkEndpointGroups.deleteTagBinding",
      "compute.globalNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.get",
      "compute.globalNetworkEndpointGroups.list",
      "compute.globalNetworkEndpointGroups.listEffectiveTags",
      "compute.globalNetworkEndpointGroups.listTagBindings",
      "compute.globalNetworkEndpointGroups.use",
      "compute.globalOperations.delete",
      "compute.globalOperations.get",
      "compute.globalOperations.getIamPolicy",
      "compute.globalOperations.list",
      "compute.globalOperations.setIamPolicy",
      "compute.globalPublicDelegatedPrefixes.create",
      "compute.globalPublicDelegatedPrefixes.delete",
      "compute.globalPublicDelegatedPrefixes.get",
      "compute.globalPublicDelegatedPrefixes.list",
      "compute.globalPublicDelegatedPrefixes.update",
      "compute.globalPublicDelegatedPrefixes.updatePolicy",
      "compute.globalPublicDelegatedPrefixes.use",
      "compute.healthChecks.create",
      "compute.healthChecks.createTagBinding",
      "compute.healthChecks.delete",
      "compute.healthChecks.deleteTagBinding",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.healthChecks.update",
      "compute.healthChecks.use",
      "compute.healthChecks.useReadOnly",
      "compute.httpHealthChecks.create",
      "compute.httpHealthChecks.createTagBinding",
      "compute.httpHealthChecks.delete",
      "compute.httpHealthChecks.deleteTagBinding",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpHealthChecks.update",
      "compute.httpHealthChecks.use",
      "compute.httpHealthChecks.useReadOnly",
      "compute.httpsHealthChecks.create",
      "compute.httpsHealthChecks.createTagBinding",
      "compute.httpsHealthChecks.delete",
      "compute.httpsHealthChecks.deleteTagBinding",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.update",
      "compute.httpsHealthChecks.use",
      "compute.httpsHealthChecks.useReadOnly",
      "compute.images.create",
      "compute.images.createTagBinding",
      "compute.images.delete",
      "compute.images.deleteTagBinding",
      "compute.images.deprecate",
      "compute.images.get",
      "compute.images.getFromFamily",
      "compute.images.getIamPolicy",
      "compute.images.list",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.images.setIamPolicy",
      "compute.images.setLabels",
      "compute.images.update",
      "compute.images.useReadOnly",
      "compute.instanceGroupManagers.create",
      "compute.instanceGroupManagers.delete",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroupManagers.update",
      "compute.instanceGroupManagers.use",
      "compute.instanceGroups.create",
      "compute.instanceGroups.delete",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instanceGroups.update",
      "compute.instanceGroups.use",
      "compute.instanceTemplates.create",
      "compute.instanceTemplates.delete",
      "compute.instanceTemplates.get",
      "compute.instanceTemplates.getIamPolicy",
      "compute.instanceTemplates.list",
      "compute.instanceTemplates.setIamPolicy",
      "compute.instanceTemplates.useReadOnly",
      "compute.instances.addAccessConfig",
      "compute.instances.addMaintenancePolicies",
      "compute.instances.addResourcePolicies",
      "compute.instances.attachDisk",
      "compute.instances.create",
      "compute.instances.createTagBinding",
      "compute.instances.delete",
      "compute.instances.deleteAccessConfig",
      "compute.instances.deleteTagBinding",
      "compute.instances.detachDisk",
      "compute.instances.get",
      "compute.instances.getEffectiveFirewalls",
      "compute.instances.getGuestAttributes",
      "compute.instances.getIamPolicy",
      "compute.instances.getScreenshot",
      "compute.instances.getSerialPortOutput",
      "compute.instances.getShieldedInstanceIdentity",
      "compute.instances.getShieldedVmIdentity",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listReferrers",
      "compute.instances.listTagBindings",
      "compute.instances.osAdminLogin",
      "compute.instances.osLogin",
      "compute.instances.removeMaintenancePolicies",
      "compute.instances.removeResourcePolicies",
      "compute.instances.reset",
      "compute.instances.resume",
      "compute.instances.sendDiagnosticInterrupt",
      "compute.instances.setDeletionProtection",
      "compute.instances.setDiskAutoDelete",
      "compute.instances.setIamPolicy",
      "compute.instances.setLabels",
      "compute.instances.setMachineResources",
      "compute.instances.setMachineType",
      "compute.instances.setMetadata",
      "compute.instances.setMinCpuPlatform",
      "compute.instances.setName",
      "compute.instances.setScheduling",
      "compute.instances.setSecurityPolicy",
      "compute.instances.setServiceAccount",
      "compute.instances.setShieldedInstanceIntegrityPolicy",
      "compute.instances.setShieldedVmIntegrityPolicy",
      "compute.instances.setTags",
      "compute.instances.simulateMaintenanceEvent",
      "compute.instances.start",
      "compute.instances.startWithEncryptionKey",
      "compute.instances.stop",
      "compute.instances.suspend",
      "compute.instances.update",
      "compute.instances.updateAccessConfig",
      "compute.instances.updateDisplayDevice",
      "compute.instances.updateNetworkInterface",
      "compute.instances.updateSecurity",
      "compute.instances.updateShieldedInstanceConfig",
      "compute.instances.updateShieldedVmConfig",
      "compute.instances.use",
      "compute.instances.useReadOnly",
      "compute.instantSnapshots.create",
      "compute.instantSnapshots.delete",
      "compute.instantSnapshots.export",
      "compute.instantSnapshots.get",
      "compute.instantSnapshots.getIamPolicy",
      "compute.instantSnapshots.list",
      "compute.instantSnapshots.setIamPolicy",
      "compute.instantSnapshots.setLabels",
      "compute.instantSnapshots.useReadOnly",
      "compute.interconnectAttachments.create",
      "compute.interconnectAttachments.delete",
      "compute.interconnectAttachments.get",
      "compute.interconnectAttachments.list",
      "compute.interconnectAttachments.setLabels",
      "compute.interconnectAttachments.update",
      "compute.interconnectAttachments.use",
      "compute.interconnectLocations.get",
      "compute.interconnectLocations.list",
      "compute.interconnectRemoteLocations.get",
      "compute.interconnectRemoteLocations.list",
      "compute.interconnects.create",
      "compute.interconnects.delete",
      "compute.interconnects.get",
      "compute.interconnects.list",
      "compute.interconnects.setLabels",
      "compute.interconnects.update",
      "compute.interconnects.use",
      "compute.licenseCodes.get",
      "compute.licenseCodes.getIamPolicy",
      "compute.licenseCodes.list",
      "compute.licenseCodes.setIamPolicy",
      "compute.licenseCodes.update",
      "compute.licenseCodes.use",
      "compute.licenses.create",
      "compute.licenses.delete",
      "compute.licenses.get",
      "compute.licenses.getIamPolicy",
      "compute.licenses.list",
      "compute.licenses.setIamPolicy",
      "compute.machineImages.create",
      "compute.machineImages.delete",
      "compute.machineImages.get",
      "compute.machineImages.getIamPolicy",
      "compute.machineImages.list",
      "compute.machineImages.setIamPolicy",
      "compute.machineImages.useReadOnly",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.maintenancePolicies.create",
      "compute.maintenancePolicies.delete",
      "compute.maintenancePolicies.get",
      "compute.maintenancePolicies.getIamPolicy",
      "compute.maintenancePolicies.list",
      "compute.maintenancePolicies.setIamPolicy",
      "compute.maintenancePolicies.use",
      "compute.networkAttachments.create",
      "compute.networkAttachments.delete",
      "compute.networkAttachments.get",
      "compute.networkAttachments.getIamPolicy",
      "compute.networkAttachments.list",
      "compute.networkAttachments.setIamPolicy",
      "compute.networkEdgeSecurityServices.create",
      "compute.networkEdgeSecurityServices.delete",
      "compute.networkEdgeSecurityServices.get",
      "compute.networkEdgeSecurityServices.list",
      "compute.networkEdgeSecurityServices.update",
      "compute.networkEndpointGroups.attachNetworkEndpoints",
      "compute.networkEndpointGroups.create",
      "compute.networkEndpointGroups.createTagBinding",
      "compute.networkEndpointGroups.delete",
      "compute.networkEndpointGroups.deleteTagBinding",
      "compute.networkEndpointGroups.detachNetworkEndpoints",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.getIamPolicy",
      "compute.networkEndpointGroups.list",
      "compute.networkEndpointGroups.listEffectiveTags",
      "compute.networkEndpointGroups.listTagBindings",
      "compute.networkEndpointGroups.setIamPolicy",
      "compute.networkEndpointGroups.use",
      "compute.networks.access",
      "compute.networks.addPeering",
      "compute.networks.create",
      "compute.networks.createTagBinding",
      "compute.networks.delete",
      "compute.networks.deleteTagBinding",
      "compute.networks.get",
      "compute.networks.getEffectiveFirewalls",
      "compute.networks.getRegionEffectiveFirewalls",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listPeeringRoutes",
      "compute.networks.listTagBindings",
      "compute.networks.mirror",
      "compute.networks.removePeering",
      "compute.networks.setFirewallPolicy",
      "compute.networks.switchToCustomMode",
      "compute.networks.update",
      "compute.networks.updatePeering",
      "compute.networks.updatePolicy",
      "compute.networks.use",
      "compute.networks.useExternalIp",
      "compute.nodeGroups.addNodes",
      "compute.nodeGroups.create",
      "compute.nodeGroups.delete",
      "compute.nodeGroups.deleteNodes",
      "compute.nodeGroups.get",
      "compute.nodeGroups.getIamPolicy",
      "compute.nodeGroups.list",
      "compute.nodeGroups.setIamPolicy",
      "compute.nodeGroups.setNodeTemplate",
      "compute.nodeGroups.simulateMaintenanceEvent",
      "compute.nodeGroups.update",
      "compute.nodeTemplates.create",
      "compute.nodeTemplates.delete",
      "compute.nodeTemplates.get",
      "compute.nodeTemplates.getIamPolicy",
      "compute.nodeTemplates.list",
      "compute.nodeTemplates.setIamPolicy",
      "compute.nodeTypes.get",
      "compute.nodeTypes.list",
      "compute.organizations.administerXpn",
      "compute.organizations.disableXpnHost",
      "compute.organizations.disableXpnResource",
      "compute.organizations.enableXpnHost",
      "compute.organizations.enableXpnResource",
      "compute.organizations.listAssociations",
      "compute.organizations.setFirewallPolicy",
      "compute.organizations.setSecurityPolicy",
      "compute.oslogin.updateExternalUser",
      "compute.packetMirrorings.create",
      "compute.packetMirrorings.delete",
      "compute.packetMirrorings.get",
      "compute.packetMirrorings.list",
      "compute.packetMirrorings.update",
      "compute.projects.get",
      "compute.projects.setCommonInstanceMetadata",
      "compute.projects.setDefaultNetworkTier",
      "compute.projects.setDefaultServiceAccount",
      "compute.projects.setUsageExportBucket",
      "compute.publicAdvertisedPrefixes.create",
      "compute.publicAdvertisedPrefixes.delete",
      "compute.publicAdvertisedPrefixes.get",
      "compute.publicAdvertisedPrefixes.list",
      "compute.publicAdvertisedPrefixes.update",
      "compute.publicAdvertisedPrefixes.updatePolicy",
      "compute.publicAdvertisedPrefixes.use",
      "compute.publicDelegatedPrefixes.create",
      "compute.publicDelegatedPrefixes.delete",
      "compute.publicDelegatedPrefixes.get",
      "compute.publicDelegatedPrefixes.list",
      "compute.publicDelegatedPrefixes.update",
      "compute.publicDelegatedPrefixes.updatePolicy",
      "compute.publicDelegatedPrefixes.use",
      "compute.regionBackendServices.create",
      "compute.regionBackendServices.createTagBinding",
      "compute.regionBackendServices.delete",
      "compute.regionBackendServices.deleteTagBinding",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.getIamPolicy",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionBackendServices.setIamPolicy",
      "compute.regionBackendServices.setSecurityPolicy",
      "compute.regionBackendServices.update",
      "compute.regionBackendServices.use",
      "compute.regionFirewallPolicies.cloneRules",
      "compute.regionFirewallPolicies.create",
      "compute.regionFirewallPolicies.createTagBinding",
      "compute.regionFirewallPolicies.delete",
      "compute.regionFirewallPolicies.deleteTagBinding",
      "compute.regionFirewallPolicies.get",
      "compute.regionFirewallPolicies.getIamPolicy",
      "compute.regionFirewallPolicies.list",
      "compute.regionFirewallPolicies.listEffectiveTags",
      "compute.regionFirewallPolicies.listTagBindings",
      "compute.regionFirewallPolicies.setIamPolicy",
      "compute.regionFirewallPolicies.update",
      "compute.regionFirewallPolicies.use",
      "compute.regionHealthCheckServices.create",
      "compute.regionHealthCheckServices.delete",
      "compute.regionHealthCheckServices.get",
      "compute.regionHealthCheckServices.list",
      "compute.regionHealthCheckServices.update",
      "compute.regionHealthCheckServices.use",
      "compute.regionHealthChecks.create",
      "compute.regionHealthChecks.createTagBinding",
      "compute.regionHealthChecks.delete",
      "compute.regionHealthChecks.deleteTagBinding",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionHealthChecks.update",
      "compute.regionHealthChecks.use",
      "compute.regionHealthChecks.useReadOnly",
      "compute.regionNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.create",
      "compute.regionNetworkEndpointGroups.createTagBinding",
      "compute.regionNetworkEndpointGroups.delete",
      "compute.regionNetworkEndpointGroups.deleteTagBinding",
      "compute.regionNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionNetworkEndpointGroups.listEffectiveTags",
      "compute.regionNetworkEndpointGroups.listTagBindings",
      "compute.regionNetworkEndpointGroups.use",
      "compute.regionNotificationEndpoints.create",
      "compute.regionNotificationEndpoints.delete",
      "compute.regionNotificationEndpoints.get",
      "compute.regionNotificationEndpoints.list",
      "compute.regionNotificationEndpoints.update",
      "compute.regionNotificationEndpoints.use",
      "compute.regionOperations.delete",
      "compute.regionOperations.get",
      "compute.regionOperations.getIamPolicy",
      "compute.regionOperations.list",
      "compute.regionOperations.setIamPolicy",
      "compute.regionSecurityPolicies.create",
      "compute.regionSecurityPolicies.createTagBinding",
      "compute.regionSecurityPolicies.delete",
      "compute.regionSecurityPolicies.deleteTagBinding",
      "compute.regionSecurityPolicies.get",
      "compute.regionSecurityPolicies.list",
      "compute.regionSecurityPolicies.listEffectiveTags",
      "compute.regionSecurityPolicies.listTagBindings",
      "compute.regionSecurityPolicies.update",
      "compute.regionSecurityPolicies.use",
      "compute.regionSslCertificates.create",
      "compute.regionSslCertificates.createTagBinding",
      "compute.regionSslCertificates.delete",
      "compute.regionSslCertificates.deleteTagBinding",
      "compute.regionSslCertificates.get",
      "compute.regionSslCertificates.list",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionSslPolicies.create",
      "compute.regionSslPolicies.delete",
      "compute.regionSslPolicies.get",
      "compute.regionSslPolicies.list",
      "compute.regionSslPolicies.listAvailableFeatures",
      "compute.regionSslPolicies.update",
      "compute.regionSslPolicies.use",
      "compute.regionTargetHttpProxies.create",
      "compute.regionTargetHttpProxies.createTagBinding",
      "compute.regionTargetHttpProxies.delete",
      "compute.regionTargetHttpProxies.deleteTagBinding",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpProxies.setUrlMap",
      "compute.regionTargetHttpProxies.update",
      "compute.regionTargetHttpProxies.use",
      "compute.regionTargetHttpsProxies.create",
      "compute.regionTargetHttpsProxies.createTagBinding",
      "compute.regionTargetHttpsProxies.delete",
      "compute.regionTargetHttpsProxies.deleteTagBinding",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.setSslCertificates",
      "compute.regionTargetHttpsProxies.setUrlMap",
      "compute.regionTargetHttpsProxies.update",
      "compute.regionTargetHttpsProxies.use",
      "compute.regionTargetTcpProxies.create",
      "compute.regionTargetTcpProxies.delete",
      "compute.regionTargetTcpProxies.get",
      "compute.regionTargetTcpProxies.list",
      "compute.regionTargetTcpProxies.use",
      "compute.regionUrlMaps.create",
      "compute.regionUrlMaps.createTagBinding",
      "compute.regionUrlMaps.delete",
      "compute.regionUrlMaps.deleteTagBinding",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.invalidateCache",
      "compute.regionUrlMaps.list",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.regionUrlMaps.update",
      "compute.regionUrlMaps.use",
      "compute.regionUrlMaps.validate",
      "compute.regions.get",
      "compute.regions.list",
      "compute.reservations.create",
      "compute.reservations.delete",
      "compute.reservations.get",
      "compute.reservations.list",
      "compute.reservations.resize",
      "compute.reservations.update",
      "compute.resourcePolicies.create",
      "compute.resourcePolicies.delete",
      "compute.resourcePolicies.get",
      "compute.resourcePolicies.getIamPolicy",
      "compute.resourcePolicies.list",
      "compute.resourcePolicies.setIamPolicy",
      "compute.resourcePolicies.update",
      "compute.resourcePolicies.use",
      "compute.resourcePolicies.useReadOnly",
      "compute.routers.create",
      "compute.routers.delete",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routers.update",
      "compute.routers.use",
      "compute.routes.create",
      "compute.routes.createTagBinding",
      "compute.routes.delete",
      "compute.routes.deleteTagBinding",
      "compute.routes.get",
      "compute.routes.list",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.securityPolicies.addAssociation",
      "compute.securityPolicies.copyRules",
      "compute.securityPolicies.create",
      "compute.securityPolicies.createTagBinding",
      "compute.securityPolicies.delete",
      "compute.securityPolicies.deleteTagBinding",
      "compute.securityPolicies.get",
      "compute.securityPolicies.getIamPolicy",
      "compute.securityPolicies.list",
      "compute.securityPolicies.listEffectiveTags",
      "compute.securityPolicies.listTagBindings",
      "compute.securityPolicies.move",
      "compute.securityPolicies.removeAssociation",
      "compute.securityPolicies.setIamPolicy",
      "compute.securityPolicies.setLabels",
      "compute.securityPolicies.update",
      "compute.securityPolicies.use",
      "compute.serviceAttachments.create",
      "compute.serviceAttachments.delete",
      "compute.serviceAttachments.get",
      "compute.serviceAttachments.getIamPolicy",
      "compute.serviceAttachments.list",
      "compute.serviceAttachments.setIamPolicy",
      "compute.serviceAttachments.update",
      "compute.serviceAttachments.use",
      "compute.snapshots.create",
      "compute.snapshots.createTagBinding",
      "compute.snapshots.delete",
      "compute.snapshots.deleteTagBinding",
      "compute.snapshots.get",
      "compute.snapshots.getIamPolicy",
      "compute.snapshots.list",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.snapshots.setIamPolicy",
      "compute.snapshots.setLabels",
      "compute.snapshots.useReadOnly",
      "compute.sslCertificates.create",
      "compute.sslCertificates.createTagBinding",
      "compute.sslCertificates.delete",
      "compute.sslCertificates.deleteTagBinding",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.create",
      "compute.sslPolicies.createTagBinding",
      "compute.sslPolicies.delete",
      "compute.sslPolicies.deleteTagBinding",
      "compute.sslPolicies.get",
      "compute.sslPolicies.list",
      "compute.sslPolicies.listAvailableFeatures",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.sslPolicies.update",
      "compute.sslPolicies.use",
      "compute.subnetworks.create",
      "compute.subnetworks.createTagBinding",
      "compute.subnetworks.delete",
      "compute.subnetworks.deleteTagBinding",
      "compute.subnetworks.expandIpCidrRange",
      "compute.subnetworks.get",
      "compute.subnetworks.getIamPolicy",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.subnetworks.mirror",
      "compute.subnetworks.setIamPolicy",
      "compute.subnetworks.setPrivateIpGoogleAccess",
      "compute.subnetworks.update",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.targetGrpcProxies.create",
      "compute.targetGrpcProxies.delete",
      "compute.targetGrpcProxies.get",
      "compute.targetGrpcProxies.list",
      "compute.targetGrpcProxies.update",
      "compute.targetGrpcProxies.use",
      "compute.targetHttpProxies.create",
      "compute.targetHttpProxies.createTagBinding",
      "compute.targetHttpProxies.delete",
      "compute.targetHttpProxies.deleteTagBinding",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpProxies.setUrlMap",
      "compute.targetHttpProxies.update",
      "compute.targetHttpProxies.use",
      "compute.targetHttpsProxies.create",
      "compute.targetHttpsProxies.createTagBinding",
      "compute.targetHttpsProxies.delete",
      "compute.targetHttpsProxies.deleteTagBinding",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetHttpsProxies.setCertificateMap",
      "compute.targetHttpsProxies.setQuicOverride",
      "compute.targetHttpsProxies.setSslCertificates",
      "compute.targetHttpsProxies.setSslPolicy",
      "compute.targetHttpsProxies.setUrlMap",
      "compute.targetHttpsProxies.update",
      "compute.targetHttpsProxies.use",
      "compute.targetInstances.create",
      "compute.targetInstances.createTagBinding",
      "compute.targetInstances.delete",
      "compute.targetInstances.deleteTagBinding",
      "compute.targetInstances.get",
      "compute.targetInstances.list",
      "compute.targetInstances.listEffectiveTags",
      "compute.targetInstances.listTagBindings",
      "compute.targetInstances.setSecurityPolicy",
      "compute.targetInstances.use",
      "compute.targetPools.addHealthCheck",
      "compute.targetPools.addInstance",
      "compute.targetPools.create",
      "compute.targetPools.createTagBinding",
      "compute.targetPools.delete",
      "compute.targetPools.deleteTagBinding",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.targetPools.removeHealthCheck",
      "compute.targetPools.removeInstance",
      "compute.targetPools.setSecurityPolicy",
      "compute.targetPools.update",
      "compute.targetPools.use",
      "compute.targetSslProxies.create",
      "compute.targetSslProxies.createTagBinding",
      "compute.targetSslProxies.delete",
      "compute.targetSslProxies.deleteTagBinding",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetSslProxies.listEffectiveTags",
      "compute.targetSslProxies.listTagBindings",
      "compute.targetSslProxies.setBackendService",
      "compute.targetSslProxies.setCertificateMap",
      "compute.targetSslProxies.setProxyHeader",
      "compute.targetSslProxies.setSslCertificates",
      "compute.targetSslProxies.setSslPolicy",
      "compute.targetSslProxies.update",
      "compute.targetSslProxies.use",
      "compute.targetTcpProxies.create",
      "compute.targetTcpProxies.createTagBinding",
      "compute.targetTcpProxies.delete",
      "compute.targetTcpProxies.deleteTagBinding",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.targetTcpProxies.update",
      "compute.targetTcpProxies.use",
      "compute.targetVpnGateways.create",
      "compute.targetVpnGateways.delete",
      "compute.targetVpnGateways.get",
      "compute.targetVpnGateways.list",
      "compute.targetVpnGateways.setLabels",
      "compute.targetVpnGateways.use",
      "compute.urlMaps.create",
      "compute.urlMaps.createTagBinding",
      "compute.urlMaps.delete",
      "compute.urlMaps.deleteTagBinding",
      "compute.urlMaps.get",
      "compute.urlMaps.invalidateCache",
      "compute.urlMaps.list",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "compute.urlMaps.update",
      "compute.urlMaps.use",
      "compute.urlMaps.validate",
      "compute.vpnGateways.create",
      "compute.vpnGateways.delete",
      "compute.vpnGateways.get",
      "compute.vpnGateways.list",
      "compute.vpnGateways.setLabels",
      "compute.vpnGateways.use",
      "compute.vpnTunnels.create",
      "compute.vpnTunnels.delete",
      "compute.vpnTunnels.get",
      "compute.vpnTunnels.list",
      "compute.vpnTunnels.setLabels",
      "compute.zoneOperations.delete",
      "compute.zoneOperations.get",
      "compute.zoneOperations.getIamPolicy",
      "compute.zoneOperations.list",
      "compute.zoneOperations.setIamPolicy",
      "compute.zones.get",
      "compute.zones.list",
      "notebooks.environments.create",
      "notebooks.environments.delete",
      "notebooks.environments.get",
      "notebooks.environments.getIamPolicy",
      "notebooks.environments.list",
      "notebooks.environments.setIamPolicy",
      "notebooks.executions.create",
      "notebooks.executions.delete",
      "notebooks.executions.get",
      "notebooks.executions.getIamPolicy",
      "notebooks.executions.list",
      "notebooks.executions.setIamPolicy",
      "notebooks.instances.checkUpgradability",
      "notebooks.instances.create",
      "notebooks.instances.delete",
      "notebooks.instances.diagnose",
      "notebooks.instances.get",
      "notebooks.instances.getHealth",
      "notebooks.instances.getIamPolicy",
      "notebooks.instances.list",
      "notebooks.instances.reset",
      "notebooks.instances.setAccelerator",
      "notebooks.instances.setIamPolicy",
      "notebooks.instances.setLabels",
      "notebooks.instances.setMachineType",
      "notebooks.instances.start",
      "notebooks.instances.stop",
      "notebooks.instances.update",
      "notebooks.instances.updateConfig",
      "notebooks.instances.updateShieldInstanceConfig",
      "notebooks.instances.upgrade",
      "notebooks.instances.use",
      "notebooks.locations.get",
      "notebooks.locations.list",
      "notebooks.operations.cancel",
      "notebooks.operations.delete",
      "notebooks.operations.get",
      "notebooks.operations.list",
      "notebooks.runtimes.create",
      "notebooks.runtimes.delete",
      "notebooks.runtimes.diagnose",
      "notebooks.runtimes.get",
      "notebooks.runtimes.getIamPolicy",
      "notebooks.runtimes.list",
      "notebooks.runtimes.reset",
      "notebooks.runtimes.setIamPolicy",
      "notebooks.runtimes.start",
      "notebooks.runtimes.stop",
      "notebooks.runtimes.switch",
      "notebooks.runtimes.update",
      "notebooks.runtimes.upgrade",
      "notebooks.schedules.create",
      "notebooks.schedules.delete",
      "notebooks.schedules.get",
      "notebooks.schedules.getIamPolicy",
      "notebooks.schedules.list",
      "notebooks.schedules.setIamPolicy",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/notebooks.legacyViewer",
    "title": "Notebooks Legacy Viewer",
    "description": "Read-only access to Notebooks all resources through compute API.",
    "includedPermissions": [
      "compute.acceleratorTypes.get",
      "compute.acceleratorTypes.list",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.backendBuckets.get",
      "compute.backendBuckets.getIamPolicy",
      "compute.backendBuckets.list",
      "compute.backendBuckets.listEffectiveTags",
      "compute.backendBuckets.listTagBindings",
      "compute.backendServices.get",
      "compute.backendServices.getIamPolicy",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.commitments.get",
      "compute.commitments.list",
      "compute.diskTypes.get",
      "compute.diskTypes.list",
      "compute.disks.get",
      "compute.disks.getIamPolicy",
      "compute.disks.list",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.list",
      "compute.firewallPolicies.get",
      "compute.firewallPolicies.getIamPolicy",
      "compute.firewallPolicies.list",
      "compute.firewallPolicies.listEffectiveTags",
      "compute.firewallPolicies.listTagBindings",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.futureReservations.get",
      "compute.futureReservations.getIamPolicy",
      "compute.futureReservations.list",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalForwardingRules.pscGet",
      "compute.globalNetworkEndpointGroups.get",
      "compute.globalNetworkEndpointGroups.list",
      "compute.globalNetworkEndpointGroups.listEffectiveTags",
      "compute.globalNetworkEndpointGroups.listTagBindings",
      "compute.globalOperations.get",
      "compute.globalOperations.getIamPolicy",
      "compute.globalOperations.list",
      "compute.globalPublicDelegatedPrefixes.get",
      "compute.globalPublicDelegatedPrefixes.list",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.images.get",
      "compute.images.getFromFamily",
      "compute.images.getIamPolicy",
      "compute.images.list",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instanceTemplates.get",
      "compute.instanceTemplates.getIamPolicy",
      "compute.instanceTemplates.list",
      "compute.instances.get",
      "compute.instances.getEffectiveFirewalls",
      "compute.instances.getGuestAttributes",
      "compute.instances.getIamPolicy",
      "compute.instances.getScreenshot",
      "compute.instances.getSerialPortOutput",
      "compute.instances.getShieldedInstanceIdentity",
      "compute.instances.getShieldedVmIdentity",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listReferrers",
      "compute.instances.listTagBindings",
      "compute.instantSnapshots.get",
      "compute.instantSnapshots.getIamPolicy",
      "compute.instantSnapshots.list",
      "compute.interconnectAttachments.get",
      "compute.interconnectAttachments.list",
      "compute.interconnectLocations.get",
      "compute.interconnectLocations.list",
      "compute.interconnectRemoteLocations.get",
      "compute.interconnectRemoteLocations.list",
      "compute.interconnects.get",
      "compute.interconnects.list",
      "compute.licenseCodes.get",
      "compute.licenseCodes.getIamPolicy",
      "compute.licenseCodes.list",
      "compute.licenses.get",
      "compute.licenses.getIamPolicy",
      "compute.licenses.list",
      "compute.machineImages.get",
      "compute.machineImages.getIamPolicy",
      "compute.machineImages.list",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.maintenancePolicies.get",
      "compute.maintenancePolicies.getIamPolicy",
      "compute.maintenancePolicies.list",
      "compute.networkAttachments.get",
      "compute.networkAttachments.getIamPolicy",
      "compute.networkAttachments.list",
      "compute.networkEdgeSecurityServices.get",
      "compute.networkEdgeSecurityServices.list",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.getIamPolicy",
      "compute.networkEndpointGroups.list",
      "compute.networkEndpointGroups.listEffectiveTags",
      "compute.networkEndpointGroups.listTagBindings",
      "compute.networks.get",
      "compute.networks.getEffectiveFirewalls",
      "compute.networks.getRegionEffectiveFirewalls",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listPeeringRoutes",
      "compute.networks.listTagBindings",
      "compute.nodeGroups.get",
      "compute.nodeGroups.getIamPolicy",
      "compute.nodeGroups.list",
      "compute.nodeTemplates.get",
      "compute.nodeTemplates.getIamPolicy",
      "compute.nodeTemplates.list",
      "compute.nodeTypes.get",
      "compute.nodeTypes.list",
      "compute.organizations.listAssociations",
      "compute.packetMirrorings.get",
      "compute.packetMirrorings.list",
      "compute.projects.get",
      "compute.publicAdvertisedPrefixes.get",
      "compute.publicAdvertisedPrefixes.list",
      "compute.publicDelegatedPrefixes.get",
      "compute.publicDelegatedPrefixes.list",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.getIamPolicy",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionFirewallPolicies.get",
      "compute.regionFirewallPolicies.getIamPolicy",
      "compute.regionFirewallPolicies.list",
      "compute.regionFirewallPolicies.listEffectiveTags",
      "compute.regionFirewallPolicies.listTagBindings",
      "compute.regionHealthCheckServices.get",
      "compute.regionHealthCheckServices.list",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionNetworkEndpointGroups.listEffectiveTags",
      "compute.regionNetworkEndpointGroups.listTagBindings",
      "compute.regionNotificationEndpoints.get",
      "compute.regionNotificationEndpoints.list",
      "compute.regionOperations.get",
      "compute.regionOperations.getIamPolicy",
      "compute.regionOperations.list",
      "compute.regionSecurityPolicies.get",
      "compute.regionSecurityPolicies.list",
      "compute.regionSecurityPolicies.listEffectiveTags",
      "compute.regionSecurityPolicies.listTagBindings",
      "compute.regionSslCertificates.get",
      "compute.regionSslCertificates.list",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionSslPolicies.get",
      "compute.regionSslPolicies.list",
      "compute.regionSslPolicies.listAvailableFeatures",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionTargetTcpProxies.get",
      "compute.regionTargetTcpProxies.list",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.list",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.regionUrlMaps.validate",
      "compute.regions.get",
      "compute.regions.list",
      "compute.reservations.get",
      "compute.reservations.list",
      "compute.resourcePolicies.get",
      "compute.resourcePolicies.getIamPolicy",
      "compute.resourcePolicies.list",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routes.get",
      "compute.routes.list",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.securityPolicies.get",
      "compute.securityPolicies.getIamPolicy",
      "compute.securityPolicies.list",
      "compute.securityPolicies.listEffectiveTags",
      "compute.securityPolicies.listTagBindings",
      "compute.serviceAttachments.get",
      "compute.serviceAttachments.getIamPolicy",
      "compute.serviceAttachments.list",
      "compute.snapshots.get",
      "compute.snapshots.getIamPolicy",
      "compute.snapshots.list",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.get",
      "compute.sslPolicies.list",
      "compute.sslPolicies.listAvailableFeatures",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.subnetworks.get",
      "compute.subnetworks.getIamPolicy",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.targetGrpcProxies.get",
      "compute.targetGrpcProxies.list",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetInstances.get",
      "compute.targetInstances.list",
      "compute.targetInstances.listEffectiveTags",
      "compute.targetInstances.listTagBindings",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetSslProxies.listEffectiveTags",
      "compute.targetSslProxies.listTagBindings",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.targetVpnGateways.get",
      "compute.targetVpnGateways.list",
      "compute.urlMaps.get",
      "compute.urlMaps.list",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "compute.urlMaps.validate",
      "compute.vpnGateways.get",
      "compute.vpnGateways.list",
      "compute.vpnTunnels.get",
      "compute.vpnTunnels.list",
      "compute.zoneOperations.get",
      "compute.zoneOperations.getIamPolicy",
      "compute.zoneOperations.list",
      "compute.zones.get",
      "compute.zones.list",
      "notebooks.environments.get",
      "notebooks.environments.getIamPolicy",
      "notebooks.environments.list",
      "notebooks.executions.get",
      "notebooks.executions.getIamPolicy",
      "notebooks.executions.list",
      "notebooks.instances.checkUpgradability",
      "notebooks.instances.get",
      "notebooks.instances.getHealth",
      "notebooks.instances.getIamPolicy",
      "notebooks.instances.list",
      "notebooks.locations.get",
      "notebooks.locations.list",
      "notebooks.operations.get",
      "notebooks.operations.list",
      "notebooks.runtimes.get",
      "notebooks.runtimes.getIamPolicy",
      "notebooks.runtimes.list",
      "notebooks.schedules.get",
      "notebooks.schedules.getIamPolicy",
      "notebooks.schedules.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/notebooks.runner",
    "title": "Notebooks Runner",
    "description": "Restricted access for running scheduled Notebooks.",
    "includedPermissions": [
      "compute.acceleratorTypes.get",
      "compute.acceleratorTypes.list",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.backendBuckets.get",
      "compute.backendBuckets.getIamPolicy",
      "compute.backendBuckets.list",
      "compute.backendBuckets.listEffectiveTags",
      "compute.backendBuckets.listTagBindings",
      "compute.backendServices.get",
      "compute.backendServices.getIamPolicy",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.commitments.get",
      "compute.commitments.list",
      "compute.diskTypes.get",
      "compute.diskTypes.list",
      "compute.disks.get",
      "compute.disks.getIamPolicy",
      "compute.disks.list",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.list",
      "compute.firewallPolicies.get",
      "compute.firewallPolicies.getIamPolicy",
      "compute.firewallPolicies.list",
      "compute.firewallPolicies.listEffectiveTags",
      "compute.firewallPolicies.listTagBindings",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.futureReservations.get",
      "compute.futureReservations.getIamPolicy",
      "compute.futureReservations.list",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalForwardingRules.pscGet",
      "compute.globalNetworkEndpointGroups.get",
      "compute.globalNetworkEndpointGroups.list",
      "compute.globalNetworkEndpointGroups.listEffectiveTags",
      "compute.globalNetworkEndpointGroups.listTagBindings",
      "compute.globalOperations.get",
      "compute.globalOperations.getIamPolicy",
      "compute.globalOperations.list",
      "compute.globalPublicDelegatedPrefixes.get",
      "compute.globalPublicDelegatedPrefixes.list",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.images.get",
      "compute.images.getFromFamily",
      "compute.images.getIamPolicy",
      "compute.images.list",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instanceTemplates.get",
      "compute.instanceTemplates.getIamPolicy",
      "compute.instanceTemplates.list",
      "compute.instances.get",
      "compute.instances.getEffectiveFirewalls",
      "compute.instances.getGuestAttributes",
      "compute.instances.getIamPolicy",
      "compute.instances.getScreenshot",
      "compute.instances.getSerialPortOutput",
      "compute.instances.getShieldedInstanceIdentity",
      "compute.instances.getShieldedVmIdentity",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listReferrers",
      "compute.instances.listTagBindings",
      "compute.instantSnapshots.get",
      "compute.instantSnapshots.getIamPolicy",
      "compute.instantSnapshots.list",
      "compute.interconnectAttachments.get",
      "compute.interconnectAttachments.list",
      "compute.interconnectLocations.get",
      "compute.interconnectLocations.list",
      "compute.interconnectRemoteLocations.get",
      "compute.interconnectRemoteLocations.list",
      "compute.interconnects.get",
      "compute.interconnects.list",
      "compute.licenseCodes.get",
      "compute.licenseCodes.getIamPolicy",
      "compute.licenseCodes.list",
      "compute.licenses.get",
      "compute.licenses.getIamPolicy",
      "compute.licenses.list",
      "compute.machineImages.get",
      "compute.machineImages.getIamPolicy",
      "compute.machineImages.list",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.maintenancePolicies.get",
      "compute.maintenancePolicies.getIamPolicy",
      "compute.maintenancePolicies.list",
      "compute.networkAttachments.get",
      "compute.networkAttachments.getIamPolicy",
      "compute.networkAttachments.list",
      "compute.networkEdgeSecurityServices.get",
      "compute.networkEdgeSecurityServices.list",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.getIamPolicy",
      "compute.networkEndpointGroups.list",
      "compute.networkEndpointGroups.listEffectiveTags",
      "compute.networkEndpointGroups.listTagBindings",
      "compute.networks.get",
      "compute.networks.getEffectiveFirewalls",
      "compute.networks.getRegionEffectiveFirewalls",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listPeeringRoutes",
      "compute.networks.listTagBindings",
      "compute.nodeGroups.get",
      "compute.nodeGroups.getIamPolicy",
      "compute.nodeGroups.list",
      "compute.nodeTemplates.get",
      "compute.nodeTemplates.getIamPolicy",
      "compute.nodeTemplates.list",
      "compute.nodeTypes.get",
      "compute.nodeTypes.list",
      "compute.organizations.listAssociations",
      "compute.packetMirrorings.get",
      "compute.packetMirrorings.list",
      "compute.projects.get",
      "compute.publicAdvertisedPrefixes.get",
      "compute.publicAdvertisedPrefixes.list",
      "compute.publicDelegatedPrefixes.get",
      "compute.publicDelegatedPrefixes.list",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.getIamPolicy",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionFirewallPolicies.get",
      "compute.regionFirewallPolicies.getIamPolicy",
      "compute.regionFirewallPolicies.list",
      "compute.regionFirewallPolicies.listEffectiveTags",
      "compute.regionFirewallPolicies.listTagBindings",
      "compute.regionHealthCheckServices.get",
      "compute.regionHealthCheckServices.list",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionNetworkEndpointGroups.listEffectiveTags",
      "compute.regionNetworkEndpointGroups.listTagBindings",
      "compute.regionNotificationEndpoints.get",
      "compute.regionNotificationEndpoints.list",
      "compute.regionOperations.get",
      "compute.regionOperations.getIamPolicy",
      "compute.regionOperations.list",
      "compute.regionSecurityPolicies.get",
      "compute.regionSecurityPolicies.list",
      "compute.regionSecurityPolicies.listEffectiveTags",
      "compute.regionSecurityPolicies.listTagBindings",
      "compute.regionSslCertificates.get",
      "compute.regionSslCertificates.list",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionSslPolicies.get",
      "compute.regionSslPolicies.list",
      "compute.regionSslPolicies.listAvailableFeatures",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionTargetTcpProxies.get",
      "compute.regionTargetTcpProxies.list",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.list",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.regionUrlMaps.validate",
      "compute.regions.get",
      "compute.regions.list",
      "compute.reservations.get",
      "compute.reservations.list",
      "compute.resourcePolicies.get",
      "compute.resourcePolicies.getIamPolicy",
      "compute.resourcePolicies.list",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routes.get",
      "compute.routes.list",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.securityPolicies.get",
      "compute.securityPolicies.getIamPolicy",
      "compute.securityPolicies.list",
      "compute.securityPolicies.listEffectiveTags",
      "compute.securityPolicies.listTagBindings",
      "compute.serviceAttachments.get",
      "compute.serviceAttachments.getIamPolicy",
      "compute.serviceAttachments.list",
      "compute.snapshots.get",
      "compute.snapshots.getIamPolicy",
      "compute.snapshots.list",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.get",
      "compute.sslPolicies.list",
      "compute.sslPolicies.listAvailableFeatures",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.subnetworks.get",
      "compute.subnetworks.getIamPolicy",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.targetGrpcProxies.get",
      "compute.targetGrpcProxies.list",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetInstances.get",
      "compute.targetInstances.list",
      "compute.targetInstances.listEffectiveTags",
      "compute.targetInstances.listTagBindings",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetSslProxies.listEffectiveTags",
      "compute.targetSslProxies.listTagBindings",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.targetVpnGateways.get",
      "compute.targetVpnGateways.list",
      "compute.urlMaps.get",
      "compute.urlMaps.list",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "compute.urlMaps.validate",
      "compute.vpnGateways.get",
      "compute.vpnGateways.list",
      "compute.vpnTunnels.get",
      "compute.vpnTunnels.list",
      "compute.zoneOperations.get",
      "compute.zoneOperations.getIamPolicy",
      "compute.zoneOperations.list",
      "compute.zones.get",
      "compute.zones.list",
      "notebooks.environments.get",
      "notebooks.environments.getIamPolicy",
      "notebooks.environments.list",
      "notebooks.executions.create",
      "notebooks.executions.get",
      "notebooks.executions.getIamPolicy",
      "notebooks.executions.list",
      "notebooks.instances.checkUpgradability",
      "notebooks.instances.create",
      "notebooks.instances.get",
      "notebooks.instances.getHealth",
      "notebooks.instances.getIamPolicy",
      "notebooks.instances.list",
      "notebooks.locations.get",
      "notebooks.locations.list",
      "notebooks.operations.get",
      "notebooks.operations.list",
      "notebooks.runtimes.create",
      "notebooks.runtimes.get",
      "notebooks.runtimes.getIamPolicy",
      "notebooks.runtimes.list",
      "notebooks.schedules.create",
      "notebooks.schedules.get",
      "notebooks.schedules.getIamPolicy",
      "notebooks.schedules.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/notebooks.serviceAgent",
    "title": "AI Platform Notebooks Service Agent",
    "description": "Provide access for notebooks service agent to manage notebook instances in user projects",
    "includedPermissions": [
      "aiplatform.customJobs.cancel",
      "aiplatform.customJobs.create",
      "aiplatform.customJobs.get",
      "aiplatform.customJobs.list",
      "compute.acceleratorTypes.get",
      "compute.acceleratorTypes.list",
      "compute.addresses.createInternal",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.addresses.use",
      "compute.addresses.useInternal",
      "compute.autoscalers.create",
      "compute.autoscalers.delete",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.autoscalers.update",
      "compute.backendBuckets.get",
      "compute.backendBuckets.getIamPolicy",
      "compute.backendBuckets.list",
      "compute.backendBuckets.listEffectiveTags",
      "compute.backendBuckets.listTagBindings",
      "compute.backendServices.get",
      "compute.backendServices.getIamPolicy",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.commitments.get",
      "compute.commitments.list",
      "compute.diskTypes.get",
      "compute.diskTypes.list",
      "compute.disks.addResourcePolicies",
      "compute.disks.create",
      "compute.disks.createSnapshot",
      "compute.disks.createTagBinding",
      "compute.disks.delete",
      "compute.disks.deleteTagBinding",
      "compute.disks.get",
      "compute.disks.getIamPolicy",
      "compute.disks.list",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.disks.removeResourcePolicies",
      "compute.disks.resize",
      "compute.disks.setIamPolicy",
      "compute.disks.setLabels",
      "compute.disks.startAsyncReplication",
      "compute.disks.stopAsyncReplication",
      "compute.disks.stopGroupAsyncReplication",
      "compute.disks.update",
      "compute.disks.use",
      "compute.disks.useReadOnly",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.list",
      "compute.firewallPolicies.get",
      "compute.firewallPolicies.getIamPolicy",
      "compute.firewallPolicies.list",
      "compute.firewallPolicies.listEffectiveTags",
      "compute.firewallPolicies.listTagBindings",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.futureReservations.get",
      "compute.futureReservations.getIamPolicy",
      "compute.futureReservations.list",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalAddresses.use",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalForwardingRules.pscGet",
      "compute.globalNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.create",
      "compute.globalNetworkEndpointGroups.createTagBinding",
      "compute.globalNetworkEndpointGroups.delete",
      "compute.globalNetworkEndpointGroups.deleteTagBinding",
      "compute.globalNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.get",
      "compute.globalNetworkEndpointGroups.list",
      "compute.globalNetworkEndpointGroups.listEffectiveTags",
      "compute.globalNetworkEndpointGroups.listTagBindings",
      "compute.globalNetworkEndpointGroups.use",
      "compute.globalOperations.get",
      "compute.globalOperations.getIamPolicy",
      "compute.globalOperations.list",
      "compute.globalPublicDelegatedPrefixes.get",
      "compute.globalPublicDelegatedPrefixes.list",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.images.create",
      "compute.images.createTagBinding",
      "compute.images.delete",
      "compute.images.deleteTagBinding",
      "compute.images.deprecate",
      "compute.images.get",
      "compute.images.getFromFamily",
      "compute.images.getIamPolicy",
      "compute.images.list",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.images.setIamPolicy",
      "compute.images.setLabels",
      "compute.images.update",
      "compute.images.useReadOnly",
      "compute.instanceGroupManagers.create",
      "compute.instanceGroupManagers.delete",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroupManagers.update",
      "compute.instanceGroupManagers.use",
      "compute.instanceGroups.create",
      "compute.instanceGroups.delete",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instanceGroups.update",
      "compute.instanceGroups.use",
      "compute.instanceTemplates.create",
      "compute.instanceTemplates.delete",
      "compute.instanceTemplates.get",
      "compute.instanceTemplates.getIamPolicy",
      "compute.instanceTemplates.list",
      "compute.instanceTemplates.setIamPolicy",
      "compute.instanceTemplates.useReadOnly",
      "compute.instances.addAccessConfig",
      "compute.instances.addMaintenancePolicies",
      "compute.instances.addResourcePolicies",
      "compute.instances.attachDisk",
      "compute.instances.create",
      "compute.instances.createTagBinding",
      "compute.instances.delete",
      "compute.instances.deleteAccessConfig",
      "compute.instances.deleteTagBinding",
      "compute.instances.detachDisk",
      "compute.instances.get",
      "compute.instances.getEffectiveFirewalls",
      "compute.instances.getGuestAttributes",
      "compute.instances.getIamPolicy",
      "compute.instances.getScreenshot",
      "compute.instances.getSerialPortOutput",
      "compute.instances.getShieldedInstanceIdentity",
      "compute.instances.getShieldedVmIdentity",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listReferrers",
      "compute.instances.listTagBindings",
      "compute.instances.osAdminLogin",
      "compute.instances.osLogin",
      "compute.instances.removeMaintenancePolicies",
      "compute.instances.removeResourcePolicies",
      "compute.instances.reset",
      "compute.instances.resume",
      "compute.instances.sendDiagnosticInterrupt",
      "compute.instances.setDeletionProtection",
      "compute.instances.setDiskAutoDelete",
      "compute.instances.setIamPolicy",
      "compute.instances.setLabels",
      "compute.instances.setMachineResources",
      "compute.instances.setMachineType",
      "compute.instances.setMetadata",
      "compute.instances.setMinCpuPlatform",
      "compute.instances.setName",
      "compute.instances.setScheduling",
      "compute.instances.setSecurityPolicy",
      "compute.instances.setServiceAccount",
      "compute.instances.setShieldedInstanceIntegrityPolicy",
      "compute.instances.setShieldedVmIntegrityPolicy",
      "compute.instances.setTags",
      "compute.instances.simulateMaintenanceEvent",
      "compute.instances.start",
      "compute.instances.startWithEncryptionKey",
      "compute.instances.stop",
      "compute.instances.suspend",
      "compute.instances.update",
      "compute.instances.updateAccessConfig",
      "compute.instances.updateDisplayDevice",
      "compute.instances.updateNetworkInterface",
      "compute.instances.updateSecurity",
      "compute.instances.updateShieldedInstanceConfig",
      "compute.instances.updateShieldedVmConfig",
      "compute.instances.use",
      "compute.instances.useReadOnly",
      "compute.instantSnapshots.create",
      "compute.instantSnapshots.delete",
      "compute.instantSnapshots.export",
      "compute.instantSnapshots.get",
      "compute.instantSnapshots.getIamPolicy",
      "compute.instantSnapshots.list",
      "compute.instantSnapshots.setIamPolicy",
      "compute.instantSnapshots.setLabels",
      "compute.instantSnapshots.useReadOnly",
      "compute.interconnectAttachments.get",
      "compute.interconnectAttachments.list",
      "compute.interconnectLocations.get",
      "compute.interconnectLocations.list",
      "compute.interconnectRemoteLocations.get",
      "compute.interconnectRemoteLocations.list",
      "compute.interconnects.get",
      "compute.interconnects.list",
      "compute.licenseCodes.get",
      "compute.licenseCodes.getIamPolicy",
      "compute.licenseCodes.list",
      "compute.licenseCodes.setIamPolicy",
      "compute.licenseCodes.update",
      "compute.licenseCodes.use",
      "compute.licenses.create",
      "compute.licenses.delete",
      "compute.licenses.get",
      "compute.licenses.getIamPolicy",
      "compute.licenses.list",
      "compute.licenses.setIamPolicy",
      "compute.machineImages.create",
      "compute.machineImages.delete",
      "compute.machineImages.get",
      "compute.machineImages.getIamPolicy",
      "compute.machineImages.list",
      "compute.machineImages.setIamPolicy",
      "compute.machineImages.useReadOnly",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.maintenancePolicies.get",
      "compute.maintenancePolicies.getIamPolicy",
      "compute.maintenancePolicies.list",
      "compute.networkAttachments.get",
      "compute.networkAttachments.getIamPolicy",
      "compute.networkAttachments.list",
      "compute.networkEdgeSecurityServices.get",
      "compute.networkEdgeSecurityServices.list",
      "compute.networkEndpointGroups.attachNetworkEndpoints",
      "compute.networkEndpointGroups.create",
      "compute.networkEndpointGroups.createTagBinding",
      "compute.networkEndpointGroups.delete",
      "compute.networkEndpointGroups.deleteTagBinding",
      "compute.networkEndpointGroups.detachNetworkEndpoints",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.getIamPolicy",
      "compute.networkEndpointGroups.list",
      "compute.networkEndpointGroups.listEffectiveTags",
      "compute.networkEndpointGroups.listTagBindings",
      "compute.networkEndpointGroups.setIamPolicy",
      "compute.networkEndpointGroups.use",
      "compute.networks.get",
      "compute.networks.getEffectiveFirewalls",
      "compute.networks.getRegionEffectiveFirewalls",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listPeeringRoutes",
      "compute.networks.listTagBindings",
      "compute.networks.use",
      "compute.networks.useExternalIp",
      "compute.nodeGroups.get",
      "compute.nodeGroups.getIamPolicy",
      "compute.nodeGroups.list",
      "compute.nodeTemplates.get",
      "compute.nodeTemplates.getIamPolicy",
      "compute.nodeTemplates.list",
      "compute.nodeTypes.get",
      "compute.nodeTypes.list",
      "compute.organizations.listAssociations",
      "compute.packetMirrorings.get",
      "compute.packetMirrorings.list",
      "compute.projects.get",
      "compute.projects.setCommonInstanceMetadata",
      "compute.publicAdvertisedPrefixes.get",
      "compute.publicAdvertisedPrefixes.list",
      "compute.publicDelegatedPrefixes.get",
      "compute.publicDelegatedPrefixes.list",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.getIamPolicy",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionFirewallPolicies.get",
      "compute.regionFirewallPolicies.getIamPolicy",
      "compute.regionFirewallPolicies.list",
      "compute.regionFirewallPolicies.listEffectiveTags",
      "compute.regionFirewallPolicies.listTagBindings",
      "compute.regionHealthCheckServices.get",
      "compute.regionHealthCheckServices.list",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.create",
      "compute.regionNetworkEndpointGroups.createTagBinding",
      "compute.regionNetworkEndpointGroups.delete",
      "compute.regionNetworkEndpointGroups.deleteTagBinding",
      "compute.regionNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionNetworkEndpointGroups.listEffectiveTags",
      "compute.regionNetworkEndpointGroups.listTagBindings",
      "compute.regionNetworkEndpointGroups.use",
      "compute.regionNotificationEndpoints.get",
      "compute.regionNotificationEndpoints.list",
      "compute.regionOperations.get",
      "compute.regionOperations.getIamPolicy",
      "compute.regionOperations.list",
      "compute.regionSecurityPolicies.get",
      "compute.regionSecurityPolicies.list",
      "compute.regionSecurityPolicies.listEffectiveTags",
      "compute.regionSecurityPolicies.listTagBindings",
      "compute.regionSslCertificates.get",
      "compute.regionSslCertificates.list",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionSslPolicies.get",
      "compute.regionSslPolicies.list",
      "compute.regionSslPolicies.listAvailableFeatures",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionTargetTcpProxies.get",
      "compute.regionTargetTcpProxies.list",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.list",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.regionUrlMaps.validate",
      "compute.regions.get",
      "compute.regions.list",
      "compute.reservations.get",
      "compute.reservations.list",
      "compute.resourcePolicies.create",
      "compute.resourcePolicies.delete",
      "compute.resourcePolicies.get",
      "compute.resourcePolicies.getIamPolicy",
      "compute.resourcePolicies.list",
      "compute.resourcePolicies.setIamPolicy",
      "compute.resourcePolicies.update",
      "compute.resourcePolicies.use",
      "compute.resourcePolicies.useReadOnly",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routes.get",
      "compute.routes.list",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.securityPolicies.get",
      "compute.securityPolicies.getIamPolicy",
      "compute.securityPolicies.list",
      "compute.securityPolicies.listEffectiveTags",
      "compute.securityPolicies.listTagBindings",
      "compute.serviceAttachments.get",
      "compute.serviceAttachments.getIamPolicy",
      "compute.serviceAttachments.list",
      "compute.snapshots.create",
      "compute.snapshots.createTagBinding",
      "compute.snapshots.delete",
      "compute.snapshots.deleteTagBinding",
      "compute.snapshots.get",
      "compute.snapshots.getIamPolicy",
      "compute.snapshots.list",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.snapshots.setIamPolicy",
      "compute.snapshots.setLabels",
      "compute.snapshots.useReadOnly",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.get",
      "compute.sslPolicies.list",
      "compute.sslPolicies.listAvailableFeatures",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.subnetworks.get",
      "compute.subnetworks.getIamPolicy",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.targetGrpcProxies.get",
      "compute.targetGrpcProxies.list",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetInstances.get",
      "compute.targetInstances.list",
      "compute.targetInstances.listEffectiveTags",
      "compute.targetInstances.listTagBindings",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetSslProxies.listEffectiveTags",
      "compute.targetSslProxies.listTagBindings",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.targetVpnGateways.get",
      "compute.targetVpnGateways.list",
      "compute.urlMaps.get",
      "compute.urlMaps.list",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "compute.urlMaps.validate",
      "compute.vpnGateways.get",
      "compute.vpnGateways.list",
      "compute.vpnTunnels.get",
      "compute.vpnTunnels.list",
      "compute.zoneOperations.get",
      "compute.zoneOperations.getIamPolicy",
      "compute.zoneOperations.list",
      "compute.zones.get",
      "compute.zones.list",
      "dataproc.clusters.get",
      "dataproc.clusters.use",
      "dataproc.jobs.cancel",
      "dataproc.jobs.create",
      "dataproc.jobs.delete",
      "dataproc.jobs.get",
      "dataproc.jobs.list",
      "dataproc.jobs.update",
      "iam.serviceAccounts.actAs",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.getAccessToken",
      "iam.serviceAccounts.list",
      "ml.jobs.create",
      "ml.jobs.get",
      "ml.jobs.list",
      "notebooks.environments.create",
      "notebooks.environments.delete",
      "notebooks.environments.get",
      "notebooks.environments.getIamPolicy",
      "notebooks.environments.list",
      "notebooks.environments.setIamPolicy",
      "notebooks.executions.create",
      "notebooks.executions.delete",
      "notebooks.executions.get",
      "notebooks.executions.getIamPolicy",
      "notebooks.executions.list",
      "notebooks.executions.setIamPolicy",
      "notebooks.instances.checkUpgradability",
      "notebooks.instances.create",
      "notebooks.instances.delete",
      "notebooks.instances.diagnose",
      "notebooks.instances.get",
      "notebooks.instances.getHealth",
      "notebooks.instances.getIamPolicy",
      "notebooks.instances.list",
      "notebooks.instances.reset",
      "notebooks.instances.setAccelerator",
      "notebooks.instances.setIamPolicy",
      "notebooks.instances.setLabels",
      "notebooks.instances.setMachineType",
      "notebooks.instances.start",
      "notebooks.instances.stop",
      "notebooks.instances.update",
      "notebooks.instances.updateConfig",
      "notebooks.instances.updateShieldInstanceConfig",
      "notebooks.instances.upgrade",
      "notebooks.instances.use",
      "notebooks.locations.get",
      "notebooks.locations.list",
      "notebooks.operations.cancel",
      "notebooks.operations.delete",
      "notebooks.operations.get",
      "notebooks.operations.list",
      "notebooks.runtimes.create",
      "notebooks.runtimes.delete",
      "notebooks.runtimes.diagnose",
      "notebooks.runtimes.get",
      "notebooks.runtimes.getIamPolicy",
      "notebooks.runtimes.list",
      "notebooks.runtimes.reset",
      "notebooks.runtimes.setIamPolicy",
      "notebooks.runtimes.start",
      "notebooks.runtimes.stop",
      "notebooks.runtimes.switch",
      "notebooks.runtimes.update",
      "notebooks.runtimes.upgrade",
      "notebooks.schedules.create",
      "notebooks.schedules.delete",
      "notebooks.schedules.get",
      "notebooks.schedules.getIamPolicy",
      "notebooks.schedules.list",
      "notebooks.schedules.setIamPolicy",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/notebooks.viewer",
    "title": "Notebooks Viewer",
    "description": "Read-only access to Notebooks all resources.",
    "includedPermissions": [
      "compute.acceleratorTypes.get",
      "compute.acceleratorTypes.list",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.backendBuckets.get",
      "compute.backendBuckets.getIamPolicy",
      "compute.backendBuckets.list",
      "compute.backendBuckets.listEffectiveTags",
      "compute.backendBuckets.listTagBindings",
      "compute.backendServices.get",
      "compute.backendServices.getIamPolicy",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.commitments.get",
      "compute.commitments.list",
      "compute.diskTypes.get",
      "compute.diskTypes.list",
      "compute.disks.get",
      "compute.disks.getIamPolicy",
      "compute.disks.list",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.list",
      "compute.firewallPolicies.get",
      "compute.firewallPolicies.getIamPolicy",
      "compute.firewallPolicies.list",
      "compute.firewallPolicies.listEffectiveTags",
      "compute.firewallPolicies.listTagBindings",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.futureReservations.get",
      "compute.futureReservations.getIamPolicy",
      "compute.futureReservations.list",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalForwardingRules.pscGet",
      "compute.globalNetworkEndpointGroups.get",
      "compute.globalNetworkEndpointGroups.list",
      "compute.globalNetworkEndpointGroups.listEffectiveTags",
      "compute.globalNetworkEndpointGroups.listTagBindings",
      "compute.globalOperations.get",
      "compute.globalOperations.getIamPolicy",
      "compute.globalOperations.list",
      "compute.globalPublicDelegatedPrefixes.get",
      "compute.globalPublicDelegatedPrefixes.list",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.images.get",
      "compute.images.getFromFamily",
      "compute.images.getIamPolicy",
      "compute.images.list",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instanceTemplates.get",
      "compute.instanceTemplates.getIamPolicy",
      "compute.instanceTemplates.list",
      "compute.instances.get",
      "compute.instances.getEffectiveFirewalls",
      "compute.instances.getGuestAttributes",
      "compute.instances.getIamPolicy",
      "compute.instances.getScreenshot",
      "compute.instances.getSerialPortOutput",
      "compute.instances.getShieldedInstanceIdentity",
      "compute.instances.getShieldedVmIdentity",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listReferrers",
      "compute.instances.listTagBindings",
      "compute.instantSnapshots.get",
      "compute.instantSnapshots.getIamPolicy",
      "compute.instantSnapshots.list",
      "compute.interconnectAttachments.get",
      "compute.interconnectAttachments.list",
      "compute.interconnectLocations.get",
      "compute.interconnectLocations.list",
      "compute.interconnectRemoteLocations.get",
      "compute.interconnectRemoteLocations.list",
      "compute.interconnects.get",
      "compute.interconnects.list",
      "compute.licenseCodes.get",
      "compute.licenseCodes.getIamPolicy",
      "compute.licenseCodes.list",
      "compute.licenses.get",
      "compute.licenses.getIamPolicy",
      "compute.licenses.list",
      "compute.machineImages.get",
      "compute.machineImages.getIamPolicy",
      "compute.machineImages.list",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.maintenancePolicies.get",
      "compute.maintenancePolicies.getIamPolicy",
      "compute.maintenancePolicies.list",
      "compute.networkAttachments.get",
      "compute.networkAttachments.getIamPolicy",
      "compute.networkAttachments.list",
      "compute.networkEdgeSecurityServices.get",
      "compute.networkEdgeSecurityServices.list",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.getIamPolicy",
      "compute.networkEndpointGroups.list",
      "compute.networkEndpointGroups.listEffectiveTags",
      "compute.networkEndpointGroups.listTagBindings",
      "compute.networks.get",
      "compute.networks.getEffectiveFirewalls",
      "compute.networks.getRegionEffectiveFirewalls",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listPeeringRoutes",
      "compute.networks.listTagBindings",
      "compute.nodeGroups.get",
      "compute.nodeGroups.getIamPolicy",
      "compute.nodeGroups.list",
      "compute.nodeTemplates.get",
      "compute.nodeTemplates.getIamPolicy",
      "compute.nodeTemplates.list",
      "compute.nodeTypes.get",
      "compute.nodeTypes.list",
      "compute.organizations.listAssociations",
      "compute.packetMirrorings.get",
      "compute.packetMirrorings.list",
      "compute.projects.get",
      "compute.publicAdvertisedPrefixes.get",
      "compute.publicAdvertisedPrefixes.list",
      "compute.publicDelegatedPrefixes.get",
      "compute.publicDelegatedPrefixes.list",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.getIamPolicy",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionFirewallPolicies.get",
      "compute.regionFirewallPolicies.getIamPolicy",
      "compute.regionFirewallPolicies.list",
      "compute.regionFirewallPolicies.listEffectiveTags",
      "compute.regionFirewallPolicies.listTagBindings",
      "compute.regionHealthCheckServices.get",
      "compute.regionHealthCheckServices.list",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionNetworkEndpointGroups.listEffectiveTags",
      "compute.regionNetworkEndpointGroups.listTagBindings",
      "compute.regionNotificationEndpoints.get",
      "compute.regionNotificationEndpoints.list",
      "compute.regionOperations.get",
      "compute.regionOperations.getIamPolicy",
      "compute.regionOperations.list",
      "compute.regionSecurityPolicies.get",
      "compute.regionSecurityPolicies.list",
      "compute.regionSecurityPolicies.listEffectiveTags",
      "compute.regionSecurityPolicies.listTagBindings",
      "compute.regionSslCertificates.get",
      "compute.regionSslCertificates.list",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionSslPolicies.get",
      "compute.regionSslPolicies.list",
      "compute.regionSslPolicies.listAvailableFeatures",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionTargetTcpProxies.get",
      "compute.regionTargetTcpProxies.list",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.list",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.regionUrlMaps.validate",
      "compute.regions.get",
      "compute.regions.list",
      "compute.reservations.get",
      "compute.reservations.list",
      "compute.resourcePolicies.get",
      "compute.resourcePolicies.getIamPolicy",
      "compute.resourcePolicies.list",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routes.get",
      "compute.routes.list",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.securityPolicies.get",
      "compute.securityPolicies.getIamPolicy",
      "compute.securityPolicies.list",
      "compute.securityPolicies.listEffectiveTags",
      "compute.securityPolicies.listTagBindings",
      "compute.serviceAttachments.get",
      "compute.serviceAttachments.getIamPolicy",
      "compute.serviceAttachments.list",
      "compute.snapshots.get",
      "compute.snapshots.getIamPolicy",
      "compute.snapshots.list",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.get",
      "compute.sslPolicies.list",
      "compute.sslPolicies.listAvailableFeatures",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.subnetworks.get",
      "compute.subnetworks.getIamPolicy",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.targetGrpcProxies.get",
      "compute.targetGrpcProxies.list",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetInstances.get",
      "compute.targetInstances.list",
      "compute.targetInstances.listEffectiveTags",
      "compute.targetInstances.listTagBindings",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetSslProxies.listEffectiveTags",
      "compute.targetSslProxies.listTagBindings",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.targetVpnGateways.get",
      "compute.targetVpnGateways.list",
      "compute.urlMaps.get",
      "compute.urlMaps.list",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "compute.urlMaps.validate",
      "compute.vpnGateways.get",
      "compute.vpnGateways.list",
      "compute.vpnTunnels.get",
      "compute.vpnTunnels.list",
      "compute.zoneOperations.get",
      "compute.zoneOperations.getIamPolicy",
      "compute.zoneOperations.list",
      "compute.zones.get",
      "compute.zones.list",
      "notebooks.environments.get",
      "notebooks.environments.getIamPolicy",
      "notebooks.environments.list",
      "notebooks.executions.get",
      "notebooks.executions.getIamPolicy",
      "notebooks.executions.list",
      "notebooks.instances.checkUpgradability",
      "notebooks.instances.get",
      "notebooks.instances.getHealth",
      "notebooks.instances.getIamPolicy",
      "notebooks.instances.list",
      "notebooks.locations.get",
      "notebooks.locations.list",
      "notebooks.operations.get",
      "notebooks.operations.list",
      "notebooks.runtimes.get",
      "notebooks.runtimes.getIamPolicy",
      "notebooks.runtimes.list",
      "notebooks.schedules.get",
      "notebooks.schedules.getIamPolicy",
      "notebooks.schedules.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/oauthconfig.editor",
    "title": "OAuth Config Editor",
    "description": "Read/write access to OAuth config resources",
    "includedPermissions": [
      "clientauthconfig.brands.create",
      "clientauthconfig.brands.delete",
      "clientauthconfig.brands.get",
      "clientauthconfig.brands.list",
      "clientauthconfig.brands.update",
      "clientauthconfig.clients.create",
      "clientauthconfig.clients.createSecret",
      "clientauthconfig.clients.delete",
      "clientauthconfig.clients.get",
      "clientauthconfig.clients.getWithSecret",
      "clientauthconfig.clients.list",
      "clientauthconfig.clients.listWithSecrets",
      "clientauthconfig.clients.undelete",
      "clientauthconfig.clients.update",
      "oauthconfig.clientpolicy.get",
      "oauthconfig.testusers.get",
      "oauthconfig.testusers.update",
      "oauthconfig.verification.get",
      "oauthconfig.verification.submit",
      "oauthconfig.verification.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/oauthconfig.viewer",
    "title": "OAuth Config Viewer",
    "description": "Read-only access to OAuth config resources",
    "includedPermissions": [
      "clientauthconfig.brands.get",
      "clientauthconfig.brands.list",
      "clientauthconfig.clients.get",
      "clientauthconfig.clients.list",
      "oauthconfig.clientpolicy.get",
      "oauthconfig.testusers.get",
      "oauthconfig.verification.get"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/ondemandscanning.admin",
    "title": "On-Demand Scanning Admin",
    "description": "All permissions for On-Demand Scanning",
    "includedPermissions": [
      "ondemandscanning.operations.cancel",
      "ondemandscanning.operations.delete",
      "ondemandscanning.operations.get",
      "ondemandscanning.operations.list",
      "ondemandscanning.operations.wait",
      "ondemandscanning.scans.analyzePackages",
      "ondemandscanning.scans.listVulnerabilities",
      "ondemandscanning.scans.scan"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/ondemandscanning.serviceAgent",
    "title": "On-Demand Scanning Service Agent",
    "description": "Gives the On-Demand Scanning API the access it needs to function.",
    "includedPermissions": [
      "artifactregistry.dockerimages.get",
      "artifactregistry.dockerimages.list",
      "artifactregistry.files.get",
      "artifactregistry.files.list",
      "artifactregistry.locations.get",
      "artifactregistry.locations.list",
      "artifactregistry.mavenartifacts.get",
      "artifactregistry.mavenartifacts.list",
      "artifactregistry.npmpackages.get",
      "artifactregistry.npmpackages.list",
      "artifactregistry.packages.get",
      "artifactregistry.packages.list",
      "artifactregistry.projectsettings.get",
      "artifactregistry.pythonpackages.get",
      "artifactregistry.pythonpackages.list",
      "artifactregistry.repositories.downloadArtifacts",
      "artifactregistry.repositories.get",
      "artifactregistry.repositories.list",
      "artifactregistry.repositories.listEffectiveTags",
      "artifactregistry.repositories.listTagBindings",
      "artifactregistry.repositories.readViaVirtualRepository",
      "artifactregistry.tags.get",
      "artifactregistry.tags.list",
      "artifactregistry.versions.get",
      "artifactregistry.versions.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storage.objects.get",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/opsconfigmonitoring.resourceMetadata.viewer",
    "title": "Ops Config Monitoring Resource Metadata Viewer",
    "description": "Read-only access to resource metadata.",
    "includedPermissions": [
      "opsconfigmonitoring.resourceMetadata.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/opsconfigmonitoring.resourceMetadata.writer",
    "title": "Ops Config Monitoring Resource Metadata Writer",
    "description": "Write-only access to resource metadata. This provides exactly the permissions needed by the Ops Config Monitoring metadata agent and other systems that send metadata.",
    "includedPermissions": [
      "opsconfigmonitoring.resourceMetadata.write"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/orgpolicy.policyAdmin",
    "title": "Organization Policy Administrator",
    "description": "The permission to set Organization Policies on resources.",
    "includedPermissions": [
      "orgpolicy.constraints.list",
      "orgpolicy.customConstraints.create",
      "orgpolicy.customConstraints.delete",
      "orgpolicy.customConstraints.get",
      "orgpolicy.customConstraints.list",
      "orgpolicy.customConstraints.update",
      "orgpolicy.policies.create",
      "orgpolicy.policies.delete",
      "orgpolicy.policies.list",
      "orgpolicy.policies.update",
      "orgpolicy.policy.get",
      "orgpolicy.policy.set",
      "policysimulator.orgPolicyViolations.list",
      "policysimulator.orgPolicyViolationsPreviews.create",
      "policysimulator.orgPolicyViolationsPreviews.get",
      "policysimulator.orgPolicyViolationsPreviews.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/orgpolicy.policyViewer",
    "title": "Organization Policy Viewer",
    "description": "Access to view Organization Policies on resources.",
    "includedPermissions": [
      "orgpolicy.constraints.list",
      "orgpolicy.customConstraints.get",
      "orgpolicy.customConstraints.list",
      "orgpolicy.policies.list",
      "orgpolicy.policy.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/osconfig.guestPolicyAdmin",
    "title": "GuestPolicy Admin",
    "description": "Full admin access to GuestPolicies",
    "includedPermissions": [
      "osconfig.guestPolicies.create",
      "osconfig.guestPolicies.delete",
      "osconfig.guestPolicies.get",
      "osconfig.guestPolicies.list",
      "osconfig.guestPolicies.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/osconfig.guestPolicyEditor",
    "title": "GuestPolicy Editor",
    "description": "Editor of GuestPolicy resources",
    "includedPermissions": [
      "osconfig.guestPolicies.get",
      "osconfig.guestPolicies.list",
      "osconfig.guestPolicies.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/osconfig.guestPolicyViewer",
    "title": "GuestPolicy Viewer",
    "description": "Viewer of GuestPolicy resources",
    "includedPermissions": [
      "osconfig.guestPolicies.get",
      "osconfig.guestPolicies.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/osconfig.instanceOSPoliciesComplianceViewer",
    "title": "InstanceOSPoliciesCompliance Viewer",
    "description": "Viewer of OS Policies Compliance of VM instances",
    "includedPermissions": [
      "osconfig.instanceOSPoliciesCompliances.get",
      "osconfig.instanceOSPoliciesCompliances.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/osconfig.inventoryViewer",
    "title": "OS Inventory Viewer",
    "description": "Viewer of OS Inventories",
    "includedPermissions": [
      "osconfig.inventories.get",
      "osconfig.inventories.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/osconfig.osPolicyAssignmentAdmin",
    "title": "OSPolicyAssignment Admin",
    "description": "Full admin access to OS Policy Assignments",
    "includedPermissions": [
      "osconfig.osPolicyAssignments.create",
      "osconfig.osPolicyAssignments.delete",
      "osconfig.osPolicyAssignments.get",
      "osconfig.osPolicyAssignments.list",
      "osconfig.osPolicyAssignments.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/osconfig.osPolicyAssignmentEditor",
    "title": "OSPolicyAssignment Editor",
    "description": "Editor of OS Policy Assignments",
    "includedPermissions": [
      "osconfig.osPolicyAssignments.get",
      "osconfig.osPolicyAssignments.list",
      "osconfig.osPolicyAssignments.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/osconfig.osPolicyAssignmentReportViewer",
    "title": "OSPolicyAssignmentReport Viewer",
    "description": "Viewer of OS policy assignment reports for VM instances",
    "includedPermissions": [
      "osconfig.osPolicyAssignmentReports.get",
      "osconfig.osPolicyAssignmentReports.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/osconfig.osPolicyAssignmentViewer",
    "title": "OSPolicyAssignment Viewer",
    "description": "Viewer of OS Policy Assignments",
    "includedPermissions": [
      "osconfig.osPolicyAssignments.get",
      "osconfig.osPolicyAssignments.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/osconfig.patchDeploymentAdmin",
    "title": "PatchDeployment Admin",
    "description": "Full admin access to PatchDeployments",
    "includedPermissions": [
      "osconfig.patchDeployments.create",
      "osconfig.patchDeployments.delete",
      "osconfig.patchDeployments.execute",
      "osconfig.patchDeployments.get",
      "osconfig.patchDeployments.list",
      "osconfig.patchDeployments.pause",
      "osconfig.patchDeployments.resume",
      "osconfig.patchDeployments.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/osconfig.patchDeploymentViewer",
    "title": "PatchDeployment Viewer",
    "description": "Viewer of PatchDeployment resources",
    "includedPermissions": [
      "osconfig.patchDeployments.get",
      "osconfig.patchDeployments.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/osconfig.patchJobExecutor",
    "title": "Patch Job Executor",
    "description": "Access to execute Patch Jobs.",
    "includedPermissions": [
      "osconfig.patchJobs.exec",
      "osconfig.patchJobs.get",
      "osconfig.patchJobs.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/osconfig.patchJobViewer",
    "title": "Patch Job Viewer",
    "description": "Get and list Patch Jobs.",
    "includedPermissions": [
      "osconfig.patchJobs.get",
      "osconfig.patchJobs.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/osconfig.serviceAgent",
    "title": "Cloud OS Config Service Agent",
    "description": "Grants OS Config Service Account access to Google Compute Engine instances.",
    "includedPermissions": [
      "compute.instances.get",
      "compute.instances.getGuestAttributes",
      "compute.instances.list",
      "compute.instances.setMetadata",
      "compute.zones.get",
      "compute.zones.list",
      "containeranalysis.notes.attachOccurrence",
      "containeranalysis.notes.create",
      "containeranalysis.notes.delete",
      "containeranalysis.notes.get",
      "containeranalysis.notes.list",
      "containeranalysis.notes.update",
      "containeranalysis.occurrences.create",
      "containeranalysis.occurrences.delete",
      "containeranalysis.occurrences.get",
      "containeranalysis.occurrences.list",
      "containeranalysis.occurrences.update",
      "iam.serviceAccounts.actAs",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/osconfig.vulnerabilityReportViewer",
    "title": "OS VulnerabilityReport Viewer",
    "description": "Viewer of OS VulnerabilityReports",
    "includedPermissions": [
      "osconfig.vulnerabilityReports.get",
      "osconfig.vulnerabilityReports.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/owner",
    "title": "Owner",
    "description": "Full access to most Google Cloud resources. See the list of included permissions.",
    "includedPermissions": [
      "accessapproval.requests.approve",
      "accessapproval.requests.dismiss",
      "accessapproval.requests.get",
      "accessapproval.requests.invalidate",
      "accessapproval.requests.list",
      "accessapproval.serviceAccounts.get",
      "accessapproval.settings.delete",
      "accessapproval.settings.get",
      "accessapproval.settings.update",
      "accesscontextmanager.accessLevels.create",
      "accesscontextmanager.accessLevels.delete",
      "accesscontextmanager.accessLevels.get",
      "accesscontextmanager.accessLevels.list",
      "accesscontextmanager.accessLevels.replaceAll",
      "accesscontextmanager.accessLevels.update",
      "accesscontextmanager.accessPolicies.create",
      "accesscontextmanager.accessPolicies.delete",
      "accesscontextmanager.accessPolicies.get",
      "accesscontextmanager.accessPolicies.getIamPolicy",
      "accesscontextmanager.accessPolicies.list",
      "accesscontextmanager.accessPolicies.setIamPolicy",
      "accesscontextmanager.accessPolicies.update",
      "accesscontextmanager.accessZones.create",
      "accesscontextmanager.accessZones.delete",
      "accesscontextmanager.accessZones.get",
      "accesscontextmanager.accessZones.list",
      "accesscontextmanager.accessZones.update",
      "accesscontextmanager.authorizedOrgsDescs.create",
      "accesscontextmanager.authorizedOrgsDescs.delete",
      "accesscontextmanager.authorizedOrgsDescs.get",
      "accesscontextmanager.authorizedOrgsDescs.list",
      "accesscontextmanager.authorizedOrgsDescs.update",
      "accesscontextmanager.gcpUserAccessBindings.create",
      "accesscontextmanager.gcpUserAccessBindings.delete",
      "accesscontextmanager.gcpUserAccessBindings.get",
      "accesscontextmanager.gcpUserAccessBindings.list",
      "accesscontextmanager.gcpUserAccessBindings.update",
      "accesscontextmanager.policies.create",
      "accesscontextmanager.policies.delete",
      "accesscontextmanager.policies.get",
      "accesscontextmanager.policies.getIamPolicy",
      "accesscontextmanager.policies.list",
      "accesscontextmanager.policies.setIamPolicy",
      "accesscontextmanager.policies.update",
      "accesscontextmanager.servicePerimeters.commit",
      "accesscontextmanager.servicePerimeters.create",
      "accesscontextmanager.servicePerimeters.delete",
      "accesscontextmanager.servicePerimeters.get",
      "accesscontextmanager.servicePerimeters.list",
      "accesscontextmanager.servicePerimeters.replaceAll",
      "accesscontextmanager.servicePerimeters.update",
      "actions.agent.claimContentProvider",
      "actions.agent.get",
      "actions.agent.update",
      "actions.agentVersions.create",
      "actions.agentVersions.delete",
      "actions.agentVersions.deploy",
      "actions.agentVersions.get",
      "actions.agentVersions.list",
      "advisorynotifications.notifications.get",
      "advisorynotifications.notifications.list",
      "aiplatform.annotationSpecs.create",
      "aiplatform.annotationSpecs.delete",
      "aiplatform.annotationSpecs.get",
      "aiplatform.annotationSpecs.list",
      "aiplatform.annotationSpecs.update",
      "aiplatform.annotations.create",
      "aiplatform.annotations.delete",
      "aiplatform.annotations.get",
      "aiplatform.annotations.list",
      "aiplatform.annotations.update",
      "aiplatform.artifacts.create",
      "aiplatform.artifacts.delete",
      "aiplatform.artifacts.get",
      "aiplatform.artifacts.list",
      "aiplatform.artifacts.update",
      "aiplatform.batchPredictionJobs.cancel",
      "aiplatform.batchPredictionJobs.create",
      "aiplatform.batchPredictionJobs.delete",
      "aiplatform.batchPredictionJobs.get",
      "aiplatform.batchPredictionJobs.list",
      "aiplatform.contexts.addContextArtifactsAndExecutions",
      "aiplatform.contexts.addContextChildren",
      "aiplatform.contexts.create",
      "aiplatform.contexts.delete",
      "aiplatform.contexts.get",
      "aiplatform.contexts.list",
      "aiplatform.contexts.queryContextLineageSubgraph",
      "aiplatform.contexts.update",
      "aiplatform.customJobs.cancel",
      "aiplatform.customJobs.create",
      "aiplatform.customJobs.delete",
      "aiplatform.customJobs.get",
      "aiplatform.customJobs.list",
      "aiplatform.dataItems.create",
      "aiplatform.dataItems.delete",
      "aiplatform.dataItems.get",
      "aiplatform.dataItems.list",
      "aiplatform.dataItems.update",
      "aiplatform.dataLabelingJobs.cancel",
      "aiplatform.dataLabelingJobs.create",
      "aiplatform.dataLabelingJobs.delete",
      "aiplatform.dataLabelingJobs.get",
      "aiplatform.dataLabelingJobs.list",
      "aiplatform.datasets.create",
      "aiplatform.datasets.delete",
      "aiplatform.datasets.export",
      "aiplatform.datasets.get",
      "aiplatform.datasets.import",
      "aiplatform.datasets.list",
      "aiplatform.datasets.update",
      "aiplatform.deploymentResourcePools.create",
      "aiplatform.deploymentResourcePools.delete",
      "aiplatform.deploymentResourcePools.get",
      "aiplatform.deploymentResourcePools.list",
      "aiplatform.deploymentResourcePools.queryDeployedModels",
      "aiplatform.deploymentResourcePools.update",
      "aiplatform.edgeDeploymentJobs.create",
      "aiplatform.edgeDeploymentJobs.delete",
      "aiplatform.edgeDeploymentJobs.get",
      "aiplatform.edgeDeploymentJobs.list",
      "aiplatform.edgeDeviceDebugInfo.get",
      "aiplatform.edgeDevices.create",
      "aiplatform.edgeDevices.delete",
      "aiplatform.edgeDevices.get",
      "aiplatform.edgeDevices.list",
      "aiplatform.edgeDevices.update",
      "aiplatform.endpoints.create",
      "aiplatform.endpoints.delete",
      "aiplatform.endpoints.deploy",
      "aiplatform.endpoints.explain",
      "aiplatform.endpoints.get",
      "aiplatform.endpoints.list",
      "aiplatform.endpoints.predict",
      "aiplatform.endpoints.undeploy",
      "aiplatform.endpoints.update",
      "aiplatform.entityTypes.create",
      "aiplatform.entityTypes.delete",
      "aiplatform.entityTypes.deleteFeatureValues",
      "aiplatform.entityTypes.exportFeatureValues",
      "aiplatform.entityTypes.get",
      "aiplatform.entityTypes.getIamPolicy",
      "aiplatform.entityTypes.importFeatureValues",
      "aiplatform.entityTypes.list",
      "aiplatform.entityTypes.readFeatureValues",
      "aiplatform.entityTypes.setIamPolicy",
      "aiplatform.entityTypes.streamingReadFeatureValues",
      "aiplatform.entityTypes.update",
      "aiplatform.entityTypes.writeFeatureValues",
      "aiplatform.executions.addExecutionEvents",
      "aiplatform.executions.create",
      "aiplatform.executions.delete",
      "aiplatform.executions.get",
      "aiplatform.executions.list",
      "aiplatform.executions.queryExecutionInputsAndOutputs",
      "aiplatform.executions.update",
      "aiplatform.featureOnlineStores.create",
      "aiplatform.featureOnlineStores.delete",
      "aiplatform.featureOnlineStores.get",
      "aiplatform.featureOnlineStores.list",
      "aiplatform.featureOnlineStores.update",
      "aiplatform.featureViewSyncs.get",
      "aiplatform.featureViewSyncs.list",
      "aiplatform.featureViews.create",
      "aiplatform.featureViews.delete",
      "aiplatform.featureViews.fetchFeatureValues",
      "aiplatform.featureViews.get",
      "aiplatform.featureViews.list",
      "aiplatform.featureViews.searchNearestEntities",
      "aiplatform.featureViews.sync",
      "aiplatform.featureViews.update",
      "aiplatform.features.create",
      "aiplatform.features.delete",
      "aiplatform.features.get",
      "aiplatform.features.list",
      "aiplatform.features.update",
      "aiplatform.featurestores.batchReadFeatureValues",
      "aiplatform.featurestores.create",
      "aiplatform.featurestores.delete",
      "aiplatform.featurestores.exportFeatures",
      "aiplatform.featurestores.get",
      "aiplatform.featurestores.getIamPolicy",
      "aiplatform.featurestores.importFeatures",
      "aiplatform.featurestores.list",
      "aiplatform.featurestores.readFeatures",
      "aiplatform.featurestores.setIamPolicy",
      "aiplatform.featurestores.update",
      "aiplatform.featurestores.writeFeatures",
      "aiplatform.humanInTheLoops.cancel",
      "aiplatform.humanInTheLoops.create",
      "aiplatform.humanInTheLoops.delete",
      "aiplatform.humanInTheLoops.get",
      "aiplatform.humanInTheLoops.list",
      "aiplatform.humanInTheLoops.queryAnnotationStats",
      "aiplatform.humanInTheLoops.send",
      "aiplatform.humanInTheLoops.update",
      "aiplatform.hyperparameterTuningJobs.cancel",
      "aiplatform.hyperparameterTuningJobs.create",
      "aiplatform.hyperparameterTuningJobs.delete",
      "aiplatform.hyperparameterTuningJobs.get",
      "aiplatform.hyperparameterTuningJobs.list",
      "aiplatform.indexEndpoints.create",
      "aiplatform.indexEndpoints.delete",
      "aiplatform.indexEndpoints.deploy",
      "aiplatform.indexEndpoints.get",
      "aiplatform.indexEndpoints.list",
      "aiplatform.indexEndpoints.queryVectors",
      "aiplatform.indexEndpoints.undeploy",
      "aiplatform.indexEndpoints.update",
      "aiplatform.indexes.create",
      "aiplatform.indexes.delete",
      "aiplatform.indexes.get",
      "aiplatform.indexes.list",
      "aiplatform.indexes.update",
      "aiplatform.locations.get",
      "aiplatform.locations.list",
      "aiplatform.metadataSchemas.create",
      "aiplatform.metadataSchemas.delete",
      "aiplatform.metadataSchemas.get",
      "aiplatform.metadataSchemas.list",
      "aiplatform.metadataStores.create",
      "aiplatform.metadataStores.delete",
      "aiplatform.metadataStores.get",
      "aiplatform.metadataStores.list",
      "aiplatform.migratableResources.migrate",
      "aiplatform.migratableResources.search",
      "aiplatform.modelDeploymentMonitoringJobs.create",
      "aiplatform.modelDeploymentMonitoringJobs.delete",
      "aiplatform.modelDeploymentMonitoringJobs.get",
      "aiplatform.modelDeploymentMonitoringJobs.list",
      "aiplatform.modelDeploymentMonitoringJobs.pause",
      "aiplatform.modelDeploymentMonitoringJobs.resume",
      "aiplatform.modelDeploymentMonitoringJobs.searchStatsAnomalies",
      "aiplatform.modelDeploymentMonitoringJobs.update",
      "aiplatform.modelEvaluationSlices.get",
      "aiplatform.modelEvaluationSlices.import",
      "aiplatform.modelEvaluationSlices.list",
      "aiplatform.modelEvaluations.exportEvaluatedDataItems",
      "aiplatform.modelEvaluations.get",
      "aiplatform.modelEvaluations.import",
      "aiplatform.modelEvaluations.list",
      "aiplatform.models.delete",
      "aiplatform.models.export",
      "aiplatform.models.get",
      "aiplatform.models.list",
      "aiplatform.models.update",
      "aiplatform.models.upload",
      "aiplatform.nasJobs.cancel",
      "aiplatform.nasJobs.create",
      "aiplatform.nasJobs.delete",
      "aiplatform.nasJobs.get",
      "aiplatform.nasJobs.list",
      "aiplatform.nasTrialDetails.get",
      "aiplatform.nasTrialDetails.list",
      "aiplatform.operations.list",
      "aiplatform.persistentResources.create",
      "aiplatform.persistentResources.delete",
      "aiplatform.persistentResources.get",
      "aiplatform.persistentResources.list",
      "aiplatform.pipelineJobs.cancel",
      "aiplatform.pipelineJobs.create",
      "aiplatform.pipelineJobs.delete",
      "aiplatform.pipelineJobs.get",
      "aiplatform.pipelineJobs.list",
      "aiplatform.schedules.create",
      "aiplatform.schedules.delete",
      "aiplatform.schedules.get",
      "aiplatform.schedules.list",
      "aiplatform.schedules.update",
      "aiplatform.specialistPools.create",
      "aiplatform.specialistPools.delete",
      "aiplatform.specialistPools.get",
      "aiplatform.specialistPools.list",
      "aiplatform.specialistPools.update",
      "aiplatform.studies.create",
      "aiplatform.studies.delete",
      "aiplatform.studies.get",
      "aiplatform.studies.list",
      "aiplatform.studies.update",
      "aiplatform.tensorboardExperiments.create",
      "aiplatform.tensorboardExperiments.delete",
      "aiplatform.tensorboardExperiments.get",
      "aiplatform.tensorboardExperiments.list",
      "aiplatform.tensorboardExperiments.update",
      "aiplatform.tensorboardExperiments.write",
      "aiplatform.tensorboardRuns.batchCreate",
      "aiplatform.tensorboardRuns.create",
      "aiplatform.tensorboardRuns.delete",
      "aiplatform.tensorboardRuns.get",
      "aiplatform.tensorboardRuns.list",
      "aiplatform.tensorboardRuns.update",
      "aiplatform.tensorboardRuns.write",
      "aiplatform.tensorboardTimeSeries.batchCreate",
      "aiplatform.tensorboardTimeSeries.batchRead",
      "aiplatform.tensorboardTimeSeries.create",
      "aiplatform.tensorboardTimeSeries.delete",
      "aiplatform.tensorboardTimeSeries.get",
      "aiplatform.tensorboardTimeSeries.list",
      "aiplatform.tensorboardTimeSeries.read",
      "aiplatform.tensorboardTimeSeries.update",
      "aiplatform.tensorboards.create",
      "aiplatform.tensorboards.delete",
      "aiplatform.tensorboards.get",
      "aiplatform.tensorboards.list",
      "aiplatform.tensorboards.recordAccess",
      "aiplatform.tensorboards.update",
      "aiplatform.trainingPipelines.cancel",
      "aiplatform.trainingPipelines.create",
      "aiplatform.trainingPipelines.delete",
      "aiplatform.trainingPipelines.get",
      "aiplatform.trainingPipelines.list",
      "aiplatform.trials.create",
      "aiplatform.trials.delete",
      "aiplatform.trials.get",
      "aiplatform.trials.list",
      "aiplatform.trials.update",
      "alloydb.backups.create",
      "alloydb.backups.delete",
      "alloydb.backups.get",
      "alloydb.backups.list",
      "alloydb.backups.update",
      "alloydb.clusters.create",
      "alloydb.clusters.delete",
      "alloydb.clusters.generateClientCertificate",
      "alloydb.clusters.get",
      "alloydb.clusters.list",
      "alloydb.clusters.update",
      "alloydb.instances.connect",
      "alloydb.instances.create",
      "alloydb.instances.delete",
      "alloydb.instances.failover",
      "alloydb.instances.get",
      "alloydb.instances.injectFault",
      "alloydb.instances.list",
      "alloydb.instances.restart",
      "alloydb.instances.update",
      "alloydb.locations.get",
      "alloydb.locations.list",
      "alloydb.operations.cancel",
      "alloydb.operations.delete",
      "alloydb.operations.get",
      "alloydb.operations.list",
      "alloydb.supportedDatabaseFlags.get",
      "alloydb.supportedDatabaseFlags.list",
      "alloydb.users.create",
      "alloydb.users.delete",
      "alloydb.users.get",
      "alloydb.users.list",
      "alloydb.users.login",
      "alloydb.users.update",
      "analyticshub.dataExchanges.create",
      "analyticshub.dataExchanges.delete",
      "analyticshub.dataExchanges.get",
      "analyticshub.dataExchanges.getIamPolicy",
      "analyticshub.dataExchanges.list",
      "analyticshub.dataExchanges.setIamPolicy",
      "analyticshub.dataExchanges.subscribe",
      "analyticshub.dataExchanges.update",
      "analyticshub.dataExchanges.viewSubscriptions",
      "analyticshub.listings.create",
      "analyticshub.listings.delete",
      "analyticshub.listings.get",
      "analyticshub.listings.getIamPolicy",
      "analyticshub.listings.list",
      "analyticshub.listings.setIamPolicy",
      "analyticshub.listings.subscribe",
      "analyticshub.listings.update",
      "analyticshub.listings.viewSubscriptions",
      "analyticshub.subscriptions.create",
      "analyticshub.subscriptions.delete",
      "analyticshub.subscriptions.get",
      "analyticshub.subscriptions.list",
      "analyticshub.subscriptions.update",
      "androidmanagement.enterprises.manage",
      "apigateway.apiconfigs.create",
      "apigateway.apiconfigs.delete",
      "apigateway.apiconfigs.get",
      "apigateway.apiconfigs.getIamPolicy",
      "apigateway.apiconfigs.list",
      "apigateway.apiconfigs.setIamPolicy",
      "apigateway.apiconfigs.update",
      "apigateway.apis.create",
      "apigateway.apis.delete",
      "apigateway.apis.get",
      "apigateway.apis.getIamPolicy",
      "apigateway.apis.list",
      "apigateway.apis.setIamPolicy",
      "apigateway.apis.update",
      "apigateway.gateways.create",
      "apigateway.gateways.delete",
      "apigateway.gateways.get",
      "apigateway.gateways.getIamPolicy",
      "apigateway.gateways.list",
      "apigateway.gateways.setIamPolicy",
      "apigateway.gateways.update",
      "apigateway.locations.get",
      "apigateway.locations.list",
      "apigateway.operations.cancel",
      "apigateway.operations.delete",
      "apigateway.operations.get",
      "apigateway.operations.list",
      "apigee.apiproductattributes.createOrUpdateAll",
      "apigee.apiproductattributes.delete",
      "apigee.apiproductattributes.get",
      "apigee.apiproductattributes.list",
      "apigee.apiproductattributes.update",
      "apigee.apiproducts.create",
      "apigee.apiproducts.delete",
      "apigee.apiproducts.get",
      "apigee.apiproducts.list",
      "apigee.apiproducts.update",
      "apigee.appgroupapps.create",
      "apigee.appgroupapps.delete",
      "apigee.appgroupapps.get",
      "apigee.appgroupapps.list",
      "apigee.appgroupapps.manage",
      "apigee.appgroups.create",
      "apigee.appgroups.delete",
      "apigee.appgroups.get",
      "apigee.appgroups.list",
      "apigee.appgroups.update",
      "apigee.appkeys.create",
      "apigee.appkeys.delete",
      "apigee.appkeys.get",
      "apigee.appkeys.manage",
      "apigee.apps.get",
      "apigee.apps.list",
      "apigee.archivedeployments.create",
      "apigee.archivedeployments.delete",
      "apigee.archivedeployments.download",
      "apigee.archivedeployments.get",
      "apigee.archivedeployments.list",
      "apigee.archivedeployments.update",
      "apigee.archivedeployments.upload",
      "apigee.caches.delete",
      "apigee.caches.list",
      "apigee.canaryevaluations.create",
      "apigee.canaryevaluations.get",
      "apigee.datacollectors.create",
      "apigee.datacollectors.delete",
      "apigee.datacollectors.get",
      "apigee.datacollectors.list",
      "apigee.datacollectors.update",
      "apigee.datalocation.get",
      "apigee.datastores.create",
      "apigee.datastores.delete",
      "apigee.datastores.get",
      "apigee.datastores.list",
      "apigee.datastores.update",
      "apigee.deployments.create",
      "apigee.deployments.delete",
      "apigee.deployments.get",
      "apigee.deployments.list",
      "apigee.deployments.update",
      "apigee.developerappattributes.createOrUpdateAll",
      "apigee.developerappattributes.delete",
      "apigee.developerappattributes.get",
      "apigee.developerappattributes.list",
      "apigee.developerappattributes.update",
      "apigee.developerapps.create",
      "apigee.developerapps.delete",
      "apigee.developerapps.get",
      "apigee.developerapps.list",
      "apigee.developerapps.manage",
      "apigee.developerattributes.createOrUpdateAll",
      "apigee.developerattributes.delete",
      "apigee.developerattributes.get",
      "apigee.developerattributes.list",
      "apigee.developerattributes.update",
      "apigee.developerbalances.adjust",
      "apigee.developerbalances.get",
      "apigee.developerbalances.update",
      "apigee.developermonetizationconfigs.get",
      "apigee.developermonetizationconfigs.update",
      "apigee.developers.create",
      "apigee.developers.delete",
      "apigee.developers.get",
      "apigee.developers.list",
      "apigee.developers.update",
      "apigee.developersubscriptions.create",
      "apigee.developersubscriptions.get",
      "apigee.developersubscriptions.list",
      "apigee.developersubscriptions.update",
      "apigee.endpointattachments.create",
      "apigee.endpointattachments.delete",
      "apigee.endpointattachments.get",
      "apigee.endpointattachments.list",
      "apigee.entitlements.get",
      "apigee.envgroupattachments.create",
      "apigee.envgroupattachments.delete",
      "apigee.envgroupattachments.get",
      "apigee.envgroupattachments.list",
      "apigee.envgroups.create",
      "apigee.envgroups.delete",
      "apigee.envgroups.get",
      "apigee.envgroups.list",
      "apigee.envgroups.update",
      "apigee.environments.create",
      "apigee.environments.delete",
      "apigee.environments.get",
      "apigee.environments.getDataLocation",
      "apigee.environments.getIamPolicy",
      "apigee.environments.getStats",
      "apigee.environments.list",
      "apigee.environments.manageRuntime",
      "apigee.environments.setIamPolicy",
      "apigee.environments.update",
      "apigee.exports.create",
      "apigee.exports.get",
      "apigee.exports.list",
      "apigee.flowhooks.attachSharedFlow",
      "apigee.flowhooks.detachSharedFlow",
      "apigee.flowhooks.getSharedFlow",
      "apigee.flowhooks.list",
      "apigee.hostqueries.create",
      "apigee.hostqueries.get",
      "apigee.hostqueries.list",
      "apigee.hostsecurityreports.create",
      "apigee.hostsecurityreports.get",
      "apigee.hostsecurityreports.list",
      "apigee.hoststats.get",
      "apigee.ingressconfigs.get",
      "apigee.instanceattachments.create",
      "apigee.instanceattachments.delete",
      "apigee.instanceattachments.get",
      "apigee.instanceattachments.list",
      "apigee.instances.create",
      "apigee.instances.delete",
      "apigee.instances.get",
      "apigee.instances.list",
      "apigee.instances.reportStatus",
      "apigee.instances.update",
      "apigee.keystorealiases.create",
      "apigee.keystorealiases.delete",
      "apigee.keystorealiases.exportCertificate",
      "apigee.keystorealiases.generateCSR",
      "apigee.keystorealiases.get",
      "apigee.keystorealiases.list",
      "apigee.keystorealiases.update",
      "apigee.keystores.create",
      "apigee.keystores.delete",
      "apigee.keystores.export",
      "apigee.keystores.get",
      "apigee.keystores.list",
      "apigee.keyvaluemapentries.create",
      "apigee.keyvaluemapentries.delete",
      "apigee.keyvaluemapentries.get",
      "apigee.keyvaluemapentries.list",
      "apigee.keyvaluemaps.create",
      "apigee.keyvaluemaps.delete",
      "apigee.keyvaluemaps.list",
      "apigee.maskconfigs.get",
      "apigee.maskconfigs.update",
      "apigee.nataddresses.activate",
      "apigee.nataddresses.create",
      "apigee.nataddresses.delete",
      "apigee.nataddresses.get",
      "apigee.nataddresses.list",
      "apigee.operations.get",
      "apigee.operations.list",
      "apigee.organizations.create",
      "apigee.organizations.delete",
      "apigee.organizations.get",
      "apigee.organizations.list",
      "apigee.organizations.update",
      "apigee.portals.create",
      "apigee.portals.delete",
      "apigee.portals.get",
      "apigee.portals.list",
      "apigee.portals.update",
      "apigee.projectorganizations.get",
      "apigee.projects.migrate",
      "apigee.projects.previewMigration",
      "apigee.projects.update",
      "apigee.proxies.create",
      "apigee.proxies.delete",
      "apigee.proxies.get",
      "apigee.proxies.list",
      "apigee.proxies.update",
      "apigee.proxyrevisions.delete",
      "apigee.proxyrevisions.deploy",
      "apigee.proxyrevisions.get",
      "apigee.proxyrevisions.list",
      "apigee.proxyrevisions.undeploy",
      "apigee.proxyrevisions.update",
      "apigee.queries.create",
      "apigee.queries.get",
      "apigee.queries.list",
      "apigee.rateplans.create",
      "apigee.rateplans.delete",
      "apigee.rateplans.get",
      "apigee.rateplans.list",
      "apigee.rateplans.update",
      "apigee.references.create",
      "apigee.references.delete",
      "apigee.references.get",
      "apigee.references.list",
      "apigee.references.update",
      "apigee.reports.create",
      "apigee.reports.delete",
      "apigee.reports.get",
      "apigee.reports.list",
      "apigee.reports.update",
      "apigee.resourcefiles.create",
      "apigee.resourcefiles.delete",
      "apigee.resourcefiles.get",
      "apigee.resourcefiles.list",
      "apigee.resourcefiles.update",
      "apigee.runtimeconfigs.get",
      "apigee.securityActions.create",
      "apigee.securityActions.get",
      "apigee.securityActions.list",
      "apigee.securityActions.update",
      "apigee.securityActionsConfig.get",
      "apigee.securityActionsConfig.update",
      "apigee.securityIncidents.get",
      "apigee.securityIncidents.list",
      "apigee.securityProfileEnvironments.computeScore",
      "apigee.securityProfileEnvironments.create",
      "apigee.securityProfileEnvironments.delete",
      "apigee.securityProfiles.create",
      "apigee.securityProfiles.delete",
      "apigee.securityProfiles.get",
      "apigee.securityProfiles.list",
      "apigee.securityProfiles.update",
      "apigee.securityStats.queryTabularStats",
      "apigee.securityStats.queryTimeSeriesStats",
      "apigee.securityreports.create",
      "apigee.securityreports.get",
      "apigee.securityreports.list",
      "apigee.setupcontexts.get",
      "apigee.setupcontexts.update",
      "apigee.sharedflowrevisions.delete",
      "apigee.sharedflowrevisions.deploy",
      "apigee.sharedflowrevisions.get",
      "apigee.sharedflowrevisions.list",
      "apigee.sharedflowrevisions.undeploy",
      "apigee.sharedflowrevisions.update",
      "apigee.sharedflows.create",
      "apigee.sharedflows.delete",
      "apigee.sharedflows.get",
      "apigee.sharedflows.list",
      "apigee.targetservers.create",
      "apigee.targetservers.delete",
      "apigee.targetservers.get",
      "apigee.targetservers.list",
      "apigee.targetservers.update",
      "apigee.traceconfig.get",
      "apigee.traceconfig.update",
      "apigee.traceconfigoverrides.create",
      "apigee.traceconfigoverrides.delete",
      "apigee.traceconfigoverrides.get",
      "apigee.traceconfigoverrides.list",
      "apigee.traceconfigoverrides.update",
      "apigee.tracesessions.create",
      "apigee.tracesessions.delete",
      "apigee.tracesessions.get",
      "apigee.tracesessions.list",
      "apigeeconnect.connections.list",
      "apigeeconnect.endpoints.connect",
      "apigeeregistry.apis.create",
      "apigeeregistry.apis.delete",
      "apigeeregistry.apis.get",
      "apigeeregistry.apis.getIamPolicy",
      "apigeeregistry.apis.list",
      "apigeeregistry.apis.setIamPolicy",
      "apigeeregistry.apis.update",
      "apigeeregistry.artifacts.create",
      "apigeeregistry.artifacts.delete",
      "apigeeregistry.artifacts.get",
      "apigeeregistry.artifacts.getIamPolicy",
      "apigeeregistry.artifacts.list",
      "apigeeregistry.artifacts.setIamPolicy",
      "apigeeregistry.artifacts.update",
      "apigeeregistry.deployments.create",
      "apigeeregistry.deployments.delete",
      "apigeeregistry.deployments.get",
      "apigeeregistry.deployments.list",
      "apigeeregistry.deployments.update",
      "apigeeregistry.instances.get",
      "apigeeregistry.instances.update",
      "apigeeregistry.locations.get",
      "apigeeregistry.locations.list",
      "apigeeregistry.operations.cancel",
      "apigeeregistry.operations.delete",
      "apigeeregistry.operations.get",
      "apigeeregistry.operations.list",
      "apigeeregistry.specs.create",
      "apigeeregistry.specs.delete",
      "apigeeregistry.specs.get",
      "apigeeregistry.specs.getIamPolicy",
      "apigeeregistry.specs.list",
      "apigeeregistry.specs.setIamPolicy",
      "apigeeregistry.specs.update",
      "apigeeregistry.versions.create",
      "apigeeregistry.versions.delete",
      "apigeeregistry.versions.get",
      "apigeeregistry.versions.getIamPolicy",
      "apigeeregistry.versions.list",
      "apigeeregistry.versions.setIamPolicy",
      "apigeeregistry.versions.update",
      "apikeys.keys.create",
      "apikeys.keys.delete",
      "apikeys.keys.get",
      "apikeys.keys.getKeyString",
      "apikeys.keys.list",
      "apikeys.keys.lookup",
      "apikeys.keys.undelete",
      "apikeys.keys.update",
      "appengine.applications.create",
      "appengine.applications.get",
      "appengine.applications.update",
      "appengine.instances.delete",
      "appengine.instances.enableDebug",
      "appengine.instances.get",
      "appengine.instances.list",
      "appengine.memcache.addKey",
      "appengine.memcache.flush",
      "appengine.memcache.get",
      "appengine.memcache.getKey",
      "appengine.memcache.list",
      "appengine.memcache.update",
      "appengine.operations.get",
      "appengine.operations.list",
      "appengine.runtimes.actAsAdmin",
      "appengine.services.delete",
      "appengine.services.get",
      "appengine.services.list",
      "appengine.services.update",
      "appengine.versions.create",
      "appengine.versions.delete",
      "appengine.versions.get",
      "appengine.versions.getFileContents",
      "appengine.versions.list",
      "appengine.versions.update",
      "applianceactivation.rttCommands.approve",
      "applianceactivation.rttCommands.create",
      "applianceactivation.rttCommands.get",
      "applianceactivation.rttCommands.list",
      "applianceactivation.rttCommands.sendResult",
      "artifactregistry.aptartifacts.create",
      "artifactregistry.dockerimages.get",
      "artifactregistry.dockerimages.list",
      "artifactregistry.files.get",
      "artifactregistry.files.list",
      "artifactregistry.kfpartifacts.create",
      "artifactregistry.locations.get",
      "artifactregistry.locations.list",
      "artifactregistry.mavenartifacts.get",
      "artifactregistry.mavenartifacts.list",
      "artifactregistry.npmpackages.get",
      "artifactregistry.npmpackages.list",
      "artifactregistry.packages.delete",
      "artifactregistry.packages.get",
      "artifactregistry.packages.list",
      "artifactregistry.projectsettings.get",
      "artifactregistry.projectsettings.update",
      "artifactregistry.pythonpackages.get",
      "artifactregistry.pythonpackages.list",
      "artifactregistry.repositories.create",
      "artifactregistry.repositories.createOnPush",
      "artifactregistry.repositories.createTagBinding",
      "artifactregistry.repositories.delete",
      "artifactregistry.repositories.deleteArtifacts",
      "artifactregistry.repositories.deleteTagBinding",
      "artifactregistry.repositories.downloadArtifacts",
      "artifactregistry.repositories.get",
      "artifactregistry.repositories.getIamPolicy",
      "artifactregistry.repositories.list",
      "artifactregistry.repositories.listEffectiveTags",
      "artifactregistry.repositories.listTagBindings",
      "artifactregistry.repositories.readViaVirtualRepository",
      "artifactregistry.repositories.setIamPolicy",
      "artifactregistry.repositories.update",
      "artifactregistry.repositories.uploadArtifacts",
      "artifactregistry.tags.create",
      "artifactregistry.tags.delete",
      "artifactregistry.tags.get",
      "artifactregistry.tags.list",
      "artifactregistry.tags.update",
      "artifactregistry.versions.delete",
      "artifactregistry.versions.get",
      "artifactregistry.versions.list",
      "artifactregistry.yumartifacts.create",
      "assuredworkloads.operations.get",
      "assuredworkloads.operations.list",
      "assuredworkloads.violations.get",
      "assuredworkloads.violations.list",
      "assuredworkloads.violations.update",
      "assuredworkloads.workload.delete",
      "assuredworkloads.workload.get",
      "assuredworkloads.workload.list",
      "assuredworkloads.workload.update",
      "automl.annotationSpecs.create",
      "automl.annotationSpecs.delete",
      "automl.annotationSpecs.get",
      "automl.annotationSpecs.list",
      "automl.annotationSpecs.update",
      "automl.annotations.approve",
      "automl.annotations.create",
      "automl.annotations.list",
      "automl.annotations.manipulate",
      "automl.annotations.reject",
      "automl.columnSpecs.get",
      "automl.columnSpecs.list",
      "automl.columnSpecs.update",
      "automl.datasets.create",
      "automl.datasets.delete",
      "automl.datasets.export",
      "automl.datasets.get",
      "automl.datasets.getIamPolicy",
      "automl.datasets.import",
      "automl.datasets.list",
      "automl.datasets.setIamPolicy",
      "automl.datasets.update",
      "automl.examples.delete",
      "automl.examples.get",
      "automl.examples.list",
      "automl.examples.update",
      "automl.files.delete",
      "automl.files.list",
      "automl.humanAnnotationTasks.create",
      "automl.humanAnnotationTasks.delete",
      "automl.humanAnnotationTasks.get",
      "automl.humanAnnotationTasks.list",
      "automl.locations.get",
      "automl.locations.getIamPolicy",
      "automl.locations.list",
      "automl.locations.setIamPolicy",
      "automl.modelEvaluations.create",
      "automl.modelEvaluations.get",
      "automl.modelEvaluations.list",
      "automl.models.create",
      "automl.models.delete",
      "automl.models.deploy",
      "automl.models.export",
      "automl.models.get",
      "automl.models.getIamPolicy",
      "automl.models.list",
      "automl.models.predict",
      "automl.models.setIamPolicy",
      "automl.models.undeploy",
      "automl.operations.cancel",
      "automl.operations.delete",
      "automl.operations.get",
      "automl.operations.list",
      "automl.tableSpecs.get",
      "automl.tableSpecs.list",
      "automl.tableSpecs.update",
      "automlrecommendations.apiKeys.create",
      "automlrecommendations.apiKeys.delete",
      "automlrecommendations.apiKeys.list",
      "automlrecommendations.catalogItems.create",
      "automlrecommendations.catalogItems.delete",
      "automlrecommendations.catalogItems.get",
      "automlrecommendations.catalogItems.list",
      "automlrecommendations.catalogItems.update",
      "automlrecommendations.catalogs.getStats",
      "automlrecommendations.catalogs.list",
      "automlrecommendations.catalogs.update",
      "automlrecommendations.eventStores.getStats",
      "automlrecommendations.eventStores.list",
      "automlrecommendations.events.create",
      "automlrecommendations.events.get",
      "automlrecommendations.events.list",
      "automlrecommendations.events.purge",
      "automlrecommendations.events.rejoin",
      "automlrecommendations.placements.create",
      "automlrecommendations.placements.delete",
      "automlrecommendations.placements.getStats",
      "automlrecommendations.placements.list",
      "automlrecommendations.recommendations.create",
      "automlrecommendations.recommendations.delete",
      "automlrecommendations.recommendations.list",
      "automlrecommendations.recommendations.pause",
      "automlrecommendations.recommendations.resume",
      "automlrecommendations.recommendations.update",
      "autoscaling.sites.getIamPolicy",
      "autoscaling.sites.readRecommendations",
      "autoscaling.sites.setIamPolicy",
      "autoscaling.sites.writeMetrics",
      "autoscaling.sites.writeState",
      "backupdr.locations.get",
      "backupdr.locations.list",
      "backupdr.managementServers.access",
      "backupdr.managementServers.accessSensitiveData",
      "backupdr.managementServers.assignBackupPlans",
      "backupdr.managementServers.backupAccess",
      "backupdr.managementServers.create",
      "backupdr.managementServers.delete",
      "backupdr.managementServers.get",
      "backupdr.managementServers.getIamPolicy",
      "backupdr.managementServers.list",
      "backupdr.managementServers.manageApplications",
      "backupdr.managementServers.manageBackupPlans",
      "backupdr.managementServers.manageBackupServers",
      "backupdr.managementServers.manageBackups",
      "backupdr.managementServers.manageClones",
      "backupdr.managementServers.manageExpiration",
      "backupdr.managementServers.manageHosts",
      "backupdr.managementServers.manageInternalACL",
      "backupdr.managementServers.manageJobs",
      "backupdr.managementServers.manageLiveClones",
      "backupdr.managementServers.manageMigrations",
      "backupdr.managementServers.manageMirroring",
      "backupdr.managementServers.manageMounts",
      "backupdr.managementServers.manageRestores",
      "backupdr.managementServers.manageSensitiveData",
      "backupdr.managementServers.manageStorage",
      "backupdr.managementServers.manageSystem",
      "backupdr.managementServers.manageWorkflows",
      "backupdr.managementServers.refreshWorkflows",
      "backupdr.managementServers.runWorkflows",
      "backupdr.managementServers.setIamPolicy",
      "backupdr.managementServers.testFailOvers",
      "backupdr.managementServers.viewBackupPlans",
      "backupdr.managementServers.viewBackupServers",
      "backupdr.managementServers.viewReports",
      "backupdr.managementServers.viewStorage",
      "backupdr.managementServers.viewSystem",
      "backupdr.managementServers.viewWorkflows",
      "backupdr.operations.cancel",
      "backupdr.operations.delete",
      "backupdr.operations.get",
      "backupdr.operations.list",
      "baremetalsolution.instancequotas.list",
      "baremetalsolution.instances.attachNetwork",
      "baremetalsolution.instances.attachVolume",
      "baremetalsolution.instances.create",
      "baremetalsolution.instances.detachLun",
      "baremetalsolution.instances.detachNetwork",
      "baremetalsolution.instances.detachVolume",
      "baremetalsolution.instances.disableInteractiveSerialConsole",
      "baremetalsolution.instances.enableInteractiveSerialConsole",
      "baremetalsolution.instances.get",
      "baremetalsolution.instances.list",
      "baremetalsolution.instances.rename",
      "baremetalsolution.instances.reset",
      "baremetalsolution.instances.start",
      "baremetalsolution.instances.stop",
      "baremetalsolution.instances.update",
      "baremetalsolution.luns.create",
      "baremetalsolution.luns.delete",
      "baremetalsolution.luns.evict",
      "baremetalsolution.luns.get",
      "baremetalsolution.luns.list",
      "baremetalsolution.luns.update",
      "baremetalsolution.maintenanceevents.addProposal",
      "baremetalsolution.maintenanceevents.approve",
      "baremetalsolution.maintenanceevents.get",
      "baremetalsolution.maintenanceevents.list",
      "baremetalsolution.networkquotas.list",
      "baremetalsolution.networks.create",
      "baremetalsolution.networks.delete",
      "baremetalsolution.networks.get",
      "baremetalsolution.networks.list",
      "baremetalsolution.networks.rename",
      "baremetalsolution.networks.update",
      "baremetalsolution.nfsshares.create",
      "baremetalsolution.nfsshares.delete",
      "baremetalsolution.nfsshares.get",
      "baremetalsolution.nfsshares.list",
      "baremetalsolution.nfsshares.rename",
      "baremetalsolution.nfsshares.update",
      "baremetalsolution.operations.get",
      "baremetalsolution.osimages.list",
      "baremetalsolution.procurements.create",
      "baremetalsolution.procurements.get",
      "baremetalsolution.procurements.list",
      "baremetalsolution.skus.list",
      "baremetalsolution.snapshotschedulepolicies.create",
      "baremetalsolution.snapshotschedulepolicies.delete",
      "baremetalsolution.snapshotschedulepolicies.get",
      "baremetalsolution.snapshotschedulepolicies.list",
      "baremetalsolution.snapshotschedulepolicies.update",
      "baremetalsolution.sshKeys.create",
      "baremetalsolution.sshKeys.delete",
      "baremetalsolution.sshKeys.list",
      "baremetalsolution.storageaggregatepools.list",
      "baremetalsolution.volumequotas.list",
      "baremetalsolution.volumes.create",
      "baremetalsolution.volumes.delete",
      "baremetalsolution.volumes.evict",
      "baremetalsolution.volumes.get",
      "baremetalsolution.volumes.list",
      "baremetalsolution.volumes.rename",
      "baremetalsolution.volumes.resize",
      "baremetalsolution.volumes.update",
      "baremetalsolution.volumesnapshots.create",
      "baremetalsolution.volumesnapshots.delete",
      "baremetalsolution.volumesnapshots.get",
      "baremetalsolution.volumesnapshots.list",
      "baremetalsolution.volumesnapshots.restore",
      "batch.jobs.create",
      "batch.jobs.delete",
      "batch.jobs.get",
      "batch.jobs.list",
      "batch.locations.get",
      "batch.locations.list",
      "batch.operations.get",
      "batch.operations.list",
      "batch.states.report",
      "batch.tasks.get",
      "batch.tasks.list",
      "beyondcorp.appConnections.create",
      "beyondcorp.appConnections.delete",
      "beyondcorp.appConnections.get",
      "beyondcorp.appConnections.getIamPolicy",
      "beyondcorp.appConnections.list",
      "beyondcorp.appConnections.setIamPolicy",
      "beyondcorp.appConnections.update",
      "beyondcorp.appConnectors.create",
      "beyondcorp.appConnectors.delete",
      "beyondcorp.appConnectors.get",
      "beyondcorp.appConnectors.getIamPolicy",
      "beyondcorp.appConnectors.list",
      "beyondcorp.appConnectors.reportStatus",
      "beyondcorp.appConnectors.setIamPolicy",
      "beyondcorp.appConnectors.update",
      "beyondcorp.appGateways.create",
      "beyondcorp.appGateways.delete",
      "beyondcorp.appGateways.get",
      "beyondcorp.appGateways.getIamPolicy",
      "beyondcorp.appGateways.list",
      "beyondcorp.appGateways.setIamPolicy",
      "beyondcorp.appGateways.update",
      "beyondcorp.clientConnectorServices.create",
      "beyondcorp.clientConnectorServices.delete",
      "beyondcorp.clientConnectorServices.get",
      "beyondcorp.clientConnectorServices.getIamPolicy",
      "beyondcorp.clientConnectorServices.list",
      "beyondcorp.clientConnectorServices.setIamPolicy",
      "beyondcorp.clientConnectorServices.update",
      "beyondcorp.clientGateways.create",
      "beyondcorp.clientGateways.delete",
      "beyondcorp.clientGateways.get",
      "beyondcorp.clientGateways.getIamPolicy",
      "beyondcorp.clientGateways.list",
      "beyondcorp.clientGateways.setIamPolicy",
      "beyondcorp.locations.get",
      "beyondcorp.locations.list",
      "beyondcorp.operations.cancel",
      "beyondcorp.operations.delete",
      "beyondcorp.operations.get",
      "beyondcorp.operations.list",
      "beyondcorp.subscriptions.create",
      "beyondcorp.subscriptions.get",
      "beyondcorp.subscriptions.list",
      "biglake.catalogs.create",
      "biglake.catalogs.delete",
      "biglake.catalogs.get",
      "biglake.catalogs.list",
      "biglake.databases.create",
      "biglake.databases.delete",
      "biglake.databases.get",
      "biglake.databases.list",
      "biglake.databases.update",
      "biglake.locks.check",
      "biglake.locks.create",
      "biglake.locks.delete",
      "biglake.locks.list",
      "biglake.tables.create",
      "biglake.tables.delete",
      "biglake.tables.get",
      "biglake.tables.list",
      "biglake.tables.lock",
      "biglake.tables.update",
      "bigquery.bireservations.get",
      "bigquery.bireservations.update",
      "bigquery.capacityCommitments.create",
      "bigquery.capacityCommitments.delete",
      "bigquery.capacityCommitments.get",
      "bigquery.capacityCommitments.list",
      "bigquery.capacityCommitments.update",
      "bigquery.config.get",
      "bigquery.config.update",
      "bigquery.connections.create",
      "bigquery.connections.delegate",
      "bigquery.connections.delete",
      "bigquery.connections.get",
      "bigquery.connections.getIamPolicy",
      "bigquery.connections.list",
      "bigquery.connections.setIamPolicy",
      "bigquery.connections.update",
      "bigquery.connections.updateTag",
      "bigquery.connections.use",
      "bigquery.dataPolicies.create",
      "bigquery.dataPolicies.delete",
      "bigquery.dataPolicies.get",
      "bigquery.dataPolicies.getIamPolicy",
      "bigquery.dataPolicies.list",
      "bigquery.dataPolicies.setIamPolicy",
      "bigquery.dataPolicies.update",
      "bigquery.datasets.create",
      "bigquery.datasets.createTagBinding",
      "bigquery.datasets.delete",
      "bigquery.datasets.deleteTagBinding",
      "bigquery.datasets.get",
      "bigquery.datasets.getIamPolicy",
      "bigquery.datasets.link",
      "bigquery.datasets.listEffectiveTags",
      "bigquery.datasets.listSharedDatasetUsage",
      "bigquery.datasets.listTagBindings",
      "bigquery.datasets.setIamPolicy",
      "bigquery.datasets.update",
      "bigquery.datasets.updateTag",
      "bigquery.jobs.create",
      "bigquery.jobs.delete",
      "bigquery.jobs.get",
      "bigquery.jobs.list",
      "bigquery.jobs.listAll",
      "bigquery.jobs.listExecutionMetadata",
      "bigquery.jobs.update",
      "bigquery.models.create",
      "bigquery.models.delete",
      "bigquery.models.export",
      "bigquery.models.getData",
      "bigquery.models.getMetadata",
      "bigquery.models.list",
      "bigquery.models.updateData",
      "bigquery.models.updateMetadata",
      "bigquery.models.updateTag",
      "bigquery.readsessions.create",
      "bigquery.readsessions.getData",
      "bigquery.readsessions.update",
      "bigquery.reservationAssignments.create",
      "bigquery.reservationAssignments.delete",
      "bigquery.reservationAssignments.list",
      "bigquery.reservationAssignments.search",
      "bigquery.reservations.create",
      "bigquery.reservations.delete",
      "bigquery.reservations.get",
      "bigquery.reservations.list",
      "bigquery.reservations.update",
      "bigquery.routines.create",
      "bigquery.routines.delete",
      "bigquery.routines.get",
      "bigquery.routines.list",
      "bigquery.routines.update",
      "bigquery.routines.updateTag",
      "bigquery.rowAccessPolicies.create",
      "bigquery.rowAccessPolicies.delete",
      "bigquery.rowAccessPolicies.getIamPolicy",
      "bigquery.rowAccessPolicies.list",
      "bigquery.rowAccessPolicies.setIamPolicy",
      "bigquery.rowAccessPolicies.update",
      "bigquery.savedqueries.create",
      "bigquery.savedqueries.delete",
      "bigquery.savedqueries.get",
      "bigquery.savedqueries.list",
      "bigquery.savedqueries.update",
      "bigquery.tables.createIndex",
      "bigquery.tables.createSnapshot",
      "bigquery.tables.deleteIndex",
      "bigquery.tables.deleteSnapshot",
      "bigquery.tables.getIamPolicy",
      "bigquery.tables.replicateData",
      "bigquery.tables.restoreSnapshot",
      "bigquery.tables.setIamPolicy",
      "bigquery.transfers.get",
      "bigquery.transfers.update",
      "bigquerymigration.locations.get",
      "bigquerymigration.locations.list",
      "bigquerymigration.subtaskTypes.executeTask",
      "bigquerymigration.subtasks.create",
      "bigquerymigration.subtasks.executeTask",
      "bigquerymigration.subtasks.get",
      "bigquerymigration.subtasks.list",
      "bigquerymigration.taskTypes.orchestrateTask",
      "bigquerymigration.translation.translate",
      "bigquerymigration.workflows.create",
      "bigquerymigration.workflows.delete",
      "bigquerymigration.workflows.get",
      "bigquerymigration.workflows.list",
      "bigquerymigration.workflows.orchestrateTask",
      "bigquerymigration.workflows.update",
      "bigtable.appProfiles.create",
      "bigtable.appProfiles.delete",
      "bigtable.appProfiles.get",
      "bigtable.appProfiles.list",
      "bigtable.appProfiles.update",
      "bigtable.backups.create",
      "bigtable.backups.delete",
      "bigtable.backups.get",
      "bigtable.backups.getIamPolicy",
      "bigtable.backups.list",
      "bigtable.backups.read",
      "bigtable.backups.restore",
      "bigtable.backups.setIamPolicy",
      "bigtable.backups.update",
      "bigtable.clusters.create",
      "bigtable.clusters.delete",
      "bigtable.clusters.get",
      "bigtable.clusters.list",
      "bigtable.clusters.update",
      "bigtable.hotTablets.list",
      "bigtable.instances.create",
      "bigtable.instances.createTagBinding",
      "bigtable.instances.delete",
      "bigtable.instances.deleteTagBinding",
      "bigtable.instances.get",
      "bigtable.instances.getIamPolicy",
      "bigtable.instances.list",
      "bigtable.instances.listEffectiveTags",
      "bigtable.instances.listTagBindings",
      "bigtable.instances.ping",
      "bigtable.instances.setIamPolicy",
      "bigtable.instances.update",
      "bigtable.keyvisualizer.get",
      "bigtable.keyvisualizer.list",
      "bigtable.locations.list",
      "bigtable.tables.checkConsistency",
      "bigtable.tables.create",
      "bigtable.tables.delete",
      "bigtable.tables.generateConsistencyToken",
      "bigtable.tables.get",
      "bigtable.tables.getIamPolicy",
      "bigtable.tables.list",
      "bigtable.tables.mutateRows",
      "bigtable.tables.readRows",
      "bigtable.tables.sampleRowKeys",
      "bigtable.tables.setIamPolicy",
      "bigtable.tables.undelete",
      "bigtable.tables.update",
      "billing.billingAccountPrice.get",
      "billing.billingAccountServices.get",
      "billing.billingAccountServices.list",
      "billing.billingAccountSkuGroupSkus.get",
      "billing.billingAccountSkuGroupSkus.list",
      "billing.billingAccountSkuGroups.get",
      "billing.billingAccountSkuGroups.list",
      "billing.billingAccountSkus.get",
      "billing.billingAccountSkus.list",
      "billing.finOpsBenchmarkInformation.get",
      "billing.finOpsHealthInformation.get",
      "billing.resourceCosts.get",
      "binaryauthorization.attestors.create",
      "binaryauthorization.attestors.delete",
      "binaryauthorization.attestors.get",
      "binaryauthorization.attestors.getIamPolicy",
      "binaryauthorization.attestors.list",
      "binaryauthorization.attestors.setIamPolicy",
      "binaryauthorization.attestors.update",
      "binaryauthorization.attestors.verifyImageAttested",
      "binaryauthorization.continuousValidationConfig.get",
      "binaryauthorization.continuousValidationConfig.getIamPolicy",
      "binaryauthorization.continuousValidationConfig.setIamPolicy",
      "binaryauthorization.continuousValidationConfig.update",
      "binaryauthorization.platformPolicies.create",
      "binaryauthorization.platformPolicies.delete",
      "binaryauthorization.platformPolicies.evaluatePolicy",
      "binaryauthorization.platformPolicies.get",
      "binaryauthorization.platformPolicies.list",
      "binaryauthorization.platformPolicies.replace",
      "binaryauthorization.policy.evaluatePolicy",
      "binaryauthorization.policy.get",
      "binaryauthorization.policy.getIamPolicy",
      "binaryauthorization.policy.setIamPolicy",
      "binaryauthorization.policy.update",
      "blockchainnodeengine.blockchainNodes.create",
      "blockchainnodeengine.blockchainNodes.delete",
      "blockchainnodeengine.blockchainNodes.get",
      "blockchainnodeengine.blockchainNodes.list",
      "blockchainnodeengine.blockchainNodes.update",
      "blockchainnodeengine.locations.get",
      "blockchainnodeengine.locations.list",
      "blockchainnodeengine.operations.cancel",
      "blockchainnodeengine.operations.delete",
      "blockchainnodeengine.operations.get",
      "blockchainnodeengine.operations.list",
      "carestudio.patients.get",
      "carestudio.patients.list",
      "certificatemanager.certissuanceconfigs.create",
      "certificatemanager.certissuanceconfigs.delete",
      "certificatemanager.certissuanceconfigs.get",
      "certificatemanager.certissuanceconfigs.list",
      "certificatemanager.certissuanceconfigs.update",
      "certificatemanager.certissuanceconfigs.use",
      "certificatemanager.certmapentries.create",
      "certificatemanager.certmapentries.delete",
      "certificatemanager.certmapentries.get",
      "certificatemanager.certmapentries.getIamPolicy",
      "certificatemanager.certmapentries.list",
      "certificatemanager.certmapentries.setIamPolicy",
      "certificatemanager.certmapentries.update",
      "certificatemanager.certmaps.create",
      "certificatemanager.certmaps.delete",
      "certificatemanager.certmaps.get",
      "certificatemanager.certmaps.getIamPolicy",
      "certificatemanager.certmaps.list",
      "certificatemanager.certmaps.setIamPolicy",
      "certificatemanager.certmaps.update",
      "certificatemanager.certmaps.use",
      "certificatemanager.certs.create",
      "certificatemanager.certs.delete",
      "certificatemanager.certs.get",
      "certificatemanager.certs.getIamPolicy",
      "certificatemanager.certs.list",
      "certificatemanager.certs.setIamPolicy",
      "certificatemanager.certs.update",
      "certificatemanager.certs.use",
      "certificatemanager.dnsauthorizations.create",
      "certificatemanager.dnsauthorizations.delete",
      "certificatemanager.dnsauthorizations.get",
      "certificatemanager.dnsauthorizations.getIamPolicy",
      "certificatemanager.dnsauthorizations.list",
      "certificatemanager.dnsauthorizations.setIamPolicy",
      "certificatemanager.dnsauthorizations.update",
      "certificatemanager.dnsauthorizations.use",
      "certificatemanager.locations.get",
      "certificatemanager.locations.list",
      "certificatemanager.operations.cancel",
      "certificatemanager.operations.delete",
      "certificatemanager.operations.get",
      "certificatemanager.operations.list",
      "certificatemanager.trustconfigs.create",
      "certificatemanager.trustconfigs.delete",
      "certificatemanager.trustconfigs.get",
      "certificatemanager.trustconfigs.list",
      "certificatemanager.trustconfigs.update",
      "certificatemanager.trustconfigs.use",
      "chat.bots.get",
      "chat.bots.update",
      "chronicle.collectors.create",
      "chronicle.collectors.delete",
      "chronicle.collectors.get",
      "chronicle.collectors.list",
      "chronicle.collectors.update",
      "chronicle.curatedRuleSetCategories.countAllCuratedRuleSetDetections",
      "chronicle.curatedRuleSetCategories.get",
      "chronicle.curatedRuleSetCategories.list",
      "chronicle.curatedRuleSetDeployments.batchUpdate",
      "chronicle.curatedRuleSetDeployments.get",
      "chronicle.curatedRuleSetDeployments.list",
      "chronicle.curatedRuleSetDeployments.update",
      "chronicle.curatedRuleSets.countCuratedRuleSetDetections",
      "chronicle.curatedRuleSets.get",
      "chronicle.curatedRuleSets.list",
      "chronicle.curatedRules.get",
      "chronicle.curatedRules.list",
      "chronicle.dashboards.copy",
      "chronicle.dashboards.create",
      "chronicle.dashboards.delete",
      "chronicle.dashboards.edit",
      "chronicle.dashboards.get",
      "chronicle.dashboards.list",
      "chronicle.dashboards.schedule",
      "chronicle.extensionValidationReports.get",
      "chronicle.extensionValidationReports.list",
      "chronicle.feedSourceTypeSchemas.list",
      "chronicle.feeds.create",
      "chronicle.feeds.delete",
      "chronicle.feeds.disable",
      "chronicle.feeds.enable",
      "chronicle.feeds.get",
      "chronicle.feeds.list",
      "chronicle.feeds.update",
      "chronicle.forwarders.create",
      "chronicle.forwarders.delete",
      "chronicle.forwarders.generate",
      "chronicle.forwarders.get",
      "chronicle.forwarders.list",
      "chronicle.forwarders.update",
      "chronicle.instances.get",
      "chronicle.instances.report",
      "chronicle.legacies.legacyGetCuratedRulesTrends",
      "chronicle.legacies.legacyGetRuleCounts",
      "chronicle.legacies.legacyGetRulesTrends",
      "chronicle.legacies.legacyUpdateFinding",
      "chronicle.logTypeSchemas.list",
      "chronicle.multitenantDirectories.get",
      "chronicle.operations.cancel",
      "chronicle.operations.delete",
      "chronicle.operations.get",
      "chronicle.operations.list",
      "chronicle.operations.wait",
      "chronicle.parserExtensions.activate",
      "chronicle.parserExtensions.create",
      "chronicle.parserExtensions.delete",
      "chronicle.parserExtensions.generateKeyValueMappings",
      "chronicle.parserExtensions.get",
      "chronicle.parserExtensions.legacySubmitParserExtension",
      "chronicle.parserExtensions.list",
      "chronicle.parserExtensions.removeSyslog",
      "chronicle.parsers.activate",
      "chronicle.parsers.activateReleaseCandidate",
      "chronicle.parsers.copyPrebuiltParser",
      "chronicle.parsers.create",
      "chronicle.parsers.deactivate",
      "chronicle.parsers.delete",
      "chronicle.parsers.get",
      "chronicle.parsers.list",
      "chronicle.parsers.runParser",
      "chronicle.parsingErrors.list",
      "chronicle.referenceLists.create",
      "chronicle.referenceLists.get",
      "chronicle.referenceLists.list",
      "chronicle.referenceLists.update",
      "chronicle.referenceLists.verifyReferenceList",
      "chronicle.retrohunts.create",
      "chronicle.retrohunts.get",
      "chronicle.retrohunts.list",
      "chronicle.ruleDeployments.get",
      "chronicle.ruleDeployments.list",
      "chronicle.ruleDeployments.update",
      "chronicle.ruleExecutionErrors.list",
      "chronicle.rules.create",
      "chronicle.rules.get",
      "chronicle.rules.list",
      "chronicle.rules.listRevisions",
      "chronicle.rules.update",
      "chronicle.rules.verifyRuleText",
      "chronicle.validationErrors.list",
      "chronicle.validationReports.get",
      "chroniclesm.gcpAssociations.create",
      "chroniclesm.gcpAssociations.delete",
      "chroniclesm.gcpAssociations.get",
      "chroniclesm.gcpSettings.get",
      "chroniclesm.gcpSettings.update",
      "clientauthconfig.brands.create",
      "clientauthconfig.brands.delete",
      "clientauthconfig.brands.get",
      "clientauthconfig.brands.list",
      "clientauthconfig.brands.update",
      "clientauthconfig.clients.create",
      "clientauthconfig.clients.createSecret",
      "clientauthconfig.clients.delete",
      "clientauthconfig.clients.get",
      "clientauthconfig.clients.getWithSecret",
      "clientauthconfig.clients.list",
      "clientauthconfig.clients.listWithSecrets",
      "clientauthconfig.clients.undelete",
      "clientauthconfig.clients.update",
      "cloud.locations.get",
      "cloud.locations.list",
      "cloudasset.assets.analyzeIamPolicy",
      "cloudasset.assets.analyzeMove",
      "cloudasset.assets.analyzeOrgPolicy",
      "cloudasset.assets.exportAccessLevel",
      "cloudasset.assets.exportAccessPolicy",
      "cloudasset.assets.exportAiplatformBatchPredictionJobs",
      "cloudasset.assets.exportAiplatformCustomJobs",
      "cloudasset.assets.exportAiplatformDataLabelingJobs",
      "cloudasset.assets.exportAiplatformDatasets",
      "cloudasset.assets.exportAiplatformEndpoints",
      "cloudasset.assets.exportAiplatformHyperparameterTuningJobs",
      "cloudasset.assets.exportAiplatformMetadataStores",
      "cloudasset.assets.exportAiplatformModelDeploymentMonitoringJobs",
      "cloudasset.assets.exportAiplatformModels",
      "cloudasset.assets.exportAiplatformPipelineJobs",
      "cloudasset.assets.exportAiplatformSpecialistPools",
      "cloudasset.assets.exportAiplatformTrainingPipelines",
      "cloudasset.assets.exportAllAccessPolicy",
      "cloudasset.assets.exportAnthosConnectedCluster",
      "cloudasset.assets.exportAnthosedgeCluster",
      "cloudasset.assets.exportApigatewayApi",
      "cloudasset.assets.exportApigatewayApiConfig",
      "cloudasset.assets.exportApigatewayGateway",
      "cloudasset.assets.exportApikeysKeys",
      "cloudasset.assets.exportAppengineApplications",
      "cloudasset.assets.exportAppengineServices",
      "cloudasset.assets.exportAppengineVersions",
      "cloudasset.assets.exportArtifactregistryDockerImages",
      "cloudasset.assets.exportArtifactregistryRepositories",
      "cloudasset.assets.exportAssuredWorkloadsWorkloads",
      "cloudasset.assets.exportBeyondCorpApiGateways",
      "cloudasset.assets.exportBeyondCorpAppConnections",
      "cloudasset.assets.exportBeyondCorpAppConnectors",
      "cloudasset.assets.exportBeyondCorpAppGateways",
      "cloudasset.assets.exportBeyondCorpClientConnectorServices",
      "cloudasset.assets.exportBeyondCorpClientGateways",
      "cloudasset.assets.exportBigqueryDatasets",
      "cloudasset.assets.exportBigqueryModels",
      "cloudasset.assets.exportBigqueryTables",
      "cloudasset.assets.exportBigtableAppProfile",
      "cloudasset.assets.exportBigtableBackup",
      "cloudasset.assets.exportBigtableCluster",
      "cloudasset.assets.exportBigtableInstance",
      "cloudasset.assets.exportBigtableTable",
      "cloudasset.assets.exportCloudAssetFeeds",
      "cloudasset.assets.exportCloudDeployDeliveryPipelines",
      "cloudasset.assets.exportCloudDeployReleases",
      "cloudasset.assets.exportCloudDeployRollouts",
      "cloudasset.assets.exportCloudDeployTargets",
      "cloudasset.assets.exportCloudDocumentAIEvaluation",
      "cloudasset.assets.exportCloudDocumentAIHumanReviewConfig",
      "cloudasset.assets.exportCloudDocumentAILabelerPool",
      "cloudasset.assets.exportCloudDocumentAIProcessor",
      "cloudasset.assets.exportCloudDocumentAIProcessorVersion",
      "cloudasset.assets.exportCloudbillingBillingAccounts",
      "cloudasset.assets.exportCloudbillingProjectBillingInfos",
      "cloudasset.assets.exportCloudfunctionsFunctions",
      "cloudasset.assets.exportCloudfunctionsGen2Functions",
      "cloudasset.assets.exportCloudkmsCryptoKeyVersions",
      "cloudasset.assets.exportCloudkmsCryptoKeys",
      "cloudasset.assets.exportCloudkmsEkmConnections",
      "cloudasset.assets.exportCloudkmsImportJobs",
      "cloudasset.assets.exportCloudkmsKeyRings",
      "cloudasset.assets.exportCloudmemcacheInstances",
      "cloudasset.assets.exportCloudresourcemanagerFolders",
      "cloudasset.assets.exportCloudresourcemanagerOrganizations",
      "cloudasset.assets.exportCloudresourcemanagerProjects",
      "cloudasset.assets.exportCloudresourcemanagerTagBindings",
      "cloudasset.assets.exportCloudresourcemanagerTagKeys",
      "cloudasset.assets.exportCloudresourcemanagerTagValues",
      "cloudasset.assets.exportComposerEnvironments",
      "cloudasset.assets.exportComputeAddress",
      "cloudasset.assets.exportComputeAutoscalers",
      "cloudasset.assets.exportComputeBackendBuckets",
      "cloudasset.assets.exportComputeBackendServices",
      "cloudasset.assets.exportComputeCommitments",
      "cloudasset.assets.exportComputeDisks",
      "cloudasset.assets.exportComputeExternalVpnGateways",
      "cloudasset.assets.exportComputeFirewallPolicies",
      "cloudasset.assets.exportComputeFirewalls",
      "cloudasset.assets.exportComputeForwardingRules",
      "cloudasset.assets.exportComputeGlobalAddress",
      "cloudasset.assets.exportComputeGlobalForwardingRules",
      "cloudasset.assets.exportComputeHealthChecks",
      "cloudasset.assets.exportComputeHttpHealthChecks",
      "cloudasset.assets.exportComputeHttpsHealthChecks",
      "cloudasset.assets.exportComputeImages",
      "cloudasset.assets.exportComputeInstanceGroupManagers",
      "cloudasset.assets.exportComputeInstanceGroups",
      "cloudasset.assets.exportComputeInstanceTemplates",
      "cloudasset.assets.exportComputeInstances",
      "cloudasset.assets.exportComputeInterconnect",
      "cloudasset.assets.exportComputeInterconnectAttachment",
      "cloudasset.assets.exportComputeLicenses",
      "cloudasset.assets.exportComputeNetworkEndpointGroups",
      "cloudasset.assets.exportComputeNetworks",
      "cloudasset.assets.exportComputeNodeGroups",
      "cloudasset.assets.exportComputeNodeTemplates",
      "cloudasset.assets.exportComputePacketMirrorings",
      "cloudasset.assets.exportComputeProjects",
      "cloudasset.assets.exportComputeRegionAutoscaler",
      "cloudasset.assets.exportComputeRegionBackendServices",
      "cloudasset.assets.exportComputeRegionDisk",
      "cloudasset.assets.exportComputeRegionInstanceGroup",
      "cloudasset.assets.exportComputeRegionInstanceGroupManager",
      "cloudasset.assets.exportComputeReservations",
      "cloudasset.assets.exportComputeResourcePolicies",
      "cloudasset.assets.exportComputeRouters",
      "cloudasset.assets.exportComputeRoutes",
      "cloudasset.assets.exportComputeSecurityPolicy",
      "cloudasset.assets.exportComputeServiceAttachments",
      "cloudasset.assets.exportComputeSnapshots",
      "cloudasset.assets.exportComputeSslCertificates",
      "cloudasset.assets.exportComputeSslPolicies",
      "cloudasset.assets.exportComputeSubnetworks",
      "cloudasset.assets.exportComputeTargetHttpProxies",
      "cloudasset.assets.exportComputeTargetHttpsProxies",
      "cloudasset.assets.exportComputeTargetInstances",
      "cloudasset.assets.exportComputeTargetPools",
      "cloudasset.assets.exportComputeTargetSslProxies",
      "cloudasset.assets.exportComputeTargetTcpProxies",
      "cloudasset.assets.exportComputeTargetVpnGateways",
      "cloudasset.assets.exportComputeUrlMaps",
      "cloudasset.assets.exportComputeVpnGateways",
      "cloudasset.assets.exportComputeVpnTunnels",
      "cloudasset.assets.exportConnectorsConnections",
      "cloudasset.assets.exportConnectorsConnectorVersions",
      "cloudasset.assets.exportConnectorsConnectors",
      "cloudasset.assets.exportConnectorsProviders",
      "cloudasset.assets.exportConnectorsRuntimeConfigs",
      "cloudasset.assets.exportContainerAppsDeployment",
      "cloudasset.assets.exportContainerAppsReplicaSets",
      "cloudasset.assets.exportContainerBatchJobs",
      "cloudasset.assets.exportContainerClusterrole",
      "cloudasset.assets.exportContainerClusterrolebinding",
      "cloudasset.assets.exportContainerClusters",
      "cloudasset.assets.exportContainerExtensionsIngresses",
      "cloudasset.assets.exportContainerJobs",
      "cloudasset.assets.exportContainerNamespace",
      "cloudasset.assets.exportContainerNetworkingIngresses",
      "cloudasset.assets.exportContainerNetworkingNetworkPolicies",
      "cloudasset.assets.exportContainerNode",
      "cloudasset.assets.exportContainerNodepool",
      "cloudasset.assets.exportContainerPod",
      "cloudasset.assets.exportContainerReplicaSets",
      "cloudasset.assets.exportContainerRole",
      "cloudasset.assets.exportContainerRolebinding",
      "cloudasset.assets.exportContainerServices",
      "cloudasset.assets.exportContainerregistryImage",
      "cloudasset.assets.exportDataMigrationConnectionProfiles",
      "cloudasset.assets.exportDataMigrationMigrationJobs",
      "cloudasset.assets.exportDataflowJobs",
      "cloudasset.assets.exportDatafusionInstance",
      "cloudasset.assets.exportDataplexAssets",
      "cloudasset.assets.exportDataplexLakes",
      "cloudasset.assets.exportDataplexTasks",
      "cloudasset.assets.exportDataplexZones",
      "cloudasset.assets.exportDataprocAutoscalingPolicies",
      "cloudasset.assets.exportDataprocBatches",
      "cloudasset.assets.exportDataprocClusters",
      "cloudasset.assets.exportDataprocJobs",
      "cloudasset.assets.exportDataprocSessions",
      "cloudasset.assets.exportDataprocWorkflowTemplates",
      "cloudasset.assets.exportDatastreamConnectionProfile",
      "cloudasset.assets.exportDatastreamPrivateConnection",
      "cloudasset.assets.exportDatastreamStream",
      "cloudasset.assets.exportDialogflowAgents",
      "cloudasset.assets.exportDialogflowConversationProfiles",
      "cloudasset.assets.exportDialogflowKnowledgeBases",
      "cloudasset.assets.exportDialogflowLocationSettings",
      "cloudasset.assets.exportDlpDeidentifyTemplates",
      "cloudasset.assets.exportDlpDlpJobs",
      "cloudasset.assets.exportDlpInspectTemplates",
      "cloudasset.assets.exportDlpJobTriggers",
      "cloudasset.assets.exportDlpStoredInfoTypes",
      "cloudasset.assets.exportDnsManagedZones",
      "cloudasset.assets.exportDnsPolicies",
      "cloudasset.assets.exportDomainsRegistrations",
      "cloudasset.assets.exportEventarcTriggers",
      "cloudasset.assets.exportFileBackups",
      "cloudasset.assets.exportFileInstances",
      "cloudasset.assets.exportFirebaseAppInfos",
      "cloudasset.assets.exportFirebaseProjects",
      "cloudasset.assets.exportFirestoreDatabases",
      "cloudasset.assets.exportGKEHubFeatures",
      "cloudasset.assets.exportGKEHubMemberships",
      "cloudasset.assets.exportGameservicesGameServerClusters",
      "cloudasset.assets.exportGameservicesGameServerConfigs",
      "cloudasset.assets.exportGameservicesGameServerDeployments",
      "cloudasset.assets.exportGameservicesRealms",
      "cloudasset.assets.exportGkeBackupBackupPlans",
      "cloudasset.assets.exportGkeBackupBackups",
      "cloudasset.assets.exportGkeBackupRestorePlans",
      "cloudasset.assets.exportGkeBackupRestores",
      "cloudasset.assets.exportGkeBackupVolumeBackups",
      "cloudasset.assets.exportGkeBackupVolumeRestores",
      "cloudasset.assets.exportHealthcareConsentStores",
      "cloudasset.assets.exportHealthcareDatasets",
      "cloudasset.assets.exportHealthcareDicomStores",
      "cloudasset.assets.exportHealthcareFhirStores",
      "cloudasset.assets.exportHealthcareHl7V2Stores",
      "cloudasset.assets.exportIamPolicy",
      "cloudasset.assets.exportIamRoles",
      "cloudasset.assets.exportIamServiceAccountKeys",
      "cloudasset.assets.exportIamServiceAccounts",
      "cloudasset.assets.exportIapTunnel",
      "cloudasset.assets.exportIapTunnelInstances",
      "cloudasset.assets.exportIapTunnelZones",
      "cloudasset.assets.exportIapWeb",
      "cloudasset.assets.exportIapWebServiceVersion",
      "cloudasset.assets.exportIapWebServices",
      "cloudasset.assets.exportIapWebType",
      "cloudasset.assets.exportIdsEndpoints",
      "cloudasset.assets.exportIntegrationsAuthConfigs",
      "cloudasset.assets.exportIntegrationsCertificates",
      "cloudasset.assets.exportIntegrationsExecutions",
      "cloudasset.assets.exportIntegrationsIntegrationVersions",
      "cloudasset.assets.exportIntegrationsIntegrations",
      "cloudasset.assets.exportIntegrationsSfdcChannels",
      "cloudasset.assets.exportIntegrationsSfdcInstances",
      "cloudasset.assets.exportIntegrationsSuspensions",
      "cloudasset.assets.exportLoggingLogMetrics",
      "cloudasset.assets.exportLoggingLogSinks",
      "cloudasset.assets.exportManagedidentitiesDomain",
      "cloudasset.assets.exportMetastoreBackups",
      "cloudasset.assets.exportMetastoreMetadataImports",
      "cloudasset.assets.exportMetastoreServices",
      "cloudasset.assets.exportMonitoringAlertPolicies",
      "cloudasset.assets.exportNetworkConnectivityHubs",
      "cloudasset.assets.exportNetworkConnectivitySpokes",
      "cloudasset.assets.exportNetworkManagementConnectivityTests",
      "cloudasset.assets.exportNetworkServicesEndpointPolicies",
      "cloudasset.assets.exportNetworkServicesGateways",
      "cloudasset.assets.exportNetworkServicesGrpcRoutes",
      "cloudasset.assets.exportNetworkServicesHttpRoutes",
      "cloudasset.assets.exportNetworkServicesMeshes",
      "cloudasset.assets.exportNetworkServicesServiceBindings",
      "cloudasset.assets.exportNetworkServicesTcpRoutes",
      "cloudasset.assets.exportNetworkServicesTlsRoutes",
      "cloudasset.assets.exportOSConfigOSPolicyAssignmentReports",
      "cloudasset.assets.exportOSConfigOSPolicyAssignments",
      "cloudasset.assets.exportOSConfigVulnerabilityReports",
      "cloudasset.assets.exportOSInventories",
      "cloudasset.assets.exportOrgPolicy",
      "cloudasset.assets.exportPatchDeployments",
      "cloudasset.assets.exportPubsubSnapshots",
      "cloudasset.assets.exportPubsubSubscriptions",
      "cloudasset.assets.exportPubsubTopics",
      "cloudasset.assets.exportRedisInstances",
      "cloudasset.assets.exportResource",
      "cloudasset.assets.exportSecretManagerSecretVersions",
      "cloudasset.assets.exportSecretManagerSecrets",
      "cloudasset.assets.exportServiceDirectoryNamespaces",
      "cloudasset.assets.exportServicePerimeter",
      "cloudasset.assets.exportServiceconsumermanagementConsumerProperty",
      "cloudasset.assets.exportServiceconsumermanagementConsumerQuotaLimits",
      "cloudasset.assets.exportServiceconsumermanagementConsumers",
      "cloudasset.assets.exportServiceconsumermanagementProducerOverrides",
      "cloudasset.assets.exportServiceconsumermanagementTenancyUnits",
      "cloudasset.assets.exportServiceconsumermanagementVisibility",
      "cloudasset.assets.exportServicemanagementServices",
      "cloudasset.assets.exportServiceusageAdminOverrides",
      "cloudasset.assets.exportServiceusageConsumerOverrides",
      "cloudasset.assets.exportServiceusageServices",
      "cloudasset.assets.exportSpannerBackups",
      "cloudasset.assets.exportSpannerDatabases",
      "cloudasset.assets.exportSpannerInstances",
      "cloudasset.assets.exportSpeakerIdPhrases",
      "cloudasset.assets.exportSpeakerIdSettings",
      "cloudasset.assets.exportSpeakerIdSpeakers",
      "cloudasset.assets.exportSpeechCustomClasses",
      "cloudasset.assets.exportSpeechPhraseSets",
      "cloudasset.assets.exportSqladminBackupRuns",
      "cloudasset.assets.exportSqladminInstances",
      "cloudasset.assets.exportStorageBuckets",
      "cloudasset.assets.exportTpuNodes",
      "cloudasset.assets.exportVpcaccessConnector",
      "cloudasset.assets.listAccessLevel",
      "cloudasset.assets.listAccessPolicy",
      "cloudasset.assets.listAiplatformBatchPredictionJobs",
      "cloudasset.assets.listAiplatformCustomJobs",
      "cloudasset.assets.listAiplatformDataLabelingJobs",
      "cloudasset.assets.listAiplatformDatasets",
      "cloudasset.assets.listAiplatformEndpoints",
      "cloudasset.assets.listAiplatformHyperparameterTuningJobs",
      "cloudasset.assets.listAiplatformMetadataStores",
      "cloudasset.assets.listAiplatformModelDeploymentMonitoringJobs",
      "cloudasset.assets.listAiplatformModels",
      "cloudasset.assets.listAiplatformPipelineJobs",
      "cloudasset.assets.listAiplatformSpecialistPools",
      "cloudasset.assets.listAiplatformTrainingPipelines",
      "cloudasset.assets.listAllAccessPolicy",
      "cloudasset.assets.listAnthosConnectedCluster",
      "cloudasset.assets.listAnthosedgeCluster",
      "cloudasset.assets.listApigatewayApi",
      "cloudasset.assets.listApigatewayApiConfig",
      "cloudasset.assets.listApigatewayGateway",
      "cloudasset.assets.listApikeysKeys",
      "cloudasset.assets.listAppengineApplications",
      "cloudasset.assets.listAppengineServices",
      "cloudasset.assets.listAppengineVersions",
      "cloudasset.assets.listArtifactregistryDockerImages",
      "cloudasset.assets.listArtifactregistryRepositories",
      "cloudasset.assets.listAssuredWorkloadsWorkloads",
      "cloudasset.assets.listBeyondCorpApiGateways",
      "cloudasset.assets.listBeyondCorpAppConnections",
      "cloudasset.assets.listBeyondCorpAppConnectors",
      "cloudasset.assets.listBeyondCorpAppGateways",
      "cloudasset.assets.listBeyondCorpClientConnectorServices",
      "cloudasset.assets.listBeyondCorpClientGateways",
      "cloudasset.assets.listBigqueryDatasets",
      "cloudasset.assets.listBigqueryModels",
      "cloudasset.assets.listBigqueryTables",
      "cloudasset.assets.listBigtableAppProfile",
      "cloudasset.assets.listBigtableBackup",
      "cloudasset.assets.listBigtableCluster",
      "cloudasset.assets.listBigtableInstance",
      "cloudasset.assets.listBigtableTable",
      "cloudasset.assets.listCloudAssetFeeds",
      "cloudasset.assets.listCloudDeployDeliveryPipelines",
      "cloudasset.assets.listCloudDeployReleases",
      "cloudasset.assets.listCloudDeployRollouts",
      "cloudasset.assets.listCloudDeployTargets",
      "cloudasset.assets.listCloudDocumentAIEvaluation",
      "cloudasset.assets.listCloudDocumentAIHumanReviewConfig",
      "cloudasset.assets.listCloudDocumentAILabelerPool",
      "cloudasset.assets.listCloudDocumentAIProcessor",
      "cloudasset.assets.listCloudDocumentAIProcessorVersion",
      "cloudasset.assets.listCloudbillingBillingAccounts",
      "cloudasset.assets.listCloudbillingProjectBillingInfos",
      "cloudasset.assets.listCloudfunctionsFunctions",
      "cloudasset.assets.listCloudfunctionsGen2Functions",
      "cloudasset.assets.listCloudkmsCryptoKeyVersions",
      "cloudasset.assets.listCloudkmsCryptoKeys",
      "cloudasset.assets.listCloudkmsEkmConnections",
      "cloudasset.assets.listCloudkmsImportJobs",
      "cloudasset.assets.listCloudkmsKeyRings",
      "cloudasset.assets.listCloudmemcacheInstances",
      "cloudasset.assets.listCloudresourcemanagerFolders",
      "cloudasset.assets.listCloudresourcemanagerOrganizations",
      "cloudasset.assets.listCloudresourcemanagerProjects",
      "cloudasset.assets.listCloudresourcemanagerTagBindings",
      "cloudasset.assets.listCloudresourcemanagerTagKeys",
      "cloudasset.assets.listCloudresourcemanagerTagValues",
      "cloudasset.assets.listComposerEnvironments",
      "cloudasset.assets.listComputeAddress",
      "cloudasset.assets.listComputeAutoscalers",
      "cloudasset.assets.listComputeBackendBuckets",
      "cloudasset.assets.listComputeBackendServices",
      "cloudasset.assets.listComputeCommitments",
      "cloudasset.assets.listComputeDisks",
      "cloudasset.assets.listComputeExternalVpnGateways",
      "cloudasset.assets.listComputeFirewallPolicies",
      "cloudasset.assets.listComputeFirewalls",
      "cloudasset.assets.listComputeForwardingRules",
      "cloudasset.assets.listComputeGlobalAddress",
      "cloudasset.assets.listComputeGlobalForwardingRules",
      "cloudasset.assets.listComputeHealthChecks",
      "cloudasset.assets.listComputeHttpHealthChecks",
      "cloudasset.assets.listComputeHttpsHealthChecks",
      "cloudasset.assets.listComputeImages",
      "cloudasset.assets.listComputeInstanceGroupManagers",
      "cloudasset.assets.listComputeInstanceGroups",
      "cloudasset.assets.listComputeInstanceTemplates",
      "cloudasset.assets.listComputeInstances",
      "cloudasset.assets.listComputeInterconnect",
      "cloudasset.assets.listComputeInterconnectAttachment",
      "cloudasset.assets.listComputeLicenses",
      "cloudasset.assets.listComputeNetworkEndpointGroups",
      "cloudasset.assets.listComputeNetworks",
      "cloudasset.assets.listComputeNodeGroups",
      "cloudasset.assets.listComputeNodeTemplates",
      "cloudasset.assets.listComputePacketMirrorings",
      "cloudasset.assets.listComputeProjects",
      "cloudasset.assets.listComputeRegionAutoscaler",
      "cloudasset.assets.listComputeRegionBackendServices",
      "cloudasset.assets.listComputeRegionDisk",
      "cloudasset.assets.listComputeRegionInstanceGroup",
      "cloudasset.assets.listComputeRegionInstanceGroupManager",
      "cloudasset.assets.listComputeReservations",
      "cloudasset.assets.listComputeResourcePolicies",
      "cloudasset.assets.listComputeRouters",
      "cloudasset.assets.listComputeRoutes",
      "cloudasset.assets.listComputeSecurityPolicy",
      "cloudasset.assets.listComputeServiceAttachments",
      "cloudasset.assets.listComputeSnapshots",
      "cloudasset.assets.listComputeSslCertificates",
      "cloudasset.assets.listComputeSslPolicies",
      "cloudasset.assets.listComputeSubnetworks",
      "cloudasset.assets.listComputeTargetHttpProxies",
      "cloudasset.assets.listComputeTargetHttpsProxies",
      "cloudasset.assets.listComputeTargetInstances",
      "cloudasset.assets.listComputeTargetPools",
      "cloudasset.assets.listComputeTargetSslProxies",
      "cloudasset.assets.listComputeTargetTcpProxies",
      "cloudasset.assets.listComputeTargetVpnGateways",
      "cloudasset.assets.listComputeUrlMaps",
      "cloudasset.assets.listComputeVpnGateways",
      "cloudasset.assets.listComputeVpnTunnels",
      "cloudasset.assets.listConnectorsConnections",
      "cloudasset.assets.listConnectorsConnectorVersions",
      "cloudasset.assets.listConnectorsConnectors",
      "cloudasset.assets.listConnectorsProviders",
      "cloudasset.assets.listConnectorsRuntimeConfigs",
      "cloudasset.assets.listContainerAppsDeployment",
      "cloudasset.assets.listContainerAppsReplicaSets",
      "cloudasset.assets.listContainerBatchJobs",
      "cloudasset.assets.listContainerClusterrole",
      "cloudasset.assets.listContainerClusterrolebinding",
      "cloudasset.assets.listContainerClusters",
      "cloudasset.assets.listContainerExtensionsIngresses",
      "cloudasset.assets.listContainerJobs",
      "cloudasset.assets.listContainerNamespace",
      "cloudasset.assets.listContainerNetworkingIngresses",
      "cloudasset.assets.listContainerNetworkingNetworkPolicies",
      "cloudasset.assets.listContainerNode",
      "cloudasset.assets.listContainerNodepool",
      "cloudasset.assets.listContainerPod",
      "cloudasset.assets.listContainerReplicaSets",
      "cloudasset.assets.listContainerRole",
      "cloudasset.assets.listContainerRolebinding",
      "cloudasset.assets.listContainerServices",
      "cloudasset.assets.listContainerregistryImage",
      "cloudasset.assets.listDataMigrationConnectionProfiles",
      "cloudasset.assets.listDataMigrationMigrationJobs",
      "cloudasset.assets.listDataflowJobs",
      "cloudasset.assets.listDatafusionInstance",
      "cloudasset.assets.listDataplexAssets",
      "cloudasset.assets.listDataplexLakes",
      "cloudasset.assets.listDataplexTasks",
      "cloudasset.assets.listDataplexZones",
      "cloudasset.assets.listDataprocAutoscalingPolicies",
      "cloudasset.assets.listDataprocBatches",
      "cloudasset.assets.listDataprocClusters",
      "cloudasset.assets.listDataprocJobs",
      "cloudasset.assets.listDataprocSessions",
      "cloudasset.assets.listDataprocWorkflowTemplates",
      "cloudasset.assets.listDatastreamConnectionProfile",
      "cloudasset.assets.listDatastreamPrivateConnection",
      "cloudasset.assets.listDatastreamStream",
      "cloudasset.assets.listDialogflowAgents",
      "cloudasset.assets.listDialogflowConversationProfiles",
      "cloudasset.assets.listDialogflowKnowledgeBases",
      "cloudasset.assets.listDialogflowLocationSettings",
      "cloudasset.assets.listDlpDeidentifyTemplates",
      "cloudasset.assets.listDlpDlpJobs",
      "cloudasset.assets.listDlpInspectTemplates",
      "cloudasset.assets.listDlpJobTriggers",
      "cloudasset.assets.listDlpStoredInfoTypes",
      "cloudasset.assets.listDnsManagedZones",
      "cloudasset.assets.listDnsPolicies",
      "cloudasset.assets.listDomainsRegistrations",
      "cloudasset.assets.listEventarcTriggers",
      "cloudasset.assets.listFileBackups",
      "cloudasset.assets.listFileInstances",
      "cloudasset.assets.listFirebaseAppInfos",
      "cloudasset.assets.listFirebaseProjects",
      "cloudasset.assets.listFirestoreDatabases",
      "cloudasset.assets.listGKEHubFeatures",
      "cloudasset.assets.listGKEHubMemberships",
      "cloudasset.assets.listGameservicesGameServerClusters",
      "cloudasset.assets.listGameservicesGameServerConfigs",
      "cloudasset.assets.listGameservicesGameServerDeployments",
      "cloudasset.assets.listGameservicesRealms",
      "cloudasset.assets.listGkeBackupBackupPlans",
      "cloudasset.assets.listGkeBackupBackups",
      "cloudasset.assets.listGkeBackupRestorePlans",
      "cloudasset.assets.listGkeBackupRestores",
      "cloudasset.assets.listGkeBackupVolumeBackups",
      "cloudasset.assets.listGkeBackupVolumeRestores",
      "cloudasset.assets.listHealthcareConsentStores",
      "cloudasset.assets.listHealthcareDatasets",
      "cloudasset.assets.listHealthcareDicomStores",
      "cloudasset.assets.listHealthcareFhirStores",
      "cloudasset.assets.listHealthcareHl7V2Stores",
      "cloudasset.assets.listIamPolicy",
      "cloudasset.assets.listIamRoles",
      "cloudasset.assets.listIamServiceAccountKeys",
      "cloudasset.assets.listIamServiceAccounts",
      "cloudasset.assets.listIapTunnel",
      "cloudasset.assets.listIapTunnelInstances",
      "cloudasset.assets.listIapTunnelZones",
      "cloudasset.assets.listIapWeb",
      "cloudasset.assets.listIapWebServiceVersion",
      "cloudasset.assets.listIapWebServices",
      "cloudasset.assets.listIapWebType",
      "cloudasset.assets.listIdsEndpoints",
      "cloudasset.assets.listIntegrationsAuthConfigs",
      "cloudasset.assets.listIntegrationsCertificates",
      "cloudasset.assets.listIntegrationsExecutions",
      "cloudasset.assets.listIntegrationsIntegrationVersions",
      "cloudasset.assets.listIntegrationsIntegrations",
      "cloudasset.assets.listIntegrationsSfdcChannels",
      "cloudasset.assets.listIntegrationsSfdcInstances",
      "cloudasset.assets.listIntegrationsSuspensions",
      "cloudasset.assets.listLoggingLogMetrics",
      "cloudasset.assets.listLoggingLogSinks",
      "cloudasset.assets.listManagedidentitiesDomain",
      "cloudasset.assets.listMetastoreBackups",
      "cloudasset.assets.listMetastoreMetadataImports",
      "cloudasset.assets.listMetastoreServices",
      "cloudasset.assets.listMonitoringAlertPolicies",
      "cloudasset.assets.listNetworkConnectivityHubs",
      "cloudasset.assets.listNetworkConnectivitySpokes",
      "cloudasset.assets.listNetworkManagementConnectivityTests",
      "cloudasset.assets.listNetworkServicesEndpointPolicies",
      "cloudasset.assets.listNetworkServicesGateways",
      "cloudasset.assets.listNetworkServicesGrpcRoutes",
      "cloudasset.assets.listNetworkServicesHttpRoutes",
      "cloudasset.assets.listNetworkServicesMeshes",
      "cloudasset.assets.listNetworkServicesServiceBindings",
      "cloudasset.assets.listNetworkServicesTcpRoutes",
      "cloudasset.assets.listNetworkServicesTlsRoutes",
      "cloudasset.assets.listOSConfigOSPolicyAssignmentReports",
      "cloudasset.assets.listOSConfigOSPolicyAssignments",
      "cloudasset.assets.listOSConfigVulnerabilityReports",
      "cloudasset.assets.listOSInventories",
      "cloudasset.assets.listOrgPolicy",
      "cloudasset.assets.listPatchDeployments",
      "cloudasset.assets.listPubsubSnapshots",
      "cloudasset.assets.listPubsubSubscriptions",
      "cloudasset.assets.listPubsubTopics",
      "cloudasset.assets.listRedisInstances",
      "cloudasset.assets.listResource",
      "cloudasset.assets.listRunDomainMapping",
      "cloudasset.assets.listRunRevision",
      "cloudasset.assets.listRunService",
      "cloudasset.assets.listSecretManagerSecretVersions",
      "cloudasset.assets.listSecretManagerSecrets",
      "cloudasset.assets.listServiceDirectoryNamespaces",
      "cloudasset.assets.listServicePerimeter",
      "cloudasset.assets.listServiceconsumermanagementConsumerProperty",
      "cloudasset.assets.listServiceconsumermanagementConsumerQuotaLimits",
      "cloudasset.assets.listServiceconsumermanagementConsumers",
      "cloudasset.assets.listServiceconsumermanagementProducerOverrides",
      "cloudasset.assets.listServiceconsumermanagementTenancyUnits",
      "cloudasset.assets.listServiceconsumermanagementVisibility",
      "cloudasset.assets.listServicemanagementServices",
      "cloudasset.assets.listServiceusageAdminOverrides",
      "cloudasset.assets.listServiceusageConsumerOverrides",
      "cloudasset.assets.listServiceusageServices",
      "cloudasset.assets.listSpannerBackups",
      "cloudasset.assets.listSpannerDatabases",
      "cloudasset.assets.listSpannerInstances",
      "cloudasset.assets.listSpeakerIdPhrases",
      "cloudasset.assets.listSpeakerIdSettings",
      "cloudasset.assets.listSpeakerIdSpeakers",
      "cloudasset.assets.listSpeechCustomClasses",
      "cloudasset.assets.listSpeechPhraseSets",
      "cloudasset.assets.listSqladminBackupRuns",
      "cloudasset.assets.listSqladminInstances",
      "cloudasset.assets.listStorageBuckets",
      "cloudasset.assets.listTpuNodes",
      "cloudasset.assets.listVpcaccessConnector",
      "cloudasset.assets.queryAccessPolicy",
      "cloudasset.assets.queryIamPolicy",
      "cloudasset.assets.queryOSInventories",
      "cloudasset.assets.queryResource",
      "cloudasset.assets.searchAllIamPolicies",
      "cloudasset.assets.searchAllResources",
      "cloudasset.feeds.create",
      "cloudasset.feeds.delete",
      "cloudasset.feeds.get",
      "cloudasset.feeds.list",
      "cloudasset.feeds.update",
      "cloudasset.savedqueries.create",
      "cloudasset.savedqueries.delete",
      "cloudasset.savedqueries.get",
      "cloudasset.savedqueries.list",
      "cloudasset.savedqueries.update",
      "cloudbuild.builds.approve",
      "cloudbuild.builds.create",
      "cloudbuild.builds.get",
      "cloudbuild.builds.list",
      "cloudbuild.builds.update",
      "cloudbuild.connections.create",
      "cloudbuild.connections.delete",
      "cloudbuild.connections.fetchLinkableRepositories",
      "cloudbuild.connections.get",
      "cloudbuild.connections.getIamPolicy",
      "cloudbuild.connections.list",
      "cloudbuild.connections.setIamPolicy",
      "cloudbuild.connections.update",
      "cloudbuild.integrations.create",
      "cloudbuild.integrations.delete",
      "cloudbuild.integrations.get",
      "cloudbuild.integrations.list",
      "cloudbuild.integrations.update",
      "cloudbuild.operations.get",
      "cloudbuild.operations.list",
      "cloudbuild.repositories.accessReadToken",
      "cloudbuild.repositories.accessReadWriteToken",
      "cloudbuild.repositories.create",
      "cloudbuild.repositories.delete",
      "cloudbuild.repositories.fetchGitRefs",
      "cloudbuild.repositories.get",
      "cloudbuild.repositories.list",
      "cloudbuild.workerpools.create",
      "cloudbuild.workerpools.delete",
      "cloudbuild.workerpools.get",
      "cloudbuild.workerpools.list",
      "cloudbuild.workerpools.update",
      "cloudbuild.workerpools.use",
      "cloudconfig.configs.get",
      "cloudconfig.configs.update",
      "cloudcontrolspartner.customers.get",
      "cloudcontrolspartner.customers.list",
      "cloudcontrolspartner.ekmconnections.get",
      "cloudcontrolspartner.inspectabilityevents.get",
      "cloudcontrolspartner.partners.get",
      "cloudcontrolspartner.platformcontrols.get",
      "cloudcontrolspartner.violations.get",
      "cloudcontrolspartner.violations.list",
      "cloudcontrolspartner.workloads.get",
      "cloudcontrolspartner.workloads.list",
      "clouddebugger.breakpoints.create",
      "clouddebugger.breakpoints.delete",
      "clouddebugger.breakpoints.get",
      "clouddebugger.breakpoints.list",
      "clouddebugger.breakpoints.listActive",
      "clouddebugger.breakpoints.update",
      "clouddebugger.debuggees.create",
      "clouddebugger.debuggees.list",
      "clouddeploy.config.get",
      "clouddeploy.deliveryPipelines.create",
      "clouddeploy.deliveryPipelines.delete",
      "clouddeploy.deliveryPipelines.get",
      "clouddeploy.deliveryPipelines.getIamPolicy",
      "clouddeploy.deliveryPipelines.list",
      "clouddeploy.deliveryPipelines.setIamPolicy",
      "clouddeploy.deliveryPipelines.update",
      "clouddeploy.jobRuns.get",
      "clouddeploy.jobRuns.list",
      "clouddeploy.jobRuns.terminate",
      "clouddeploy.locations.get",
      "clouddeploy.locations.list",
      "clouddeploy.operations.cancel",
      "clouddeploy.operations.delete",
      "clouddeploy.operations.get",
      "clouddeploy.operations.list",
      "clouddeploy.releases.abandon",
      "clouddeploy.releases.create",
      "clouddeploy.releases.delete",
      "clouddeploy.releases.get",
      "clouddeploy.releases.list",
      "clouddeploy.rollouts.advance",
      "clouddeploy.rollouts.approve",
      "clouddeploy.rollouts.cancel",
      "clouddeploy.rollouts.create",
      "clouddeploy.rollouts.get",
      "clouddeploy.rollouts.ignoreJob",
      "clouddeploy.rollouts.list",
      "clouddeploy.rollouts.retryJob",
      "clouddeploy.targets.create",
      "clouddeploy.targets.delete",
      "clouddeploy.targets.get",
      "clouddeploy.targets.getIamPolicy",
      "clouddeploy.targets.list",
      "clouddeploy.targets.setIamPolicy",
      "clouddeploy.targets.update",
      "cloudfunctions.functions.call",
      "cloudfunctions.functions.create",
      "cloudfunctions.functions.delete",
      "cloudfunctions.functions.get",
      "cloudfunctions.functions.getIamPolicy",
      "cloudfunctions.functions.invoke",
      "cloudfunctions.functions.list",
      "cloudfunctions.functions.setIamPolicy",
      "cloudfunctions.functions.sourceCodeGet",
      "cloudfunctions.functions.sourceCodeSet",
      "cloudfunctions.functions.update",
      "cloudfunctions.locations.get",
      "cloudfunctions.locations.list",
      "cloudfunctions.operations.get",
      "cloudfunctions.operations.list",
      "cloudfunctions.runtimes.list",
      "cloudiot.devices.bindGateway",
      "cloudiot.devices.create",
      "cloudiot.devices.delete",
      "cloudiot.devices.get",
      "cloudiot.devices.list",
      "cloudiot.devices.sendCommand",
      "cloudiot.devices.unbindGateway",
      "cloudiot.devices.update",
      "cloudiot.devices.updateConfig",
      "cloudiot.registries.create",
      "cloudiot.registries.delete",
      "cloudiot.registries.get",
      "cloudiot.registries.getIamPolicy",
      "cloudiot.registries.list",
      "cloudiot.registries.setIamPolicy",
      "cloudiot.registries.update",
      "cloudiottoken.tokensettings.get",
      "cloudiottoken.tokensettings.update",
      "cloudjobdiscovery.companies.create",
      "cloudjobdiscovery.companies.delete",
      "cloudjobdiscovery.companies.get",
      "cloudjobdiscovery.companies.list",
      "cloudjobdiscovery.companies.update",
      "cloudjobdiscovery.events.create",
      "cloudjobdiscovery.jobs.create",
      "cloudjobdiscovery.jobs.delete",
      "cloudjobdiscovery.jobs.get",
      "cloudjobdiscovery.jobs.search",
      "cloudjobdiscovery.jobs.update",
      "cloudjobdiscovery.profiles.create",
      "cloudjobdiscovery.profiles.delete",
      "cloudjobdiscovery.profiles.get",
      "cloudjobdiscovery.profiles.search",
      "cloudjobdiscovery.profiles.update",
      "cloudjobdiscovery.tenants.create",
      "cloudjobdiscovery.tenants.delete",
      "cloudjobdiscovery.tenants.get",
      "cloudjobdiscovery.tenants.update",
      "cloudjobdiscovery.tools.access",
      "cloudkms.cryptoKeyVersions.create",
      "cloudkms.cryptoKeyVersions.destroy",
      "cloudkms.cryptoKeyVersions.get",
      "cloudkms.cryptoKeyVersions.list",
      "cloudkms.cryptoKeyVersions.manageRawAesCbcKeys",
      "cloudkms.cryptoKeyVersions.manageRawAesCtrKeys",
      "cloudkms.cryptoKeyVersions.manageRawPKCS1Keys",
      "cloudkms.cryptoKeyVersions.restore",
      "cloudkms.cryptoKeyVersions.update",
      "cloudkms.cryptoKeyVersions.useToDecrypt",
      "cloudkms.cryptoKeyVersions.useToDecryptViaDelegation",
      "cloudkms.cryptoKeyVersions.useToEncrypt",
      "cloudkms.cryptoKeyVersions.useToEncryptViaDelegation",
      "cloudkms.cryptoKeyVersions.useToSign",
      "cloudkms.cryptoKeyVersions.useToVerify",
      "cloudkms.cryptoKeyVersions.viewPublicKey",
      "cloudkms.cryptoKeys.create",
      "cloudkms.cryptoKeys.get",
      "cloudkms.cryptoKeys.getIamPolicy",
      "cloudkms.cryptoKeys.list",
      "cloudkms.cryptoKeys.setIamPolicy",
      "cloudkms.cryptoKeys.update",
      "cloudkms.ekmConfigs.get",
      "cloudkms.ekmConfigs.getIamPolicy",
      "cloudkms.ekmConfigs.setIamPolicy",
      "cloudkms.ekmConfigs.update",
      "cloudkms.ekmConnections.create",
      "cloudkms.ekmConnections.get",
      "cloudkms.ekmConnections.getIamPolicy",
      "cloudkms.ekmConnections.list",
      "cloudkms.ekmConnections.setIamPolicy",
      "cloudkms.ekmConnections.update",
      "cloudkms.ekmConnections.use",
      "cloudkms.ekmConnections.verifyConnectivity",
      "cloudkms.importJobs.create",
      "cloudkms.importJobs.get",
      "cloudkms.importJobs.getIamPolicy",
      "cloudkms.importJobs.list",
      "cloudkms.importJobs.setIamPolicy",
      "cloudkms.importJobs.useToImport",
      "cloudkms.keyRings.create",
      "cloudkms.keyRings.createTagBinding",
      "cloudkms.keyRings.deleteTagBinding",
      "cloudkms.keyRings.get",
      "cloudkms.keyRings.getIamPolicy",
      "cloudkms.keyRings.list",
      "cloudkms.keyRings.listEffectiveTags",
      "cloudkms.keyRings.listTagBindings",
      "cloudkms.keyRings.setIamPolicy",
      "cloudkms.locations.generateRandomBytes",
      "cloudkms.locations.get",
      "cloudkms.locations.list",
      "cloudkms.protectedResources.search",
      "cloudmessaging.messages.create",
      "cloudmigration.velostrataendpoints.connect",
      "cloudnotifications.activities.list",
      "cloudonefs.isiloncloud.com/clusters.create",
      "cloudonefs.isiloncloud.com/clusters.delete",
      "cloudonefs.isiloncloud.com/clusters.get",
      "cloudonefs.isiloncloud.com/clusters.list",
      "cloudonefs.isiloncloud.com/clusters.update",
      "cloudonefs.isiloncloud.com/clusters.updateAdvancedSettings",
      "cloudonefs.isiloncloud.com/fileshares.create",
      "cloudonefs.isiloncloud.com/fileshares.delete",
      "cloudonefs.isiloncloud.com/fileshares.get",
      "cloudonefs.isiloncloud.com/fileshares.list",
      "cloudonefs.isiloncloud.com/fileshares.update",
      "cloudoptimization.operations.create",
      "cloudoptimization.operations.get",
      "cloudprivatecatalog.targets.get",
      "cloudprivatecatalogproducer.associations.create",
      "cloudprivatecatalogproducer.associations.delete",
      "cloudprivatecatalogproducer.associations.get",
      "cloudprivatecatalogproducer.associations.list",
      "cloudprivatecatalogproducer.catalogAssociations.create",
      "cloudprivatecatalogproducer.catalogAssociations.delete",
      "cloudprivatecatalogproducer.catalogAssociations.get",
      "cloudprivatecatalogproducer.catalogAssociations.list",
      "cloudprivatecatalogproducer.catalogs.create",
      "cloudprivatecatalogproducer.catalogs.delete",
      "cloudprivatecatalogproducer.catalogs.get",
      "cloudprivatecatalogproducer.catalogs.getIamPolicy",
      "cloudprivatecatalogproducer.catalogs.list",
      "cloudprivatecatalogproducer.catalogs.setIamPolicy",
      "cloudprivatecatalogproducer.catalogs.undelete",
      "cloudprivatecatalogproducer.catalogs.update",
      "cloudprivatecatalogproducer.producerCatalogs.attachProduct",
      "cloudprivatecatalogproducer.producerCatalogs.create",
      "cloudprivatecatalogproducer.producerCatalogs.delete",
      "cloudprivatecatalogproducer.producerCatalogs.detachProduct",
      "cloudprivatecatalogproducer.producerCatalogs.get",
      "cloudprivatecatalogproducer.producerCatalogs.getIamPolicy",
      "cloudprivatecatalogproducer.producerCatalogs.list",
      "cloudprivatecatalogproducer.producerCatalogs.setIamPolicy",
      "cloudprivatecatalogproducer.producerCatalogs.update",
      "cloudprivatecatalogproducer.products.create",
      "cloudprivatecatalogproducer.products.delete",
      "cloudprivatecatalogproducer.products.get",
      "cloudprivatecatalogproducer.products.getIamPolicy",
      "cloudprivatecatalogproducer.products.list",
      "cloudprivatecatalogproducer.products.setIamPolicy",
      "cloudprivatecatalogproducer.products.update",
      "cloudprivatecatalogproducer.settings.get",
      "cloudprivatecatalogproducer.settings.update",
      "cloudprivatecatalogproducer.targets.associate",
      "cloudprivatecatalogproducer.targets.unassociate",
      "cloudprofiler.profiles.create",
      "cloudprofiler.profiles.list",
      "cloudprofiler.profiles.update",
      "cloudscheduler.jobs.create",
      "cloudscheduler.jobs.delete",
      "cloudscheduler.jobs.enable",
      "cloudscheduler.jobs.fullView",
      "cloudscheduler.jobs.get",
      "cloudscheduler.jobs.list",
      "cloudscheduler.jobs.pause",
      "cloudscheduler.jobs.run",
      "cloudscheduler.jobs.update",
      "cloudscheduler.locations.get",
      "cloudscheduler.locations.list",
      "cloudsecurityscanner.crawledurls.list",
      "cloudsecurityscanner.results.get",
      "cloudsecurityscanner.results.list",
      "cloudsecurityscanner.scanruns.get",
      "cloudsecurityscanner.scanruns.getSummary",
      "cloudsecurityscanner.scanruns.list",
      "cloudsecurityscanner.scanruns.stop",
      "cloudsecurityscanner.scans.create",
      "cloudsecurityscanner.scans.delete",
      "cloudsecurityscanner.scans.get",
      "cloudsecurityscanner.scans.list",
      "cloudsecurityscanner.scans.run",
      "cloudsecurityscanner.scans.update",
      "cloudsql.backupRuns.create",
      "cloudsql.backupRuns.delete",
      "cloudsql.backupRuns.get",
      "cloudsql.backupRuns.list",
      "cloudsql.databases.create",
      "cloudsql.databases.delete",
      "cloudsql.databases.get",
      "cloudsql.databases.list",
      "cloudsql.databases.update",
      "cloudsql.instances.addServerCa",
      "cloudsql.instances.clone",
      "cloudsql.instances.connect",
      "cloudsql.instances.create",
      "cloudsql.instances.createTagBinding",
      "cloudsql.instances.delete",
      "cloudsql.instances.deleteTagBinding",
      "cloudsql.instances.demoteMaster",
      "cloudsql.instances.export",
      "cloudsql.instances.failover",
      "cloudsql.instances.get",
      "cloudsql.instances.getDiskShrinkConfig",
      "cloudsql.instances.import",
      "cloudsql.instances.list",
      "cloudsql.instances.listEffectiveTags",
      "cloudsql.instances.listServerCas",
      "cloudsql.instances.listTagBindings",
      "cloudsql.instances.login",
      "cloudsql.instances.migrate",
      "cloudsql.instances.performDiskShrink",
      "cloudsql.instances.promoteReplica",
      "cloudsql.instances.reencrypt",
      "cloudsql.instances.resetReplicaSize",
      "cloudsql.instances.resetSslConfig",
      "cloudsql.instances.restart",
      "cloudsql.instances.restoreBackup",
      "cloudsql.instances.rotateServerCa",
      "cloudsql.instances.startReplica",
      "cloudsql.instances.stopReplica",
      "cloudsql.instances.truncateLog",
      "cloudsql.instances.update",
      "cloudsql.sslCerts.create",
      "cloudsql.sslCerts.createEphemeral",
      "cloudsql.sslCerts.delete",
      "cloudsql.sslCerts.get",
      "cloudsql.sslCerts.list",
      "cloudsql.users.create",
      "cloudsql.users.delete",
      "cloudsql.users.get",
      "cloudsql.users.list",
      "cloudsql.users.update",
      "cloudsupport.accounts.create",
      "cloudsupport.accounts.delete",
      "cloudsupport.accounts.get",
      "cloudsupport.accounts.getIamPolicy",
      "cloudsupport.accounts.getUserRoles",
      "cloudsupport.accounts.list",
      "cloudsupport.accounts.purchase",
      "cloudsupport.accounts.setIamPolicy",
      "cloudsupport.accounts.update",
      "cloudsupport.accounts.updateUserRoles",
      "cloudsupport.operations.get",
      "cloudsupport.properties.get",
      "cloudsupport.techCases.create",
      "cloudsupport.techCases.escalate",
      "cloudsupport.techCases.get",
      "cloudsupport.techCases.list",
      "cloudsupport.techCases.update",
      "cloudtasks.locations.get",
      "cloudtasks.locations.list",
      "cloudtasks.queues.create",
      "cloudtasks.queues.delete",
      "cloudtasks.queues.get",
      "cloudtasks.queues.getIamPolicy",
      "cloudtasks.queues.list",
      "cloudtasks.queues.pause",
      "cloudtasks.queues.purge",
      "cloudtasks.queues.resume",
      "cloudtasks.queues.setIamPolicy",
      "cloudtasks.queues.update",
      "cloudtasks.tasks.create",
      "cloudtasks.tasks.delete",
      "cloudtasks.tasks.fullView",
      "cloudtasks.tasks.get",
      "cloudtasks.tasks.list",
      "cloudtasks.tasks.run",
      "cloudtestservice.environmentcatalog.get",
      "cloudtestservice.matrices.create",
      "cloudtestservice.matrices.get",
      "cloudtestservice.matrices.update",
      "cloudtoolresults.executions.create",
      "cloudtoolresults.executions.get",
      "cloudtoolresults.executions.list",
      "cloudtoolresults.executions.update",
      "cloudtoolresults.histories.create",
      "cloudtoolresults.histories.get",
      "cloudtoolresults.histories.list",
      "cloudtoolresults.settings.create",
      "cloudtoolresults.settings.get",
      "cloudtoolresults.settings.update",
      "cloudtoolresults.steps.create",
      "cloudtoolresults.steps.get",
      "cloudtoolresults.steps.list",
      "cloudtoolresults.steps.update",
      "cloudtrace.insights.get",
      "cloudtrace.insights.list",
      "cloudtrace.stats.get",
      "cloudtrace.tasks.create",
      "cloudtrace.tasks.delete",
      "cloudtrace.tasks.get",
      "cloudtrace.tasks.list",
      "cloudtrace.traces.get",
      "cloudtrace.traces.list",
      "cloudtrace.traces.patch",
      "cloudtranslate.customModels.create",
      "cloudtranslate.customModels.delete",
      "cloudtranslate.customModels.get",
      "cloudtranslate.customModels.list",
      "cloudtranslate.customModels.predict",
      "cloudtranslate.datasets.create",
      "cloudtranslate.datasets.delete",
      "cloudtranslate.datasets.export",
      "cloudtranslate.datasets.get",
      "cloudtranslate.datasets.import",
      "cloudtranslate.datasets.list",
      "cloudtranslate.generalModels.batchDocPredict",
      "cloudtranslate.generalModels.batchPredict",
      "cloudtranslate.generalModels.docPredict",
      "cloudtranslate.generalModels.get",
      "cloudtranslate.generalModels.predict",
      "cloudtranslate.glossaries.batchDocPredict",
      "cloudtranslate.glossaries.batchPredict",
      "cloudtranslate.glossaries.create",
      "cloudtranslate.glossaries.delete",
      "cloudtranslate.glossaries.docPredict",
      "cloudtranslate.glossaries.get",
      "cloudtranslate.glossaries.list",
      "cloudtranslate.glossaries.predict",
      "cloudtranslate.glossaries.update",
      "cloudtranslate.glossaryentries.create",
      "cloudtranslate.glossaryentries.delete",
      "cloudtranslate.glossaryentries.get",
      "cloudtranslate.glossaryentries.list",
      "cloudtranslate.glossaryentries.update",
      "cloudtranslate.languageDetectionModels.predict",
      "cloudtranslate.locations.get",
      "cloudtranslate.locations.list",
      "cloudtranslate.operations.cancel",
      "cloudtranslate.operations.delete",
      "cloudtranslate.operations.get",
      "cloudtranslate.operations.list",
      "cloudtranslate.operations.wait",
      "cloudvolumesgcp-api.netapp.com/activeDirectories.create",
      "cloudvolumesgcp-api.netapp.com/activeDirectories.delete",
      "cloudvolumesgcp-api.netapp.com/activeDirectories.get",
      "cloudvolumesgcp-api.netapp.com/activeDirectories.list",
      "cloudvolumesgcp-api.netapp.com/activeDirectories.update",
      "cloudvolumesgcp-api.netapp.com/ipRanges.list",
      "cloudvolumesgcp-api.netapp.com/jobs.get",
      "cloudvolumesgcp-api.netapp.com/jobs.list",
      "cloudvolumesgcp-api.netapp.com/regions.list",
      "cloudvolumesgcp-api.netapp.com/serviceLevels.list",
      "cloudvolumesgcp-api.netapp.com/snapshots.create",
      "cloudvolumesgcp-api.netapp.com/snapshots.delete",
      "cloudvolumesgcp-api.netapp.com/snapshots.get",
      "cloudvolumesgcp-api.netapp.com/snapshots.list",
      "cloudvolumesgcp-api.netapp.com/snapshots.update",
      "cloudvolumesgcp-api.netapp.com/volumereplication.authorize",
      "cloudvolumesgcp-api.netapp.com/volumereplication.break",
      "cloudvolumesgcp-api.netapp.com/volumereplication.create",
      "cloudvolumesgcp-api.netapp.com/volumereplication.delete",
      "cloudvolumesgcp-api.netapp.com/volumereplication.get",
      "cloudvolumesgcp-api.netapp.com/volumereplication.list",
      "cloudvolumesgcp-api.netapp.com/volumereplication.release",
      "cloudvolumesgcp-api.netapp.com/volumereplication.resync",
      "cloudvolumesgcp-api.netapp.com/volumereplication.update",
      "cloudvolumesgcp-api.netapp.com/volumes.create",
      "cloudvolumesgcp-api.netapp.com/volumes.delete",
      "cloudvolumesgcp-api.netapp.com/volumes.get",
      "cloudvolumesgcp-api.netapp.com/volumes.list",
      "cloudvolumesgcp-api.netapp.com/volumes.update",
      "commerceagreementpublishing.agreements.create",
      "commerceagreementpublishing.agreements.delete",
      "commerceagreementpublishing.agreements.get",
      "commerceagreementpublishing.agreements.list",
      "commerceagreementpublishing.agreements.update",
      "commerceagreementpublishing.documents.create",
      "commerceagreementpublishing.documents.delete",
      "commerceagreementpublishing.documents.get",
      "commerceagreementpublishing.documents.list",
      "commerceagreementpublishing.documents.update",
      "commercebusinessenablement.leadgenConfig.get",
      "commercebusinessenablement.leadgenConfig.update",
      "commercebusinessenablement.partnerAccounts.get",
      "commercebusinessenablement.partnerAccounts.list",
      "commercebusinessenablement.partnerInfo.get",
      "commercebusinessenablement.paymentConfig.get",
      "commercebusinessenablement.paymentConfig.update",
      "commercebusinessenablement.resellerConfig.get",
      "commercebusinessenablement.resellerDiscountOffers.cancel",
      "commercebusinessenablement.resellerDiscountOffers.create",
      "commercebusinessenablement.resellerDiscountOffers.list",
      "commerceoffercatalog.agreements.get",
      "commerceoffercatalog.agreements.list",
      "commerceoffercatalog.documents.get",
      "commerceoffercatalog.documents.list",
      "commerceoffercatalog.offers.get",
      "commerceorggovernance.collections.create",
      "commerceorggovernance.collections.delete",
      "commerceorggovernance.collections.get",
      "commerceorggovernance.collections.list",
      "commerceorggovernance.collections.update",
      "commerceorggovernance.consumerSharingPolicies.get",
      "commerceorggovernance.consumerSharingPolicies.update",
      "commerceorggovernance.organizationSettings.get",
      "commerceorggovernance.organizationSettings.update",
      "commerceorggovernance.services.list",
      "commerceprice.events.get",
      "commerceprice.events.list",
      "commerceprice.privateoffers.cancel",
      "commerceprice.privateoffers.create",
      "commerceprice.privateoffers.delete",
      "commerceprice.privateoffers.get",
      "commerceprice.privateoffers.list",
      "commerceprice.privateoffers.publish",
      "commerceprice.privateoffers.update",
      "composer.dags.execute",
      "composer.dags.get",
      "composer.dags.getSourceCode",
      "composer.dags.list",
      "composer.environments.create",
      "composer.environments.delete",
      "composer.environments.executeAirflowCommand",
      "composer.environments.get",
      "composer.environments.list",
      "composer.environments.update",
      "composer.imageversions.list",
      "composer.operations.delete",
      "composer.operations.get",
      "composer.operations.list",
      "compute.acceleratorTypes.get",
      "compute.acceleratorTypes.list",
      "compute.addresses.create",
      "compute.addresses.createInternal",
      "compute.addresses.delete",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.addresses.setLabels",
      "compute.addresses.use",
      "compute.addresses.useInternal",
      "compute.autoscalers.create",
      "compute.autoscalers.delete",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.autoscalers.update",
      "compute.backendBuckets.addSignedUrlKey",
      "compute.backendBuckets.create",
      "compute.backendBuckets.createTagBinding",
      "compute.backendBuckets.delete",
      "compute.backendBuckets.deleteSignedUrlKey",
      "compute.backendBuckets.deleteTagBinding",
      "compute.backendBuckets.get",
      "compute.backendBuckets.getIamPolicy",
      "compute.backendBuckets.list",
      "compute.backendBuckets.listEffectiveTags",
      "compute.backendBuckets.listTagBindings",
      "compute.backendBuckets.setIamPolicy",
      "compute.backendBuckets.setSecurityPolicy",
      "compute.backendBuckets.update",
      "compute.backendBuckets.use",
      "compute.backendServices.addSignedUrlKey",
      "compute.backendServices.create",
      "compute.backendServices.createTagBinding",
      "compute.backendServices.delete",
      "compute.backendServices.deleteSignedUrlKey",
      "compute.backendServices.deleteTagBinding",
      "compute.backendServices.get",
      "compute.backendServices.getIamPolicy",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.backendServices.setIamPolicy",
      "compute.backendServices.setSecurityPolicy",
      "compute.backendServices.update",
      "compute.backendServices.use",
      "compute.commitments.create",
      "compute.commitments.get",
      "compute.commitments.list",
      "compute.commitments.update",
      "compute.commitments.updateReservations",
      "compute.diskTypes.get",
      "compute.diskTypes.list",
      "compute.disks.addResourcePolicies",
      "compute.disks.create",
      "compute.disks.createSnapshot",
      "compute.disks.createTagBinding",
      "compute.disks.delete",
      "compute.disks.deleteTagBinding",
      "compute.disks.get",
      "compute.disks.getIamPolicy",
      "compute.disks.list",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.disks.removeResourcePolicies",
      "compute.disks.resize",
      "compute.disks.setIamPolicy",
      "compute.disks.setLabels",
      "compute.disks.startAsyncReplication",
      "compute.disks.stopAsyncReplication",
      "compute.disks.stopGroupAsyncReplication",
      "compute.disks.update",
      "compute.disks.use",
      "compute.disks.useReadOnly",
      "compute.externalVpnGateways.create",
      "compute.externalVpnGateways.delete",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.list",
      "compute.externalVpnGateways.setLabels",
      "compute.externalVpnGateways.use",
      "compute.firewallPolicies.addAssociation",
      "compute.firewallPolicies.cloneRules",
      "compute.firewallPolicies.copyRules",
      "compute.firewallPolicies.create",
      "compute.firewallPolicies.createTagBinding",
      "compute.firewallPolicies.delete",
      "compute.firewallPolicies.deleteTagBinding",
      "compute.firewallPolicies.get",
      "compute.firewallPolicies.getIamPolicy",
      "compute.firewallPolicies.list",
      "compute.firewallPolicies.listEffectiveTags",
      "compute.firewallPolicies.listTagBindings",
      "compute.firewallPolicies.move",
      "compute.firewallPolicies.removeAssociation",
      "compute.firewallPolicies.setIamPolicy",
      "compute.firewallPolicies.update",
      "compute.firewallPolicies.use",
      "compute.firewalls.create",
      "compute.firewalls.createTagBinding",
      "compute.firewalls.delete",
      "compute.firewalls.deleteTagBinding",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.firewalls.update",
      "compute.forwardingRules.create",
      "compute.forwardingRules.createTagBinding",
      "compute.forwardingRules.delete",
      "compute.forwardingRules.deleteTagBinding",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.forwardingRules.pscCreate",
      "compute.forwardingRules.pscDelete",
      "compute.forwardingRules.pscSetLabels",
      "compute.forwardingRules.pscSetTarget",
      "compute.forwardingRules.pscUpdate",
      "compute.forwardingRules.setLabels",
      "compute.forwardingRules.setTarget",
      "compute.forwardingRules.update",
      "compute.forwardingRules.use",
      "compute.futureReservations.cancel",
      "compute.futureReservations.create",
      "compute.futureReservations.delete",
      "compute.futureReservations.get",
      "compute.futureReservations.getIamPolicy",
      "compute.futureReservations.list",
      "compute.futureReservations.setIamPolicy",
      "compute.futureReservations.update",
      "compute.globalAddresses.create",
      "compute.globalAddresses.createInternal",
      "compute.globalAddresses.delete",
      "compute.globalAddresses.deleteInternal",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalAddresses.setLabels",
      "compute.globalAddresses.use",
      "compute.globalForwardingRules.create",
      "compute.globalForwardingRules.createTagBinding",
      "compute.globalForwardingRules.delete",
      "compute.globalForwardingRules.deleteTagBinding",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalForwardingRules.pscCreate",
      "compute.globalForwardingRules.pscDelete",
      "compute.globalForwardingRules.pscGet",
      "compute.globalForwardingRules.pscSetLabels",
      "compute.globalForwardingRules.pscSetTarget",
      "compute.globalForwardingRules.pscUpdate",
      "compute.globalForwardingRules.setLabels",
      "compute.globalForwardingRules.setTarget",
      "compute.globalForwardingRules.update",
      "compute.globalNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.create",
      "compute.globalNetworkEndpointGroups.createTagBinding",
      "compute.globalNetworkEndpointGroups.delete",
      "compute.globalNetworkEndpointGroups.deleteTagBinding",
      "compute.globalNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.globalNetworkEndpointGroups.get",
      "compute.globalNetworkEndpointGroups.list",
      "compute.globalNetworkEndpointGroups.listEffectiveTags",
      "compute.globalNetworkEndpointGroups.listTagBindings",
      "compute.globalNetworkEndpointGroups.use",
      "compute.globalOperations.delete",
      "compute.globalOperations.get",
      "compute.globalOperations.getIamPolicy",
      "compute.globalOperations.list",
      "compute.globalOperations.setIamPolicy",
      "compute.globalPublicDelegatedPrefixes.create",
      "compute.globalPublicDelegatedPrefixes.delete",
      "compute.globalPublicDelegatedPrefixes.get",
      "compute.globalPublicDelegatedPrefixes.list",
      "compute.globalPublicDelegatedPrefixes.update",
      "compute.globalPublicDelegatedPrefixes.updatePolicy",
      "compute.globalPublicDelegatedPrefixes.use",
      "compute.healthChecks.create",
      "compute.healthChecks.createTagBinding",
      "compute.healthChecks.delete",
      "compute.healthChecks.deleteTagBinding",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.healthChecks.update",
      "compute.healthChecks.use",
      "compute.healthChecks.useReadOnly",
      "compute.httpHealthChecks.create",
      "compute.httpHealthChecks.createTagBinding",
      "compute.httpHealthChecks.delete",
      "compute.httpHealthChecks.deleteTagBinding",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpHealthChecks.update",
      "compute.httpHealthChecks.use",
      "compute.httpHealthChecks.useReadOnly",
      "compute.httpsHealthChecks.create",
      "compute.httpsHealthChecks.createTagBinding",
      "compute.httpsHealthChecks.delete",
      "compute.httpsHealthChecks.deleteTagBinding",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.update",
      "compute.httpsHealthChecks.use",
      "compute.httpsHealthChecks.useReadOnly",
      "compute.images.create",
      "compute.images.createTagBinding",
      "compute.images.delete",
      "compute.images.deleteTagBinding",
      "compute.images.deprecate",
      "compute.images.get",
      "compute.images.getFromFamily",
      "compute.images.getIamPolicy",
      "compute.images.list",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.images.setIamPolicy",
      "compute.images.setLabels",
      "compute.images.update",
      "compute.images.useReadOnly",
      "compute.instanceGroupManagers.create",
      "compute.instanceGroupManagers.delete",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroupManagers.update",
      "compute.instanceGroupManagers.use",
      "compute.instanceGroups.create",
      "compute.instanceGroups.delete",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instanceGroups.update",
      "compute.instanceGroups.use",
      "compute.instanceTemplates.create",
      "compute.instanceTemplates.delete",
      "compute.instanceTemplates.get",
      "compute.instanceTemplates.getIamPolicy",
      "compute.instanceTemplates.list",
      "compute.instanceTemplates.setIamPolicy",
      "compute.instanceTemplates.useReadOnly",
      "compute.instances.addAccessConfig",
      "compute.instances.addMaintenancePolicies",
      "compute.instances.addResourcePolicies",
      "compute.instances.attachDisk",
      "compute.instances.create",
      "compute.instances.createTagBinding",
      "compute.instances.delete",
      "compute.instances.deleteAccessConfig",
      "compute.instances.deleteTagBinding",
      "compute.instances.detachDisk",
      "compute.instances.get",
      "compute.instances.getEffectiveFirewalls",
      "compute.instances.getGuestAttributes",
      "compute.instances.getIamPolicy",
      "compute.instances.getScreenshot",
      "compute.instances.getSerialPortOutput",
      "compute.instances.getShieldedInstanceIdentity",
      "compute.instances.getShieldedVmIdentity",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listReferrers",
      "compute.instances.listTagBindings",
      "compute.instances.osAdminLogin",
      "compute.instances.osLogin",
      "compute.instances.removeMaintenancePolicies",
      "compute.instances.removeResourcePolicies",
      "compute.instances.reset",
      "compute.instances.resume",
      "compute.instances.sendDiagnosticInterrupt",
      "compute.instances.setDeletionProtection",
      "compute.instances.setDiskAutoDelete",
      "compute.instances.setIamPolicy",
      "compute.instances.setLabels",
      "compute.instances.setMachineResources",
      "compute.instances.setMachineType",
      "compute.instances.setMetadata",
      "compute.instances.setMinCpuPlatform",
      "compute.instances.setName",
      "compute.instances.setScheduling",
      "compute.instances.setSecurityPolicy",
      "compute.instances.setServiceAccount",
      "compute.instances.setShieldedInstanceIntegrityPolicy",
      "compute.instances.setShieldedVmIntegrityPolicy",
      "compute.instances.setTags",
      "compute.instances.simulateMaintenanceEvent",
      "compute.instances.start",
      "compute.instances.startWithEncryptionKey",
      "compute.instances.stop",
      "compute.instances.suspend",
      "compute.instances.update",
      "compute.instances.updateAccessConfig",
      "compute.instances.updateDisplayDevice",
      "compute.instances.updateNetworkInterface",
      "compute.instances.updateSecurity",
      "compute.instances.updateShieldedInstanceConfig",
      "compute.instances.updateShieldedVmConfig",
      "compute.instances.use",
      "compute.instances.useReadOnly",
      "compute.instantSnapshots.create",
      "compute.instantSnapshots.delete",
      "compute.instantSnapshots.export",
      "compute.instantSnapshots.get",
      "compute.instantSnapshots.getIamPolicy",
      "compute.instantSnapshots.list",
      "compute.instantSnapshots.setIamPolicy",
      "compute.instantSnapshots.setLabels",
      "compute.instantSnapshots.useReadOnly",
      "compute.interconnectAttachments.create",
      "compute.interconnectAttachments.delete",
      "compute.interconnectAttachments.get",
      "compute.interconnectAttachments.list",
      "compute.interconnectAttachments.setLabels",
      "compute.interconnectAttachments.update",
      "compute.interconnectAttachments.use",
      "compute.interconnectLocations.get",
      "compute.interconnectLocations.list",
      "compute.interconnectRemoteLocations.get",
      "compute.interconnectRemoteLocations.list",
      "compute.interconnects.create",
      "compute.interconnects.delete",
      "compute.interconnects.get",
      "compute.interconnects.list",
      "compute.interconnects.setLabels",
      "compute.interconnects.update",
      "compute.interconnects.use",
      "compute.licenseCodes.get",
      "compute.licenseCodes.getIamPolicy",
      "compute.licenseCodes.list",
      "compute.licenseCodes.setIamPolicy",
      "compute.licenseCodes.update",
      "compute.licenseCodes.use",
      "compute.licenses.create",
      "compute.licenses.delete",
      "compute.licenses.get",
      "compute.licenses.getIamPolicy",
      "compute.licenses.list",
      "compute.licenses.setIamPolicy",
      "compute.machineImages.create",
      "compute.machineImages.delete",
      "compute.machineImages.get",
      "compute.machineImages.getIamPolicy",
      "compute.machineImages.list",
      "compute.machineImages.setIamPolicy",
      "compute.machineImages.useReadOnly",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.maintenancePolicies.create",
      "compute.maintenancePolicies.delete",
      "compute.maintenancePolicies.get",
      "compute.maintenancePolicies.getIamPolicy",
      "compute.maintenancePolicies.list",
      "compute.maintenancePolicies.setIamPolicy",
      "compute.maintenancePolicies.use",
      "compute.networkAttachments.create",
      "compute.networkAttachments.delete",
      "compute.networkAttachments.get",
      "compute.networkAttachments.getIamPolicy",
      "compute.networkAttachments.list",
      "compute.networkAttachments.setIamPolicy",
      "compute.networkEdgeSecurityServices.create",
      "compute.networkEdgeSecurityServices.delete",
      "compute.networkEdgeSecurityServices.get",
      "compute.networkEdgeSecurityServices.list",
      "compute.networkEdgeSecurityServices.update",
      "compute.networkEndpointGroups.attachNetworkEndpoints",
      "compute.networkEndpointGroups.create",
      "compute.networkEndpointGroups.createTagBinding",
      "compute.networkEndpointGroups.delete",
      "compute.networkEndpointGroups.deleteTagBinding",
      "compute.networkEndpointGroups.detachNetworkEndpoints",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.getIamPolicy",
      "compute.networkEndpointGroups.list",
      "compute.networkEndpointGroups.listEffectiveTags",
      "compute.networkEndpointGroups.listTagBindings",
      "compute.networkEndpointGroups.setIamPolicy",
      "compute.networkEndpointGroups.use",
      "compute.networks.access",
      "compute.networks.addPeering",
      "compute.networks.create",
      "compute.networks.createTagBinding",
      "compute.networks.delete",
      "compute.networks.deleteTagBinding",
      "compute.networks.get",
      "compute.networks.getEffectiveFirewalls",
      "compute.networks.getRegionEffectiveFirewalls",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listPeeringRoutes",
      "compute.networks.listTagBindings",
      "compute.networks.mirror",
      "compute.networks.removePeering",
      "compute.networks.setFirewallPolicy",
      "compute.networks.switchToCustomMode",
      "compute.networks.update",
      "compute.networks.updatePeering",
      "compute.networks.updatePolicy",
      "compute.networks.use",
      "compute.networks.useExternalIp",
      "compute.nodeGroups.addNodes",
      "compute.nodeGroups.create",
      "compute.nodeGroups.delete",
      "compute.nodeGroups.deleteNodes",
      "compute.nodeGroups.get",
      "compute.nodeGroups.getIamPolicy",
      "compute.nodeGroups.list",
      "compute.nodeGroups.setIamPolicy",
      "compute.nodeGroups.setNodeTemplate",
      "compute.nodeGroups.simulateMaintenanceEvent",
      "compute.nodeGroups.update",
      "compute.nodeTemplates.create",
      "compute.nodeTemplates.delete",
      "compute.nodeTemplates.get",
      "compute.nodeTemplates.getIamPolicy",
      "compute.nodeTemplates.list",
      "compute.nodeTemplates.setIamPolicy",
      "compute.nodeTypes.get",
      "compute.nodeTypes.list",
      "compute.organizations.listAssociations",
      "compute.organizations.setFirewallPolicy",
      "compute.organizations.setSecurityPolicy",
      "compute.oslogin.updateExternalUser",
      "compute.packetMirrorings.create",
      "compute.packetMirrorings.delete",
      "compute.packetMirrorings.get",
      "compute.packetMirrorings.list",
      "compute.packetMirrorings.update",
      "compute.projects.get",
      "compute.projects.setCommonInstanceMetadata",
      "compute.projects.setDefaultNetworkTier",
      "compute.projects.setDefaultServiceAccount",
      "compute.projects.setUsageExportBucket",
      "compute.publicAdvertisedPrefixes.create",
      "compute.publicAdvertisedPrefixes.delete",
      "compute.publicAdvertisedPrefixes.get",
      "compute.publicAdvertisedPrefixes.list",
      "compute.publicAdvertisedPrefixes.update",
      "compute.publicAdvertisedPrefixes.updatePolicy",
      "compute.publicAdvertisedPrefixes.use",
      "compute.publicDelegatedPrefixes.create",
      "compute.publicDelegatedPrefixes.delete",
      "compute.publicDelegatedPrefixes.get",
      "compute.publicDelegatedPrefixes.list",
      "compute.publicDelegatedPrefixes.update",
      "compute.publicDelegatedPrefixes.updatePolicy",
      "compute.publicDelegatedPrefixes.use",
      "compute.regionBackendServices.create",
      "compute.regionBackendServices.createTagBinding",
      "compute.regionBackendServices.delete",
      "compute.regionBackendServices.deleteTagBinding",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.getIamPolicy",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionBackendServices.setIamPolicy",
      "compute.regionBackendServices.setSecurityPolicy",
      "compute.regionBackendServices.update",
      "compute.regionBackendServices.use",
      "compute.regionFirewallPolicies.cloneRules",
      "compute.regionFirewallPolicies.create",
      "compute.regionFirewallPolicies.createTagBinding",
      "compute.regionFirewallPolicies.delete",
      "compute.regionFirewallPolicies.deleteTagBinding",
      "compute.regionFirewallPolicies.get",
      "compute.regionFirewallPolicies.getIamPolicy",
      "compute.regionFirewallPolicies.list",
      "compute.regionFirewallPolicies.listEffectiveTags",
      "compute.regionFirewallPolicies.listTagBindings",
      "compute.regionFirewallPolicies.setIamPolicy",
      "compute.regionFirewallPolicies.update",
      "compute.regionFirewallPolicies.use",
      "compute.regionHealthCheckServices.create",
      "compute.regionHealthCheckServices.delete",
      "compute.regionHealthCheckServices.get",
      "compute.regionHealthCheckServices.list",
      "compute.regionHealthCheckServices.update",
      "compute.regionHealthCheckServices.use",
      "compute.regionHealthChecks.create",
      "compute.regionHealthChecks.createTagBinding",
      "compute.regionHealthChecks.delete",
      "compute.regionHealthChecks.deleteTagBinding",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionHealthChecks.update",
      "compute.regionHealthChecks.use",
      "compute.regionHealthChecks.useReadOnly",
      "compute.regionNetworkEndpointGroups.attachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.create",
      "compute.regionNetworkEndpointGroups.createTagBinding",
      "compute.regionNetworkEndpointGroups.delete",
      "compute.regionNetworkEndpointGroups.deleteTagBinding",
      "compute.regionNetworkEndpointGroups.detachNetworkEndpoints",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionNetworkEndpointGroups.listEffectiveTags",
      "compute.regionNetworkEndpointGroups.listTagBindings",
      "compute.regionNetworkEndpointGroups.use",
      "compute.regionNotificationEndpoints.create",
      "compute.regionNotificationEndpoints.delete",
      "compute.regionNotificationEndpoints.get",
      "compute.regionNotificationEndpoints.list",
      "compute.regionNotificationEndpoints.update",
      "compute.regionNotificationEndpoints.use",
      "compute.regionOperations.delete",
      "compute.regionOperations.get",
      "compute.regionOperations.getIamPolicy",
      "compute.regionOperations.list",
      "compute.regionOperations.setIamPolicy",
      "compute.regionSecurityPolicies.create",
      "compute.regionSecurityPolicies.createTagBinding",
      "compute.regionSecurityPolicies.delete",
      "compute.regionSecurityPolicies.deleteTagBinding",
      "compute.regionSecurityPolicies.get",
      "compute.regionSecurityPolicies.list",
      "compute.regionSecurityPolicies.listEffectiveTags",
      "compute.regionSecurityPolicies.listTagBindings",
      "compute.regionSecurityPolicies.update",
      "compute.regionSecurityPolicies.use",
      "compute.regionSslCertificates.create",
      "compute.regionSslCertificates.createTagBinding",
      "compute.regionSslCertificates.delete",
      "compute.regionSslCertificates.deleteTagBinding",
      "compute.regionSslCertificates.get",
      "compute.regionSslCertificates.list",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionSslPolicies.create",
      "compute.regionSslPolicies.delete",
      "compute.regionSslPolicies.get",
      "compute.regionSslPolicies.list",
      "compute.regionSslPolicies.listAvailableFeatures",
      "compute.regionSslPolicies.update",
      "compute.regionSslPolicies.use",
      "compute.regionTargetHttpProxies.create",
      "compute.regionTargetHttpProxies.createTagBinding",
      "compute.regionTargetHttpProxies.delete",
      "compute.regionTargetHttpProxies.deleteTagBinding",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpProxies.setUrlMap",
      "compute.regionTargetHttpProxies.update",
      "compute.regionTargetHttpProxies.use",
      "compute.regionTargetHttpsProxies.create",
      "compute.regionTargetHttpsProxies.createTagBinding",
      "compute.regionTargetHttpsProxies.delete",
      "compute.regionTargetHttpsProxies.deleteTagBinding",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.setSslCertificates",
      "compute.regionTargetHttpsProxies.setUrlMap",
      "compute.regionTargetHttpsProxies.update",
      "compute.regionTargetHttpsProxies.use",
      "compute.regionTargetTcpProxies.create",
      "compute.regionTargetTcpProxies.delete",
      "compute.regionTargetTcpProxies.get",
      "compute.regionTargetTcpProxies.list",
      "compute.regionTargetTcpProxies.use",
      "compute.regionUrlMaps.create",
      "compute.regionUrlMaps.createTagBinding",
      "compute.regionUrlMaps.delete",
      "compute.regionUrlMaps.deleteTagBinding",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.invalidateCache",
      "compute.regionUrlMaps.list",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.regionUrlMaps.update",
      "compute.regionUrlMaps.use",
      "compute.regionUrlMaps.validate",
      "compute.regions.get",
      "compute.regions.list",
      "compute.reservations.create",
      "compute.reservations.delete",
      "compute.reservations.get",
      "compute.reservations.list",
      "compute.reservations.resize",
      "compute.reservations.update",
      "compute.resourcePolicies.create",
      "compute.resourcePolicies.delete",
      "compute.resourcePolicies.get",
      "compute.resourcePolicies.getIamPolicy",
      "compute.resourcePolicies.list",
      "compute.resourcePolicies.setIamPolicy",
      "compute.resourcePolicies.update",
      "compute.resourcePolicies.use",
      "compute.resourcePolicies.useReadOnly",
      "compute.routers.create",
      "compute.routers.delete",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routers.update",
      "compute.routers.use",
      "compute.routes.create",
      "compute.routes.createTagBinding",
      "compute.routes.delete",
      "compute.routes.deleteTagBinding",
      "compute.routes.get",
      "compute.routes.list",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.securityPolicies.addAssociation",
      "compute.securityPolicies.copyRules",
      "compute.securityPolicies.create",
      "compute.securityPolicies.createTagBinding",
      "compute.securityPolicies.delete",
      "compute.securityPolicies.deleteTagBinding",
      "compute.securityPolicies.get",
      "compute.securityPolicies.getIamPolicy",
      "compute.securityPolicies.list",
      "compute.securityPolicies.listEffectiveTags",
      "compute.securityPolicies.listTagBindings",
      "compute.securityPolicies.move",
      "compute.securityPolicies.removeAssociation",
      "compute.securityPolicies.setIamPolicy",
      "compute.securityPolicies.setLabels",
      "compute.securityPolicies.update",
      "compute.securityPolicies.use",
      "compute.serviceAttachments.create",
      "compute.serviceAttachments.delete",
      "compute.serviceAttachments.get",
      "compute.serviceAttachments.getIamPolicy",
      "compute.serviceAttachments.list",
      "compute.serviceAttachments.setIamPolicy",
      "compute.serviceAttachments.update",
      "compute.serviceAttachments.use",
      "compute.snapshots.create",
      "compute.snapshots.createTagBinding",
      "compute.snapshots.delete",
      "compute.snapshots.deleteTagBinding",
      "compute.snapshots.get",
      "compute.snapshots.getIamPolicy",
      "compute.snapshots.list",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.snapshots.setIamPolicy",
      "compute.snapshots.setLabels",
      "compute.snapshots.useReadOnly",
      "compute.sslCertificates.create",
      "compute.sslCertificates.createTagBinding",
      "compute.sslCertificates.delete",
      "compute.sslCertificates.deleteTagBinding",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.create",
      "compute.sslPolicies.createTagBinding",
      "compute.sslPolicies.delete",
      "compute.sslPolicies.deleteTagBinding",
      "compute.sslPolicies.get",
      "compute.sslPolicies.list",
      "compute.sslPolicies.listAvailableFeatures",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.sslPolicies.update",
      "compute.sslPolicies.use",
      "compute.subnetworks.create",
      "compute.subnetworks.createTagBinding",
      "compute.subnetworks.delete",
      "compute.subnetworks.deleteTagBinding",
      "compute.subnetworks.expandIpCidrRange",
      "compute.subnetworks.get",
      "compute.subnetworks.getIamPolicy",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.subnetworks.mirror",
      "compute.subnetworks.setIamPolicy",
      "compute.subnetworks.setPrivateIpGoogleAccess",
      "compute.subnetworks.update",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.targetGrpcProxies.create",
      "compute.targetGrpcProxies.delete",
      "compute.targetGrpcProxies.get",
      "compute.targetGrpcProxies.list",
      "compute.targetGrpcProxies.update",
      "compute.targetGrpcProxies.use",
      "compute.targetHttpProxies.create",
      "compute.targetHttpProxies.createTagBinding",
      "compute.targetHttpProxies.delete",
      "compute.targetHttpProxies.deleteTagBinding",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpProxies.setUrlMap",
      "compute.targetHttpProxies.update",
      "compute.targetHttpProxies.use",
      "compute.targetHttpsProxies.create",
      "compute.targetHttpsProxies.createTagBinding",
      "compute.targetHttpsProxies.delete",
      "compute.targetHttpsProxies.deleteTagBinding",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetHttpsProxies.setCertificateMap",
      "compute.targetHttpsProxies.setQuicOverride",
      "compute.targetHttpsProxies.setSslCertificates",
      "compute.targetHttpsProxies.setSslPolicy",
      "compute.targetHttpsProxies.setUrlMap",
      "compute.targetHttpsProxies.update",
      "compute.targetHttpsProxies.use",
      "compute.targetInstances.create",
      "compute.targetInstances.createTagBinding",
      "compute.targetInstances.delete",
      "compute.targetInstances.deleteTagBinding",
      "compute.targetInstances.get",
      "compute.targetInstances.list",
      "compute.targetInstances.listEffectiveTags",
      "compute.targetInstances.listTagBindings",
      "compute.targetInstances.setSecurityPolicy",
      "compute.targetInstances.use",
      "compute.targetPools.addHealthCheck",
      "compute.targetPools.addInstance",
      "compute.targetPools.create",
      "compute.targetPools.createTagBinding",
      "compute.targetPools.delete",
      "compute.targetPools.deleteTagBinding",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.targetPools.removeHealthCheck",
      "compute.targetPools.removeInstance",
      "compute.targetPools.setSecurityPolicy",
      "compute.targetPools.update",
      "compute.targetPools.use",
      "compute.targetSslProxies.create",
      "compute.targetSslProxies.createTagBinding",
      "compute.targetSslProxies.delete",
      "compute.targetSslProxies.deleteTagBinding",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetSslProxies.listEffectiveTags",
      "compute.targetSslProxies.listTagBindings",
      "compute.targetSslProxies.setBackendService",
      "compute.targetSslProxies.setCertificateMap",
      "compute.targetSslProxies.setProxyHeader",
      "compute.targetSslProxies.setSslCertificates",
      "compute.targetSslProxies.setSslPolicy",
      "compute.targetSslProxies.update",
      "compute.targetSslProxies.use",
      "compute.targetTcpProxies.create",
      "compute.targetTcpProxies.createTagBinding",
      "compute.targetTcpProxies.delete",
      "compute.targetTcpProxies.deleteTagBinding",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.targetTcpProxies.update",
      "compute.targetTcpProxies.use",
      "compute.targetVpnGateways.create",
      "compute.targetVpnGateways.delete",
      "compute.targetVpnGateways.get",
      "compute.targetVpnGateways.list",
      "compute.targetVpnGateways.setLabels",
      "compute.targetVpnGateways.use",
      "compute.urlMaps.create",
      "compute.urlMaps.createTagBinding",
      "compute.urlMaps.delete",
      "compute.urlMaps.deleteTagBinding",
      "compute.urlMaps.get",
      "compute.urlMaps.invalidateCache",
      "compute.urlMaps.list",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "compute.urlMaps.update",
      "compute.urlMaps.use",
      "compute.urlMaps.validate",
      "compute.vpnGateways.create",
      "compute.vpnGateways.delete",
      "compute.vpnGateways.get",
      "compute.vpnGateways.list",
      "compute.vpnGateways.setLabels",
      "compute.vpnGateways.use",
      "compute.vpnTunnels.create",
      "compute.vpnTunnels.delete",
      "compute.vpnTunnels.get",
      "compute.vpnTunnels.list",
      "compute.vpnTunnels.setLabels",
      "compute.zoneOperations.delete",
      "compute.zoneOperations.get",
      "compute.zoneOperations.getIamPolicy",
      "compute.zoneOperations.list",
      "compute.zoneOperations.setIamPolicy",
      "compute.zones.get",
      "compute.zones.list",
      "confidentialcomputing.challenges.create",
      "confidentialcomputing.challenges.verify",
      "confidentialcomputing.locations.get",
      "confidentialcomputing.locations.list",
      "config.deployments.create",
      "config.deployments.delete",
      "config.deployments.get",
      "config.deployments.getIamPolicy",
      "config.deployments.list",
      "config.deployments.setIamPolicy",
      "config.deployments.update",
      "config.locations.get",
      "config.locations.list",
      "config.operations.cancel",
      "config.operations.delete",
      "config.operations.get",
      "config.operations.list",
      "config.resources.get",
      "config.resources.list",
      "config.revisions.get",
      "config.revisions.list",
      "connectors.actions.execute",
      "connectors.actions.list",
      "connectors.connections.create",
      "connectors.connections.delete",
      "connectors.connections.executeSqlQuery",
      "connectors.connections.get",
      "connectors.connections.getConnectionSchemaMetadata",
      "connectors.connections.getIamPolicy",
      "connectors.connections.getRuntimeActionSchema",
      "connectors.connections.getRuntimeEntitySchema",
      "connectors.connections.list",
      "connectors.connections.setIamPolicy",
      "connectors.connections.update",
      "connectors.connectors.get",
      "connectors.connectors.list",
      "connectors.endpointAttachments.create",
      "connectors.endpointAttachments.delete",
      "connectors.endpointAttachments.get",
      "connectors.endpointAttachments.getIamPolicy",
      "connectors.endpointAttachments.list",
      "connectors.endpointAttachments.setIamPolicy",
      "connectors.endpointAttachments.update",
      "connectors.entities.create",
      "connectors.entities.delete",
      "connectors.entities.deleteEntitiesWithConditions",
      "connectors.entities.get",
      "connectors.entities.list",
      "connectors.entities.update",
      "connectors.entities.updateEntitiesWithConditions",
      "connectors.entityTypes.list",
      "connectors.eventSubscriptions.create",
      "connectors.eventSubscriptions.delete",
      "connectors.eventSubscriptions.get",
      "connectors.eventSubscriptions.list",
      "connectors.eventSubscriptions.update",
      "connectors.eventtypes.get",
      "connectors.eventtypes.list",
      "connectors.locations.get",
      "connectors.locations.list",
      "connectors.managedZones.create",
      "connectors.managedZones.delete",
      "connectors.managedZones.get",
      "connectors.managedZones.getIamPolicy",
      "connectors.managedZones.list",
      "connectors.managedZones.setIamPolicy",
      "connectors.managedZones.update",
      "connectors.operations.cancel",
      "connectors.operations.delete",
      "connectors.operations.get",
      "connectors.operations.list",
      "connectors.providers.get",
      "connectors.providers.list",
      "connectors.runtimeconfig.get",
      "connectors.schemaMetadata.refresh",
      "connectors.settings.get",
      "connectors.settings.update",
      "connectors.versions.get",
      "connectors.versions.list",
      "consumerprocurement.accounts.create",
      "consumerprocurement.accounts.delete",
      "consumerprocurement.accounts.get",
      "consumerprocurement.accounts.list",
      "consumerprocurement.consents.allowProjectGrant",
      "consumerprocurement.consents.check",
      "consumerprocurement.consents.grant",
      "consumerprocurement.consents.list",
      "consumerprocurement.consents.revoke",
      "consumerprocurement.entitlements.get",
      "consumerprocurement.entitlements.list",
      "consumerprocurement.events.get",
      "consumerprocurement.events.list",
      "consumerprocurement.freeTrials.create",
      "consumerprocurement.freeTrials.get",
      "consumerprocurement.freeTrials.list",
      "consumerprocurement.orderAttributions.get",
      "consumerprocurement.orderAttributions.list",
      "consumerprocurement.orderAttributions.update",
      "consumerprocurement.orders.cancel",
      "consumerprocurement.orders.get",
      "consumerprocurement.orders.list",
      "consumerprocurement.orders.modify",
      "consumerprocurement.orders.place",
      "contactcenteraiplatform.contactCenters.create",
      "contactcenteraiplatform.contactCenters.delete",
      "contactcenteraiplatform.contactCenters.get",
      "contactcenteraiplatform.contactCenters.list",
      "contactcenteraiplatform.contactCenters.program",
      "contactcenteraiplatform.contactCenters.queryQuota",
      "contactcenteraiplatform.contactCenters.update",
      "contactcenteraiplatform.locations.get",
      "contactcenteraiplatform.locations.list",
      "contactcenteraiplatform.operations.cancel",
      "contactcenteraiplatform.operations.delete",
      "contactcenteraiplatform.operations.get",
      "contactcenteraiplatform.operations.list",
      "contactcenterinsights.analyses.create",
      "contactcenterinsights.analyses.delete",
      "contactcenterinsights.analyses.get",
      "contactcenterinsights.analyses.list",
      "contactcenterinsights.conversations.create",
      "contactcenterinsights.conversations.delete",
      "contactcenterinsights.conversations.export",
      "contactcenterinsights.conversations.get",
      "contactcenterinsights.conversations.list",
      "contactcenterinsights.conversations.update",
      "contactcenterinsights.conversations.upload",
      "contactcenterinsights.issueModels.create",
      "contactcenterinsights.issueModels.delete",
      "contactcenterinsights.issueModels.deploy",
      "contactcenterinsights.issueModels.export",
      "contactcenterinsights.issueModels.get",
      "contactcenterinsights.issueModels.list",
      "contactcenterinsights.issueModels.undeploy",
      "contactcenterinsights.issueModels.update",
      "contactcenterinsights.issues.create",
      "contactcenterinsights.issues.delete",
      "contactcenterinsights.issues.get",
      "contactcenterinsights.issues.list",
      "contactcenterinsights.issues.update",
      "contactcenterinsights.operations.get",
      "contactcenterinsights.operations.list",
      "contactcenterinsights.phraseMatchers.create",
      "contactcenterinsights.phraseMatchers.delete",
      "contactcenterinsights.phraseMatchers.get",
      "contactcenterinsights.phraseMatchers.list",
      "contactcenterinsights.phraseMatchers.update",
      "contactcenterinsights.settings.get",
      "contactcenterinsights.settings.update",
      "contactcenterinsights.views.create",
      "contactcenterinsights.views.delete",
      "contactcenterinsights.views.get",
      "contactcenterinsights.views.list",
      "contactcenterinsights.views.update",
      "container.apiServices.create",
      "container.apiServices.delete",
      "container.apiServices.get",
      "container.apiServices.getStatus",
      "container.apiServices.list",
      "container.apiServices.update",
      "container.apiServices.updateStatus",
      "container.auditSinks.create",
      "container.auditSinks.delete",
      "container.auditSinks.get",
      "container.auditSinks.list",
      "container.auditSinks.update",
      "container.backendConfigs.create",
      "container.backendConfigs.delete",
      "container.backendConfigs.get",
      "container.backendConfigs.list",
      "container.backendConfigs.update",
      "container.bindings.create",
      "container.bindings.delete",
      "container.bindings.get",
      "container.bindings.list",
      "container.bindings.update",
      "container.certificateSigningRequests.approve",
      "container.certificateSigningRequests.create",
      "container.certificateSigningRequests.delete",
      "container.certificateSigningRequests.get",
      "container.certificateSigningRequests.getStatus",
      "container.certificateSigningRequests.list",
      "container.certificateSigningRequests.update",
      "container.certificateSigningRequests.updateStatus",
      "container.clusterRoleBindings.create",
      "container.clusterRoleBindings.delete",
      "container.clusterRoleBindings.get",
      "container.clusterRoleBindings.list",
      "container.clusterRoleBindings.update",
      "container.clusterRoles.bind",
      "container.clusterRoles.create",
      "container.clusterRoles.delete",
      "container.clusterRoles.escalate",
      "container.clusterRoles.get",
      "container.clusterRoles.list",
      "container.clusterRoles.update",
      "container.clusters.create",
      "container.clusters.createTagBinding",
      "container.clusters.delete",
      "container.clusters.deleteTagBinding",
      "container.clusters.get",
      "container.clusters.getCredentials",
      "container.clusters.impersonate",
      "container.clusters.list",
      "container.clusters.listEffectiveTags",
      "container.clusters.listTagBindings",
      "container.clusters.update",
      "container.componentStatuses.get",
      "container.componentStatuses.list",
      "container.configMaps.create",
      "container.configMaps.delete",
      "container.configMaps.get",
      "container.configMaps.list",
      "container.configMaps.update",
      "container.controllerRevisions.create",
      "container.controllerRevisions.delete",
      "container.controllerRevisions.get",
      "container.controllerRevisions.list",
      "container.controllerRevisions.update",
      "container.cronJobs.create",
      "container.cronJobs.delete",
      "container.cronJobs.get",
      "container.cronJobs.getStatus",
      "container.cronJobs.list",
      "container.cronJobs.update",
      "container.cronJobs.updateStatus",
      "container.csiDrivers.create",
      "container.csiDrivers.delete",
      "container.csiDrivers.get",
      "container.csiDrivers.list",
      "container.csiDrivers.update",
      "container.csiNodeInfos.create",
      "container.csiNodeInfos.delete",
      "container.csiNodeInfos.get",
      "container.csiNodeInfos.list",
      "container.csiNodeInfos.update",
      "container.csiNodes.create",
      "container.csiNodes.delete",
      "container.csiNodes.get",
      "container.csiNodes.list",
      "container.csiNodes.update",
      "container.customResourceDefinitions.create",
      "container.customResourceDefinitions.delete",
      "container.customResourceDefinitions.get",
      "container.customResourceDefinitions.getStatus",
      "container.customResourceDefinitions.list",
      "container.customResourceDefinitions.update",
      "container.customResourceDefinitions.updateStatus",
      "container.daemonSets.create",
      "container.daemonSets.delete",
      "container.daemonSets.get",
      "container.daemonSets.getStatus",
      "container.daemonSets.list",
      "container.daemonSets.update",
      "container.daemonSets.updateStatus",
      "container.deployments.create",
      "container.deployments.delete",
      "container.deployments.get",
      "container.deployments.getScale",
      "container.deployments.getStatus",
      "container.deployments.list",
      "container.deployments.rollback",
      "container.deployments.update",
      "container.deployments.updateScale",
      "container.deployments.updateStatus",
      "container.endpointSlices.create",
      "container.endpointSlices.delete",
      "container.endpointSlices.get",
      "container.endpointSlices.list",
      "container.endpointSlices.update",
      "container.endpoints.create",
      "container.endpoints.delete",
      "container.endpoints.get",
      "container.endpoints.list",
      "container.endpoints.update",
      "container.events.create",
      "container.events.delete",
      "container.events.get",
      "container.events.list",
      "container.events.update",
      "container.frontendConfigs.create",
      "container.frontendConfigs.delete",
      "container.frontendConfigs.get",
      "container.frontendConfigs.list",
      "container.frontendConfigs.update",
      "container.horizontalPodAutoscalers.create",
      "container.horizontalPodAutoscalers.delete",
      "container.horizontalPodAutoscalers.get",
      "container.horizontalPodAutoscalers.getStatus",
      "container.horizontalPodAutoscalers.list",
      "container.horizontalPodAutoscalers.update",
      "container.horizontalPodAutoscalers.updateStatus",
      "container.ingresses.create",
      "container.ingresses.delete",
      "container.ingresses.get",
      "container.ingresses.getStatus",
      "container.ingresses.list",
      "container.ingresses.update",
      "container.ingresses.updateStatus",
      "container.initializerConfigurations.create",
      "container.initializerConfigurations.delete",
      "container.initializerConfigurations.get",
      "container.initializerConfigurations.list",
      "container.initializerConfigurations.update",
      "container.jobs.create",
      "container.jobs.delete",
      "container.jobs.get",
      "container.jobs.getStatus",
      "container.jobs.list",
      "container.jobs.update",
      "container.jobs.updateStatus",
      "container.leases.create",
      "container.leases.delete",
      "container.leases.get",
      "container.leases.list",
      "container.leases.update",
      "container.limitRanges.create",
      "container.limitRanges.delete",
      "container.limitRanges.get",
      "container.limitRanges.list",
      "container.limitRanges.update",
      "container.localSubjectAccessReviews.create",
      "container.localSubjectAccessReviews.list",
      "container.managedCertificates.create",
      "container.managedCertificates.delete",
      "container.managedCertificates.get",
      "container.managedCertificates.list",
      "container.managedCertificates.update",
      "container.mutatingWebhookConfigurations.create",
      "container.mutatingWebhookConfigurations.delete",
      "container.mutatingWebhookConfigurations.get",
      "container.mutatingWebhookConfigurations.list",
      "container.mutatingWebhookConfigurations.update",
      "container.namespaces.create",
      "container.namespaces.delete",
      "container.namespaces.finalize",
      "container.namespaces.get",
      "container.namespaces.getStatus",
      "container.namespaces.list",
      "container.namespaces.update",
      "container.namespaces.updateStatus",
      "container.networkPolicies.create",
      "container.networkPolicies.delete",
      "container.networkPolicies.get",
      "container.networkPolicies.list",
      "container.networkPolicies.update",
      "container.nodes.create",
      "container.nodes.delete",
      "container.nodes.get",
      "container.nodes.getStatus",
      "container.nodes.list",
      "container.nodes.proxy",
      "container.nodes.update",
      "container.nodes.updateStatus",
      "container.operations.get",
      "container.operations.list",
      "container.persistentVolumeClaims.create",
      "container.persistentVolumeClaims.delete",
      "container.persistentVolumeClaims.get",
      "container.persistentVolumeClaims.getStatus",
      "container.persistentVolumeClaims.list",
      "container.persistentVolumeClaims.update",
      "container.persistentVolumeClaims.updateStatus",
      "container.persistentVolumes.create",
      "container.persistentVolumes.delete",
      "container.persistentVolumes.get",
      "container.persistentVolumes.getStatus",
      "container.persistentVolumes.list",
      "container.persistentVolumes.update",
      "container.persistentVolumes.updateStatus",
      "container.petSets.create",
      "container.petSets.delete",
      "container.petSets.get",
      "container.petSets.list",
      "container.petSets.update",
      "container.petSets.updateStatus",
      "container.podDisruptionBudgets.create",
      "container.podDisruptionBudgets.delete",
      "container.podDisruptionBudgets.get",
      "container.podDisruptionBudgets.getStatus",
      "container.podDisruptionBudgets.list",
      "container.podDisruptionBudgets.update",
      "container.podDisruptionBudgets.updateStatus",
      "container.podPresets.create",
      "container.podPresets.delete",
      "container.podPresets.get",
      "container.podPresets.list",
      "container.podPresets.update",
      "container.podSecurityPolicies.create",
      "container.podSecurityPolicies.delete",
      "container.podSecurityPolicies.get",
      "container.podSecurityPolicies.list",
      "container.podSecurityPolicies.update",
      "container.podSecurityPolicies.use",
      "container.podTemplates.create",
      "container.podTemplates.delete",
      "container.podTemplates.get",
      "container.podTemplates.list",
      "container.podTemplates.update",
      "container.pods.attach",
      "container.pods.create",
      "container.pods.delete",
      "container.pods.evict",
      "container.pods.exec",
      "container.pods.get",
      "container.pods.getLogs",
      "container.pods.getStatus",
      "container.pods.initialize",
      "container.pods.list",
      "container.pods.portForward",
      "container.pods.proxy",
      "container.pods.update",
      "container.pods.updateStatus",
      "container.priorityClasses.create",
      "container.priorityClasses.delete",
      "container.priorityClasses.get",
      "container.priorityClasses.list",
      "container.priorityClasses.update",
      "container.replicaSets.create",
      "container.replicaSets.delete",
      "container.replicaSets.get",
      "container.replicaSets.getScale",
      "container.replicaSets.getStatus",
      "container.replicaSets.list",
      "container.replicaSets.update",
      "container.replicaSets.updateScale",
      "container.replicaSets.updateStatus",
      "container.replicationControllers.create",
      "container.replicationControllers.delete",
      "container.replicationControllers.get",
      "container.replicationControllers.getScale",
      "container.replicationControllers.getStatus",
      "container.replicationControllers.list",
      "container.replicationControllers.update",
      "container.replicationControllers.updateScale",
      "container.replicationControllers.updateStatus",
      "container.resourceQuotas.create",
      "container.resourceQuotas.delete",
      "container.resourceQuotas.get",
      "container.resourceQuotas.getStatus",
      "container.resourceQuotas.list",
      "container.resourceQuotas.update",
      "container.resourceQuotas.updateStatus",
      "container.roleBindings.create",
      "container.roleBindings.delete",
      "container.roleBindings.get",
      "container.roleBindings.list",
      "container.roleBindings.update",
      "container.roles.bind",
      "container.roles.create",
      "container.roles.delete",
      "container.roles.escalate",
      "container.roles.get",
      "container.roles.list",
      "container.roles.update",
      "container.runtimeClasses.create",
      "container.runtimeClasses.delete",
      "container.runtimeClasses.get",
      "container.runtimeClasses.list",
      "container.runtimeClasses.update",
      "container.scheduledJobs.create",
      "container.scheduledJobs.delete",
      "container.scheduledJobs.get",
      "container.scheduledJobs.list",
      "container.scheduledJobs.update",
      "container.scheduledJobs.updateStatus",
      "container.secrets.create",
      "container.secrets.delete",
      "container.secrets.get",
      "container.secrets.list",
      "container.secrets.update",
      "container.selfSubjectAccessReviews.create",
      "container.selfSubjectAccessReviews.list",
      "container.selfSubjectRulesReviews.create",
      "container.serviceAccounts.create",
      "container.serviceAccounts.createToken",
      "container.serviceAccounts.delete",
      "container.serviceAccounts.get",
      "container.serviceAccounts.list",
      "container.serviceAccounts.update",
      "container.services.create",
      "container.services.delete",
      "container.services.get",
      "container.services.getStatus",
      "container.services.list",
      "container.services.proxy",
      "container.services.update",
      "container.services.updateStatus",
      "container.statefulSets.create",
      "container.statefulSets.delete",
      "container.statefulSets.get",
      "container.statefulSets.getScale",
      "container.statefulSets.getStatus",
      "container.statefulSets.list",
      "container.statefulSets.update",
      "container.statefulSets.updateScale",
      "container.statefulSets.updateStatus",
      "container.storageClasses.create",
      "container.storageClasses.delete",
      "container.storageClasses.get",
      "container.storageClasses.list",
      "container.storageClasses.update",
      "container.storageStates.create",
      "container.storageStates.delete",
      "container.storageStates.get",
      "container.storageStates.getStatus",
      "container.storageStates.list",
      "container.storageStates.update",
      "container.storageStates.updateStatus",
      "container.storageVersionMigrations.create",
      "container.storageVersionMigrations.delete",
      "container.storageVersionMigrations.get",
      "container.storageVersionMigrations.getStatus",
      "container.storageVersionMigrations.list",
      "container.storageVersionMigrations.update",
      "container.storageVersionMigrations.updateStatus",
      "container.subjectAccessReviews.create",
      "container.subjectAccessReviews.list",
      "container.thirdPartyObjects.create",
      "container.thirdPartyObjects.delete",
      "container.thirdPartyObjects.get",
      "container.thirdPartyObjects.list",
      "container.thirdPartyObjects.update",
      "container.thirdPartyResources.create",
      "container.thirdPartyResources.delete",
      "container.thirdPartyResources.get",
      "container.thirdPartyResources.list",
      "container.thirdPartyResources.update",
      "container.tokenReviews.create",
      "container.updateInfos.create",
      "container.updateInfos.delete",
      "container.updateInfos.get",
      "container.updateInfos.list",
      "container.updateInfos.update",
      "container.validatingWebhookConfigurations.create",
      "container.validatingWebhookConfigurations.delete",
      "container.validatingWebhookConfigurations.get",
      "container.validatingWebhookConfigurations.list",
      "container.validatingWebhookConfigurations.update",
      "container.volumeAttachments.create",
      "container.volumeAttachments.delete",
      "container.volumeAttachments.get",
      "container.volumeAttachments.getStatus",
      "container.volumeAttachments.list",
      "container.volumeAttachments.update",
      "container.volumeAttachments.updateStatus",
      "container.volumeSnapshotClasses.create",
      "container.volumeSnapshotClasses.delete",
      "container.volumeSnapshotClasses.get",
      "container.volumeSnapshotClasses.list",
      "container.volumeSnapshotClasses.update",
      "container.volumeSnapshotContents.create",
      "container.volumeSnapshotContents.delete",
      "container.volumeSnapshotContents.get",
      "container.volumeSnapshotContents.getStatus",
      "container.volumeSnapshotContents.list",
      "container.volumeSnapshotContents.update",
      "container.volumeSnapshotContents.updateStatus",
      "container.volumeSnapshots.create",
      "container.volumeSnapshots.delete",
      "container.volumeSnapshots.get",
      "container.volumeSnapshots.getStatus",
      "container.volumeSnapshots.list",
      "container.volumeSnapshots.update",
      "container.volumeSnapshots.updateStatus",
      "containeranalysis.notes.attachOccurrence",
      "containeranalysis.notes.create",
      "containeranalysis.notes.delete",
      "containeranalysis.notes.get",
      "containeranalysis.notes.getIamPolicy",
      "containeranalysis.notes.list",
      "containeranalysis.notes.listOccurrences",
      "containeranalysis.notes.setIamPolicy",
      "containeranalysis.notes.update",
      "containeranalysis.occurrences.create",
      "containeranalysis.occurrences.delete",
      "containeranalysis.occurrences.get",
      "containeranalysis.occurrences.getIamPolicy",
      "containeranalysis.occurrences.list",
      "containeranalysis.occurrences.setIamPolicy",
      "containeranalysis.occurrences.update",
      "containersecurity.clusterSummaries.list",
      "containersecurity.findings.list",
      "containersecurity.locations.get",
      "containersecurity.locations.list",
      "containersecurity.workloadConfigAudits.list",
      "contentwarehouse.dataExportJobs.create",
      "contentwarehouse.dataExportJobs.update",
      "contentwarehouse.documentSchemas.create",
      "contentwarehouse.documentSchemas.delete",
      "contentwarehouse.documentSchemas.get",
      "contentwarehouse.documentSchemas.list",
      "contentwarehouse.documentSchemas.update",
      "contentwarehouse.documents.create",
      "contentwarehouse.documents.delete",
      "contentwarehouse.documents.get",
      "contentwarehouse.documents.getIamPolicy",
      "contentwarehouse.documents.setIamPolicy",
      "contentwarehouse.documents.update",
      "contentwarehouse.links.create",
      "contentwarehouse.links.delete",
      "contentwarehouse.links.get",
      "contentwarehouse.links.update",
      "contentwarehouse.locations.initialize",
      "contentwarehouse.operations.get",
      "contentwarehouse.rawDocuments.download",
      "contentwarehouse.rawDocuments.upload",
      "contentwarehouse.ruleSets.create",
      "contentwarehouse.ruleSets.delete",
      "contentwarehouse.ruleSets.get",
      "contentwarehouse.ruleSets.list",
      "contentwarehouse.ruleSets.update",
      "contentwarehouse.schemas.create",
      "contentwarehouse.schemas.delete",
      "contentwarehouse.schemas.get",
      "contentwarehouse.schemas.list",
      "contentwarehouse.schemas.update",
      "contentwarehouse.synonymSets.create",
      "contentwarehouse.synonymSets.delete",
      "contentwarehouse.synonymSets.get",
      "contentwarehouse.synonymSets.list",
      "contentwarehouse.synonymSets.update",
      "datacatalog.catalogs.searchAll",
      "datacatalog.categories.getIamPolicy",
      "datacatalog.categories.setIamPolicy",
      "datacatalog.entries.create",
      "datacatalog.entries.createGlossary",
      "datacatalog.entries.createGlossaryCategory",
      "datacatalog.entries.createGlossaryTerm",
      "datacatalog.entries.delete",
      "datacatalog.entries.deleteGlossary",
      "datacatalog.entries.deleteGlossaryCategory",
      "datacatalog.entries.deleteGlossaryTerm",
      "datacatalog.entries.get",
      "datacatalog.entries.getIamPolicy",
      "datacatalog.entries.list",
      "datacatalog.entries.setIamPolicy",
      "datacatalog.entries.update",
      "datacatalog.entries.updateContacts",
      "datacatalog.entries.updateGlossary",
      "datacatalog.entries.updateGlossaryCategory",
      "datacatalog.entries.updateGlossaryTerm",
      "datacatalog.entries.updateOverview",
      "datacatalog.entries.updateTag",
      "datacatalog.entryGroups.create",
      "datacatalog.entryGroups.delete",
      "datacatalog.entryGroups.get",
      "datacatalog.entryGroups.getIamPolicy",
      "datacatalog.entryGroups.list",
      "datacatalog.entryGroups.setIamPolicy",
      "datacatalog.entryGroups.update",
      "datacatalog.entryGroups.updateTag",
      "datacatalog.operations.list",
      "datacatalog.relationships.create",
      "datacatalog.relationships.createBelongsTo",
      "datacatalog.relationships.createIsDescribedBy",
      "datacatalog.relationships.createIsRelatedTo",
      "datacatalog.relationships.createIsSynonymousTo",
      "datacatalog.relationships.delete",
      "datacatalog.relationships.deleteBelongsTo",
      "datacatalog.relationships.deleteIsDescribedBy",
      "datacatalog.relationships.deleteIsRelatedTo",
      "datacatalog.relationships.deleteIsSynonymousTo",
      "datacatalog.relationships.list",
      "datacatalog.tagTemplates.create",
      "datacatalog.tagTemplates.delete",
      "datacatalog.tagTemplates.get",
      "datacatalog.tagTemplates.getIamPolicy",
      "datacatalog.tagTemplates.getTag",
      "datacatalog.tagTemplates.setIamPolicy",
      "datacatalog.tagTemplates.update",
      "datacatalog.tagTemplates.use",
      "datacatalog.taxonomies.create",
      "datacatalog.taxonomies.delete",
      "datacatalog.taxonomies.get",
      "datacatalog.taxonomies.getIamPolicy",
      "datacatalog.taxonomies.list",
      "datacatalog.taxonomies.setIamPolicy",
      "datacatalog.taxonomies.update",
      "dataconnectors.connectors.create",
      "dataconnectors.connectors.delete",
      "dataconnectors.connectors.get",
      "dataconnectors.connectors.getIamPolicy",
      "dataconnectors.connectors.list",
      "dataconnectors.connectors.setIamPolicy",
      "dataconnectors.connectors.update",
      "dataconnectors.connectors.use",
      "dataconnectors.locations.get",
      "dataconnectors.locations.list",
      "dataconnectors.operations.cancel",
      "dataconnectors.operations.delete",
      "dataconnectors.operations.get",
      "dataconnectors.operations.list",
      "dataflow.jobs.cancel",
      "dataflow.jobs.create",
      "dataflow.jobs.get",
      "dataflow.jobs.list",
      "dataflow.jobs.snapshot",
      "dataflow.jobs.updateContents",
      "dataflow.messages.list",
      "dataflow.metrics.get",
      "dataflow.shuffle.read",
      "dataflow.shuffle.write",
      "dataflow.snapshots.delete",
      "dataflow.snapshots.get",
      "dataflow.snapshots.list",
      "dataflow.streamingWorkItems.ImportState",
      "dataflow.streamingWorkItems.commitWork",
      "dataflow.streamingWorkItems.getData",
      "dataflow.streamingWorkItems.getWork",
      "dataflow.streamingWorkItems.getWorkerMetadata",
      "dataflow.workItems.lease",
      "dataflow.workItems.sendMessage",
      "dataflow.workItems.update",
      "dataform.compilationResults.create",
      "dataform.compilationResults.get",
      "dataform.compilationResults.list",
      "dataform.compilationResults.query",
      "dataform.locations.get",
      "dataform.locations.list",
      "dataform.releaseConfigs.create",
      "dataform.releaseConfigs.delete",
      "dataform.releaseConfigs.get",
      "dataform.releaseConfigs.list",
      "dataform.releaseConfigs.update",
      "dataform.repositories.commit",
      "dataform.repositories.computeAccessTokenStatus",
      "dataform.repositories.create",
      "dataform.repositories.delete",
      "dataform.repositories.fetchHistory",
      "dataform.repositories.fetchRemoteBranches",
      "dataform.repositories.get",
      "dataform.repositories.getIamPolicy",
      "dataform.repositories.list",
      "dataform.repositories.queryDirectoryContents",
      "dataform.repositories.readFile",
      "dataform.repositories.setIamPolicy",
      "dataform.repositories.update",
      "dataform.workflowConfigs.create",
      "dataform.workflowConfigs.delete",
      "dataform.workflowConfigs.get",
      "dataform.workflowConfigs.list",
      "dataform.workflowConfigs.update",
      "dataform.workflowInvocations.cancel",
      "dataform.workflowInvocations.create",
      "dataform.workflowInvocations.delete",
      "dataform.workflowInvocations.get",
      "dataform.workflowInvocations.list",
      "dataform.workflowInvocations.query",
      "dataform.workspaces.commit",
      "dataform.workspaces.create",
      "dataform.workspaces.delete",
      "dataform.workspaces.fetchFileDiff",
      "dataform.workspaces.fetchFileGitStatuses",
      "dataform.workspaces.fetchGitAheadBehind",
      "dataform.workspaces.get",
      "dataform.workspaces.getIamPolicy",
      "dataform.workspaces.installNpmPackages",
      "dataform.workspaces.list",
      "dataform.workspaces.makeDirectory",
      "dataform.workspaces.moveDirectory",
      "dataform.workspaces.moveFile",
      "dataform.workspaces.pull",
      "dataform.workspaces.push",
      "dataform.workspaces.queryDirectoryContents",
      "dataform.workspaces.readFile",
      "dataform.workspaces.removeDirectory",
      "dataform.workspaces.removeFile",
      "dataform.workspaces.reset",
      "dataform.workspaces.setIamPolicy",
      "dataform.workspaces.writeFile",
      "datafusion.artifacts.create",
      "datafusion.artifacts.delete",
      "datafusion.artifacts.get",
      "datafusion.artifacts.list",
      "datafusion.artifacts.update",
      "datafusion.instances.create",
      "datafusion.instances.delete",
      "datafusion.instances.get",
      "datafusion.instances.getIamPolicy",
      "datafusion.instances.list",
      "datafusion.instances.restart",
      "datafusion.instances.runtime",
      "datafusion.instances.setIamPolicy",
      "datafusion.instances.update",
      "datafusion.instances.upgrade",
      "datafusion.locations.get",
      "datafusion.locations.list",
      "datafusion.operations.cancel",
      "datafusion.operations.delete",
      "datafusion.operations.get",
      "datafusion.operations.list",
      "datafusion.pipelineConnections.create",
      "datafusion.pipelineConnections.delete",
      "datafusion.pipelineConnections.get",
      "datafusion.pipelineConnections.list",
      "datafusion.pipelineConnections.update",
      "datafusion.pipelineConnections.use",
      "datafusion.pipelines.create",
      "datafusion.pipelines.delete",
      "datafusion.pipelines.execute",
      "datafusion.pipelines.get",
      "datafusion.pipelines.list",
      "datafusion.pipelines.preview",
      "datafusion.pipelines.update",
      "datafusion.profiles.create",
      "datafusion.profiles.delete",
      "datafusion.profiles.get",
      "datafusion.profiles.list",
      "datafusion.profiles.update",
      "datafusion.secureKeys.create",
      "datafusion.secureKeys.delete",
      "datafusion.secureKeys.getSecret",
      "datafusion.secureKeys.list",
      "datafusion.secureKeys.update",
      "datalabeling.annotateddatasets.delete",
      "datalabeling.annotateddatasets.get",
      "datalabeling.annotateddatasets.label",
      "datalabeling.annotateddatasets.list",
      "datalabeling.annotationspecsets.create",
      "datalabeling.annotationspecsets.delete",
      "datalabeling.annotationspecsets.get",
      "datalabeling.annotationspecsets.list",
      "datalabeling.dataitems.get",
      "datalabeling.dataitems.list",
      "datalabeling.datasets.create",
      "datalabeling.datasets.delete",
      "datalabeling.datasets.export",
      "datalabeling.datasets.get",
      "datalabeling.datasets.import",
      "datalabeling.datasets.list",
      "datalabeling.examples.get",
      "datalabeling.examples.list",
      "datalabeling.instructions.create",
      "datalabeling.instructions.delete",
      "datalabeling.instructions.get",
      "datalabeling.instructions.list",
      "datalabeling.operations.cancel",
      "datalabeling.operations.get",
      "datalabeling.operations.list",
      "datalineage.events.create",
      "datalineage.events.delete",
      "datalineage.events.get",
      "datalineage.events.list",
      "datalineage.locations.searchLinks",
      "datalineage.operations.get",
      "datalineage.processes.create",
      "datalineage.processes.delete",
      "datalineage.processes.get",
      "datalineage.processes.list",
      "datalineage.processes.update",
      "datalineage.runs.create",
      "datalineage.runs.delete",
      "datalineage.runs.get",
      "datalineage.runs.list",
      "datalineage.runs.update",
      "datamigration.connectionprofiles.create",
      "datamigration.connectionprofiles.delete",
      "datamigration.connectionprofiles.get",
      "datamigration.connectionprofiles.getIamPolicy",
      "datamigration.connectionprofiles.list",
      "datamigration.connectionprofiles.setIamPolicy",
      "datamigration.connectionprofiles.update",
      "datamigration.conversionworkspaces.commit",
      "datamigration.conversionworkspaces.convert",
      "datamigration.conversionworkspaces.create",
      "datamigration.conversionworkspaces.delete",
      "datamigration.conversionworkspaces.get",
      "datamigration.conversionworkspaces.getIamPolicy",
      "datamigration.conversionworkspaces.list",
      "datamigration.conversionworkspaces.rollback",
      "datamigration.conversionworkspaces.seed",
      "datamigration.conversionworkspaces.setIamPolicy",
      "datamigration.conversionworkspaces.update",
      "datamigration.locations.fetchStaticIps",
      "datamigration.locations.get",
      "datamigration.locations.list",
      "datamigration.mappingrules.getIamPolicy",
      "datamigration.mappingrules.import",
      "datamigration.mappingrules.setIamPolicy",
      "datamigration.migrationjobs.create",
      "datamigration.migrationjobs.delete",
      "datamigration.migrationjobs.generateSshScript",
      "datamigration.migrationjobs.generateTcpProxyScript",
      "datamigration.migrationjobs.get",
      "datamigration.migrationjobs.getIamPolicy",
      "datamigration.migrationjobs.list",
      "datamigration.migrationjobs.promote",
      "datamigration.migrationjobs.restart",
      "datamigration.migrationjobs.resume",
      "datamigration.migrationjobs.setIamPolicy",
      "datamigration.migrationjobs.start",
      "datamigration.migrationjobs.stop",
      "datamigration.migrationjobs.update",
      "datamigration.migrationjobs.verify",
      "datamigration.operations.cancel",
      "datamigration.operations.delete",
      "datamigration.operations.get",
      "datamigration.operations.list",
      "datamigration.privateconnections.create",
      "datamigration.privateconnections.delete",
      "datamigration.privateconnections.get",
      "datamigration.privateconnections.getIamPolicy",
      "datamigration.privateconnections.list",
      "datamigration.privateconnections.setIamPolicy",
      "datapipelines.jobs.list",
      "datapipelines.pipelines.create",
      "datapipelines.pipelines.delete",
      "datapipelines.pipelines.get",
      "datapipelines.pipelines.list",
      "datapipelines.pipelines.run",
      "datapipelines.pipelines.stop",
      "datapipelines.pipelines.update",
      "dataplex.assetActions.list",
      "dataplex.assets.create",
      "dataplex.assets.delete",
      "dataplex.assets.get",
      "dataplex.assets.getIamPolicy",
      "dataplex.assets.list",
      "dataplex.assets.ownData",
      "dataplex.assets.readData",
      "dataplex.assets.setIamPolicy",
      "dataplex.assets.update",
      "dataplex.assets.writeData",
      "dataplex.content.create",
      "dataplex.content.delete",
      "dataplex.content.get",
      "dataplex.content.getIamPolicy",
      "dataplex.content.list",
      "dataplex.content.setIamPolicy",
      "dataplex.content.update",
      "dataplex.dataAttributeBindings.create",
      "dataplex.dataAttributeBindings.delete",
      "dataplex.dataAttributeBindings.get",
      "dataplex.dataAttributeBindings.getIamPolicy",
      "dataplex.dataAttributeBindings.list",
      "dataplex.dataAttributeBindings.setIamPolicy",
      "dataplex.dataAttributeBindings.update",
      "dataplex.dataAttributes.bind",
      "dataplex.dataAttributes.create",
      "dataplex.dataAttributes.delete",
      "dataplex.dataAttributes.get",
      "dataplex.dataAttributes.getIamPolicy",
      "dataplex.dataAttributes.list",
      "dataplex.dataAttributes.setIamPolicy",
      "dataplex.dataAttributes.update",
      "dataplex.dataTaxonomies.configureDataAccess",
      "dataplex.dataTaxonomies.configureResourceAccess",
      "dataplex.dataTaxonomies.create",
      "dataplex.dataTaxonomies.delete",
      "dataplex.dataTaxonomies.get",
      "dataplex.dataTaxonomies.getIamPolicy",
      "dataplex.dataTaxonomies.list",
      "dataplex.dataTaxonomies.setIamPolicy",
      "dataplex.dataTaxonomies.update",
      "dataplex.datascans.create",
      "dataplex.datascans.delete",
      "dataplex.datascans.get",
      "dataplex.datascans.getData",
      "dataplex.datascans.getIamPolicy",
      "dataplex.datascans.list",
      "dataplex.datascans.run",
      "dataplex.datascans.setIamPolicy",
      "dataplex.datascans.update",
      "dataplex.entities.create",
      "dataplex.entities.delete",
      "dataplex.entities.get",
      "dataplex.entities.list",
      "dataplex.entities.update",
      "dataplex.environments.create",
      "dataplex.environments.delete",
      "dataplex.environments.execute",
      "dataplex.environments.get",
      "dataplex.environments.getIamPolicy",
      "dataplex.environments.list",
      "dataplex.environments.setIamPolicy",
      "dataplex.environments.update",
      "dataplex.lakeActions.list",
      "dataplex.lakes.create",
      "dataplex.lakes.delete",
      "dataplex.lakes.get",
      "dataplex.lakes.getIamPolicy",
      "dataplex.lakes.list",
      "dataplex.lakes.setIamPolicy",
      "dataplex.lakes.update",
      "dataplex.locations.get",
      "dataplex.locations.list",
      "dataplex.operations.cancel",
      "dataplex.operations.delete",
      "dataplex.operations.get",
      "dataplex.operations.list",
      "dataplex.partitions.create",
      "dataplex.partitions.delete",
      "dataplex.partitions.get",
      "dataplex.partitions.list",
      "dataplex.partitions.update",
      "dataplex.tasks.cancel",
      "dataplex.tasks.create",
      "dataplex.tasks.delete",
      "dataplex.tasks.get",
      "dataplex.tasks.getIamPolicy",
      "dataplex.tasks.list",
      "dataplex.tasks.run",
      "dataplex.tasks.setIamPolicy",
      "dataplex.tasks.update",
      "dataplex.zoneActions.list",
      "dataplex.zones.create",
      "dataplex.zones.delete",
      "dataplex.zones.get",
      "dataplex.zones.getIamPolicy",
      "dataplex.zones.list",
      "dataplex.zones.setIamPolicy",
      "dataplex.zones.update",
      "dataprep.projects.use",
      "dataproc.agents.create",
      "dataproc.agents.delete",
      "dataproc.agents.get",
      "dataproc.agents.list",
      "dataproc.agents.update",
      "dataproc.autoscalingPolicies.create",
      "dataproc.autoscalingPolicies.delete",
      "dataproc.autoscalingPolicies.get",
      "dataproc.autoscalingPolicies.getIamPolicy",
      "dataproc.autoscalingPolicies.list",
      "dataproc.autoscalingPolicies.setIamPolicy",
      "dataproc.autoscalingPolicies.update",
      "dataproc.autoscalingPolicies.use",
      "dataproc.batches.cancel",
      "dataproc.batches.create",
      "dataproc.batches.delete",
      "dataproc.batches.get",
      "dataproc.batches.list",
      "dataproc.clusters.create",
      "dataproc.clusters.delete",
      "dataproc.clusters.get",
      "dataproc.clusters.getIamPolicy",
      "dataproc.clusters.list",
      "dataproc.clusters.setIamPolicy",
      "dataproc.clusters.start",
      "dataproc.clusters.stop",
      "dataproc.clusters.update",
      "dataproc.clusters.use",
      "dataproc.jobs.cancel",
      "dataproc.jobs.create",
      "dataproc.jobs.delete",
      "dataproc.jobs.get",
      "dataproc.jobs.getIamPolicy",
      "dataproc.jobs.list",
      "dataproc.jobs.setIamPolicy",
      "dataproc.jobs.update",
      "dataproc.nodeGroups.create",
      "dataproc.nodeGroups.get",
      "dataproc.nodeGroups.update",
      "dataproc.operations.cancel",
      "dataproc.operations.delete",
      "dataproc.operations.get",
      "dataproc.operations.getIamPolicy",
      "dataproc.operations.list",
      "dataproc.operations.setIamPolicy",
      "dataproc.tasks.lease",
      "dataproc.tasks.listInvalidatedLeases",
      "dataproc.tasks.reportStatus",
      "dataproc.workflowTemplates.create",
      "dataproc.workflowTemplates.delete",
      "dataproc.workflowTemplates.get",
      "dataproc.workflowTemplates.getIamPolicy",
      "dataproc.workflowTemplates.instantiate",
      "dataproc.workflowTemplates.instantiateInline",
      "dataproc.workflowTemplates.list",
      "dataproc.workflowTemplates.setIamPolicy",
      "dataproc.workflowTemplates.update",
      "dataprocessing.datasources.get",
      "dataprocessing.datasources.list",
      "dataprocessing.datasources.update",
      "dataprocessing.featurecontrols.list",
      "dataprocessing.featurecontrols.update",
      "dataprocessing.groupcontrols.get",
      "dataprocessing.groupcontrols.list",
      "dataprocessing.groupcontrols.update",
      "datastore.databases.create",
      "datastore.databases.createTagBinding",
      "datastore.databases.delete",
      "datastore.databases.deleteTagBinding",
      "datastore.databases.export",
      "datastore.databases.get",
      "datastore.databases.getMetadata",
      "datastore.databases.import",
      "datastore.databases.list",
      "datastore.databases.listEffectiveTags",
      "datastore.databases.listTagBindings",
      "datastore.databases.update",
      "datastore.entities.allocateIds",
      "datastore.entities.create",
      "datastore.entities.delete",
      "datastore.entities.get",
      "datastore.entities.list",
      "datastore.entities.update",
      "datastore.indexes.create",
      "datastore.indexes.delete",
      "datastore.indexes.get",
      "datastore.indexes.list",
      "datastore.indexes.update",
      "datastore.keyVisualizerScans.get",
      "datastore.keyVisualizerScans.list",
      "datastore.locations.get",
      "datastore.locations.list",
      "datastore.namespaces.get",
      "datastore.namespaces.list",
      "datastore.operations.cancel",
      "datastore.operations.delete",
      "datastore.operations.get",
      "datastore.operations.list",
      "datastore.statistics.get",
      "datastore.statistics.list",
      "datastream.connectionProfiles.create",
      "datastream.connectionProfiles.createTagBinding",
      "datastream.connectionProfiles.delete",
      "datastream.connectionProfiles.deleteTagBinding",
      "datastream.connectionProfiles.destinationTypes",
      "datastream.connectionProfiles.discover",
      "datastream.connectionProfiles.get",
      "datastream.connectionProfiles.getIamPolicy",
      "datastream.connectionProfiles.list",
      "datastream.connectionProfiles.listEffectiveTags",
      "datastream.connectionProfiles.listStaticServiceIps",
      "datastream.connectionProfiles.listTagBindings",
      "datastream.connectionProfiles.setIamPolicy",
      "datastream.connectionProfiles.sourceTypes",
      "datastream.connectionProfiles.update",
      "datastream.locations.fetchStaticIps",
      "datastream.locations.get",
      "datastream.locations.list",
      "datastream.objects.get",
      "datastream.objects.list",
      "datastream.objects.startBackfillJob",
      "datastream.objects.stopBackfillJob",
      "datastream.operations.cancel",
      "datastream.operations.delete",
      "datastream.operations.get",
      "datastream.operations.list",
      "datastream.privateConnections.create",
      "datastream.privateConnections.createTagBinding",
      "datastream.privateConnections.delete",
      "datastream.privateConnections.deleteTagBinding",
      "datastream.privateConnections.get",
      "datastream.privateConnections.getIamPolicy",
      "datastream.privateConnections.list",
      "datastream.privateConnections.listEffectiveTags",
      "datastream.privateConnections.listTagBindings",
      "datastream.privateConnections.setIamPolicy",
      "datastream.routes.create",
      "datastream.routes.delete",
      "datastream.routes.get",
      "datastream.routes.getIamPolicy",
      "datastream.routes.list",
      "datastream.routes.setIamPolicy",
      "datastream.streams.computeState",
      "datastream.streams.create",
      "datastream.streams.createTagBinding",
      "datastream.streams.delete",
      "datastream.streams.deleteTagBinding",
      "datastream.streams.fetchErrors",
      "datastream.streams.get",
      "datastream.streams.getIamPolicy",
      "datastream.streams.list",
      "datastream.streams.listEffectiveTags",
      "datastream.streams.listTagBindings",
      "datastream.streams.pause",
      "datastream.streams.resume",
      "datastream.streams.setIamPolicy",
      "datastream.streams.start",
      "datastream.streams.update",
      "datastudio.datasources.delete",
      "datastudio.datasources.get",
      "datastudio.datasources.getIamPolicy",
      "datastudio.datasources.move",
      "datastudio.datasources.restoreTrash",
      "datastudio.datasources.search",
      "datastudio.datasources.setIamPolicy",
      "datastudio.datasources.settingsShare",
      "datastudio.datasources.share",
      "datastudio.datasources.trash",
      "datastudio.datasources.update",
      "datastudio.reports.delete",
      "datastudio.reports.get",
      "datastudio.reports.getIamPolicy",
      "datastudio.reports.move",
      "datastudio.reports.restoreTrash",
      "datastudio.reports.search",
      "datastudio.reports.setIamPolicy",
      "datastudio.reports.settingsShare",
      "datastudio.reports.share",
      "datastudio.reports.trash",
      "datastudio.reports.update",
      "datastudio.workspaces.createUnder",
      "datastudio.workspaces.delete",
      "datastudio.workspaces.get",
      "datastudio.workspaces.getIamPolicy",
      "datastudio.workspaces.moveIn",
      "datastudio.workspaces.moveOut",
      "datastudio.workspaces.restoreTrash",
      "datastudio.workspaces.search",
      "datastudio.workspaces.setIamPolicy",
      "datastudio.workspaces.trash",
      "datastudio.workspaces.update",
      "deploymentmanager.compositeTypes.create",
      "deploymentmanager.compositeTypes.delete",
      "deploymentmanager.compositeTypes.get",
      "deploymentmanager.compositeTypes.list",
      "deploymentmanager.compositeTypes.update",
      "deploymentmanager.deployments.cancelPreview",
      "deploymentmanager.deployments.create",
      "deploymentmanager.deployments.delete",
      "deploymentmanager.deployments.get",
      "deploymentmanager.deployments.getIamPolicy",
      "deploymentmanager.deployments.list",
      "deploymentmanager.deployments.setIamPolicy",
      "deploymentmanager.deployments.stop",
      "deploymentmanager.deployments.update",
      "deploymentmanager.manifests.get",
      "deploymentmanager.manifests.list",
      "deploymentmanager.operations.get",
      "deploymentmanager.operations.list",
      "deploymentmanager.resources.get",
      "deploymentmanager.resources.list",
      "deploymentmanager.typeProviders.create",
      "deploymentmanager.typeProviders.delete",
      "deploymentmanager.typeProviders.get",
      "deploymentmanager.typeProviders.getType",
      "deploymentmanager.typeProviders.list",
      "deploymentmanager.typeProviders.listTypes",
      "deploymentmanager.typeProviders.update",
      "deploymentmanager.types.create",
      "deploymentmanager.types.delete",
      "deploymentmanager.types.get",
      "deploymentmanager.types.list",
      "deploymentmanager.types.update",
      "dialogflow.agents.create",
      "dialogflow.agents.delete",
      "dialogflow.agents.export",
      "dialogflow.agents.get",
      "dialogflow.agents.import",
      "dialogflow.agents.list",
      "dialogflow.agents.restore",
      "dialogflow.agents.search",
      "dialogflow.agents.searchResources",
      "dialogflow.agents.train",
      "dialogflow.agents.update",
      "dialogflow.agents.validate",
      "dialogflow.answerrecords.delete",
      "dialogflow.answerrecords.get",
      "dialogflow.answerrecords.list",
      "dialogflow.answerrecords.update",
      "dialogflow.callMatchers.create",
      "dialogflow.callMatchers.delete",
      "dialogflow.callMatchers.list",
      "dialogflow.changelogs.get",
      "dialogflow.changelogs.list",
      "dialogflow.contexts.create",
      "dialogflow.contexts.delete",
      "dialogflow.contexts.get",
      "dialogflow.contexts.list",
      "dialogflow.contexts.update",
      "dialogflow.conversationDatasets.create",
      "dialogflow.conversationDatasets.delete",
      "dialogflow.conversationDatasets.get",
      "dialogflow.conversationDatasets.import",
      "dialogflow.conversationDatasets.list",
      "dialogflow.conversationModels.create",
      "dialogflow.conversationModels.delete",
      "dialogflow.conversationModels.deploy",
      "dialogflow.conversationModels.get",
      "dialogflow.conversationModels.list",
      "dialogflow.conversationModels.undeploy",
      "dialogflow.conversationProfiles.create",
      "dialogflow.conversationProfiles.delete",
      "dialogflow.conversationProfiles.get",
      "dialogflow.conversationProfiles.list",
      "dialogflow.conversationProfiles.update",
      "dialogflow.conversations.addPhoneNumber",
      "dialogflow.conversations.complete",
      "dialogflow.conversations.create",
      "dialogflow.conversations.get",
      "dialogflow.conversations.list",
      "dialogflow.conversations.update",
      "dialogflow.deployments.get",
      "dialogflow.deployments.list",
      "dialogflow.documents.create",
      "dialogflow.documents.delete",
      "dialogflow.documents.get",
      "dialogflow.documents.list",
      "dialogflow.entityTypes.create",
      "dialogflow.entityTypes.createEntity",
      "dialogflow.entityTypes.delete",
      "dialogflow.entityTypes.deleteEntity",
      "dialogflow.entityTypes.get",
      "dialogflow.entityTypes.list",
      "dialogflow.entityTypes.update",
      "dialogflow.entityTypes.updateEntity",
      "dialogflow.environments.create",
      "dialogflow.environments.delete",
      "dialogflow.environments.get",
      "dialogflow.environments.getHistory",
      "dialogflow.environments.list",
      "dialogflow.environments.lookupHistory",
      "dialogflow.environments.runContinuousTest",
      "dialogflow.environments.update",
      "dialogflow.experiments.create",
      "dialogflow.experiments.delete",
      "dialogflow.experiments.get",
      "dialogflow.experiments.list",
      "dialogflow.experiments.update",
      "dialogflow.flows.create",
      "dialogflow.flows.delete",
      "dialogflow.flows.get",
      "dialogflow.flows.list",
      "dialogflow.flows.train",
      "dialogflow.flows.update",
      "dialogflow.flows.validate",
      "dialogflow.fulfillments.get",
      "dialogflow.fulfillments.update",
      "dialogflow.integrations.create",
      "dialogflow.integrations.delete",
      "dialogflow.integrations.get",
      "dialogflow.integrations.list",
      "dialogflow.integrations.update",
      "dialogflow.intents.create",
      "dialogflow.intents.delete",
      "dialogflow.intents.get",
      "dialogflow.intents.list",
      "dialogflow.intents.update",
      "dialogflow.knowledgeBases.create",
      "dialogflow.knowledgeBases.delete",
      "dialogflow.knowledgeBases.get",
      "dialogflow.knowledgeBases.list",
      "dialogflow.knowledgeBases.update",
      "dialogflow.messages.list",
      "dialogflow.modelEvaluations.get",
      "dialogflow.modelEvaluations.list",
      "dialogflow.operations.get",
      "dialogflow.pages.create",
      "dialogflow.pages.delete",
      "dialogflow.pages.get",
      "dialogflow.pages.list",
      "dialogflow.pages.update",
      "dialogflow.participants.analyzeContent",
      "dialogflow.participants.create",
      "dialogflow.participants.get",
      "dialogflow.participants.list",
      "dialogflow.participants.suggest",
      "dialogflow.participants.update",
      "dialogflow.phoneNumberOrders.cancel",
      "dialogflow.phoneNumberOrders.create",
      "dialogflow.phoneNumberOrders.get",
      "dialogflow.phoneNumberOrders.list",
      "dialogflow.phoneNumberOrders.update",
      "dialogflow.phoneNumbers.delete",
      "dialogflow.phoneNumbers.list",
      "dialogflow.phoneNumbers.undelete",
      "dialogflow.phoneNumbers.update",
      "dialogflow.securitySettings.create",
      "dialogflow.securitySettings.delete",
      "dialogflow.securitySettings.get",
      "dialogflow.securitySettings.list",
      "dialogflow.securitySettings.update",
      "dialogflow.sessionEntityTypes.create",
      "dialogflow.sessionEntityTypes.delete",
      "dialogflow.sessionEntityTypes.get",
      "dialogflow.sessionEntityTypes.list",
      "dialogflow.sessionEntityTypes.update",
      "dialogflow.sessions.detectIntent",
      "dialogflow.sessions.streamingDetectIntent",
      "dialogflow.smartMessagingEntries.create",
      "dialogflow.smartMessagingEntries.delete",
      "dialogflow.smartMessagingEntries.get",
      "dialogflow.smartMessagingEntries.list",
      "dialogflow.testcases.calculateCoverage",
      "dialogflow.testcases.create",
      "dialogflow.testcases.delete",
      "dialogflow.testcases.export",
      "dialogflow.testcases.get",
      "dialogflow.testcases.import",
      "dialogflow.testcases.list",
      "dialogflow.testcases.run",
      "dialogflow.testcases.update",
      "dialogflow.transitionRouteGroups.create",
      "dialogflow.transitionRouteGroups.delete",
      "dialogflow.transitionRouteGroups.get",
      "dialogflow.transitionRouteGroups.list",
      "dialogflow.transitionRouteGroups.update",
      "dialogflow.versions.create",
      "dialogflow.versions.delete",
      "dialogflow.versions.get",
      "dialogflow.versions.list",
      "dialogflow.versions.load",
      "dialogflow.versions.update",
      "dialogflow.webhooks.create",
      "dialogflow.webhooks.delete",
      "dialogflow.webhooks.get",
      "dialogflow.webhooks.list",
      "dialogflow.webhooks.update",
      "discoveryengine.completionConfigs.get",
      "discoveryengine.completionConfigs.update",
      "discoveryengine.controls.create",
      "discoveryengine.controls.delete",
      "discoveryengine.controls.get",
      "discoveryengine.controls.list",
      "discoveryengine.controls.update",
      "discoveryengine.conversations.converse",
      "discoveryengine.conversations.create",
      "discoveryengine.conversations.delete",
      "discoveryengine.conversations.get",
      "discoveryengine.conversations.list",
      "discoveryengine.conversations.update",
      "discoveryengine.dataStores.completeQuery",
      "discoveryengine.dataStores.create",
      "discoveryengine.dataStores.delete",
      "discoveryengine.dataStores.enrollSolutions",
      "discoveryengine.dataStores.get",
      "discoveryengine.dataStores.list",
      "discoveryengine.dataStores.update",
      "discoveryengine.documents.create",
      "discoveryengine.documents.delete",
      "discoveryengine.documents.get",
      "discoveryengine.documents.import",
      "discoveryengine.documents.list",
      "discoveryengine.documents.purge",
      "discoveryengine.documents.update",
      "discoveryengine.engines.create",
      "discoveryengine.engines.delete",
      "discoveryengine.engines.get",
      "discoveryengine.engines.list",
      "discoveryengine.engines.update",
      "discoveryengine.models.create",
      "discoveryengine.models.delete",
      "discoveryengine.models.get",
      "discoveryengine.models.list",
      "discoveryengine.models.pause",
      "discoveryengine.models.resume",
      "discoveryengine.models.tune",
      "discoveryengine.models.update",
      "discoveryengine.operations.get",
      "discoveryengine.operations.list",
      "discoveryengine.projects.get",
      "discoveryengine.projects.provision",
      "discoveryengine.projects.reportConsentChange",
      "discoveryengine.schemas.create",
      "discoveryengine.schemas.delete",
      "discoveryengine.schemas.get",
      "discoveryengine.schemas.list",
      "discoveryengine.schemas.update",
      "discoveryengine.servingConfigs.create",
      "discoveryengine.servingConfigs.delete",
      "discoveryengine.servingConfigs.get",
      "discoveryengine.servingConfigs.list",
      "discoveryengine.servingConfigs.recommend",
      "discoveryengine.servingConfigs.search",
      "discoveryengine.servingConfigs.update",
      "discoveryengine.siteSearchEngines.get",
      "discoveryengine.targetSites.batchCreate",
      "discoveryengine.targetSites.create",
      "discoveryengine.targetSites.delete",
      "discoveryengine.targetSites.get",
      "discoveryengine.targetSites.list",
      "discoveryengine.targetSites.update",
      "discoveryengine.userEvents.create",
      "discoveryengine.userEvents.fetchStats",
      "discoveryengine.userEvents.import",
      "discoveryengine.userEvents.purge",
      "discoveryengine.widgetConfigs.get",
      "discoveryengine.widgetConfigs.update",
      "dlp.analyzeRiskTemplates.create",
      "dlp.analyzeRiskTemplates.delete",
      "dlp.analyzeRiskTemplates.get",
      "dlp.analyzeRiskTemplates.list",
      "dlp.analyzeRiskTemplates.update",
      "dlp.columnDataProfiles.get",
      "dlp.columnDataProfiles.list",
      "dlp.deidentifyTemplates.create",
      "dlp.deidentifyTemplates.delete",
      "dlp.deidentifyTemplates.get",
      "dlp.deidentifyTemplates.list",
      "dlp.deidentifyTemplates.update",
      "dlp.estimates.cancel",
      "dlp.estimates.create",
      "dlp.estimates.delete",
      "dlp.estimates.get",
      "dlp.estimates.list",
      "dlp.inspectFindings.list",
      "dlp.inspectTemplates.create",
      "dlp.inspectTemplates.delete",
      "dlp.inspectTemplates.get",
      "dlp.inspectTemplates.list",
      "dlp.inspectTemplates.update",
      "dlp.jobTriggers.create",
      "dlp.jobTriggers.delete",
      "dlp.jobTriggers.get",
      "dlp.jobTriggers.hybridInspect",
      "dlp.jobTriggers.list",
      "dlp.jobTriggers.update",
      "dlp.jobs.cancel",
      "dlp.jobs.create",
      "dlp.jobs.delete",
      "dlp.jobs.get",
      "dlp.jobs.hybridInspect",
      "dlp.jobs.list",
      "dlp.kms.encrypt",
      "dlp.locations.get",
      "dlp.locations.list",
      "dlp.projectDataProfiles.get",
      "dlp.projectDataProfiles.list",
      "dlp.storedInfoTypes.create",
      "dlp.storedInfoTypes.delete",
      "dlp.storedInfoTypes.get",
      "dlp.storedInfoTypes.list",
      "dlp.storedInfoTypes.update",
      "dlp.subscriptions.cancel",
      "dlp.subscriptions.create",
      "dlp.subscriptions.get",
      "dlp.subscriptions.list",
      "dlp.subscriptions.update",
      "dlp.tableDataProfiles.get",
      "dlp.tableDataProfiles.list",
      "dns.changes.create",
      "dns.changes.get",
      "dns.changes.list",
      "dns.dnsKeys.get",
      "dns.dnsKeys.list",
      "dns.gkeClusters.bindDNSResponsePolicy",
      "dns.gkeClusters.bindPrivateDNSZone",
      "dns.managedZoneOperations.get",
      "dns.managedZoneOperations.list",
      "dns.managedZones.create",
      "dns.managedZones.delete",
      "dns.managedZones.get",
      "dns.managedZones.getIamPolicy",
      "dns.managedZones.list",
      "dns.managedZones.setIamPolicy",
      "dns.managedZones.update",
      "dns.networks.bindDNSResponsePolicy",
      "dns.networks.bindPrivateDNSPolicy",
      "dns.networks.bindPrivateDNSZone",
      "dns.networks.targetWithPeeringZone",
      "dns.networks.useHealthSignals",
      "dns.policies.create",
      "dns.policies.delete",
      "dns.policies.get",
      "dns.policies.getIamPolicy",
      "dns.policies.list",
      "dns.policies.setIamPolicy",
      "dns.policies.update",
      "dns.projects.get",
      "dns.resourceRecordSets.create",
      "dns.resourceRecordSets.delete",
      "dns.resourceRecordSets.get",
      "dns.resourceRecordSets.list",
      "dns.resourceRecordSets.update",
      "dns.responsePolicies.create",
      "dns.responsePolicies.delete",
      "dns.responsePolicies.get",
      "dns.responsePolicies.list",
      "dns.responsePolicies.update",
      "dns.responsePolicyRules.create",
      "dns.responsePolicyRules.delete",
      "dns.responsePolicyRules.get",
      "dns.responsePolicyRules.list",
      "dns.responsePolicyRules.update",
      "documentai.dataLabelingJobs.cancel",
      "documentai.dataLabelingJobs.create",
      "documentai.dataLabelingJobs.delete",
      "documentai.dataLabelingJobs.list",
      "documentai.dataLabelingJobs.update",
      "documentai.datasetSchemas.get",
      "documentai.datasetSchemas.update",
      "documentai.datasets.createDocuments",
      "documentai.datasets.deleteDocuments",
      "documentai.datasets.get",
      "documentai.datasets.getDocuments",
      "documentai.datasets.listDocuments",
      "documentai.datasets.update",
      "documentai.datasets.updateDocuments",
      "documentai.evaluationDocuments.get",
      "documentai.evaluations.create",
      "documentai.evaluations.get",
      "documentai.evaluations.list",
      "documentai.humanReviewConfigs.get",
      "documentai.humanReviewConfigs.review",
      "documentai.humanReviewConfigs.update",
      "documentai.labelerPools.create",
      "documentai.labelerPools.delete",
      "documentai.labelerPools.get",
      "documentai.labelerPools.list",
      "documentai.labelerPools.update",
      "documentai.locations.get",
      "documentai.locations.list",
      "documentai.operations.getLegacy",
      "documentai.processedDocumentsSets.get",
      "documentai.processedDocumentsSets.getDocuments",
      "documentai.processedDocumentsSets.listDocuments",
      "documentai.processorTypes.get",
      "documentai.processorTypes.list",
      "documentai.processorVersions.create",
      "documentai.processorVersions.delete",
      "documentai.processorVersions.get",
      "documentai.processorVersions.list",
      "documentai.processorVersions.processBatch",
      "documentai.processorVersions.processOnline",
      "documentai.processorVersions.update",
      "documentai.processors.create",
      "documentai.processors.delete",
      "documentai.processors.fetchHumanReviewDetails",
      "documentai.processors.get",
      "documentai.processors.list",
      "documentai.processors.processBatch",
      "documentai.processors.processOnline",
      "documentai.processors.update",
      "domains.locations.get",
      "domains.locations.list",
      "domains.operations.cancel",
      "domains.operations.get",
      "domains.operations.list",
      "domains.registrations.configureContact",
      "domains.registrations.configureDns",
      "domains.registrations.configureManagement",
      "domains.registrations.create",
      "domains.registrations.createTagBinding",
      "domains.registrations.delete",
      "domains.registrations.deleteTagBinding",
      "domains.registrations.get",
      "domains.registrations.getIamPolicy",
      "domains.registrations.list",
      "domains.registrations.listEffectiveTags",
      "domains.registrations.listTagBindings",
      "domains.registrations.setIamPolicy",
      "domains.registrations.update",
      "earthengine.assets.create",
      "earthengine.assets.delete",
      "earthengine.assets.get",
      "earthengine.assets.getIamPolicy",
      "earthengine.assets.list",
      "earthengine.assets.setIamPolicy",
      "earthengine.assets.update",
      "earthengine.computations.create",
      "earthengine.config.get",
      "earthengine.config.update",
      "earthengine.exports.create",
      "earthengine.featureviews.create",
      "earthengine.filmstripthumbnails.create",
      "earthengine.filmstripthumbnails.get",
      "earthengine.imports.create",
      "earthengine.maps.create",
      "earthengine.maps.get",
      "earthengine.operations.delete",
      "earthengine.operations.get",
      "earthengine.operations.list",
      "earthengine.operations.update",
      "earthengine.tables.create",
      "earthengine.tables.get",
      "earthengine.thumbnails.create",
      "earthengine.thumbnails.get",
      "earthengine.videothumbnails.create",
      "earthengine.videothumbnails.get",
      "edgecontainer.clusters.create",
      "edgecontainer.clusters.delete",
      "edgecontainer.clusters.generateAccessToken",
      "edgecontainer.clusters.get",
      "edgecontainer.clusters.getIamPolicy",
      "edgecontainer.clusters.list",
      "edgecontainer.clusters.setIamPolicy",
      "edgecontainer.clusters.update",
      "edgecontainer.locations.get",
      "edgecontainer.locations.list",
      "edgecontainer.machines.create",
      "edgecontainer.machines.delete",
      "edgecontainer.machines.get",
      "edgecontainer.machines.getIamPolicy",
      "edgecontainer.machines.list",
      "edgecontainer.machines.setIamPolicy",
      "edgecontainer.machines.update",
      "edgecontainer.machines.use",
      "edgecontainer.nodePools.create",
      "edgecontainer.nodePools.delete",
      "edgecontainer.nodePools.get",
      "edgecontainer.nodePools.getIamPolicy",
      "edgecontainer.nodePools.list",
      "edgecontainer.nodePools.setIamPolicy",
      "edgecontainer.nodePools.update",
      "edgecontainer.operations.cancel",
      "edgecontainer.operations.delete",
      "edgecontainer.operations.get",
      "edgecontainer.operations.list",
      "edgecontainer.vpnConnections.create",
      "edgecontainer.vpnConnections.delete",
      "edgecontainer.vpnConnections.get",
      "edgecontainer.vpnConnections.getIamPolicy",
      "edgecontainer.vpnConnections.list",
      "edgecontainer.vpnConnections.setIamPolicy",
      "edgecontainer.vpnConnections.update",
      "edgenetwork.interconnectAttachments.create",
      "edgenetwork.interconnectAttachments.delete",
      "edgenetwork.interconnectAttachments.get",
      "edgenetwork.interconnectAttachments.getIamPolicy",
      "edgenetwork.interconnectAttachments.list",
      "edgenetwork.interconnectAttachments.setIamPolicy",
      "edgenetwork.interconnectAttachments.update",
      "edgenetwork.interconnects.get",
      "edgenetwork.interconnects.getDiagnostics",
      "edgenetwork.interconnects.getIamPolicy",
      "edgenetwork.interconnects.list",
      "edgenetwork.interconnects.setIamPolicy",
      "edgenetwork.locations.get",
      "edgenetwork.locations.list",
      "edgenetwork.networks.create",
      "edgenetwork.networks.delete",
      "edgenetwork.networks.get",
      "edgenetwork.networks.getIamPolicy",
      "edgenetwork.networks.getStatus",
      "edgenetwork.networks.list",
      "edgenetwork.networks.setIamPolicy",
      "edgenetwork.networks.update",
      "edgenetwork.operations.cancel",
      "edgenetwork.operations.delete",
      "edgenetwork.operations.get",
      "edgenetwork.operations.list",
      "edgenetwork.routers.create",
      "edgenetwork.routers.delete",
      "edgenetwork.routers.get",
      "edgenetwork.routers.getIamPolicy",
      "edgenetwork.routers.getRouterStatus",
      "edgenetwork.routers.list",
      "edgenetwork.routers.patch",
      "edgenetwork.routers.setIamPolicy",
      "edgenetwork.routers.update",
      "edgenetwork.routes.create",
      "edgenetwork.routes.delete",
      "edgenetwork.routes.get",
      "edgenetwork.routes.list",
      "edgenetwork.subnetworks.create",
      "edgenetwork.subnetworks.delete",
      "edgenetwork.subnetworks.get",
      "edgenetwork.subnetworks.getIamPolicy",
      "edgenetwork.subnetworks.getStatus",
      "edgenetwork.subnetworks.list",
      "edgenetwork.subnetworks.setIamPolicy",
      "edgenetwork.subnetworks.update",
      "edgenetwork.zones.get",
      "edgenetwork.zones.initialize",
      "edgenetwork.zones.list",
      "enterpriseknowledgegraph.cloudKnowledgeGraphEntities.lookup",
      "enterpriseknowledgegraph.cloudKnowledgeGraphEntities.search",
      "enterpriseknowledgegraph.entityReconciliationJobs.cancel",
      "enterpriseknowledgegraph.entityReconciliationJobs.create",
      "enterpriseknowledgegraph.entityReconciliationJobs.delete",
      "enterpriseknowledgegraph.entityReconciliationJobs.get",
      "enterpriseknowledgegraph.entityReconciliationJobs.list",
      "enterpriseknowledgegraph.publicKnowledgeGraphEntities.lookup",
      "enterpriseknowledgegraph.publicKnowledgeGraphEntities.search",
      "errorreporting.applications.list",
      "errorreporting.errorEvents.create",
      "errorreporting.errorEvents.delete",
      "errorreporting.errorEvents.list",
      "errorreporting.groupMetadata.get",
      "errorreporting.groupMetadata.update",
      "errorreporting.groups.list",
      "essentialcontacts.contacts.create",
      "essentialcontacts.contacts.delete",
      "essentialcontacts.contacts.get",
      "essentialcontacts.contacts.list",
      "essentialcontacts.contacts.send",
      "essentialcontacts.contacts.update",
      "eventarc.channelConnections.create",
      "eventarc.channelConnections.delete",
      "eventarc.channelConnections.get",
      "eventarc.channelConnections.getIamPolicy",
      "eventarc.channelConnections.list",
      "eventarc.channelConnections.publish",
      "eventarc.channelConnections.setIamPolicy",
      "eventarc.channels.attach",
      "eventarc.channels.create",
      "eventarc.channels.delete",
      "eventarc.channels.get",
      "eventarc.channels.getIamPolicy",
      "eventarc.channels.list",
      "eventarc.channels.publish",
      "eventarc.channels.setIamPolicy",
      "eventarc.channels.undelete",
      "eventarc.channels.update",
      "eventarc.events.receiveAuditLogWritten",
      "eventarc.events.receiveEvent",
      "eventarc.googleChannelConfigs.get",
      "eventarc.googleChannelConfigs.update",
      "eventarc.locations.get",
      "eventarc.locations.list",
      "eventarc.operations.cancel",
      "eventarc.operations.delete",
      "eventarc.operations.get",
      "eventarc.operations.list",
      "eventarc.providers.get",
      "eventarc.providers.list",
      "eventarc.triggers.create",
      "eventarc.triggers.delete",
      "eventarc.triggers.get",
      "eventarc.triggers.getIamPolicy",
      "eventarc.triggers.list",
      "eventarc.triggers.setIamPolicy",
      "eventarc.triggers.undelete",
      "eventarc.triggers.update",
      "fcmdata.deliverydata.list",
      "file.backups.create",
      "file.backups.createTagBinding",
      "file.backups.delete",
      "file.backups.deleteTagBinding",
      "file.backups.get",
      "file.backups.list",
      "file.backups.listEffectiveTags",
      "file.backups.listTagBindings",
      "file.backups.update",
      "file.instances.create",
      "file.instances.createTagBinding",
      "file.instances.delete",
      "file.instances.deleteTagBinding",
      "file.instances.get",
      "file.instances.list",
      "file.instances.listEffectiveTags",
      "file.instances.listTagBindings",
      "file.instances.restore",
      "file.instances.revert",
      "file.instances.update",
      "file.locations.get",
      "file.locations.list",
      "file.operations.cancel",
      "file.operations.delete",
      "file.operations.get",
      "file.operations.list",
      "file.snapshots.create",
      "file.snapshots.createTagBinding",
      "file.snapshots.delete",
      "file.snapshots.deleteTagBinding",
      "file.snapshots.get",
      "file.snapshots.list",
      "file.snapshots.listEffectiveTags",
      "file.snapshots.listTagBindings",
      "file.snapshots.update",
      "firebase.billingPlans.get",
      "firebase.billingPlans.update",
      "firebase.clients.create",
      "firebase.clients.delete",
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.clients.undelete",
      "firebase.clients.update",
      "firebase.links.create",
      "firebase.links.delete",
      "firebase.links.list",
      "firebase.links.update",
      "firebase.playLinks.get",
      "firebase.playLinks.list",
      "firebase.playLinks.update",
      "firebase.projects.delete",
      "firebase.projects.get",
      "firebase.projects.update",
      "firebaseabt.experimentresults.get",
      "firebaseabt.experiments.create",
      "firebaseabt.experiments.delete",
      "firebaseabt.experiments.get",
      "firebaseabt.experiments.list",
      "firebaseabt.experiments.update",
      "firebaseabt.projectmetadata.get",
      "firebaseanalytics.resources.googleAnalyticsEdit",
      "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze",
      "firebaseappcheck.appAttestConfig.get",
      "firebaseappcheck.appAttestConfig.update",
      "firebaseappcheck.debugTokens.get",
      "firebaseappcheck.debugTokens.update",
      "firebaseappcheck.deviceCheckConfig.get",
      "firebaseappcheck.deviceCheckConfig.update",
      "firebaseappcheck.playIntegrityConfig.get",
      "firebaseappcheck.playIntegrityConfig.update",
      "firebaseappcheck.recaptchaEnterpriseConfig.get",
      "firebaseappcheck.recaptchaEnterpriseConfig.update",
      "firebaseappcheck.recaptchaV3Config.get",
      "firebaseappcheck.recaptchaV3Config.update",
      "firebaseappcheck.safetyNetConfig.get",
      "firebaseappcheck.safetyNetConfig.update",
      "firebaseappcheck.services.get",
      "firebaseappcheck.services.update",
      "firebaseappdistro.groups.list",
      "firebaseappdistro.groups.update",
      "firebaseappdistro.releases.list",
      "firebaseappdistro.releases.update",
      "firebaseappdistro.testers.list",
      "firebaseappdistro.testers.update",
      "firebaseauth.configs.create",
      "firebaseauth.configs.get",
      "firebaseauth.configs.getHashConfig",
      "firebaseauth.configs.getSecret",
      "firebaseauth.configs.update",
      "firebaseauth.users.create",
      "firebaseauth.users.createSession",
      "firebaseauth.users.delete",
      "firebaseauth.users.get",
      "firebaseauth.users.sendEmail",
      "firebaseauth.users.update",
      "firebasecrash.issues.update",
      "firebasecrash.reports.get",
      "firebasecrashlytics.config.get",
      "firebasecrashlytics.config.update",
      "firebasecrashlytics.data.get",
      "firebasecrashlytics.issues.get",
      "firebasecrashlytics.issues.list",
      "firebasecrashlytics.issues.update",
      "firebasecrashlytics.sessions.get",
      "firebasedatabase.instances.create",
      "firebasedatabase.instances.delete",
      "firebasedatabase.instances.disable",
      "firebasedatabase.instances.get",
      "firebasedatabase.instances.list",
      "firebasedatabase.instances.reenable",
      "firebasedatabase.instances.undelete",
      "firebasedatabase.instances.update",
      "firebasedynamiclinks.destinations.list",
      "firebasedynamiclinks.destinations.update",
      "firebasedynamiclinks.domains.create",
      "firebasedynamiclinks.domains.delete",
      "firebasedynamiclinks.domains.get",
      "firebasedynamiclinks.domains.list",
      "firebasedynamiclinks.domains.update",
      "firebasedynamiclinks.links.create",
      "firebasedynamiclinks.links.get",
      "firebasedynamiclinks.links.list",
      "firebasedynamiclinks.links.update",
      "firebasedynamiclinks.stats.get",
      "firebaseextensions.configs.create",
      "firebaseextensions.configs.delete",
      "firebaseextensions.configs.list",
      "firebaseextensions.configs.update",
      "firebaseextensionspublisher.extensions.create",
      "firebaseextensionspublisher.extensions.delete",
      "firebaseextensionspublisher.extensions.get",
      "firebaseextensionspublisher.extensions.list",
      "firebasehosting.sites.create",
      "firebasehosting.sites.delete",
      "firebasehosting.sites.get",
      "firebasehosting.sites.list",
      "firebasehosting.sites.update",
      "firebaseinappmessaging.campaigns.create",
      "firebaseinappmessaging.campaigns.delete",
      "firebaseinappmessaging.campaigns.get",
      "firebaseinappmessaging.campaigns.list",
      "firebaseinappmessaging.campaigns.update",
      "firebasemessagingcampaigns.campaigns.create",
      "firebasemessagingcampaigns.campaigns.delete",
      "firebasemessagingcampaigns.campaigns.get",
      "firebasemessagingcampaigns.campaigns.list",
      "firebasemessagingcampaigns.campaigns.start",
      "firebasemessagingcampaigns.campaigns.stop",
      "firebasemessagingcampaigns.campaigns.update",
      "firebaseml.models.create",
      "firebaseml.models.delete",
      "firebaseml.models.get",
      "firebaseml.models.list",
      "firebaseml.models.update",
      "firebaseml.modelversions.create",
      "firebaseml.modelversions.get",
      "firebaseml.modelversions.list",
      "firebaseml.modelversions.update",
      "firebasenotifications.messages.create",
      "firebasenotifications.messages.delete",
      "firebasenotifications.messages.get",
      "firebasenotifications.messages.list",
      "firebasenotifications.messages.update",
      "firebaseperformance.config.update",
      "firebaseperformance.data.get",
      "firebaserules.releases.create",
      "firebaserules.releases.delete",
      "firebaserules.releases.get",
      "firebaserules.releases.getExecutable",
      "firebaserules.releases.list",
      "firebaserules.releases.update",
      "firebaserules.rulesets.create",
      "firebaserules.rulesets.delete",
      "firebaserules.rulesets.get",
      "firebaserules.rulesets.list",
      "firebaserules.rulesets.test",
      "firebasestorage.buckets.addFirebase",
      "firebasestorage.buckets.get",
      "firebasestorage.buckets.list",
      "firebasestorage.buckets.removeFirebase",
      "fleetengine.deliveryvehicles.create",
      "fleetengine.deliveryvehicles.get",
      "fleetengine.deliveryvehicles.list",
      "fleetengine.deliveryvehicles.update",
      "fleetengine.deliveryvehicles.updateLocation",
      "fleetengine.deliveryvehicles.updateVehicleStops",
      "fleetengine.tasks.create",
      "fleetengine.tasks.get",
      "fleetengine.tasks.list",
      "fleetengine.tasks.searchWithTrackingId",
      "fleetengine.tasks.update",
      "fleetengine.tasktrackinginfo.get",
      "fleetengine.trips.create",
      "fleetengine.trips.get",
      "fleetengine.trips.search",
      "fleetengine.trips.update",
      "fleetengine.trips.updateState",
      "fleetengine.vehicles.create",
      "fleetengine.vehicles.get",
      "fleetengine.vehicles.list",
      "fleetengine.vehicles.search",
      "fleetengine.vehicles.searchFuzzed",
      "fleetengine.vehicles.update",
      "fleetengine.vehicles.updateLocation",
      "gameservices.gameServerClusters.create",
      "gameservices.gameServerClusters.delete",
      "gameservices.gameServerClusters.get",
      "gameservices.gameServerClusters.list",
      "gameservices.gameServerClusters.update",
      "gameservices.gameServerConfigs.create",
      "gameservices.gameServerConfigs.delete",
      "gameservices.gameServerConfigs.get",
      "gameservices.gameServerConfigs.list",
      "gameservices.gameServerDeployments.create",
      "gameservices.gameServerDeployments.delete",
      "gameservices.gameServerDeployments.get",
      "gameservices.gameServerDeployments.list",
      "gameservices.gameServerDeployments.rollout",
      "gameservices.gameServerDeployments.update",
      "gameservices.locations.get",
      "gameservices.locations.list",
      "gameservices.operations.cancel",
      "gameservices.operations.delete",
      "gameservices.operations.get",
      "gameservices.operations.list",
      "gameservices.realms.create",
      "gameservices.realms.delete",
      "gameservices.realms.get",
      "gameservices.realms.list",
      "gameservices.realms.update",
      "gcp.redisenterprise.com/databases.create",
      "gcp.redisenterprise.com/databases.delete",
      "gcp.redisenterprise.com/databases.get",
      "gcp.redisenterprise.com/databases.list",
      "gcp.redisenterprise.com/databases.update",
      "gcp.redisenterprise.com/subscriptions.create",
      "gcp.redisenterprise.com/subscriptions.delete",
      "gcp.redisenterprise.com/subscriptions.get",
      "gcp.redisenterprise.com/subscriptions.list",
      "gcp.redisenterprise.com/subscriptions.update",
      "genomics.datasets.create",
      "genomics.datasets.delete",
      "genomics.datasets.get",
      "genomics.datasets.getIamPolicy",
      "genomics.datasets.list",
      "genomics.datasets.setIamPolicy",
      "genomics.datasets.update",
      "genomics.operations.cancel",
      "genomics.operations.create",
      "genomics.operations.get",
      "genomics.operations.list",
      "gkebackup.backupPlans.create",
      "gkebackup.backupPlans.delete",
      "gkebackup.backupPlans.get",
      "gkebackup.backupPlans.getIamPolicy",
      "gkebackup.backupPlans.list",
      "gkebackup.backupPlans.setIamPolicy",
      "gkebackup.backupPlans.update",
      "gkebackup.backups.create",
      "gkebackup.backups.delete",
      "gkebackup.backups.get",
      "gkebackup.backups.list",
      "gkebackup.backups.update",
      "gkebackup.locations.get",
      "gkebackup.locations.list",
      "gkebackup.operations.cancel",
      "gkebackup.operations.delete",
      "gkebackup.operations.get",
      "gkebackup.operations.list",
      "gkebackup.restorePlans.create",
      "gkebackup.restorePlans.delete",
      "gkebackup.restorePlans.get",
      "gkebackup.restorePlans.getIamPolicy",
      "gkebackup.restorePlans.list",
      "gkebackup.restorePlans.setIamPolicy",
      "gkebackup.restorePlans.update",
      "gkebackup.restores.create",
      "gkebackup.restores.delete",
      "gkebackup.restores.get",
      "gkebackup.restores.list",
      "gkebackup.restores.update",
      "gkebackup.volumeBackups.get",
      "gkebackup.volumeBackups.list",
      "gkebackup.volumeRestores.get",
      "gkebackup.volumeRestores.list",
      "gkehub.endpoints.connect",
      "gkehub.features.create",
      "gkehub.features.delete",
      "gkehub.features.get",
      "gkehub.features.getIamPolicy",
      "gkehub.features.list",
      "gkehub.features.setIamPolicy",
      "gkehub.features.update",
      "gkehub.fleet.create",
      "gkehub.fleet.delete",
      "gkehub.fleet.get",
      "gkehub.fleet.update",
      "gkehub.gateway.delete",
      "gkehub.gateway.get",
      "gkehub.gateway.getIamPolicy",
      "gkehub.gateway.patch",
      "gkehub.gateway.post",
      "gkehub.gateway.put",
      "gkehub.gateway.setIamPolicy",
      "gkehub.locations.get",
      "gkehub.locations.list",
      "gkehub.membershipbindings.create",
      "gkehub.membershipbindings.delete",
      "gkehub.membershipbindings.get",
      "gkehub.membershipbindings.list",
      "gkehub.membershipbindings.update",
      "gkehub.memberships.create",
      "gkehub.memberships.delete",
      "gkehub.memberships.generateConnectManifest",
      "gkehub.memberships.get",
      "gkehub.memberships.getIamPolicy",
      "gkehub.memberships.list",
      "gkehub.memberships.setIamPolicy",
      "gkehub.memberships.update",
      "gkehub.namespaces.create",
      "gkehub.namespaces.delete",
      "gkehub.namespaces.get",
      "gkehub.namespaces.list",
      "gkehub.namespaces.update",
      "gkehub.operations.cancel",
      "gkehub.operations.delete",
      "gkehub.operations.get",
      "gkehub.operations.list",
      "gkehub.rbacrolebindings.create",
      "gkehub.rbacrolebindings.delete",
      "gkehub.rbacrolebindings.get",
      "gkehub.rbacrolebindings.list",
      "gkehub.rbacrolebindings.update",
      "gkehub.scopes.create",
      "gkehub.scopes.delete",
      "gkehub.scopes.get",
      "gkehub.scopes.getIamPolicy",
      "gkehub.scopes.list",
      "gkehub.scopes.setIamPolicy",
      "gkehub.scopes.update",
      "gkemulticloud.attachedClusters.create",
      "gkemulticloud.attachedClusters.delete",
      "gkemulticloud.attachedClusters.generateInstallManifest",
      "gkemulticloud.attachedClusters.get",
      "gkemulticloud.attachedClusters.import",
      "gkemulticloud.attachedClusters.list",
      "gkemulticloud.attachedClusters.update",
      "gkemulticloud.attachedServerConfigs.get",
      "gkemulticloud.awsClusters.create",
      "gkemulticloud.awsClusters.delete",
      "gkemulticloud.awsClusters.generateAccessToken",
      "gkemulticloud.awsClusters.get",
      "gkemulticloud.awsClusters.getAdminKubeconfig",
      "gkemulticloud.awsClusters.list",
      "gkemulticloud.awsClusters.update",
      "gkemulticloud.awsNodePools.create",
      "gkemulticloud.awsNodePools.delete",
      "gkemulticloud.awsNodePools.get",
      "gkemulticloud.awsNodePools.list",
      "gkemulticloud.awsNodePools.update",
      "gkemulticloud.awsServerConfigs.get",
      "gkemulticloud.azureClients.create",
      "gkemulticloud.azureClients.delete",
      "gkemulticloud.azureClients.get",
      "gkemulticloud.azureClients.list",
      "gkemulticloud.azureClusters.create",
      "gkemulticloud.azureClusters.delete",
      "gkemulticloud.azureClusters.generateAccessToken",
      "gkemulticloud.azureClusters.get",
      "gkemulticloud.azureClusters.getAdminKubeconfig",
      "gkemulticloud.azureClusters.list",
      "gkemulticloud.azureClusters.update",
      "gkemulticloud.azureNodePools.create",
      "gkemulticloud.azureNodePools.delete",
      "gkemulticloud.azureNodePools.get",
      "gkemulticloud.azureNodePools.list",
      "gkemulticloud.azureNodePools.update",
      "gkemulticloud.azureServerConfigs.get",
      "gkemulticloud.operations.cancel",
      "gkemulticloud.operations.delete",
      "gkemulticloud.operations.get",
      "gkemulticloud.operations.list",
      "gkemulticloud.operations.wait",
      "gkeonprem.bareMetalAdminClusters.connect",
      "gkeonprem.bareMetalAdminClusters.create",
      "gkeonprem.bareMetalAdminClusters.enroll",
      "gkeonprem.bareMetalAdminClusters.get",
      "gkeonprem.bareMetalAdminClusters.getIamPolicy",
      "gkeonprem.bareMetalAdminClusters.list",
      "gkeonprem.bareMetalAdminClusters.queryVersionConfig",
      "gkeonprem.bareMetalAdminClusters.setIamPolicy",
      "gkeonprem.bareMetalAdminClusters.unenroll",
      "gkeonprem.bareMetalAdminClusters.update",
      "gkeonprem.bareMetalClusters.create",
      "gkeonprem.bareMetalClusters.delete",
      "gkeonprem.bareMetalClusters.enroll",
      "gkeonprem.bareMetalClusters.get",
      "gkeonprem.bareMetalClusters.getIamPolicy",
      "gkeonprem.bareMetalClusters.list",
      "gkeonprem.bareMetalClusters.queryVersionConfig",
      "gkeonprem.bareMetalClusters.setIamPolicy",
      "gkeonprem.bareMetalClusters.unenroll",
      "gkeonprem.bareMetalClusters.update",
      "gkeonprem.bareMetalNodePools.create",
      "gkeonprem.bareMetalNodePools.delete",
      "gkeonprem.bareMetalNodePools.enroll",
      "gkeonprem.bareMetalNodePools.get",
      "gkeonprem.bareMetalNodePools.getIamPolicy",
      "gkeonprem.bareMetalNodePools.list",
      "gkeonprem.bareMetalNodePools.setIamPolicy",
      "gkeonprem.bareMetalNodePools.unenroll",
      "gkeonprem.bareMetalNodePools.update",
      "gkeonprem.locations.get",
      "gkeonprem.locations.list",
      "gkeonprem.operations.cancel",
      "gkeonprem.operations.delete",
      "gkeonprem.operations.get",
      "gkeonprem.operations.list",
      "gkeonprem.vmwareAdminClusters.connect",
      "gkeonprem.vmwareAdminClusters.enroll",
      "gkeonprem.vmwareAdminClusters.get",
      "gkeonprem.vmwareAdminClusters.getIamPolicy",
      "gkeonprem.vmwareAdminClusters.list",
      "gkeonprem.vmwareAdminClusters.setIamPolicy",
      "gkeonprem.vmwareAdminClusters.unenroll",
      "gkeonprem.vmwareAdminClusters.update",
      "gkeonprem.vmwareClusters.create",
      "gkeonprem.vmwareClusters.delete",
      "gkeonprem.vmwareClusters.enroll",
      "gkeonprem.vmwareClusters.get",
      "gkeonprem.vmwareClusters.getIamPolicy",
      "gkeonprem.vmwareClusters.list",
      "gkeonprem.vmwareClusters.queryVersionConfig",
      "gkeonprem.vmwareClusters.setIamPolicy",
      "gkeonprem.vmwareClusters.unenroll",
      "gkeonprem.vmwareClusters.update",
      "gkeonprem.vmwareNodePools.create",
      "gkeonprem.vmwareNodePools.delete",
      "gkeonprem.vmwareNodePools.enroll",
      "gkeonprem.vmwareNodePools.get",
      "gkeonprem.vmwareNodePools.getIamPolicy",
      "gkeonprem.vmwareNodePools.list",
      "gkeonprem.vmwareNodePools.setIamPolicy",
      "gkeonprem.vmwareNodePools.unenroll",
      "gkeonprem.vmwareNodePools.update",
      "gsuiteaddons.authorizations.get",
      "gsuiteaddons.deployments.create",
      "gsuiteaddons.deployments.delete",
      "gsuiteaddons.deployments.execute",
      "gsuiteaddons.deployments.get",
      "gsuiteaddons.deployments.install",
      "gsuiteaddons.deployments.installStatus",
      "gsuiteaddons.deployments.list",
      "gsuiteaddons.deployments.uninstall",
      "gsuiteaddons.deployments.update",
      "healthcare.annotationStores.create",
      "healthcare.annotationStores.delete",
      "healthcare.annotationStores.evaluate",
      "healthcare.annotationStores.export",
      "healthcare.annotationStores.get",
      "healthcare.annotationStores.getIamPolicy",
      "healthcare.annotationStores.import",
      "healthcare.annotationStores.list",
      "healthcare.annotationStores.setIamPolicy",
      "healthcare.annotationStores.update",
      "healthcare.annotations.create",
      "healthcare.annotations.delete",
      "healthcare.annotations.get",
      "healthcare.annotations.list",
      "healthcare.annotations.update",
      "healthcare.attributeDefinitions.create",
      "healthcare.attributeDefinitions.delete",
      "healthcare.attributeDefinitions.get",
      "healthcare.attributeDefinitions.list",
      "healthcare.attributeDefinitions.update",
      "healthcare.consentArtifacts.create",
      "healthcare.consentArtifacts.delete",
      "healthcare.consentArtifacts.get",
      "healthcare.consentArtifacts.list",
      "healthcare.consentStores.checkDataAccess",
      "healthcare.consentStores.create",
      "healthcare.consentStores.delete",
      "healthcare.consentStores.evaluateUserConsents",
      "healthcare.consentStores.get",
      "healthcare.consentStores.getIamPolicy",
      "healthcare.consentStores.list",
      "healthcare.consentStores.queryAccessibleData",
      "healthcare.consentStores.setIamPolicy",
      "healthcare.consentStores.update",
      "healthcare.consents.activate",
      "healthcare.consents.create",
      "healthcare.consents.delete",
      "healthcare.consents.get",
      "healthcare.consents.list",
      "healthcare.consents.reject",
      "healthcare.consents.revoke",
      "healthcare.consents.update",
      "healthcare.datasets.create",
      "healthcare.datasets.deidentify",
      "healthcare.datasets.delete",
      "healthcare.datasets.get",
      "healthcare.datasets.getIamPolicy",
      "healthcare.datasets.list",
      "healthcare.datasets.setIamPolicy",
      "healthcare.datasets.update",
      "healthcare.dicomStores.create",
      "healthcare.dicomStores.deidentify",
      "healthcare.dicomStores.delete",
      "healthcare.dicomStores.dicomWebDelete",
      "healthcare.dicomStores.dicomWebRead",
      "healthcare.dicomStores.dicomWebWrite",
      "healthcare.dicomStores.export",
      "healthcare.dicomStores.get",
      "healthcare.dicomStores.getIamPolicy",
      "healthcare.dicomStores.import",
      "healthcare.dicomStores.list",
      "healthcare.dicomStores.setIamPolicy",
      "healthcare.dicomStores.update",
      "healthcare.fhirResources.create",
      "healthcare.fhirResources.delete",
      "healthcare.fhirResources.get",
      "healthcare.fhirResources.patch",
      "healthcare.fhirResources.purge",
      "healthcare.fhirResources.translateConceptMap",
      "healthcare.fhirResources.update",
      "healthcare.fhirStores.configureSearch",
      "healthcare.fhirStores.create",
      "healthcare.fhirStores.deidentify",
      "healthcare.fhirStores.delete",
      "healthcare.fhirStores.executeBundle",
      "healthcare.fhirStores.export",
      "healthcare.fhirStores.get",
      "healthcare.fhirStores.getIamPolicy",
      "healthcare.fhirStores.import",
      "healthcare.fhirStores.list",
      "healthcare.fhirStores.searchResources",
      "healthcare.fhirStores.setIamPolicy",
      "healthcare.fhirStores.update",
      "healthcare.hl7V2Messages.create",
      "healthcare.hl7V2Messages.delete",
      "healthcare.hl7V2Messages.get",
      "healthcare.hl7V2Messages.ingest",
      "healthcare.hl7V2Messages.list",
      "healthcare.hl7V2Messages.update",
      "healthcare.hl7V2Stores.create",
      "healthcare.hl7V2Stores.delete",
      "healthcare.hl7V2Stores.get",
      "healthcare.hl7V2Stores.getIamPolicy",
      "healthcare.hl7V2Stores.import",
      "healthcare.hl7V2Stores.list",
      "healthcare.hl7V2Stores.setIamPolicy",
      "healthcare.hl7V2Stores.update",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.nlpservice.analyzeEntities",
      "healthcare.operations.cancel",
      "healthcare.operations.get",
      "healthcare.operations.list",
      "healthcare.userDataMappings.archive",
      "healthcare.userDataMappings.create",
      "healthcare.userDataMappings.delete",
      "healthcare.userDataMappings.get",
      "healthcare.userDataMappings.list",
      "healthcare.userDataMappings.update",
      "iam.denypolicies.get",
      "iam.denypolicies.list",
      "iam.googleapis.com/workforcePoolProviderKeys.create",
      "iam.googleapis.com/workforcePoolProviderKeys.delete",
      "iam.googleapis.com/workforcePoolProviderKeys.get",
      "iam.googleapis.com/workforcePoolProviderKeys.list",
      "iam.googleapis.com/workforcePoolProviderKeys.undelete",
      "iam.googleapis.com/workforcePoolProviders.create",
      "iam.googleapis.com/workforcePoolProviders.delete",
      "iam.googleapis.com/workforcePoolProviders.get",
      "iam.googleapis.com/workforcePoolProviders.list",
      "iam.googleapis.com/workforcePoolProviders.undelete",
      "iam.googleapis.com/workforcePoolProviders.update",
      "iam.googleapis.com/workforcePoolSubjects.delete",
      "iam.googleapis.com/workforcePoolSubjects.undelete",
      "iam.googleapis.com/workforcePools.create",
      "iam.googleapis.com/workforcePools.delete",
      "iam.googleapis.com/workforcePools.get",
      "iam.googleapis.com/workforcePools.getIamPolicy",
      "iam.googleapis.com/workforcePools.list",
      "iam.googleapis.com/workforcePools.setIamPolicy",
      "iam.googleapis.com/workforcePools.undelete",
      "iam.googleapis.com/workforcePools.update",
      "iam.googleapis.com/workloadIdentityPoolProviderKeys.create",
      "iam.googleapis.com/workloadIdentityPoolProviderKeys.delete",
      "iam.googleapis.com/workloadIdentityPoolProviderKeys.get",
      "iam.googleapis.com/workloadIdentityPoolProviderKeys.list",
      "iam.googleapis.com/workloadIdentityPoolProviderKeys.undelete",
      "iam.googleapis.com/workloadIdentityPoolProviders.create",
      "iam.googleapis.com/workloadIdentityPoolProviders.delete",
      "iam.googleapis.com/workloadIdentityPoolProviders.get",
      "iam.googleapis.com/workloadIdentityPoolProviders.list",
      "iam.googleapis.com/workloadIdentityPoolProviders.undelete",
      "iam.googleapis.com/workloadIdentityPoolProviders.update",
      "iam.googleapis.com/workloadIdentityPools.create",
      "iam.googleapis.com/workloadIdentityPools.delete",
      "iam.googleapis.com/workloadIdentityPools.get",
      "iam.googleapis.com/workloadIdentityPools.list",
      "iam.googleapis.com/workloadIdentityPools.undelete",
      "iam.googleapis.com/workloadIdentityPools.update",
      "iam.roles.create",
      "iam.roles.delete",
      "iam.roles.get",
      "iam.roles.list",
      "iam.roles.undelete",
      "iam.roles.update",
      "iam.serviceAccountKeys.create",
      "iam.serviceAccountKeys.delete",
      "iam.serviceAccountKeys.disable",
      "iam.serviceAccountKeys.enable",
      "iam.serviceAccountKeys.get",
      "iam.serviceAccountKeys.list",
      "iam.serviceAccounts.actAs",
      "iam.serviceAccounts.create",
      "iam.serviceAccounts.delete",
      "iam.serviceAccounts.disable",
      "iam.serviceAccounts.enable",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.getIamPolicy",
      "iam.serviceAccounts.list",
      "iam.serviceAccounts.setIamPolicy",
      "iam.serviceAccounts.undelete",
      "iam.serviceAccounts.update",
      "iap.projects.getSettings",
      "iap.projects.updateSettings",
      "iap.tunnel.getIamPolicy",
      "iap.tunnel.setIamPolicy",
      "iap.tunnelDestGroups.accessViaIAP",
      "iap.tunnelDestGroups.create",
      "iap.tunnelDestGroups.delete",
      "iap.tunnelDestGroups.get",
      "iap.tunnelDestGroups.getIamPolicy",
      "iap.tunnelDestGroups.list",
      "iap.tunnelDestGroups.setIamPolicy",
      "iap.tunnelDestGroups.update",
      "iap.tunnelInstances.accessViaIAP",
      "iap.tunnelInstances.getIamPolicy",
      "iap.tunnelInstances.setIamPolicy",
      "iap.tunnelLocations.getIamPolicy",
      "iap.tunnelLocations.setIamPolicy",
      "iap.tunnelZones.getIamPolicy",
      "iap.tunnelZones.setIamPolicy",
      "iap.web.getIamPolicy",
      "iap.web.getSettings",
      "iap.web.setIamPolicy",
      "iap.web.updateSettings",
      "iap.webServiceVersions.getIamPolicy",
      "iap.webServiceVersions.getSettings",
      "iap.webServiceVersions.setIamPolicy",
      "iap.webServiceVersions.updateSettings",
      "iap.webServices.getIamPolicy",
      "iap.webServices.getSettings",
      "iap.webServices.setIamPolicy",
      "iap.webServices.updateSettings",
      "iap.webTypes.getIamPolicy",
      "iap.webTypes.getSettings",
      "iap.webTypes.setIamPolicy",
      "iap.webTypes.updateSettings",
      "identitytoolkit.tenants.create",
      "identitytoolkit.tenants.delete",
      "identitytoolkit.tenants.get",
      "identitytoolkit.tenants.getIamPolicy",
      "identitytoolkit.tenants.list",
      "identitytoolkit.tenants.setIamPolicy",
      "identitytoolkit.tenants.update",
      "ids.endpoints.create",
      "ids.endpoints.delete",
      "ids.endpoints.get",
      "ids.endpoints.getIamPolicy",
      "ids.endpoints.list",
      "ids.endpoints.setIamPolicy",
      "ids.endpoints.update",
      "ids.locations.get",
      "ids.locations.list",
      "ids.operations.cancel",
      "ids.operations.delete",
      "ids.operations.get",
      "ids.operations.list",
      "integrations.apigeeAuthConfigs.create",
      "integrations.apigeeAuthConfigs.delete",
      "integrations.apigeeAuthConfigs.get",
      "integrations.apigeeAuthConfigs.list",
      "integrations.apigeeAuthConfigs.update",
      "integrations.apigeeCertificates.create",
      "integrations.apigeeCertificates.delete",
      "integrations.apigeeCertificates.get",
      "integrations.apigeeCertificates.list",
      "integrations.apigeeCertificates.update",
      "integrations.apigeeExecutions.list",
      "integrations.apigeeIntegrationVers.create",
      "integrations.apigeeIntegrationVers.delete",
      "integrations.apigeeIntegrationVers.deploy",
      "integrations.apigeeIntegrationVers.get",
      "integrations.apigeeIntegrationVers.list",
      "integrations.apigeeIntegrationVers.update",
      "integrations.apigeeIntegrations.invoke",
      "integrations.apigeeIntegrations.list",
      "integrations.apigeeSfdcChannels.create",
      "integrations.apigeeSfdcChannels.delete",
      "integrations.apigeeSfdcChannels.get",
      "integrations.apigeeSfdcChannels.list",
      "integrations.apigeeSfdcChannels.update",
      "integrations.apigeeSfdcInstances.create",
      "integrations.apigeeSfdcInstances.delete",
      "integrations.apigeeSfdcInstances.get",
      "integrations.apigeeSfdcInstances.list",
      "integrations.apigeeSfdcInstances.update",
      "integrations.apigeeSuspensions.lift",
      "integrations.apigeeSuspensions.list",
      "integrations.apigeeSuspensions.resolve",
      "integrations.authConfigs.create",
      "integrations.authConfigs.delete",
      "integrations.authConfigs.get",
      "integrations.authConfigs.list",
      "integrations.authConfigs.update",
      "integrations.certificates.create",
      "integrations.certificates.delete",
      "integrations.certificates.get",
      "integrations.certificates.list",
      "integrations.certificates.update",
      "integrations.executions.get",
      "integrations.executions.list",
      "integrations.integrationVersions.create",
      "integrations.integrationVersions.delete",
      "integrations.integrationVersions.deploy",
      "integrations.integrationVersions.get",
      "integrations.integrationVersions.invoke",
      "integrations.integrationVersions.list",
      "integrations.integrationVersions.update",
      "integrations.integrations.create",
      "integrations.integrations.delete",
      "integrations.integrations.deploy",
      "integrations.integrations.get",
      "integrations.integrations.invoke",
      "integrations.integrations.list",
      "integrations.integrations.update",
      "integrations.securityAuthConfigs.create",
      "integrations.securityAuthConfigs.delete",
      "integrations.securityAuthConfigs.get",
      "integrations.securityAuthConfigs.list",
      "integrations.securityAuthConfigs.update",
      "integrations.securityExecutions.cancel",
      "integrations.securityExecutions.get",
      "integrations.securityExecutions.list",
      "integrations.securityIntegTempVers.create",
      "integrations.securityIntegTempVers.get",
      "integrations.securityIntegTempVers.list",
      "integrations.securityIntegrationVers.create",
      "integrations.securityIntegrationVers.delete",
      "integrations.securityIntegrationVers.deploy",
      "integrations.securityIntegrationVers.get",
      "integrations.securityIntegrationVers.list",
      "integrations.securityIntegrationVers.update",
      "integrations.securityIntegrations.invoke",
      "integrations.securityIntegrations.list",
      "integrations.sfdcChannels.create",
      "integrations.sfdcChannels.delete",
      "integrations.sfdcChannels.get",
      "integrations.sfdcChannels.list",
      "integrations.sfdcChannels.update",
      "integrations.sfdcInstances.create",
      "integrations.sfdcInstances.delete",
      "integrations.sfdcInstances.get",
      "integrations.sfdcInstances.list",
      "integrations.sfdcInstances.update",
      "integrations.suspensions.lift",
      "integrations.suspensions.list",
      "integrations.suspensions.resolve",
      "issuerswitch.accountManagerTransactions.list",
      "issuerswitch.complaintTransactions.list",
      "issuerswitch.complaints.create",
      "issuerswitch.complaints.resolve",
      "issuerswitch.disputes.create",
      "issuerswitch.disputes.resolve",
      "issuerswitch.financialTransactions.list",
      "issuerswitch.issuerParticipants.get",
      "issuerswitch.issuerParticipants.update",
      "issuerswitch.mandateTransactions.list",
      "issuerswitch.metadataTransactions.list",
      "issuerswitch.operations.cancel",
      "issuerswitch.operations.delete",
      "issuerswitch.operations.get",
      "issuerswitch.operations.list",
      "issuerswitch.operations.wait",
      "issuerswitch.ruleMetadata.list",
      "issuerswitch.ruleMetadataValues.create",
      "issuerswitch.ruleMetadataValues.delete",
      "issuerswitch.ruleMetadataValues.list",
      "issuerswitch.rules.list",
      "krmapihosting.krmApiHosts.create",
      "krmapihosting.krmApiHosts.delete",
      "krmapihosting.krmApiHosts.get",
      "krmapihosting.krmApiHosts.getIamPolicy",
      "krmapihosting.krmApiHosts.list",
      "krmapihosting.krmApiHosts.setIamPolicy",
      "krmapihosting.krmApiHosts.update",
      "krmapihosting.locations.get",
      "krmapihosting.locations.list",
      "krmapihosting.operations.cancel",
      "krmapihosting.operations.delete",
      "krmapihosting.operations.get",
      "krmapihosting.operations.list",
      "lifesciences.operations.cancel",
      "lifesciences.operations.get",
      "lifesciences.operations.list",
      "lifesciences.workflows.run",
      "livestream.channels.create",
      "livestream.channels.delete",
      "livestream.channels.get",
      "livestream.channels.list",
      "livestream.channels.start",
      "livestream.channels.stop",
      "livestream.channels.update",
      "livestream.events.create",
      "livestream.events.delete",
      "livestream.events.get",
      "livestream.events.list",
      "livestream.inputs.create",
      "livestream.inputs.delete",
      "livestream.inputs.get",
      "livestream.inputs.list",
      "livestream.inputs.update",
      "livestream.locations.get",
      "livestream.locations.list",
      "livestream.operations.cancel",
      "livestream.operations.delete",
      "livestream.operations.get",
      "livestream.operations.list",
      "logging.buckets.copyLogEntries",
      "logging.buckets.create",
      "logging.buckets.delete",
      "logging.buckets.get",
      "logging.buckets.list",
      "logging.buckets.undelete",
      "logging.buckets.update",
      "logging.exclusions.create",
      "logging.exclusions.delete",
      "logging.exclusions.get",
      "logging.exclusions.list",
      "logging.exclusions.update",
      "logging.fields.access",
      "logging.links.create",
      "logging.links.delete",
      "logging.links.get",
      "logging.links.list",
      "logging.locations.get",
      "logging.locations.list",
      "logging.logEntries.create",
      "logging.logEntries.download",
      "logging.logEntries.list",
      "logging.logEntries.route",
      "logging.logMetrics.create",
      "logging.logMetrics.delete",
      "logging.logMetrics.get",
      "logging.logMetrics.list",
      "logging.logMetrics.update",
      "logging.logServiceIndexes.list",
      "logging.logServices.list",
      "logging.logs.delete",
      "logging.logs.list",
      "logging.notificationRules.create",
      "logging.notificationRules.delete",
      "logging.notificationRules.get",
      "logging.notificationRules.list",
      "logging.notificationRules.update",
      "logging.operations.cancel",
      "logging.operations.get",
      "logging.operations.list",
      "logging.privateLogEntries.list",
      "logging.queries.create",
      "logging.queries.delete",
      "logging.queries.get",
      "logging.queries.list",
      "logging.queries.listShared",
      "logging.queries.share",
      "logging.queries.update",
      "logging.queries.updateShared",
      "logging.settings.get",
      "logging.settings.update",
      "logging.sinks.create",
      "logging.sinks.delete",
      "logging.sinks.get",
      "logging.sinks.list",
      "logging.sinks.update",
      "logging.usage.get",
      "logging.views.access",
      "logging.views.create",
      "logging.views.delete",
      "logging.views.get",
      "logging.views.list",
      "logging.views.listLogs",
      "logging.views.listResourceKeys",
      "logging.views.listResourceValues",
      "logging.views.update",
      "looker.backups.create",
      "looker.backups.delete",
      "looker.backups.get",
      "looker.backups.list",
      "looker.instances.create",
      "looker.instances.delete",
      "looker.instances.export",
      "looker.instances.get",
      "looker.instances.import",
      "looker.instances.list",
      "looker.instances.login",
      "looker.instances.update",
      "looker.locations.get",
      "looker.locations.list",
      "looker.operations.cancel",
      "looker.operations.delete",
      "looker.operations.get",
      "looker.operations.list",
      "managedidentities.backups.create",
      "managedidentities.backups.delete",
      "managedidentities.backups.get",
      "managedidentities.backups.getIamPolicy",
      "managedidentities.backups.list",
      "managedidentities.backups.setIamPolicy",
      "managedidentities.backups.update",
      "managedidentities.domains.attachTrust",
      "managedidentities.domains.checkMigrationPermission",
      "managedidentities.domains.create",
      "managedidentities.domains.createTagBinding",
      "managedidentities.domains.delete",
      "managedidentities.domains.deleteTagBinding",
      "managedidentities.domains.detachTrust",
      "managedidentities.domains.disableMigration",
      "managedidentities.domains.domainJoinMachine",
      "managedidentities.domains.enableMigration",
      "managedidentities.domains.extendSchema",
      "managedidentities.domains.get",
      "managedidentities.domains.getIamPolicy",
      "managedidentities.domains.list",
      "managedidentities.domains.listEffectiveTags",
      "managedidentities.domains.listTagBindings",
      "managedidentities.domains.reconfigureTrust",
      "managedidentities.domains.resetpassword",
      "managedidentities.domains.restore",
      "managedidentities.domains.setIamPolicy",
      "managedidentities.domains.update",
      "managedidentities.domains.updateLDAPSSettings",
      "managedidentities.domains.validateTrust",
      "managedidentities.locations.get",
      "managedidentities.locations.list",
      "managedidentities.operations.cancel",
      "managedidentities.operations.delete",
      "managedidentities.operations.get",
      "managedidentities.operations.list",
      "managedidentities.peerings.create",
      "managedidentities.peerings.delete",
      "managedidentities.peerings.get",
      "managedidentities.peerings.getIamPolicy",
      "managedidentities.peerings.list",
      "managedidentities.peerings.setIamPolicy",
      "managedidentities.peerings.update",
      "managedidentities.sqlintegrations.get",
      "managedidentities.sqlintegrations.list",
      "mapsadmin.clientMaps.create",
      "mapsadmin.clientMaps.delete",
      "mapsadmin.clientMaps.get",
      "mapsadmin.clientMaps.list",
      "mapsadmin.clientMaps.update",
      "mapsadmin.clientStyleActivationRules.update",
      "mapsadmin.clientStyleSheetSnapshots.list",
      "mapsadmin.clientStyleSheetSnapshots.update",
      "mapsadmin.clientStyles.create",
      "mapsadmin.clientStyles.delete",
      "mapsadmin.clientStyles.get",
      "mapsadmin.clientStyles.list",
      "mapsadmin.clientStyles.update",
      "mapsadmin.styleEditorConfigs.get",
      "mapsadmin.styleSnapshots.list",
      "mapsadmin.styleSnapshots.update",
      "mapsplatformdatasets.datasets.create",
      "mapsplatformdatasets.datasets.delete",
      "mapsplatformdatasets.datasets.export",
      "mapsplatformdatasets.datasets.get",
      "mapsplatformdatasets.datasets.import",
      "mapsplatformdatasets.datasets.list",
      "mapsplatformdatasets.datasets.update",
      "memcache.instances.applyParameters",
      "memcache.instances.applySoftwareUpdate",
      "memcache.instances.create",
      "memcache.instances.delete",
      "memcache.instances.get",
      "memcache.instances.list",
      "memcache.instances.rescheduleMaintenance",
      "memcache.instances.update",
      "memcache.instances.updateParameters",
      "memcache.locations.get",
      "memcache.locations.list",
      "memcache.operations.cancel",
      "memcache.operations.delete",
      "memcache.operations.get",
      "memcache.operations.list",
      "meshconfig.projects.get",
      "meshconfig.projects.init",
      "metastore.backups.create",
      "metastore.backups.delete",
      "metastore.backups.get",
      "metastore.backups.getIamPolicy",
      "metastore.backups.list",
      "metastore.backups.setIamPolicy",
      "metastore.backups.use",
      "metastore.databases.create",
      "metastore.databases.delete",
      "metastore.databases.get",
      "metastore.databases.getIamPolicy",
      "metastore.databases.list",
      "metastore.databases.setIamPolicy",
      "metastore.databases.update",
      "metastore.federations.create",
      "metastore.federations.delete",
      "metastore.federations.get",
      "metastore.federations.getIamPolicy",
      "metastore.federations.list",
      "metastore.federations.setIamPolicy",
      "metastore.federations.update",
      "metastore.federations.use",
      "metastore.imports.create",
      "metastore.imports.get",
      "metastore.imports.list",
      "metastore.imports.update",
      "metastore.locations.get",
      "metastore.locations.list",
      "metastore.operations.cancel",
      "metastore.operations.delete",
      "metastore.operations.get",
      "metastore.operations.list",
      "metastore.services.create",
      "metastore.services.delete",
      "metastore.services.export",
      "metastore.services.get",
      "metastore.services.getIamPolicy",
      "metastore.services.list",
      "metastore.services.mutateMetadata",
      "metastore.services.queryMetadata",
      "metastore.services.restore",
      "metastore.services.setIamPolicy",
      "metastore.services.update",
      "metastore.services.use",
      "metastore.tables.create",
      "metastore.tables.delete",
      "metastore.tables.get",
      "metastore.tables.getIamPolicy",
      "metastore.tables.list",
      "metastore.tables.setIamPolicy",
      "metastore.tables.update",
      "migrationcenter.assets.create",
      "migrationcenter.assets.delete",
      "migrationcenter.assets.get",
      "migrationcenter.assets.list",
      "migrationcenter.assets.reportFrames",
      "migrationcenter.assets.update",
      "migrationcenter.errorFrames.get",
      "migrationcenter.errorFrames.list",
      "migrationcenter.groups.create",
      "migrationcenter.groups.delete",
      "migrationcenter.groups.get",
      "migrationcenter.groups.list",
      "migrationcenter.groups.update",
      "migrationcenter.importDataFiles.create",
      "migrationcenter.importDataFiles.delete",
      "migrationcenter.importDataFiles.get",
      "migrationcenter.importDataFiles.list",
      "migrationcenter.importJobs.create",
      "migrationcenter.importJobs.delete",
      "migrationcenter.importJobs.get",
      "migrationcenter.importJobs.list",
      "migrationcenter.importJobs.update",
      "migrationcenter.locations.get",
      "migrationcenter.locations.list",
      "migrationcenter.operations.cancel",
      "migrationcenter.operations.delete",
      "migrationcenter.operations.get",
      "migrationcenter.operations.list",
      "migrationcenter.preferenceSets.create",
      "migrationcenter.preferenceSets.delete",
      "migrationcenter.preferenceSets.get",
      "migrationcenter.preferenceSets.list",
      "migrationcenter.preferenceSets.update",
      "migrationcenter.reportConfigs.create",
      "migrationcenter.reportConfigs.delete",
      "migrationcenter.reportConfigs.get",
      "migrationcenter.reportConfigs.list",
      "migrationcenter.reports.create",
      "migrationcenter.reports.delete",
      "migrationcenter.reports.get",
      "migrationcenter.reports.list",
      "migrationcenter.settings.get",
      "migrationcenter.settings.update",
      "migrationcenter.sources.create",
      "migrationcenter.sources.delete",
      "migrationcenter.sources.get",
      "migrationcenter.sources.list",
      "migrationcenter.sources.update",
      "ml.jobs.cancel",
      "ml.jobs.create",
      "ml.jobs.get",
      "ml.jobs.getIamPolicy",
      "ml.jobs.list",
      "ml.jobs.setIamPolicy",
      "ml.jobs.update",
      "ml.locations.get",
      "ml.locations.list",
      "ml.models.create",
      "ml.models.delete",
      "ml.models.get",
      "ml.models.getIamPolicy",
      "ml.models.list",
      "ml.models.predict",
      "ml.models.setIamPolicy",
      "ml.models.update",
      "ml.operations.cancel",
      "ml.operations.get",
      "ml.operations.list",
      "ml.projects.getConfig",
      "ml.studies.create",
      "ml.studies.delete",
      "ml.studies.get",
      "ml.studies.getIamPolicy",
      "ml.studies.list",
      "ml.studies.setIamPolicy",
      "ml.trials.create",
      "ml.trials.delete",
      "ml.trials.get",
      "ml.trials.list",
      "ml.trials.update",
      "ml.versions.create",
      "ml.versions.delete",
      "ml.versions.get",
      "ml.versions.list",
      "ml.versions.predict",
      "ml.versions.update",
      "monitoring.alertPolicies.create",
      "monitoring.alertPolicies.delete",
      "monitoring.alertPolicies.get",
      "monitoring.alertPolicies.list",
      "monitoring.alertPolicies.update",
      "monitoring.dashboards.create",
      "monitoring.dashboards.delete",
      "monitoring.dashboards.get",
      "monitoring.dashboards.list",
      "monitoring.dashboards.update",
      "monitoring.groups.create",
      "monitoring.groups.delete",
      "monitoring.groups.get",
      "monitoring.groups.list",
      "monitoring.groups.update",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.delete",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.metricsScopes.link",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.notificationChannelDescriptors.get",
      "monitoring.notificationChannelDescriptors.list",
      "monitoring.notificationChannels.create",
      "monitoring.notificationChannels.delete",
      "monitoring.notificationChannels.get",
      "monitoring.notificationChannels.getVerificationCode",
      "monitoring.notificationChannels.list",
      "monitoring.notificationChannels.sendVerificationCode",
      "monitoring.notificationChannels.update",
      "monitoring.notificationChannels.verify",
      "monitoring.publicWidgets.create",
      "monitoring.publicWidgets.delete",
      "monitoring.publicWidgets.get",
      "monitoring.publicWidgets.list",
      "monitoring.publicWidgets.update",
      "monitoring.services.create",
      "monitoring.services.delete",
      "monitoring.services.get",
      "monitoring.services.list",
      "monitoring.services.update",
      "monitoring.slos.create",
      "monitoring.slos.delete",
      "monitoring.slos.get",
      "monitoring.slos.list",
      "monitoring.slos.update",
      "monitoring.snoozes.create",
      "monitoring.snoozes.get",
      "monitoring.snoozes.list",
      "monitoring.snoozes.update",
      "monitoring.timeSeries.create",
      "monitoring.timeSeries.list",
      "monitoring.uptimeCheckConfigs.create",
      "monitoring.uptimeCheckConfigs.delete",
      "monitoring.uptimeCheckConfigs.get",
      "monitoring.uptimeCheckConfigs.list",
      "monitoring.uptimeCheckConfigs.update",
      "nestconsole.smarthomePreviews.update",
      "nestconsole.smarthomeProjects.create",
      "nestconsole.smarthomeProjects.delete",
      "nestconsole.smarthomeProjects.get",
      "nestconsole.smarthomeProjects.update",
      "nestconsole.smarthomeVersions.create",
      "nestconsole.smarthomeVersions.get",
      "nestconsole.smarthomeVersions.submit",
      "netapp.activeDirectories.create",
      "netapp.activeDirectories.delete",
      "netapp.activeDirectories.get",
      "netapp.activeDirectories.list",
      "netapp.activeDirectories.update",
      "netapp.kmsConfigs.create",
      "netapp.kmsConfigs.delete",
      "netapp.kmsConfigs.encrypt",
      "netapp.kmsConfigs.get",
      "netapp.kmsConfigs.list",
      "netapp.kmsConfigs.update",
      "netapp.kmsConfigs.verify",
      "netapp.replications.create",
      "netapp.replications.delete",
      "netapp.replications.get",
      "netapp.replications.list",
      "netapp.replications.resume",
      "netapp.replications.reverse",
      "netapp.replications.stop",
      "netapp.replications.update",
      "netapp.snapshots.create",
      "netapp.snapshots.delete",
      "netapp.snapshots.get",
      "netapp.snapshots.list",
      "netapp.snapshots.update",
      "netapp.storagePools.create",
      "netapp.storagePools.delete",
      "netapp.storagePools.get",
      "netapp.storagePools.list",
      "netapp.storagePools.update",
      "netapp.volumes.create",
      "netapp.volumes.delete",
      "netapp.volumes.get",
      "netapp.volumes.list",
      "netapp.volumes.revert",
      "netapp.volumes.update",
      "networkconnectivity.groups.acceptSpoke",
      "networkconnectivity.groups.get",
      "networkconnectivity.groups.getIamPolicy",
      "networkconnectivity.groups.list",
      "networkconnectivity.groups.rejectSpoke",
      "networkconnectivity.groups.setIamPolicy",
      "networkconnectivity.groups.use",
      "networkconnectivity.hubRouteTables.get",
      "networkconnectivity.hubRouteTables.getIamPolicy",
      "networkconnectivity.hubRouteTables.list",
      "networkconnectivity.hubRouteTables.setIamPolicy",
      "networkconnectivity.hubRoutes.get",
      "networkconnectivity.hubRoutes.getIamPolicy",
      "networkconnectivity.hubRoutes.list",
      "networkconnectivity.hubRoutes.setIamPolicy",
      "networkconnectivity.hubs.create",
      "networkconnectivity.hubs.delete",
      "networkconnectivity.hubs.get",
      "networkconnectivity.hubs.getIamPolicy",
      "networkconnectivity.hubs.list",
      "networkconnectivity.hubs.listSpokes",
      "networkconnectivity.hubs.setIamPolicy",
      "networkconnectivity.hubs.update",
      "networkconnectivity.internalRanges.create",
      "networkconnectivity.internalRanges.delete",
      "networkconnectivity.internalRanges.get",
      "networkconnectivity.internalRanges.getIamPolicy",
      "networkconnectivity.internalRanges.list",
      "networkconnectivity.internalRanges.setIamPolicy",
      "networkconnectivity.internalRanges.update",
      "networkconnectivity.locations.get",
      "networkconnectivity.locations.list",
      "networkconnectivity.operations.cancel",
      "networkconnectivity.operations.delete",
      "networkconnectivity.operations.get",
      "networkconnectivity.operations.list",
      "networkconnectivity.policyBasedRoutes.create",
      "networkconnectivity.policyBasedRoutes.delete",
      "networkconnectivity.policyBasedRoutes.get",
      "networkconnectivity.policyBasedRoutes.getIamPolicy",
      "networkconnectivity.policyBasedRoutes.list",
      "networkconnectivity.policyBasedRoutes.setIamPolicy",
      "networkconnectivity.serviceClasses.create",
      "networkconnectivity.serviceClasses.delete",
      "networkconnectivity.serviceClasses.get",
      "networkconnectivity.serviceClasses.list",
      "networkconnectivity.serviceClasses.update",
      "networkconnectivity.serviceClasses.use",
      "networkconnectivity.serviceConnectionMaps.create",
      "networkconnectivity.serviceConnectionMaps.delete",
      "networkconnectivity.serviceConnectionMaps.get",
      "networkconnectivity.serviceConnectionMaps.list",
      "networkconnectivity.serviceConnectionMaps.update",
      "networkconnectivity.serviceConnectionPolicies.create",
      "networkconnectivity.serviceConnectionPolicies.delete",
      "networkconnectivity.serviceConnectionPolicies.get",
      "networkconnectivity.serviceConnectionPolicies.list",
      "networkconnectivity.serviceConnectionPolicies.update",
      "networkconnectivity.spokes.create",
      "networkconnectivity.spokes.delete",
      "networkconnectivity.spokes.get",
      "networkconnectivity.spokes.getIamPolicy",
      "networkconnectivity.spokes.list",
      "networkconnectivity.spokes.setIamPolicy",
      "networkconnectivity.spokes.update",
      "networkmanagement.config.get",
      "networkmanagement.config.startFreeTrial",
      "networkmanagement.config.update",
      "networkmanagement.connectivitytests.create",
      "networkmanagement.connectivitytests.delete",
      "networkmanagement.connectivitytests.get",
      "networkmanagement.connectivitytests.getIamPolicy",
      "networkmanagement.connectivitytests.list",
      "networkmanagement.connectivitytests.rerun",
      "networkmanagement.connectivitytests.setIamPolicy",
      "networkmanagement.connectivitytests.update",
      "networkmanagement.locations.get",
      "networkmanagement.locations.list",
      "networkmanagement.operations.get",
      "networkmanagement.operations.list",
      "networkmanagement.topologygraphs.read",
      "networksecurity.authorizationPolicies.create",
      "networksecurity.authorizationPolicies.delete",
      "networksecurity.authorizationPolicies.get",
      "networksecurity.authorizationPolicies.getIamPolicy",
      "networksecurity.authorizationPolicies.list",
      "networksecurity.authorizationPolicies.setIamPolicy",
      "networksecurity.authorizationPolicies.update",
      "networksecurity.authorizationPolicies.use",
      "networksecurity.clientTlsPolicies.create",
      "networksecurity.clientTlsPolicies.delete",
      "networksecurity.clientTlsPolicies.get",
      "networksecurity.clientTlsPolicies.getIamPolicy",
      "networksecurity.clientTlsPolicies.list",
      "networksecurity.clientTlsPolicies.setIamPolicy",
      "networksecurity.clientTlsPolicies.update",
      "networksecurity.clientTlsPolicies.use",
      "networksecurity.firewallEndpointAssociations.create",
      "networksecurity.firewallEndpointAssociations.delete",
      "networksecurity.firewallEndpointAssociations.get",
      "networksecurity.firewallEndpointAssociations.list",
      "networksecurity.firewallEndpointAssociations.update",
      "networksecurity.firewallEndpoints.create",
      "networksecurity.firewallEndpoints.delete",
      "networksecurity.firewallEndpoints.get",
      "networksecurity.firewallEndpoints.list",
      "networksecurity.firewallEndpoints.update",
      "networksecurity.firewallEndpoints.use",
      "networksecurity.gatewaySecurityPolicies.create",
      "networksecurity.gatewaySecurityPolicies.delete",
      "networksecurity.gatewaySecurityPolicies.get",
      "networksecurity.gatewaySecurityPolicies.list",
      "networksecurity.gatewaySecurityPolicies.update",
      "networksecurity.gatewaySecurityPolicies.use",
      "networksecurity.gatewaySecurityPolicyRules.create",
      "networksecurity.gatewaySecurityPolicyRules.delete",
      "networksecurity.gatewaySecurityPolicyRules.get",
      "networksecurity.gatewaySecurityPolicyRules.list",
      "networksecurity.gatewaySecurityPolicyRules.update",
      "networksecurity.gatewaySecurityPolicyRules.use",
      "networksecurity.locations.get",
      "networksecurity.locations.list",
      "networksecurity.operations.cancel",
      "networksecurity.operations.delete",
      "networksecurity.operations.get",
      "networksecurity.operations.list",
      "networksecurity.securityProfileGroups.create",
      "networksecurity.securityProfileGroups.delete",
      "networksecurity.securityProfileGroups.get",
      "networksecurity.securityProfileGroups.list",
      "networksecurity.securityProfileGroups.update",
      "networksecurity.securityProfileGroups.use",
      "networksecurity.securityProfiles.create",
      "networksecurity.securityProfiles.delete",
      "networksecurity.securityProfiles.get",
      "networksecurity.securityProfiles.list",
      "networksecurity.securityProfiles.update",
      "networksecurity.securityProfiles.use",
      "networksecurity.serverTlsPolicies.create",
      "networksecurity.serverTlsPolicies.delete",
      "networksecurity.serverTlsPolicies.get",
      "networksecurity.serverTlsPolicies.getIamPolicy",
      "networksecurity.serverTlsPolicies.list",
      "networksecurity.serverTlsPolicies.setIamPolicy",
      "networksecurity.serverTlsPolicies.update",
      "networksecurity.serverTlsPolicies.use",
      "networksecurity.tlsInspectionPolicies.create",
      "networksecurity.tlsInspectionPolicies.delete",
      "networksecurity.tlsInspectionPolicies.get",
      "networksecurity.tlsInspectionPolicies.list",
      "networksecurity.tlsInspectionPolicies.update",
      "networksecurity.tlsInspectionPolicies.use",
      "networksecurity.urlLists.create",
      "networksecurity.urlLists.delete",
      "networksecurity.urlLists.get",
      "networksecurity.urlLists.list",
      "networksecurity.urlLists.update",
      "networksecurity.urlLists.use",
      "networkservices.endpointConfigSelectors.create",
      "networkservices.endpointConfigSelectors.delete",
      "networkservices.endpointConfigSelectors.get",
      "networkservices.endpointConfigSelectors.getIamPolicy",
      "networkservices.endpointConfigSelectors.list",
      "networkservices.endpointConfigSelectors.setIamPolicy",
      "networkservices.endpointConfigSelectors.update",
      "networkservices.endpointConfigSelectors.use",
      "networkservices.endpointPolicies.create",
      "networkservices.endpointPolicies.delete",
      "networkservices.endpointPolicies.get",
      "networkservices.endpointPolicies.getIamPolicy",
      "networkservices.endpointPolicies.list",
      "networkservices.endpointPolicies.setIamPolicy",
      "networkservices.endpointPolicies.update",
      "networkservices.endpointPolicies.use",
      "networkservices.gateways.create",
      "networkservices.gateways.delete",
      "networkservices.gateways.get",
      "networkservices.gateways.list",
      "networkservices.gateways.update",
      "networkservices.gateways.use",
      "networkservices.grpcRoutes.create",
      "networkservices.grpcRoutes.delete",
      "networkservices.grpcRoutes.get",
      "networkservices.grpcRoutes.getIamPolicy",
      "networkservices.grpcRoutes.list",
      "networkservices.grpcRoutes.setIamPolicy",
      "networkservices.grpcRoutes.update",
      "networkservices.grpcRoutes.use",
      "networkservices.httpFilters.create",
      "networkservices.httpFilters.delete",
      "networkservices.httpFilters.get",
      "networkservices.httpFilters.getIamPolicy",
      "networkservices.httpFilters.list",
      "networkservices.httpFilters.setIamPolicy",
      "networkservices.httpFilters.update",
      "networkservices.httpFilters.use",
      "networkservices.httpRoutes.create",
      "networkservices.httpRoutes.delete",
      "networkservices.httpRoutes.get",
      "networkservices.httpRoutes.getIamPolicy",
      "networkservices.httpRoutes.list",
      "networkservices.httpRoutes.setIamPolicy",
      "networkservices.httpRoutes.update",
      "networkservices.httpRoutes.use",
      "networkservices.httpfilters.create",
      "networkservices.httpfilters.delete",
      "networkservices.httpfilters.get",
      "networkservices.httpfilters.getIamPolicy",
      "networkservices.httpfilters.list",
      "networkservices.httpfilters.setIamPolicy",
      "networkservices.httpfilters.update",
      "networkservices.httpfilters.use",
      "networkservices.locations.get",
      "networkservices.locations.list",
      "networkservices.meshes.create",
      "networkservices.meshes.delete",
      "networkservices.meshes.get",
      "networkservices.meshes.getIamPolicy",
      "networkservices.meshes.list",
      "networkservices.meshes.setIamPolicy",
      "networkservices.meshes.update",
      "networkservices.meshes.use",
      "networkservices.operations.cancel",
      "networkservices.operations.delete",
      "networkservices.operations.get",
      "networkservices.operations.list",
      "networkservices.serviceBindings.create",
      "networkservices.serviceBindings.delete",
      "networkservices.serviceBindings.get",
      "networkservices.serviceBindings.list",
      "networkservices.serviceBindings.update",
      "networkservices.tcpRoutes.create",
      "networkservices.tcpRoutes.delete",
      "networkservices.tcpRoutes.get",
      "networkservices.tcpRoutes.getIamPolicy",
      "networkservices.tcpRoutes.list",
      "networkservices.tcpRoutes.setIamPolicy",
      "networkservices.tcpRoutes.update",
      "networkservices.tcpRoutes.use",
      "networkservices.tlsRoutes.create",
      "networkservices.tlsRoutes.delete",
      "networkservices.tlsRoutes.get",
      "networkservices.tlsRoutes.list",
      "networkservices.tlsRoutes.update",
      "networkservices.tlsRoutes.use",
      "notebooks.environments.create",
      "notebooks.environments.delete",
      "notebooks.environments.get",
      "notebooks.environments.getIamPolicy",
      "notebooks.environments.list",
      "notebooks.environments.setIamPolicy",
      "notebooks.executions.create",
      "notebooks.executions.delete",
      "notebooks.executions.get",
      "notebooks.executions.getIamPolicy",
      "notebooks.executions.list",
      "notebooks.executions.setIamPolicy",
      "notebooks.instances.checkUpgradability",
      "notebooks.instances.create",
      "notebooks.instances.delete",
      "notebooks.instances.diagnose",
      "notebooks.instances.get",
      "notebooks.instances.getHealth",
      "notebooks.instances.getIamPolicy",
      "notebooks.instances.list",
      "notebooks.instances.reset",
      "notebooks.instances.setAccelerator",
      "notebooks.instances.setIamPolicy",
      "notebooks.instances.setLabels",
      "notebooks.instances.setMachineType",
      "notebooks.instances.start",
      "notebooks.instances.stop",
      "notebooks.instances.update",
      "notebooks.instances.updateConfig",
      "notebooks.instances.updateShieldInstanceConfig",
      "notebooks.instances.upgrade",
      "notebooks.instances.use",
      "notebooks.locations.get",
      "notebooks.locations.list",
      "notebooks.operations.cancel",
      "notebooks.operations.delete",
      "notebooks.operations.get",
      "notebooks.operations.list",
      "notebooks.runtimes.create",
      "notebooks.runtimes.delete",
      "notebooks.runtimes.diagnose",
      "notebooks.runtimes.get",
      "notebooks.runtimes.getIamPolicy",
      "notebooks.runtimes.list",
      "notebooks.runtimes.reset",
      "notebooks.runtimes.setIamPolicy",
      "notebooks.runtimes.start",
      "notebooks.runtimes.stop",
      "notebooks.runtimes.switch",
      "notebooks.runtimes.update",
      "notebooks.runtimes.upgrade",
      "notebooks.schedules.create",
      "notebooks.schedules.delete",
      "notebooks.schedules.get",
      "notebooks.schedules.getIamPolicy",
      "notebooks.schedules.list",
      "notebooks.schedules.setIamPolicy",
      "oauthconfig.clientpolicy.get",
      "oauthconfig.testusers.get",
      "oauthconfig.testusers.update",
      "oauthconfig.verification.get",
      "oauthconfig.verification.submit",
      "oauthconfig.verification.update",
      "ondemandscanning.operations.cancel",
      "ondemandscanning.operations.delete",
      "ondemandscanning.operations.get",
      "ondemandscanning.operations.list",
      "ondemandscanning.operations.wait",
      "ondemandscanning.scans.analyzePackages",
      "ondemandscanning.scans.listVulnerabilities",
      "ondemandscanning.scans.scan",
      "opsconfigmonitoring.resourceMetadata.list",
      "opsconfigmonitoring.resourceMetadata.write",
      "orgpolicy.constraints.list",
      "orgpolicy.customConstraints.get",
      "orgpolicy.customConstraints.list",
      "orgpolicy.policies.list",
      "orgpolicy.policy.get",
      "osconfig.guestPolicies.create",
      "osconfig.guestPolicies.delete",
      "osconfig.guestPolicies.get",
      "osconfig.guestPolicies.list",
      "osconfig.guestPolicies.update",
      "osconfig.instanceOSPoliciesCompliances.get",
      "osconfig.instanceOSPoliciesCompliances.list",
      "osconfig.inventories.get",
      "osconfig.inventories.list",
      "osconfig.osPolicyAssignmentReports.get",
      "osconfig.osPolicyAssignmentReports.list",
      "osconfig.osPolicyAssignments.create",
      "osconfig.osPolicyAssignments.delete",
      "osconfig.osPolicyAssignments.get",
      "osconfig.osPolicyAssignments.list",
      "osconfig.osPolicyAssignments.update",
      "osconfig.patchDeployments.create",
      "osconfig.patchDeployments.delete",
      "osconfig.patchDeployments.execute",
      "osconfig.patchDeployments.get",
      "osconfig.patchDeployments.list",
      "osconfig.patchDeployments.pause",
      "osconfig.patchDeployments.resume",
      "osconfig.patchDeployments.update",
      "osconfig.patchJobs.exec",
      "osconfig.patchJobs.get",
      "osconfig.patchJobs.list",
      "osconfig.vulnerabilityReports.get",
      "osconfig.vulnerabilityReports.list",
      "paymentsresellersubscription.products.list",
      "paymentsresellersubscription.promotions.list",
      "paymentsresellersubscription.subscriptions.cancel",
      "paymentsresellersubscription.subscriptions.extend",
      "paymentsresellersubscription.subscriptions.get",
      "paymentsresellersubscription.subscriptions.provision",
      "paymentsresellersubscription.subscriptions.undoCancel",
      "policyanalyzer.serviceAccountKeyLastAuthenticationActivities.query",
      "policyanalyzer.serviceAccountLastAuthenticationActivities.query",
      "policysimulator.orgPolicyViolations.list",
      "policysimulator.orgPolicyViolationsPreviews.create",
      "policysimulator.orgPolicyViolationsPreviews.get",
      "policysimulator.orgPolicyViolationsPreviews.list",
      "policysimulator.replayResults.list",
      "policysimulator.replays.create",
      "policysimulator.replays.get",
      "policysimulator.replays.list",
      "policysimulator.replays.run",
      "privateca.caPools.create",
      "privateca.caPools.delete",
      "privateca.caPools.get",
      "privateca.caPools.getIamPolicy",
      "privateca.caPools.list",
      "privateca.caPools.setIamPolicy",
      "privateca.caPools.update",
      "privateca.caPools.use",
      "privateca.certificateAuthorities.create",
      "privateca.certificateAuthorities.delete",
      "privateca.certificateAuthorities.get",
      "privateca.certificateAuthorities.getIamPolicy",
      "privateca.certificateAuthorities.list",
      "privateca.certificateAuthorities.setIamPolicy",
      "privateca.certificateAuthorities.update",
      "privateca.certificateRevocationLists.create",
      "privateca.certificateRevocationLists.get",
      "privateca.certificateRevocationLists.getIamPolicy",
      "privateca.certificateRevocationLists.list",
      "privateca.certificateRevocationLists.setIamPolicy",
      "privateca.certificateRevocationLists.update",
      "privateca.certificateTemplates.create",
      "privateca.certificateTemplates.delete",
      "privateca.certificateTemplates.get",
      "privateca.certificateTemplates.getIamPolicy",
      "privateca.certificateTemplates.list",
      "privateca.certificateTemplates.setIamPolicy",
      "privateca.certificateTemplates.update",
      "privateca.certificateTemplates.use",
      "privateca.certificates.create",
      "privateca.certificates.createForSelf",
      "privateca.certificates.get",
      "privateca.certificates.getIamPolicy",
      "privateca.certificates.list",
      "privateca.certificates.setIamPolicy",
      "privateca.certificates.update",
      "privateca.locations.get",
      "privateca.locations.list",
      "privateca.operations.cancel",
      "privateca.operations.delete",
      "privateca.operations.get",
      "privateca.operations.list",
      "privateca.reusableConfigs.create",
      "privateca.reusableConfigs.delete",
      "privateca.reusableConfigs.get",
      "privateca.reusableConfigs.getIamPolicy",
      "privateca.reusableConfigs.list",
      "privateca.reusableConfigs.setIamPolicy",
      "privateca.reusableConfigs.update",
      "proximitybeacon.attachments.create",
      "proximitybeacon.attachments.delete",
      "proximitybeacon.attachments.get",
      "proximitybeacon.attachments.list",
      "proximitybeacon.beacons.attach",
      "proximitybeacon.beacons.create",
      "proximitybeacon.beacons.get",
      "proximitybeacon.beacons.getIamPolicy",
      "proximitybeacon.beacons.list",
      "proximitybeacon.beacons.setIamPolicy",
      "proximitybeacon.beacons.update",
      "proximitybeacon.namespaces.create",
      "proximitybeacon.namespaces.delete",
      "proximitybeacon.namespaces.get",
      "proximitybeacon.namespaces.getIamPolicy",
      "proximitybeacon.namespaces.list",
      "proximitybeacon.namespaces.setIamPolicy",
      "proximitybeacon.namespaces.update",
      "publicca.externalAccountKeys.create",
      "pubsub.schemas.attach",
      "pubsub.schemas.commit",
      "pubsub.schemas.create",
      "pubsub.schemas.delete",
      "pubsub.schemas.get",
      "pubsub.schemas.getIamPolicy",
      "pubsub.schemas.list",
      "pubsub.schemas.listRevisions",
      "pubsub.schemas.rollback",
      "pubsub.schemas.setIamPolicy",
      "pubsub.schemas.validate",
      "pubsub.snapshots.create",
      "pubsub.snapshots.delete",
      "pubsub.snapshots.get",
      "pubsub.snapshots.getIamPolicy",
      "pubsub.snapshots.list",
      "pubsub.snapshots.seek",
      "pubsub.snapshots.setIamPolicy",
      "pubsub.snapshots.update",
      "pubsub.subscriptions.consume",
      "pubsub.subscriptions.create",
      "pubsub.subscriptions.delete",
      "pubsub.subscriptions.get",
      "pubsub.subscriptions.getIamPolicy",
      "pubsub.subscriptions.list",
      "pubsub.subscriptions.setIamPolicy",
      "pubsub.subscriptions.update",
      "pubsub.topics.attachSubscription",
      "pubsub.topics.create",
      "pubsub.topics.delete",
      "pubsub.topics.detachSubscription",
      "pubsub.topics.get",
      "pubsub.topics.getIamPolicy",
      "pubsub.topics.list",
      "pubsub.topics.publish",
      "pubsub.topics.setIamPolicy",
      "pubsub.topics.update",
      "pubsub.topics.updateTag",
      "pubsublite.locations.openKafkaStream",
      "pubsublite.operations.get",
      "pubsublite.operations.list",
      "pubsublite.reservations.attachTopic",
      "pubsublite.reservations.create",
      "pubsublite.reservations.delete",
      "pubsublite.reservations.get",
      "pubsublite.reservations.list",
      "pubsublite.reservations.listTopics",
      "pubsublite.reservations.update",
      "pubsublite.subscriptions.create",
      "pubsublite.subscriptions.delete",
      "pubsublite.subscriptions.get",
      "pubsublite.subscriptions.getCursor",
      "pubsublite.subscriptions.list",
      "pubsublite.subscriptions.seek",
      "pubsublite.subscriptions.setCursor",
      "pubsublite.subscriptions.subscribe",
      "pubsublite.subscriptions.update",
      "pubsublite.topics.computeHeadCursor",
      "pubsublite.topics.computeMessageStats",
      "pubsublite.topics.computeTimeCursor",
      "pubsublite.topics.create",
      "pubsublite.topics.delete",
      "pubsublite.topics.get",
      "pubsublite.topics.getPartitions",
      "pubsublite.topics.list",
      "pubsublite.topics.listSubscriptions",
      "pubsublite.topics.publish",
      "pubsublite.topics.subscribe",
      "pubsublite.topics.update",
      "recaptchaenterprise.assessments.annotate",
      "recaptchaenterprise.assessments.create",
      "recaptchaenterprise.keys.create",
      "recaptchaenterprise.keys.delete",
      "recaptchaenterprise.keys.get",
      "recaptchaenterprise.keys.list",
      "recaptchaenterprise.keys.retrievelegacysecretkey",
      "recaptchaenterprise.keys.update",
      "recaptchaenterprise.metrics.get",
      "recaptchaenterprise.projectmetadata.get",
      "recaptchaenterprise.projectmetadata.update",
      "recaptchaenterprise.relatedaccountgroupmemberships.list",
      "recaptchaenterprise.relatedaccountgroups.list",
      "recommender.bigqueryCapacityCommitmentsInsights.get",
      "recommender.bigqueryCapacityCommitmentsInsights.list",
      "recommender.bigqueryCapacityCommitmentsInsights.update",
      "recommender.bigqueryCapacityCommitmentsRecommendations.get",
      "recommender.bigqueryCapacityCommitmentsRecommendations.list",
      "recommender.bigqueryCapacityCommitmentsRecommendations.update",
      "recommender.bigqueryPartitionClusterRecommendations.get",
      "recommender.bigqueryPartitionClusterRecommendations.list",
      "recommender.bigqueryPartitionClusterRecommendations.update",
      "recommender.bigqueryTableStatsInsights.get",
      "recommender.bigqueryTableStatsInsights.list",
      "recommender.bigqueryTableStatsInsights.update",
      "recommender.cloudAssetInsights.get",
      "recommender.cloudAssetInsights.list",
      "recommender.cloudAssetInsights.update",
      "recommender.cloudCostGeneralInsights.get",
      "recommender.cloudCostGeneralInsights.list",
      "recommender.cloudCostGeneralInsights.update",
      "recommender.cloudCostGeneralRecommendations.get",
      "recommender.cloudCostGeneralRecommendations.list",
      "recommender.cloudCostGeneralRecommendations.update",
      "recommender.cloudFunctionsPerformanceInsights.get",
      "recommender.cloudFunctionsPerformanceInsights.list",
      "recommender.cloudFunctionsPerformanceInsights.update",
      "recommender.cloudFunctionsPerformanceRecommendations.get",
      "recommender.cloudFunctionsPerformanceRecommendations.list",
      "recommender.cloudFunctionsPerformanceRecommendations.update",
      "recommender.cloudManageabilityGeneralInsights.get",
      "recommender.cloudManageabilityGeneralInsights.list",
      "recommender.cloudManageabilityGeneralInsights.update",
      "recommender.cloudManageabilityGeneralRecommendations.get",
      "recommender.cloudManageabilityGeneralRecommendations.list",
      "recommender.cloudManageabilityGeneralRecommendations.update",
      "recommender.cloudPerformanceGeneralInsights.get",
      "recommender.cloudPerformanceGeneralInsights.list",
      "recommender.cloudPerformanceGeneralInsights.update",
      "recommender.cloudPerformanceGeneralRecommendations.get",
      "recommender.cloudPerformanceGeneralRecommendations.list",
      "recommender.cloudPerformanceGeneralRecommendations.update",
      "recommender.cloudReliabilityGeneralInsights.get",
      "recommender.cloudReliabilityGeneralInsights.list",
      "recommender.cloudReliabilityGeneralInsights.update",
      "recommender.cloudReliabilityGeneralRecommendations.get",
      "recommender.cloudReliabilityGeneralRecommendations.list",
      "recommender.cloudReliabilityGeneralRecommendations.update",
      "recommender.cloudSecurityGeneralInsights.get",
      "recommender.cloudSecurityGeneralInsights.list",
      "recommender.cloudSecurityGeneralInsights.update",
      "recommender.cloudSecurityGeneralRecommendations.get",
      "recommender.cloudSecurityGeneralRecommendations.list",
      "recommender.cloudSecurityGeneralRecommendations.update",
      "recommender.cloudsqlIdleInstanceRecommendations.get",
      "recommender.cloudsqlIdleInstanceRecommendations.list",
      "recommender.cloudsqlIdleInstanceRecommendations.update",
      "recommender.cloudsqlInstanceActivityInsights.get",
      "recommender.cloudsqlInstanceActivityInsights.list",
      "recommender.cloudsqlInstanceActivityInsights.update",
      "recommender.cloudsqlInstanceCpuUsageInsights.get",
      "recommender.cloudsqlInstanceCpuUsageInsights.list",
      "recommender.cloudsqlInstanceCpuUsageInsights.update",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.get",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.list",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.update",
      "recommender.cloudsqlInstanceMemoryUsageInsights.get",
      "recommender.cloudsqlInstanceMemoryUsageInsights.list",
      "recommender.cloudsqlInstanceMemoryUsageInsights.update",
      "recommender.cloudsqlInstanceOomProbabilityInsights.get",
      "recommender.cloudsqlInstanceOomProbabilityInsights.list",
      "recommender.cloudsqlInstanceOomProbabilityInsights.update",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.get",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.list",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.update",
      "recommender.cloudsqlInstancePerformanceInsights.get",
      "recommender.cloudsqlInstancePerformanceInsights.list",
      "recommender.cloudsqlInstancePerformanceInsights.update",
      "recommender.cloudsqlInstancePerformanceRecommendations.get",
      "recommender.cloudsqlInstancePerformanceRecommendations.list",
      "recommender.cloudsqlInstancePerformanceRecommendations.update",
      "recommender.cloudsqlInstanceReliabilityInsights.get",
      "recommender.cloudsqlInstanceReliabilityInsights.list",
      "recommender.cloudsqlInstanceReliabilityInsights.update",
      "recommender.cloudsqlInstanceReliabilityRecommendations.get",
      "recommender.cloudsqlInstanceReliabilityRecommendations.list",
      "recommender.cloudsqlInstanceReliabilityRecommendations.update",
      "recommender.cloudsqlInstanceSecurityInsights.get",
      "recommender.cloudsqlInstanceSecurityInsights.list",
      "recommender.cloudsqlInstanceSecurityInsights.update",
      "recommender.cloudsqlInstanceSecurityRecommendations.get",
      "recommender.cloudsqlInstanceSecurityRecommendations.list",
      "recommender.cloudsqlInstanceSecurityRecommendations.update",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.get",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.list",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.update",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.get",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.list",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.update",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.get",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.update",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.get",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.list",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.update",
      "recommender.commitmentUtilizationInsights.get",
      "recommender.commitmentUtilizationInsights.list",
      "recommender.commitmentUtilizationInsights.update",
      "recommender.computeAddressIdleResourceInsights.get",
      "recommender.computeAddressIdleResourceInsights.list",
      "recommender.computeAddressIdleResourceInsights.update",
      "recommender.computeAddressIdleResourceRecommendations.get",
      "recommender.computeAddressIdleResourceRecommendations.list",
      "recommender.computeAddressIdleResourceRecommendations.update",
      "recommender.computeDiskIdleResourceInsights.get",
      "recommender.computeDiskIdleResourceInsights.list",
      "recommender.computeDiskIdleResourceInsights.update",
      "recommender.computeDiskIdleResourceRecommendations.get",
      "recommender.computeDiskIdleResourceRecommendations.list",
      "recommender.computeDiskIdleResourceRecommendations.update",
      "recommender.computeFirewallInsightTypeConfigs.get",
      "recommender.computeFirewallInsightTypeConfigs.update",
      "recommender.computeFirewallInsights.get",
      "recommender.computeFirewallInsights.list",
      "recommender.computeFirewallInsights.update",
      "recommender.computeImageIdleResourceInsights.get",
      "recommender.computeImageIdleResourceInsights.list",
      "recommender.computeImageIdleResourceInsights.update",
      "recommender.computeImageIdleResourceRecommendations.get",
      "recommender.computeImageIdleResourceRecommendations.list",
      "recommender.computeImageIdleResourceRecommendations.update",
      "recommender.computeInstanceCpuUsageInsights.get",
      "recommender.computeInstanceCpuUsageInsights.list",
      "recommender.computeInstanceCpuUsageInsights.update",
      "recommender.computeInstanceCpuUsagePredictionInsights.get",
      "recommender.computeInstanceCpuUsagePredictionInsights.list",
      "recommender.computeInstanceCpuUsagePredictionInsights.update",
      "recommender.computeInstanceCpuUsageTrendInsights.get",
      "recommender.computeInstanceCpuUsageTrendInsights.list",
      "recommender.computeInstanceCpuUsageTrendInsights.update",
      "recommender.computeInstanceGroupManagerCpuUsageInsights.get",
      "recommender.computeInstanceGroupManagerCpuUsageInsights.list",
      "recommender.computeInstanceGroupManagerCpuUsageInsights.update",
      "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.get",
      "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.list",
      "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.update",
      "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.get",
      "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.list",
      "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.update",
      "recommender.computeInstanceGroupManagerMachineTypeRecommendations.get",
      "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list",
      "recommender.computeInstanceGroupManagerMachineTypeRecommendations.update",
      "recommender.computeInstanceGroupManagerMemoryUsageInsights.get",
      "recommender.computeInstanceGroupManagerMemoryUsageInsights.list",
      "recommender.computeInstanceGroupManagerMemoryUsageInsights.update",
      "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.get",
      "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.list",
      "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.update",
      "recommender.computeInstanceIdleResourceRecommendations.get",
      "recommender.computeInstanceIdleResourceRecommendations.list",
      "recommender.computeInstanceIdleResourceRecommendations.update",
      "recommender.computeInstanceIdleResourceRecommenderConfig.get",
      "recommender.computeInstanceIdleResourceRecommenderConfig.update",
      "recommender.computeInstanceMachineTypeRecommendations.get",
      "recommender.computeInstanceMachineTypeRecommendations.list",
      "recommender.computeInstanceMachineTypeRecommendations.update",
      "recommender.computeInstanceMemoryUsageInsights.get",
      "recommender.computeInstanceMemoryUsageInsights.list",
      "recommender.computeInstanceMemoryUsageInsights.update",
      "recommender.computeInstanceMemoryUsagePredictionInsights.get",
      "recommender.computeInstanceMemoryUsagePredictionInsights.list",
      "recommender.computeInstanceMemoryUsagePredictionInsights.update",
      "recommender.computeInstanceNetworkThroughputInsights.get",
      "recommender.computeInstanceNetworkThroughputInsights.list",
      "recommender.computeInstanceNetworkThroughputInsights.update",
      "recommender.containerDiagnosisInsights.get",
      "recommender.containerDiagnosisInsights.list",
      "recommender.containerDiagnosisInsights.update",
      "recommender.containerDiagnosisRecommendations.get",
      "recommender.containerDiagnosisRecommendations.list",
      "recommender.containerDiagnosisRecommendations.update",
      "recommender.costInsights.get",
      "recommender.costInsights.list",
      "recommender.costInsights.update",
      "recommender.dataflowDiagnosticsInsights.get",
      "recommender.dataflowDiagnosticsInsights.list",
      "recommender.dataflowDiagnosticsInsights.update",
      "recommender.errorReportingInsights.get",
      "recommender.errorReportingInsights.list",
      "recommender.errorReportingInsights.update",
      "recommender.errorReportingRecommendations.get",
      "recommender.errorReportingRecommendations.list",
      "recommender.errorReportingRecommendations.update",
      "recommender.gmpGuidedExperienceInsights.get",
      "recommender.gmpGuidedExperienceInsights.list",
      "recommender.gmpGuidedExperienceInsights.update",
      "recommender.gmpGuidedExperienceRecommendations.get",
      "recommender.gmpGuidedExperienceRecommendations.list",
      "recommender.gmpGuidedExperienceRecommendations.update",
      "recommender.gmpProjectManagementInsights.get",
      "recommender.gmpProjectManagementInsights.list",
      "recommender.gmpProjectManagementInsights.update",
      "recommender.gmpProjectManagementRecommendations.get",
      "recommender.gmpProjectManagementRecommendations.list",
      "recommender.gmpProjectManagementRecommendations.update",
      "recommender.gmpProjectProductSuggestionsInsights.get",
      "recommender.gmpProjectProductSuggestionsInsights.list",
      "recommender.gmpProjectProductSuggestionsInsights.update",
      "recommender.gmpProjectProductSuggestionsRecommendations.get",
      "recommender.gmpProjectProductSuggestionsRecommendations.list",
      "recommender.gmpProjectProductSuggestionsRecommendations.update",
      "recommender.gmpProjectQuotaInsights.get",
      "recommender.gmpProjectQuotaInsights.list",
      "recommender.gmpProjectQuotaInsights.update",
      "recommender.gmpProjectQuotaRecommendations.get",
      "recommender.gmpProjectQuotaRecommendations.list",
      "recommender.gmpProjectQuotaRecommendations.update",
      "recommender.iamPolicyInsights.get",
      "recommender.iamPolicyInsights.list",
      "recommender.iamPolicyInsights.update",
      "recommender.iamPolicyLateralMovementInsights.get",
      "recommender.iamPolicyLateralMovementInsights.list",
      "recommender.iamPolicyLateralMovementInsights.update",
      "recommender.iamPolicyRecommendations.get",
      "recommender.iamPolicyRecommendations.list",
      "recommender.iamPolicyRecommendations.update",
      "recommender.iamPolicyRecommenderConfig.get",
      "recommender.iamPolicyRecommenderConfig.update",
      "recommender.iamServiceAccountInsights.get",
      "recommender.iamServiceAccountInsights.list",
      "recommender.iamServiceAccountInsights.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.loggingProductSuggestionContainerInsights.get",
      "recommender.loggingProductSuggestionContainerInsights.list",
      "recommender.loggingProductSuggestionContainerInsights.update",
      "recommender.loggingProductSuggestionContainerRecommendations.get",
      "recommender.loggingProductSuggestionContainerRecommendations.list",
      "recommender.loggingProductSuggestionContainerRecommendations.update",
      "recommender.monitoringProductSuggestionComputeInsights.get",
      "recommender.monitoringProductSuggestionComputeInsights.list",
      "recommender.monitoringProductSuggestionComputeInsights.update",
      "recommender.monitoringProductSuggestionComputeRecommendations.get",
      "recommender.monitoringProductSuggestionComputeRecommendations.list",
      "recommender.monitoringProductSuggestionComputeRecommendations.update",
      "recommender.networkAnalyzerCloudSqlInsights.get",
      "recommender.networkAnalyzerCloudSqlInsights.list",
      "recommender.networkAnalyzerCloudSqlInsights.update",
      "recommender.networkAnalyzerDynamicRouteInsights.get",
      "recommender.networkAnalyzerDynamicRouteInsights.list",
      "recommender.networkAnalyzerDynamicRouteInsights.update",
      "recommender.networkAnalyzerGkeConnectivityInsights.get",
      "recommender.networkAnalyzerGkeConnectivityInsights.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.update",
      "recommender.networkAnalyzerGkeIpAddressInsights.get",
      "recommender.networkAnalyzerGkeIpAddressInsights.list",
      "recommender.networkAnalyzerGkeIpAddressInsights.update",
      "recommender.networkAnalyzerIpAddressInsights.get",
      "recommender.networkAnalyzerIpAddressInsights.list",
      "recommender.networkAnalyzerIpAddressInsights.update",
      "recommender.networkAnalyzerLoadBalancerInsights.get",
      "recommender.networkAnalyzerLoadBalancerInsights.list",
      "recommender.networkAnalyzerLoadBalancerInsights.update",
      "recommender.networkAnalyzerVpcConnectivityInsights.get",
      "recommender.networkAnalyzerVpcConnectivityInsights.list",
      "recommender.networkAnalyzerVpcConnectivityInsights.update",
      "recommender.resourcemanagerProjectUtilizationInsightTypeConfigs.get",
      "recommender.resourcemanagerProjectUtilizationInsightTypeConfigs.update",
      "recommender.resourcemanagerProjectUtilizationInsights.get",
      "recommender.resourcemanagerProjectUtilizationInsights.list",
      "recommender.resourcemanagerProjectUtilizationInsights.update",
      "recommender.resourcemanagerProjectUtilizationRecommendations.get",
      "recommender.resourcemanagerProjectUtilizationRecommendations.list",
      "recommender.resourcemanagerProjectUtilizationRecommendations.update",
      "recommender.resourcemanagerProjectUtilizationRecommenderConfigs.get",
      "recommender.resourcemanagerProjectUtilizationRecommenderConfigs.update",
      "recommender.resourcemanagerServiceLimitInsights.get",
      "recommender.resourcemanagerServiceLimitInsights.list",
      "recommender.resourcemanagerServiceLimitInsights.update",
      "recommender.resourcemanagerServiceLimitRecommendations.get",
      "recommender.resourcemanagerServiceLimitRecommendations.list",
      "recommender.resourcemanagerServiceLimitRecommendations.update",
      "recommender.resources.export",
      "recommender.runServiceCostInsights.get",
      "recommender.runServiceCostInsights.list",
      "recommender.runServiceCostInsights.update",
      "recommender.runServiceCostRecommendations.get",
      "recommender.runServiceCostRecommendations.list",
      "recommender.runServiceCostRecommendations.update",
      "recommender.runServiceIdentityInsights.get",
      "recommender.runServiceIdentityInsights.list",
      "recommender.runServiceIdentityInsights.update",
      "recommender.runServiceIdentityRecommendations.get",
      "recommender.runServiceIdentityRecommendations.list",
      "recommender.runServiceIdentityRecommendations.update",
      "recommender.runServiceSecurityInsights.get",
      "recommender.runServiceSecurityInsights.list",
      "recommender.runServiceSecurityInsights.update",
      "recommender.runServiceSecurityRecommendations.get",
      "recommender.runServiceSecurityRecommendations.list",
      "recommender.runServiceSecurityRecommendations.update",
      "recommender.spendBasedCommitmentInsights.get",
      "recommender.spendBasedCommitmentInsights.list",
      "recommender.spendBasedCommitmentInsights.update",
      "recommender.spendBasedCommitmentRecommendations.get",
      "recommender.spendBasedCommitmentRecommendations.list",
      "recommender.spendBasedCommitmentRecommendations.update",
      "recommender.spendBasedCommitmentRecommenderConfig.get",
      "recommender.spendBasedCommitmentRecommenderConfig.update",
      "recommender.usageCommitmentRecommendations.get",
      "recommender.usageCommitmentRecommendations.list",
      "recommender.usageCommitmentRecommendations.update",
      "redis.clusters.connect",
      "redis.clusters.create",
      "redis.clusters.delete",
      "redis.clusters.get",
      "redis.clusters.list",
      "redis.clusters.update",
      "redis.instances.create",
      "redis.instances.delete",
      "redis.instances.export",
      "redis.instances.failover",
      "redis.instances.get",
      "redis.instances.getAuthString",
      "redis.instances.import",
      "redis.instances.list",
      "redis.instances.rescheduleMaintenance",
      "redis.instances.update",
      "redis.instances.updateAuth",
      "redis.instances.upgrade",
      "redis.locations.get",
      "redis.locations.list",
      "redis.operations.cancel",
      "redis.operations.delete",
      "redis.operations.get",
      "redis.operations.list",
      "remotebuildexecution.actions.create",
      "remotebuildexecution.actions.delete",
      "remotebuildexecution.actions.get",
      "remotebuildexecution.actions.update",
      "remotebuildexecution.blobs.create",
      "remotebuildexecution.blobs.get",
      "remotebuildexecution.botsessions.create",
      "remotebuildexecution.botsessions.update",
      "remotebuildexecution.instances.create",
      "remotebuildexecution.instances.delete",
      "remotebuildexecution.instances.get",
      "remotebuildexecution.instances.list",
      "remotebuildexecution.instances.update",
      "remotebuildexecution.logstreams.create",
      "remotebuildexecution.logstreams.get",
      "remotebuildexecution.logstreams.update",
      "remotebuildexecution.workerpools.create",
      "remotebuildexecution.workerpools.delete",
      "remotebuildexecution.workerpools.get",
      "remotebuildexecution.workerpools.list",
      "remotebuildexecution.workerpools.update",
      "resourcemanager.hierarchyNodes.createTagBinding",
      "resourcemanager.hierarchyNodes.deleteTagBinding",
      "resourcemanager.hierarchyNodes.listEffectiveTags",
      "resourcemanager.hierarchyNodes.listTagBindings",
      "resourcemanager.projects.createBillingAssignment",
      "resourcemanager.projects.delete",
      "resourcemanager.projects.deleteBillingAssignment",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list",
      "resourcemanager.projects.move",
      "resourcemanager.projects.setIamPolicy",
      "resourcemanager.projects.undelete",
      "resourcemanager.projects.update",
      "resourcemanager.projects.updateLiens",
      "resourcemanager.tagHolds.create",
      "resourcemanager.tagHolds.delete",
      "resourcemanager.tagHolds.list",
      "resourcemanager.tagKeys.create",
      "resourcemanager.tagKeys.delete",
      "resourcemanager.tagKeys.get",
      "resourcemanager.tagKeys.getIamPolicy",
      "resourcemanager.tagKeys.list",
      "resourcemanager.tagKeys.setIamPolicy",
      "resourcemanager.tagKeys.update",
      "resourcemanager.tagValueBindings.create",
      "resourcemanager.tagValueBindings.delete",
      "resourcemanager.tagValues.create",
      "resourcemanager.tagValues.delete",
      "resourcemanager.tagValues.get",
      "resourcemanager.tagValues.getIamPolicy",
      "resourcemanager.tagValues.list",
      "resourcemanager.tagValues.setIamPolicy",
      "resourcemanager.tagValues.update",
      "resourcesettings.settings.get",
      "resourcesettings.settings.list",
      "retail.attributesConfigs.addCatalogAttribute",
      "retail.attributesConfigs.batchRemoveCatalogAttributes",
      "retail.attributesConfigs.exportCatalogAttributes",
      "retail.attributesConfigs.get",
      "retail.attributesConfigs.importCatalogAttributes",
      "retail.attributesConfigs.removeCatalogAttribute",
      "retail.attributesConfigs.replaceCatalogAttribute",
      "retail.attributesConfigs.update",
      "retail.catalogs.completeQuery",
      "retail.catalogs.import",
      "retail.catalogs.list",
      "retail.catalogs.update",
      "retail.controls.create",
      "retail.controls.delete",
      "retail.controls.export",
      "retail.controls.get",
      "retail.controls.import",
      "retail.controls.list",
      "retail.controls.update",
      "retail.models.create",
      "retail.models.delete",
      "retail.models.get",
      "retail.models.list",
      "retail.models.pause",
      "retail.models.resume",
      "retail.models.tune",
      "retail.models.update",
      "retail.operations.get",
      "retail.operations.list",
      "retail.placements.predict",
      "retail.placements.search",
      "retail.products.create",
      "retail.products.delete",
      "retail.products.export",
      "retail.products.get",
      "retail.products.import",
      "retail.products.list",
      "retail.products.purge",
      "retail.products.setSponsorship",
      "retail.products.update",
      "retail.retailProjects.get",
      "retail.servingConfigs.create",
      "retail.servingConfigs.delete",
      "retail.servingConfigs.get",
      "retail.servingConfigs.list",
      "retail.servingConfigs.predict",
      "retail.servingConfigs.search",
      "retail.servingConfigs.update",
      "retail.userEvents.create",
      "retail.userEvents.import",
      "retail.userEvents.purge",
      "retail.userEvents.rejoin",
      "riscconfigurationservice.riscconfigs.createOrUpdate",
      "riscconfigurationservice.riscconfigs.delete",
      "riscconfigurationservice.riscconfigs.get",
      "riskmanager.controlScoreBreakdowns.get",
      "riskmanager.controlScoreBreakdowns.list",
      "riskmanager.operations.delete",
      "riskmanager.operations.get",
      "riskmanager.operations.list",
      "riskmanager.policies.get",
      "riskmanager.policies.list",
      "riskmanager.reports.create",
      "riskmanager.reports.delete",
      "riskmanager.reports.get",
      "riskmanager.reports.list",
      "riskmanager.reports.review",
      "riskmanager.reports.share",
      "riskmanager.serviceAccount.create",
      "riskmanager.settings.get",
      "riskmanager.settings.update",
      "rma.annotations.create",
      "rma.annotations.get",
      "rma.collectors.create",
      "rma.collectors.delete",
      "rma.collectors.get",
      "rma.collectors.list",
      "rma.collectors.update",
      "rma.locations.get",
      "rma.locations.list",
      "rma.operations.cancel",
      "rma.operations.delete",
      "rma.operations.get",
      "rma.operations.list",
      "run.configurations.get",
      "run.configurations.list",
      "run.executions.delete",
      "run.executions.get",
      "run.executions.list",
      "run.jobs.create",
      "run.jobs.delete",
      "run.jobs.get",
      "run.jobs.getIamPolicy",
      "run.jobs.list",
      "run.jobs.run",
      "run.jobs.runWithOverrides",
      "run.jobs.setIamPolicy",
      "run.jobs.update",
      "run.locations.list",
      "run.operations.delete",
      "run.operations.get",
      "run.operations.list",
      "run.revisions.delete",
      "run.revisions.get",
      "run.revisions.list",
      "run.routes.get",
      "run.routes.invoke",
      "run.routes.list",
      "run.services.create",
      "run.services.createTagBinding",
      "run.services.delete",
      "run.services.deleteTagBinding",
      "run.services.get",
      "run.services.getIamPolicy",
      "run.services.list",
      "run.services.listEffectiveTags",
      "run.services.listTagBindings",
      "run.services.setIamPolicy",
      "run.services.update",
      "run.tasks.get",
      "run.tasks.list",
      "runapps.applications.create",
      "runapps.applications.delete",
      "runapps.applications.get",
      "runapps.applications.getStatus",
      "runapps.applications.list",
      "runapps.applications.update",
      "runapps.deployments.create",
      "runapps.deployments.get",
      "runapps.deployments.list",
      "runapps.locations.get",
      "runapps.locations.list",
      "runapps.operations.cancel",
      "runapps.operations.delete",
      "runapps.operations.get",
      "runapps.operations.list",
      "runtimeconfig.configs.create",
      "runtimeconfig.configs.delete",
      "runtimeconfig.configs.get",
      "runtimeconfig.configs.getIamPolicy",
      "runtimeconfig.configs.list",
      "runtimeconfig.configs.setIamPolicy",
      "runtimeconfig.configs.update",
      "runtimeconfig.operations.get",
      "runtimeconfig.operations.list",
      "runtimeconfig.variables.create",
      "runtimeconfig.variables.delete",
      "runtimeconfig.variables.get",
      "runtimeconfig.variables.getIamPolicy",
      "runtimeconfig.variables.list",
      "runtimeconfig.variables.setIamPolicy",
      "runtimeconfig.variables.update",
      "runtimeconfig.variables.watch",
      "runtimeconfig.waiters.create",
      "runtimeconfig.waiters.delete",
      "runtimeconfig.waiters.get",
      "runtimeconfig.waiters.getIamPolicy",
      "runtimeconfig.waiters.list",
      "runtimeconfig.waiters.setIamPolicy",
      "runtimeconfig.waiters.update",
      "secretmanager.locations.get",
      "secretmanager.locations.list",
      "secretmanager.secrets.create",
      "secretmanager.secrets.delete",
      "secretmanager.secrets.get",
      "secretmanager.secrets.getIamPolicy",
      "secretmanager.secrets.list",
      "secretmanager.secrets.setIamPolicy",
      "secretmanager.secrets.update",
      "secretmanager.versions.access",
      "secretmanager.versions.add",
      "secretmanager.versions.destroy",
      "secretmanager.versions.disable",
      "secretmanager.versions.enable",
      "secretmanager.versions.get",
      "secretmanager.versions.list",
      "securedlandingzone.operations.get",
      "securedlandingzone.overwatches.activate",
      "securedlandingzone.overwatches.create",
      "securedlandingzone.overwatches.delete",
      "securedlandingzone.overwatches.get",
      "securedlandingzone.overwatches.list",
      "securedlandingzone.overwatches.suspend",
      "securedlandingzone.overwatches.update",
      "securitycenter.assets.group",
      "securitycenter.assets.list",
      "securitycenter.assets.listAssetPropertyNames",
      "securitycenter.assets.runDiscovery",
      "securitycenter.assetsecuritymarks.update",
      "securitycenter.attackpaths.list",
      "securitycenter.bigQueryExports.create",
      "securitycenter.bigQueryExports.delete",
      "securitycenter.bigQueryExports.get",
      "securitycenter.bigQueryExports.list",
      "securitycenter.bigQueryExports.update",
      "securitycenter.containerthreatdetectionsettings.calculate",
      "securitycenter.containerthreatdetectionsettings.get",
      "securitycenter.containerthreatdetectionsettings.update",
      "securitycenter.effectivesecurityhealthanalyticscustommodules.get",
      "securitycenter.effectivesecurityhealthanalyticscustommodules.list",
      "securitycenter.eventthreatdetectionsettings.calculate",
      "securitycenter.eventthreatdetectionsettings.get",
      "securitycenter.eventthreatdetectionsettings.update",
      "securitycenter.findingexternalsystems.update",
      "securitycenter.findings.bulkMuteUpdate",
      "securitycenter.findings.group",
      "securitycenter.findings.list",
      "securitycenter.findings.listFindingPropertyNames",
      "securitycenter.findings.setMute",
      "securitycenter.findings.setState",
      "securitycenter.findings.setWorkflowState",
      "securitycenter.findings.update",
      "securitycenter.findingsecuritymarks.update",
      "securitycenter.integratedvulnerabilityscannersettings.calculate",
      "securitycenter.integratedvulnerabilityscannersettings.get",
      "securitycenter.integratedvulnerabilityscannersettings.update",
      "securitycenter.muteconfigs.create",
      "securitycenter.muteconfigs.delete",
      "securitycenter.muteconfigs.get",
      "securitycenter.muteconfigs.list",
      "securitycenter.muteconfigs.update",
      "securitycenter.notificationconfig.create",
      "securitycenter.notificationconfig.delete",
      "securitycenter.notificationconfig.get",
      "securitycenter.notificationconfig.list",
      "securitycenter.notificationconfig.update",
      "securitycenter.organizationsettings.get",
      "securitycenter.organizationsettings.update",
      "securitycenter.rapidvulnerabilitydetectionsettings.calculate",
      "securitycenter.rapidvulnerabilitydetectionsettings.get",
      "securitycenter.rapidvulnerabilitydetectionsettings.update",
      "securitycenter.resourcevalueconfigs.create",
      "securitycenter.resourcevalueconfigs.delete",
      "securitycenter.resourcevalueconfigs.get",
      "securitycenter.resourcevalueconfigs.list",
      "securitycenter.resourcevalueconfigs.update",
      "securitycenter.securitycentersettings.get",
      "securitycenter.securitycentersettings.update",
      "securitycenter.securityhealthanalyticscustommodules.create",
      "securitycenter.securityhealthanalyticscustommodules.delete",
      "securitycenter.securityhealthanalyticscustommodules.get",
      "securitycenter.securityhealthanalyticscustommodules.list",
      "securitycenter.securityhealthanalyticscustommodules.simulate",
      "securitycenter.securityhealthanalyticscustommodules.test",
      "securitycenter.securityhealthanalyticscustommodules.update",
      "securitycenter.securityhealthanalyticssettings.calculate",
      "securitycenter.securityhealthanalyticssettings.get",
      "securitycenter.securityhealthanalyticssettings.update",
      "securitycenter.simulations.get",
      "securitycenter.sources.get",
      "securitycenter.sources.getIamPolicy",
      "securitycenter.sources.list",
      "securitycenter.sources.setIamPolicy",
      "securitycenter.sources.update",
      "securitycenter.subscription.get",
      "securitycenter.userinterfacemetadata.get",
      "securitycenter.valuedresources.list",
      "securitycenter.virtualmachinethreatdetectionsettings.calculate",
      "securitycenter.virtualmachinethreatdetectionsettings.get",
      "securitycenter.virtualmachinethreatdetectionsettings.update",
      "securitycenter.websecurityscannersettings.calculate",
      "securitycenter.websecurityscannersettings.get",
      "securitycenter.websecurityscannersettings.update",
      "servicebroker.bindingoperations.get",
      "servicebroker.bindingoperations.list",
      "servicebroker.bindings.create",
      "servicebroker.bindings.delete",
      "servicebroker.bindings.get",
      "servicebroker.bindings.getIamPolicy",
      "servicebroker.bindings.list",
      "servicebroker.bindings.setIamPolicy",
      "servicebroker.catalogs.create",
      "servicebroker.catalogs.delete",
      "servicebroker.catalogs.get",
      "servicebroker.catalogs.getIamPolicy",
      "servicebroker.catalogs.list",
      "servicebroker.catalogs.setIamPolicy",
      "servicebroker.catalogs.validate",
      "servicebroker.instanceoperations.get",
      "servicebroker.instanceoperations.list",
      "servicebroker.instances.create",
      "servicebroker.instances.delete",
      "servicebroker.instances.get",
      "servicebroker.instances.getIamPolicy",
      "servicebroker.instances.list",
      "servicebroker.instances.setIamPolicy",
      "servicebroker.instances.update",
      "serviceconsumermanagement.consumers.get",
      "serviceconsumermanagement.quota.get",
      "serviceconsumermanagement.quota.update",
      "serviceconsumermanagement.tenancyu.addResource",
      "serviceconsumermanagement.tenancyu.create",
      "serviceconsumermanagement.tenancyu.delete",
      "serviceconsumermanagement.tenancyu.list",
      "serviceconsumermanagement.tenancyu.removeResource",
      "servicedirectory.endpoints.create",
      "servicedirectory.endpoints.delete",
      "servicedirectory.endpoints.get",
      "servicedirectory.endpoints.getIamPolicy",
      "servicedirectory.endpoints.list",
      "servicedirectory.endpoints.setIamPolicy",
      "servicedirectory.endpoints.update",
      "servicedirectory.locations.get",
      "servicedirectory.locations.list",
      "servicedirectory.namespaces.associatePrivateZone",
      "servicedirectory.namespaces.create",
      "servicedirectory.namespaces.delete",
      "servicedirectory.namespaces.get",
      "servicedirectory.namespaces.getIamPolicy",
      "servicedirectory.namespaces.list",
      "servicedirectory.namespaces.setIamPolicy",
      "servicedirectory.namespaces.update",
      "servicedirectory.networks.attach",
      "servicedirectory.services.bind",
      "servicedirectory.services.create",
      "servicedirectory.services.delete",
      "servicedirectory.services.get",
      "servicedirectory.services.getIamPolicy",
      "servicedirectory.services.list",
      "servicedirectory.services.resolve",
      "servicedirectory.services.setIamPolicy",
      "servicedirectory.services.update",
      "servicehealth.events.get",
      "servicehealth.events.list",
      "servicehealth.locations.get",
      "servicehealth.locations.list",
      "servicehealth.organizationEvents.get",
      "servicehealth.organizationEvents.list",
      "servicehealth.organizationImpacts.get",
      "servicehealth.organizationImpacts.list",
      "servicemanagement.services.bind",
      "servicemanagement.services.check",
      "servicemanagement.services.create",
      "servicemanagement.services.delete",
      "servicemanagement.services.get",
      "servicemanagement.services.getIamPolicy",
      "servicemanagement.services.list",
      "servicemanagement.services.quota",
      "servicemanagement.services.report",
      "servicemanagement.services.setIamPolicy",
      "servicemanagement.services.update",
      "servicenetworking.operations.cancel",
      "servicenetworking.operations.delete",
      "servicenetworking.operations.get",
      "servicenetworking.operations.list",
      "servicenetworking.services.addDnsRecordSet",
      "servicenetworking.services.addDnsZone",
      "servicenetworking.services.addPeering",
      "servicenetworking.services.addSubnetwork",
      "servicenetworking.services.createPeeredDnsDomain",
      "servicenetworking.services.deleteConnection",
      "servicenetworking.services.deletePeeredDnsDomain",
      "servicenetworking.services.disableVpcServiceControls",
      "servicenetworking.services.enableVpcServiceControls",
      "servicenetworking.services.get",
      "servicenetworking.services.getConsumerConfig",
      "servicenetworking.services.listPeeredDnsDomains",
      "servicenetworking.services.removeDnsRecordSet",
      "servicenetworking.services.removeDnsZone",
      "servicenetworking.services.updateConsumerConfig",
      "servicenetworking.services.updateDnsRecordSet",
      "servicenetworking.services.use",
      "servicesecurityinsights.clusterSecurityInfo.get",
      "servicesecurityinsights.clusterSecurityInfo.list",
      "servicesecurityinsights.policies.get",
      "servicesecurityinsights.projectStates.get",
      "servicesecurityinsights.securityInfo.list",
      "servicesecurityinsights.securityViews.get",
      "servicesecurityinsights.workloadPolicies.list",
      "servicesecurityinsights.workloadSecurityInfo.get",
      "serviceusage.apiKeys.regenerate",
      "serviceusage.apiKeys.revert",
      "serviceusage.operations.cancel",
      "serviceusage.operations.delete",
      "serviceusage.operations.get",
      "serviceusage.operations.list",
      "serviceusage.quotas.get",
      "serviceusage.quotas.update",
      "serviceusage.services.disable",
      "serviceusage.services.enable",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "serviceusage.services.use",
      "source.repos.create",
      "source.repos.delete",
      "source.repos.get",
      "source.repos.getIamPolicy",
      "source.repos.getProjectConfig",
      "source.repos.list",
      "source.repos.setIamPolicy",
      "source.repos.update",
      "source.repos.updateProjectConfig",
      "source.repos.updateRepoConfig",
      "spanner.backupOperations.cancel",
      "spanner.backupOperations.get",
      "spanner.backupOperations.list",
      "spanner.backups.copy",
      "spanner.backups.create",
      "spanner.backups.delete",
      "spanner.backups.get",
      "spanner.backups.getIamPolicy",
      "spanner.backups.list",
      "spanner.backups.restoreDatabase",
      "spanner.backups.setIamPolicy",
      "spanner.backups.update",
      "spanner.databaseOperations.cancel",
      "spanner.databaseOperations.delete",
      "spanner.databaseOperations.get",
      "spanner.databaseOperations.list",
      "spanner.databaseRoles.list",
      "spanner.databaseRoles.use",
      "spanner.databases.beginOrRollbackReadWriteTransaction",
      "spanner.databases.beginPartitionedDmlTransaction",
      "spanner.databases.beginReadOnlyTransaction",
      "spanner.databases.create",
      "spanner.databases.createBackup",
      "spanner.databases.drop",
      "spanner.databases.get",
      "spanner.databases.getDdl",
      "spanner.databases.getIamPolicy",
      "spanner.databases.list",
      "spanner.databases.partitionQuery",
      "spanner.databases.partitionRead",
      "spanner.databases.read",
      "spanner.databases.select",
      "spanner.databases.setIamPolicy",
      "spanner.databases.update",
      "spanner.databases.updateDdl",
      "spanner.databases.updateTag",
      "spanner.databases.useDataBoost",
      "spanner.databases.useRoleBasedAccess",
      "spanner.databases.write",
      "spanner.instanceConfigOperations.cancel",
      "spanner.instanceConfigOperations.delete",
      "spanner.instanceConfigOperations.get",
      "spanner.instanceConfigOperations.list",
      "spanner.instanceConfigs.create",
      "spanner.instanceConfigs.delete",
      "spanner.instanceConfigs.get",
      "spanner.instanceConfigs.list",
      "spanner.instanceConfigs.update",
      "spanner.instanceOperations.cancel",
      "spanner.instanceOperations.delete",
      "spanner.instanceOperations.get",
      "spanner.instanceOperations.list",
      "spanner.instances.create",
      "spanner.instances.createTagBinding",
      "spanner.instances.delete",
      "spanner.instances.deleteTagBinding",
      "spanner.instances.get",
      "spanner.instances.getIamPolicy",
      "spanner.instances.list",
      "spanner.instances.listEffectiveTags",
      "spanner.instances.listTagBindings",
      "spanner.instances.setIamPolicy",
      "spanner.instances.update",
      "spanner.instances.updateTag",
      "spanner.sessions.create",
      "spanner.sessions.delete",
      "spanner.sessions.get",
      "spanner.sessions.list",
      "speakerid.phrases.create",
      "speakerid.phrases.delete",
      "speakerid.phrases.get",
      "speakerid.phrases.list",
      "speakerid.settings.get",
      "speakerid.settings.update",
      "speakerid.speakers.create",
      "speakerid.speakers.delete",
      "speakerid.speakers.get",
      "speakerid.speakers.list",
      "speakerid.speakers.verify",
      "speech.adaptations.execute",
      "speech.config.get",
      "speech.config.update",
      "speech.customClasses.create",
      "speech.customClasses.delete",
      "speech.customClasses.get",
      "speech.customClasses.list",
      "speech.customClasses.undelete",
      "speech.customClasses.update",
      "speech.locations.get",
      "speech.locations.list",
      "speech.operations.cancel",
      "speech.operations.delete",
      "speech.operations.get",
      "speech.operations.list",
      "speech.operations.wait",
      "speech.phraseSets.create",
      "speech.phraseSets.delete",
      "speech.phraseSets.get",
      "speech.phraseSets.list",
      "speech.phraseSets.undelete",
      "speech.phraseSets.update",
      "speech.recognizers.create",
      "speech.recognizers.delete",
      "speech.recognizers.get",
      "speech.recognizers.list",
      "speech.recognizers.recognize",
      "speech.recognizers.undelete",
      "speech.recognizers.update",
      "stackdriver.projects.edit",
      "stackdriver.projects.get",
      "stackdriver.resourceMetadata.list",
      "stackdriver.resourceMetadata.write",
      "storage.buckets.create",
      "storage.buckets.createTagBinding",
      "storage.buckets.delete",
      "storage.buckets.deleteTagBinding",
      "storage.buckets.getObjectInsights",
      "storage.buckets.list",
      "storage.buckets.listEffectiveTags",
      "storage.buckets.listTagBindings",
      "storage.hmacKeys.create",
      "storage.hmacKeys.delete",
      "storage.hmacKeys.get",
      "storage.hmacKeys.list",
      "storage.hmacKeys.update",
      "storageinsights.locations.get",
      "storageinsights.locations.list",
      "storageinsights.operations.cancel",
      "storageinsights.operations.delete",
      "storageinsights.operations.get",
      "storageinsights.operations.list",
      "storageinsights.reportConfigs.create",
      "storageinsights.reportConfigs.delete",
      "storageinsights.reportConfigs.get",
      "storageinsights.reportConfigs.list",
      "storageinsights.reportConfigs.update",
      "storageinsights.reportDetails.get",
      "storageinsights.reportDetails.list",
      "storagetransfer.agentpools.create",
      "storagetransfer.agentpools.delete",
      "storagetransfer.agentpools.get",
      "storagetransfer.agentpools.list",
      "storagetransfer.agentpools.report",
      "storagetransfer.agentpools.update",
      "storagetransfer.jobs.create",
      "storagetransfer.jobs.delete",
      "storagetransfer.jobs.get",
      "storagetransfer.jobs.list",
      "storagetransfer.jobs.run",
      "storagetransfer.jobs.update",
      "storagetransfer.operations.assign",
      "storagetransfer.operations.cancel",
      "storagetransfer.operations.get",
      "storagetransfer.operations.list",
      "storagetransfer.operations.pause",
      "storagetransfer.operations.report",
      "storagetransfer.operations.resume",
      "storagetransfer.projects.getServiceAccount",
      "stream.locations.get",
      "stream.locations.list",
      "stream.operations.cancel",
      "stream.operations.delete",
      "stream.operations.get",
      "stream.operations.list",
      "stream.streamContents.build",
      "stream.streamContents.create",
      "stream.streamContents.delete",
      "stream.streamContents.get",
      "stream.streamContents.list",
      "stream.streamContents.update",
      "stream.streamInstances.create",
      "stream.streamInstances.delete",
      "stream.streamInstances.get",
      "stream.streamInstances.list",
      "stream.streamInstances.rollout",
      "stream.streamInstances.update",
      "subscribewithgoogledeveloper.tools.get",
      "timeseriesinsights.datasets.create",
      "timeseriesinsights.datasets.delete",
      "timeseriesinsights.datasets.evaluate",
      "timeseriesinsights.datasets.list",
      "timeseriesinsights.datasets.query",
      "timeseriesinsights.datasets.update",
      "timeseriesinsights.locations.get",
      "timeseriesinsights.locations.list",
      "tpu.acceleratortypes.get",
      "tpu.acceleratortypes.list",
      "tpu.locations.get",
      "tpu.locations.list",
      "tpu.nodes.create",
      "tpu.nodes.delete",
      "tpu.nodes.get",
      "tpu.nodes.list",
      "tpu.nodes.reimage",
      "tpu.nodes.reset",
      "tpu.nodes.simulateMaintenanceEvent",
      "tpu.nodes.start",
      "tpu.nodes.stop",
      "tpu.nodes.update",
      "tpu.operations.get",
      "tpu.operations.list",
      "tpu.runtimeversions.get",
      "tpu.runtimeversions.list",
      "tpu.tensorflowversions.get",
      "tpu.tensorflowversions.list",
      "trafficdirector.networks.getConfigs",
      "trafficdirector.networks.reportMetrics",
      "transcoder.jobTemplates.create",
      "transcoder.jobTemplates.delete",
      "transcoder.jobTemplates.get",
      "transcoder.jobTemplates.list",
      "transcoder.jobs.create",
      "transcoder.jobs.delete",
      "transcoder.jobs.get",
      "transcoder.jobs.list",
      "transferappliance.appliances.create",
      "transferappliance.appliances.delete",
      "transferappliance.appliances.get",
      "transferappliance.appliances.list",
      "transferappliance.appliances.update",
      "transferappliance.credentials.get",
      "transferappliance.locations.get",
      "transferappliance.locations.list",
      "transferappliance.operations.cancel",
      "transferappliance.operations.delete",
      "transferappliance.operations.get",
      "transferappliance.operations.list",
      "transferappliance.orders.create",
      "transferappliance.orders.delete",
      "transferappliance.orders.get",
      "transferappliance.orders.list",
      "transferappliance.orders.update",
      "transferappliance.savedAddresses.create",
      "transferappliance.savedAddresses.delete",
      "transferappliance.savedAddresses.get",
      "transferappliance.savedAddresses.list",
      "transferappliance.savedAddresses.update",
      "translationhub.portals.create",
      "translationhub.portals.delete",
      "translationhub.portals.get",
      "translationhub.portals.list",
      "translationhub.portals.update",
      "videostitcher.cdnKeys.create",
      "videostitcher.cdnKeys.delete",
      "videostitcher.cdnKeys.get",
      "videostitcher.cdnKeys.list",
      "videostitcher.cdnKeys.update",
      "videostitcher.liveAdTagDetails.get",
      "videostitcher.liveAdTagDetails.list",
      "videostitcher.liveSessions.create",
      "videostitcher.liveSessions.get",
      "videostitcher.slates.create",
      "videostitcher.slates.delete",
      "videostitcher.slates.get",
      "videostitcher.slates.list",
      "videostitcher.slates.update",
      "videostitcher.vodAdTagDetails.get",
      "videostitcher.vodAdTagDetails.list",
      "videostitcher.vodSessions.create",
      "videostitcher.vodSessions.get",
      "videostitcher.vodStitchDetails.get",
      "videostitcher.vodStitchDetails.list",
      "visionai.analyses.create",
      "visionai.analyses.delete",
      "visionai.analyses.get",
      "visionai.analyses.getIamPolicy",
      "visionai.analyses.list",
      "visionai.analyses.setIamPolicy",
      "visionai.analyses.update",
      "visionai.annotations.create",
      "visionai.annotations.delete",
      "visionai.annotations.get",
      "visionai.annotations.list",
      "visionai.annotations.update",
      "visionai.applications.create",
      "visionai.applications.delete",
      "visionai.applications.deploy",
      "visionai.applications.get",
      "visionai.applications.list",
      "visionai.applications.undeploy",
      "visionai.applications.update",
      "visionai.assets.clip",
      "visionai.assets.create",
      "visionai.assets.delete",
      "visionai.assets.generateHlsUri",
      "visionai.assets.get",
      "visionai.assets.ingest",
      "visionai.assets.list",
      "visionai.assets.search",
      "visionai.assets.update",
      "visionai.clusters.create",
      "visionai.clusters.delete",
      "visionai.clusters.get",
      "visionai.clusters.getIamPolicy",
      "visionai.clusters.list",
      "visionai.clusters.setIamPolicy",
      "visionai.clusters.update",
      "visionai.clusters.watch",
      "visionai.corpora.create",
      "visionai.corpora.delete",
      "visionai.corpora.get",
      "visionai.corpora.list",
      "visionai.corpora.suggest",
      "visionai.corpora.update",
      "visionai.dataSchemas.create",
      "visionai.dataSchemas.delete",
      "visionai.dataSchemas.get",
      "visionai.dataSchemas.list",
      "visionai.dataSchemas.update",
      "visionai.dataSchemas.validate",
      "visionai.drafts.create",
      "visionai.drafts.delete",
      "visionai.drafts.get",
      "visionai.drafts.list",
      "visionai.drafts.update",
      "visionai.events.create",
      "visionai.events.delete",
      "visionai.events.get",
      "visionai.events.getIamPolicy",
      "visionai.events.list",
      "visionai.events.setIamPolicy",
      "visionai.events.update",
      "visionai.instances.get",
      "visionai.instances.list",
      "visionai.locations.get",
      "visionai.locations.list",
      "visionai.operations.cancel",
      "visionai.operations.delete",
      "visionai.operations.get",
      "visionai.operations.list",
      "visionai.operations.wait",
      "visionai.operators.create",
      "visionai.operators.delete",
      "visionai.operators.get",
      "visionai.operators.getIamPolicy",
      "visionai.operators.list",
      "visionai.operators.setIamPolicy",
      "visionai.operators.update",
      "visionai.processors.create",
      "visionai.processors.delete",
      "visionai.processors.get",
      "visionai.processors.list",
      "visionai.processors.listPrebuilt",
      "visionai.processors.update",
      "visionai.searchConfigs.create",
      "visionai.searchConfigs.delete",
      "visionai.searchConfigs.get",
      "visionai.searchConfigs.list",
      "visionai.searchConfigs.update",
      "visionai.series.acquireLease",
      "visionai.series.create",
      "visionai.series.delete",
      "visionai.series.get",
      "visionai.series.getIamPolicy",
      "visionai.series.list",
      "visionai.series.receive",
      "visionai.series.releaseLease",
      "visionai.series.renewLease",
      "visionai.series.send",
      "visionai.series.setIamPolicy",
      "visionai.series.update",
      "visionai.streams.create",
      "visionai.streams.delete",
      "visionai.streams.get",
      "visionai.streams.getIamPolicy",
      "visionai.streams.list",
      "visionai.streams.receive",
      "visionai.streams.send",
      "visionai.streams.setIamPolicy",
      "visionai.streams.update",
      "visionai.uistreams.create",
      "visionai.uistreams.delete",
      "visionai.uistreams.generateStreamThumbnails",
      "visionai.uistreams.get",
      "visionai.uistreams.list",
      "visualinspection.annotationSets.create",
      "visualinspection.annotationSets.delete",
      "visualinspection.annotationSets.get",
      "visualinspection.annotationSets.list",
      "visualinspection.annotationSets.update",
      "visualinspection.annotationSpecs.create",
      "visualinspection.annotationSpecs.delete",
      "visualinspection.annotationSpecs.get",
      "visualinspection.annotationSpecs.list",
      "visualinspection.annotations.create",
      "visualinspection.annotations.delete",
      "visualinspection.annotations.get",
      "visualinspection.annotations.list",
      "visualinspection.annotations.update",
      "visualinspection.datasets.create",
      "visualinspection.datasets.delete",
      "visualinspection.datasets.export",
      "visualinspection.datasets.get",
      "visualinspection.datasets.import",
      "visualinspection.datasets.list",
      "visualinspection.datasets.update",
      "visualinspection.images.delete",
      "visualinspection.images.get",
      "visualinspection.images.list",
      "visualinspection.images.update",
      "visualinspection.locations.get",
      "visualinspection.locations.list",
      "visualinspection.locations.reportUsageMetrics",
      "visualinspection.modelEvaluations.get",
      "visualinspection.modelEvaluations.list",
      "visualinspection.models.create",
      "visualinspection.models.delete",
      "visualinspection.models.get",
      "visualinspection.models.list",
      "visualinspection.models.update",
      "visualinspection.models.writePrediction",
      "visualinspection.modules.create",
      "visualinspection.modules.delete",
      "visualinspection.modules.get",
      "visualinspection.modules.list",
      "visualinspection.modules.update",
      "visualinspection.operations.get",
      "visualinspection.operations.list",
      "visualinspection.solutionArtifacts.create",
      "visualinspection.solutionArtifacts.delete",
      "visualinspection.solutionArtifacts.get",
      "visualinspection.solutionArtifacts.list",
      "visualinspection.solutionArtifacts.predict",
      "visualinspection.solutionArtifacts.update",
      "visualinspection.solutions.create",
      "visualinspection.solutions.delete",
      "visualinspection.solutions.get",
      "visualinspection.solutions.list",
      "vmmigration.cloneJobs.create",
      "vmmigration.cloneJobs.get",
      "vmmigration.cloneJobs.list",
      "vmmigration.cloneJobs.update",
      "vmmigration.cutoverJobs.create",
      "vmmigration.cutoverJobs.get",
      "vmmigration.cutoverJobs.list",
      "vmmigration.cutoverJobs.update",
      "vmmigration.datacenterConnectors.create",
      "vmmigration.datacenterConnectors.delete",
      "vmmigration.datacenterConnectors.get",
      "vmmigration.datacenterConnectors.list",
      "vmmigration.datacenterConnectors.update",
      "vmmigration.deployments.create",
      "vmmigration.deployments.get",
      "vmmigration.deployments.list",
      "vmmigration.groups.create",
      "vmmigration.groups.delete",
      "vmmigration.groups.get",
      "vmmigration.groups.list",
      "vmmigration.groups.update",
      "vmmigration.locations.get",
      "vmmigration.locations.list",
      "vmmigration.migratingVms.create",
      "vmmigration.migratingVms.delete",
      "vmmigration.migratingVms.get",
      "vmmigration.migratingVms.list",
      "vmmigration.migratingVms.update",
      "vmmigration.operations.cancel",
      "vmmigration.operations.delete",
      "vmmigration.operations.get",
      "vmmigration.operations.list",
      "vmmigration.replicationCycles.get",
      "vmmigration.replicationCycles.list",
      "vmmigration.sources.create",
      "vmmigration.sources.delete",
      "vmmigration.sources.get",
      "vmmigration.sources.list",
      "vmmigration.sources.update",
      "vmmigration.targets.create",
      "vmmigration.targets.delete",
      "vmmigration.targets.get",
      "vmmigration.targets.list",
      "vmmigration.targets.update",
      "vmmigration.utilizationReports.create",
      "vmmigration.utilizationReports.delete",
      "vmmigration.utilizationReports.get",
      "vmmigration.utilizationReports.list",
      "vmwareengine.clusters.create",
      "vmwareengine.clusters.delete",
      "vmwareengine.clusters.get",
      "vmwareengine.clusters.getIamPolicy",
      "vmwareengine.clusters.list",
      "vmwareengine.clusters.setIamPolicy",
      "vmwareengine.clusters.update",
      "vmwareengine.hcxActivationKeys.create",
      "vmwareengine.hcxActivationKeys.get",
      "vmwareengine.hcxActivationKeys.getIamPolicy",
      "vmwareengine.hcxActivationKeys.list",
      "vmwareengine.hcxActivationKeys.setIamPolicy",
      "vmwareengine.locations.get",
      "vmwareengine.locations.list",
      "vmwareengine.networkPolicies.create",
      "vmwareengine.networkPolicies.delete",
      "vmwareengine.networkPolicies.get",
      "vmwareengine.networkPolicies.list",
      "vmwareengine.networkPolicies.update",
      "vmwareengine.nodeTypes.get",
      "vmwareengine.nodeTypes.list",
      "vmwareengine.operations.delete",
      "vmwareengine.operations.get",
      "vmwareengine.operations.list",
      "vmwareengine.privateClouds.create",
      "vmwareengine.privateClouds.delete",
      "vmwareengine.privateClouds.get",
      "vmwareengine.privateClouds.getIamPolicy",
      "vmwareengine.privateClouds.list",
      "vmwareengine.privateClouds.resetNsxCredentials",
      "vmwareengine.privateClouds.resetVcenterCredentials",
      "vmwareengine.privateClouds.setIamPolicy",
      "vmwareengine.privateClouds.showNsxCredentials",
      "vmwareengine.privateClouds.showVcenterCredentials",
      "vmwareengine.privateClouds.undelete",
      "vmwareengine.privateClouds.update",
      "vmwareengine.privateConnections.create",
      "vmwareengine.privateConnections.delete",
      "vmwareengine.privateConnections.get",
      "vmwareengine.privateConnections.list",
      "vmwareengine.privateConnections.listPeeringRoutes",
      "vmwareengine.privateConnections.update",
      "vmwareengine.services.use",
      "vmwareengine.services.view",
      "vmwareengine.subnets.get",
      "vmwareengine.subnets.list",
      "vmwareengine.subnets.update",
      "vmwareengine.vmwareEngineNetworks.create",
      "vmwareengine.vmwareEngineNetworks.delete",
      "vmwareengine.vmwareEngineNetworks.get",
      "vmwareengine.vmwareEngineNetworks.list",
      "vmwareengine.vmwareEngineNetworks.update",
      "vpcaccess.connectors.create",
      "vpcaccess.connectors.delete",
      "vpcaccess.connectors.get",
      "vpcaccess.connectors.list",
      "vpcaccess.connectors.update",
      "vpcaccess.connectors.use",
      "vpcaccess.locations.list",
      "vpcaccess.operations.get",
      "vpcaccess.operations.list",
      "workflows.callbacks.send",
      "workflows.executions.cancel",
      "workflows.executions.create",
      "workflows.executions.get",
      "workflows.executions.list",
      "workflows.locations.get",
      "workflows.locations.list",
      "workflows.operations.cancel",
      "workflows.operations.get",
      "workflows.operations.list",
      "workflows.workflows.create",
      "workflows.workflows.delete",
      "workflows.workflows.get",
      "workflows.workflows.list",
      "workflows.workflows.update",
      "workloadcertificate.locations.get",
      "workloadcertificate.locations.list",
      "workloadcertificate.operations.cancel",
      "workloadcertificate.operations.delete",
      "workloadcertificate.operations.get",
      "workloadcertificate.operations.list",
      "workloadcertificate.workloadCertificateFeature.get",
      "workloadcertificate.workloadCertificateFeature.update",
      "workloadcertificate.workloadRegistrations.create",
      "workloadcertificate.workloadRegistrations.delete",
      "workloadcertificate.workloadRegistrations.get",
      "workloadcertificate.workloadRegistrations.list",
      "workloadcertificate.workloadRegistrations.update",
      "workloadmanager.evaluations.create",
      "workloadmanager.evaluations.delete",
      "workloadmanager.evaluations.get",
      "workloadmanager.evaluations.list",
      "workloadmanager.evaluations.run",
      "workloadmanager.evaluations.update",
      "workloadmanager.executions.delete",
      "workloadmanager.executions.get",
      "workloadmanager.executions.list",
      "workloadmanager.locations.get",
      "workloadmanager.locations.list",
      "workloadmanager.operations.cancel",
      "workloadmanager.operations.delete",
      "workloadmanager.operations.get",
      "workloadmanager.operations.list",
      "workloadmanager.results.list",
      "workloadmanager.rules.list",
      "workstations.operations.get",
      "workstations.workstationClusters.create",
      "workstations.workstationClusters.delete",
      "workstations.workstationClusters.get",
      "workstations.workstationClusters.list",
      "workstations.workstationClusters.update",
      "workstations.workstationConfigs.create",
      "workstations.workstationConfigs.delete",
      "workstations.workstationConfigs.get",
      "workstations.workstationConfigs.getIamPolicy",
      "workstations.workstationConfigs.list",
      "workstations.workstationConfigs.setIamPolicy",
      "workstations.workstationConfigs.update",
      "workstations.workstations.create",
      "workstations.workstations.delete",
      "workstations.workstations.get",
      "workstations.workstations.getIamPolicy",
      "workstations.workstations.list",
      "workstations.workstations.setIamPolicy",
      "workstations.workstations.start",
      "workstations.workstations.stop",
      "workstations.workstations.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/paymentsresellersubscription.partnerAdmin",
    "title": "Payments Reseller Admin",
    "description": "Full access to all Payments Reseller resources, including subscriptions, products and promotions",
    "includedPermissions": [
      "paymentsresellersubscription.products.list",
      "paymentsresellersubscription.promotions.list",
      "paymentsresellersubscription.subscriptions.cancel",
      "paymentsresellersubscription.subscriptions.extend",
      "paymentsresellersubscription.subscriptions.get",
      "paymentsresellersubscription.subscriptions.provision",
      "paymentsresellersubscription.subscriptions.undoCancel",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/paymentsresellersubscription.partnerViewer",
    "title": "Payments Reseller Viewer",
    "description": "Read access to all Payments Reseller resources, including subscriptions, products and promotions",
    "includedPermissions": [
      "paymentsresellersubscription.products.list",
      "paymentsresellersubscription.promotions.list",
      "paymentsresellersubscription.subscriptions.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/paymentsresellersubscription.productViewer",
    "title": "Payments Reseller Products Viewer",
    "description": "Read access to Payments Reseller Product resource",
    "includedPermissions": [
      "paymentsresellersubscription.products.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/paymentsresellersubscription.promotionViewer",
    "title": "Payments Reseller Promotions Viewer",
    "description": "Read access to Payments Reseller Promotion resource",
    "includedPermissions": [
      "paymentsresellersubscription.promotions.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/paymentsresellersubscription.subscriptionEditor",
    "title": "Payments Reseller Subscriptions Editor",
    "description": "Write access to Payments Reseller Subscription resource",
    "includedPermissions": [
      "paymentsresellersubscription.subscriptions.cancel",
      "paymentsresellersubscription.subscriptions.extend",
      "paymentsresellersubscription.subscriptions.get",
      "paymentsresellersubscription.subscriptions.provision",
      "paymentsresellersubscription.subscriptions.undoCancel",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/paymentsresellersubscription.subscriptionViewer",
    "title": "Payments Reseller Subscriptions Viewer",
    "description": "Read access to Payments Reseller Subscription resource",
    "includedPermissions": [
      "paymentsresellersubscription.subscriptions.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/policyanalyzer.activityAnalysisViewer",
    "title": "Activity Analysis Viewer",
    "description": "Viewer user that can read all activity analysis.",
    "includedPermissions": [
      "policyanalyzer.serviceAccountKeyLastAuthenticationActivities.query",
      "policyanalyzer.serviceAccountLastAuthenticationActivities.query"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/policysimulator.admin",
    "title": "Simulator Admin",
    "description": "Admin user that can run and access replays.",
    "includedPermissions": [
      "policysimulator.replayResults.list",
      "policysimulator.replays.create",
      "policysimulator.replays.get",
      "policysimulator.replays.list",
      "policysimulator.replays.run"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/policysimulator.orgPolicyAdmin",
    "title": "OrgPolicy Simulator Admin",
    "description": "OrgPolicy Admin that can run and access simulations.",
    "includedPermissions": [
      "cloudasset.assets.exportResource",
      "cloudasset.assets.listResource",
      "cloudasset.assets.searchAllResources",
      "orgpolicy.customConstraints.get",
      "orgpolicy.customConstraints.list",
      "orgpolicy.policies.list",
      "orgpolicy.policy.get",
      "policysimulator.orgPolicyViolations.list",
      "policysimulator.orgPolicyViolationsPreviews.create",
      "policysimulator.orgPolicyViolationsPreviews.get",
      "policysimulator.orgPolicyViolationsPreviews.list",
      "resourcemanager.organizations.get"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/privateca.admin",
    "title": "CA Service Admin",
    "description": "Full access to all CA Service resources.",
    "includedPermissions": [
      "privateca.caPools.create",
      "privateca.caPools.delete",
      "privateca.caPools.get",
      "privateca.caPools.getIamPolicy",
      "privateca.caPools.list",
      "privateca.caPools.setIamPolicy",
      "privateca.caPools.update",
      "privateca.caPools.use",
      "privateca.certificateAuthorities.create",
      "privateca.certificateAuthorities.delete",
      "privateca.certificateAuthorities.get",
      "privateca.certificateAuthorities.getIamPolicy",
      "privateca.certificateAuthorities.list",
      "privateca.certificateAuthorities.setIamPolicy",
      "privateca.certificateAuthorities.update",
      "privateca.certificateRevocationLists.create",
      "privateca.certificateRevocationLists.get",
      "privateca.certificateRevocationLists.getIamPolicy",
      "privateca.certificateRevocationLists.list",
      "privateca.certificateRevocationLists.setIamPolicy",
      "privateca.certificateRevocationLists.update",
      "privateca.certificateTemplates.create",
      "privateca.certificateTemplates.delete",
      "privateca.certificateTemplates.get",
      "privateca.certificateTemplates.getIamPolicy",
      "privateca.certificateTemplates.list",
      "privateca.certificateTemplates.setIamPolicy",
      "privateca.certificateTemplates.update",
      "privateca.certificateTemplates.use",
      "privateca.certificates.create",
      "privateca.certificates.createForSelf",
      "privateca.certificates.get",
      "privateca.certificates.getIamPolicy",
      "privateca.certificates.list",
      "privateca.certificates.setIamPolicy",
      "privateca.certificates.update",
      "privateca.locations.get",
      "privateca.locations.list",
      "privateca.operations.cancel",
      "privateca.operations.delete",
      "privateca.operations.get",
      "privateca.operations.list",
      "privateca.reusableConfigs.create",
      "privateca.reusableConfigs.delete",
      "privateca.reusableConfigs.get",
      "privateca.reusableConfigs.getIamPolicy",
      "privateca.reusableConfigs.list",
      "privateca.reusableConfigs.setIamPolicy",
      "privateca.reusableConfigs.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storage.buckets.create"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/privateca.auditor",
    "title": "CA Service Auditor",
    "description": "Read-only access to all CA Service resources.",
    "includedPermissions": [
      "privateca.caPools.get",
      "privateca.caPools.getIamPolicy",
      "privateca.caPools.list",
      "privateca.certificateAuthorities.get",
      "privateca.certificateAuthorities.getIamPolicy",
      "privateca.certificateAuthorities.list",
      "privateca.certificateRevocationLists.get",
      "privateca.certificateRevocationLists.getIamPolicy",
      "privateca.certificateRevocationLists.list",
      "privateca.certificateTemplates.get",
      "privateca.certificateTemplates.getIamPolicy",
      "privateca.certificateTemplates.list",
      "privateca.certificates.get",
      "privateca.certificates.getIamPolicy",
      "privateca.certificates.list",
      "privateca.locations.get",
      "privateca.locations.list",
      "privateca.operations.get",
      "privateca.operations.list",
      "privateca.reusableConfigs.get",
      "privateca.reusableConfigs.getIamPolicy",
      "privateca.reusableConfigs.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/privateca.caManager",
    "title": "CA Service Operation Manager",
    "description": "Create and manage CAs, revoke certificates, create certificates templates, and read-only access for CA Service resources.",
    "includedPermissions": [
      "privateca.caPools.create",
      "privateca.caPools.delete",
      "privateca.caPools.get",
      "privateca.caPools.getIamPolicy",
      "privateca.caPools.list",
      "privateca.caPools.update",
      "privateca.certificateAuthorities.create",
      "privateca.certificateAuthorities.delete",
      "privateca.certificateAuthorities.get",
      "privateca.certificateAuthorities.getIamPolicy",
      "privateca.certificateAuthorities.list",
      "privateca.certificateAuthorities.update",
      "privateca.certificateRevocationLists.get",
      "privateca.certificateRevocationLists.getIamPolicy",
      "privateca.certificateRevocationLists.list",
      "privateca.certificateRevocationLists.update",
      "privateca.certificateTemplates.create",
      "privateca.certificateTemplates.delete",
      "privateca.certificateTemplates.get",
      "privateca.certificateTemplates.getIamPolicy",
      "privateca.certificateTemplates.list",
      "privateca.certificateTemplates.update",
      "privateca.certificates.get",
      "privateca.certificates.getIamPolicy",
      "privateca.certificates.list",
      "privateca.certificates.update",
      "privateca.locations.get",
      "privateca.locations.list",
      "privateca.operations.get",
      "privateca.operations.list",
      "privateca.reusableConfigs.create",
      "privateca.reusableConfigs.delete",
      "privateca.reusableConfigs.get",
      "privateca.reusableConfigs.getIamPolicy",
      "privateca.reusableConfigs.list",
      "privateca.reusableConfigs.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storage.buckets.create"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/privateca.certificateManager",
    "title": "CA Service Certificate Manager",
    "description": "Create certificates and read-only access for CA Service resources.",
    "includedPermissions": [
      "privateca.caPools.get",
      "privateca.caPools.getIamPolicy",
      "privateca.caPools.list",
      "privateca.certificateAuthorities.get",
      "privateca.certificateAuthorities.getIamPolicy",
      "privateca.certificateAuthorities.list",
      "privateca.certificateRevocationLists.get",
      "privateca.certificateRevocationLists.getIamPolicy",
      "privateca.certificateRevocationLists.list",
      "privateca.certificateTemplates.get",
      "privateca.certificateTemplates.getIamPolicy",
      "privateca.certificateTemplates.list",
      "privateca.certificates.create",
      "privateca.certificates.get",
      "privateca.certificates.getIamPolicy",
      "privateca.certificates.list",
      "privateca.locations.get",
      "privateca.locations.list",
      "privateca.operations.get",
      "privateca.operations.list",
      "privateca.reusableConfigs.get",
      "privateca.reusableConfigs.getIamPolicy",
      "privateca.reusableConfigs.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/privateca.certificateRequester",
    "title": "CA Service Certificate Requester",
    "description": "Request certificates from CA Service.",
    "includedPermissions": [
      "privateca.certificates.create"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/privateca.poolReader",
    "title": "CA Service Pool Reader",
    "description": "Read CA Pools in CA Service.",
    "includedPermissions": [
      "privateca.caPools.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/privateca.templateUser",
    "title": "CA Service Certificate Template User",
    "description": "Read, list and use certificate templates.",
    "includedPermissions": [
      "privateca.certificateTemplates.get",
      "privateca.certificateTemplates.list",
      "privateca.certificateTemplates.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/privateca.workloadCertificateRequester",
    "title": "CA Service Workload Certificate Requester",
    "description": "Request certificates from CA Service with caller's identity.",
    "includedPermissions": [
      "privateca.certificates.createForSelf"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/proximitybeacon.attachmentEditor",
    "title": "Beacon Attachment Editor",
    "description": "Can create and delete attachments; can list and get a project's beacons; can list a project's namespaces.",
    "includedPermissions": [
      "proximitybeacon.attachments.create",
      "proximitybeacon.attachments.delete",
      "proximitybeacon.attachments.get",
      "proximitybeacon.attachments.list",
      "proximitybeacon.beacons.get",
      "proximitybeacon.beacons.list",
      "proximitybeacon.namespaces.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/proximitybeacon.attachmentPublisher",
    "title": "Beacon Attachment Publisher",
    "description": "Grants necessary permissions to use beacons to create attachments in namespaces not owned by this project.",
    "includedPermissions": [
      "proximitybeacon.beacons.attach",
      "proximitybeacon.beacons.get",
      "proximitybeacon.beacons.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/proximitybeacon.attachmentViewer",
    "title": "Beacon Attachment Viewer",
    "description": "Can view all attachments under a namespace; no beacon or namespace permissions.",
    "includedPermissions": [
      "proximitybeacon.attachments.get",
      "proximitybeacon.attachments.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/proximitybeacon.beaconEditor",
    "title": "Beacon Editor",
    "description": "Necessary access to register, modify, and view beacons; no attachment or namespace permissions.",
    "includedPermissions": [
      "proximitybeacon.beacons.create",
      "proximitybeacon.beacons.get",
      "proximitybeacon.beacons.list",
      "proximitybeacon.beacons.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/publicca.externalAccountKeyCreator",
    "title": "External Account Key Creator",
    "description": "This role can create a new externalAccountKey resource.",
    "includedPermissions": [
      "publicca.externalAccountKeys.create",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/pubsub.admin",
    "title": "Pub/Sub Admin",
    "description": "Full access to topics, subscriptions, and snapshots.",
    "includedPermissions": [
      "pubsub.schemas.attach",
      "pubsub.schemas.commit",
      "pubsub.schemas.create",
      "pubsub.schemas.delete",
      "pubsub.schemas.get",
      "pubsub.schemas.getIamPolicy",
      "pubsub.schemas.list",
      "pubsub.schemas.listRevisions",
      "pubsub.schemas.rollback",
      "pubsub.schemas.setIamPolicy",
      "pubsub.schemas.validate",
      "pubsub.snapshots.create",
      "pubsub.snapshots.delete",
      "pubsub.snapshots.get",
      "pubsub.snapshots.getIamPolicy",
      "pubsub.snapshots.list",
      "pubsub.snapshots.seek",
      "pubsub.snapshots.setIamPolicy",
      "pubsub.snapshots.update",
      "pubsub.subscriptions.consume",
      "pubsub.subscriptions.create",
      "pubsub.subscriptions.delete",
      "pubsub.subscriptions.get",
      "pubsub.subscriptions.getIamPolicy",
      "pubsub.subscriptions.list",
      "pubsub.subscriptions.setIamPolicy",
      "pubsub.subscriptions.update",
      "pubsub.topics.attachSubscription",
      "pubsub.topics.create",
      "pubsub.topics.delete",
      "pubsub.topics.detachSubscription",
      "pubsub.topics.get",
      "pubsub.topics.getIamPolicy",
      "pubsub.topics.list",
      "pubsub.topics.publish",
      "pubsub.topics.setIamPolicy",
      "pubsub.topics.update",
      "pubsub.topics.updateTag",
      "resourcemanager.projects.get",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/pubsub.editor",
    "title": "Pub/Sub Editor",
    "description": "Modify topics and subscriptions, publish and consume messages.",
    "includedPermissions": [
      "pubsub.schemas.attach",
      "pubsub.schemas.commit",
      "pubsub.schemas.create",
      "pubsub.schemas.delete",
      "pubsub.schemas.get",
      "pubsub.schemas.list",
      "pubsub.schemas.listRevisions",
      "pubsub.schemas.rollback",
      "pubsub.schemas.validate",
      "pubsub.snapshots.create",
      "pubsub.snapshots.delete",
      "pubsub.snapshots.get",
      "pubsub.snapshots.list",
      "pubsub.snapshots.seek",
      "pubsub.snapshots.update",
      "pubsub.subscriptions.consume",
      "pubsub.subscriptions.create",
      "pubsub.subscriptions.delete",
      "pubsub.subscriptions.get",
      "pubsub.subscriptions.list",
      "pubsub.subscriptions.update",
      "pubsub.topics.attachSubscription",
      "pubsub.topics.create",
      "pubsub.topics.delete",
      "pubsub.topics.detachSubscription",
      "pubsub.topics.get",
      "pubsub.topics.list",
      "pubsub.topics.publish",
      "pubsub.topics.update",
      "pubsub.topics.updateTag",
      "resourcemanager.projects.get",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/pubsub.publisher",
    "title": "Pub/Sub Publisher",
    "description": "Publish messages to a topic.",
    "includedPermissions": [
      "pubsub.topics.publish"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/pubsub.serviceAgent",
    "title": "Cloud Pub/Sub Service Agent",
    "description": "Grants Cloud Pub/Sub Service Account access to manage resources.",
    "includedPermissions": [
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.getAccessToken",
      "iam.serviceAccounts.getOpenIdToken",
      "iam.serviceAccounts.implicitDelegation",
      "iam.serviceAccounts.list",
      "iam.serviceAccounts.signBlob",
      "iam.serviceAccounts.signJwt",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/pubsub.subscriber",
    "title": "Pub/Sub Subscriber",
    "description": "Consume messages from a subscription, attach subscriptions to a topic, and seek to a snapshot.",
    "includedPermissions": [
      "pubsub.snapshots.seek",
      "pubsub.subscriptions.consume",
      "pubsub.topics.attachSubscription"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/pubsub.viewer",
    "title": "Pub/Sub Viewer",
    "description": "View topics, subscriptions, and snapshots.",
    "includedPermissions": [
      "pubsub.schemas.get",
      "pubsub.schemas.list",
      "pubsub.schemas.listRevisions",
      "pubsub.schemas.validate",
      "pubsub.snapshots.get",
      "pubsub.snapshots.list",
      "pubsub.subscriptions.get",
      "pubsub.subscriptions.list",
      "pubsub.topics.get",
      "pubsub.topics.list",
      "resourcemanager.projects.get",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/pubsublite.admin",
    "title": "Pub/Sub Lite Admin",
    "description": "Full access to topics, subscriptions and reservations.",
    "includedPermissions": [
      "pubsublite.locations.openKafkaStream",
      "pubsublite.operations.get",
      "pubsublite.operations.list",
      "pubsublite.reservations.attachTopic",
      "pubsublite.reservations.create",
      "pubsublite.reservations.delete",
      "pubsublite.reservations.get",
      "pubsublite.reservations.list",
      "pubsublite.reservations.listTopics",
      "pubsublite.reservations.update",
      "pubsublite.subscriptions.create",
      "pubsublite.subscriptions.delete",
      "pubsublite.subscriptions.get",
      "pubsublite.subscriptions.getCursor",
      "pubsublite.subscriptions.list",
      "pubsublite.subscriptions.seek",
      "pubsublite.subscriptions.setCursor",
      "pubsublite.subscriptions.subscribe",
      "pubsublite.subscriptions.update",
      "pubsublite.topics.computeHeadCursor",
      "pubsublite.topics.computeMessageStats",
      "pubsublite.topics.computeTimeCursor",
      "pubsublite.topics.create",
      "pubsublite.topics.delete",
      "pubsublite.topics.get",
      "pubsublite.topics.getPartitions",
      "pubsublite.topics.list",
      "pubsublite.topics.listSubscriptions",
      "pubsublite.topics.publish",
      "pubsublite.topics.subscribe",
      "pubsublite.topics.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/pubsublite.editor",
    "title": "Pub/Sub Lite Editor",
    "description": "Modify topics, subscriptions and reservations, publish and consume messages.",
    "includedPermissions": [
      "pubsublite.locations.openKafkaStream",
      "pubsublite.operations.get",
      "pubsublite.operations.list",
      "pubsublite.reservations.attachTopic",
      "pubsublite.reservations.create",
      "pubsublite.reservations.delete",
      "pubsublite.reservations.get",
      "pubsublite.reservations.list",
      "pubsublite.reservations.listTopics",
      "pubsublite.reservations.update",
      "pubsublite.subscriptions.create",
      "pubsublite.subscriptions.delete",
      "pubsublite.subscriptions.get",
      "pubsublite.subscriptions.getCursor",
      "pubsublite.subscriptions.list",
      "pubsublite.subscriptions.seek",
      "pubsublite.subscriptions.setCursor",
      "pubsublite.subscriptions.subscribe",
      "pubsublite.subscriptions.update",
      "pubsublite.topics.computeHeadCursor",
      "pubsublite.topics.computeMessageStats",
      "pubsublite.topics.computeTimeCursor",
      "pubsublite.topics.create",
      "pubsublite.topics.delete",
      "pubsublite.topics.get",
      "pubsublite.topics.getPartitions",
      "pubsublite.topics.list",
      "pubsublite.topics.listSubscriptions",
      "pubsublite.topics.publish",
      "pubsublite.topics.subscribe",
      "pubsublite.topics.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/pubsublite.publisher",
    "title": "Pub/Sub Lite Publisher",
    "description": "Publish messages to a topic.",
    "includedPermissions": [
      "pubsublite.locations.openKafkaStream",
      "pubsublite.topics.getPartitions",
      "pubsublite.topics.publish"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/pubsublite.serviceAgent",
    "title": "Pub/Sub Lite Service Agent",
    "description": "Grants Pub/Sub Lite Service Agent access to project resources.",
    "includedPermissions": [
      "pubsub.topics.publish",
      "pubsublite.subscriptions.get",
      "pubsublite.subscriptions.getCursor",
      "pubsublite.subscriptions.setCursor",
      "pubsublite.subscriptions.subscribe",
      "pubsublite.topics.computeHeadCursor",
      "pubsublite.topics.getPartitions",
      "pubsublite.topics.publish",
      "pubsublite.topics.subscribe"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/pubsublite.subscriber",
    "title": "Pub/Sub Lite Subscriber",
    "description": "Subscribe to and read messages from a topic.",
    "includedPermissions": [
      "pubsublite.locations.openKafkaStream",
      "pubsublite.operations.get",
      "pubsublite.subscriptions.getCursor",
      "pubsublite.subscriptions.seek",
      "pubsublite.subscriptions.setCursor",
      "pubsublite.subscriptions.subscribe",
      "pubsublite.topics.computeHeadCursor",
      "pubsublite.topics.computeMessageStats",
      "pubsublite.topics.computeTimeCursor",
      "pubsublite.topics.getPartitions",
      "pubsublite.topics.subscribe"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/pubsublite.viewer",
    "title": "Pub/Sub Lite Viewer",
    "description": "View topics, subscriptions and reservations.",
    "includedPermissions": [
      "pubsublite.operations.get",
      "pubsublite.operations.list",
      "pubsublite.reservations.get",
      "pubsublite.reservations.list",
      "pubsublite.reservations.listTopics",
      "pubsublite.subscriptions.get",
      "pubsublite.subscriptions.getCursor",
      "pubsublite.subscriptions.list",
      "pubsublite.topics.get",
      "pubsublite.topics.getPartitions",
      "pubsublite.topics.list",
      "pubsublite.topics.listSubscriptions"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/rapidmigrationassessment.serviceAgent",
    "title": "RMA Service Agent",
    "description": "Gives RMA service account access to MC resources.",
    "includedPermissions": [
      "autoscaling.sites.writeMetrics",
      "cloudasset.assets.exportResource",
      "cloudasset.feeds.create",
      "logging.logEntries.create",
      "migrationcenter.assets.list",
      "migrationcenter.assets.reportFrames",
      "migrationcenter.importJobs.get",
      "migrationcenter.importJobs.list",
      "migrationcenter.sources.create",
      "migrationcenter.sources.delete",
      "migrationcenter.sources.get",
      "migrationcenter.sources.update",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.list",
      "monitoring.timeSeries.create",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recaptchaenterprise.admin",
    "title": "reCAPTCHA Enterprise Admin",
    "description": "Access to view and modify reCAPTCHA Enterprise keys",
    "includedPermissions": [
      "monitoring.timeSeries.list",
      "recaptchaenterprise.keys.create",
      "recaptchaenterprise.keys.delete",
      "recaptchaenterprise.keys.get",
      "recaptchaenterprise.keys.list",
      "recaptchaenterprise.keys.retrievelegacysecretkey",
      "recaptchaenterprise.keys.update",
      "recaptchaenterprise.metrics.get",
      "recaptchaenterprise.projectmetadata.get",
      "recaptchaenterprise.projectmetadata.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recaptchaenterprise.agent",
    "title": "reCAPTCHA Enterprise Agent",
    "description": "Access to create and annotate reCAPTCHA Enterprise assessments",
    "includedPermissions": [
      "recaptchaenterprise.assessments.annotate",
      "recaptchaenterprise.assessments.create",
      "recaptchaenterprise.relatedaccountgroupmemberships.list",
      "recaptchaenterprise.relatedaccountgroups.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recaptchaenterprise.viewer",
    "title": "reCAPTCHA Enterprise Viewer",
    "description": "Access to view reCAPTCHA Enterprise keys and metrics",
    "includedPermissions": [
      "monitoring.timeSeries.list",
      "recaptchaenterprise.keys.get",
      "recaptchaenterprise.keys.list",
      "recaptchaenterprise.metrics.get",
      "recaptchaenterprise.projectmetadata.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.bigQueryCapacityCommitmentsAdmin",
    "title": "BigQuery Slot Recommender Admin",
    "description": "Admin of BigQuery Capacity Commitments insights and recommendations.",
    "includedPermissions": [
      "recommender.bigqueryCapacityCommitmentsInsights.get",
      "recommender.bigqueryCapacityCommitmentsInsights.list",
      "recommender.bigqueryCapacityCommitmentsInsights.update",
      "recommender.bigqueryCapacityCommitmentsRecommendations.get",
      "recommender.bigqueryCapacityCommitmentsRecommendations.list",
      "recommender.bigqueryCapacityCommitmentsRecommendations.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.bigQueryCapacityCommitmentsBillingAccountAdmin",
    "title": "BigQuery Recommender Billing Account Admin",
    "description": "Billing Account Admin of BigQuery Capacity Commitments insights and recommendations.",
    "includedPermissions": [
      "billing.accounts.get",
      "billing.accounts.list",
      "recommender.bigqueryCapacityCommitmentsInsights.get",
      "recommender.bigqueryCapacityCommitmentsInsights.list",
      "recommender.bigqueryCapacityCommitmentsInsights.update",
      "recommender.bigqueryCapacityCommitmentsRecommendations.get",
      "recommender.bigqueryCapacityCommitmentsRecommendations.list",
      "recommender.bigqueryCapacityCommitmentsRecommendations.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.bigQueryCapacityCommitmentsBillingAccountViewer",
    "title": "BigQuery Recommender Billing Account Viewer",
    "description": "Billing Account Viewer of BigQuery Capacity Commitments insights and recommendations.",
    "includedPermissions": [
      "billing.accounts.get",
      "billing.accounts.list",
      "recommender.bigqueryCapacityCommitmentsInsights.get",
      "recommender.bigqueryCapacityCommitmentsInsights.list",
      "recommender.bigqueryCapacityCommitmentsRecommendations.get",
      "recommender.bigqueryCapacityCommitmentsRecommendations.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.bigQueryCapacityCommitmentsProjectAdmin",
    "title": "BigQuery Recommender Project Admin",
    "description": "Project Admin of BigQuery Capacity Commitments insights and recommendations.",
    "includedPermissions": [
      "recommender.bigqueryCapacityCommitmentsInsights.get",
      "recommender.bigqueryCapacityCommitmentsInsights.list",
      "recommender.bigqueryCapacityCommitmentsInsights.update",
      "recommender.bigqueryCapacityCommitmentsRecommendations.get",
      "recommender.bigqueryCapacityCommitmentsRecommendations.list",
      "recommender.bigqueryCapacityCommitmentsRecommendations.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.bigQueryCapacityCommitmentsProjectViewer",
    "title": "BigQuery Recommender Project Viewer",
    "description": "Project Viewer of BigQuery Capacity Commitments insights and recommendations.",
    "includedPermissions": [
      "recommender.bigqueryCapacityCommitmentsInsights.get",
      "recommender.bigqueryCapacityCommitmentsInsights.list",
      "recommender.bigqueryCapacityCommitmentsRecommendations.get",
      "recommender.bigqueryCapacityCommitmentsRecommendations.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.bigQueryCapacityCommitmentsViewer",
    "title": "BigQuery Slot Recommender Viewer",
    "description": "Viewer of BigQuery Capacity Commitments insights and recommendations.",
    "includedPermissions": [
      "recommender.bigqueryCapacityCommitmentsInsights.get",
      "recommender.bigqueryCapacityCommitmentsInsights.list",
      "recommender.bigqueryCapacityCommitmentsRecommendations.get",
      "recommender.bigqueryCapacityCommitmentsRecommendations.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.bigqueryPartitionClusterAdmin",
    "title": "BigQuery Partitioning Clustering Recommender Admin",
    "description": "Admin of BigQuery Partitioning Clustering recommendations.",
    "includedPermissions": [
      "recommender.bigqueryPartitionClusterRecommendations.get",
      "recommender.bigqueryPartitionClusterRecommendations.list",
      "recommender.bigqueryPartitionClusterRecommendations.update",
      "recommender.bigqueryTableStatsInsights.get",
      "recommender.bigqueryTableStatsInsights.list",
      "recommender.bigqueryTableStatsInsights.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.bigqueryPartitionClusterViewer",
    "title": "BigQuery Partitioning Clustering Recommender Viewer",
    "description": "Viewer of BigQuery Partitioning Clustering recommendations.",
    "includedPermissions": [
      "recommender.bigqueryPartitionClusterRecommendations.get",
      "recommender.bigqueryPartitionClusterRecommendations.list",
      "recommender.bigqueryTableStatsInsights.get",
      "recommender.bigqueryTableStatsInsights.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.billingAccountCudAdmin",
    "title": "Billing Account Usage Commitment Recommender Admin",
    "description": "Admin of Billing Account Usage Commitment Recommender.",
    "includedPermissions": [
      "billing.accounts.get",
      "billing.accounts.list",
      "recommender.commitmentUtilizationInsights.get",
      "recommender.commitmentUtilizationInsights.list",
      "recommender.commitmentUtilizationInsights.update",
      "recommender.usageCommitmentRecommendations.get",
      "recommender.usageCommitmentRecommendations.list",
      "recommender.usageCommitmentRecommendations.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.billingAccountCudViewer",
    "title": "Billing Account Usage Commitment Recommender Viewer",
    "description": "Viewer of Billing Account Usage Commitment Recommender.",
    "includedPermissions": [
      "billing.accounts.get",
      "billing.accounts.list",
      "recommender.commitmentUtilizationInsights.get",
      "recommender.commitmentUtilizationInsights.list",
      "recommender.usageCommitmentRecommendations.get",
      "recommender.usageCommitmentRecommendations.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.cloudAssetInsightsAdmin",
    "title": "Cloud Asset Insights Admin",
    "description": "Admin of all Cloud Asset insights.",
    "includedPermissions": [
      "recommender.cloudAssetInsights.get",
      "recommender.cloudAssetInsights.list",
      "recommender.cloudAssetInsights.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.cloudAssetInsightsViewer",
    "title": "Cloud Asset Insights Viewer",
    "description": "Viewer of all Cloud Asset insights.",
    "includedPermissions": [
      "recommender.cloudAssetInsights.get",
      "recommender.cloudAssetInsights.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.cloudCostRecommendationAdmin",
    "title": "Cloud Cost General Recommendations Recommender Admin",
    "description": "Admin of Cloud Cost General Recommendations Insights and Recommendations.",
    "includedPermissions": [
      "recommender.cloudCostGeneralInsights.get",
      "recommender.cloudCostGeneralInsights.list",
      "recommender.cloudCostGeneralInsights.update",
      "recommender.cloudCostGeneralRecommendations.get",
      "recommender.cloudCostGeneralRecommendations.list",
      "recommender.cloudCostGeneralRecommendations.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.cloudCostRecommendationViewer",
    "title": "Cloud Cost General Recommendations Recommender Viewer",
    "description": "Viewer of Cloud Cost General Recommendations Insights and Recommendations.",
    "includedPermissions": [
      "recommender.cloudCostGeneralInsights.get",
      "recommender.cloudCostGeneralInsights.list",
      "recommender.cloudCostGeneralRecommendations.get",
      "recommender.cloudCostGeneralRecommendations.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.cloudManageabilityRecommendationAdmin",
    "title": "Cloud Manageability General Recommendations Recommender Admin",
    "description": "Admin of Cloud Manageability General Recommendations Insights and Recommendations.",
    "includedPermissions": [
      "recommender.cloudManageabilityGeneralInsights.get",
      "recommender.cloudManageabilityGeneralInsights.list",
      "recommender.cloudManageabilityGeneralInsights.update",
      "recommender.cloudManageabilityGeneralRecommendations.get",
      "recommender.cloudManageabilityGeneralRecommendations.list",
      "recommender.cloudManageabilityGeneralRecommendations.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.cloudManageabilityRecommendationViewer",
    "title": "Cloud Manageability General Recommendations Recommender Viewer",
    "description": "Viewer of Cloud Manageability General Recommendations Insights and Recommendations.",
    "includedPermissions": [
      "recommender.cloudManageabilityGeneralInsights.get",
      "recommender.cloudManageabilityGeneralInsights.list",
      "recommender.cloudManageabilityGeneralRecommendations.get",
      "recommender.cloudManageabilityGeneralRecommendations.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.cloudPerformanceRecommendationAdmin",
    "title": "Cloud Performance General Recommendations Recommender Admin",
    "description": "Admin of Cloud Performance General Recommendations Insights and Recommendations.",
    "includedPermissions": [
      "recommender.cloudPerformanceGeneralInsights.get",
      "recommender.cloudPerformanceGeneralInsights.list",
      "recommender.cloudPerformanceGeneralInsights.update",
      "recommender.cloudPerformanceGeneralRecommendations.get",
      "recommender.cloudPerformanceGeneralRecommendations.list",
      "recommender.cloudPerformanceGeneralRecommendations.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.cloudPerformanceRecommendationViewer",
    "title": "Cloud Performance General Recommendations Recommender Viewer",
    "description": "Viewer of Cloud Performance General Recommendations Insights and Recommendations.",
    "includedPermissions": [
      "recommender.cloudPerformanceGeneralInsights.get",
      "recommender.cloudPerformanceGeneralInsights.list",
      "recommender.cloudPerformanceGeneralRecommendations.get",
      "recommender.cloudPerformanceGeneralRecommendations.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.cloudReliabilityRecommendationAdmin",
    "title": "Cloud Reliability General Recommendations Recommender Admin",
    "description": "Admin of Cloud Reliability General Recommendations Insights and Recommendations.",
    "includedPermissions": [
      "recommender.cloudReliabilityGeneralInsights.get",
      "recommender.cloudReliabilityGeneralInsights.list",
      "recommender.cloudReliabilityGeneralInsights.update",
      "recommender.cloudReliabilityGeneralRecommendations.get",
      "recommender.cloudReliabilityGeneralRecommendations.list",
      "recommender.cloudReliabilityGeneralRecommendations.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.cloudReliabilityRecommendationViewer",
    "title": "Cloud Reliability General Recommendations Recommender Viewer",
    "description": "Viewer of Cloud Reliability General Recommendations Insights and Recommendations.",
    "includedPermissions": [
      "recommender.cloudReliabilityGeneralInsights.get",
      "recommender.cloudReliabilityGeneralInsights.list",
      "recommender.cloudReliabilityGeneralRecommendations.get",
      "recommender.cloudReliabilityGeneralRecommendations.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.cloudSecurityRecommendationAdmin",
    "title": "Cloud Security General Recommendations Recommender Admin",
    "description": "Admin of Cloud Security General Recommendations Insights and Recommendations.",
    "includedPermissions": [
      "recommender.cloudSecurityGeneralInsights.get",
      "recommender.cloudSecurityGeneralInsights.list",
      "recommender.cloudSecurityGeneralInsights.update",
      "recommender.cloudSecurityGeneralRecommendations.get",
      "recommender.cloudSecurityGeneralRecommendations.list",
      "recommender.cloudSecurityGeneralRecommendations.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.cloudSecurityRecommendationViewer",
    "title": "Cloud Security General Recommendations Recommender Viewer",
    "description": "Viewer of Cloud Security General Recommendations Insights and Recommendations.",
    "includedPermissions": [
      "recommender.cloudSecurityGeneralInsights.get",
      "recommender.cloudSecurityGeneralInsights.list",
      "recommender.cloudSecurityGeneralRecommendations.get",
      "recommender.cloudSecurityGeneralRecommendations.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.cloudsqlAdmin",
    "title": "Cloud SQL Recommender Admin",
    "description": "Admin of Cloud SQL insights and recommendations.",
    "includedPermissions": [
      "recommender.cloudsqlIdleInstanceRecommendations.get",
      "recommender.cloudsqlIdleInstanceRecommendations.list",
      "recommender.cloudsqlIdleInstanceRecommendations.update",
      "recommender.cloudsqlInstanceActivityInsights.get",
      "recommender.cloudsqlInstanceActivityInsights.list",
      "recommender.cloudsqlInstanceActivityInsights.update",
      "recommender.cloudsqlInstanceCpuUsageInsights.get",
      "recommender.cloudsqlInstanceCpuUsageInsights.list",
      "recommender.cloudsqlInstanceCpuUsageInsights.update",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.get",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.list",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.update",
      "recommender.cloudsqlInstanceMemoryUsageInsights.get",
      "recommender.cloudsqlInstanceMemoryUsageInsights.list",
      "recommender.cloudsqlInstanceMemoryUsageInsights.update",
      "recommender.cloudsqlInstanceOomProbabilityInsights.get",
      "recommender.cloudsqlInstanceOomProbabilityInsights.list",
      "recommender.cloudsqlInstanceOomProbabilityInsights.update",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.get",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.list",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.update",
      "recommender.cloudsqlInstancePerformanceInsights.get",
      "recommender.cloudsqlInstancePerformanceInsights.list",
      "recommender.cloudsqlInstancePerformanceInsights.update",
      "recommender.cloudsqlInstancePerformanceRecommendations.get",
      "recommender.cloudsqlInstancePerformanceRecommendations.list",
      "recommender.cloudsqlInstancePerformanceRecommendations.update",
      "recommender.cloudsqlInstanceReliabilityInsights.get",
      "recommender.cloudsqlInstanceReliabilityInsights.list",
      "recommender.cloudsqlInstanceReliabilityInsights.update",
      "recommender.cloudsqlInstanceReliabilityRecommendations.get",
      "recommender.cloudsqlInstanceReliabilityRecommendations.list",
      "recommender.cloudsqlInstanceReliabilityRecommendations.update",
      "recommender.cloudsqlInstanceSecurityInsights.get",
      "recommender.cloudsqlInstanceSecurityInsights.list",
      "recommender.cloudsqlInstanceSecurityInsights.update",
      "recommender.cloudsqlInstanceSecurityRecommendations.get",
      "recommender.cloudsqlInstanceSecurityRecommendations.list",
      "recommender.cloudsqlInstanceSecurityRecommendations.update",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.get",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.list",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.update",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.get",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.list",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.update",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.get",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.update",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.get",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.list",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.cloudsqlViewer",
    "title": "Cloud SQL Recommender Viewer",
    "description": "Viewer of Cloud SQL insights and recommendations.",
    "includedPermissions": [
      "recommender.cloudsqlIdleInstanceRecommendations.get",
      "recommender.cloudsqlIdleInstanceRecommendations.list",
      "recommender.cloudsqlInstanceActivityInsights.get",
      "recommender.cloudsqlInstanceActivityInsights.list",
      "recommender.cloudsqlInstanceCpuUsageInsights.get",
      "recommender.cloudsqlInstanceCpuUsageInsights.list",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.get",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.list",
      "recommender.cloudsqlInstanceMemoryUsageInsights.get",
      "recommender.cloudsqlInstanceMemoryUsageInsights.list",
      "recommender.cloudsqlInstanceOomProbabilityInsights.get",
      "recommender.cloudsqlInstanceOomProbabilityInsights.list",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.get",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.list",
      "recommender.cloudsqlInstancePerformanceInsights.get",
      "recommender.cloudsqlInstancePerformanceInsights.list",
      "recommender.cloudsqlInstancePerformanceRecommendations.get",
      "recommender.cloudsqlInstancePerformanceRecommendations.list",
      "recommender.cloudsqlInstanceReliabilityInsights.get",
      "recommender.cloudsqlInstanceReliabilityInsights.list",
      "recommender.cloudsqlInstanceReliabilityRecommendations.get",
      "recommender.cloudsqlInstanceReliabilityRecommendations.list",
      "recommender.cloudsqlInstanceSecurityInsights.get",
      "recommender.cloudsqlInstanceSecurityInsights.list",
      "recommender.cloudsqlInstanceSecurityRecommendations.get",
      "recommender.cloudsqlInstanceSecurityRecommendations.list",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.get",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.list",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.get",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.list",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.get",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.get",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.computeAdmin",
    "title": "Compute Recommender Admin",
    "description": "Admin of compute recommendations.",
    "includedPermissions": [
      "recommender.computeAddressIdleResourceInsights.get",
      "recommender.computeAddressIdleResourceInsights.list",
      "recommender.computeAddressIdleResourceInsights.update",
      "recommender.computeAddressIdleResourceRecommendations.get",
      "recommender.computeAddressIdleResourceRecommendations.list",
      "recommender.computeAddressIdleResourceRecommendations.update",
      "recommender.computeDiskIdleResourceInsights.get",
      "recommender.computeDiskIdleResourceInsights.list",
      "recommender.computeDiskIdleResourceInsights.update",
      "recommender.computeDiskIdleResourceRecommendations.get",
      "recommender.computeDiskIdleResourceRecommendations.list",
      "recommender.computeDiskIdleResourceRecommendations.update",
      "recommender.computeImageIdleResourceInsights.get",
      "recommender.computeImageIdleResourceInsights.list",
      "recommender.computeImageIdleResourceInsights.update",
      "recommender.computeImageIdleResourceRecommendations.get",
      "recommender.computeImageIdleResourceRecommendations.list",
      "recommender.computeImageIdleResourceRecommendations.update",
      "recommender.computeInstanceCpuUsageInsights.get",
      "recommender.computeInstanceCpuUsageInsights.list",
      "recommender.computeInstanceCpuUsageInsights.update",
      "recommender.computeInstanceCpuUsagePredictionInsights.get",
      "recommender.computeInstanceCpuUsagePredictionInsights.list",
      "recommender.computeInstanceCpuUsagePredictionInsights.update",
      "recommender.computeInstanceCpuUsageTrendInsights.get",
      "recommender.computeInstanceCpuUsageTrendInsights.list",
      "recommender.computeInstanceCpuUsageTrendInsights.update",
      "recommender.computeInstanceGroupManagerCpuUsageInsights.get",
      "recommender.computeInstanceGroupManagerCpuUsageInsights.list",
      "recommender.computeInstanceGroupManagerCpuUsageInsights.update",
      "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.get",
      "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.list",
      "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.update",
      "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.get",
      "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.list",
      "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.update",
      "recommender.computeInstanceGroupManagerMachineTypeRecommendations.get",
      "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list",
      "recommender.computeInstanceGroupManagerMachineTypeRecommendations.update",
      "recommender.computeInstanceGroupManagerMemoryUsageInsights.get",
      "recommender.computeInstanceGroupManagerMemoryUsageInsights.list",
      "recommender.computeInstanceGroupManagerMemoryUsageInsights.update",
      "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.get",
      "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.list",
      "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.update",
      "recommender.computeInstanceIdleResourceRecommendations.get",
      "recommender.computeInstanceIdleResourceRecommendations.list",
      "recommender.computeInstanceIdleResourceRecommendations.update",
      "recommender.computeInstanceIdleResourceRecommenderConfig.get",
      "recommender.computeInstanceIdleResourceRecommenderConfig.update",
      "recommender.computeInstanceMachineTypeRecommendations.get",
      "recommender.computeInstanceMachineTypeRecommendations.list",
      "recommender.computeInstanceMachineTypeRecommendations.update",
      "recommender.computeInstanceMemoryUsageInsights.get",
      "recommender.computeInstanceMemoryUsageInsights.list",
      "recommender.computeInstanceMemoryUsageInsights.update",
      "recommender.computeInstanceMemoryUsagePredictionInsights.get",
      "recommender.computeInstanceMemoryUsagePredictionInsights.list",
      "recommender.computeInstanceMemoryUsagePredictionInsights.update",
      "recommender.computeInstanceNetworkThroughputInsights.get",
      "recommender.computeInstanceNetworkThroughputInsights.list",
      "recommender.computeInstanceNetworkThroughputInsights.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.computeViewer",
    "title": "Compute Recommender Viewer",
    "description": "Viewer of compute recommendations.",
    "includedPermissions": [
      "recommender.computeAddressIdleResourceInsights.get",
      "recommender.computeAddressIdleResourceInsights.list",
      "recommender.computeAddressIdleResourceRecommendations.get",
      "recommender.computeAddressIdleResourceRecommendations.list",
      "recommender.computeDiskIdleResourceInsights.get",
      "recommender.computeDiskIdleResourceInsights.list",
      "recommender.computeDiskIdleResourceRecommendations.get",
      "recommender.computeDiskIdleResourceRecommendations.list",
      "recommender.computeImageIdleResourceInsights.get",
      "recommender.computeImageIdleResourceInsights.list",
      "recommender.computeImageIdleResourceRecommendations.get",
      "recommender.computeImageIdleResourceRecommendations.list",
      "recommender.computeInstanceCpuUsageInsights.get",
      "recommender.computeInstanceCpuUsageInsights.list",
      "recommender.computeInstanceCpuUsagePredictionInsights.get",
      "recommender.computeInstanceCpuUsagePredictionInsights.list",
      "recommender.computeInstanceCpuUsageTrendInsights.get",
      "recommender.computeInstanceCpuUsageTrendInsights.list",
      "recommender.computeInstanceGroupManagerCpuUsageInsights.get",
      "recommender.computeInstanceGroupManagerCpuUsageInsights.list",
      "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.get",
      "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.list",
      "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.get",
      "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.list",
      "recommender.computeInstanceGroupManagerMachineTypeRecommendations.get",
      "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list",
      "recommender.computeInstanceGroupManagerMemoryUsageInsights.get",
      "recommender.computeInstanceGroupManagerMemoryUsageInsights.list",
      "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.get",
      "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.list",
      "recommender.computeInstanceIdleResourceRecommendations.get",
      "recommender.computeInstanceIdleResourceRecommendations.list",
      "recommender.computeInstanceMachineTypeRecommendations.get",
      "recommender.computeInstanceMachineTypeRecommendations.list",
      "recommender.computeInstanceMemoryUsageInsights.get",
      "recommender.computeInstanceMemoryUsageInsights.list",
      "recommender.computeInstanceMemoryUsagePredictionInsights.get",
      "recommender.computeInstanceMemoryUsagePredictionInsights.list",
      "recommender.computeInstanceNetworkThroughputInsights.get",
      "recommender.computeInstanceNetworkThroughputInsights.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.containerDiagnosisAdmin",
    "title": "GKE Diagnosis Recommender Admin",
    "description": "Admin of GKE Diagnosis Insights and Recommendations.",
    "includedPermissions": [
      "recommender.containerDiagnosisInsights.get",
      "recommender.containerDiagnosisInsights.list",
      "recommender.containerDiagnosisInsights.update",
      "recommender.containerDiagnosisRecommendations.get",
      "recommender.containerDiagnosisRecommendations.list",
      "recommender.containerDiagnosisRecommendations.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.containerDiagnosisViewer",
    "title": "GKE Diagnosis Recommender Viewer",
    "description": "Viewer of GKE Diagnosis Insights and Recommendations.",
    "includedPermissions": [
      "recommender.containerDiagnosisInsights.get",
      "recommender.containerDiagnosisInsights.list",
      "recommender.containerDiagnosisRecommendations.get",
      "recommender.containerDiagnosisRecommendations.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.dataflowDiagnosticsAdmin",
    "title": "Dataflow Diagnostics Admin",
    "description": "Admin of Diagnostics recommendations.",
    "includedPermissions": [
      "recommender.dataflowDiagnosticsInsights.get",
      "recommender.dataflowDiagnosticsInsights.list",
      "recommender.dataflowDiagnosticsInsights.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.dataflowDiagnosticsViewer",
    "title": "Dataflow Diagnostics Viewer",
    "description": "Viewer of Diagnostics recommendations.",
    "includedPermissions": [
      "recommender.dataflowDiagnosticsInsights.get",
      "recommender.dataflowDiagnosticsInsights.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.errorReportingAdmin",
    "title": "Error Reporting Recommender Admin",
    "description": "Admin of Error Reporting Insights and Recommendations.",
    "includedPermissions": [
      "recommender.errorReportingInsights.get",
      "recommender.errorReportingInsights.list",
      "recommender.errorReportingInsights.update",
      "recommender.errorReportingRecommendations.get",
      "recommender.errorReportingRecommendations.list",
      "recommender.errorReportingRecommendations.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.errorReportingViewer",
    "title": "Error Reporting Recommender Viewer",
    "description": "Viewer of Error Reporting Insights and Recommendations.",
    "includedPermissions": [
      "recommender.errorReportingInsights.get",
      "recommender.errorReportingInsights.list",
      "recommender.errorReportingRecommendations.get",
      "recommender.errorReportingRecommendations.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.exporter",
    "title": "Recommendations Exporter",
    "description": "Exporter of Recommendations",
    "includedPermissions": [
      "recommender.resources.export"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.firewallAdmin",
    "title": "Firewall Recommender Admin",
    "description": "Admin of Firewall insights and recommendations.",
    "includedPermissions": [
      "monitoring.timeSeries.list",
      "recommender.computeFirewallInsightTypeConfigs.get",
      "recommender.computeFirewallInsightTypeConfigs.update",
      "recommender.computeFirewallInsights.get",
      "recommender.computeFirewallInsights.list",
      "recommender.computeFirewallInsights.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.firewallViewer",
    "title": "Firewall Recommender Viewer",
    "description": "Viewer of Firewall insights and recommendations.",
    "includedPermissions": [
      "monitoring.timeSeries.list",
      "recommender.computeFirewallInsightTypeConfigs.get",
      "recommender.computeFirewallInsights.get",
      "recommender.computeFirewallInsights.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.gmpAdmin",
    "title": "Google Maps Platform Insights/Recommendations Admin",
    "description": "Admin of all Google Maps Platform insights and recommendations.",
    "includedPermissions": [
      "recommender.gmpGuidedExperienceInsights.get",
      "recommender.gmpGuidedExperienceInsights.list",
      "recommender.gmpGuidedExperienceInsights.update",
      "recommender.gmpGuidedExperienceRecommendations.get",
      "recommender.gmpGuidedExperienceRecommendations.list",
      "recommender.gmpGuidedExperienceRecommendations.update",
      "recommender.gmpProjectManagementInsights.get",
      "recommender.gmpProjectManagementInsights.list",
      "recommender.gmpProjectManagementInsights.update",
      "recommender.gmpProjectManagementRecommendations.get",
      "recommender.gmpProjectManagementRecommendations.list",
      "recommender.gmpProjectManagementRecommendations.update",
      "recommender.gmpProjectProductSuggestionsInsights.get",
      "recommender.gmpProjectProductSuggestionsInsights.list",
      "recommender.gmpProjectProductSuggestionsInsights.update",
      "recommender.gmpProjectProductSuggestionsRecommendations.get",
      "recommender.gmpProjectProductSuggestionsRecommendations.list",
      "recommender.gmpProjectProductSuggestionsRecommendations.update",
      "recommender.gmpProjectQuotaInsights.get",
      "recommender.gmpProjectQuotaInsights.list",
      "recommender.gmpProjectQuotaInsights.update",
      "recommender.gmpProjectQuotaRecommendations.get",
      "recommender.gmpProjectQuotaRecommendations.list",
      "recommender.gmpProjectQuotaRecommendations.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.gmpViewer",
    "title": "Google Maps Platform Insights/Recommendations Viewer",
    "description": "Viewer of all Google Maps Platform insights and recommendations.",
    "includedPermissions": [
      "recommender.gmpGuidedExperienceInsights.get",
      "recommender.gmpGuidedExperienceInsights.list",
      "recommender.gmpGuidedExperienceRecommendations.get",
      "recommender.gmpGuidedExperienceRecommendations.list",
      "recommender.gmpProjectManagementInsights.get",
      "recommender.gmpProjectManagementInsights.list",
      "recommender.gmpProjectManagementRecommendations.get",
      "recommender.gmpProjectManagementRecommendations.list",
      "recommender.gmpProjectProductSuggestionsInsights.get",
      "recommender.gmpProjectProductSuggestionsInsights.list",
      "recommender.gmpProjectProductSuggestionsRecommendations.get",
      "recommender.gmpProjectProductSuggestionsRecommendations.list",
      "recommender.gmpProjectQuotaInsights.get",
      "recommender.gmpProjectQuotaInsights.list",
      "recommender.gmpProjectQuotaRecommendations.get",
      "recommender.gmpProjectQuotaRecommendations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.iamAdmin",
    "title": "IAM Recommender Admin",
    "description": "Admin of IAM recommendations.",
    "includedPermissions": [
      "recommender.iamPolicyInsights.get",
      "recommender.iamPolicyInsights.list",
      "recommender.iamPolicyInsights.update",
      "recommender.iamPolicyLateralMovementInsights.get",
      "recommender.iamPolicyLateralMovementInsights.list",
      "recommender.iamPolicyLateralMovementInsights.update",
      "recommender.iamPolicyRecommendations.get",
      "recommender.iamPolicyRecommendations.list",
      "recommender.iamPolicyRecommendations.update",
      "recommender.iamPolicyRecommenderConfig.get",
      "recommender.iamPolicyRecommenderConfig.update",
      "recommender.iamServiceAccountInsights.get",
      "recommender.iamServiceAccountInsights.list",
      "recommender.iamServiceAccountInsights.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.iamViewer",
    "title": "IAM Recommender Viewer",
    "description": "Viewer of IAM recommendations.",
    "includedPermissions": [
      "recommender.iamPolicyInsights.get",
      "recommender.iamPolicyInsights.list",
      "recommender.iamPolicyLateralMovementInsights.get",
      "recommender.iamPolicyLateralMovementInsights.list",
      "recommender.iamPolicyRecommendations.get",
      "recommender.iamPolicyRecommendations.list",
      "recommender.iamPolicyRecommenderConfig.get",
      "recommender.iamServiceAccountInsights.get",
      "recommender.iamServiceAccountInsights.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.networkAnalyzerAdmin",
    "title": "Network Analyzer Recommender Admin",
    "description": "Admin of Network Analyzer Insights and Recommendations.",
    "includedPermissions": [
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerCloudSqlInsights.get",
      "recommender.networkAnalyzerCloudSqlInsights.list",
      "recommender.networkAnalyzerCloudSqlInsights.update",
      "recommender.networkAnalyzerDynamicRouteInsights.get",
      "recommender.networkAnalyzerDynamicRouteInsights.list",
      "recommender.networkAnalyzerDynamicRouteInsights.update",
      "recommender.networkAnalyzerGkeConnectivityInsights.get",
      "recommender.networkAnalyzerGkeConnectivityInsights.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.update",
      "recommender.networkAnalyzerGkeIpAddressInsights.get",
      "recommender.networkAnalyzerGkeIpAddressInsights.list",
      "recommender.networkAnalyzerGkeIpAddressInsights.update",
      "recommender.networkAnalyzerIpAddressInsights.get",
      "recommender.networkAnalyzerIpAddressInsights.list",
      "recommender.networkAnalyzerIpAddressInsights.update",
      "recommender.networkAnalyzerLoadBalancerInsights.get",
      "recommender.networkAnalyzerLoadBalancerInsights.list",
      "recommender.networkAnalyzerLoadBalancerInsights.update",
      "recommender.networkAnalyzerVpcConnectivityInsights.get",
      "recommender.networkAnalyzerVpcConnectivityInsights.list",
      "recommender.networkAnalyzerVpcConnectivityInsights.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.networkAnalyzerCloudSqlAdmin",
    "title": "Network Analyzer Cloud SQL Recommender Admin",
    "description": "Admin of Network Analyzer Cloud SQL Insights and Recommendations.",
    "includedPermissions": [
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerCloudSqlInsights.get",
      "recommender.networkAnalyzerCloudSqlInsights.list",
      "recommender.networkAnalyzerCloudSqlInsights.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.networkAnalyzerCloudSqlViewer",
    "title": "Network Analyzer Cloud SQL Recommender Viewer",
    "description": "Viewer of Network Analyzer Cloud SQL Insights and Recommendations.",
    "includedPermissions": [
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerCloudSqlInsights.get",
      "recommender.networkAnalyzerCloudSqlInsights.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.networkAnalyzerDynamicRouteAdmin",
    "title": "Network Analyzer Dynamic Route Recommender Admin",
    "description": "Admin of Network Analyzer Dynamic Route Insights and Recommendations.",
    "includedPermissions": [
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerDynamicRouteInsights.get",
      "recommender.networkAnalyzerDynamicRouteInsights.list",
      "recommender.networkAnalyzerDynamicRouteInsights.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.networkAnalyzerDynamicRouteViewer",
    "title": "Network Analyzer Dynamic Route Recommender Viewer",
    "description": "Viewer of Network Analyzer Dynamic Route Insights and Recommendations.",
    "includedPermissions": [
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerDynamicRouteInsights.get",
      "recommender.networkAnalyzerDynamicRouteInsights.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.networkAnalyzerGkeConnectivityAdmin",
    "title": "Network Analyzer GKE Connectivity Recommender Admin",
    "description": "Admin of Network Analyzer GKE Connectivity Insights and Recommendations.",
    "includedPermissions": [
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.get",
      "recommender.networkAnalyzerGkeConnectivityInsights.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.networkAnalyzerGkeConnectivityViewer",
    "title": "Network Analyzer GKE Connectivity Recommender Viewer",
    "description": "Viewer of Network Analyzer GKE Connectivity Insights and Recommendations.",
    "includedPermissions": [
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.get",
      "recommender.networkAnalyzerGkeConnectivityInsights.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.networkAnalyzerGkeIpAddressAdmin",
    "title": "Network Analyzer GKE IP Address Recommender Admin",
    "description": "Admin of Network Analyzer GKE IP Address Insights and Recommendations.",
    "includedPermissions": [
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerGkeIpAddressInsights.get",
      "recommender.networkAnalyzerGkeIpAddressInsights.list",
      "recommender.networkAnalyzerGkeIpAddressInsights.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.networkAnalyzerGkeIpAddressViewer",
    "title": "Network Analyzer GKE IP Address Recommender Viewer",
    "description": "Viewer of Network Analyzer GKE IP Address Insights and Recommendations.",
    "includedPermissions": [
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerGkeIpAddressInsights.get",
      "recommender.networkAnalyzerGkeIpAddressInsights.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.networkAnalyzerIpAddressAdmin",
    "title": "Network Analyzer IP Address Recommender Admin",
    "description": "Admin of Network Analyzer IP Address Insights and Recommendations.",
    "includedPermissions": [
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerIpAddressInsights.get",
      "recommender.networkAnalyzerIpAddressInsights.list",
      "recommender.networkAnalyzerIpAddressInsights.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.networkAnalyzerIpAddressViewer",
    "title": "Network Analyzer IP Address Recommender Viewer",
    "description": "Viewer of Network Analyzer IP Address Insights and Recommendations.",
    "includedPermissions": [
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerIpAddressInsights.get",
      "recommender.networkAnalyzerIpAddressInsights.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.networkAnalyzerLoadBalancerAdmin",
    "title": "Network Analyzer Load Balancer Recommender Admin",
    "description": "Admin of Network Analyzer Load Balancer Insights and Recommendations.",
    "includedPermissions": [
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerLoadBalancerInsights.get",
      "recommender.networkAnalyzerLoadBalancerInsights.list",
      "recommender.networkAnalyzerLoadBalancerInsights.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.networkAnalyzerLoadBalancerViewer",
    "title": "Network Analyzer Load Balancer Recommender Viewer",
    "description": "Viewer of Network Analyzer Load Balancer Insights and Recommendations.",
    "includedPermissions": [
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerLoadBalancerInsights.get",
      "recommender.networkAnalyzerLoadBalancerInsights.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.networkAnalyzerViewer",
    "title": "Network Analyzer Recommender Viewer",
    "description": "Viewer of Network Analyzer Insights and Recommendations.",
    "includedPermissions": [
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerCloudSqlInsights.get",
      "recommender.networkAnalyzerCloudSqlInsights.list",
      "recommender.networkAnalyzerDynamicRouteInsights.get",
      "recommender.networkAnalyzerDynamicRouteInsights.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.get",
      "recommender.networkAnalyzerGkeConnectivityInsights.list",
      "recommender.networkAnalyzerGkeIpAddressInsights.get",
      "recommender.networkAnalyzerGkeIpAddressInsights.list",
      "recommender.networkAnalyzerIpAddressInsights.get",
      "recommender.networkAnalyzerIpAddressInsights.list",
      "recommender.networkAnalyzerLoadBalancerInsights.get",
      "recommender.networkAnalyzerLoadBalancerInsights.list",
      "recommender.networkAnalyzerVpcConnectivityInsights.get",
      "recommender.networkAnalyzerVpcConnectivityInsights.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.networkAnalyzerVpcConnectivityAdmin",
    "title": "Network Analyzer VPC Connectivity Recommender Admin",
    "description": "Admin of Network Analyzer VPC Connectivity Insights and Recommendations.",
    "includedPermissions": [
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerVpcConnectivityInsights.get",
      "recommender.networkAnalyzerVpcConnectivityInsights.list",
      "recommender.networkAnalyzerVpcConnectivityInsights.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.networkAnalyzerVpcConnectivityViewer",
    "title": "Network Analyzer VPC Connectivity Recommender Viewer",
    "description": "Viewer of Network Analyzer VPC Connectivity Insights and Recommendations.",
    "includedPermissions": [
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.networkAnalyzerVpcConnectivityInsights.get",
      "recommender.networkAnalyzerVpcConnectivityInsights.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.productSuggestionAdmin",
    "title": "Product Suggestion Recommenders Admin",
    "description": "Admin of all Product Suggestion insights and recommendations.",
    "includedPermissions": [
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.loggingProductSuggestionContainerInsights.get",
      "recommender.loggingProductSuggestionContainerInsights.list",
      "recommender.loggingProductSuggestionContainerInsights.update",
      "recommender.loggingProductSuggestionContainerRecommendations.get",
      "recommender.loggingProductSuggestionContainerRecommendations.list",
      "recommender.loggingProductSuggestionContainerRecommendations.update",
      "recommender.monitoringProductSuggestionComputeInsights.get",
      "recommender.monitoringProductSuggestionComputeInsights.list",
      "recommender.monitoringProductSuggestionComputeInsights.update",
      "recommender.monitoringProductSuggestionComputeRecommendations.get",
      "recommender.monitoringProductSuggestionComputeRecommendations.list",
      "recommender.monitoringProductSuggestionComputeRecommendations.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.productSuggestionViewer",
    "title": "Product Suggestion Recommenders Viewer",
    "description": "Viewer of all Product Suggestion insights and recommendations.",
    "includedPermissions": [
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.loggingProductSuggestionContainerInsights.get",
      "recommender.loggingProductSuggestionContainerInsights.list",
      "recommender.loggingProductSuggestionContainerRecommendations.get",
      "recommender.loggingProductSuggestionContainerRecommendations.list",
      "recommender.monitoringProductSuggestionComputeInsights.get",
      "recommender.monitoringProductSuggestionComputeInsights.list",
      "recommender.monitoringProductSuggestionComputeRecommendations.get",
      "recommender.monitoringProductSuggestionComputeRecommendations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.projectCudAdmin",
    "title": "Project Usage Commitment Recommender Admin",
    "description": "Admin of Project Usage Commitment Recommender.",
    "includedPermissions": [
      "recommender.commitmentUtilizationInsights.get",
      "recommender.commitmentUtilizationInsights.list",
      "recommender.commitmentUtilizationInsights.update",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.spendBasedCommitmentRecommenderConfig.get",
      "recommender.usageCommitmentRecommendations.get",
      "recommender.usageCommitmentRecommendations.list",
      "recommender.usageCommitmentRecommendations.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.projectCudViewer",
    "title": "Project Usage Commitment Recommender Viewer",
    "description": "Viewer of Project Usage Commitment Recommender.",
    "includedPermissions": [
      "recommender.commitmentUtilizationInsights.get",
      "recommender.commitmentUtilizationInsights.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.spendBasedCommitmentRecommenderConfig.get",
      "recommender.usageCommitmentRecommendations.get",
      "recommender.usageCommitmentRecommendations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.projectUtilAdmin",
    "title": "Project Utilization Recommender Admin",
    "description": "Admin of Project Utilization insights and recommendations.",
    "includedPermissions": [
      "recommender.resourcemanagerProjectUtilizationInsightTypeConfigs.get",
      "recommender.resourcemanagerProjectUtilizationInsightTypeConfigs.update",
      "recommender.resourcemanagerProjectUtilizationInsights.get",
      "recommender.resourcemanagerProjectUtilizationInsights.list",
      "recommender.resourcemanagerProjectUtilizationInsights.update",
      "recommender.resourcemanagerProjectUtilizationRecommendations.get",
      "recommender.resourcemanagerProjectUtilizationRecommendations.list",
      "recommender.resourcemanagerProjectUtilizationRecommendations.update",
      "recommender.resourcemanagerProjectUtilizationRecommenderConfigs.get",
      "recommender.resourcemanagerProjectUtilizationRecommenderConfigs.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.projectUtilViewer",
    "title": "Project Utilization Recommender Viewer",
    "description": "Viewer of Project Utilization insights and recommendations.",
    "includedPermissions": [
      "recommender.resourcemanagerProjectUtilizationInsightTypeConfigs.get",
      "recommender.resourcemanagerProjectUtilizationInsights.get",
      "recommender.resourcemanagerProjectUtilizationInsights.list",
      "recommender.resourcemanagerProjectUtilizationRecommendations.get",
      "recommender.resourcemanagerProjectUtilizationRecommendations.list",
      "recommender.resourcemanagerProjectUtilizationRecommenderConfigs.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.serviceLimitAdmin",
    "title": "Service Limit Recommender Admin",
    "description": "Admin of Service Limit insights and recommendations.",
    "includedPermissions": [
      "recommender.resourcemanagerServiceLimitInsights.get",
      "recommender.resourcemanagerServiceLimitInsights.list",
      "recommender.resourcemanagerServiceLimitInsights.update",
      "recommender.resourcemanagerServiceLimitRecommendations.get",
      "recommender.resourcemanagerServiceLimitRecommendations.list",
      "recommender.resourcemanagerServiceLimitRecommendations.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.serviceLimitViewer",
    "title": "Service Limit Recommender Viewer",
    "description": "Viewer of Service Limit insights and recommendations.",
    "includedPermissions": [
      "recommender.resourcemanagerServiceLimitInsights.get",
      "recommender.resourcemanagerServiceLimitInsights.list",
      "recommender.resourcemanagerServiceLimitRecommendations.get",
      "recommender.resourcemanagerServiceLimitRecommendations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.ucsAdmin",
    "title": "Spend Based Commitment Recommender Admin",
    "description": "Admin of Spend Based Commitment Recommender.",
    "includedPermissions": [
      "billing.accounts.get",
      "billing.accounts.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.spendBasedCommitmentInsights.get",
      "recommender.spendBasedCommitmentInsights.list",
      "recommender.spendBasedCommitmentInsights.update",
      "recommender.spendBasedCommitmentRecommendations.get",
      "recommender.spendBasedCommitmentRecommendations.list",
      "recommender.spendBasedCommitmentRecommendations.update",
      "recommender.spendBasedCommitmentRecommenderConfig.get",
      "recommender.spendBasedCommitmentRecommenderConfig.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.ucsViewer",
    "title": "Spend Based Commitment Recommender Viewer",
    "description": "Viewer of Spend Based Commitment Recommender.",
    "includedPermissions": [
      "billing.accounts.get",
      "billing.accounts.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.spendBasedCommitmentInsights.get",
      "recommender.spendBasedCommitmentInsights.list",
      "recommender.spendBasedCommitmentRecommendations.get",
      "recommender.spendBasedCommitmentRecommendations.list",
      "recommender.spendBasedCommitmentRecommenderConfig.get"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/recommender.viewer",
    "title": "Recommender Viewer",
    "description": "Enables Get and List operations.",
    "includedPermissions": [
      "recommender.bigqueryCapacityCommitmentsInsights.get",
      "recommender.bigqueryCapacityCommitmentsInsights.list",
      "recommender.bigqueryCapacityCommitmentsRecommendations.get",
      "recommender.bigqueryCapacityCommitmentsRecommendations.list",
      "recommender.bigqueryPartitionClusterRecommendations.get",
      "recommender.bigqueryPartitionClusterRecommendations.list",
      "recommender.bigqueryTableStatsInsights.get",
      "recommender.bigqueryTableStatsInsights.list",
      "recommender.cloudAssetInsights.get",
      "recommender.cloudAssetInsights.list",
      "recommender.cloudCostGeneralInsights.get",
      "recommender.cloudCostGeneralInsights.list",
      "recommender.cloudCostGeneralRecommendations.get",
      "recommender.cloudCostGeneralRecommendations.list",
      "recommender.cloudFunctionsPerformanceInsights.get",
      "recommender.cloudFunctionsPerformanceInsights.list",
      "recommender.cloudFunctionsPerformanceRecommendations.get",
      "recommender.cloudFunctionsPerformanceRecommendations.list",
      "recommender.cloudManageabilityGeneralInsights.get",
      "recommender.cloudManageabilityGeneralInsights.list",
      "recommender.cloudManageabilityGeneralRecommendations.get",
      "recommender.cloudManageabilityGeneralRecommendations.list",
      "recommender.cloudPerformanceGeneralInsights.get",
      "recommender.cloudPerformanceGeneralInsights.list",
      "recommender.cloudPerformanceGeneralRecommendations.get",
      "recommender.cloudPerformanceGeneralRecommendations.list",
      "recommender.cloudReliabilityGeneralInsights.get",
      "recommender.cloudReliabilityGeneralInsights.list",
      "recommender.cloudReliabilityGeneralRecommendations.get",
      "recommender.cloudReliabilityGeneralRecommendations.list",
      "recommender.cloudSecurityGeneralInsights.get",
      "recommender.cloudSecurityGeneralInsights.list",
      "recommender.cloudSecurityGeneralRecommendations.get",
      "recommender.cloudSecurityGeneralRecommendations.list",
      "recommender.cloudsqlIdleInstanceRecommendations.get",
      "recommender.cloudsqlIdleInstanceRecommendations.list",
      "recommender.cloudsqlInstanceActivityInsights.get",
      "recommender.cloudsqlInstanceActivityInsights.list",
      "recommender.cloudsqlInstanceCpuUsageInsights.get",
      "recommender.cloudsqlInstanceCpuUsageInsights.list",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.get",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.list",
      "recommender.cloudsqlInstanceMemoryUsageInsights.get",
      "recommender.cloudsqlInstanceMemoryUsageInsights.list",
      "recommender.cloudsqlInstanceOomProbabilityInsights.get",
      "recommender.cloudsqlInstanceOomProbabilityInsights.list",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.get",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.list",
      "recommender.cloudsqlInstancePerformanceInsights.get",
      "recommender.cloudsqlInstancePerformanceInsights.list",
      "recommender.cloudsqlInstancePerformanceRecommendations.get",
      "recommender.cloudsqlInstancePerformanceRecommendations.list",
      "recommender.cloudsqlInstanceReliabilityInsights.get",
      "recommender.cloudsqlInstanceReliabilityInsights.list",
      "recommender.cloudsqlInstanceReliabilityRecommendations.get",
      "recommender.cloudsqlInstanceReliabilityRecommendations.list",
      "recommender.cloudsqlInstanceSecurityInsights.get",
      "recommender.cloudsqlInstanceSecurityInsights.list",
      "recommender.cloudsqlInstanceSecurityRecommendations.get",
      "recommender.cloudsqlInstanceSecurityRecommendations.list",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.get",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.list",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.get",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.list",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.get",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.get",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.list",
      "recommender.commitmentUtilizationInsights.get",
      "recommender.commitmentUtilizationInsights.list",
      "recommender.computeAddressIdleResourceInsights.get",
      "recommender.computeAddressIdleResourceInsights.list",
      "recommender.computeAddressIdleResourceRecommendations.get",
      "recommender.computeAddressIdleResourceRecommendations.list",
      "recommender.computeDiskIdleResourceInsights.get",
      "recommender.computeDiskIdleResourceInsights.list",
      "recommender.computeDiskIdleResourceRecommendations.get",
      "recommender.computeDiskIdleResourceRecommendations.list",
      "recommender.computeFirewallInsightTypeConfigs.get",
      "recommender.computeFirewallInsights.get",
      "recommender.computeFirewallInsights.list",
      "recommender.computeImageIdleResourceInsights.get",
      "recommender.computeImageIdleResourceInsights.list",
      "recommender.computeImageIdleResourceRecommendations.get",
      "recommender.computeImageIdleResourceRecommendations.list",
      "recommender.computeInstanceCpuUsageInsights.get",
      "recommender.computeInstanceCpuUsageInsights.list",
      "recommender.computeInstanceCpuUsagePredictionInsights.get",
      "recommender.computeInstanceCpuUsagePredictionInsights.list",
      "recommender.computeInstanceCpuUsageTrendInsights.get",
      "recommender.computeInstanceCpuUsageTrendInsights.list",
      "recommender.computeInstanceGroupManagerCpuUsageInsights.get",
      "recommender.computeInstanceGroupManagerCpuUsageInsights.list",
      "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.get",
      "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.list",
      "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.get",
      "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.list",
      "recommender.computeInstanceGroupManagerMachineTypeRecommendations.get",
      "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list",
      "recommender.computeInstanceGroupManagerMemoryUsageInsights.get",
      "recommender.computeInstanceGroupManagerMemoryUsageInsights.list",
      "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.get",
      "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.list",
      "recommender.computeInstanceIdleResourceRecommendations.get",
      "recommender.computeInstanceIdleResourceRecommendations.list",
      "recommender.computeInstanceIdleResourceRecommenderConfig.get",
      "recommender.computeInstanceMachineTypeRecommendations.get",
      "recommender.computeInstanceMachineTypeRecommendations.list",
      "recommender.computeInstanceMemoryUsageInsights.get",
      "recommender.computeInstanceMemoryUsageInsights.list",
      "recommender.computeInstanceMemoryUsagePredictionInsights.get",
      "recommender.computeInstanceMemoryUsagePredictionInsights.list",
      "recommender.computeInstanceNetworkThroughputInsights.get",
      "recommender.computeInstanceNetworkThroughputInsights.list",
      "recommender.containerDiagnosisInsights.get",
      "recommender.containerDiagnosisInsights.list",
      "recommender.containerDiagnosisRecommendations.get",
      "recommender.containerDiagnosisRecommendations.list",
      "recommender.costInsights.get",
      "recommender.costInsights.list",
      "recommender.dataflowDiagnosticsInsights.get",
      "recommender.dataflowDiagnosticsInsights.list",
      "recommender.errorReportingInsights.get",
      "recommender.errorReportingInsights.list",
      "recommender.errorReportingRecommendations.get",
      "recommender.errorReportingRecommendations.list",
      "recommender.gmpGuidedExperienceInsights.get",
      "recommender.gmpGuidedExperienceInsights.list",
      "recommender.gmpGuidedExperienceRecommendations.get",
      "recommender.gmpGuidedExperienceRecommendations.list",
      "recommender.gmpProjectManagementInsights.get",
      "recommender.gmpProjectManagementInsights.list",
      "recommender.gmpProjectManagementRecommendations.get",
      "recommender.gmpProjectManagementRecommendations.list",
      "recommender.gmpProjectProductSuggestionsInsights.get",
      "recommender.gmpProjectProductSuggestionsInsights.list",
      "recommender.gmpProjectProductSuggestionsRecommendations.get",
      "recommender.gmpProjectProductSuggestionsRecommendations.list",
      "recommender.gmpProjectQuotaInsights.get",
      "recommender.gmpProjectQuotaInsights.list",
      "recommender.gmpProjectQuotaRecommendations.get",
      "recommender.gmpProjectQuotaRecommendations.list",
      "recommender.iamPolicyInsights.get",
      "recommender.iamPolicyInsights.list",
      "recommender.iamPolicyLateralMovementInsights.get",
      "recommender.iamPolicyLateralMovementInsights.list",
      "recommender.iamPolicyRecommendations.get",
      "recommender.iamPolicyRecommendations.list",
      "recommender.iamPolicyRecommenderConfig.get",
      "recommender.iamServiceAccountInsights.get",
      "recommender.iamServiceAccountInsights.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.loggingProductSuggestionContainerInsights.get",
      "recommender.loggingProductSuggestionContainerInsights.list",
      "recommender.loggingProductSuggestionContainerRecommendations.get",
      "recommender.loggingProductSuggestionContainerRecommendations.list",
      "recommender.monitoringProductSuggestionComputeInsights.get",
      "recommender.monitoringProductSuggestionComputeInsights.list",
      "recommender.monitoringProductSuggestionComputeRecommendations.get",
      "recommender.monitoringProductSuggestionComputeRecommendations.list",
      "recommender.networkAnalyzerCloudSqlInsights.get",
      "recommender.networkAnalyzerCloudSqlInsights.list",
      "recommender.networkAnalyzerDynamicRouteInsights.get",
      "recommender.networkAnalyzerDynamicRouteInsights.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.get",
      "recommender.networkAnalyzerGkeConnectivityInsights.list",
      "recommender.networkAnalyzerGkeIpAddressInsights.get",
      "recommender.networkAnalyzerGkeIpAddressInsights.list",
      "recommender.networkAnalyzerIpAddressInsights.get",
      "recommender.networkAnalyzerIpAddressInsights.list",
      "recommender.networkAnalyzerLoadBalancerInsights.get",
      "recommender.networkAnalyzerLoadBalancerInsights.list",
      "recommender.networkAnalyzerVpcConnectivityInsights.get",
      "recommender.networkAnalyzerVpcConnectivityInsights.list",
      "recommender.resourcemanagerProjectUtilizationInsightTypeConfigs.get",
      "recommender.resourcemanagerProjectUtilizationInsights.get",
      "recommender.resourcemanagerProjectUtilizationInsights.list",
      "recommender.resourcemanagerProjectUtilizationRecommendations.get",
      "recommender.resourcemanagerProjectUtilizationRecommendations.list",
      "recommender.resourcemanagerProjectUtilizationRecommenderConfigs.get",
      "recommender.resourcemanagerServiceLimitInsights.get",
      "recommender.resourcemanagerServiceLimitInsights.list",
      "recommender.resourcemanagerServiceLimitRecommendations.get",
      "recommender.resourcemanagerServiceLimitRecommendations.list",
      "recommender.runServiceCostInsights.get",
      "recommender.runServiceCostInsights.list",
      "recommender.runServiceCostRecommendations.get",
      "recommender.runServiceCostRecommendations.list",
      "recommender.runServiceIdentityInsights.get",
      "recommender.runServiceIdentityInsights.list",
      "recommender.runServiceIdentityRecommendations.get",
      "recommender.runServiceIdentityRecommendations.list",
      "recommender.runServiceSecurityInsights.get",
      "recommender.runServiceSecurityInsights.list",
      "recommender.runServiceSecurityRecommendations.get",
      "recommender.runServiceSecurityRecommendations.list",
      "recommender.spendBasedCommitmentInsights.get",
      "recommender.spendBasedCommitmentInsights.list",
      "recommender.spendBasedCommitmentRecommendations.get",
      "recommender.spendBasedCommitmentRecommendations.list",
      "recommender.spendBasedCommitmentRecommenderConfig.get",
      "recommender.usageCommitmentRecommendations.get",
      "recommender.usageCommitmentRecommendations.list",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/redis.admin",
    "title": "Cloud Memorystore Redis Admin",
    "description": "Full access to Redis instances and related resources.",
    "includedPermissions": [
      "compute.networks.list",
      "networkconnectivity.serviceConnectionPolicies.list",
      "redis.clusters.connect",
      "redis.clusters.create",
      "redis.clusters.delete",
      "redis.clusters.get",
      "redis.clusters.list",
      "redis.clusters.update",
      "redis.instances.create",
      "redis.instances.delete",
      "redis.instances.export",
      "redis.instances.failover",
      "redis.instances.get",
      "redis.instances.getAuthString",
      "redis.instances.import",
      "redis.instances.list",
      "redis.instances.rescheduleMaintenance",
      "redis.instances.update",
      "redis.instances.updateAuth",
      "redis.instances.upgrade",
      "redis.locations.get",
      "redis.locations.list",
      "redis.operations.cancel",
      "redis.operations.delete",
      "redis.operations.get",
      "redis.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/redis.dbConnectionUser",
    "title": "Cloud Memorystore Redis Db Connection User",
    "description": "Access to connecting to Redis Server db.",
    "includedPermissions": [
      "redis.clusters.connect"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/redis.editor",
    "title": "Cloud Memorystore Redis Editor",
    "description": "Read-Write access to Redis instances and related resources.",
    "includedPermissions": [
      "compute.networks.list",
      "redis.clusters.get",
      "redis.clusters.list",
      "redis.clusters.update",
      "redis.instances.failover",
      "redis.instances.get",
      "redis.instances.list",
      "redis.instances.update",
      "redis.locations.get",
      "redis.locations.list",
      "redis.operations.cancel",
      "redis.operations.delete",
      "redis.operations.get",
      "redis.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/redis.serviceAgent",
    "title": "Cloud Memorystore Redis Service Agent",
    "description": "Gives Cloud Memorystore Redis service account access to managed resource",
    "includedPermissions": [
      "compute.globalOperations.get",
      "compute.networks.addPeering",
      "compute.networks.get",
      "compute.networks.removePeering",
      "compute.networks.update",
      "compute.projects.get",
      "compute.routes.get",
      "compute.routes.list",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.timeSeries.create",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/redis.viewer",
    "title": "Cloud Memorystore Redis Viewer",
    "description": "Read-only access to Redis instances and related resources.",
    "includedPermissions": [
      "redis.clusters.get",
      "redis.clusters.list",
      "redis.instances.get",
      "redis.instances.list",
      "redis.locations.get",
      "redis.locations.list",
      "redis.operations.get",
      "redis.operations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/redisenterprisecloud.admin",
    "title": "Redis Enterprise Cloud Admin",
    "description": "This role is managed by Redis Labs, not Google.",
    "includedPermissions": [
      "gcp.redisenterprise.com/databases.create",
      "gcp.redisenterprise.com/databases.delete",
      "gcp.redisenterprise.com/databases.get",
      "gcp.redisenterprise.com/databases.list",
      "gcp.redisenterprise.com/databases.update",
      "gcp.redisenterprise.com/subscriptions.create",
      "gcp.redisenterprise.com/subscriptions.delete",
      "gcp.redisenterprise.com/subscriptions.get",
      "gcp.redisenterprise.com/subscriptions.list",
      "gcp.redisenterprise.com/subscriptions.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/redisenterprisecloud.viewer",
    "title": "Redis Enterprise Cloud Viewer",
    "description": "This role is managed by Redis Labs, not Google.",
    "includedPermissions": [
      "gcp.redisenterprise.com/databases.get",
      "gcp.redisenterprise.com/databases.list",
      "gcp.redisenterprise.com/subscriptions.get",
      "gcp.redisenterprise.com/subscriptions.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/remotebuildexecution.actionCacheWriter",
    "title": "Remote Build Execution Action Cache Writer",
    "description": "Remote Build Execution Action Cache Writer",
    "includedPermissions": [
      "remotebuildexecution.actions.set",
      "remotebuildexecution.blobs.create"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/remotebuildexecution.artifactAdmin",
    "title": "Remote Build Execution Artifact Admin",
    "description": "Remote Build Execution Artifact Admin",
    "includedPermissions": [
      "remotebuildexecution.actions.create",
      "remotebuildexecution.actions.delete",
      "remotebuildexecution.actions.get",
      "remotebuildexecution.blobs.create",
      "remotebuildexecution.blobs.get",
      "remotebuildexecution.logstreams.create",
      "remotebuildexecution.logstreams.get",
      "remotebuildexecution.logstreams.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/remotebuildexecution.artifactCreator",
    "title": "Remote Build Execution Artifact Creator",
    "description": "Remote Build Execution Artifact Creator",
    "includedPermissions": [
      "remotebuildexecution.actions.create",
      "remotebuildexecution.actions.get",
      "remotebuildexecution.blobs.create",
      "remotebuildexecution.blobs.get",
      "remotebuildexecution.logstreams.create",
      "remotebuildexecution.logstreams.get",
      "remotebuildexecution.logstreams.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/remotebuildexecution.artifactViewer",
    "title": "Remote Build Execution Artifact Viewer",
    "description": "Remote Build Execution Artifact Viewer",
    "includedPermissions": [
      "remotebuildexecution.actions.get",
      "remotebuildexecution.blobs.get",
      "remotebuildexecution.logstreams.get"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/remotebuildexecution.configurationAdmin",
    "title": "Remote Build Execution Configuration Admin",
    "description": "Remote Build Execution Configuration Admin",
    "includedPermissions": [
      "remotebuildexecution.instances.create",
      "remotebuildexecution.instances.delete",
      "remotebuildexecution.instances.get",
      "remotebuildexecution.instances.list",
      "remotebuildexecution.instances.update",
      "remotebuildexecution.workerpools.create",
      "remotebuildexecution.workerpools.delete",
      "remotebuildexecution.workerpools.get",
      "remotebuildexecution.workerpools.list",
      "remotebuildexecution.workerpools.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/remotebuildexecution.configurationViewer",
    "title": "Remote Build Execution Configuration Viewer",
    "description": "Remote Build Execution Configuration Viewer",
    "includedPermissions": [
      "remotebuildexecution.instances.get",
      "remotebuildexecution.instances.list",
      "remotebuildexecution.workerpools.get",
      "remotebuildexecution.workerpools.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/remotebuildexecution.logstreamWriter",
    "title": "Remote Build Execution Logstream Writer",
    "description": "Remote Build Execution Logstream Writer",
    "includedPermissions": [
      "remotebuildexecution.logstreams.create",
      "remotebuildexecution.logstreams.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/remotebuildexecution.reservationAdmin",
    "title": "Remote Build Execution Reservation Admin",
    "description": "Remote Build Execution Reservation Admin",
    "includedPermissions": [
      "remotebuildexecution.actions.create",
      "remotebuildexecution.actions.delete",
      "remotebuildexecution.actions.get"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/remotebuildexecution.serviceAgent",
    "title": "Remote Build Execution Service Agent",
    "description": "Gives Remote Build Execution service account access to managed resources.",
    "includedPermissions": [
      "remotebuildexecution.actions.update",
      "remotebuildexecution.blobs.create",
      "remotebuildexecution.blobs.get",
      "remotebuildexecution.botsessions.create",
      "remotebuildexecution.botsessions.update",
      "remotebuildexecution.logstreams.create",
      "remotebuildexecution.logstreams.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/remotebuildexecution.worker",
    "title": "Remote Build Execution Worker",
    "description": "Remote Build Execution Worker",
    "includedPermissions": [
      "remotebuildexecution.actions.update",
      "remotebuildexecution.blobs.create",
      "remotebuildexecution.blobs.get",
      "remotebuildexecution.botsessions.create",
      "remotebuildexecution.botsessions.update",
      "remotebuildexecution.logstreams.create",
      "remotebuildexecution.logstreams.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/resourcemanager.folderAdmin",
    "title": "Folder Admin",
    "description": "Access and administer a folder and all of its sub-resources.",
    "includedPermissions": [
      "essentialcontacts.contacts.create",
      "essentialcontacts.contacts.delete",
      "essentialcontacts.contacts.get",
      "essentialcontacts.contacts.list",
      "essentialcontacts.contacts.send",
      "essentialcontacts.contacts.update",
      "orgpolicy.constraints.list",
      "orgpolicy.policies.list",
      "orgpolicy.policy.get",
      "resourcemanager.folders.create",
      "resourcemanager.folders.delete",
      "resourcemanager.folders.get",
      "resourcemanager.folders.getIamPolicy",
      "resourcemanager.folders.list",
      "resourcemanager.folders.move",
      "resourcemanager.folders.setIamPolicy",
      "resourcemanager.folders.undelete",
      "resourcemanager.folders.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list",
      "resourcemanager.projects.move",
      "resourcemanager.projects.setIamPolicy"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/resourcemanager.folderCreator",
    "title": "Folder Creator",
    "description": "Create folder and view all of its sub-resources.",
    "includedPermissions": [
      "essentialcontacts.contacts.get",
      "essentialcontacts.contacts.list",
      "orgpolicy.constraints.list",
      "orgpolicy.policies.list",
      "orgpolicy.policy.get",
      "resourcemanager.folders.create",
      "resourcemanager.folders.get",
      "resourcemanager.folders.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/resourcemanager.folderEditor",
    "title": "Folder Editor",
    "description": "Edit, delete, and undelete a folder and all of its child resources.",
    "includedPermissions": [
      "essentialcontacts.contacts.get",
      "essentialcontacts.contacts.list",
      "orgpolicy.constraints.list",
      "orgpolicy.policies.list",
      "orgpolicy.policy.get",
      "resourcemanager.folders.delete",
      "resourcemanager.folders.get",
      "resourcemanager.folders.getIamPolicy",
      "resourcemanager.folders.list",
      "resourcemanager.folders.undelete",
      "resourcemanager.folders.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/resourcemanager.folderIamAdmin",
    "title": "Folder IAM Admin",
    "description": "Access and administer a folder IAM policies.",
    "includedPermissions": [
      "resourcemanager.folders.get",
      "resourcemanager.folders.getIamPolicy",
      "resourcemanager.folders.setIamPolicy"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/resourcemanager.folderMover",
    "title": "Folder Mover",
    "description": "Move a folder and all of its child resources.",
    "includedPermissions": [
      "resourcemanager.folders.move",
      "resourcemanager.projects.move"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/resourcemanager.folderViewer",
    "title": "Folder Viewer",
    "description": "Access to view a folder and all of its child resources.",
    "includedPermissions": [
      "essentialcontacts.contacts.get",
      "essentialcontacts.contacts.list",
      "orgpolicy.constraints.list",
      "orgpolicy.policies.list",
      "orgpolicy.policy.get",
      "resourcemanager.folders.get",
      "resourcemanager.folders.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/resourcemanager.lienModifier",
    "title": "Project Lien Modifier",
    "description": "Access to modify Liens on projects.",
    "includedPermissions": [
      "resourcemanager.projects.updateLiens"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/resourcemanager.organizationAdmin",
    "title": "Organization Administrator",
    "description": "Access to manage IAM policies and view organization policies for organizations, folders, and projects.",
    "includedPermissions": [
      "essentialcontacts.contacts.create",
      "essentialcontacts.contacts.delete",
      "essentialcontacts.contacts.get",
      "essentialcontacts.contacts.list",
      "essentialcontacts.contacts.send",
      "essentialcontacts.contacts.update",
      "orgpolicy.constraints.list",
      "orgpolicy.policies.list",
      "orgpolicy.policy.get",
      "resourcemanager.folders.get",
      "resourcemanager.folders.getIamPolicy",
      "resourcemanager.folders.list",
      "resourcemanager.folders.setIamPolicy",
      "resourcemanager.organizations.get",
      "resourcemanager.organizations.getIamPolicy",
      "resourcemanager.organizations.setIamPolicy",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list",
      "resourcemanager.projects.setIamPolicy"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/resourcemanager.organizationViewer",
    "title": "Organization Viewer",
    "description": "Access only to view an Organization.",
    "includedPermissions": [
      "resourcemanager.organizations.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/resourcemanager.projectCreator",
    "title": "Project Creator",
    "description": "Access to create new GCP projects.",
    "includedPermissions": [
      "resourcemanager.organizations.get",
      "resourcemanager.projects.create"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/resourcemanager.projectDeleter",
    "title": "Project Deleter",
    "description": "Access to delete GCP projects.",
    "includedPermissions": [
      "resourcemanager.projects.delete"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/resourcemanager.projectIamAdmin",
    "title": "Project IAM Admin",
    "description": "Access and administer a project IAM policies.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.setIamPolicy"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/resourcemanager.projectMover",
    "title": "Project Mover",
    "description": "Access to update and move a project",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.move",
      "resourcemanager.projects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/resourcemanager.tagAdmin",
    "title": "Tag Administrator",
    "description": "Access to create, delete, update, and manage access to Tags",
    "includedPermissions": [
      "resourcemanager.tagHolds.create",
      "resourcemanager.tagHolds.delete",
      "resourcemanager.tagHolds.list",
      "resourcemanager.tagKeys.create",
      "resourcemanager.tagKeys.delete",
      "resourcemanager.tagKeys.get",
      "resourcemanager.tagKeys.getIamPolicy",
      "resourcemanager.tagKeys.list",
      "resourcemanager.tagKeys.setIamPolicy",
      "resourcemanager.tagKeys.update",
      "resourcemanager.tagValues.create",
      "resourcemanager.tagValues.delete",
      "resourcemanager.tagValues.get",
      "resourcemanager.tagValues.getIamPolicy",
      "resourcemanager.tagValues.list",
      "resourcemanager.tagValues.setIamPolicy",
      "resourcemanager.tagValues.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/resourcemanager.tagHoldAdmin",
    "title": "Tag Hold Administrator",
    "description": "Access to create, delete and list TagHolds under a TagValue",
    "includedPermissions": [
      "resourcemanager.tagHolds.create",
      "resourcemanager.tagHolds.delete",
      "resourcemanager.tagHolds.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/resourcemanager.tagUser",
    "title": "Tag User",
    "description": "Access to list Tags and manage their associations with resources",
    "includedPermissions": [
      "artifactregistry.repositories.createTagBinding",
      "artifactregistry.repositories.deleteTagBinding",
      "artifactregistry.repositories.listEffectiveTags",
      "artifactregistry.repositories.listTagBindings",
      "bigquery.datasets.createTagBinding",
      "bigquery.datasets.deleteTagBinding",
      "bigquery.datasets.listEffectiveTags",
      "bigquery.datasets.listTagBindings",
      "bigtable.instances.createTagBinding",
      "bigtable.instances.deleteTagBinding",
      "bigtable.instances.listEffectiveTags",
      "bigtable.instances.listTagBindings",
      "cloudkms.keyRings.createTagBinding",
      "cloudkms.keyRings.deleteTagBinding",
      "cloudkms.keyRings.listEffectiveTags",
      "cloudkms.keyRings.listTagBindings",
      "cloudsql.instances.createTagBinding",
      "cloudsql.instances.deleteTagBinding",
      "cloudsql.instances.listEffectiveTags",
      "cloudsql.instances.listTagBindings",
      "compute.backendBuckets.createTagBinding",
      "compute.backendBuckets.deleteTagBinding",
      "compute.backendBuckets.listEffectiveTags",
      "compute.backendBuckets.listTagBindings",
      "compute.backendServices.createTagBinding",
      "compute.backendServices.deleteTagBinding",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.disks.createTagBinding",
      "compute.disks.deleteTagBinding",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.firewallPolicies.createTagBinding",
      "compute.firewallPolicies.deleteTagBinding",
      "compute.firewallPolicies.listEffectiveTags",
      "compute.firewallPolicies.listTagBindings",
      "compute.firewalls.createTagBinding",
      "compute.firewalls.deleteTagBinding",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.forwardingRules.createTagBinding",
      "compute.forwardingRules.deleteTagBinding",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.globalForwardingRules.createTagBinding",
      "compute.globalForwardingRules.deleteTagBinding",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalNetworkEndpointGroups.createTagBinding",
      "compute.globalNetworkEndpointGroups.deleteTagBinding",
      "compute.globalNetworkEndpointGroups.listEffectiveTags",
      "compute.globalNetworkEndpointGroups.listTagBindings",
      "compute.healthChecks.createTagBinding",
      "compute.healthChecks.deleteTagBinding",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.httpHealthChecks.createTagBinding",
      "compute.httpHealthChecks.deleteTagBinding",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.createTagBinding",
      "compute.httpsHealthChecks.deleteTagBinding",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.images.createTagBinding",
      "compute.images.deleteTagBinding",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.instances.createTagBinding",
      "compute.instances.deleteTagBinding",
      "compute.instances.listEffectiveTags",
      "compute.instances.listTagBindings",
      "compute.networkEndpointGroups.createTagBinding",
      "compute.networkEndpointGroups.deleteTagBinding",
      "compute.networkEndpointGroups.listEffectiveTags",
      "compute.networkEndpointGroups.listTagBindings",
      "compute.networks.createTagBinding",
      "compute.networks.deleteTagBinding",
      "compute.networks.listEffectiveTags",
      "compute.networks.listTagBindings",
      "compute.regionBackendServices.createTagBinding",
      "compute.regionBackendServices.deleteTagBinding",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionFirewallPolicies.createTagBinding",
      "compute.regionFirewallPolicies.deleteTagBinding",
      "compute.regionFirewallPolicies.listEffectiveTags",
      "compute.regionFirewallPolicies.listTagBindings",
      "compute.regionHealthChecks.createTagBinding",
      "compute.regionHealthChecks.deleteTagBinding",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionNetworkEndpointGroups.createTagBinding",
      "compute.regionNetworkEndpointGroups.deleteTagBinding",
      "compute.regionNetworkEndpointGroups.listEffectiveTags",
      "compute.regionNetworkEndpointGroups.listTagBindings",
      "compute.regionSecurityPolicies.createTagBinding",
      "compute.regionSecurityPolicies.deleteTagBinding",
      "compute.regionSecurityPolicies.listEffectiveTags",
      "compute.regionSecurityPolicies.listTagBindings",
      "compute.regionSslCertificates.createTagBinding",
      "compute.regionSslCertificates.deleteTagBinding",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionTargetHttpProxies.createTagBinding",
      "compute.regionTargetHttpProxies.deleteTagBinding",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.createTagBinding",
      "compute.regionTargetHttpsProxies.deleteTagBinding",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionUrlMaps.createTagBinding",
      "compute.regionUrlMaps.deleteTagBinding",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.routes.createTagBinding",
      "compute.routes.deleteTagBinding",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.securityPolicies.createTagBinding",
      "compute.securityPolicies.deleteTagBinding",
      "compute.securityPolicies.listEffectiveTags",
      "compute.securityPolicies.listTagBindings",
      "compute.snapshots.createTagBinding",
      "compute.snapshots.deleteTagBinding",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.sslCertificates.createTagBinding",
      "compute.sslCertificates.deleteTagBinding",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.createTagBinding",
      "compute.sslPolicies.deleteTagBinding",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.subnetworks.createTagBinding",
      "compute.subnetworks.deleteTagBinding",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.targetHttpProxies.createTagBinding",
      "compute.targetHttpProxies.deleteTagBinding",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpsProxies.createTagBinding",
      "compute.targetHttpsProxies.deleteTagBinding",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetInstances.createTagBinding",
      "compute.targetInstances.deleteTagBinding",
      "compute.targetInstances.listEffectiveTags",
      "compute.targetInstances.listTagBindings",
      "compute.targetPools.createTagBinding",
      "compute.targetPools.deleteTagBinding",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.targetSslProxies.createTagBinding",
      "compute.targetSslProxies.deleteTagBinding",
      "compute.targetSslProxies.listEffectiveTags",
      "compute.targetSslProxies.listTagBindings",
      "compute.targetTcpProxies.createTagBinding",
      "compute.targetTcpProxies.deleteTagBinding",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.urlMaps.createTagBinding",
      "compute.urlMaps.deleteTagBinding",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "container.clusters.createTagBinding",
      "container.clusters.deleteTagBinding",
      "container.clusters.listEffectiveTags",
      "container.clusters.listTagBindings",
      "datastore.databases.createTagBinding",
      "datastore.databases.deleteTagBinding",
      "datastore.databases.listEffectiveTags",
      "datastore.databases.listTagBindings",
      "datastream.connectionProfiles.createTagBinding",
      "datastream.connectionProfiles.deleteTagBinding",
      "datastream.connectionProfiles.listEffectiveTags",
      "datastream.connectionProfiles.listTagBindings",
      "datastream.privateConnections.createTagBinding",
      "datastream.privateConnections.deleteTagBinding",
      "datastream.privateConnections.listEffectiveTags",
      "datastream.privateConnections.listTagBindings",
      "datastream.streams.createTagBinding",
      "datastream.streams.deleteTagBinding",
      "datastream.streams.listEffectiveTags",
      "datastream.streams.listTagBindings",
      "domains.registrations.createTagBinding",
      "domains.registrations.deleteTagBinding",
      "domains.registrations.listEffectiveTags",
      "domains.registrations.listTagBindings",
      "file.backups.createTagBinding",
      "file.backups.deleteTagBinding",
      "file.backups.listEffectiveTags",
      "file.backups.listTagBindings",
      "file.instances.createTagBinding",
      "file.instances.deleteTagBinding",
      "file.instances.listEffectiveTags",
      "file.instances.listTagBindings",
      "file.snapshots.createTagBinding",
      "file.snapshots.deleteTagBinding",
      "file.snapshots.listEffectiveTags",
      "file.snapshots.listTagBindings",
      "managedidentities.domains.createTagBinding",
      "managedidentities.domains.deleteTagBinding",
      "managedidentities.domains.listEffectiveTags",
      "managedidentities.domains.listTagBindings",
      "resourcemanager.hierarchyNodes.createTagBinding",
      "resourcemanager.hierarchyNodes.deleteTagBinding",
      "resourcemanager.hierarchyNodes.listEffectiveTags",
      "resourcemanager.hierarchyNodes.listTagBindings",
      "resourcemanager.projects.get",
      "resourcemanager.tagKeys.get",
      "resourcemanager.tagKeys.list",
      "resourcemanager.tagValueBindings.create",
      "resourcemanager.tagValueBindings.delete",
      "resourcemanager.tagValues.get",
      "resourcemanager.tagValues.list",
      "run.services.createTagBinding",
      "run.services.deleteTagBinding",
      "run.services.listEffectiveTags",
      "run.services.listTagBindings",
      "spanner.instances.createTagBinding",
      "spanner.instances.deleteTagBinding",
      "spanner.instances.listEffectiveTags",
      "spanner.instances.listTagBindings",
      "storage.buckets.createTagBinding",
      "storage.buckets.deleteTagBinding",
      "storage.buckets.listEffectiveTags",
      "storage.buckets.listTagBindings"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/resourcemanager.tagViewer",
    "title": "Tag Viewer",
    "description": "Access to list Tags and their associations with resources",
    "includedPermissions": [
      "artifactregistry.repositories.listEffectiveTags",
      "artifactregistry.repositories.listTagBindings",
      "bigquery.datasets.listEffectiveTags",
      "bigquery.datasets.listTagBindings",
      "bigtable.instances.listEffectiveTags",
      "bigtable.instances.listTagBindings",
      "cloudkms.keyRings.listEffectiveTags",
      "cloudkms.keyRings.listTagBindings",
      "cloudsql.instances.listEffectiveTags",
      "cloudsql.instances.listTagBindings",
      "compute.backendBuckets.listEffectiveTags",
      "compute.backendBuckets.listTagBindings",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.firewallPolicies.listEffectiveTags",
      "compute.firewallPolicies.listTagBindings",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalNetworkEndpointGroups.listEffectiveTags",
      "compute.globalNetworkEndpointGroups.listTagBindings",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.instances.listEffectiveTags",
      "compute.instances.listTagBindings",
      "compute.networkEndpointGroups.listEffectiveTags",
      "compute.networkEndpointGroups.listTagBindings",
      "compute.networks.listEffectiveTags",
      "compute.networks.listTagBindings",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionFirewallPolicies.listEffectiveTags",
      "compute.regionFirewallPolicies.listTagBindings",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionNetworkEndpointGroups.listEffectiveTags",
      "compute.regionNetworkEndpointGroups.listTagBindings",
      "compute.regionSecurityPolicies.listEffectiveTags",
      "compute.regionSecurityPolicies.listTagBindings",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.securityPolicies.listEffectiveTags",
      "compute.securityPolicies.listTagBindings",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetInstances.listEffectiveTags",
      "compute.targetInstances.listTagBindings",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.targetSslProxies.listEffectiveTags",
      "compute.targetSslProxies.listTagBindings",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "container.clusters.listEffectiveTags",
      "container.clusters.listTagBindings",
      "datastore.databases.listEffectiveTags",
      "datastore.databases.listTagBindings",
      "datastream.connectionProfiles.listEffectiveTags",
      "datastream.connectionProfiles.listTagBindings",
      "datastream.privateConnections.listEffectiveTags",
      "datastream.privateConnections.listTagBindings",
      "datastream.streams.listEffectiveTags",
      "datastream.streams.listTagBindings",
      "domains.registrations.listEffectiveTags",
      "domains.registrations.listTagBindings",
      "file.backups.listEffectiveTags",
      "file.backups.listTagBindings",
      "file.instances.listEffectiveTags",
      "file.instances.listTagBindings",
      "file.snapshots.listEffectiveTags",
      "file.snapshots.listTagBindings",
      "managedidentities.domains.listEffectiveTags",
      "managedidentities.domains.listTagBindings",
      "resourcemanager.hierarchyNodes.listEffectiveTags",
      "resourcemanager.hierarchyNodes.listTagBindings",
      "resourcemanager.tagHolds.list",
      "resourcemanager.tagKeys.get",
      "resourcemanager.tagKeys.list",
      "resourcemanager.tagValues.get",
      "resourcemanager.tagValues.list",
      "run.services.listEffectiveTags",
      "run.services.listTagBindings",
      "spanner.instances.listEffectiveTags",
      "spanner.instances.listTagBindings",
      "storage.buckets.listEffectiveTags",
      "storage.buckets.listTagBindings"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/resourcesettings.admin",
    "title": "Resource Settings Administrator",
    "description": "Provides admin capabilities to set Resource Setting Values on resources.",
    "includedPermissions": [
      "resourcesettings.settings.get",
      "resourcesettings.settings.list",
      "resourcesettings.settings.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/resourcesettings.viewer",
    "title": "Resource Settings Viewer",
    "description": "Provides capabilities to view Resource Settings and Resource Setting Values on resources.",
    "includedPermissions": [
      "resourcesettings.settings.get",
      "resourcesettings.settings.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/retail.admin",
    "title": "Retail Admin",
    "description": "Full access to Retail api resources.",
    "includedPermissions": [
      "automlrecommendations.apiKeys.create",
      "automlrecommendations.apiKeys.delete",
      "automlrecommendations.catalogItems.create",
      "automlrecommendations.catalogItems.delete",
      "automlrecommendations.catalogItems.get",
      "automlrecommendations.catalogItems.list",
      "automlrecommendations.catalogItems.update",
      "automlrecommendations.catalogs.getStats",
      "automlrecommendations.catalogs.list",
      "automlrecommendations.catalogs.update",
      "automlrecommendations.eventStores.getStats",
      "automlrecommendations.events.create",
      "automlrecommendations.events.list",
      "automlrecommendations.events.purge",
      "automlrecommendations.events.rejoin",
      "automlrecommendations.placements.create",
      "automlrecommendations.placements.delete",
      "automlrecommendations.placements.getStats",
      "automlrecommendations.placements.list",
      "automlrecommendations.recommendations.create",
      "automlrecommendations.recommendations.delete",
      "automlrecommendations.recommendations.list",
      "automlrecommendations.recommendations.pause",
      "automlrecommendations.recommendations.resume",
      "automlrecommendations.recommendations.update",
      "retail.attributesConfigs.addCatalogAttribute",
      "retail.attributesConfigs.batchRemoveCatalogAttributes",
      "retail.attributesConfigs.exportCatalogAttributes",
      "retail.attributesConfigs.get",
      "retail.attributesConfigs.importCatalogAttributes",
      "retail.attributesConfigs.removeCatalogAttribute",
      "retail.attributesConfigs.replaceCatalogAttribute",
      "retail.attributesConfigs.update",
      "retail.catalogs.completeQuery",
      "retail.catalogs.import",
      "retail.catalogs.list",
      "retail.catalogs.update",
      "retail.controls.create",
      "retail.controls.delete",
      "retail.controls.export",
      "retail.controls.get",
      "retail.controls.import",
      "retail.controls.list",
      "retail.controls.update",
      "retail.models.create",
      "retail.models.delete",
      "retail.models.get",
      "retail.models.list",
      "retail.models.pause",
      "retail.models.resume",
      "retail.models.tune",
      "retail.models.update",
      "retail.operations.get",
      "retail.operations.list",
      "retail.placements.predict",
      "retail.placements.search",
      "retail.products.create",
      "retail.products.delete",
      "retail.products.export",
      "retail.products.get",
      "retail.products.import",
      "retail.products.list",
      "retail.products.purge",
      "retail.products.setSponsorship",
      "retail.products.update",
      "retail.retailProjects.get",
      "retail.servingConfigs.create",
      "retail.servingConfigs.delete",
      "retail.servingConfigs.get",
      "retail.servingConfigs.list",
      "retail.servingConfigs.predict",
      "retail.servingConfigs.search",
      "retail.servingConfigs.update",
      "retail.userEvents.create",
      "retail.userEvents.import",
      "retail.userEvents.purge",
      "retail.userEvents.rejoin"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/retail.editor",
    "title": "Retail Editor",
    "description": "Full access to Retail api resources except purge, rejoin, and setSponsorship.",
    "includedPermissions": [
      "automlrecommendations.apiKeys.create",
      "automlrecommendations.apiKeys.delete",
      "automlrecommendations.catalogItems.create",
      "automlrecommendations.catalogItems.delete",
      "automlrecommendations.catalogItems.get",
      "automlrecommendations.catalogItems.list",
      "automlrecommendations.catalogItems.update",
      "automlrecommendations.catalogs.getStats",
      "automlrecommendations.catalogs.list",
      "automlrecommendations.catalogs.update",
      "automlrecommendations.eventStores.getStats",
      "automlrecommendations.events.create",
      "automlrecommendations.events.list",
      "automlrecommendations.placements.create",
      "automlrecommendations.placements.delete",
      "automlrecommendations.placements.getStats",
      "automlrecommendations.placements.list",
      "automlrecommendations.recommendations.create",
      "automlrecommendations.recommendations.delete",
      "automlrecommendations.recommendations.list",
      "automlrecommendations.recommendations.pause",
      "automlrecommendations.recommendations.resume",
      "automlrecommendations.recommendations.update",
      "retail.attributesConfigs.addCatalogAttribute",
      "retail.attributesConfigs.exportCatalogAttributes",
      "retail.attributesConfigs.get",
      "retail.attributesConfigs.importCatalogAttributes",
      "retail.attributesConfigs.replaceCatalogAttribute",
      "retail.attributesConfigs.update",
      "retail.catalogs.completeQuery",
      "retail.catalogs.import",
      "retail.catalogs.list",
      "retail.catalogs.update",
      "retail.controls.create",
      "retail.controls.delete",
      "retail.controls.export",
      "retail.controls.get",
      "retail.controls.import",
      "retail.controls.list",
      "retail.controls.update",
      "retail.models.create",
      "retail.models.delete",
      "retail.models.get",
      "retail.models.list",
      "retail.models.pause",
      "retail.models.resume",
      "retail.models.tune",
      "retail.models.update",
      "retail.operations.get",
      "retail.operations.list",
      "retail.placements.predict",
      "retail.placements.search",
      "retail.products.create",
      "retail.products.delete",
      "retail.products.export",
      "retail.products.get",
      "retail.products.import",
      "retail.products.list",
      "retail.products.update",
      "retail.retailProjects.get",
      "retail.servingConfigs.create",
      "retail.servingConfigs.delete",
      "retail.servingConfigs.get",
      "retail.servingConfigs.list",
      "retail.servingConfigs.predict",
      "retail.servingConfigs.search",
      "retail.servingConfigs.update",
      "retail.userEvents.create",
      "retail.userEvents.import"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/retail.serviceAgent",
    "title": "Retail Service Agent",
    "description": "Retail service uploads product feeds and user events from Cloud Storage and BigQuery, reports results to the customer Cloud Storage bucket, writes logs to customer projects, and writes and reads Stackdriver metrics for customer projects.",
    "includedPermissions": [
      "bigquery.datasets.create",
      "bigquery.datasets.get",
      "bigquery.jobs.create",
      "bigquery.jobs.get",
      "bigquery.jobs.list",
      "bigquery.jobs.update",
      "bigquery.tables.create",
      "bigquery.tables.export",
      "bigquery.tables.get",
      "bigquery.tables.getData",
      "bigquery.tables.list",
      "bigquery.tables.update",
      "bigquery.tables.updateData",
      "cloudnotifications.activities.list",
      "dataflow.jobs.cancel",
      "dataflow.jobs.create",
      "dataflow.jobs.get",
      "dataflow.jobs.list",
      "dataflow.jobs.snapshot",
      "dataflow.jobs.updateContents",
      "dataflow.messages.list",
      "dataflow.metrics.get",
      "logging.logEntries.create",
      "logging.logEntries.route",
      "monitoring.alertPolicies.get",
      "monitoring.alertPolicies.list",
      "monitoring.dashboards.get",
      "monitoring.dashboards.list",
      "monitoring.groups.get",
      "monitoring.groups.list",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.notificationChannelDescriptors.get",
      "monitoring.notificationChannelDescriptors.list",
      "monitoring.notificationChannels.get",
      "monitoring.notificationChannels.list",
      "monitoring.publicWidgets.get",
      "monitoring.publicWidgets.list",
      "monitoring.services.get",
      "monitoring.services.list",
      "monitoring.slos.get",
      "monitoring.slos.list",
      "monitoring.snoozes.get",
      "monitoring.snoozes.list",
      "monitoring.timeSeries.create",
      "monitoring.timeSeries.list",
      "monitoring.uptimeCheckConfigs.get",
      "monitoring.uptimeCheckConfigs.list",
      "opsconfigmonitoring.resourceMetadata.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "stackdriver.projects.get",
      "stackdriver.resourceMetadata.list",
      "storage.buckets.create",
      "storage.buckets.get",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/retail.viewer",
    "title": "Retail Viewer",
    "description": "Grants access to read all resources in Retail.",
    "includedPermissions": [
      "automlrecommendations.catalogItems.get",
      "automlrecommendations.catalogItems.list",
      "automlrecommendations.catalogs.getStats",
      "automlrecommendations.catalogs.list",
      "automlrecommendations.eventStores.getStats",
      "automlrecommendations.events.list",
      "automlrecommendations.placements.getStats",
      "automlrecommendations.placements.list",
      "automlrecommendations.recommendations.list",
      "retail.attributesConfigs.exportCatalogAttributes",
      "retail.attributesConfigs.get",
      "retail.catalogs.completeQuery",
      "retail.catalogs.list",
      "retail.controls.export",
      "retail.controls.get",
      "retail.controls.list",
      "retail.models.get",
      "retail.models.list",
      "retail.operations.get",
      "retail.operations.list",
      "retail.placements.predict",
      "retail.placements.search",
      "retail.products.export",
      "retail.products.get",
      "retail.products.list",
      "retail.retailProjects.get",
      "retail.servingConfigs.get",
      "retail.servingConfigs.list",
      "retail.servingConfigs.predict",
      "retail.servingConfigs.search"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/riscconfigs.admin",
    "title": "RISC Configuration Admin",
    "description": "Read/write access to RISC config resources.",
    "includedPermissions": [
      "clientauthconfig.clients.list",
      "riscconfigurationservice.riscconfigs.createOrUpdate",
      "riscconfigurationservice.riscconfigs.delete",
      "riscconfigurationservice.riscconfigs.get"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/riscconfigs.viewer",
    "title": "RISC Configuration Viewer",
    "description": "Read-only access to RISC config resources.",
    "includedPermissions": [
      "clientauthconfig.clients.list",
      "riscconfigurationservice.riscconfigs.get"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/riskmanager.admin",
    "title": "Risk Manager Admin",
    "description": "Grants all Risk Manager permissions",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "riskmanager.controlScoreBreakdowns.get",
      "riskmanager.controlScoreBreakdowns.list",
      "riskmanager.operations.delete",
      "riskmanager.operations.get",
      "riskmanager.operations.list",
      "riskmanager.policies.get",
      "riskmanager.policies.list",
      "riskmanager.reports.create",
      "riskmanager.reports.delete",
      "riskmanager.reports.get",
      "riskmanager.reports.list",
      "riskmanager.reports.review",
      "riskmanager.reports.share",
      "riskmanager.serviceAccount.create",
      "riskmanager.settings.get",
      "riskmanager.settings.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/riskmanager.editor",
    "title": "Risk Manager Editor",
    "description": "Access to edit Risk Manager resources",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "riskmanager.controlScoreBreakdowns.get",
      "riskmanager.controlScoreBreakdowns.list",
      "riskmanager.operations.delete",
      "riskmanager.operations.get",
      "riskmanager.operations.list",
      "riskmanager.policies.get",
      "riskmanager.policies.list",
      "riskmanager.reports.create",
      "riskmanager.reports.delete",
      "riskmanager.reports.get",
      "riskmanager.reports.list",
      "riskmanager.serviceAccount.create",
      "riskmanager.settings.get",
      "riskmanager.settings.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/riskmanager.reviewer",
    "title": "Risk Manager Report Reviewer",
    "description": "Access to review Risk Manager reports",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "riskmanager.controlScoreBreakdowns.get",
      "riskmanager.controlScoreBreakdowns.list",
      "riskmanager.operations.get",
      "riskmanager.operations.list",
      "riskmanager.reports.get",
      "riskmanager.reports.list",
      "riskmanager.reports.review"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/riskmanager.serviceAgent",
    "title": "Risk Manager Service Agent",
    "description": "Service agent that grants Risk Manager service access to fetch findings for generating Reports",
    "includedPermissions": [
      "cloudasset.assets.analyzeIamPolicy",
      "cloudasset.assets.analyzeMove",
      "cloudasset.assets.analyzeOrgPolicy",
      "cloudasset.assets.exportAccessLevel",
      "cloudasset.assets.exportAccessPolicy",
      "cloudasset.assets.exportAiplatformBatchPredictionJobs",
      "cloudasset.assets.exportAiplatformCustomJobs",
      "cloudasset.assets.exportAiplatformDataLabelingJobs",
      "cloudasset.assets.exportAiplatformDatasets",
      "cloudasset.assets.exportAiplatformEndpoints",
      "cloudasset.assets.exportAiplatformHyperparameterTuningJobs",
      "cloudasset.assets.exportAiplatformMetadataStores",
      "cloudasset.assets.exportAiplatformModelDeploymentMonitoringJobs",
      "cloudasset.assets.exportAiplatformModels",
      "cloudasset.assets.exportAiplatformPipelineJobs",
      "cloudasset.assets.exportAiplatformSpecialistPools",
      "cloudasset.assets.exportAiplatformTrainingPipelines",
      "cloudasset.assets.exportAllAccessPolicy",
      "cloudasset.assets.exportAnthosConnectedCluster",
      "cloudasset.assets.exportAnthosedgeCluster",
      "cloudasset.assets.exportApigatewayApi",
      "cloudasset.assets.exportApigatewayApiConfig",
      "cloudasset.assets.exportApigatewayGateway",
      "cloudasset.assets.exportApikeysKeys",
      "cloudasset.assets.exportAppengineApplications",
      "cloudasset.assets.exportAppengineServices",
      "cloudasset.assets.exportAppengineVersions",
      "cloudasset.assets.exportArtifactregistryDockerImages",
      "cloudasset.assets.exportArtifactregistryRepositories",
      "cloudasset.assets.exportAssuredWorkloadsWorkloads",
      "cloudasset.assets.exportBeyondCorpApiGateways",
      "cloudasset.assets.exportBeyondCorpAppConnections",
      "cloudasset.assets.exportBeyondCorpAppConnectors",
      "cloudasset.assets.exportBeyondCorpAppGateways",
      "cloudasset.assets.exportBeyondCorpClientConnectorServices",
      "cloudasset.assets.exportBeyondCorpClientGateways",
      "cloudasset.assets.exportBigqueryDatasets",
      "cloudasset.assets.exportBigqueryModels",
      "cloudasset.assets.exportBigqueryTables",
      "cloudasset.assets.exportBigtableAppProfile",
      "cloudasset.assets.exportBigtableBackup",
      "cloudasset.assets.exportBigtableCluster",
      "cloudasset.assets.exportBigtableInstance",
      "cloudasset.assets.exportBigtableTable",
      "cloudasset.assets.exportCloudAssetFeeds",
      "cloudasset.assets.exportCloudDeployDeliveryPipelines",
      "cloudasset.assets.exportCloudDeployReleases",
      "cloudasset.assets.exportCloudDeployRollouts",
      "cloudasset.assets.exportCloudDeployTargets",
      "cloudasset.assets.exportCloudDocumentAIEvaluation",
      "cloudasset.assets.exportCloudDocumentAIHumanReviewConfig",
      "cloudasset.assets.exportCloudDocumentAILabelerPool",
      "cloudasset.assets.exportCloudDocumentAIProcessor",
      "cloudasset.assets.exportCloudDocumentAIProcessorVersion",
      "cloudasset.assets.exportCloudbillingBillingAccounts",
      "cloudasset.assets.exportCloudbillingProjectBillingInfos",
      "cloudasset.assets.exportCloudfunctionsFunctions",
      "cloudasset.assets.exportCloudfunctionsGen2Functions",
      "cloudasset.assets.exportCloudkmsCryptoKeyVersions",
      "cloudasset.assets.exportCloudkmsCryptoKeys",
      "cloudasset.assets.exportCloudkmsEkmConnections",
      "cloudasset.assets.exportCloudkmsImportJobs",
      "cloudasset.assets.exportCloudkmsKeyRings",
      "cloudasset.assets.exportCloudmemcacheInstances",
      "cloudasset.assets.exportCloudresourcemanagerFolders",
      "cloudasset.assets.exportCloudresourcemanagerOrganizations",
      "cloudasset.assets.exportCloudresourcemanagerProjects",
      "cloudasset.assets.exportCloudresourcemanagerTagBindings",
      "cloudasset.assets.exportCloudresourcemanagerTagKeys",
      "cloudasset.assets.exportCloudresourcemanagerTagValues",
      "cloudasset.assets.exportComposerEnvironments",
      "cloudasset.assets.exportComputeAddress",
      "cloudasset.assets.exportComputeAutoscalers",
      "cloudasset.assets.exportComputeBackendBuckets",
      "cloudasset.assets.exportComputeBackendServices",
      "cloudasset.assets.exportComputeCommitments",
      "cloudasset.assets.exportComputeDisks",
      "cloudasset.assets.exportComputeExternalVpnGateways",
      "cloudasset.assets.exportComputeFirewallPolicies",
      "cloudasset.assets.exportComputeFirewalls",
      "cloudasset.assets.exportComputeForwardingRules",
      "cloudasset.assets.exportComputeGlobalAddress",
      "cloudasset.assets.exportComputeGlobalForwardingRules",
      "cloudasset.assets.exportComputeHealthChecks",
      "cloudasset.assets.exportComputeHttpHealthChecks",
      "cloudasset.assets.exportComputeHttpsHealthChecks",
      "cloudasset.assets.exportComputeImages",
      "cloudasset.assets.exportComputeInstanceGroupManagers",
      "cloudasset.assets.exportComputeInstanceGroups",
      "cloudasset.assets.exportComputeInstanceTemplates",
      "cloudasset.assets.exportComputeInstances",
      "cloudasset.assets.exportComputeInterconnect",
      "cloudasset.assets.exportComputeInterconnectAttachment",
      "cloudasset.assets.exportComputeLicenses",
      "cloudasset.assets.exportComputeNetworkEndpointGroups",
      "cloudasset.assets.exportComputeNetworks",
      "cloudasset.assets.exportComputeNodeGroups",
      "cloudasset.assets.exportComputeNodeTemplates",
      "cloudasset.assets.exportComputePacketMirrorings",
      "cloudasset.assets.exportComputeProjects",
      "cloudasset.assets.exportComputeRegionAutoscaler",
      "cloudasset.assets.exportComputeRegionBackendServices",
      "cloudasset.assets.exportComputeRegionDisk",
      "cloudasset.assets.exportComputeRegionInstanceGroup",
      "cloudasset.assets.exportComputeRegionInstanceGroupManager",
      "cloudasset.assets.exportComputeReservations",
      "cloudasset.assets.exportComputeResourcePolicies",
      "cloudasset.assets.exportComputeRouters",
      "cloudasset.assets.exportComputeRoutes",
      "cloudasset.assets.exportComputeSecurityPolicy",
      "cloudasset.assets.exportComputeServiceAttachments",
      "cloudasset.assets.exportComputeSnapshots",
      "cloudasset.assets.exportComputeSslCertificates",
      "cloudasset.assets.exportComputeSslPolicies",
      "cloudasset.assets.exportComputeSubnetworks",
      "cloudasset.assets.exportComputeTargetHttpProxies",
      "cloudasset.assets.exportComputeTargetHttpsProxies",
      "cloudasset.assets.exportComputeTargetInstances",
      "cloudasset.assets.exportComputeTargetPools",
      "cloudasset.assets.exportComputeTargetSslProxies",
      "cloudasset.assets.exportComputeTargetTcpProxies",
      "cloudasset.assets.exportComputeTargetVpnGateways",
      "cloudasset.assets.exportComputeUrlMaps",
      "cloudasset.assets.exportComputeVpnGateways",
      "cloudasset.assets.exportComputeVpnTunnels",
      "cloudasset.assets.exportConnectorsConnections",
      "cloudasset.assets.exportConnectorsConnectorVersions",
      "cloudasset.assets.exportConnectorsConnectors",
      "cloudasset.assets.exportConnectorsProviders",
      "cloudasset.assets.exportConnectorsRuntimeConfigs",
      "cloudasset.assets.exportContainerAppsDeployment",
      "cloudasset.assets.exportContainerAppsReplicaSets",
      "cloudasset.assets.exportContainerBatchJobs",
      "cloudasset.assets.exportContainerClusterrole",
      "cloudasset.assets.exportContainerClusterrolebinding",
      "cloudasset.assets.exportContainerClusters",
      "cloudasset.assets.exportContainerExtensionsIngresses",
      "cloudasset.assets.exportContainerJobs",
      "cloudasset.assets.exportContainerNamespace",
      "cloudasset.assets.exportContainerNetworkingIngresses",
      "cloudasset.assets.exportContainerNetworkingNetworkPolicies",
      "cloudasset.assets.exportContainerNode",
      "cloudasset.assets.exportContainerNodepool",
      "cloudasset.assets.exportContainerPod",
      "cloudasset.assets.exportContainerReplicaSets",
      "cloudasset.assets.exportContainerRole",
      "cloudasset.assets.exportContainerRolebinding",
      "cloudasset.assets.exportContainerServices",
      "cloudasset.assets.exportContainerregistryImage",
      "cloudasset.assets.exportDataMigrationConnectionProfiles",
      "cloudasset.assets.exportDataMigrationMigrationJobs",
      "cloudasset.assets.exportDataflowJobs",
      "cloudasset.assets.exportDatafusionInstance",
      "cloudasset.assets.exportDataplexAssets",
      "cloudasset.assets.exportDataplexLakes",
      "cloudasset.assets.exportDataplexTasks",
      "cloudasset.assets.exportDataplexZones",
      "cloudasset.assets.exportDataprocAutoscalingPolicies",
      "cloudasset.assets.exportDataprocBatches",
      "cloudasset.assets.exportDataprocClusters",
      "cloudasset.assets.exportDataprocJobs",
      "cloudasset.assets.exportDataprocSessions",
      "cloudasset.assets.exportDataprocWorkflowTemplates",
      "cloudasset.assets.exportDatastreamConnectionProfile",
      "cloudasset.assets.exportDatastreamPrivateConnection",
      "cloudasset.assets.exportDatastreamStream",
      "cloudasset.assets.exportDialogflowAgents",
      "cloudasset.assets.exportDialogflowConversationProfiles",
      "cloudasset.assets.exportDialogflowKnowledgeBases",
      "cloudasset.assets.exportDialogflowLocationSettings",
      "cloudasset.assets.exportDlpDeidentifyTemplates",
      "cloudasset.assets.exportDlpDlpJobs",
      "cloudasset.assets.exportDlpInspectTemplates",
      "cloudasset.assets.exportDlpJobTriggers",
      "cloudasset.assets.exportDlpStoredInfoTypes",
      "cloudasset.assets.exportDnsManagedZones",
      "cloudasset.assets.exportDnsPolicies",
      "cloudasset.assets.exportDomainsRegistrations",
      "cloudasset.assets.exportEventarcTriggers",
      "cloudasset.assets.exportFileBackups",
      "cloudasset.assets.exportFileInstances",
      "cloudasset.assets.exportFirebaseAppInfos",
      "cloudasset.assets.exportFirebaseProjects",
      "cloudasset.assets.exportFirestoreDatabases",
      "cloudasset.assets.exportGKEHubFeatures",
      "cloudasset.assets.exportGKEHubMemberships",
      "cloudasset.assets.exportGameservicesGameServerClusters",
      "cloudasset.assets.exportGameservicesGameServerConfigs",
      "cloudasset.assets.exportGameservicesGameServerDeployments",
      "cloudasset.assets.exportGameservicesRealms",
      "cloudasset.assets.exportGkeBackupBackupPlans",
      "cloudasset.assets.exportGkeBackupBackups",
      "cloudasset.assets.exportGkeBackupRestorePlans",
      "cloudasset.assets.exportGkeBackupRestores",
      "cloudasset.assets.exportGkeBackupVolumeBackups",
      "cloudasset.assets.exportGkeBackupVolumeRestores",
      "cloudasset.assets.exportHealthcareConsentStores",
      "cloudasset.assets.exportHealthcareDatasets",
      "cloudasset.assets.exportHealthcareDicomStores",
      "cloudasset.assets.exportHealthcareFhirStores",
      "cloudasset.assets.exportHealthcareHl7V2Stores",
      "cloudasset.assets.exportIamPolicy",
      "cloudasset.assets.exportIamRoles",
      "cloudasset.assets.exportIamServiceAccountKeys",
      "cloudasset.assets.exportIamServiceAccounts",
      "cloudasset.assets.exportIapTunnel",
      "cloudasset.assets.exportIapTunnelInstances",
      "cloudasset.assets.exportIapTunnelZones",
      "cloudasset.assets.exportIapWeb",
      "cloudasset.assets.exportIapWebServiceVersion",
      "cloudasset.assets.exportIapWebServices",
      "cloudasset.assets.exportIapWebType",
      "cloudasset.assets.exportIdsEndpoints",
      "cloudasset.assets.exportIntegrationsAuthConfigs",
      "cloudasset.assets.exportIntegrationsCertificates",
      "cloudasset.assets.exportIntegrationsExecutions",
      "cloudasset.assets.exportIntegrationsIntegrationVersions",
      "cloudasset.assets.exportIntegrationsIntegrations",
      "cloudasset.assets.exportIntegrationsSfdcChannels",
      "cloudasset.assets.exportIntegrationsSfdcInstances",
      "cloudasset.assets.exportIntegrationsSuspensions",
      "cloudasset.assets.exportLoggingLogMetrics",
      "cloudasset.assets.exportLoggingLogSinks",
      "cloudasset.assets.exportManagedidentitiesDomain",
      "cloudasset.assets.exportMetastoreBackups",
      "cloudasset.assets.exportMetastoreMetadataImports",
      "cloudasset.assets.exportMetastoreServices",
      "cloudasset.assets.exportMonitoringAlertPolicies",
      "cloudasset.assets.exportNetworkConnectivityHubs",
      "cloudasset.assets.exportNetworkConnectivitySpokes",
      "cloudasset.assets.exportNetworkManagementConnectivityTests",
      "cloudasset.assets.exportNetworkServicesEndpointPolicies",
      "cloudasset.assets.exportNetworkServicesGateways",
      "cloudasset.assets.exportNetworkServicesGrpcRoutes",
      "cloudasset.assets.exportNetworkServicesHttpRoutes",
      "cloudasset.assets.exportNetworkServicesMeshes",
      "cloudasset.assets.exportNetworkServicesServiceBindings",
      "cloudasset.assets.exportNetworkServicesTcpRoutes",
      "cloudasset.assets.exportNetworkServicesTlsRoutes",
      "cloudasset.assets.exportOSConfigOSPolicyAssignmentReports",
      "cloudasset.assets.exportOSConfigOSPolicyAssignments",
      "cloudasset.assets.exportOSConfigVulnerabilityReports",
      "cloudasset.assets.exportOSInventories",
      "cloudasset.assets.exportOrgPolicy",
      "cloudasset.assets.exportPatchDeployments",
      "cloudasset.assets.exportPubsubSnapshots",
      "cloudasset.assets.exportPubsubSubscriptions",
      "cloudasset.assets.exportPubsubTopics",
      "cloudasset.assets.exportRedisInstances",
      "cloudasset.assets.exportResource",
      "cloudasset.assets.exportSecretManagerSecretVersions",
      "cloudasset.assets.exportSecretManagerSecrets",
      "cloudasset.assets.exportServiceDirectoryNamespaces",
      "cloudasset.assets.exportServicePerimeter",
      "cloudasset.assets.exportServiceconsumermanagementConsumerProperty",
      "cloudasset.assets.exportServiceconsumermanagementConsumerQuotaLimits",
      "cloudasset.assets.exportServiceconsumermanagementConsumers",
      "cloudasset.assets.exportServiceconsumermanagementProducerOverrides",
      "cloudasset.assets.exportServiceconsumermanagementTenancyUnits",
      "cloudasset.assets.exportServiceconsumermanagementVisibility",
      "cloudasset.assets.exportServicemanagementServices",
      "cloudasset.assets.exportServiceusageAdminOverrides",
      "cloudasset.assets.exportServiceusageConsumerOverrides",
      "cloudasset.assets.exportServiceusageServices",
      "cloudasset.assets.exportSpannerBackups",
      "cloudasset.assets.exportSpannerDatabases",
      "cloudasset.assets.exportSpannerInstances",
      "cloudasset.assets.exportSpeakerIdPhrases",
      "cloudasset.assets.exportSpeakerIdSettings",
      "cloudasset.assets.exportSpeakerIdSpeakers",
      "cloudasset.assets.exportSpeechCustomClasses",
      "cloudasset.assets.exportSpeechPhraseSets",
      "cloudasset.assets.exportSqladminBackupRuns",
      "cloudasset.assets.exportSqladminInstances",
      "cloudasset.assets.exportStorageBuckets",
      "cloudasset.assets.exportTpuNodes",
      "cloudasset.assets.exportVpcaccessConnector",
      "cloudasset.assets.listAccessLevel",
      "cloudasset.assets.listAccessPolicy",
      "cloudasset.assets.listAiplatformBatchPredictionJobs",
      "cloudasset.assets.listAiplatformCustomJobs",
      "cloudasset.assets.listAiplatformDataLabelingJobs",
      "cloudasset.assets.listAiplatformDatasets",
      "cloudasset.assets.listAiplatformEndpoints",
      "cloudasset.assets.listAiplatformHyperparameterTuningJobs",
      "cloudasset.assets.listAiplatformMetadataStores",
      "cloudasset.assets.listAiplatformModelDeploymentMonitoringJobs",
      "cloudasset.assets.listAiplatformModels",
      "cloudasset.assets.listAiplatformPipelineJobs",
      "cloudasset.assets.listAiplatformSpecialistPools",
      "cloudasset.assets.listAiplatformTrainingPipelines",
      "cloudasset.assets.listAllAccessPolicy",
      "cloudasset.assets.listAnthosConnectedCluster",
      "cloudasset.assets.listAnthosedgeCluster",
      "cloudasset.assets.listApigatewayApi",
      "cloudasset.assets.listApigatewayApiConfig",
      "cloudasset.assets.listApigatewayGateway",
      "cloudasset.assets.listApikeysKeys",
      "cloudasset.assets.listAppengineApplications",
      "cloudasset.assets.listAppengineServices",
      "cloudasset.assets.listAppengineVersions",
      "cloudasset.assets.listArtifactregistryDockerImages",
      "cloudasset.assets.listArtifactregistryRepositories",
      "cloudasset.assets.listAssuredWorkloadsWorkloads",
      "cloudasset.assets.listBeyondCorpApiGateways",
      "cloudasset.assets.listBeyondCorpAppConnections",
      "cloudasset.assets.listBeyondCorpAppConnectors",
      "cloudasset.assets.listBeyondCorpAppGateways",
      "cloudasset.assets.listBeyondCorpClientConnectorServices",
      "cloudasset.assets.listBeyondCorpClientGateways",
      "cloudasset.assets.listBigqueryDatasets",
      "cloudasset.assets.listBigqueryModels",
      "cloudasset.assets.listBigqueryTables",
      "cloudasset.assets.listBigtableAppProfile",
      "cloudasset.assets.listBigtableBackup",
      "cloudasset.assets.listBigtableCluster",
      "cloudasset.assets.listBigtableInstance",
      "cloudasset.assets.listBigtableTable",
      "cloudasset.assets.listCloudAssetFeeds",
      "cloudasset.assets.listCloudDeployDeliveryPipelines",
      "cloudasset.assets.listCloudDeployReleases",
      "cloudasset.assets.listCloudDeployRollouts",
      "cloudasset.assets.listCloudDeployTargets",
      "cloudasset.assets.listCloudDocumentAIEvaluation",
      "cloudasset.assets.listCloudDocumentAIHumanReviewConfig",
      "cloudasset.assets.listCloudDocumentAILabelerPool",
      "cloudasset.assets.listCloudDocumentAIProcessor",
      "cloudasset.assets.listCloudDocumentAIProcessorVersion",
      "cloudasset.assets.listCloudbillingBillingAccounts",
      "cloudasset.assets.listCloudbillingProjectBillingInfos",
      "cloudasset.assets.listCloudfunctionsFunctions",
      "cloudasset.assets.listCloudfunctionsGen2Functions",
      "cloudasset.assets.listCloudkmsCryptoKeyVersions",
      "cloudasset.assets.listCloudkmsCryptoKeys",
      "cloudasset.assets.listCloudkmsEkmConnections",
      "cloudasset.assets.listCloudkmsImportJobs",
      "cloudasset.assets.listCloudkmsKeyRings",
      "cloudasset.assets.listCloudmemcacheInstances",
      "cloudasset.assets.listCloudresourcemanagerFolders",
      "cloudasset.assets.listCloudresourcemanagerOrganizations",
      "cloudasset.assets.listCloudresourcemanagerProjects",
      "cloudasset.assets.listCloudresourcemanagerTagBindings",
      "cloudasset.assets.listCloudresourcemanagerTagKeys",
      "cloudasset.assets.listCloudresourcemanagerTagValues",
      "cloudasset.assets.listComposerEnvironments",
      "cloudasset.assets.listComputeAddress",
      "cloudasset.assets.listComputeAutoscalers",
      "cloudasset.assets.listComputeBackendBuckets",
      "cloudasset.assets.listComputeBackendServices",
      "cloudasset.assets.listComputeCommitments",
      "cloudasset.assets.listComputeDisks",
      "cloudasset.assets.listComputeExternalVpnGateways",
      "cloudasset.assets.listComputeFirewallPolicies",
      "cloudasset.assets.listComputeFirewalls",
      "cloudasset.assets.listComputeForwardingRules",
      "cloudasset.assets.listComputeGlobalAddress",
      "cloudasset.assets.listComputeGlobalForwardingRules",
      "cloudasset.assets.listComputeHealthChecks",
      "cloudasset.assets.listComputeHttpHealthChecks",
      "cloudasset.assets.listComputeHttpsHealthChecks",
      "cloudasset.assets.listComputeImages",
      "cloudasset.assets.listComputeInstanceGroupManagers",
      "cloudasset.assets.listComputeInstanceGroups",
      "cloudasset.assets.listComputeInstanceTemplates",
      "cloudasset.assets.listComputeInstances",
      "cloudasset.assets.listComputeInterconnect",
      "cloudasset.assets.listComputeInterconnectAttachment",
      "cloudasset.assets.listComputeLicenses",
      "cloudasset.assets.listComputeNetworkEndpointGroups",
      "cloudasset.assets.listComputeNetworks",
      "cloudasset.assets.listComputeNodeGroups",
      "cloudasset.assets.listComputeNodeTemplates",
      "cloudasset.assets.listComputePacketMirrorings",
      "cloudasset.assets.listComputeProjects",
      "cloudasset.assets.listComputeRegionAutoscaler",
      "cloudasset.assets.listComputeRegionBackendServices",
      "cloudasset.assets.listComputeRegionDisk",
      "cloudasset.assets.listComputeRegionInstanceGroup",
      "cloudasset.assets.listComputeRegionInstanceGroupManager",
      "cloudasset.assets.listComputeReservations",
      "cloudasset.assets.listComputeResourcePolicies",
      "cloudasset.assets.listComputeRouters",
      "cloudasset.assets.listComputeRoutes",
      "cloudasset.assets.listComputeSecurityPolicy",
      "cloudasset.assets.listComputeServiceAttachments",
      "cloudasset.assets.listComputeSnapshots",
      "cloudasset.assets.listComputeSslCertificates",
      "cloudasset.assets.listComputeSslPolicies",
      "cloudasset.assets.listComputeSubnetworks",
      "cloudasset.assets.listComputeTargetHttpProxies",
      "cloudasset.assets.listComputeTargetHttpsProxies",
      "cloudasset.assets.listComputeTargetInstances",
      "cloudasset.assets.listComputeTargetPools",
      "cloudasset.assets.listComputeTargetSslProxies",
      "cloudasset.assets.listComputeTargetTcpProxies",
      "cloudasset.assets.listComputeTargetVpnGateways",
      "cloudasset.assets.listComputeUrlMaps",
      "cloudasset.assets.listComputeVpnGateways",
      "cloudasset.assets.listComputeVpnTunnels",
      "cloudasset.assets.listConnectorsConnections",
      "cloudasset.assets.listConnectorsConnectorVersions",
      "cloudasset.assets.listConnectorsConnectors",
      "cloudasset.assets.listConnectorsProviders",
      "cloudasset.assets.listConnectorsRuntimeConfigs",
      "cloudasset.assets.listContainerAppsDeployment",
      "cloudasset.assets.listContainerAppsReplicaSets",
      "cloudasset.assets.listContainerBatchJobs",
      "cloudasset.assets.listContainerClusterrole",
      "cloudasset.assets.listContainerClusterrolebinding",
      "cloudasset.assets.listContainerClusters",
      "cloudasset.assets.listContainerExtensionsIngresses",
      "cloudasset.assets.listContainerJobs",
      "cloudasset.assets.listContainerNamespace",
      "cloudasset.assets.listContainerNetworkingIngresses",
      "cloudasset.assets.listContainerNetworkingNetworkPolicies",
      "cloudasset.assets.listContainerNode",
      "cloudasset.assets.listContainerNodepool",
      "cloudasset.assets.listContainerPod",
      "cloudasset.assets.listContainerReplicaSets",
      "cloudasset.assets.listContainerRole",
      "cloudasset.assets.listContainerRolebinding",
      "cloudasset.assets.listContainerServices",
      "cloudasset.assets.listContainerregistryImage",
      "cloudasset.assets.listDataMigrationConnectionProfiles",
      "cloudasset.assets.listDataMigrationMigrationJobs",
      "cloudasset.assets.listDataflowJobs",
      "cloudasset.assets.listDatafusionInstance",
      "cloudasset.assets.listDataplexAssets",
      "cloudasset.assets.listDataplexLakes",
      "cloudasset.assets.listDataplexTasks",
      "cloudasset.assets.listDataplexZones",
      "cloudasset.assets.listDataprocAutoscalingPolicies",
      "cloudasset.assets.listDataprocBatches",
      "cloudasset.assets.listDataprocClusters",
      "cloudasset.assets.listDataprocJobs",
      "cloudasset.assets.listDataprocSessions",
      "cloudasset.assets.listDataprocWorkflowTemplates",
      "cloudasset.assets.listDatastreamConnectionProfile",
      "cloudasset.assets.listDatastreamPrivateConnection",
      "cloudasset.assets.listDatastreamStream",
      "cloudasset.assets.listDialogflowAgents",
      "cloudasset.assets.listDialogflowConversationProfiles",
      "cloudasset.assets.listDialogflowKnowledgeBases",
      "cloudasset.assets.listDialogflowLocationSettings",
      "cloudasset.assets.listDlpDeidentifyTemplates",
      "cloudasset.assets.listDlpDlpJobs",
      "cloudasset.assets.listDlpInspectTemplates",
      "cloudasset.assets.listDlpJobTriggers",
      "cloudasset.assets.listDlpStoredInfoTypes",
      "cloudasset.assets.listDnsManagedZones",
      "cloudasset.assets.listDnsPolicies",
      "cloudasset.assets.listDomainsRegistrations",
      "cloudasset.assets.listEventarcTriggers",
      "cloudasset.assets.listFileBackups",
      "cloudasset.assets.listFileInstances",
      "cloudasset.assets.listFirebaseAppInfos",
      "cloudasset.assets.listFirebaseProjects",
      "cloudasset.assets.listFirestoreDatabases",
      "cloudasset.assets.listGKEHubFeatures",
      "cloudasset.assets.listGKEHubMemberships",
      "cloudasset.assets.listGameservicesGameServerClusters",
      "cloudasset.assets.listGameservicesGameServerConfigs",
      "cloudasset.assets.listGameservicesGameServerDeployments",
      "cloudasset.assets.listGameservicesRealms",
      "cloudasset.assets.listGkeBackupBackupPlans",
      "cloudasset.assets.listGkeBackupBackups",
      "cloudasset.assets.listGkeBackupRestorePlans",
      "cloudasset.assets.listGkeBackupRestores",
      "cloudasset.assets.listGkeBackupVolumeBackups",
      "cloudasset.assets.listGkeBackupVolumeRestores",
      "cloudasset.assets.listHealthcareConsentStores",
      "cloudasset.assets.listHealthcareDatasets",
      "cloudasset.assets.listHealthcareDicomStores",
      "cloudasset.assets.listHealthcareFhirStores",
      "cloudasset.assets.listHealthcareHl7V2Stores",
      "cloudasset.assets.listIamPolicy",
      "cloudasset.assets.listIamRoles",
      "cloudasset.assets.listIamServiceAccountKeys",
      "cloudasset.assets.listIamServiceAccounts",
      "cloudasset.assets.listIapTunnel",
      "cloudasset.assets.listIapTunnelInstances",
      "cloudasset.assets.listIapTunnelZones",
      "cloudasset.assets.listIapWeb",
      "cloudasset.assets.listIapWebServiceVersion",
      "cloudasset.assets.listIapWebServices",
      "cloudasset.assets.listIapWebType",
      "cloudasset.assets.listIdsEndpoints",
      "cloudasset.assets.listIntegrationsAuthConfigs",
      "cloudasset.assets.listIntegrationsCertificates",
      "cloudasset.assets.listIntegrationsExecutions",
      "cloudasset.assets.listIntegrationsIntegrationVersions",
      "cloudasset.assets.listIntegrationsIntegrations",
      "cloudasset.assets.listIntegrationsSfdcChannels",
      "cloudasset.assets.listIntegrationsSfdcInstances",
      "cloudasset.assets.listIntegrationsSuspensions",
      "cloudasset.assets.listLoggingLogMetrics",
      "cloudasset.assets.listLoggingLogSinks",
      "cloudasset.assets.listManagedidentitiesDomain",
      "cloudasset.assets.listMetastoreBackups",
      "cloudasset.assets.listMetastoreMetadataImports",
      "cloudasset.assets.listMetastoreServices",
      "cloudasset.assets.listMonitoringAlertPolicies",
      "cloudasset.assets.listNetworkConnectivityHubs",
      "cloudasset.assets.listNetworkConnectivitySpokes",
      "cloudasset.assets.listNetworkManagementConnectivityTests",
      "cloudasset.assets.listNetworkServicesEndpointPolicies",
      "cloudasset.assets.listNetworkServicesGateways",
      "cloudasset.assets.listNetworkServicesGrpcRoutes",
      "cloudasset.assets.listNetworkServicesHttpRoutes",
      "cloudasset.assets.listNetworkServicesMeshes",
      "cloudasset.assets.listNetworkServicesServiceBindings",
      "cloudasset.assets.listNetworkServicesTcpRoutes",
      "cloudasset.assets.listNetworkServicesTlsRoutes",
      "cloudasset.assets.listOSConfigOSPolicyAssignmentReports",
      "cloudasset.assets.listOSConfigOSPolicyAssignments",
      "cloudasset.assets.listOSConfigVulnerabilityReports",
      "cloudasset.assets.listOSInventories",
      "cloudasset.assets.listOrgPolicy",
      "cloudasset.assets.listPatchDeployments",
      "cloudasset.assets.listPubsubSnapshots",
      "cloudasset.assets.listPubsubSubscriptions",
      "cloudasset.assets.listPubsubTopics",
      "cloudasset.assets.listRedisInstances",
      "cloudasset.assets.listResource",
      "cloudasset.assets.listRunDomainMapping",
      "cloudasset.assets.listRunRevision",
      "cloudasset.assets.listRunService",
      "cloudasset.assets.listSecretManagerSecretVersions",
      "cloudasset.assets.listSecretManagerSecrets",
      "cloudasset.assets.listServiceDirectoryNamespaces",
      "cloudasset.assets.listServicePerimeter",
      "cloudasset.assets.listServiceconsumermanagementConsumerProperty",
      "cloudasset.assets.listServiceconsumermanagementConsumerQuotaLimits",
      "cloudasset.assets.listServiceconsumermanagementConsumers",
      "cloudasset.assets.listServiceconsumermanagementProducerOverrides",
      "cloudasset.assets.listServiceconsumermanagementTenancyUnits",
      "cloudasset.assets.listServiceconsumermanagementVisibility",
      "cloudasset.assets.listServicemanagementServices",
      "cloudasset.assets.listServiceusageAdminOverrides",
      "cloudasset.assets.listServiceusageConsumerOverrides",
      "cloudasset.assets.listServiceusageServices",
      "cloudasset.assets.listSpannerBackups",
      "cloudasset.assets.listSpannerDatabases",
      "cloudasset.assets.listSpannerInstances",
      "cloudasset.assets.listSpeakerIdPhrases",
      "cloudasset.assets.listSpeakerIdSettings",
      "cloudasset.assets.listSpeakerIdSpeakers",
      "cloudasset.assets.listSpeechCustomClasses",
      "cloudasset.assets.listSpeechPhraseSets",
      "cloudasset.assets.listSqladminBackupRuns",
      "cloudasset.assets.listSqladminInstances",
      "cloudasset.assets.listStorageBuckets",
      "cloudasset.assets.listTpuNodes",
      "cloudasset.assets.listVpcaccessConnector",
      "cloudasset.assets.queryAccessPolicy",
      "cloudasset.assets.queryIamPolicy",
      "cloudasset.assets.queryOSInventories",
      "cloudasset.assets.queryResource",
      "cloudasset.assets.searchAllIamPolicies",
      "cloudasset.assets.searchAllResources",
      "recommender.cloudAssetInsights.get",
      "recommender.cloudAssetInsights.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.folders.get",
      "resourcemanager.folders.list",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "securitycenter.assets.group",
      "securitycenter.assets.list",
      "securitycenter.assets.listAssetPropertyNames",
      "securitycenter.bigQueryExports.get",
      "securitycenter.bigQueryExports.list",
      "securitycenter.containerthreatdetectionsettings.calculate",
      "securitycenter.containerthreatdetectionsettings.get",
      "securitycenter.effectivesecurityhealthanalyticscustommodules.get",
      "securitycenter.effectivesecurityhealthanalyticscustommodules.list",
      "securitycenter.eventthreatdetectionsettings.calculate",
      "securitycenter.eventthreatdetectionsettings.get",
      "securitycenter.findings.group",
      "securitycenter.findings.list",
      "securitycenter.findings.listFindingPropertyNames",
      "securitycenter.integratedvulnerabilityscannersettings.calculate",
      "securitycenter.integratedvulnerabilityscannersettings.get",
      "securitycenter.muteconfigs.get",
      "securitycenter.muteconfigs.list",
      "securitycenter.notificationconfig.get",
      "securitycenter.notificationconfig.list",
      "securitycenter.organizationsettings.get",
      "securitycenter.rapidvulnerabilitydetectionsettings.calculate",
      "securitycenter.rapidvulnerabilitydetectionsettings.get",
      "securitycenter.securitycentersettings.get",
      "securitycenter.securityhealthanalyticscustommodules.get",
      "securitycenter.securityhealthanalyticscustommodules.list",
      "securitycenter.securityhealthanalyticssettings.calculate",
      "securitycenter.securityhealthanalyticssettings.get",
      "securitycenter.sources.get",
      "securitycenter.sources.list",
      "securitycenter.subscription.get",
      "securitycenter.userinterfacemetadata.get",
      "securitycenter.virtualmachinethreatdetectionsettings.calculate",
      "securitycenter.virtualmachinethreatdetectionsettings.get",
      "securitycenter.websecurityscannersettings.calculate",
      "securitycenter.websecurityscannersettings.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/riskmanager.viewer",
    "title": "Risk Manager Viewer",
    "description": "Access to view Risk Manager resources",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "riskmanager.controlScoreBreakdowns.get",
      "riskmanager.controlScoreBreakdowns.list",
      "riskmanager.operations.get",
      "riskmanager.operations.list",
      "riskmanager.policies.get",
      "riskmanager.policies.list",
      "riskmanager.reports.get",
      "riskmanager.reports.list",
      "riskmanager.settings.get"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/rma.admin",
    "title": "Rapid Migration Assessment Admin",
    "description": "Full access to Rapid Migration Assessment all resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "rma.annotations.create",
      "rma.annotations.get",
      "rma.collectors.create",
      "rma.collectors.delete",
      "rma.collectors.get",
      "rma.collectors.list",
      "rma.collectors.update",
      "rma.locations.get",
      "rma.locations.list",
      "rma.operations.cancel",
      "rma.operations.delete",
      "rma.operations.get",
      "rma.operations.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/rma.runner",
    "title": "Rapid Migration Assessment Runner",
    "description": "Update and Read access to Rapid Migration Assessment all resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "rma.annotations.get",
      "rma.collectors.get",
      "rma.collectors.list",
      "rma.collectors.update",
      "rma.locations.get",
      "rma.locations.list",
      "rma.operations.get",
      "rma.operations.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/rma.viewer",
    "title": "Rapid Migration Assessment Viewer",
    "description": "Read-only access to Rapid Migration Assessment all resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "rma.annotations.get",
      "rma.collectors.get",
      "rma.collectors.list",
      "rma.locations.get",
      "rma.locations.list",
      "rma.operations.get",
      "rma.operations.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/run.admin",
    "title": "Cloud Run Admin",
    "description": "Full control over all Cloud Run resources.",
    "includedPermissions": [
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.runServiceCostInsights.get",
      "recommender.runServiceCostInsights.list",
      "recommender.runServiceCostInsights.update",
      "recommender.runServiceCostRecommendations.get",
      "recommender.runServiceCostRecommendations.list",
      "recommender.runServiceCostRecommendations.update",
      "recommender.runServiceIdentityInsights.get",
      "recommender.runServiceIdentityInsights.list",
      "recommender.runServiceIdentityInsights.update",
      "recommender.runServiceIdentityRecommendations.get",
      "recommender.runServiceIdentityRecommendations.list",
      "recommender.runServiceIdentityRecommendations.update",
      "recommender.runServiceSecurityInsights.get",
      "recommender.runServiceSecurityInsights.list",
      "recommender.runServiceSecurityInsights.update",
      "recommender.runServiceSecurityRecommendations.get",
      "recommender.runServiceSecurityRecommendations.list",
      "recommender.runServiceSecurityRecommendations.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "run.configurations.get",
      "run.configurations.list",
      "run.executions.delete",
      "run.executions.get",
      "run.executions.list",
      "run.jobs.create",
      "run.jobs.delete",
      "run.jobs.get",
      "run.jobs.getIamPolicy",
      "run.jobs.list",
      "run.jobs.run",
      "run.jobs.runWithOverrides",
      "run.jobs.setIamPolicy",
      "run.jobs.update",
      "run.locations.list",
      "run.operations.delete",
      "run.operations.get",
      "run.operations.list",
      "run.revisions.delete",
      "run.revisions.get",
      "run.revisions.list",
      "run.routes.get",
      "run.routes.invoke",
      "run.routes.list",
      "run.services.create",
      "run.services.createTagBinding",
      "run.services.delete",
      "run.services.deleteTagBinding",
      "run.services.get",
      "run.services.getIamPolicy",
      "run.services.list",
      "run.services.listEffectiveTags",
      "run.services.listTagBindings",
      "run.services.setIamPolicy",
      "run.services.update",
      "run.tasks.get",
      "run.tasks.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/run.developer",
    "title": "Cloud Run Developer",
    "description": "Read and write access to all Cloud Run resources.",
    "includedPermissions": [
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.runServiceCostInsights.get",
      "recommender.runServiceCostInsights.list",
      "recommender.runServiceCostInsights.update",
      "recommender.runServiceCostRecommendations.get",
      "recommender.runServiceCostRecommendations.list",
      "recommender.runServiceCostRecommendations.update",
      "recommender.runServiceIdentityInsights.get",
      "recommender.runServiceIdentityInsights.list",
      "recommender.runServiceIdentityInsights.update",
      "recommender.runServiceIdentityRecommendations.get",
      "recommender.runServiceIdentityRecommendations.list",
      "recommender.runServiceIdentityRecommendations.update",
      "recommender.runServiceSecurityInsights.get",
      "recommender.runServiceSecurityInsights.list",
      "recommender.runServiceSecurityInsights.update",
      "recommender.runServiceSecurityRecommendations.get",
      "recommender.runServiceSecurityRecommendations.list",
      "recommender.runServiceSecurityRecommendations.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "run.configurations.get",
      "run.configurations.list",
      "run.executions.delete",
      "run.executions.get",
      "run.executions.list",
      "run.jobs.create",
      "run.jobs.delete",
      "run.jobs.get",
      "run.jobs.getIamPolicy",
      "run.jobs.list",
      "run.jobs.run",
      "run.jobs.runWithOverrides",
      "run.jobs.update",
      "run.locations.list",
      "run.operations.delete",
      "run.operations.get",
      "run.operations.list",
      "run.revisions.delete",
      "run.revisions.get",
      "run.revisions.list",
      "run.routes.get",
      "run.routes.invoke",
      "run.routes.list",
      "run.services.create",
      "run.services.delete",
      "run.services.get",
      "run.services.getIamPolicy",
      "run.services.list",
      "run.services.listEffectiveTags",
      "run.services.listTagBindings",
      "run.services.update",
      "run.tasks.get",
      "run.tasks.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/run.invoker",
    "title": "Cloud Run Invoker",
    "description": "Can invoke a Cloud Run service.",
    "includedPermissions": [
      "run.jobs.run",
      "run.routes.invoke"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/run.serviceAgent",
    "title": "Cloud Run Service Agent",
    "description": "Gives Cloud Run service account access to managed resources.",
    "includedPermissions": [
      "artifactregistry.dockerimages.get",
      "artifactregistry.dockerimages.list",
      "artifactregistry.files.get",
      "artifactregistry.files.list",
      "artifactregistry.locations.get",
      "artifactregistry.locations.list",
      "artifactregistry.mavenartifacts.get",
      "artifactregistry.mavenartifacts.list",
      "artifactregistry.npmpackages.get",
      "artifactregistry.npmpackages.list",
      "artifactregistry.packages.get",
      "artifactregistry.packages.list",
      "artifactregistry.projectsettings.get",
      "artifactregistry.pythonpackages.get",
      "artifactregistry.pythonpackages.list",
      "artifactregistry.repositories.downloadArtifacts",
      "artifactregistry.repositories.get",
      "artifactregistry.repositories.list",
      "artifactregistry.repositories.listEffectiveTags",
      "artifactregistry.repositories.listTagBindings",
      "artifactregistry.repositories.readViaVirtualRepository",
      "artifactregistry.tags.get",
      "artifactregistry.tags.list",
      "artifactregistry.versions.get",
      "artifactregistry.versions.list",
      "binaryauthorization.platformPolicies.evaluatePolicy",
      "binaryauthorization.policy.evaluatePolicy",
      "clientauthconfig.clients.list",
      "cloudbuild.builds.create",
      "cloudbuild.builds.get",
      "compute.addresses.createInternal",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.globalOperations.get",
      "compute.networks.access",
      "compute.networks.get",
      "compute.subnetworks.get",
      "compute.subnetworks.use",
      "iam.serviceAccounts.actAs",
      "iam.serviceAccounts.getAccessToken",
      "iam.serviceAccounts.getOpenIdToken",
      "iam.serviceAccounts.signBlob",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list",
      "run.routes.invoke",
      "serviceusage.services.use",
      "storage.objects.get",
      "storage.objects.list",
      "vpcaccess.connectors.get",
      "vpcaccess.connectors.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/run.viewer",
    "title": "Cloud Run Viewer",
    "description": "Can view the state of all Cloud Run resources, including IAM policies.",
    "includedPermissions": [
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.runServiceCostInsights.get",
      "recommender.runServiceCostInsights.list",
      "recommender.runServiceCostRecommendations.get",
      "recommender.runServiceCostRecommendations.list",
      "recommender.runServiceIdentityInsights.get",
      "recommender.runServiceIdentityInsights.list",
      "recommender.runServiceIdentityRecommendations.get",
      "recommender.runServiceIdentityRecommendations.list",
      "recommender.runServiceSecurityInsights.get",
      "recommender.runServiceSecurityInsights.list",
      "recommender.runServiceSecurityRecommendations.get",
      "recommender.runServiceSecurityRecommendations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "run.configurations.get",
      "run.configurations.list",
      "run.executions.get",
      "run.executions.list",
      "run.jobs.get",
      "run.jobs.getIamPolicy",
      "run.jobs.list",
      "run.locations.list",
      "run.operations.get",
      "run.operations.list",
      "run.revisions.get",
      "run.revisions.list",
      "run.routes.get",
      "run.routes.list",
      "run.services.get",
      "run.services.getIamPolicy",
      "run.services.list",
      "run.services.listEffectiveTags",
      "run.services.listTagBindings",
      "run.tasks.get",
      "run.tasks.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/runapps.developer",
    "title": "Serverless Integrations Developer",
    "description": "Access to create and change Serverless Integrations and their configuration.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "runapps.applications.create",
      "runapps.applications.delete",
      "runapps.applications.get",
      "runapps.applications.getStatus",
      "runapps.applications.list",
      "runapps.applications.update",
      "runapps.deployments.get",
      "runapps.deployments.list",
      "runapps.locations.get",
      "runapps.locations.list",
      "runapps.operations.cancel",
      "runapps.operations.delete",
      "runapps.operations.get",
      "runapps.operations.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/runapps.operator",
    "title": "Serverless Integrations Operator",
    "description": "Access to deploy Serverless Integrations.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "runapps.applications.get",
      "runapps.applications.getStatus",
      "runapps.applications.list",
      "runapps.deployments.create",
      "runapps.deployments.get",
      "runapps.deployments.list",
      "runapps.locations.get",
      "runapps.locations.list",
      "runapps.operations.cancel",
      "runapps.operations.delete",
      "runapps.operations.get",
      "runapps.operations.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/runapps.serviceAgent",
    "title": "Serverless Integrations Service Agent",
    "description": "Gives Serverless Integrations Service Account access to customer project resources.",
    "includedPermissions": [
      "cloudbuild.builds.create",
      "cloudbuild.builds.get",
      "compute.backendServices.get",
      "compute.backendServices.list",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.networks.get",
      "compute.networks.list",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.urlMaps.get",
      "compute.urlMaps.list",
      "firebasehosting.sites.get",
      "iam.serviceAccounts.actAs",
      "redis.instances.get",
      "redis.instances.list",
      "run.jobs.get",
      "run.jobs.list",
      "run.services.get",
      "run.services.list",
      "serviceusage.services.use",
      "storage.buckets.create",
      "storage.buckets.delete",
      "storage.buckets.get",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list",
      "vpcaccess.connectors.get",
      "vpcaccess.connectors.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/runapps.viewer",
    "title": "Serverless Integrations Viewer",
    "description": "Readonly access to Serverless Integrations resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "runapps.applications.get",
      "runapps.applications.getStatus",
      "runapps.applications.list",
      "runapps.deployments.get",
      "runapps.deployments.list",
      "runapps.locations.get",
      "runapps.locations.list",
      "runapps.operations.get",
      "runapps.operations.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/runtimeconfig.admin",
    "title": "Cloud RuntimeConfig Admin",
    "description": "Full access to RuntimeConfig resources.",
    "includedPermissions": [
      "runtimeconfig.configs.create",
      "runtimeconfig.configs.delete",
      "runtimeconfig.configs.get",
      "runtimeconfig.configs.getIamPolicy",
      "runtimeconfig.configs.list",
      "runtimeconfig.configs.setIamPolicy",
      "runtimeconfig.configs.update",
      "runtimeconfig.operations.get",
      "runtimeconfig.operations.list",
      "runtimeconfig.variables.create",
      "runtimeconfig.variables.delete",
      "runtimeconfig.variables.get",
      "runtimeconfig.variables.getIamPolicy",
      "runtimeconfig.variables.list",
      "runtimeconfig.variables.setIamPolicy",
      "runtimeconfig.variables.update",
      "runtimeconfig.variables.watch",
      "runtimeconfig.waiters.create",
      "runtimeconfig.waiters.delete",
      "runtimeconfig.waiters.get",
      "runtimeconfig.waiters.getIamPolicy",
      "runtimeconfig.waiters.list",
      "runtimeconfig.waiters.setIamPolicy",
      "runtimeconfig.waiters.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/secretmanager.admin",
    "title": "Secret Manager Admin",
    "description": "Full access to administer Secret Manager resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "secretmanager.locations.get",
      "secretmanager.locations.list",
      "secretmanager.secrets.create",
      "secretmanager.secrets.delete",
      "secretmanager.secrets.get",
      "secretmanager.secrets.getIamPolicy",
      "secretmanager.secrets.list",
      "secretmanager.secrets.setIamPolicy",
      "secretmanager.secrets.update",
      "secretmanager.versions.access",
      "secretmanager.versions.add",
      "secretmanager.versions.destroy",
      "secretmanager.versions.disable",
      "secretmanager.versions.enable",
      "secretmanager.versions.get",
      "secretmanager.versions.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/secretmanager.secretAccessor",
    "title": "Secret Manager Secret Accessor",
    "description": "Allows accessing the payload of secrets.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "secretmanager.versions.access"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/secretmanager.secretVersionAdder",
    "title": "Secret Manager Secret Version Adder",
    "description": "Allows adding versions to existing secrets.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "secretmanager.versions.add"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/secretmanager.secretVersionManager",
    "title": "Secret Manager Secret Version Manager",
    "description": "Allows creating and managing versions of existing secrets.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "secretmanager.versions.add",
      "secretmanager.versions.destroy",
      "secretmanager.versions.disable",
      "secretmanager.versions.enable",
      "secretmanager.versions.get",
      "secretmanager.versions.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/secretmanager.viewer",
    "title": "Secret Manager Viewer",
    "description": "Allows viewing metadata of all Secret Manager resources",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "secretmanager.locations.get",
      "secretmanager.locations.list",
      "secretmanager.secrets.get",
      "secretmanager.secrets.getIamPolicy",
      "secretmanager.secrets.list",
      "secretmanager.versions.get",
      "secretmanager.versions.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securedlandingzone.bqdwOrgRemediator",
    "title": "SLZ BQDW Blueprint Organization Level Remediator",
    "description": "Access to modify (remediate) resources in SLZ BQDW Blueprint at Organization.",
    "includedPermissions": [
      "accesscontextmanager.servicePerimeters.get",
      "accesscontextmanager.servicePerimeters.list",
      "accesscontextmanager.servicePerimeters.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/securedlandingzone.bqdwProjectRemediator",
    "title": "SLZ BQDW Blueprint Project Level Remediator",
    "description": "Access to modify (remediate) resources in SLZ BQDW Blueprint at Project.",
    "includedPermissions": [
      "bigquery.datasets.get",
      "bigquery.datasets.getIamPolicy",
      "bigquery.datasets.setIamPolicy",
      "bigquery.datasets.update",
      "cloudkms.cryptoKeys.get",
      "cloudkms.cryptoKeys.getIamPolicy",
      "cloudkms.cryptoKeys.list",
      "cloudkms.cryptoKeys.setIamPolicy",
      "cloudkms.cryptoKeys.update",
      "cloudkms.keyRings.getIamPolicy",
      "cloudkms.keyRings.setIamPolicy",
      "pubsub.topics.get",
      "pubsub.topics.getIamPolicy",
      "pubsub.topics.list",
      "pubsub.topics.setIamPolicy",
      "pubsub.topics.update",
      "resourcemanager.projects.update",
      "serviceusage.services.use",
      "storage.buckets.get",
      "storage.buckets.getIamPolicy",
      "storage.buckets.list",
      "storage.buckets.setIamPolicy",
      "storage.buckets.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/securedlandingzone.overwatchActivator",
    "title": "Overwatch Activator",
    "description": "This role can activate or suspend Overwatches",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "securedlandingzone.overwatches.activate",
      "securedlandingzone.overwatches.suspend"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/securedlandingzone.overwatchAdmin",
    "title": "Overwatch Admin",
    "description": "Full access to Overwatches",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "securedlandingzone.operations.get",
      "securedlandingzone.overwatches.activate",
      "securedlandingzone.overwatches.create",
      "securedlandingzone.overwatches.delete",
      "securedlandingzone.overwatches.get",
      "securedlandingzone.overwatches.list",
      "securedlandingzone.overwatches.suspend",
      "securedlandingzone.overwatches.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/securedlandingzone.overwatchViewer",
    "title": "Overwatch Viewer",
    "description": "This role can view all properties of Overwatches",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "securedlandingzone.operations.get",
      "securedlandingzone.overwatches.get",
      "securedlandingzone.overwatches.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/securedlandingzone.serviceAgent",
    "title": "Secured Landing Zone Service Agent",
    "description": "Grants Secured Landing Zone service account permissions to manage resources in the customer project",
    "includedPermissions": [
      "cloudasset.assets.exportOrgPolicy",
      "cloudasset.assets.exportResource",
      "cloudasset.feeds.create",
      "cloudasset.feeds.delete",
      "cloudasset.feeds.update",
      "logging.logEntries.list",
      "pubsub.subscriptions.consume",
      "pubsub.subscriptions.create",
      "pubsub.subscriptions.delete",
      "pubsub.topics.attachSubscription",
      "pubsub.topics.create",
      "pubsub.topics.delete",
      "pubsub.topics.detachSubscription",
      "pubsub.topics.getIamPolicy",
      "pubsub.topics.setIamPolicy",
      "resourcemanager.projects.get",
      "securitycenter.assetsecuritymarks.update",
      "securitycenter.findings.list",
      "securitycenter.findings.update",
      "securitycenter.sources.list",
      "securitycenter.sources.update",
      "serviceusage.services.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.admin",
    "title": "Security Center Admin",
    "description": "Admin(super user) access to security center",
    "includedPermissions": [
      "appengine.applications.get",
      "cloudasset.assets.exportIamPolicy",
      "cloudasset.assets.exportOSInventories",
      "cloudasset.assets.exportResource",
      "cloudasset.assets.queryAccessPolicy",
      "cloudasset.assets.queryIamPolicy",
      "cloudasset.assets.queryOSInventories",
      "cloudasset.assets.queryResource",
      "cloudasset.assets.searchAllIamPolicies",
      "cloudasset.assets.searchAllResources",
      "cloudsecurityscanner.crawledurls.list",
      "cloudsecurityscanner.results.get",
      "cloudsecurityscanner.results.list",
      "cloudsecurityscanner.scanruns.get",
      "cloudsecurityscanner.scanruns.getSummary",
      "cloudsecurityscanner.scanruns.list",
      "cloudsecurityscanner.scanruns.stop",
      "cloudsecurityscanner.scans.create",
      "cloudsecurityscanner.scans.delete",
      "cloudsecurityscanner.scans.get",
      "cloudsecurityscanner.scans.list",
      "cloudsecurityscanner.scans.run",
      "cloudsecurityscanner.scans.update",
      "compute.addresses.list",
      "resourcemanager.folders.get",
      "resourcemanager.folders.list",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "resourcemanager.tagValues.get",
      "securitycenter.assets.group",
      "securitycenter.assets.list",
      "securitycenter.assets.listAssetPropertyNames",
      "securitycenter.assets.runDiscovery",
      "securitycenter.assetsecuritymarks.update",
      "securitycenter.attackpaths.list",
      "securitycenter.bigQueryExports.create",
      "securitycenter.bigQueryExports.delete",
      "securitycenter.bigQueryExports.get",
      "securitycenter.bigQueryExports.list",
      "securitycenter.bigQueryExports.update",
      "securitycenter.containerthreatdetectionsettings.calculate",
      "securitycenter.containerthreatdetectionsettings.get",
      "securitycenter.containerthreatdetectionsettings.update",
      "securitycenter.effectivesecurityhealthanalyticscustommodules.get",
      "securitycenter.effectivesecurityhealthanalyticscustommodules.list",
      "securitycenter.eventthreatdetectionsettings.calculate",
      "securitycenter.eventthreatdetectionsettings.get",
      "securitycenter.eventthreatdetectionsettings.update",
      "securitycenter.findingexternalsystems.update",
      "securitycenter.findings.bulkMuteUpdate",
      "securitycenter.findings.group",
      "securitycenter.findings.list",
      "securitycenter.findings.listFindingPropertyNames",
      "securitycenter.findings.setMute",
      "securitycenter.findings.setState",
      "securitycenter.findings.setWorkflowState",
      "securitycenter.findings.update",
      "securitycenter.findingsecuritymarks.update",
      "securitycenter.integratedvulnerabilityscannersettings.calculate",
      "securitycenter.integratedvulnerabilityscannersettings.get",
      "securitycenter.integratedvulnerabilityscannersettings.update",
      "securitycenter.muteconfigs.create",
      "securitycenter.muteconfigs.delete",
      "securitycenter.muteconfigs.get",
      "securitycenter.muteconfigs.list",
      "securitycenter.muteconfigs.update",
      "securitycenter.notificationconfig.create",
      "securitycenter.notificationconfig.delete",
      "securitycenter.notificationconfig.get",
      "securitycenter.notificationconfig.list",
      "securitycenter.notificationconfig.update",
      "securitycenter.organizationsettings.get",
      "securitycenter.organizationsettings.update",
      "securitycenter.rapidvulnerabilitydetectionsettings.calculate",
      "securitycenter.rapidvulnerabilitydetectionsettings.get",
      "securitycenter.rapidvulnerabilitydetectionsettings.update",
      "securitycenter.resourcevalueconfigs.create",
      "securitycenter.resourcevalueconfigs.delete",
      "securitycenter.resourcevalueconfigs.get",
      "securitycenter.resourcevalueconfigs.list",
      "securitycenter.resourcevalueconfigs.update",
      "securitycenter.securitycentersettings.get",
      "securitycenter.securitycentersettings.update",
      "securitycenter.securityhealthanalyticscustommodules.create",
      "securitycenter.securityhealthanalyticscustommodules.delete",
      "securitycenter.securityhealthanalyticscustommodules.get",
      "securitycenter.securityhealthanalyticscustommodules.list",
      "securitycenter.securityhealthanalyticscustommodules.simulate",
      "securitycenter.securityhealthanalyticscustommodules.test",
      "securitycenter.securityhealthanalyticscustommodules.update",
      "securitycenter.securityhealthanalyticssettings.calculate",
      "securitycenter.securityhealthanalyticssettings.get",
      "securitycenter.securityhealthanalyticssettings.update",
      "securitycenter.simulations.get",
      "securitycenter.sources.get",
      "securitycenter.sources.getIamPolicy",
      "securitycenter.sources.list",
      "securitycenter.sources.setIamPolicy",
      "securitycenter.sources.update",
      "securitycenter.subscription.get",
      "securitycenter.userinterfacemetadata.get",
      "securitycenter.valuedresources.list",
      "securitycenter.virtualmachinethreatdetectionsettings.calculate",
      "securitycenter.virtualmachinethreatdetectionsettings.get",
      "securitycenter.virtualmachinethreatdetectionsettings.update",
      "securitycenter.websecurityscannersettings.calculate",
      "securitycenter.websecurityscannersettings.get",
      "securitycenter.websecurityscannersettings.update",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.adminEditor",
    "title": "Security Center Admin Editor",
    "description": "Admin Read-write access to security center",
    "includedPermissions": [
      "appengine.applications.get",
      "cloudasset.assets.exportIamPolicy",
      "cloudasset.assets.exportOSInventories",
      "cloudasset.assets.exportResource",
      "cloudasset.assets.queryAccessPolicy",
      "cloudasset.assets.queryIamPolicy",
      "cloudasset.assets.queryOSInventories",
      "cloudasset.assets.queryResource",
      "cloudasset.assets.searchAllIamPolicies",
      "cloudasset.assets.searchAllResources",
      "cloudsecurityscanner.crawledurls.list",
      "cloudsecurityscanner.results.get",
      "cloudsecurityscanner.results.list",
      "cloudsecurityscanner.scanruns.get",
      "cloudsecurityscanner.scanruns.getSummary",
      "cloudsecurityscanner.scanruns.list",
      "cloudsecurityscanner.scanruns.stop",
      "cloudsecurityscanner.scans.create",
      "cloudsecurityscanner.scans.delete",
      "cloudsecurityscanner.scans.get",
      "cloudsecurityscanner.scans.list",
      "cloudsecurityscanner.scans.run",
      "cloudsecurityscanner.scans.update",
      "compute.addresses.list",
      "resourcemanager.folders.get",
      "resourcemanager.folders.list",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "resourcemanager.tagValues.get",
      "securitycenter.assets.group",
      "securitycenter.assets.list",
      "securitycenter.assets.listAssetPropertyNames",
      "securitycenter.assets.runDiscovery",
      "securitycenter.assetsecuritymarks.update",
      "securitycenter.attackpaths.list",
      "securitycenter.bigQueryExports.create",
      "securitycenter.bigQueryExports.delete",
      "securitycenter.bigQueryExports.get",
      "securitycenter.bigQueryExports.list",
      "securitycenter.bigQueryExports.update",
      "securitycenter.containerthreatdetectionsettings.calculate",
      "securitycenter.containerthreatdetectionsettings.get",
      "securitycenter.effectivesecurityhealthanalyticscustommodules.get",
      "securitycenter.effectivesecurityhealthanalyticscustommodules.list",
      "securitycenter.eventthreatdetectionsettings.calculate",
      "securitycenter.eventthreatdetectionsettings.get",
      "securitycenter.findingexternalsystems.update",
      "securitycenter.findings.bulkMuteUpdate",
      "securitycenter.findings.group",
      "securitycenter.findings.list",
      "securitycenter.findings.listFindingPropertyNames",
      "securitycenter.findings.setMute",
      "securitycenter.findings.setState",
      "securitycenter.findings.setWorkflowState",
      "securitycenter.findings.update",
      "securitycenter.findingsecuritymarks.update",
      "securitycenter.integratedvulnerabilityscannersettings.calculate",
      "securitycenter.integratedvulnerabilityscannersettings.get",
      "securitycenter.muteconfigs.create",
      "securitycenter.muteconfigs.delete",
      "securitycenter.muteconfigs.get",
      "securitycenter.muteconfigs.list",
      "securitycenter.muteconfigs.update",
      "securitycenter.notificationconfig.create",
      "securitycenter.notificationconfig.delete",
      "securitycenter.notificationconfig.get",
      "securitycenter.notificationconfig.list",
      "securitycenter.notificationconfig.update",
      "securitycenter.organizationsettings.get",
      "securitycenter.rapidvulnerabilitydetectionsettings.calculate",
      "securitycenter.rapidvulnerabilitydetectionsettings.get",
      "securitycenter.resourcevalueconfigs.create",
      "securitycenter.resourcevalueconfigs.delete",
      "securitycenter.resourcevalueconfigs.get",
      "securitycenter.resourcevalueconfigs.list",
      "securitycenter.resourcevalueconfigs.update",
      "securitycenter.securitycentersettings.get",
      "securitycenter.securityhealthanalyticscustommodules.get",
      "securitycenter.securityhealthanalyticscustommodules.list",
      "securitycenter.securityhealthanalyticscustommodules.simulate",
      "securitycenter.securityhealthanalyticscustommodules.test",
      "securitycenter.securityhealthanalyticssettings.calculate",
      "securitycenter.securityhealthanalyticssettings.get",
      "securitycenter.simulations.get",
      "securitycenter.sources.get",
      "securitycenter.sources.list",
      "securitycenter.sources.update",
      "securitycenter.subscription.get",
      "securitycenter.userinterfacemetadata.get",
      "securitycenter.valuedresources.list",
      "securitycenter.virtualmachinethreatdetectionsettings.calculate",
      "securitycenter.virtualmachinethreatdetectionsettings.get",
      "securitycenter.websecurityscannersettings.calculate",
      "securitycenter.websecurityscannersettings.get",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.adminViewer",
    "title": "Security Center Admin Viewer",
    "description": "Admin Read access to security center",
    "includedPermissions": [
      "cloudasset.assets.exportIamPolicy",
      "cloudasset.assets.exportOSInventories",
      "cloudasset.assets.exportResource",
      "cloudasset.assets.queryAccessPolicy",
      "cloudasset.assets.queryIamPolicy",
      "cloudasset.assets.queryOSInventories",
      "cloudasset.assets.queryResource",
      "cloudasset.assets.searchAllIamPolicies",
      "cloudasset.assets.searchAllResources",
      "cloudsecurityscanner.crawledurls.list",
      "cloudsecurityscanner.results.get",
      "cloudsecurityscanner.results.list",
      "cloudsecurityscanner.scanruns.get",
      "cloudsecurityscanner.scanruns.getSummary",
      "cloudsecurityscanner.scanruns.list",
      "cloudsecurityscanner.scans.get",
      "cloudsecurityscanner.scans.list",
      "resourcemanager.folders.get",
      "resourcemanager.folders.list",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "resourcemanager.tagValues.get",
      "securitycenter.assets.group",
      "securitycenter.assets.list",
      "securitycenter.assets.listAssetPropertyNames",
      "securitycenter.attackpaths.list",
      "securitycenter.bigQueryExports.get",
      "securitycenter.bigQueryExports.list",
      "securitycenter.containerthreatdetectionsettings.calculate",
      "securitycenter.containerthreatdetectionsettings.get",
      "securitycenter.effectivesecurityhealthanalyticscustommodules.get",
      "securitycenter.effectivesecurityhealthanalyticscustommodules.list",
      "securitycenter.eventthreatdetectionsettings.calculate",
      "securitycenter.eventthreatdetectionsettings.get",
      "securitycenter.findings.group",
      "securitycenter.findings.list",
      "securitycenter.findings.listFindingPropertyNames",
      "securitycenter.integratedvulnerabilityscannersettings.calculate",
      "securitycenter.integratedvulnerabilityscannersettings.get",
      "securitycenter.muteconfigs.get",
      "securitycenter.muteconfigs.list",
      "securitycenter.notificationconfig.get",
      "securitycenter.notificationconfig.list",
      "securitycenter.organizationsettings.get",
      "securitycenter.rapidvulnerabilitydetectionsettings.calculate",
      "securitycenter.rapidvulnerabilitydetectionsettings.get",
      "securitycenter.resourcevalueconfigs.get",
      "securitycenter.resourcevalueconfigs.list",
      "securitycenter.securitycentersettings.get",
      "securitycenter.securityhealthanalyticscustommodules.get",
      "securitycenter.securityhealthanalyticscustommodules.list",
      "securitycenter.securityhealthanalyticscustommodules.simulate",
      "securitycenter.securityhealthanalyticscustommodules.test",
      "securitycenter.securityhealthanalyticssettings.calculate",
      "securitycenter.securityhealthanalyticssettings.get",
      "securitycenter.simulations.get",
      "securitycenter.sources.get",
      "securitycenter.sources.list",
      "securitycenter.subscription.get",
      "securitycenter.userinterfacemetadata.get",
      "securitycenter.valuedresources.list",
      "securitycenter.virtualmachinethreatdetectionsettings.calculate",
      "securitycenter.virtualmachinethreatdetectionsettings.get",
      "securitycenter.websecurityscannersettings.calculate",
      "securitycenter.websecurityscannersettings.get",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.assetSecurityMarksWriter",
    "title": "Security Center Asset Security Marks Writer",
    "description": "Write access to asset security marks",
    "includedPermissions": [
      "securitycenter.assetsecuritymarks.update",
      "securitycenter.userinterfacemetadata.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.assetsDiscoveryRunner",
    "title": "Security Center Assets Discovery Runner",
    "description": "Run asset discovery access to assets",
    "includedPermissions": [
      "securitycenter.assets.runDiscovery",
      "securitycenter.userinterfacemetadata.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.assetsViewer",
    "title": "Security Center Assets Viewer",
    "description": "Read access to assets",
    "includedPermissions": [
      "cloudasset.assets.exportIamPolicy",
      "cloudasset.assets.exportOSInventories",
      "cloudasset.assets.exportResource",
      "cloudasset.assets.queryAccessPolicy",
      "cloudasset.assets.queryIamPolicy",
      "cloudasset.assets.queryOSInventories",
      "cloudasset.assets.queryResource",
      "cloudasset.assets.searchAllIamPolicies",
      "cloudasset.assets.searchAllResources",
      "resourcemanager.folders.get",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "securitycenter.assets.group",
      "securitycenter.assets.list",
      "securitycenter.assets.listAssetPropertyNames",
      "securitycenter.userinterfacemetadata.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.attackPathsViewer",
    "title": "Security Center Attack Paths Reader",
    "description": "Read access to security center attack paths",
    "includedPermissions": [
      "securitycenter.attackpaths.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.automationServiceAgent",
    "title": "Security Center Automation Service Agent",
    "description": "Security Center automation service agent can configure GCP resources to enable security scanning.",
    "includedPermissions": [
      "cloudasset.feeds.create",
      "cloudasset.feeds.delete",
      "cloudasset.feeds.get",
      "cloudasset.feeds.list",
      "cloudasset.feeds.update",
      "resourcemanager.folders.get",
      "resourcemanager.folders.list",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list",
      "serviceusage.services.enable"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.bigQueryExportsEditor",
    "title": "Security Center BigQuery Exports Editor",
    "description": "Read-Write access to security center BigQuery Exports",
    "includedPermissions": [
      "resourcemanager.folders.get",
      "resourcemanager.folders.list",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "securitycenter.bigQueryExports.create",
      "securitycenter.bigQueryExports.delete",
      "securitycenter.bigQueryExports.get",
      "securitycenter.bigQueryExports.list",
      "securitycenter.bigQueryExports.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.bigQueryExportsViewer",
    "title": "Security Center BigQuery Exports Viewer",
    "description": "Read access to security center BigQuery Exports",
    "includedPermissions": [
      "resourcemanager.folders.get",
      "resourcemanager.folders.list",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "securitycenter.bigQueryExports.get",
      "securitycenter.bigQueryExports.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.controlServiceAgent",
    "title": "Security Center Control Service Agent",
    "description": "Security Center Control service agent can monitor and configure GCP resources and import security findings.",
    "includedPermissions": [
      "bigquery.datasets.get",
      "binaryauthorization.policy.get",
      "cloudasset.assets.analyzeIamPolicy",
      "cloudasset.assets.analyzeMove",
      "cloudasset.assets.analyzeOrgPolicy",
      "cloudasset.assets.exportAccessLevel",
      "cloudasset.assets.exportAccessPolicy",
      "cloudasset.assets.exportAiplatformBatchPredictionJobs",
      "cloudasset.assets.exportAiplatformCustomJobs",
      "cloudasset.assets.exportAiplatformDataLabelingJobs",
      "cloudasset.assets.exportAiplatformDatasets",
      "cloudasset.assets.exportAiplatformEndpoints",
      "cloudasset.assets.exportAiplatformHyperparameterTuningJobs",
      "cloudasset.assets.exportAiplatformMetadataStores",
      "cloudasset.assets.exportAiplatformModelDeploymentMonitoringJobs",
      "cloudasset.assets.exportAiplatformModels",
      "cloudasset.assets.exportAiplatformPipelineJobs",
      "cloudasset.assets.exportAiplatformSpecialistPools",
      "cloudasset.assets.exportAiplatformTrainingPipelines",
      "cloudasset.assets.exportAllAccessPolicy",
      "cloudasset.assets.exportAnthosConnectedCluster",
      "cloudasset.assets.exportAnthosedgeCluster",
      "cloudasset.assets.exportApigatewayApi",
      "cloudasset.assets.exportApigatewayApiConfig",
      "cloudasset.assets.exportApigatewayGateway",
      "cloudasset.assets.exportApikeysKeys",
      "cloudasset.assets.exportAppengineApplications",
      "cloudasset.assets.exportAppengineServices",
      "cloudasset.assets.exportAppengineVersions",
      "cloudasset.assets.exportArtifactregistryDockerImages",
      "cloudasset.assets.exportArtifactregistryRepositories",
      "cloudasset.assets.exportAssuredWorkloadsWorkloads",
      "cloudasset.assets.exportBeyondCorpApiGateways",
      "cloudasset.assets.exportBeyondCorpAppConnections",
      "cloudasset.assets.exportBeyondCorpAppConnectors",
      "cloudasset.assets.exportBeyondCorpAppGateways",
      "cloudasset.assets.exportBeyondCorpClientConnectorServices",
      "cloudasset.assets.exportBeyondCorpClientGateways",
      "cloudasset.assets.exportBigqueryDatasets",
      "cloudasset.assets.exportBigqueryModels",
      "cloudasset.assets.exportBigqueryTables",
      "cloudasset.assets.exportBigtableAppProfile",
      "cloudasset.assets.exportBigtableBackup",
      "cloudasset.assets.exportBigtableCluster",
      "cloudasset.assets.exportBigtableInstance",
      "cloudasset.assets.exportBigtableTable",
      "cloudasset.assets.exportCloudAssetFeeds",
      "cloudasset.assets.exportCloudDeployDeliveryPipelines",
      "cloudasset.assets.exportCloudDeployReleases",
      "cloudasset.assets.exportCloudDeployRollouts",
      "cloudasset.assets.exportCloudDeployTargets",
      "cloudasset.assets.exportCloudDocumentAIEvaluation",
      "cloudasset.assets.exportCloudDocumentAIHumanReviewConfig",
      "cloudasset.assets.exportCloudDocumentAILabelerPool",
      "cloudasset.assets.exportCloudDocumentAIProcessor",
      "cloudasset.assets.exportCloudDocumentAIProcessorVersion",
      "cloudasset.assets.exportCloudbillingBillingAccounts",
      "cloudasset.assets.exportCloudbillingProjectBillingInfos",
      "cloudasset.assets.exportCloudfunctionsFunctions",
      "cloudasset.assets.exportCloudfunctionsGen2Functions",
      "cloudasset.assets.exportCloudkmsCryptoKeyVersions",
      "cloudasset.assets.exportCloudkmsCryptoKeys",
      "cloudasset.assets.exportCloudkmsEkmConnections",
      "cloudasset.assets.exportCloudkmsImportJobs",
      "cloudasset.assets.exportCloudkmsKeyRings",
      "cloudasset.assets.exportCloudmemcacheInstances",
      "cloudasset.assets.exportCloudresourcemanagerFolders",
      "cloudasset.assets.exportCloudresourcemanagerOrganizations",
      "cloudasset.assets.exportCloudresourcemanagerProjects",
      "cloudasset.assets.exportCloudresourcemanagerTagBindings",
      "cloudasset.assets.exportCloudresourcemanagerTagKeys",
      "cloudasset.assets.exportCloudresourcemanagerTagValues",
      "cloudasset.assets.exportComposerEnvironments",
      "cloudasset.assets.exportComputeAddress",
      "cloudasset.assets.exportComputeAutoscalers",
      "cloudasset.assets.exportComputeBackendBuckets",
      "cloudasset.assets.exportComputeBackendServices",
      "cloudasset.assets.exportComputeCommitments",
      "cloudasset.assets.exportComputeDisks",
      "cloudasset.assets.exportComputeExternalVpnGateways",
      "cloudasset.assets.exportComputeFirewallPolicies",
      "cloudasset.assets.exportComputeFirewalls",
      "cloudasset.assets.exportComputeForwardingRules",
      "cloudasset.assets.exportComputeGlobalAddress",
      "cloudasset.assets.exportComputeGlobalForwardingRules",
      "cloudasset.assets.exportComputeHealthChecks",
      "cloudasset.assets.exportComputeHttpHealthChecks",
      "cloudasset.assets.exportComputeHttpsHealthChecks",
      "cloudasset.assets.exportComputeImages",
      "cloudasset.assets.exportComputeInstanceGroupManagers",
      "cloudasset.assets.exportComputeInstanceGroups",
      "cloudasset.assets.exportComputeInstanceTemplates",
      "cloudasset.assets.exportComputeInstances",
      "cloudasset.assets.exportComputeInterconnect",
      "cloudasset.assets.exportComputeInterconnectAttachment",
      "cloudasset.assets.exportComputeLicenses",
      "cloudasset.assets.exportComputeNetworkEndpointGroups",
      "cloudasset.assets.exportComputeNetworks",
      "cloudasset.assets.exportComputeNodeGroups",
      "cloudasset.assets.exportComputeNodeTemplates",
      "cloudasset.assets.exportComputePacketMirrorings",
      "cloudasset.assets.exportComputeProjects",
      "cloudasset.assets.exportComputeRegionAutoscaler",
      "cloudasset.assets.exportComputeRegionBackendServices",
      "cloudasset.assets.exportComputeRegionDisk",
      "cloudasset.assets.exportComputeRegionInstanceGroup",
      "cloudasset.assets.exportComputeRegionInstanceGroupManager",
      "cloudasset.assets.exportComputeReservations",
      "cloudasset.assets.exportComputeResourcePolicies",
      "cloudasset.assets.exportComputeRouters",
      "cloudasset.assets.exportComputeRoutes",
      "cloudasset.assets.exportComputeSecurityPolicy",
      "cloudasset.assets.exportComputeServiceAttachments",
      "cloudasset.assets.exportComputeSnapshots",
      "cloudasset.assets.exportComputeSslCertificates",
      "cloudasset.assets.exportComputeSslPolicies",
      "cloudasset.assets.exportComputeSubnetworks",
      "cloudasset.assets.exportComputeTargetHttpProxies",
      "cloudasset.assets.exportComputeTargetHttpsProxies",
      "cloudasset.assets.exportComputeTargetInstances",
      "cloudasset.assets.exportComputeTargetPools",
      "cloudasset.assets.exportComputeTargetSslProxies",
      "cloudasset.assets.exportComputeTargetTcpProxies",
      "cloudasset.assets.exportComputeTargetVpnGateways",
      "cloudasset.assets.exportComputeUrlMaps",
      "cloudasset.assets.exportComputeVpnGateways",
      "cloudasset.assets.exportComputeVpnTunnels",
      "cloudasset.assets.exportConnectorsConnections",
      "cloudasset.assets.exportConnectorsConnectorVersions",
      "cloudasset.assets.exportConnectorsConnectors",
      "cloudasset.assets.exportConnectorsProviders",
      "cloudasset.assets.exportConnectorsRuntimeConfigs",
      "cloudasset.assets.exportContainerAppsDeployment",
      "cloudasset.assets.exportContainerAppsReplicaSets",
      "cloudasset.assets.exportContainerBatchJobs",
      "cloudasset.assets.exportContainerClusterrole",
      "cloudasset.assets.exportContainerClusterrolebinding",
      "cloudasset.assets.exportContainerClusters",
      "cloudasset.assets.exportContainerExtensionsIngresses",
      "cloudasset.assets.exportContainerJobs",
      "cloudasset.assets.exportContainerNamespace",
      "cloudasset.assets.exportContainerNetworkingIngresses",
      "cloudasset.assets.exportContainerNetworkingNetworkPolicies",
      "cloudasset.assets.exportContainerNode",
      "cloudasset.assets.exportContainerNodepool",
      "cloudasset.assets.exportContainerPod",
      "cloudasset.assets.exportContainerReplicaSets",
      "cloudasset.assets.exportContainerRole",
      "cloudasset.assets.exportContainerRolebinding",
      "cloudasset.assets.exportContainerServices",
      "cloudasset.assets.exportContainerregistryImage",
      "cloudasset.assets.exportDataMigrationConnectionProfiles",
      "cloudasset.assets.exportDataMigrationMigrationJobs",
      "cloudasset.assets.exportDataflowJobs",
      "cloudasset.assets.exportDatafusionInstance",
      "cloudasset.assets.exportDataplexAssets",
      "cloudasset.assets.exportDataplexLakes",
      "cloudasset.assets.exportDataplexTasks",
      "cloudasset.assets.exportDataplexZones",
      "cloudasset.assets.exportDataprocAutoscalingPolicies",
      "cloudasset.assets.exportDataprocBatches",
      "cloudasset.assets.exportDataprocClusters",
      "cloudasset.assets.exportDataprocJobs",
      "cloudasset.assets.exportDataprocSessions",
      "cloudasset.assets.exportDataprocWorkflowTemplates",
      "cloudasset.assets.exportDatastreamConnectionProfile",
      "cloudasset.assets.exportDatastreamPrivateConnection",
      "cloudasset.assets.exportDatastreamStream",
      "cloudasset.assets.exportDialogflowAgents",
      "cloudasset.assets.exportDialogflowConversationProfiles",
      "cloudasset.assets.exportDialogflowKnowledgeBases",
      "cloudasset.assets.exportDialogflowLocationSettings",
      "cloudasset.assets.exportDlpDeidentifyTemplates",
      "cloudasset.assets.exportDlpDlpJobs",
      "cloudasset.assets.exportDlpInspectTemplates",
      "cloudasset.assets.exportDlpJobTriggers",
      "cloudasset.assets.exportDlpStoredInfoTypes",
      "cloudasset.assets.exportDnsManagedZones",
      "cloudasset.assets.exportDnsPolicies",
      "cloudasset.assets.exportDomainsRegistrations",
      "cloudasset.assets.exportEventarcTriggers",
      "cloudasset.assets.exportFileBackups",
      "cloudasset.assets.exportFileInstances",
      "cloudasset.assets.exportFirebaseAppInfos",
      "cloudasset.assets.exportFirebaseProjects",
      "cloudasset.assets.exportFirestoreDatabases",
      "cloudasset.assets.exportGKEHubFeatures",
      "cloudasset.assets.exportGKEHubMemberships",
      "cloudasset.assets.exportGameservicesGameServerClusters",
      "cloudasset.assets.exportGameservicesGameServerConfigs",
      "cloudasset.assets.exportGameservicesGameServerDeployments",
      "cloudasset.assets.exportGameservicesRealms",
      "cloudasset.assets.exportGkeBackupBackupPlans",
      "cloudasset.assets.exportGkeBackupBackups",
      "cloudasset.assets.exportGkeBackupRestorePlans",
      "cloudasset.assets.exportGkeBackupRestores",
      "cloudasset.assets.exportGkeBackupVolumeBackups",
      "cloudasset.assets.exportGkeBackupVolumeRestores",
      "cloudasset.assets.exportHealthcareConsentStores",
      "cloudasset.assets.exportHealthcareDatasets",
      "cloudasset.assets.exportHealthcareDicomStores",
      "cloudasset.assets.exportHealthcareFhirStores",
      "cloudasset.assets.exportHealthcareHl7V2Stores",
      "cloudasset.assets.exportIamPolicy",
      "cloudasset.assets.exportIamRoles",
      "cloudasset.assets.exportIamServiceAccountKeys",
      "cloudasset.assets.exportIamServiceAccounts",
      "cloudasset.assets.exportIapTunnel",
      "cloudasset.assets.exportIapTunnelInstances",
      "cloudasset.assets.exportIapTunnelZones",
      "cloudasset.assets.exportIapWeb",
      "cloudasset.assets.exportIapWebServiceVersion",
      "cloudasset.assets.exportIapWebServices",
      "cloudasset.assets.exportIapWebType",
      "cloudasset.assets.exportIdsEndpoints",
      "cloudasset.assets.exportIntegrationsAuthConfigs",
      "cloudasset.assets.exportIntegrationsCertificates",
      "cloudasset.assets.exportIntegrationsExecutions",
      "cloudasset.assets.exportIntegrationsIntegrationVersions",
      "cloudasset.assets.exportIntegrationsIntegrations",
      "cloudasset.assets.exportIntegrationsSfdcChannels",
      "cloudasset.assets.exportIntegrationsSfdcInstances",
      "cloudasset.assets.exportIntegrationsSuspensions",
      "cloudasset.assets.exportLoggingLogMetrics",
      "cloudasset.assets.exportLoggingLogSinks",
      "cloudasset.assets.exportManagedidentitiesDomain",
      "cloudasset.assets.exportMetastoreBackups",
      "cloudasset.assets.exportMetastoreMetadataImports",
      "cloudasset.assets.exportMetastoreServices",
      "cloudasset.assets.exportMonitoringAlertPolicies",
      "cloudasset.assets.exportNetworkConnectivityHubs",
      "cloudasset.assets.exportNetworkConnectivitySpokes",
      "cloudasset.assets.exportNetworkManagementConnectivityTests",
      "cloudasset.assets.exportNetworkServicesEndpointPolicies",
      "cloudasset.assets.exportNetworkServicesGateways",
      "cloudasset.assets.exportNetworkServicesGrpcRoutes",
      "cloudasset.assets.exportNetworkServicesHttpRoutes",
      "cloudasset.assets.exportNetworkServicesMeshes",
      "cloudasset.assets.exportNetworkServicesServiceBindings",
      "cloudasset.assets.exportNetworkServicesTcpRoutes",
      "cloudasset.assets.exportNetworkServicesTlsRoutes",
      "cloudasset.assets.exportOSConfigOSPolicyAssignmentReports",
      "cloudasset.assets.exportOSConfigOSPolicyAssignments",
      "cloudasset.assets.exportOSConfigVulnerabilityReports",
      "cloudasset.assets.exportOSInventories",
      "cloudasset.assets.exportOrgPolicy",
      "cloudasset.assets.exportPatchDeployments",
      "cloudasset.assets.exportPubsubSnapshots",
      "cloudasset.assets.exportPubsubSubscriptions",
      "cloudasset.assets.exportPubsubTopics",
      "cloudasset.assets.exportRedisInstances",
      "cloudasset.assets.exportResource",
      "cloudasset.assets.exportSecretManagerSecretVersions",
      "cloudasset.assets.exportSecretManagerSecrets",
      "cloudasset.assets.exportServiceDirectoryNamespaces",
      "cloudasset.assets.exportServicePerimeter",
      "cloudasset.assets.exportServiceconsumermanagementConsumerProperty",
      "cloudasset.assets.exportServiceconsumermanagementConsumerQuotaLimits",
      "cloudasset.assets.exportServiceconsumermanagementConsumers",
      "cloudasset.assets.exportServiceconsumermanagementProducerOverrides",
      "cloudasset.assets.exportServiceconsumermanagementTenancyUnits",
      "cloudasset.assets.exportServiceconsumermanagementVisibility",
      "cloudasset.assets.exportServicemanagementServices",
      "cloudasset.assets.exportServiceusageAdminOverrides",
      "cloudasset.assets.exportServiceusageConsumerOverrides",
      "cloudasset.assets.exportServiceusageServices",
      "cloudasset.assets.exportSpannerBackups",
      "cloudasset.assets.exportSpannerDatabases",
      "cloudasset.assets.exportSpannerInstances",
      "cloudasset.assets.exportSpeakerIdPhrases",
      "cloudasset.assets.exportSpeakerIdSettings",
      "cloudasset.assets.exportSpeakerIdSpeakers",
      "cloudasset.assets.exportSpeechCustomClasses",
      "cloudasset.assets.exportSpeechPhraseSets",
      "cloudasset.assets.exportSqladminBackupRuns",
      "cloudasset.assets.exportSqladminInstances",
      "cloudasset.assets.exportStorageBuckets",
      "cloudasset.assets.exportTpuNodes",
      "cloudasset.assets.exportVpcaccessConnector",
      "cloudasset.assets.listAccessLevel",
      "cloudasset.assets.listAccessPolicy",
      "cloudasset.assets.listAiplatformBatchPredictionJobs",
      "cloudasset.assets.listAiplatformCustomJobs",
      "cloudasset.assets.listAiplatformDataLabelingJobs",
      "cloudasset.assets.listAiplatformDatasets",
      "cloudasset.assets.listAiplatformEndpoints",
      "cloudasset.assets.listAiplatformHyperparameterTuningJobs",
      "cloudasset.assets.listAiplatformMetadataStores",
      "cloudasset.assets.listAiplatformModelDeploymentMonitoringJobs",
      "cloudasset.assets.listAiplatformModels",
      "cloudasset.assets.listAiplatformPipelineJobs",
      "cloudasset.assets.listAiplatformSpecialistPools",
      "cloudasset.assets.listAiplatformTrainingPipelines",
      "cloudasset.assets.listAllAccessPolicy",
      "cloudasset.assets.listAnthosConnectedCluster",
      "cloudasset.assets.listAnthosedgeCluster",
      "cloudasset.assets.listApigatewayApi",
      "cloudasset.assets.listApigatewayApiConfig",
      "cloudasset.assets.listApigatewayGateway",
      "cloudasset.assets.listApikeysKeys",
      "cloudasset.assets.listAppengineApplications",
      "cloudasset.assets.listAppengineServices",
      "cloudasset.assets.listAppengineVersions",
      "cloudasset.assets.listArtifactregistryDockerImages",
      "cloudasset.assets.listArtifactregistryRepositories",
      "cloudasset.assets.listAssuredWorkloadsWorkloads",
      "cloudasset.assets.listBeyondCorpApiGateways",
      "cloudasset.assets.listBeyondCorpAppConnections",
      "cloudasset.assets.listBeyondCorpAppConnectors",
      "cloudasset.assets.listBeyondCorpAppGateways",
      "cloudasset.assets.listBeyondCorpClientConnectorServices",
      "cloudasset.assets.listBeyondCorpClientGateways",
      "cloudasset.assets.listBigqueryDatasets",
      "cloudasset.assets.listBigqueryModels",
      "cloudasset.assets.listBigqueryTables",
      "cloudasset.assets.listBigtableAppProfile",
      "cloudasset.assets.listBigtableBackup",
      "cloudasset.assets.listBigtableCluster",
      "cloudasset.assets.listBigtableInstance",
      "cloudasset.assets.listBigtableTable",
      "cloudasset.assets.listCloudAssetFeeds",
      "cloudasset.assets.listCloudDeployDeliveryPipelines",
      "cloudasset.assets.listCloudDeployReleases",
      "cloudasset.assets.listCloudDeployRollouts",
      "cloudasset.assets.listCloudDeployTargets",
      "cloudasset.assets.listCloudDocumentAIEvaluation",
      "cloudasset.assets.listCloudDocumentAIHumanReviewConfig",
      "cloudasset.assets.listCloudDocumentAILabelerPool",
      "cloudasset.assets.listCloudDocumentAIProcessor",
      "cloudasset.assets.listCloudDocumentAIProcessorVersion",
      "cloudasset.assets.listCloudbillingBillingAccounts",
      "cloudasset.assets.listCloudbillingProjectBillingInfos",
      "cloudasset.assets.listCloudfunctionsFunctions",
      "cloudasset.assets.listCloudfunctionsGen2Functions",
      "cloudasset.assets.listCloudkmsCryptoKeyVersions",
      "cloudasset.assets.listCloudkmsCryptoKeys",
      "cloudasset.assets.listCloudkmsEkmConnections",
      "cloudasset.assets.listCloudkmsImportJobs",
      "cloudasset.assets.listCloudkmsKeyRings",
      "cloudasset.assets.listCloudmemcacheInstances",
      "cloudasset.assets.listCloudresourcemanagerFolders",
      "cloudasset.assets.listCloudresourcemanagerOrganizations",
      "cloudasset.assets.listCloudresourcemanagerProjects",
      "cloudasset.assets.listCloudresourcemanagerTagBindings",
      "cloudasset.assets.listCloudresourcemanagerTagKeys",
      "cloudasset.assets.listCloudresourcemanagerTagValues",
      "cloudasset.assets.listComposerEnvironments",
      "cloudasset.assets.listComputeAddress",
      "cloudasset.assets.listComputeAutoscalers",
      "cloudasset.assets.listComputeBackendBuckets",
      "cloudasset.assets.listComputeBackendServices",
      "cloudasset.assets.listComputeCommitments",
      "cloudasset.assets.listComputeDisks",
      "cloudasset.assets.listComputeExternalVpnGateways",
      "cloudasset.assets.listComputeFirewallPolicies",
      "cloudasset.assets.listComputeFirewalls",
      "cloudasset.assets.listComputeForwardingRules",
      "cloudasset.assets.listComputeGlobalAddress",
      "cloudasset.assets.listComputeGlobalForwardingRules",
      "cloudasset.assets.listComputeHealthChecks",
      "cloudasset.assets.listComputeHttpHealthChecks",
      "cloudasset.assets.listComputeHttpsHealthChecks",
      "cloudasset.assets.listComputeImages",
      "cloudasset.assets.listComputeInstanceGroupManagers",
      "cloudasset.assets.listComputeInstanceGroups",
      "cloudasset.assets.listComputeInstanceTemplates",
      "cloudasset.assets.listComputeInstances",
      "cloudasset.assets.listComputeInterconnect",
      "cloudasset.assets.listComputeInterconnectAttachment",
      "cloudasset.assets.listComputeLicenses",
      "cloudasset.assets.listComputeNetworkEndpointGroups",
      "cloudasset.assets.listComputeNetworks",
      "cloudasset.assets.listComputeNodeGroups",
      "cloudasset.assets.listComputeNodeTemplates",
      "cloudasset.assets.listComputePacketMirrorings",
      "cloudasset.assets.listComputeProjects",
      "cloudasset.assets.listComputeRegionAutoscaler",
      "cloudasset.assets.listComputeRegionBackendServices",
      "cloudasset.assets.listComputeRegionDisk",
      "cloudasset.assets.listComputeRegionInstanceGroup",
      "cloudasset.assets.listComputeRegionInstanceGroupManager",
      "cloudasset.assets.listComputeReservations",
      "cloudasset.assets.listComputeResourcePolicies",
      "cloudasset.assets.listComputeRouters",
      "cloudasset.assets.listComputeRoutes",
      "cloudasset.assets.listComputeSecurityPolicy",
      "cloudasset.assets.listComputeServiceAttachments",
      "cloudasset.assets.listComputeSnapshots",
      "cloudasset.assets.listComputeSslCertificates",
      "cloudasset.assets.listComputeSslPolicies",
      "cloudasset.assets.listComputeSubnetworks",
      "cloudasset.assets.listComputeTargetHttpProxies",
      "cloudasset.assets.listComputeTargetHttpsProxies",
      "cloudasset.assets.listComputeTargetInstances",
      "cloudasset.assets.listComputeTargetPools",
      "cloudasset.assets.listComputeTargetSslProxies",
      "cloudasset.assets.listComputeTargetTcpProxies",
      "cloudasset.assets.listComputeTargetVpnGateways",
      "cloudasset.assets.listComputeUrlMaps",
      "cloudasset.assets.listComputeVpnGateways",
      "cloudasset.assets.listComputeVpnTunnels",
      "cloudasset.assets.listConnectorsConnections",
      "cloudasset.assets.listConnectorsConnectorVersions",
      "cloudasset.assets.listConnectorsConnectors",
      "cloudasset.assets.listConnectorsProviders",
      "cloudasset.assets.listConnectorsRuntimeConfigs",
      "cloudasset.assets.listContainerAppsDeployment",
      "cloudasset.assets.listContainerAppsReplicaSets",
      "cloudasset.assets.listContainerBatchJobs",
      "cloudasset.assets.listContainerClusterrole",
      "cloudasset.assets.listContainerClusterrolebinding",
      "cloudasset.assets.listContainerClusters",
      "cloudasset.assets.listContainerExtensionsIngresses",
      "cloudasset.assets.listContainerJobs",
      "cloudasset.assets.listContainerNamespace",
      "cloudasset.assets.listContainerNetworkingIngresses",
      "cloudasset.assets.listContainerNetworkingNetworkPolicies",
      "cloudasset.assets.listContainerNode",
      "cloudasset.assets.listContainerNodepool",
      "cloudasset.assets.listContainerPod",
      "cloudasset.assets.listContainerReplicaSets",
      "cloudasset.assets.listContainerRole",
      "cloudasset.assets.listContainerRolebinding",
      "cloudasset.assets.listContainerServices",
      "cloudasset.assets.listContainerregistryImage",
      "cloudasset.assets.listDataMigrationConnectionProfiles",
      "cloudasset.assets.listDataMigrationMigrationJobs",
      "cloudasset.assets.listDataflowJobs",
      "cloudasset.assets.listDatafusionInstance",
      "cloudasset.assets.listDataplexAssets",
      "cloudasset.assets.listDataplexLakes",
      "cloudasset.assets.listDataplexTasks",
      "cloudasset.assets.listDataplexZones",
      "cloudasset.assets.listDataprocAutoscalingPolicies",
      "cloudasset.assets.listDataprocBatches",
      "cloudasset.assets.listDataprocClusters",
      "cloudasset.assets.listDataprocJobs",
      "cloudasset.assets.listDataprocSessions",
      "cloudasset.assets.listDataprocWorkflowTemplates",
      "cloudasset.assets.listDatastreamConnectionProfile",
      "cloudasset.assets.listDatastreamPrivateConnection",
      "cloudasset.assets.listDatastreamStream",
      "cloudasset.assets.listDialogflowAgents",
      "cloudasset.assets.listDialogflowConversationProfiles",
      "cloudasset.assets.listDialogflowKnowledgeBases",
      "cloudasset.assets.listDialogflowLocationSettings",
      "cloudasset.assets.listDlpDeidentifyTemplates",
      "cloudasset.assets.listDlpDlpJobs",
      "cloudasset.assets.listDlpInspectTemplates",
      "cloudasset.assets.listDlpJobTriggers",
      "cloudasset.assets.listDlpStoredInfoTypes",
      "cloudasset.assets.listDnsManagedZones",
      "cloudasset.assets.listDnsPolicies",
      "cloudasset.assets.listDomainsRegistrations",
      "cloudasset.assets.listEventarcTriggers",
      "cloudasset.assets.listFileBackups",
      "cloudasset.assets.listFileInstances",
      "cloudasset.assets.listFirebaseAppInfos",
      "cloudasset.assets.listFirebaseProjects",
      "cloudasset.assets.listFirestoreDatabases",
      "cloudasset.assets.listGKEHubFeatures",
      "cloudasset.assets.listGKEHubMemberships",
      "cloudasset.assets.listGameservicesGameServerClusters",
      "cloudasset.assets.listGameservicesGameServerConfigs",
      "cloudasset.assets.listGameservicesGameServerDeployments",
      "cloudasset.assets.listGameservicesRealms",
      "cloudasset.assets.listGkeBackupBackupPlans",
      "cloudasset.assets.listGkeBackupBackups",
      "cloudasset.assets.listGkeBackupRestorePlans",
      "cloudasset.assets.listGkeBackupRestores",
      "cloudasset.assets.listGkeBackupVolumeBackups",
      "cloudasset.assets.listGkeBackupVolumeRestores",
      "cloudasset.assets.listHealthcareConsentStores",
      "cloudasset.assets.listHealthcareDatasets",
      "cloudasset.assets.listHealthcareDicomStores",
      "cloudasset.assets.listHealthcareFhirStores",
      "cloudasset.assets.listHealthcareHl7V2Stores",
      "cloudasset.assets.listIamPolicy",
      "cloudasset.assets.listIamRoles",
      "cloudasset.assets.listIamServiceAccountKeys",
      "cloudasset.assets.listIamServiceAccounts",
      "cloudasset.assets.listIapTunnel",
      "cloudasset.assets.listIapTunnelInstances",
      "cloudasset.assets.listIapTunnelZones",
      "cloudasset.assets.listIapWeb",
      "cloudasset.assets.listIapWebServiceVersion",
      "cloudasset.assets.listIapWebServices",
      "cloudasset.assets.listIapWebType",
      "cloudasset.assets.listIdsEndpoints",
      "cloudasset.assets.listIntegrationsAuthConfigs",
      "cloudasset.assets.listIntegrationsCertificates",
      "cloudasset.assets.listIntegrationsExecutions",
      "cloudasset.assets.listIntegrationsIntegrationVersions",
      "cloudasset.assets.listIntegrationsIntegrations",
      "cloudasset.assets.listIntegrationsSfdcChannels",
      "cloudasset.assets.listIntegrationsSfdcInstances",
      "cloudasset.assets.listIntegrationsSuspensions",
      "cloudasset.assets.listLoggingLogMetrics",
      "cloudasset.assets.listLoggingLogSinks",
      "cloudasset.assets.listManagedidentitiesDomain",
      "cloudasset.assets.listMetastoreBackups",
      "cloudasset.assets.listMetastoreMetadataImports",
      "cloudasset.assets.listMetastoreServices",
      "cloudasset.assets.listMonitoringAlertPolicies",
      "cloudasset.assets.listNetworkConnectivityHubs",
      "cloudasset.assets.listNetworkConnectivitySpokes",
      "cloudasset.assets.listNetworkManagementConnectivityTests",
      "cloudasset.assets.listNetworkServicesEndpointPolicies",
      "cloudasset.assets.listNetworkServicesGateways",
      "cloudasset.assets.listNetworkServicesGrpcRoutes",
      "cloudasset.assets.listNetworkServicesHttpRoutes",
      "cloudasset.assets.listNetworkServicesMeshes",
      "cloudasset.assets.listNetworkServicesServiceBindings",
      "cloudasset.assets.listNetworkServicesTcpRoutes",
      "cloudasset.assets.listNetworkServicesTlsRoutes",
      "cloudasset.assets.listOSConfigOSPolicyAssignmentReports",
      "cloudasset.assets.listOSConfigOSPolicyAssignments",
      "cloudasset.assets.listOSConfigVulnerabilityReports",
      "cloudasset.assets.listOSInventories",
      "cloudasset.assets.listOrgPolicy",
      "cloudasset.assets.listPatchDeployments",
      "cloudasset.assets.listPubsubSnapshots",
      "cloudasset.assets.listPubsubSubscriptions",
      "cloudasset.assets.listPubsubTopics",
      "cloudasset.assets.listRedisInstances",
      "cloudasset.assets.listResource",
      "cloudasset.assets.listRunDomainMapping",
      "cloudasset.assets.listRunRevision",
      "cloudasset.assets.listRunService",
      "cloudasset.assets.listSecretManagerSecretVersions",
      "cloudasset.assets.listSecretManagerSecrets",
      "cloudasset.assets.listServiceDirectoryNamespaces",
      "cloudasset.assets.listServicePerimeter",
      "cloudasset.assets.listServiceconsumermanagementConsumerProperty",
      "cloudasset.assets.listServiceconsumermanagementConsumerQuotaLimits",
      "cloudasset.assets.listServiceconsumermanagementConsumers",
      "cloudasset.assets.listServiceconsumermanagementProducerOverrides",
      "cloudasset.assets.listServiceconsumermanagementTenancyUnits",
      "cloudasset.assets.listServiceconsumermanagementVisibility",
      "cloudasset.assets.listServicemanagementServices",
      "cloudasset.assets.listServiceusageAdminOverrides",
      "cloudasset.assets.listServiceusageConsumerOverrides",
      "cloudasset.assets.listServiceusageServices",
      "cloudasset.assets.listSpannerBackups",
      "cloudasset.assets.listSpannerDatabases",
      "cloudasset.assets.listSpannerInstances",
      "cloudasset.assets.listSpeakerIdPhrases",
      "cloudasset.assets.listSpeakerIdSettings",
      "cloudasset.assets.listSpeakerIdSpeakers",
      "cloudasset.assets.listSpeechCustomClasses",
      "cloudasset.assets.listSpeechPhraseSets",
      "cloudasset.assets.listSqladminBackupRuns",
      "cloudasset.assets.listSqladminInstances",
      "cloudasset.assets.listStorageBuckets",
      "cloudasset.assets.listTpuNodes",
      "cloudasset.assets.listVpcaccessConnector",
      "cloudasset.assets.queryAccessPolicy",
      "cloudasset.assets.queryIamPolicy",
      "cloudasset.assets.queryOSInventories",
      "cloudasset.assets.queryResource",
      "cloudasset.assets.searchAllIamPolicies",
      "cloudasset.assets.searchAllResources",
      "cloudasset.feeds.create",
      "cloudasset.feeds.delete",
      "cloudasset.feeds.get",
      "cloudasset.feeds.list",
      "cloudasset.feeds.update",
      "cloudsql.instances.connect",
      "cloudsql.users.list",
      "compute.globalOperations.get",
      "compute.instances.get",
      "compute.instances.list",
      "compute.networkEndpointGroups.get",
      "compute.projects.get",
      "container.clusters.get",
      "iam.denypolicies.get",
      "iam.denypolicies.list",
      "iam.googleapis.com/workloadIdentityPoolProviders.list",
      "iam.googleapis.com/workloadIdentityPools.list",
      "logging.logEntries.list",
      "monitoring.alertPolicies.list",
      "monitoring.timeSeries.list",
      "orgpolicy.policies.list",
      "orgpolicy.policy.get",
      "recommender.cloudAssetInsights.get",
      "recommender.cloudAssetInsights.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.folders.get",
      "resourcemanager.folders.list",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list",
      "resourcemanager.tagValues.get",
      "securitycenter.assets.list",
      "securitycenter.assetsecuritymarks.update",
      "securitycenter.findings.list",
      "securitycenter.notificationconfig.create",
      "securitycenter.notificationconfig.delete",
      "securitycenter.notificationconfig.update",
      "securitycenter.organizationsettings.get",
      "securitycenter.resourcevalueconfigs.get",
      "securitycenter.resourcevalueconfigs.list",
      "securitycenter.sources.list",
      "serviceusage.operations.cancel",
      "serviceusage.operations.delete",
      "serviceusage.operations.get",
      "serviceusage.operations.list",
      "serviceusage.quotas.get",
      "serviceusage.services.disable",
      "serviceusage.services.enable",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "stackdriver.projects.get",
      "storage.buckets.get",
      "storage.buckets.getIamPolicy",
      "storage.buckets.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.externalSystemsEditor",
    "title": "Security Center External Systems Editor",
    "description": "Write access to security center external systems",
    "includedPermissions": [
      "securitycenter.findingexternalsystems.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.findingSecurityMarksWriter",
    "title": "Security Center Finding Security Marks Writer",
    "description": "Write access to finding security marks",
    "includedPermissions": [
      "securitycenter.findingsecuritymarks.update",
      "securitycenter.userinterfacemetadata.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.findingsBulkMuteEditor",
    "title": "Security Center Findings Bulk Mute Editor",
    "description": "Ability to mute findings in bulk",
    "includedPermissions": [
      "securitycenter.findings.bulkMuteUpdate"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.findingsEditor",
    "title": "Security Center Findings Editor",
    "description": "Read-write access to findings",
    "includedPermissions": [
      "resourcemanager.folders.get",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "securitycenter.findings.bulkMuteUpdate",
      "securitycenter.findings.group",
      "securitycenter.findings.list",
      "securitycenter.findings.listFindingPropertyNames",
      "securitycenter.findings.setMute",
      "securitycenter.findings.setState",
      "securitycenter.findings.update",
      "securitycenter.sources.get",
      "securitycenter.sources.list",
      "securitycenter.userinterfacemetadata.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.findingsMuteSetter",
    "title": "Security Center Findings Mute Setter",
    "description": "Set mute access to findings",
    "includedPermissions": [
      "securitycenter.findings.setMute"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.findingsStateSetter",
    "title": "Security Center Findings State Setter",
    "description": "Set state access to findings",
    "includedPermissions": [
      "securitycenter.findings.setState",
      "securitycenter.userinterfacemetadata.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.findingsViewer",
    "title": "Security Center Findings Viewer",
    "description": "Read access to findings",
    "includedPermissions": [
      "resourcemanager.folders.get",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "securitycenter.findings.group",
      "securitycenter.findings.list",
      "securitycenter.findings.listFindingPropertyNames",
      "securitycenter.sources.get",
      "securitycenter.sources.list",
      "securitycenter.userinterfacemetadata.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.findingsWorkflowStateSetter",
    "title": "Security Center Findings Workflow State Setter",
    "description": "Set workflow state access to findings",
    "includedPermissions": [
      "securitycenter.findings.setWorkflowState",
      "securitycenter.userinterfacemetadata.get"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.integrationExecutorServiceAgent",
    "title": "Security Center Integration Executor Service Agent",
    "description": "Gives Security Center access to execute Integrations.",
    "includedPermissions": [
      "integrations.securityExecutions.cancel",
      "integrations.securityExecutions.list",
      "integrations.securityIntegrations.invoke"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.muteConfigsEditor",
    "title": "Security Center Mute Configurations Editor",
    "description": "Read-Write access to security center mute configurations",
    "includedPermissions": [
      "securitycenter.muteconfigs.create",
      "securitycenter.muteconfigs.delete",
      "securitycenter.muteconfigs.get",
      "securitycenter.muteconfigs.list",
      "securitycenter.muteconfigs.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.muteConfigsViewer",
    "title": "Security Center Mute Configurations Viewer",
    "description": "Read access to security center mute configurations",
    "includedPermissions": [
      "securitycenter.muteconfigs.get",
      "securitycenter.muteconfigs.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.notificationConfigEditor",
    "title": "Security Center Notification Configurations Editor",
    "description": "Write access to notification configurations",
    "includedPermissions": [
      "securitycenter.notificationconfig.create",
      "securitycenter.notificationconfig.delete",
      "securitycenter.notificationconfig.get",
      "securitycenter.notificationconfig.list",
      "securitycenter.notificationconfig.update",
      "securitycenter.userinterfacemetadata.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.notificationConfigViewer",
    "title": "Security Center Notification Configurations Viewer",
    "description": "Read access to notification configurations",
    "includedPermissions": [
      "securitycenter.notificationconfig.get",
      "securitycenter.notificationconfig.list",
      "securitycenter.userinterfacemetadata.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.notificationServiceAgent",
    "title": "Security Center Notification Service Agent",
    "description": "Security Center service agent can publish notifications to Pub/Sub topics.",
    "includedPermissions": [
      "pubsub.topics.publish"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.resourceValueConfigsEditor",
    "title": "Security Center Resource Value Configurations Editor",
    "description": "Read-Write access to security center resource value configurations",
    "includedPermissions": [
      "resourcemanager.tagValues.get",
      "securitycenter.resourcevalueconfigs.create",
      "securitycenter.resourcevalueconfigs.delete",
      "securitycenter.resourcevalueconfigs.get",
      "securitycenter.resourcevalueconfigs.list",
      "securitycenter.resourcevalueconfigs.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.resourceValueConfigsViewer",
    "title": "Security Center Resource Value Configurations Viewer",
    "description": "Read access to security center resource value configurations",
    "includedPermissions": [
      "resourcemanager.tagValues.get",
      "securitycenter.resourcevalueconfigs.get",
      "securitycenter.resourcevalueconfigs.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.securityHealthAnalyticsCustomModulesTester",
    "title": "Security Health Analytics Custom Modules Tester",
    "description": "Test access to Security Health Analytics Custom Modules",
    "includedPermissions": [
      "securitycenter.securityhealthanalyticscustommodules.simulate",
      "securitycenter.securityhealthanalyticscustommodules.test"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "title": "Security Health Analytics Service Agent",
    "description": "Security Health Analytics service agent can scan GCP resource metadata to find security vulnerabilities.",
    "includedPermissions": [
      "bigquery.datasets.get",
      "binaryauthorization.policy.get",
      "cloudasset.assets.analyzeIamPolicy",
      "cloudasset.assets.analyzeMove",
      "cloudasset.assets.analyzeOrgPolicy",
      "cloudasset.assets.exportAccessLevel",
      "cloudasset.assets.exportAccessPolicy",
      "cloudasset.assets.exportAiplatformBatchPredictionJobs",
      "cloudasset.assets.exportAiplatformCustomJobs",
      "cloudasset.assets.exportAiplatformDataLabelingJobs",
      "cloudasset.assets.exportAiplatformDatasets",
      "cloudasset.assets.exportAiplatformEndpoints",
      "cloudasset.assets.exportAiplatformHyperparameterTuningJobs",
      "cloudasset.assets.exportAiplatformMetadataStores",
      "cloudasset.assets.exportAiplatformModelDeploymentMonitoringJobs",
      "cloudasset.assets.exportAiplatformModels",
      "cloudasset.assets.exportAiplatformPipelineJobs",
      "cloudasset.assets.exportAiplatformSpecialistPools",
      "cloudasset.assets.exportAiplatformTrainingPipelines",
      "cloudasset.assets.exportAllAccessPolicy",
      "cloudasset.assets.exportAnthosConnectedCluster",
      "cloudasset.assets.exportAnthosedgeCluster",
      "cloudasset.assets.exportApigatewayApi",
      "cloudasset.assets.exportApigatewayApiConfig",
      "cloudasset.assets.exportApigatewayGateway",
      "cloudasset.assets.exportApikeysKeys",
      "cloudasset.assets.exportAppengineApplications",
      "cloudasset.assets.exportAppengineServices",
      "cloudasset.assets.exportAppengineVersions",
      "cloudasset.assets.exportArtifactregistryDockerImages",
      "cloudasset.assets.exportArtifactregistryRepositories",
      "cloudasset.assets.exportAssuredWorkloadsWorkloads",
      "cloudasset.assets.exportBeyondCorpApiGateways",
      "cloudasset.assets.exportBeyondCorpAppConnections",
      "cloudasset.assets.exportBeyondCorpAppConnectors",
      "cloudasset.assets.exportBeyondCorpAppGateways",
      "cloudasset.assets.exportBeyondCorpClientConnectorServices",
      "cloudasset.assets.exportBeyondCorpClientGateways",
      "cloudasset.assets.exportBigqueryDatasets",
      "cloudasset.assets.exportBigqueryModels",
      "cloudasset.assets.exportBigqueryTables",
      "cloudasset.assets.exportBigtableAppProfile",
      "cloudasset.assets.exportBigtableBackup",
      "cloudasset.assets.exportBigtableCluster",
      "cloudasset.assets.exportBigtableInstance",
      "cloudasset.assets.exportBigtableTable",
      "cloudasset.assets.exportCloudAssetFeeds",
      "cloudasset.assets.exportCloudDeployDeliveryPipelines",
      "cloudasset.assets.exportCloudDeployReleases",
      "cloudasset.assets.exportCloudDeployRollouts",
      "cloudasset.assets.exportCloudDeployTargets",
      "cloudasset.assets.exportCloudDocumentAIEvaluation",
      "cloudasset.assets.exportCloudDocumentAIHumanReviewConfig",
      "cloudasset.assets.exportCloudDocumentAILabelerPool",
      "cloudasset.assets.exportCloudDocumentAIProcessor",
      "cloudasset.assets.exportCloudDocumentAIProcessorVersion",
      "cloudasset.assets.exportCloudbillingBillingAccounts",
      "cloudasset.assets.exportCloudbillingProjectBillingInfos",
      "cloudasset.assets.exportCloudfunctionsFunctions",
      "cloudasset.assets.exportCloudfunctionsGen2Functions",
      "cloudasset.assets.exportCloudkmsCryptoKeyVersions",
      "cloudasset.assets.exportCloudkmsCryptoKeys",
      "cloudasset.assets.exportCloudkmsEkmConnections",
      "cloudasset.assets.exportCloudkmsImportJobs",
      "cloudasset.assets.exportCloudkmsKeyRings",
      "cloudasset.assets.exportCloudmemcacheInstances",
      "cloudasset.assets.exportCloudresourcemanagerFolders",
      "cloudasset.assets.exportCloudresourcemanagerOrganizations",
      "cloudasset.assets.exportCloudresourcemanagerProjects",
      "cloudasset.assets.exportCloudresourcemanagerTagBindings",
      "cloudasset.assets.exportCloudresourcemanagerTagKeys",
      "cloudasset.assets.exportCloudresourcemanagerTagValues",
      "cloudasset.assets.exportComposerEnvironments",
      "cloudasset.assets.exportComputeAddress",
      "cloudasset.assets.exportComputeAutoscalers",
      "cloudasset.assets.exportComputeBackendBuckets",
      "cloudasset.assets.exportComputeBackendServices",
      "cloudasset.assets.exportComputeCommitments",
      "cloudasset.assets.exportComputeDisks",
      "cloudasset.assets.exportComputeExternalVpnGateways",
      "cloudasset.assets.exportComputeFirewallPolicies",
      "cloudasset.assets.exportComputeFirewalls",
      "cloudasset.assets.exportComputeForwardingRules",
      "cloudasset.assets.exportComputeGlobalAddress",
      "cloudasset.assets.exportComputeGlobalForwardingRules",
      "cloudasset.assets.exportComputeHealthChecks",
      "cloudasset.assets.exportComputeHttpHealthChecks",
      "cloudasset.assets.exportComputeHttpsHealthChecks",
      "cloudasset.assets.exportComputeImages",
      "cloudasset.assets.exportComputeInstanceGroupManagers",
      "cloudasset.assets.exportComputeInstanceGroups",
      "cloudasset.assets.exportComputeInstanceTemplates",
      "cloudasset.assets.exportComputeInstances",
      "cloudasset.assets.exportComputeInterconnect",
      "cloudasset.assets.exportComputeInterconnectAttachment",
      "cloudasset.assets.exportComputeLicenses",
      "cloudasset.assets.exportComputeNetworkEndpointGroups",
      "cloudasset.assets.exportComputeNetworks",
      "cloudasset.assets.exportComputeNodeGroups",
      "cloudasset.assets.exportComputeNodeTemplates",
      "cloudasset.assets.exportComputePacketMirrorings",
      "cloudasset.assets.exportComputeProjects",
      "cloudasset.assets.exportComputeRegionAutoscaler",
      "cloudasset.assets.exportComputeRegionBackendServices",
      "cloudasset.assets.exportComputeRegionDisk",
      "cloudasset.assets.exportComputeRegionInstanceGroup",
      "cloudasset.assets.exportComputeRegionInstanceGroupManager",
      "cloudasset.assets.exportComputeReservations",
      "cloudasset.assets.exportComputeResourcePolicies",
      "cloudasset.assets.exportComputeRouters",
      "cloudasset.assets.exportComputeRoutes",
      "cloudasset.assets.exportComputeSecurityPolicy",
      "cloudasset.assets.exportComputeServiceAttachments",
      "cloudasset.assets.exportComputeSnapshots",
      "cloudasset.assets.exportComputeSslCertificates",
      "cloudasset.assets.exportComputeSslPolicies",
      "cloudasset.assets.exportComputeSubnetworks",
      "cloudasset.assets.exportComputeTargetHttpProxies",
      "cloudasset.assets.exportComputeTargetHttpsProxies",
      "cloudasset.assets.exportComputeTargetInstances",
      "cloudasset.assets.exportComputeTargetPools",
      "cloudasset.assets.exportComputeTargetSslProxies",
      "cloudasset.assets.exportComputeTargetTcpProxies",
      "cloudasset.assets.exportComputeTargetVpnGateways",
      "cloudasset.assets.exportComputeUrlMaps",
      "cloudasset.assets.exportComputeVpnGateways",
      "cloudasset.assets.exportComputeVpnTunnels",
      "cloudasset.assets.exportConnectorsConnections",
      "cloudasset.assets.exportConnectorsConnectorVersions",
      "cloudasset.assets.exportConnectorsConnectors",
      "cloudasset.assets.exportConnectorsProviders",
      "cloudasset.assets.exportConnectorsRuntimeConfigs",
      "cloudasset.assets.exportContainerAppsDeployment",
      "cloudasset.assets.exportContainerAppsReplicaSets",
      "cloudasset.assets.exportContainerBatchJobs",
      "cloudasset.assets.exportContainerClusterrole",
      "cloudasset.assets.exportContainerClusterrolebinding",
      "cloudasset.assets.exportContainerClusters",
      "cloudasset.assets.exportContainerExtensionsIngresses",
      "cloudasset.assets.exportContainerJobs",
      "cloudasset.assets.exportContainerNamespace",
      "cloudasset.assets.exportContainerNetworkingIngresses",
      "cloudasset.assets.exportContainerNetworkingNetworkPolicies",
      "cloudasset.assets.exportContainerNode",
      "cloudasset.assets.exportContainerNodepool",
      "cloudasset.assets.exportContainerPod",
      "cloudasset.assets.exportContainerReplicaSets",
      "cloudasset.assets.exportContainerRole",
      "cloudasset.assets.exportContainerRolebinding",
      "cloudasset.assets.exportContainerServices",
      "cloudasset.assets.exportContainerregistryImage",
      "cloudasset.assets.exportDataMigrationConnectionProfiles",
      "cloudasset.assets.exportDataMigrationMigrationJobs",
      "cloudasset.assets.exportDataflowJobs",
      "cloudasset.assets.exportDatafusionInstance",
      "cloudasset.assets.exportDataplexAssets",
      "cloudasset.assets.exportDataplexLakes",
      "cloudasset.assets.exportDataplexTasks",
      "cloudasset.assets.exportDataplexZones",
      "cloudasset.assets.exportDataprocAutoscalingPolicies",
      "cloudasset.assets.exportDataprocBatches",
      "cloudasset.assets.exportDataprocClusters",
      "cloudasset.assets.exportDataprocJobs",
      "cloudasset.assets.exportDataprocSessions",
      "cloudasset.assets.exportDataprocWorkflowTemplates",
      "cloudasset.assets.exportDatastreamConnectionProfile",
      "cloudasset.assets.exportDatastreamPrivateConnection",
      "cloudasset.assets.exportDatastreamStream",
      "cloudasset.assets.exportDialogflowAgents",
      "cloudasset.assets.exportDialogflowConversationProfiles",
      "cloudasset.assets.exportDialogflowKnowledgeBases",
      "cloudasset.assets.exportDialogflowLocationSettings",
      "cloudasset.assets.exportDlpDeidentifyTemplates",
      "cloudasset.assets.exportDlpDlpJobs",
      "cloudasset.assets.exportDlpInspectTemplates",
      "cloudasset.assets.exportDlpJobTriggers",
      "cloudasset.assets.exportDlpStoredInfoTypes",
      "cloudasset.assets.exportDnsManagedZones",
      "cloudasset.assets.exportDnsPolicies",
      "cloudasset.assets.exportDomainsRegistrations",
      "cloudasset.assets.exportEventarcTriggers",
      "cloudasset.assets.exportFileBackups",
      "cloudasset.assets.exportFileInstances",
      "cloudasset.assets.exportFirebaseAppInfos",
      "cloudasset.assets.exportFirebaseProjects",
      "cloudasset.assets.exportFirestoreDatabases",
      "cloudasset.assets.exportGKEHubFeatures",
      "cloudasset.assets.exportGKEHubMemberships",
      "cloudasset.assets.exportGameservicesGameServerClusters",
      "cloudasset.assets.exportGameservicesGameServerConfigs",
      "cloudasset.assets.exportGameservicesGameServerDeployments",
      "cloudasset.assets.exportGameservicesRealms",
      "cloudasset.assets.exportGkeBackupBackupPlans",
      "cloudasset.assets.exportGkeBackupBackups",
      "cloudasset.assets.exportGkeBackupRestorePlans",
      "cloudasset.assets.exportGkeBackupRestores",
      "cloudasset.assets.exportGkeBackupVolumeBackups",
      "cloudasset.assets.exportGkeBackupVolumeRestores",
      "cloudasset.assets.exportHealthcareConsentStores",
      "cloudasset.assets.exportHealthcareDatasets",
      "cloudasset.assets.exportHealthcareDicomStores",
      "cloudasset.assets.exportHealthcareFhirStores",
      "cloudasset.assets.exportHealthcareHl7V2Stores",
      "cloudasset.assets.exportIamPolicy",
      "cloudasset.assets.exportIamRoles",
      "cloudasset.assets.exportIamServiceAccountKeys",
      "cloudasset.assets.exportIamServiceAccounts",
      "cloudasset.assets.exportIapTunnel",
      "cloudasset.assets.exportIapTunnelInstances",
      "cloudasset.assets.exportIapTunnelZones",
      "cloudasset.assets.exportIapWeb",
      "cloudasset.assets.exportIapWebServiceVersion",
      "cloudasset.assets.exportIapWebServices",
      "cloudasset.assets.exportIapWebType",
      "cloudasset.assets.exportIdsEndpoints",
      "cloudasset.assets.exportIntegrationsAuthConfigs",
      "cloudasset.assets.exportIntegrationsCertificates",
      "cloudasset.assets.exportIntegrationsExecutions",
      "cloudasset.assets.exportIntegrationsIntegrationVersions",
      "cloudasset.assets.exportIntegrationsIntegrations",
      "cloudasset.assets.exportIntegrationsSfdcChannels",
      "cloudasset.assets.exportIntegrationsSfdcInstances",
      "cloudasset.assets.exportIntegrationsSuspensions",
      "cloudasset.assets.exportLoggingLogMetrics",
      "cloudasset.assets.exportLoggingLogSinks",
      "cloudasset.assets.exportManagedidentitiesDomain",
      "cloudasset.assets.exportMetastoreBackups",
      "cloudasset.assets.exportMetastoreMetadataImports",
      "cloudasset.assets.exportMetastoreServices",
      "cloudasset.assets.exportMonitoringAlertPolicies",
      "cloudasset.assets.exportNetworkConnectivityHubs",
      "cloudasset.assets.exportNetworkConnectivitySpokes",
      "cloudasset.assets.exportNetworkManagementConnectivityTests",
      "cloudasset.assets.exportNetworkServicesEndpointPolicies",
      "cloudasset.assets.exportNetworkServicesGateways",
      "cloudasset.assets.exportNetworkServicesGrpcRoutes",
      "cloudasset.assets.exportNetworkServicesHttpRoutes",
      "cloudasset.assets.exportNetworkServicesMeshes",
      "cloudasset.assets.exportNetworkServicesServiceBindings",
      "cloudasset.assets.exportNetworkServicesTcpRoutes",
      "cloudasset.assets.exportNetworkServicesTlsRoutes",
      "cloudasset.assets.exportOSConfigOSPolicyAssignmentReports",
      "cloudasset.assets.exportOSConfigOSPolicyAssignments",
      "cloudasset.assets.exportOSConfigVulnerabilityReports",
      "cloudasset.assets.exportOSInventories",
      "cloudasset.assets.exportOrgPolicy",
      "cloudasset.assets.exportPatchDeployments",
      "cloudasset.assets.exportPubsubSnapshots",
      "cloudasset.assets.exportPubsubSubscriptions",
      "cloudasset.assets.exportPubsubTopics",
      "cloudasset.assets.exportRedisInstances",
      "cloudasset.assets.exportResource",
      "cloudasset.assets.exportSecretManagerSecretVersions",
      "cloudasset.assets.exportSecretManagerSecrets",
      "cloudasset.assets.exportServiceDirectoryNamespaces",
      "cloudasset.assets.exportServicePerimeter",
      "cloudasset.assets.exportServiceconsumermanagementConsumerProperty",
      "cloudasset.assets.exportServiceconsumermanagementConsumerQuotaLimits",
      "cloudasset.assets.exportServiceconsumermanagementConsumers",
      "cloudasset.assets.exportServiceconsumermanagementProducerOverrides",
      "cloudasset.assets.exportServiceconsumermanagementTenancyUnits",
      "cloudasset.assets.exportServiceconsumermanagementVisibility",
      "cloudasset.assets.exportServicemanagementServices",
      "cloudasset.assets.exportServiceusageAdminOverrides",
      "cloudasset.assets.exportServiceusageConsumerOverrides",
      "cloudasset.assets.exportServiceusageServices",
      "cloudasset.assets.exportSpannerBackups",
      "cloudasset.assets.exportSpannerDatabases",
      "cloudasset.assets.exportSpannerInstances",
      "cloudasset.assets.exportSpeakerIdPhrases",
      "cloudasset.assets.exportSpeakerIdSettings",
      "cloudasset.assets.exportSpeakerIdSpeakers",
      "cloudasset.assets.exportSpeechCustomClasses",
      "cloudasset.assets.exportSpeechPhraseSets",
      "cloudasset.assets.exportSqladminBackupRuns",
      "cloudasset.assets.exportSqladminInstances",
      "cloudasset.assets.exportStorageBuckets",
      "cloudasset.assets.exportTpuNodes",
      "cloudasset.assets.exportVpcaccessConnector",
      "cloudasset.assets.listAccessLevel",
      "cloudasset.assets.listAccessPolicy",
      "cloudasset.assets.listAiplatformBatchPredictionJobs",
      "cloudasset.assets.listAiplatformCustomJobs",
      "cloudasset.assets.listAiplatformDataLabelingJobs",
      "cloudasset.assets.listAiplatformDatasets",
      "cloudasset.assets.listAiplatformEndpoints",
      "cloudasset.assets.listAiplatformHyperparameterTuningJobs",
      "cloudasset.assets.listAiplatformMetadataStores",
      "cloudasset.assets.listAiplatformModelDeploymentMonitoringJobs",
      "cloudasset.assets.listAiplatformModels",
      "cloudasset.assets.listAiplatformPipelineJobs",
      "cloudasset.assets.listAiplatformSpecialistPools",
      "cloudasset.assets.listAiplatformTrainingPipelines",
      "cloudasset.assets.listAllAccessPolicy",
      "cloudasset.assets.listAnthosConnectedCluster",
      "cloudasset.assets.listAnthosedgeCluster",
      "cloudasset.assets.listApigatewayApi",
      "cloudasset.assets.listApigatewayApiConfig",
      "cloudasset.assets.listApigatewayGateway",
      "cloudasset.assets.listApikeysKeys",
      "cloudasset.assets.listAppengineApplications",
      "cloudasset.assets.listAppengineServices",
      "cloudasset.assets.listAppengineVersions",
      "cloudasset.assets.listArtifactregistryDockerImages",
      "cloudasset.assets.listArtifactregistryRepositories",
      "cloudasset.assets.listAssuredWorkloadsWorkloads",
      "cloudasset.assets.listBeyondCorpApiGateways",
      "cloudasset.assets.listBeyondCorpAppConnections",
      "cloudasset.assets.listBeyondCorpAppConnectors",
      "cloudasset.assets.listBeyondCorpAppGateways",
      "cloudasset.assets.listBeyondCorpClientConnectorServices",
      "cloudasset.assets.listBeyondCorpClientGateways",
      "cloudasset.assets.listBigqueryDatasets",
      "cloudasset.assets.listBigqueryModels",
      "cloudasset.assets.listBigqueryTables",
      "cloudasset.assets.listBigtableAppProfile",
      "cloudasset.assets.listBigtableBackup",
      "cloudasset.assets.listBigtableCluster",
      "cloudasset.assets.listBigtableInstance",
      "cloudasset.assets.listBigtableTable",
      "cloudasset.assets.listCloudAssetFeeds",
      "cloudasset.assets.listCloudDeployDeliveryPipelines",
      "cloudasset.assets.listCloudDeployReleases",
      "cloudasset.assets.listCloudDeployRollouts",
      "cloudasset.assets.listCloudDeployTargets",
      "cloudasset.assets.listCloudDocumentAIEvaluation",
      "cloudasset.assets.listCloudDocumentAIHumanReviewConfig",
      "cloudasset.assets.listCloudDocumentAILabelerPool",
      "cloudasset.assets.listCloudDocumentAIProcessor",
      "cloudasset.assets.listCloudDocumentAIProcessorVersion",
      "cloudasset.assets.listCloudbillingBillingAccounts",
      "cloudasset.assets.listCloudbillingProjectBillingInfos",
      "cloudasset.assets.listCloudfunctionsFunctions",
      "cloudasset.assets.listCloudfunctionsGen2Functions",
      "cloudasset.assets.listCloudkmsCryptoKeyVersions",
      "cloudasset.assets.listCloudkmsCryptoKeys",
      "cloudasset.assets.listCloudkmsEkmConnections",
      "cloudasset.assets.listCloudkmsImportJobs",
      "cloudasset.assets.listCloudkmsKeyRings",
      "cloudasset.assets.listCloudmemcacheInstances",
      "cloudasset.assets.listCloudresourcemanagerFolders",
      "cloudasset.assets.listCloudresourcemanagerOrganizations",
      "cloudasset.assets.listCloudresourcemanagerProjects",
      "cloudasset.assets.listCloudresourcemanagerTagBindings",
      "cloudasset.assets.listCloudresourcemanagerTagKeys",
      "cloudasset.assets.listCloudresourcemanagerTagValues",
      "cloudasset.assets.listComposerEnvironments",
      "cloudasset.assets.listComputeAddress",
      "cloudasset.assets.listComputeAutoscalers",
      "cloudasset.assets.listComputeBackendBuckets",
      "cloudasset.assets.listComputeBackendServices",
      "cloudasset.assets.listComputeCommitments",
      "cloudasset.assets.listComputeDisks",
      "cloudasset.assets.listComputeExternalVpnGateways",
      "cloudasset.assets.listComputeFirewallPolicies",
      "cloudasset.assets.listComputeFirewalls",
      "cloudasset.assets.listComputeForwardingRules",
      "cloudasset.assets.listComputeGlobalAddress",
      "cloudasset.assets.listComputeGlobalForwardingRules",
      "cloudasset.assets.listComputeHealthChecks",
      "cloudasset.assets.listComputeHttpHealthChecks",
      "cloudasset.assets.listComputeHttpsHealthChecks",
      "cloudasset.assets.listComputeImages",
      "cloudasset.assets.listComputeInstanceGroupManagers",
      "cloudasset.assets.listComputeInstanceGroups",
      "cloudasset.assets.listComputeInstanceTemplates",
      "cloudasset.assets.listComputeInstances",
      "cloudasset.assets.listComputeInterconnect",
      "cloudasset.assets.listComputeInterconnectAttachment",
      "cloudasset.assets.listComputeLicenses",
      "cloudasset.assets.listComputeNetworkEndpointGroups",
      "cloudasset.assets.listComputeNetworks",
      "cloudasset.assets.listComputeNodeGroups",
      "cloudasset.assets.listComputeNodeTemplates",
      "cloudasset.assets.listComputePacketMirrorings",
      "cloudasset.assets.listComputeProjects",
      "cloudasset.assets.listComputeRegionAutoscaler",
      "cloudasset.assets.listComputeRegionBackendServices",
      "cloudasset.assets.listComputeRegionDisk",
      "cloudasset.assets.listComputeRegionInstanceGroup",
      "cloudasset.assets.listComputeRegionInstanceGroupManager",
      "cloudasset.assets.listComputeReservations",
      "cloudasset.assets.listComputeResourcePolicies",
      "cloudasset.assets.listComputeRouters",
      "cloudasset.assets.listComputeRoutes",
      "cloudasset.assets.listComputeSecurityPolicy",
      "cloudasset.assets.listComputeServiceAttachments",
      "cloudasset.assets.listComputeSnapshots",
      "cloudasset.assets.listComputeSslCertificates",
      "cloudasset.assets.listComputeSslPolicies",
      "cloudasset.assets.listComputeSubnetworks",
      "cloudasset.assets.listComputeTargetHttpProxies",
      "cloudasset.assets.listComputeTargetHttpsProxies",
      "cloudasset.assets.listComputeTargetInstances",
      "cloudasset.assets.listComputeTargetPools",
      "cloudasset.assets.listComputeTargetSslProxies",
      "cloudasset.assets.listComputeTargetTcpProxies",
      "cloudasset.assets.listComputeTargetVpnGateways",
      "cloudasset.assets.listComputeUrlMaps",
      "cloudasset.assets.listComputeVpnGateways",
      "cloudasset.assets.listComputeVpnTunnels",
      "cloudasset.assets.listConnectorsConnections",
      "cloudasset.assets.listConnectorsConnectorVersions",
      "cloudasset.assets.listConnectorsConnectors",
      "cloudasset.assets.listConnectorsProviders",
      "cloudasset.assets.listConnectorsRuntimeConfigs",
      "cloudasset.assets.listContainerAppsDeployment",
      "cloudasset.assets.listContainerAppsReplicaSets",
      "cloudasset.assets.listContainerBatchJobs",
      "cloudasset.assets.listContainerClusterrole",
      "cloudasset.assets.listContainerClusterrolebinding",
      "cloudasset.assets.listContainerClusters",
      "cloudasset.assets.listContainerExtensionsIngresses",
      "cloudasset.assets.listContainerJobs",
      "cloudasset.assets.listContainerNamespace",
      "cloudasset.assets.listContainerNetworkingIngresses",
      "cloudasset.assets.listContainerNetworkingNetworkPolicies",
      "cloudasset.assets.listContainerNode",
      "cloudasset.assets.listContainerNodepool",
      "cloudasset.assets.listContainerPod",
      "cloudasset.assets.listContainerReplicaSets",
      "cloudasset.assets.listContainerRole",
      "cloudasset.assets.listContainerRolebinding",
      "cloudasset.assets.listContainerServices",
      "cloudasset.assets.listContainerregistryImage",
      "cloudasset.assets.listDataMigrationConnectionProfiles",
      "cloudasset.assets.listDataMigrationMigrationJobs",
      "cloudasset.assets.listDataflowJobs",
      "cloudasset.assets.listDatafusionInstance",
      "cloudasset.assets.listDataplexAssets",
      "cloudasset.assets.listDataplexLakes",
      "cloudasset.assets.listDataplexTasks",
      "cloudasset.assets.listDataplexZones",
      "cloudasset.assets.listDataprocAutoscalingPolicies",
      "cloudasset.assets.listDataprocBatches",
      "cloudasset.assets.listDataprocClusters",
      "cloudasset.assets.listDataprocJobs",
      "cloudasset.assets.listDataprocSessions",
      "cloudasset.assets.listDataprocWorkflowTemplates",
      "cloudasset.assets.listDatastreamConnectionProfile",
      "cloudasset.assets.listDatastreamPrivateConnection",
      "cloudasset.assets.listDatastreamStream",
      "cloudasset.assets.listDialogflowAgents",
      "cloudasset.assets.listDialogflowConversationProfiles",
      "cloudasset.assets.listDialogflowKnowledgeBases",
      "cloudasset.assets.listDialogflowLocationSettings",
      "cloudasset.assets.listDlpDeidentifyTemplates",
      "cloudasset.assets.listDlpDlpJobs",
      "cloudasset.assets.listDlpInspectTemplates",
      "cloudasset.assets.listDlpJobTriggers",
      "cloudasset.assets.listDlpStoredInfoTypes",
      "cloudasset.assets.listDnsManagedZones",
      "cloudasset.assets.listDnsPolicies",
      "cloudasset.assets.listDomainsRegistrations",
      "cloudasset.assets.listEventarcTriggers",
      "cloudasset.assets.listFileBackups",
      "cloudasset.assets.listFileInstances",
      "cloudasset.assets.listFirebaseAppInfos",
      "cloudasset.assets.listFirebaseProjects",
      "cloudasset.assets.listFirestoreDatabases",
      "cloudasset.assets.listGKEHubFeatures",
      "cloudasset.assets.listGKEHubMemberships",
      "cloudasset.assets.listGameservicesGameServerClusters",
      "cloudasset.assets.listGameservicesGameServerConfigs",
      "cloudasset.assets.listGameservicesGameServerDeployments",
      "cloudasset.assets.listGameservicesRealms",
      "cloudasset.assets.listGkeBackupBackupPlans",
      "cloudasset.assets.listGkeBackupBackups",
      "cloudasset.assets.listGkeBackupRestorePlans",
      "cloudasset.assets.listGkeBackupRestores",
      "cloudasset.assets.listGkeBackupVolumeBackups",
      "cloudasset.assets.listGkeBackupVolumeRestores",
      "cloudasset.assets.listHealthcareConsentStores",
      "cloudasset.assets.listHealthcareDatasets",
      "cloudasset.assets.listHealthcareDicomStores",
      "cloudasset.assets.listHealthcareFhirStores",
      "cloudasset.assets.listHealthcareHl7V2Stores",
      "cloudasset.assets.listIamPolicy",
      "cloudasset.assets.listIamRoles",
      "cloudasset.assets.listIamServiceAccountKeys",
      "cloudasset.assets.listIamServiceAccounts",
      "cloudasset.assets.listIapTunnel",
      "cloudasset.assets.listIapTunnelInstances",
      "cloudasset.assets.listIapTunnelZones",
      "cloudasset.assets.listIapWeb",
      "cloudasset.assets.listIapWebServiceVersion",
      "cloudasset.assets.listIapWebServices",
      "cloudasset.assets.listIapWebType",
      "cloudasset.assets.listIdsEndpoints",
      "cloudasset.assets.listIntegrationsAuthConfigs",
      "cloudasset.assets.listIntegrationsCertificates",
      "cloudasset.assets.listIntegrationsExecutions",
      "cloudasset.assets.listIntegrationsIntegrationVersions",
      "cloudasset.assets.listIntegrationsIntegrations",
      "cloudasset.assets.listIntegrationsSfdcChannels",
      "cloudasset.assets.listIntegrationsSfdcInstances",
      "cloudasset.assets.listIntegrationsSuspensions",
      "cloudasset.assets.listLoggingLogMetrics",
      "cloudasset.assets.listLoggingLogSinks",
      "cloudasset.assets.listManagedidentitiesDomain",
      "cloudasset.assets.listMetastoreBackups",
      "cloudasset.assets.listMetastoreMetadataImports",
      "cloudasset.assets.listMetastoreServices",
      "cloudasset.assets.listMonitoringAlertPolicies",
      "cloudasset.assets.listNetworkConnectivityHubs",
      "cloudasset.assets.listNetworkConnectivitySpokes",
      "cloudasset.assets.listNetworkManagementConnectivityTests",
      "cloudasset.assets.listNetworkServicesEndpointPolicies",
      "cloudasset.assets.listNetworkServicesGateways",
      "cloudasset.assets.listNetworkServicesGrpcRoutes",
      "cloudasset.assets.listNetworkServicesHttpRoutes",
      "cloudasset.assets.listNetworkServicesMeshes",
      "cloudasset.assets.listNetworkServicesServiceBindings",
      "cloudasset.assets.listNetworkServicesTcpRoutes",
      "cloudasset.assets.listNetworkServicesTlsRoutes",
      "cloudasset.assets.listOSConfigOSPolicyAssignmentReports",
      "cloudasset.assets.listOSConfigOSPolicyAssignments",
      "cloudasset.assets.listOSConfigVulnerabilityReports",
      "cloudasset.assets.listOSInventories",
      "cloudasset.assets.listOrgPolicy",
      "cloudasset.assets.listPatchDeployments",
      "cloudasset.assets.listPubsubSnapshots",
      "cloudasset.assets.listPubsubSubscriptions",
      "cloudasset.assets.listPubsubTopics",
      "cloudasset.assets.listRedisInstances",
      "cloudasset.assets.listResource",
      "cloudasset.assets.listRunDomainMapping",
      "cloudasset.assets.listRunRevision",
      "cloudasset.assets.listRunService",
      "cloudasset.assets.listSecretManagerSecretVersions",
      "cloudasset.assets.listSecretManagerSecrets",
      "cloudasset.assets.listServiceDirectoryNamespaces",
      "cloudasset.assets.listServicePerimeter",
      "cloudasset.assets.listServiceconsumermanagementConsumerProperty",
      "cloudasset.assets.listServiceconsumermanagementConsumerQuotaLimits",
      "cloudasset.assets.listServiceconsumermanagementConsumers",
      "cloudasset.assets.listServiceconsumermanagementProducerOverrides",
      "cloudasset.assets.listServiceconsumermanagementTenancyUnits",
      "cloudasset.assets.listServiceconsumermanagementVisibility",
      "cloudasset.assets.listServicemanagementServices",
      "cloudasset.assets.listServiceusageAdminOverrides",
      "cloudasset.assets.listServiceusageConsumerOverrides",
      "cloudasset.assets.listServiceusageServices",
      "cloudasset.assets.listSpannerBackups",
      "cloudasset.assets.listSpannerDatabases",
      "cloudasset.assets.listSpannerInstances",
      "cloudasset.assets.listSpeakerIdPhrases",
      "cloudasset.assets.listSpeakerIdSettings",
      "cloudasset.assets.listSpeakerIdSpeakers",
      "cloudasset.assets.listSpeechCustomClasses",
      "cloudasset.assets.listSpeechPhraseSets",
      "cloudasset.assets.listSqladminBackupRuns",
      "cloudasset.assets.listSqladminInstances",
      "cloudasset.assets.listStorageBuckets",
      "cloudasset.assets.listTpuNodes",
      "cloudasset.assets.listVpcaccessConnector",
      "cloudasset.assets.queryAccessPolicy",
      "cloudasset.assets.queryIamPolicy",
      "cloudasset.assets.queryOSInventories",
      "cloudasset.assets.queryResource",
      "cloudasset.assets.searchAllIamPolicies",
      "cloudasset.assets.searchAllResources",
      "cloudasset.feeds.create",
      "cloudasset.feeds.delete",
      "cloudasset.feeds.get",
      "cloudasset.feeds.list",
      "cloudasset.feeds.update",
      "cloudsql.instances.connect",
      "cloudsql.users.list",
      "compute.globalOperations.get",
      "compute.instances.get",
      "compute.instances.list",
      "compute.networkEndpointGroups.get",
      "compute.projects.get",
      "container.clusters.get",
      "monitoring.alertPolicies.list",
      "orgpolicy.policy.get",
      "recommender.cloudAssetInsights.get",
      "recommender.cloudAssetInsights.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "securitycenter.organizationsettings.get",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "stackdriver.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.securityResponseServiceAgent",
    "title": "Google Cloud Security Response Service Agent",
    "description": "Gives Playbook Runner permissions to execute all Google authored Playbooks. This role will keep evolving as we add more playbooks",
    "includedPermissions": [
      "compute.instances.deleteAccessConfig",
      "compute.instances.get",
      "compute.instances.setMetadata",
      "iam.serviceAccounts.actAs",
      "pubsub.topics.publish",
      "securitycenter.findings.list",
      "storage.buckets.get",
      "storage.buckets.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.serviceAgent",
    "title": "Security Center Service Agent",
    "description": "Security Center service agent can scan GCP resources and import security scans.",
    "includedPermissions": [
      "bigquery.datasets.get",
      "binaryauthorization.policy.get",
      "cloudasset.assets.analyzeIamPolicy",
      "cloudasset.assets.analyzeMove",
      "cloudasset.assets.analyzeOrgPolicy",
      "cloudasset.assets.exportAccessLevel",
      "cloudasset.assets.exportAccessPolicy",
      "cloudasset.assets.exportAiplatformBatchPredictionJobs",
      "cloudasset.assets.exportAiplatformCustomJobs",
      "cloudasset.assets.exportAiplatformDataLabelingJobs",
      "cloudasset.assets.exportAiplatformDatasets",
      "cloudasset.assets.exportAiplatformEndpoints",
      "cloudasset.assets.exportAiplatformHyperparameterTuningJobs",
      "cloudasset.assets.exportAiplatformMetadataStores",
      "cloudasset.assets.exportAiplatformModelDeploymentMonitoringJobs",
      "cloudasset.assets.exportAiplatformModels",
      "cloudasset.assets.exportAiplatformPipelineJobs",
      "cloudasset.assets.exportAiplatformSpecialistPools",
      "cloudasset.assets.exportAiplatformTrainingPipelines",
      "cloudasset.assets.exportAllAccessPolicy",
      "cloudasset.assets.exportAnthosConnectedCluster",
      "cloudasset.assets.exportAnthosedgeCluster",
      "cloudasset.assets.exportApigatewayApi",
      "cloudasset.assets.exportApigatewayApiConfig",
      "cloudasset.assets.exportApigatewayGateway",
      "cloudasset.assets.exportApikeysKeys",
      "cloudasset.assets.exportAppengineApplications",
      "cloudasset.assets.exportAppengineServices",
      "cloudasset.assets.exportAppengineVersions",
      "cloudasset.assets.exportArtifactregistryDockerImages",
      "cloudasset.assets.exportArtifactregistryRepositories",
      "cloudasset.assets.exportAssuredWorkloadsWorkloads",
      "cloudasset.assets.exportBeyondCorpApiGateways",
      "cloudasset.assets.exportBeyondCorpAppConnections",
      "cloudasset.assets.exportBeyondCorpAppConnectors",
      "cloudasset.assets.exportBeyondCorpAppGateways",
      "cloudasset.assets.exportBeyondCorpClientConnectorServices",
      "cloudasset.assets.exportBeyondCorpClientGateways",
      "cloudasset.assets.exportBigqueryDatasets",
      "cloudasset.assets.exportBigqueryModels",
      "cloudasset.assets.exportBigqueryTables",
      "cloudasset.assets.exportBigtableAppProfile",
      "cloudasset.assets.exportBigtableBackup",
      "cloudasset.assets.exportBigtableCluster",
      "cloudasset.assets.exportBigtableInstance",
      "cloudasset.assets.exportBigtableTable",
      "cloudasset.assets.exportCloudAssetFeeds",
      "cloudasset.assets.exportCloudDeployDeliveryPipelines",
      "cloudasset.assets.exportCloudDeployReleases",
      "cloudasset.assets.exportCloudDeployRollouts",
      "cloudasset.assets.exportCloudDeployTargets",
      "cloudasset.assets.exportCloudDocumentAIEvaluation",
      "cloudasset.assets.exportCloudDocumentAIHumanReviewConfig",
      "cloudasset.assets.exportCloudDocumentAILabelerPool",
      "cloudasset.assets.exportCloudDocumentAIProcessor",
      "cloudasset.assets.exportCloudDocumentAIProcessorVersion",
      "cloudasset.assets.exportCloudbillingBillingAccounts",
      "cloudasset.assets.exportCloudbillingProjectBillingInfos",
      "cloudasset.assets.exportCloudfunctionsFunctions",
      "cloudasset.assets.exportCloudfunctionsGen2Functions",
      "cloudasset.assets.exportCloudkmsCryptoKeyVersions",
      "cloudasset.assets.exportCloudkmsCryptoKeys",
      "cloudasset.assets.exportCloudkmsEkmConnections",
      "cloudasset.assets.exportCloudkmsImportJobs",
      "cloudasset.assets.exportCloudkmsKeyRings",
      "cloudasset.assets.exportCloudmemcacheInstances",
      "cloudasset.assets.exportCloudresourcemanagerFolders",
      "cloudasset.assets.exportCloudresourcemanagerOrganizations",
      "cloudasset.assets.exportCloudresourcemanagerProjects",
      "cloudasset.assets.exportCloudresourcemanagerTagBindings",
      "cloudasset.assets.exportCloudresourcemanagerTagKeys",
      "cloudasset.assets.exportCloudresourcemanagerTagValues",
      "cloudasset.assets.exportComposerEnvironments",
      "cloudasset.assets.exportComputeAddress",
      "cloudasset.assets.exportComputeAutoscalers",
      "cloudasset.assets.exportComputeBackendBuckets",
      "cloudasset.assets.exportComputeBackendServices",
      "cloudasset.assets.exportComputeCommitments",
      "cloudasset.assets.exportComputeDisks",
      "cloudasset.assets.exportComputeExternalVpnGateways",
      "cloudasset.assets.exportComputeFirewallPolicies",
      "cloudasset.assets.exportComputeFirewalls",
      "cloudasset.assets.exportComputeForwardingRules",
      "cloudasset.assets.exportComputeGlobalAddress",
      "cloudasset.assets.exportComputeGlobalForwardingRules",
      "cloudasset.assets.exportComputeHealthChecks",
      "cloudasset.assets.exportComputeHttpHealthChecks",
      "cloudasset.assets.exportComputeHttpsHealthChecks",
      "cloudasset.assets.exportComputeImages",
      "cloudasset.assets.exportComputeInstanceGroupManagers",
      "cloudasset.assets.exportComputeInstanceGroups",
      "cloudasset.assets.exportComputeInstanceTemplates",
      "cloudasset.assets.exportComputeInstances",
      "cloudasset.assets.exportComputeInterconnect",
      "cloudasset.assets.exportComputeInterconnectAttachment",
      "cloudasset.assets.exportComputeLicenses",
      "cloudasset.assets.exportComputeNetworkEndpointGroups",
      "cloudasset.assets.exportComputeNetworks",
      "cloudasset.assets.exportComputeNodeGroups",
      "cloudasset.assets.exportComputeNodeTemplates",
      "cloudasset.assets.exportComputePacketMirrorings",
      "cloudasset.assets.exportComputeProjects",
      "cloudasset.assets.exportComputeRegionAutoscaler",
      "cloudasset.assets.exportComputeRegionBackendServices",
      "cloudasset.assets.exportComputeRegionDisk",
      "cloudasset.assets.exportComputeRegionInstanceGroup",
      "cloudasset.assets.exportComputeRegionInstanceGroupManager",
      "cloudasset.assets.exportComputeReservations",
      "cloudasset.assets.exportComputeResourcePolicies",
      "cloudasset.assets.exportComputeRouters",
      "cloudasset.assets.exportComputeRoutes",
      "cloudasset.assets.exportComputeSecurityPolicy",
      "cloudasset.assets.exportComputeServiceAttachments",
      "cloudasset.assets.exportComputeSnapshots",
      "cloudasset.assets.exportComputeSslCertificates",
      "cloudasset.assets.exportComputeSslPolicies",
      "cloudasset.assets.exportComputeSubnetworks",
      "cloudasset.assets.exportComputeTargetHttpProxies",
      "cloudasset.assets.exportComputeTargetHttpsProxies",
      "cloudasset.assets.exportComputeTargetInstances",
      "cloudasset.assets.exportComputeTargetPools",
      "cloudasset.assets.exportComputeTargetSslProxies",
      "cloudasset.assets.exportComputeTargetTcpProxies",
      "cloudasset.assets.exportComputeTargetVpnGateways",
      "cloudasset.assets.exportComputeUrlMaps",
      "cloudasset.assets.exportComputeVpnGateways",
      "cloudasset.assets.exportComputeVpnTunnels",
      "cloudasset.assets.exportConnectorsConnections",
      "cloudasset.assets.exportConnectorsConnectorVersions",
      "cloudasset.assets.exportConnectorsConnectors",
      "cloudasset.assets.exportConnectorsProviders",
      "cloudasset.assets.exportConnectorsRuntimeConfigs",
      "cloudasset.assets.exportContainerAppsDeployment",
      "cloudasset.assets.exportContainerAppsReplicaSets",
      "cloudasset.assets.exportContainerBatchJobs",
      "cloudasset.assets.exportContainerClusterrole",
      "cloudasset.assets.exportContainerClusterrolebinding",
      "cloudasset.assets.exportContainerClusters",
      "cloudasset.assets.exportContainerExtensionsIngresses",
      "cloudasset.assets.exportContainerJobs",
      "cloudasset.assets.exportContainerNamespace",
      "cloudasset.assets.exportContainerNetworkingIngresses",
      "cloudasset.assets.exportContainerNetworkingNetworkPolicies",
      "cloudasset.assets.exportContainerNode",
      "cloudasset.assets.exportContainerNodepool",
      "cloudasset.assets.exportContainerPod",
      "cloudasset.assets.exportContainerReplicaSets",
      "cloudasset.assets.exportContainerRole",
      "cloudasset.assets.exportContainerRolebinding",
      "cloudasset.assets.exportContainerServices",
      "cloudasset.assets.exportContainerregistryImage",
      "cloudasset.assets.exportDataMigrationConnectionProfiles",
      "cloudasset.assets.exportDataMigrationMigrationJobs",
      "cloudasset.assets.exportDataflowJobs",
      "cloudasset.assets.exportDatafusionInstance",
      "cloudasset.assets.exportDataplexAssets",
      "cloudasset.assets.exportDataplexLakes",
      "cloudasset.assets.exportDataplexTasks",
      "cloudasset.assets.exportDataplexZones",
      "cloudasset.assets.exportDataprocAutoscalingPolicies",
      "cloudasset.assets.exportDataprocBatches",
      "cloudasset.assets.exportDataprocClusters",
      "cloudasset.assets.exportDataprocJobs",
      "cloudasset.assets.exportDataprocSessions",
      "cloudasset.assets.exportDataprocWorkflowTemplates",
      "cloudasset.assets.exportDatastreamConnectionProfile",
      "cloudasset.assets.exportDatastreamPrivateConnection",
      "cloudasset.assets.exportDatastreamStream",
      "cloudasset.assets.exportDialogflowAgents",
      "cloudasset.assets.exportDialogflowConversationProfiles",
      "cloudasset.assets.exportDialogflowKnowledgeBases",
      "cloudasset.assets.exportDialogflowLocationSettings",
      "cloudasset.assets.exportDlpDeidentifyTemplates",
      "cloudasset.assets.exportDlpDlpJobs",
      "cloudasset.assets.exportDlpInspectTemplates",
      "cloudasset.assets.exportDlpJobTriggers",
      "cloudasset.assets.exportDlpStoredInfoTypes",
      "cloudasset.assets.exportDnsManagedZones",
      "cloudasset.assets.exportDnsPolicies",
      "cloudasset.assets.exportDomainsRegistrations",
      "cloudasset.assets.exportEventarcTriggers",
      "cloudasset.assets.exportFileBackups",
      "cloudasset.assets.exportFileInstances",
      "cloudasset.assets.exportFirebaseAppInfos",
      "cloudasset.assets.exportFirebaseProjects",
      "cloudasset.assets.exportFirestoreDatabases",
      "cloudasset.assets.exportGKEHubFeatures",
      "cloudasset.assets.exportGKEHubMemberships",
      "cloudasset.assets.exportGameservicesGameServerClusters",
      "cloudasset.assets.exportGameservicesGameServerConfigs",
      "cloudasset.assets.exportGameservicesGameServerDeployments",
      "cloudasset.assets.exportGameservicesRealms",
      "cloudasset.assets.exportGkeBackupBackupPlans",
      "cloudasset.assets.exportGkeBackupBackups",
      "cloudasset.assets.exportGkeBackupRestorePlans",
      "cloudasset.assets.exportGkeBackupRestores",
      "cloudasset.assets.exportGkeBackupVolumeBackups",
      "cloudasset.assets.exportGkeBackupVolumeRestores",
      "cloudasset.assets.exportHealthcareConsentStores",
      "cloudasset.assets.exportHealthcareDatasets",
      "cloudasset.assets.exportHealthcareDicomStores",
      "cloudasset.assets.exportHealthcareFhirStores",
      "cloudasset.assets.exportHealthcareHl7V2Stores",
      "cloudasset.assets.exportIamPolicy",
      "cloudasset.assets.exportIamRoles",
      "cloudasset.assets.exportIamServiceAccountKeys",
      "cloudasset.assets.exportIamServiceAccounts",
      "cloudasset.assets.exportIapTunnel",
      "cloudasset.assets.exportIapTunnelInstances",
      "cloudasset.assets.exportIapTunnelZones",
      "cloudasset.assets.exportIapWeb",
      "cloudasset.assets.exportIapWebServiceVersion",
      "cloudasset.assets.exportIapWebServices",
      "cloudasset.assets.exportIapWebType",
      "cloudasset.assets.exportIdsEndpoints",
      "cloudasset.assets.exportIntegrationsAuthConfigs",
      "cloudasset.assets.exportIntegrationsCertificates",
      "cloudasset.assets.exportIntegrationsExecutions",
      "cloudasset.assets.exportIntegrationsIntegrationVersions",
      "cloudasset.assets.exportIntegrationsIntegrations",
      "cloudasset.assets.exportIntegrationsSfdcChannels",
      "cloudasset.assets.exportIntegrationsSfdcInstances",
      "cloudasset.assets.exportIntegrationsSuspensions",
      "cloudasset.assets.exportLoggingLogMetrics",
      "cloudasset.assets.exportLoggingLogSinks",
      "cloudasset.assets.exportManagedidentitiesDomain",
      "cloudasset.assets.exportMetastoreBackups",
      "cloudasset.assets.exportMetastoreMetadataImports",
      "cloudasset.assets.exportMetastoreServices",
      "cloudasset.assets.exportMonitoringAlertPolicies",
      "cloudasset.assets.exportNetworkConnectivityHubs",
      "cloudasset.assets.exportNetworkConnectivitySpokes",
      "cloudasset.assets.exportNetworkManagementConnectivityTests",
      "cloudasset.assets.exportNetworkServicesEndpointPolicies",
      "cloudasset.assets.exportNetworkServicesGateways",
      "cloudasset.assets.exportNetworkServicesGrpcRoutes",
      "cloudasset.assets.exportNetworkServicesHttpRoutes",
      "cloudasset.assets.exportNetworkServicesMeshes",
      "cloudasset.assets.exportNetworkServicesServiceBindings",
      "cloudasset.assets.exportNetworkServicesTcpRoutes",
      "cloudasset.assets.exportNetworkServicesTlsRoutes",
      "cloudasset.assets.exportOSConfigOSPolicyAssignmentReports",
      "cloudasset.assets.exportOSConfigOSPolicyAssignments",
      "cloudasset.assets.exportOSConfigVulnerabilityReports",
      "cloudasset.assets.exportOSInventories",
      "cloudasset.assets.exportOrgPolicy",
      "cloudasset.assets.exportPatchDeployments",
      "cloudasset.assets.exportPubsubSnapshots",
      "cloudasset.assets.exportPubsubSubscriptions",
      "cloudasset.assets.exportPubsubTopics",
      "cloudasset.assets.exportRedisInstances",
      "cloudasset.assets.exportResource",
      "cloudasset.assets.exportSecretManagerSecretVersions",
      "cloudasset.assets.exportSecretManagerSecrets",
      "cloudasset.assets.exportServiceDirectoryNamespaces",
      "cloudasset.assets.exportServicePerimeter",
      "cloudasset.assets.exportServiceconsumermanagementConsumerProperty",
      "cloudasset.assets.exportServiceconsumermanagementConsumerQuotaLimits",
      "cloudasset.assets.exportServiceconsumermanagementConsumers",
      "cloudasset.assets.exportServiceconsumermanagementProducerOverrides",
      "cloudasset.assets.exportServiceconsumermanagementTenancyUnits",
      "cloudasset.assets.exportServiceconsumermanagementVisibility",
      "cloudasset.assets.exportServicemanagementServices",
      "cloudasset.assets.exportServiceusageAdminOverrides",
      "cloudasset.assets.exportServiceusageConsumerOverrides",
      "cloudasset.assets.exportServiceusageServices",
      "cloudasset.assets.exportSpannerBackups",
      "cloudasset.assets.exportSpannerDatabases",
      "cloudasset.assets.exportSpannerInstances",
      "cloudasset.assets.exportSpeakerIdPhrases",
      "cloudasset.assets.exportSpeakerIdSettings",
      "cloudasset.assets.exportSpeakerIdSpeakers",
      "cloudasset.assets.exportSpeechCustomClasses",
      "cloudasset.assets.exportSpeechPhraseSets",
      "cloudasset.assets.exportSqladminBackupRuns",
      "cloudasset.assets.exportSqladminInstances",
      "cloudasset.assets.exportStorageBuckets",
      "cloudasset.assets.exportTpuNodes",
      "cloudasset.assets.exportVpcaccessConnector",
      "cloudasset.assets.listAccessLevel",
      "cloudasset.assets.listAccessPolicy",
      "cloudasset.assets.listAiplatformBatchPredictionJobs",
      "cloudasset.assets.listAiplatformCustomJobs",
      "cloudasset.assets.listAiplatformDataLabelingJobs",
      "cloudasset.assets.listAiplatformDatasets",
      "cloudasset.assets.listAiplatformEndpoints",
      "cloudasset.assets.listAiplatformHyperparameterTuningJobs",
      "cloudasset.assets.listAiplatformMetadataStores",
      "cloudasset.assets.listAiplatformModelDeploymentMonitoringJobs",
      "cloudasset.assets.listAiplatformModels",
      "cloudasset.assets.listAiplatformPipelineJobs",
      "cloudasset.assets.listAiplatformSpecialistPools",
      "cloudasset.assets.listAiplatformTrainingPipelines",
      "cloudasset.assets.listAllAccessPolicy",
      "cloudasset.assets.listAnthosConnectedCluster",
      "cloudasset.assets.listAnthosedgeCluster",
      "cloudasset.assets.listApigatewayApi",
      "cloudasset.assets.listApigatewayApiConfig",
      "cloudasset.assets.listApigatewayGateway",
      "cloudasset.assets.listApikeysKeys",
      "cloudasset.assets.listAppengineApplications",
      "cloudasset.assets.listAppengineServices",
      "cloudasset.assets.listAppengineVersions",
      "cloudasset.assets.listArtifactregistryDockerImages",
      "cloudasset.assets.listArtifactregistryRepositories",
      "cloudasset.assets.listAssuredWorkloadsWorkloads",
      "cloudasset.assets.listBeyondCorpApiGateways",
      "cloudasset.assets.listBeyondCorpAppConnections",
      "cloudasset.assets.listBeyondCorpAppConnectors",
      "cloudasset.assets.listBeyondCorpAppGateways",
      "cloudasset.assets.listBeyondCorpClientConnectorServices",
      "cloudasset.assets.listBeyondCorpClientGateways",
      "cloudasset.assets.listBigqueryDatasets",
      "cloudasset.assets.listBigqueryModels",
      "cloudasset.assets.listBigqueryTables",
      "cloudasset.assets.listBigtableAppProfile",
      "cloudasset.assets.listBigtableBackup",
      "cloudasset.assets.listBigtableCluster",
      "cloudasset.assets.listBigtableInstance",
      "cloudasset.assets.listBigtableTable",
      "cloudasset.assets.listCloudAssetFeeds",
      "cloudasset.assets.listCloudDeployDeliveryPipelines",
      "cloudasset.assets.listCloudDeployReleases",
      "cloudasset.assets.listCloudDeployRollouts",
      "cloudasset.assets.listCloudDeployTargets",
      "cloudasset.assets.listCloudDocumentAIEvaluation",
      "cloudasset.assets.listCloudDocumentAIHumanReviewConfig",
      "cloudasset.assets.listCloudDocumentAILabelerPool",
      "cloudasset.assets.listCloudDocumentAIProcessor",
      "cloudasset.assets.listCloudDocumentAIProcessorVersion",
      "cloudasset.assets.listCloudbillingBillingAccounts",
      "cloudasset.assets.listCloudbillingProjectBillingInfos",
      "cloudasset.assets.listCloudfunctionsFunctions",
      "cloudasset.assets.listCloudfunctionsGen2Functions",
      "cloudasset.assets.listCloudkmsCryptoKeyVersions",
      "cloudasset.assets.listCloudkmsCryptoKeys",
      "cloudasset.assets.listCloudkmsEkmConnections",
      "cloudasset.assets.listCloudkmsImportJobs",
      "cloudasset.assets.listCloudkmsKeyRings",
      "cloudasset.assets.listCloudmemcacheInstances",
      "cloudasset.assets.listCloudresourcemanagerFolders",
      "cloudasset.assets.listCloudresourcemanagerOrganizations",
      "cloudasset.assets.listCloudresourcemanagerProjects",
      "cloudasset.assets.listCloudresourcemanagerTagBindings",
      "cloudasset.assets.listCloudresourcemanagerTagKeys",
      "cloudasset.assets.listCloudresourcemanagerTagValues",
      "cloudasset.assets.listComposerEnvironments",
      "cloudasset.assets.listComputeAddress",
      "cloudasset.assets.listComputeAutoscalers",
      "cloudasset.assets.listComputeBackendBuckets",
      "cloudasset.assets.listComputeBackendServices",
      "cloudasset.assets.listComputeCommitments",
      "cloudasset.assets.listComputeDisks",
      "cloudasset.assets.listComputeExternalVpnGateways",
      "cloudasset.assets.listComputeFirewallPolicies",
      "cloudasset.assets.listComputeFirewalls",
      "cloudasset.assets.listComputeForwardingRules",
      "cloudasset.assets.listComputeGlobalAddress",
      "cloudasset.assets.listComputeGlobalForwardingRules",
      "cloudasset.assets.listComputeHealthChecks",
      "cloudasset.assets.listComputeHttpHealthChecks",
      "cloudasset.assets.listComputeHttpsHealthChecks",
      "cloudasset.assets.listComputeImages",
      "cloudasset.assets.listComputeInstanceGroupManagers",
      "cloudasset.assets.listComputeInstanceGroups",
      "cloudasset.assets.listComputeInstanceTemplates",
      "cloudasset.assets.listComputeInstances",
      "cloudasset.assets.listComputeInterconnect",
      "cloudasset.assets.listComputeInterconnectAttachment",
      "cloudasset.assets.listComputeLicenses",
      "cloudasset.assets.listComputeNetworkEndpointGroups",
      "cloudasset.assets.listComputeNetworks",
      "cloudasset.assets.listComputeNodeGroups",
      "cloudasset.assets.listComputeNodeTemplates",
      "cloudasset.assets.listComputePacketMirrorings",
      "cloudasset.assets.listComputeProjects",
      "cloudasset.assets.listComputeRegionAutoscaler",
      "cloudasset.assets.listComputeRegionBackendServices",
      "cloudasset.assets.listComputeRegionDisk",
      "cloudasset.assets.listComputeRegionInstanceGroup",
      "cloudasset.assets.listComputeRegionInstanceGroupManager",
      "cloudasset.assets.listComputeReservations",
      "cloudasset.assets.listComputeResourcePolicies",
      "cloudasset.assets.listComputeRouters",
      "cloudasset.assets.listComputeRoutes",
      "cloudasset.assets.listComputeSecurityPolicy",
      "cloudasset.assets.listComputeServiceAttachments",
      "cloudasset.assets.listComputeSnapshots",
      "cloudasset.assets.listComputeSslCertificates",
      "cloudasset.assets.listComputeSslPolicies",
      "cloudasset.assets.listComputeSubnetworks",
      "cloudasset.assets.listComputeTargetHttpProxies",
      "cloudasset.assets.listComputeTargetHttpsProxies",
      "cloudasset.assets.listComputeTargetInstances",
      "cloudasset.assets.listComputeTargetPools",
      "cloudasset.assets.listComputeTargetSslProxies",
      "cloudasset.assets.listComputeTargetTcpProxies",
      "cloudasset.assets.listComputeTargetVpnGateways",
      "cloudasset.assets.listComputeUrlMaps",
      "cloudasset.assets.listComputeVpnGateways",
      "cloudasset.assets.listComputeVpnTunnels",
      "cloudasset.assets.listConnectorsConnections",
      "cloudasset.assets.listConnectorsConnectorVersions",
      "cloudasset.assets.listConnectorsConnectors",
      "cloudasset.assets.listConnectorsProviders",
      "cloudasset.assets.listConnectorsRuntimeConfigs",
      "cloudasset.assets.listContainerAppsDeployment",
      "cloudasset.assets.listContainerAppsReplicaSets",
      "cloudasset.assets.listContainerBatchJobs",
      "cloudasset.assets.listContainerClusterrole",
      "cloudasset.assets.listContainerClusterrolebinding",
      "cloudasset.assets.listContainerClusters",
      "cloudasset.assets.listContainerExtensionsIngresses",
      "cloudasset.assets.listContainerJobs",
      "cloudasset.assets.listContainerNamespace",
      "cloudasset.assets.listContainerNetworkingIngresses",
      "cloudasset.assets.listContainerNetworkingNetworkPolicies",
      "cloudasset.assets.listContainerNode",
      "cloudasset.assets.listContainerNodepool",
      "cloudasset.assets.listContainerPod",
      "cloudasset.assets.listContainerReplicaSets",
      "cloudasset.assets.listContainerRole",
      "cloudasset.assets.listContainerRolebinding",
      "cloudasset.assets.listContainerServices",
      "cloudasset.assets.listContainerregistryImage",
      "cloudasset.assets.listDataMigrationConnectionProfiles",
      "cloudasset.assets.listDataMigrationMigrationJobs",
      "cloudasset.assets.listDataflowJobs",
      "cloudasset.assets.listDatafusionInstance",
      "cloudasset.assets.listDataplexAssets",
      "cloudasset.assets.listDataplexLakes",
      "cloudasset.assets.listDataplexTasks",
      "cloudasset.assets.listDataplexZones",
      "cloudasset.assets.listDataprocAutoscalingPolicies",
      "cloudasset.assets.listDataprocBatches",
      "cloudasset.assets.listDataprocClusters",
      "cloudasset.assets.listDataprocJobs",
      "cloudasset.assets.listDataprocSessions",
      "cloudasset.assets.listDataprocWorkflowTemplates",
      "cloudasset.assets.listDatastreamConnectionProfile",
      "cloudasset.assets.listDatastreamPrivateConnection",
      "cloudasset.assets.listDatastreamStream",
      "cloudasset.assets.listDialogflowAgents",
      "cloudasset.assets.listDialogflowConversationProfiles",
      "cloudasset.assets.listDialogflowKnowledgeBases",
      "cloudasset.assets.listDialogflowLocationSettings",
      "cloudasset.assets.listDlpDeidentifyTemplates",
      "cloudasset.assets.listDlpDlpJobs",
      "cloudasset.assets.listDlpInspectTemplates",
      "cloudasset.assets.listDlpJobTriggers",
      "cloudasset.assets.listDlpStoredInfoTypes",
      "cloudasset.assets.listDnsManagedZones",
      "cloudasset.assets.listDnsPolicies",
      "cloudasset.assets.listDomainsRegistrations",
      "cloudasset.assets.listEventarcTriggers",
      "cloudasset.assets.listFileBackups",
      "cloudasset.assets.listFileInstances",
      "cloudasset.assets.listFirebaseAppInfos",
      "cloudasset.assets.listFirebaseProjects",
      "cloudasset.assets.listFirestoreDatabases",
      "cloudasset.assets.listGKEHubFeatures",
      "cloudasset.assets.listGKEHubMemberships",
      "cloudasset.assets.listGameservicesGameServerClusters",
      "cloudasset.assets.listGameservicesGameServerConfigs",
      "cloudasset.assets.listGameservicesGameServerDeployments",
      "cloudasset.assets.listGameservicesRealms",
      "cloudasset.assets.listGkeBackupBackupPlans",
      "cloudasset.assets.listGkeBackupBackups",
      "cloudasset.assets.listGkeBackupRestorePlans",
      "cloudasset.assets.listGkeBackupRestores",
      "cloudasset.assets.listGkeBackupVolumeBackups",
      "cloudasset.assets.listGkeBackupVolumeRestores",
      "cloudasset.assets.listHealthcareConsentStores",
      "cloudasset.assets.listHealthcareDatasets",
      "cloudasset.assets.listHealthcareDicomStores",
      "cloudasset.assets.listHealthcareFhirStores",
      "cloudasset.assets.listHealthcareHl7V2Stores",
      "cloudasset.assets.listIamPolicy",
      "cloudasset.assets.listIamRoles",
      "cloudasset.assets.listIamServiceAccountKeys",
      "cloudasset.assets.listIamServiceAccounts",
      "cloudasset.assets.listIapTunnel",
      "cloudasset.assets.listIapTunnelInstances",
      "cloudasset.assets.listIapTunnelZones",
      "cloudasset.assets.listIapWeb",
      "cloudasset.assets.listIapWebServiceVersion",
      "cloudasset.assets.listIapWebServices",
      "cloudasset.assets.listIapWebType",
      "cloudasset.assets.listIdsEndpoints",
      "cloudasset.assets.listIntegrationsAuthConfigs",
      "cloudasset.assets.listIntegrationsCertificates",
      "cloudasset.assets.listIntegrationsExecutions",
      "cloudasset.assets.listIntegrationsIntegrationVersions",
      "cloudasset.assets.listIntegrationsIntegrations",
      "cloudasset.assets.listIntegrationsSfdcChannels",
      "cloudasset.assets.listIntegrationsSfdcInstances",
      "cloudasset.assets.listIntegrationsSuspensions",
      "cloudasset.assets.listLoggingLogMetrics",
      "cloudasset.assets.listLoggingLogSinks",
      "cloudasset.assets.listManagedidentitiesDomain",
      "cloudasset.assets.listMetastoreBackups",
      "cloudasset.assets.listMetastoreMetadataImports",
      "cloudasset.assets.listMetastoreServices",
      "cloudasset.assets.listMonitoringAlertPolicies",
      "cloudasset.assets.listNetworkConnectivityHubs",
      "cloudasset.assets.listNetworkConnectivitySpokes",
      "cloudasset.assets.listNetworkManagementConnectivityTests",
      "cloudasset.assets.listNetworkServicesEndpointPolicies",
      "cloudasset.assets.listNetworkServicesGateways",
      "cloudasset.assets.listNetworkServicesGrpcRoutes",
      "cloudasset.assets.listNetworkServicesHttpRoutes",
      "cloudasset.assets.listNetworkServicesMeshes",
      "cloudasset.assets.listNetworkServicesServiceBindings",
      "cloudasset.assets.listNetworkServicesTcpRoutes",
      "cloudasset.assets.listNetworkServicesTlsRoutes",
      "cloudasset.assets.listOSConfigOSPolicyAssignmentReports",
      "cloudasset.assets.listOSConfigOSPolicyAssignments",
      "cloudasset.assets.listOSConfigVulnerabilityReports",
      "cloudasset.assets.listOSInventories",
      "cloudasset.assets.listOrgPolicy",
      "cloudasset.assets.listPatchDeployments",
      "cloudasset.assets.listPubsubSnapshots",
      "cloudasset.assets.listPubsubSubscriptions",
      "cloudasset.assets.listPubsubTopics",
      "cloudasset.assets.listRedisInstances",
      "cloudasset.assets.listResource",
      "cloudasset.assets.listRunDomainMapping",
      "cloudasset.assets.listRunRevision",
      "cloudasset.assets.listRunService",
      "cloudasset.assets.listSecretManagerSecretVersions",
      "cloudasset.assets.listSecretManagerSecrets",
      "cloudasset.assets.listServiceDirectoryNamespaces",
      "cloudasset.assets.listServicePerimeter",
      "cloudasset.assets.listServiceconsumermanagementConsumerProperty",
      "cloudasset.assets.listServiceconsumermanagementConsumerQuotaLimits",
      "cloudasset.assets.listServiceconsumermanagementConsumers",
      "cloudasset.assets.listServiceconsumermanagementProducerOverrides",
      "cloudasset.assets.listServiceconsumermanagementTenancyUnits",
      "cloudasset.assets.listServiceconsumermanagementVisibility",
      "cloudasset.assets.listServicemanagementServices",
      "cloudasset.assets.listServiceusageAdminOverrides",
      "cloudasset.assets.listServiceusageConsumerOverrides",
      "cloudasset.assets.listServiceusageServices",
      "cloudasset.assets.listSpannerBackups",
      "cloudasset.assets.listSpannerDatabases",
      "cloudasset.assets.listSpannerInstances",
      "cloudasset.assets.listSpeakerIdPhrases",
      "cloudasset.assets.listSpeakerIdSettings",
      "cloudasset.assets.listSpeakerIdSpeakers",
      "cloudasset.assets.listSpeechCustomClasses",
      "cloudasset.assets.listSpeechPhraseSets",
      "cloudasset.assets.listSqladminBackupRuns",
      "cloudasset.assets.listSqladminInstances",
      "cloudasset.assets.listStorageBuckets",
      "cloudasset.assets.listTpuNodes",
      "cloudasset.assets.listVpcaccessConnector",
      "cloudasset.assets.queryAccessPolicy",
      "cloudasset.assets.queryIamPolicy",
      "cloudasset.assets.queryOSInventories",
      "cloudasset.assets.queryResource",
      "cloudasset.assets.searchAllIamPolicies",
      "cloudasset.assets.searchAllResources",
      "cloudasset.feeds.create",
      "cloudasset.feeds.delete",
      "cloudasset.feeds.get",
      "cloudasset.feeds.list",
      "cloudasset.feeds.update",
      "cloudsql.instances.connect",
      "cloudsql.users.list",
      "compute.globalOperations.get",
      "compute.instances.get",
      "compute.instances.list",
      "compute.networkEndpointGroups.get",
      "compute.projects.get",
      "container.clusters.get",
      "iam.denypolicies.get",
      "iam.denypolicies.list",
      "iam.googleapis.com/workloadIdentityPoolProviders.list",
      "iam.googleapis.com/workloadIdentityPools.list",
      "logging.logEntries.list",
      "monitoring.alertPolicies.list",
      "monitoring.timeSeries.list",
      "orgpolicy.policies.list",
      "orgpolicy.policy.get",
      "recommender.cloudAssetInsights.get",
      "recommender.cloudAssetInsights.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "resourcemanager.folders.get",
      "resourcemanager.folders.list",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list",
      "resourcemanager.tagValues.get",
      "securitycenter.assets.list",
      "securitycenter.assetsecuritymarks.update",
      "securitycenter.findings.list",
      "securitycenter.notificationconfig.create",
      "securitycenter.notificationconfig.delete",
      "securitycenter.notificationconfig.update",
      "securitycenter.organizationsettings.get",
      "securitycenter.resourcevalueconfigs.get",
      "securitycenter.resourcevalueconfigs.list",
      "securitycenter.sources.list",
      "serviceusage.operations.cancel",
      "serviceusage.operations.delete",
      "serviceusage.operations.get",
      "serviceusage.operations.list",
      "serviceusage.quotas.get",
      "serviceusage.services.disable",
      "serviceusage.services.enable",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "stackdriver.projects.get",
      "storage.buckets.get",
      "storage.buckets.getIamPolicy",
      "storage.buckets.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.settingsAdmin",
    "title": "Security Center Settings Admin",
    "description": "Admin(super user) access to security center settings",
    "includedPermissions": [
      "resourcemanager.folders.get",
      "resourcemanager.folders.list",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "securitycenter.bigQueryExports.create",
      "securitycenter.bigQueryExports.delete",
      "securitycenter.bigQueryExports.get",
      "securitycenter.bigQueryExports.list",
      "securitycenter.bigQueryExports.update",
      "securitycenter.containerthreatdetectionsettings.calculate",
      "securitycenter.containerthreatdetectionsettings.get",
      "securitycenter.containerthreatdetectionsettings.update",
      "securitycenter.effectivesecurityhealthanalyticscustommodules.get",
      "securitycenter.effectivesecurityhealthanalyticscustommodules.list",
      "securitycenter.eventthreatdetectionsettings.calculate",
      "securitycenter.eventthreatdetectionsettings.get",
      "securitycenter.eventthreatdetectionsettings.update",
      "securitycenter.integratedvulnerabilityscannersettings.calculate",
      "securitycenter.integratedvulnerabilityscannersettings.get",
      "securitycenter.integratedvulnerabilityscannersettings.update",
      "securitycenter.muteconfigs.create",
      "securitycenter.muteconfigs.delete",
      "securitycenter.muteconfigs.get",
      "securitycenter.muteconfigs.list",
      "securitycenter.muteconfigs.update",
      "securitycenter.notificationconfig.create",
      "securitycenter.notificationconfig.delete",
      "securitycenter.notificationconfig.get",
      "securitycenter.notificationconfig.list",
      "securitycenter.notificationconfig.update",
      "securitycenter.organizationsettings.get",
      "securitycenter.organizationsettings.update",
      "securitycenter.rapidvulnerabilitydetectionsettings.calculate",
      "securitycenter.rapidvulnerabilitydetectionsettings.get",
      "securitycenter.rapidvulnerabilitydetectionsettings.update",
      "securitycenter.securitycentersettings.get",
      "securitycenter.securitycentersettings.update",
      "securitycenter.securityhealthanalyticscustommodules.create",
      "securitycenter.securityhealthanalyticscustommodules.delete",
      "securitycenter.securityhealthanalyticscustommodules.get",
      "securitycenter.securityhealthanalyticscustommodules.list",
      "securitycenter.securityhealthanalyticscustommodules.update",
      "securitycenter.securityhealthanalyticssettings.calculate",
      "securitycenter.securityhealthanalyticssettings.get",
      "securitycenter.securityhealthanalyticssettings.update",
      "securitycenter.subscription.get",
      "securitycenter.userinterfacemetadata.get",
      "securitycenter.virtualmachinethreatdetectionsettings.calculate",
      "securitycenter.virtualmachinethreatdetectionsettings.get",
      "securitycenter.virtualmachinethreatdetectionsettings.update",
      "securitycenter.websecurityscannersettings.calculate",
      "securitycenter.websecurityscannersettings.get",
      "securitycenter.websecurityscannersettings.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.settingsEditor",
    "title": "Security Center Settings Editor",
    "description": "Read-Write access to security center settings",
    "includedPermissions": [
      "resourcemanager.folders.get",
      "resourcemanager.folders.list",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "securitycenter.bigQueryExports.create",
      "securitycenter.bigQueryExports.delete",
      "securitycenter.bigQueryExports.get",
      "securitycenter.bigQueryExports.list",
      "securitycenter.bigQueryExports.update",
      "securitycenter.containerthreatdetectionsettings.calculate",
      "securitycenter.containerthreatdetectionsettings.get",
      "securitycenter.containerthreatdetectionsettings.update",
      "securitycenter.effectivesecurityhealthanalyticscustommodules.get",
      "securitycenter.effectivesecurityhealthanalyticscustommodules.list",
      "securitycenter.eventthreatdetectionsettings.calculate",
      "securitycenter.eventthreatdetectionsettings.get",
      "securitycenter.eventthreatdetectionsettings.update",
      "securitycenter.integratedvulnerabilityscannersettings.calculate",
      "securitycenter.integratedvulnerabilityscannersettings.get",
      "securitycenter.integratedvulnerabilityscannersettings.update",
      "securitycenter.muteconfigs.create",
      "securitycenter.muteconfigs.delete",
      "securitycenter.muteconfigs.get",
      "securitycenter.muteconfigs.list",
      "securitycenter.muteconfigs.update",
      "securitycenter.notificationconfig.create",
      "securitycenter.notificationconfig.delete",
      "securitycenter.notificationconfig.get",
      "securitycenter.notificationconfig.list",
      "securitycenter.notificationconfig.update",
      "securitycenter.organizationsettings.get",
      "securitycenter.organizationsettings.update",
      "securitycenter.rapidvulnerabilitydetectionsettings.calculate",
      "securitycenter.rapidvulnerabilitydetectionsettings.get",
      "securitycenter.rapidvulnerabilitydetectionsettings.update",
      "securitycenter.securitycentersettings.get",
      "securitycenter.securitycentersettings.update",
      "securitycenter.securityhealthanalyticscustommodules.create",
      "securitycenter.securityhealthanalyticscustommodules.delete",
      "securitycenter.securityhealthanalyticscustommodules.get",
      "securitycenter.securityhealthanalyticscustommodules.list",
      "securitycenter.securityhealthanalyticscustommodules.update",
      "securitycenter.securityhealthanalyticssettings.calculate",
      "securitycenter.securityhealthanalyticssettings.get",
      "securitycenter.securityhealthanalyticssettings.update",
      "securitycenter.subscription.get",
      "securitycenter.userinterfacemetadata.get",
      "securitycenter.virtualmachinethreatdetectionsettings.calculate",
      "securitycenter.virtualmachinethreatdetectionsettings.get",
      "securitycenter.virtualmachinethreatdetectionsettings.update",
      "securitycenter.websecurityscannersettings.calculate",
      "securitycenter.websecurityscannersettings.get",
      "securitycenter.websecurityscannersettings.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.settingsViewer",
    "title": "Security Center Settings Viewer",
    "description": "Read access to security center settings",
    "includedPermissions": [
      "resourcemanager.folders.get",
      "resourcemanager.folders.list",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "securitycenter.bigQueryExports.get",
      "securitycenter.bigQueryExports.list",
      "securitycenter.containerthreatdetectionsettings.calculate",
      "securitycenter.containerthreatdetectionsettings.get",
      "securitycenter.effectivesecurityhealthanalyticscustommodules.get",
      "securitycenter.effectivesecurityhealthanalyticscustommodules.list",
      "securitycenter.eventthreatdetectionsettings.calculate",
      "securitycenter.eventthreatdetectionsettings.get",
      "securitycenter.integratedvulnerabilityscannersettings.calculate",
      "securitycenter.integratedvulnerabilityscannersettings.get",
      "securitycenter.muteconfigs.get",
      "securitycenter.muteconfigs.list",
      "securitycenter.notificationconfig.get",
      "securitycenter.notificationconfig.list",
      "securitycenter.organizationsettings.get",
      "securitycenter.rapidvulnerabilitydetectionsettings.calculate",
      "securitycenter.rapidvulnerabilitydetectionsettings.get",
      "securitycenter.securitycentersettings.get",
      "securitycenter.securityhealthanalyticscustommodules.get",
      "securitycenter.securityhealthanalyticscustommodules.list",
      "securitycenter.securityhealthanalyticssettings.calculate",
      "securitycenter.securityhealthanalyticssettings.get",
      "securitycenter.subscription.get",
      "securitycenter.userinterfacemetadata.get",
      "securitycenter.virtualmachinethreatdetectionsettings.calculate",
      "securitycenter.virtualmachinethreatdetectionsettings.get",
      "securitycenter.websecurityscannersettings.calculate",
      "securitycenter.websecurityscannersettings.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.simulationsViewer",
    "title": "Security Center Simulations Reader",
    "description": "Read access to security center simulations",
    "includedPermissions": [
      "securitycenter.simulations.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.sourcesAdmin",
    "title": "Security Center Sources Admin",
    "description": "Admin access to sources",
    "includedPermissions": [
      "resourcemanager.organizations.get",
      "securitycenter.sources.get",
      "securitycenter.sources.getIamPolicy",
      "securitycenter.sources.list",
      "securitycenter.sources.setIamPolicy",
      "securitycenter.sources.update",
      "securitycenter.userinterfacemetadata.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.sourcesEditor",
    "title": "Security Center Sources Editor",
    "description": "Read-write access to sources",
    "includedPermissions": [
      "resourcemanager.organizations.get",
      "securitycenter.sources.get",
      "securitycenter.sources.list",
      "securitycenter.sources.update",
      "securitycenter.userinterfacemetadata.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.sourcesViewer",
    "title": "Security Center Sources Viewer",
    "description": "Read access to sources",
    "includedPermissions": [
      "resourcemanager.organizations.get",
      "securitycenter.sources.get",
      "securitycenter.sources.list",
      "securitycenter.userinterfacemetadata.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/securitycenter.valuedResourcesViewer",
    "title": "Security Center Valued Resources Reader",
    "description": "Read access to security center valued resources",
    "includedPermissions": [
      "securitycenter.valuedresources.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/serverless.serviceAgent",
    "title": "Cloud Run Service Agent",
    "description": "Gives Cloud Run service account access to managed resources.",
    "includedPermissions": [
      "artifactregistry.dockerimages.get",
      "artifactregistry.dockerimages.list",
      "artifactregistry.files.get",
      "artifactregistry.files.list",
      "artifactregistry.locations.get",
      "artifactregistry.locations.list",
      "artifactregistry.mavenartifacts.get",
      "artifactregistry.mavenartifacts.list",
      "artifactregistry.npmpackages.get",
      "artifactregistry.npmpackages.list",
      "artifactregistry.packages.get",
      "artifactregistry.packages.list",
      "artifactregistry.projectsettings.get",
      "artifactregistry.pythonpackages.get",
      "artifactregistry.pythonpackages.list",
      "artifactregistry.repositories.downloadArtifacts",
      "artifactregistry.repositories.get",
      "artifactregistry.repositories.list",
      "artifactregistry.repositories.listEffectiveTags",
      "artifactregistry.repositories.listTagBindings",
      "artifactregistry.repositories.readViaVirtualRepository",
      "artifactregistry.tags.get",
      "artifactregistry.tags.list",
      "artifactregistry.versions.get",
      "artifactregistry.versions.list",
      "binaryauthorization.platformPolicies.evaluatePolicy",
      "binaryauthorization.policy.evaluatePolicy",
      "clientauthconfig.clients.list",
      "cloudbuild.builds.create",
      "cloudbuild.builds.get",
      "compute.addresses.createInternal",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.globalOperations.get",
      "compute.networks.access",
      "compute.networks.get",
      "compute.subnetworks.get",
      "compute.subnetworks.use",
      "iam.serviceAccounts.actAs",
      "iam.serviceAccounts.getAccessToken",
      "iam.serviceAccounts.getOpenIdToken",
      "iam.serviceAccounts.signBlob",
      "pubsub.subscriptions.create",
      "pubsub.subscriptions.delete",
      "pubsub.subscriptions.get",
      "pubsub.subscriptions.list",
      "pubsub.topics.attachSubscription",
      "pubsub.topics.create",
      "pubsub.topics.delete",
      "pubsub.topics.get",
      "pubsub.topics.list",
      "pubsub.topics.publish",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list",
      "run.routes.invoke",
      "serviceusage.services.use",
      "storage.objects.get",
      "storage.objects.list",
      "vpcaccess.connectors.get",
      "vpcaccess.connectors.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/servicebroker.admin",
    "title": "Service Broker Admin",
    "description": "Full access to ServiceBroker resources.",
    "includedPermissions": [
      "servicebroker.bindingoperations.get",
      "servicebroker.bindingoperations.list",
      "servicebroker.bindings.create",
      "servicebroker.bindings.delete",
      "servicebroker.bindings.get",
      "servicebroker.bindings.getIamPolicy",
      "servicebroker.bindings.list",
      "servicebroker.bindings.setIamPolicy",
      "servicebroker.catalogs.create",
      "servicebroker.catalogs.delete",
      "servicebroker.catalogs.get",
      "servicebroker.catalogs.getIamPolicy",
      "servicebroker.catalogs.list",
      "servicebroker.catalogs.setIamPolicy",
      "servicebroker.catalogs.validate",
      "servicebroker.instanceoperations.get",
      "servicebroker.instanceoperations.list",
      "servicebroker.instances.create",
      "servicebroker.instances.delete",
      "servicebroker.instances.get",
      "servicebroker.instances.getIamPolicy",
      "servicebroker.instances.list",
      "servicebroker.instances.setIamPolicy",
      "servicebroker.instances.update"
    ],
    "stage": "DEPRECATED",
    "etag": "AA=="
  },
  {
    "name": "roles/servicebroker.operator",
    "title": "Service Broker Operator",
    "description": "Operational access to the ServiceBroker resources.",
    "includedPermissions": [
      "servicebroker.bindingoperations.get",
      "servicebroker.bindingoperations.list",
      "servicebroker.bindings.create",
      "servicebroker.bindings.delete",
      "servicebroker.bindings.get",
      "servicebroker.bindings.list",
      "servicebroker.catalogs.create",
      "servicebroker.catalogs.delete",
      "servicebroker.catalogs.get",
      "servicebroker.catalogs.list",
      "servicebroker.instanceoperations.get",
      "servicebroker.instanceoperations.list",
      "servicebroker.instances.create",
      "servicebroker.instances.delete",
      "servicebroker.instances.get",
      "servicebroker.instances.list",
      "servicebroker.instances.update"
    ],
    "stage": "DEPRECATED",
    "etag": "AA=="
  },
  {
    "name": "roles/serviceconsumermanagement.tenancyUnitsAdmin",
    "title": "Admin of Tenancy Units",
    "description": "Administrate tenancy units",
    "includedPermissions": [
      "serviceconsumermanagement.tenancyu.addResource",
      "serviceconsumermanagement.tenancyu.create",
      "serviceconsumermanagement.tenancyu.delete",
      "serviceconsumermanagement.tenancyu.list",
      "serviceconsumermanagement.tenancyu.removeResource"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/serviceconsumermanagement.tenancyUnitsViewer",
    "title": "Viewer of Tenancy Units",
    "description": "View tenancy units",
    "includedPermissions": [
      "serviceconsumermanagement.tenancyu.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/servicedirectory.admin",
    "title": "Service Directory Admin",
    "description": "Full control of all Service Directory resources and permissions.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "servicedirectory.endpoints.create",
      "servicedirectory.endpoints.delete",
      "servicedirectory.endpoints.get",
      "servicedirectory.endpoints.getIamPolicy",
      "servicedirectory.endpoints.list",
      "servicedirectory.endpoints.setIamPolicy",
      "servicedirectory.endpoints.update",
      "servicedirectory.locations.get",
      "servicedirectory.locations.list",
      "servicedirectory.namespaces.associatePrivateZone",
      "servicedirectory.namespaces.create",
      "servicedirectory.namespaces.delete",
      "servicedirectory.namespaces.get",
      "servicedirectory.namespaces.getIamPolicy",
      "servicedirectory.namespaces.list",
      "servicedirectory.namespaces.setIamPolicy",
      "servicedirectory.namespaces.update",
      "servicedirectory.networks.attach",
      "servicedirectory.services.bind",
      "servicedirectory.services.create",
      "servicedirectory.services.delete",
      "servicedirectory.services.get",
      "servicedirectory.services.getIamPolicy",
      "servicedirectory.services.list",
      "servicedirectory.services.resolve",
      "servicedirectory.services.setIamPolicy",
      "servicedirectory.services.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/servicedirectory.editor",
    "title": "Service Directory Editor",
    "description": "Edit Service Directory resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "servicedirectory.endpoints.create",
      "servicedirectory.endpoints.delete",
      "servicedirectory.endpoints.get",
      "servicedirectory.endpoints.getIamPolicy",
      "servicedirectory.endpoints.list",
      "servicedirectory.endpoints.update",
      "servicedirectory.locations.get",
      "servicedirectory.locations.list",
      "servicedirectory.namespaces.associatePrivateZone",
      "servicedirectory.namespaces.create",
      "servicedirectory.namespaces.delete",
      "servicedirectory.namespaces.get",
      "servicedirectory.namespaces.getIamPolicy",
      "servicedirectory.namespaces.list",
      "servicedirectory.namespaces.update",
      "servicedirectory.networks.attach",
      "servicedirectory.services.bind",
      "servicedirectory.services.create",
      "servicedirectory.services.delete",
      "servicedirectory.services.get",
      "servicedirectory.services.getIamPolicy",
      "servicedirectory.services.list",
      "servicedirectory.services.resolve",
      "servicedirectory.services.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/servicedirectory.networkAttacher",
    "title": "Service Directory Network Attacher",
    "description": "Gives access to attach VPC Networks to Service Directory Endpoints",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "servicedirectory.networks.attach"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/servicedirectory.pscAuthorizedService",
    "title": "Private Service Connect Authorized Service",
    "description": "Gives access to VPC Networks via Service Directory",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "servicedirectory.networks.access"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/servicedirectory.serviceAgent",
    "title": "Service Directory Service Agent",
    "description": "Give the Service Directory service agent access to Cloud Platform resources.",
    "includedPermissions": [
      "container.clusters.get",
      "gkehub.features.get",
      "gkehub.locations.get",
      "gkehub.locations.list",
      "gkehub.memberships.get",
      "gkehub.memberships.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "servicedirectory.endpoints.create",
      "servicedirectory.endpoints.delete",
      "servicedirectory.endpoints.get",
      "servicedirectory.endpoints.getIamPolicy",
      "servicedirectory.endpoints.list",
      "servicedirectory.endpoints.update",
      "servicedirectory.locations.get",
      "servicedirectory.locations.list",
      "servicedirectory.namespaces.associatePrivateZone",
      "servicedirectory.namespaces.create",
      "servicedirectory.namespaces.delete",
      "servicedirectory.namespaces.get",
      "servicedirectory.namespaces.getIamPolicy",
      "servicedirectory.namespaces.list",
      "servicedirectory.namespaces.update",
      "servicedirectory.networks.attach",
      "servicedirectory.services.bind",
      "servicedirectory.services.create",
      "servicedirectory.services.delete",
      "servicedirectory.services.get",
      "servicedirectory.services.getIamPolicy",
      "servicedirectory.services.list",
      "servicedirectory.services.resolve",
      "servicedirectory.services.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/servicedirectory.viewer",
    "title": "Service Directory Viewer",
    "description": "View Service Directory resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "servicedirectory.endpoints.get",
      "servicedirectory.endpoints.getIamPolicy",
      "servicedirectory.endpoints.list",
      "servicedirectory.locations.get",
      "servicedirectory.locations.list",
      "servicedirectory.namespaces.get",
      "servicedirectory.namespaces.getIamPolicy",
      "servicedirectory.namespaces.list",
      "servicedirectory.services.get",
      "servicedirectory.services.getIamPolicy",
      "servicedirectory.services.list",
      "servicedirectory.services.resolve"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/servicehealth.viewer",
    "title": "Personalized Service Health Viewer",
    "description": "Readonly access to Personalized Service Health resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "servicehealth.events.get",
      "servicehealth.events.list",
      "servicehealth.locations.get",
      "servicehealth.locations.list",
      "servicehealth.organizationEvents.get",
      "servicehealth.organizationEvents.list",
      "servicehealth.organizationImpacts.get",
      "servicehealth.organizationImpacts.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/servicemanagement.admin",
    "title": "Service Management Administrator",
    "description": "Full control of Google Service Management resources.",
    "includedPermissions": [
      "monitoring.timeSeries.list",
      "resourcemanager.folders.get",
      "resourcemanager.folders.list",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceconsumermanagement.consumers.get",
      "serviceconsumermanagement.quota.get",
      "serviceconsumermanagement.quota.update",
      "serviceconsumermanagement.tenancyu.addResource",
      "serviceconsumermanagement.tenancyu.create",
      "serviceconsumermanagement.tenancyu.delete",
      "serviceconsumermanagement.tenancyu.list",
      "serviceconsumermanagement.tenancyu.removeResource",
      "servicemanagement.services.bind",
      "servicemanagement.services.check",
      "servicemanagement.services.create",
      "servicemanagement.services.delete",
      "servicemanagement.services.get",
      "servicemanagement.services.getIamPolicy",
      "servicemanagement.services.list",
      "servicemanagement.services.quota",
      "servicemanagement.services.report",
      "servicemanagement.services.setIamPolicy",
      "servicemanagement.services.update",
      "serviceusage.quotas.get",
      "serviceusage.services.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/servicemanagement.configEditor",
    "title": "Service Config Editor",
    "description": "Access to update the service config and create rollouts.",
    "includedPermissions": [
      "servicemanagement.services.get",
      "servicemanagement.services.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/servicemanagement.quotaAdmin",
    "title": "Quota Administrator",
    "description": "Access to administer service quotas.",
    "includedPermissions": [
      "monitoring.alertPolicies.create",
      "monitoring.alertPolicies.delete",
      "monitoring.alertPolicies.get",
      "monitoring.alertPolicies.list",
      "monitoring.alertPolicies.update",
      "monitoring.timeSeries.list",
      "resourcemanager.organizations.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.quotas.get",
      "serviceusage.quotas.update",
      "serviceusage.services.disable",
      "serviceusage.services.enable",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/servicemanagement.quotaViewer",
    "title": "Quota Viewer",
    "description": "Access to view service quotas.",
    "includedPermissions": [
      "monitoring.timeSeries.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/servicemanagement.reporter",
    "title": "Service Reporter",
    "description": "Can report usage of a service during runtime.",
    "includedPermissions": [
      "servicemanagement.services.report"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/servicemanagement.serviceConsumer",
    "title": "Service Consumer",
    "description": "Can enable the service.",
    "includedPermissions": [
      "servicemanagement.services.bind"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/servicemanagement.serviceController",
    "title": "Service Controller",
    "description": "Can check preconditions and report usage of a service during runtime.",
    "includedPermissions": [
      "servicemanagement.services.check",
      "servicemanagement.services.get",
      "servicemanagement.services.quota",
      "servicemanagement.services.report"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/servicenetworking.networksAdmin",
    "title": "Service Networking Admin",
    "description": "Full control of service networking with projects.",
    "includedPermissions": [
      "servicenetworking.operations.cancel",
      "servicenetworking.operations.delete",
      "servicenetworking.operations.get",
      "servicenetworking.operations.list",
      "servicenetworking.services.addDnsRecordSet",
      "servicenetworking.services.addDnsZone",
      "servicenetworking.services.addPeering",
      "servicenetworking.services.addSubnetwork",
      "servicenetworking.services.createPeeredDnsDomain",
      "servicenetworking.services.deleteConnection",
      "servicenetworking.services.deletePeeredDnsDomain",
      "servicenetworking.services.disableVpcServiceControls",
      "servicenetworking.services.enableVpcServiceControls",
      "servicenetworking.services.get",
      "servicenetworking.services.getConsumerConfig",
      "servicenetworking.services.listPeeredDnsDomains",
      "servicenetworking.services.removeDnsRecordSet",
      "servicenetworking.services.removeDnsZone",
      "servicenetworking.services.updateConsumerConfig",
      "servicenetworking.services.updateDnsRecordSet",
      "servicenetworking.services.use"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/servicenetworking.serviceAgent",
    "title": "Service Networking Service Agent",
    "description": "Gives permission to manage network configuration, such as establishing network peering, necessary for service producers",
    "includedPermissions": [
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalOperations.get",
      "compute.networks.addPeering",
      "compute.networks.create",
      "compute.networks.delete",
      "compute.networks.get",
      "compute.networks.list",
      "compute.networks.listPeeringRoutes",
      "compute.networks.removePeering",
      "compute.networks.update",
      "compute.networks.updatePeering",
      "compute.networks.updatePolicy",
      "compute.projects.get",
      "compute.regionOperations.get",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routes.list",
      "compute.subnetworks.create",
      "compute.subnetworks.delete",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "dns.changes.create",
      "dns.changes.get",
      "dns.changes.list",
      "dns.dnsKeys.get",
      "dns.dnsKeys.list",
      "dns.gkeClusters.bindDNSResponsePolicy",
      "dns.gkeClusters.bindPrivateDNSZone",
      "dns.managedZoneOperations.get",
      "dns.managedZoneOperations.list",
      "dns.managedZones.create",
      "dns.managedZones.delete",
      "dns.managedZones.get",
      "dns.managedZones.getIamPolicy",
      "dns.managedZones.list",
      "dns.managedZones.update",
      "dns.networks.bindDNSResponsePolicy",
      "dns.networks.bindPrivateDNSPolicy",
      "dns.networks.bindPrivateDNSZone",
      "dns.networks.targetWithPeeringZone",
      "dns.networks.useHealthSignals",
      "dns.policies.create",
      "dns.policies.delete",
      "dns.policies.get",
      "dns.policies.getIamPolicy",
      "dns.policies.list",
      "dns.policies.update",
      "dns.projects.get",
      "dns.resourceRecordSets.create",
      "dns.resourceRecordSets.delete",
      "dns.resourceRecordSets.get",
      "dns.resourceRecordSets.list",
      "dns.resourceRecordSets.update",
      "dns.responsePolicies.create",
      "dns.responsePolicies.delete",
      "dns.responsePolicies.get",
      "dns.responsePolicies.list",
      "dns.responsePolicies.update",
      "dns.responsePolicyRules.create",
      "dns.responsePolicyRules.delete",
      "dns.responsePolicyRules.get",
      "dns.responsePolicyRules.list",
      "dns.responsePolicyRules.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/servicesecurityinsights.securityInsightsViewer",
    "title": "Security Insights Viewer",
    "description": "Read-only access to Security Insights resources",
    "includedPermissions": [
      "servicesecurityinsights.clusterSecurityInfo.get",
      "servicesecurityinsights.clusterSecurityInfo.list",
      "servicesecurityinsights.policies.get",
      "servicesecurityinsights.projectStates.get",
      "servicesecurityinsights.securityInfo.list",
      "servicesecurityinsights.securityViews.get",
      "servicesecurityinsights.workloadPolicies.list",
      "servicesecurityinsights.workloadSecurityInfo.get"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/serviceusage.apiKeysAdmin",
    "title": "API Keys Admin",
    "description": "Ability to create, delete, update, get and list API keys for a project.",
    "includedPermissions": [
      "apikeys.keys.create",
      "apikeys.keys.delete",
      "apikeys.keys.get",
      "apikeys.keys.getKeyString",
      "apikeys.keys.list",
      "apikeys.keys.lookup",
      "apikeys.keys.undelete",
      "apikeys.keys.update",
      "serviceusage.apiKeys.regenerate",
      "serviceusage.apiKeys.revert",
      "serviceusage.operations.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/serviceusage.apiKeysViewer",
    "title": "API Keys Viewer",
    "description": "Ability to get and list API keys for a project.",
    "includedPermissions": [
      "apikeys.keys.get",
      "apikeys.keys.getKeyString",
      "apikeys.keys.list",
      "apikeys.keys.lookup"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/serviceusage.serviceUsageAdmin",
    "title": "Service Usage Admin",
    "description": "Ability to enable, disable, and inspect service states, inspect operations, and consume quota and billing for a consumer project.",
    "includedPermissions": [
      "monitoring.timeSeries.list",
      "serviceusage.operations.cancel",
      "serviceusage.operations.delete",
      "serviceusage.operations.get",
      "serviceusage.operations.list",
      "serviceusage.quotas.get",
      "serviceusage.quotas.update",
      "serviceusage.services.disable",
      "serviceusage.services.enable",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "serviceusage.services.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/serviceusage.serviceUsageConsumer",
    "title": "Service Usage Consumer",
    "description": "Ability to inspect service states and operations, and consume quota and billing for a consumer project.",
    "includedPermissions": [
      "monitoring.timeSeries.list",
      "serviceusage.operations.get",
      "serviceusage.operations.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "serviceusage.services.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/serviceusage.serviceUsageViewer",
    "title": "Service Usage Viewer",
    "description": "Ability to inspect service states and operations for a consumer project.",
    "includedPermissions": [
      "monitoring.timeSeries.list",
      "serviceusage.operations.get",
      "serviceusage.operations.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/source.admin",
    "title": "Source Repository Administrator",
    "description": "Admin access to repositories",
    "includedPermissions": [
      "source.repos.create",
      "source.repos.delete",
      "source.repos.get",
      "source.repos.getIamPolicy",
      "source.repos.getProjectConfig",
      "source.repos.list",
      "source.repos.setIamPolicy",
      "source.repos.update",
      "source.repos.updateProjectConfig",
      "source.repos.updateRepoConfig"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/source.reader",
    "title": "Source Repository Reader",
    "description": "Read access to repositories",
    "includedPermissions": [
      "source.repos.get",
      "source.repos.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/source.writer",
    "title": "Source Repository Writer",
    "description": "Read / Write access to repositories",
    "includedPermissions": [
      "source.repos.get",
      "source.repos.list",
      "source.repos.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/sourcerepo.serviceAgent",
    "title": "Cloud Source Repositories Service Agent",
    "description": "Allow Cloud Source Repositories to integrate with other Cloud services.",
    "includedPermissions": [
      "iam.serviceAccounts.getAccessToken",
      "pubsub.topics.publish"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/spanner.admin",
    "title": "Cloud Spanner Admin",
    "description": "Full control of Cloud Spanner resources.",
    "includedPermissions": [
      "monitoring.timeSeries.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "spanner.backupOperations.cancel",
      "spanner.backupOperations.get",
      "spanner.backupOperations.list",
      "spanner.backups.copy",
      "spanner.backups.create",
      "spanner.backups.delete",
      "spanner.backups.get",
      "spanner.backups.getIamPolicy",
      "spanner.backups.list",
      "spanner.backups.restoreDatabase",
      "spanner.backups.setIamPolicy",
      "spanner.backups.update",
      "spanner.databaseOperations.cancel",
      "spanner.databaseOperations.delete",
      "spanner.databaseOperations.get",
      "spanner.databaseOperations.list",
      "spanner.databaseRoles.list",
      "spanner.databaseRoles.use",
      "spanner.databases.beginOrRollbackReadWriteTransaction",
      "spanner.databases.beginPartitionedDmlTransaction",
      "spanner.databases.beginReadOnlyTransaction",
      "spanner.databases.create",
      "spanner.databases.createBackup",
      "spanner.databases.drop",
      "spanner.databases.get",
      "spanner.databases.getDdl",
      "spanner.databases.getIamPolicy",
      "spanner.databases.list",
      "spanner.databases.partitionQuery",
      "spanner.databases.partitionRead",
      "spanner.databases.read",
      "spanner.databases.select",
      "spanner.databases.setIamPolicy",
      "spanner.databases.update",
      "spanner.databases.updateDdl",
      "spanner.databases.updateTag",
      "spanner.databases.useDataBoost",
      "spanner.databases.useRoleBasedAccess",
      "spanner.databases.write",
      "spanner.instanceConfigOperations.cancel",
      "spanner.instanceConfigOperations.delete",
      "spanner.instanceConfigOperations.get",
      "spanner.instanceConfigOperations.list",
      "spanner.instanceConfigs.create",
      "spanner.instanceConfigs.delete",
      "spanner.instanceConfigs.get",
      "spanner.instanceConfigs.list",
      "spanner.instanceConfigs.update",
      "spanner.instanceOperations.cancel",
      "spanner.instanceOperations.delete",
      "spanner.instanceOperations.get",
      "spanner.instanceOperations.list",
      "spanner.instances.create",
      "spanner.instances.createTagBinding",
      "spanner.instances.delete",
      "spanner.instances.deleteTagBinding",
      "spanner.instances.get",
      "spanner.instances.getIamPolicy",
      "spanner.instances.list",
      "spanner.instances.listEffectiveTags",
      "spanner.instances.listTagBindings",
      "spanner.instances.setIamPolicy",
      "spanner.instances.update",
      "spanner.instances.updateTag",
      "spanner.sessions.create",
      "spanner.sessions.delete",
      "spanner.sessions.get",
      "spanner.sessions.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/spanner.backupAdmin",
    "title": "Cloud Spanner Backup Admin",
    "description": "Administrator role to manage Cloud Spanner backups. Does not include permissions to restore from Cloud Spanner backups.",
    "includedPermissions": [
      "monitoring.timeSeries.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "spanner.backupOperations.cancel",
      "spanner.backupOperations.get",
      "spanner.backupOperations.list",
      "spanner.backups.copy",
      "spanner.backups.create",
      "spanner.backups.delete",
      "spanner.backups.get",
      "spanner.backups.getIamPolicy",
      "spanner.backups.list",
      "spanner.backups.setIamPolicy",
      "spanner.backups.update",
      "spanner.databases.createBackup",
      "spanner.databases.get",
      "spanner.databases.list",
      "spanner.instances.createTagBinding",
      "spanner.instances.deleteTagBinding",
      "spanner.instances.get",
      "spanner.instances.list",
      "spanner.instances.listEffectiveTags",
      "spanner.instances.listTagBindings"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/spanner.backupWriter",
    "title": "Cloud Spanner Backup Writer",
    "description": "Role with limited permissions to create and manage Cloud Spanner backups. Does not have permission to modify backups.",
    "includedPermissions": [
      "spanner.backupOperations.get",
      "spanner.backupOperations.list",
      "spanner.backups.copy",
      "spanner.backups.create",
      "spanner.backups.get",
      "spanner.backups.list",
      "spanner.databases.createBackup",
      "spanner.databases.get",
      "spanner.databases.list",
      "spanner.instances.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/spanner.databaseAdmin",
    "title": "Cloud Spanner Database Admin",
    "description": "Full control of Cloud Spanner databases.",
    "includedPermissions": [
      "monitoring.timeSeries.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "spanner.databaseOperations.cancel",
      "spanner.databaseOperations.delete",
      "spanner.databaseOperations.get",
      "spanner.databaseOperations.list",
      "spanner.databaseRoles.list",
      "spanner.databaseRoles.use",
      "spanner.databases.beginOrRollbackReadWriteTransaction",
      "spanner.databases.beginPartitionedDmlTransaction",
      "spanner.databases.beginReadOnlyTransaction",
      "spanner.databases.create",
      "spanner.databases.drop",
      "spanner.databases.get",
      "spanner.databases.getDdl",
      "spanner.databases.getIamPolicy",
      "spanner.databases.list",
      "spanner.databases.partitionQuery",
      "spanner.databases.partitionRead",
      "spanner.databases.read",
      "spanner.databases.select",
      "spanner.databases.setIamPolicy",
      "spanner.databases.update",
      "spanner.databases.updateDdl",
      "spanner.databases.updateTag",
      "spanner.databases.useDataBoost",
      "spanner.databases.useRoleBasedAccess",
      "spanner.databases.write",
      "spanner.instances.createTagBinding",
      "spanner.instances.deleteTagBinding",
      "spanner.instances.get",
      "spanner.instances.getIamPolicy",
      "spanner.instances.list",
      "spanner.instances.listEffectiveTags",
      "spanner.instances.listTagBindings",
      "spanner.sessions.create",
      "spanner.sessions.delete",
      "spanner.sessions.get",
      "spanner.sessions.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/spanner.databaseReader",
    "title": "Cloud Spanner Database Reader",
    "description": "Access to read and/or query a Cloud Spanner database.",
    "includedPermissions": [
      "spanner.databases.beginReadOnlyTransaction",
      "spanner.databases.getDdl",
      "spanner.databases.partitionQuery",
      "spanner.databases.partitionRead",
      "spanner.databases.read",
      "spanner.databases.select",
      "spanner.instances.get",
      "spanner.sessions.create",
      "spanner.sessions.delete",
      "spanner.sessions.get",
      "spanner.sessions.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/spanner.databaseRoleUser",
    "title": "Cloud Spanner Database Role User",
    "description": "In conjunction with the IAM role Cloud Spanner Fine-grained Access User, grants permissions to individual Spanner database roles. Add a condition for each desired Spanner database role that includes the resource type of `spanner.googleapis.com/DatabaseRole` and the resource name ending with `/<your Spanner database role>`.",
    "includedPermissions": [
      "spanner.databaseRoles.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/spanner.databaseUser",
    "title": "Cloud Spanner Database User",
    "description": "Access to read, query, write and view and change the schema of Cloud Spanner databases",
    "includedPermissions": [
      "spanner.databaseOperations.cancel",
      "spanner.databaseOperations.delete",
      "spanner.databaseOperations.get",
      "spanner.databaseOperations.list",
      "spanner.databases.beginOrRollbackReadWriteTransaction",
      "spanner.databases.beginPartitionedDmlTransaction",
      "spanner.databases.beginReadOnlyTransaction",
      "spanner.databases.getDdl",
      "spanner.databases.partitionQuery",
      "spanner.databases.partitionRead",
      "spanner.databases.read",
      "spanner.databases.select",
      "spanner.databases.updateDdl",
      "spanner.databases.updateTag",
      "spanner.databases.write",
      "spanner.instances.get",
      "spanner.sessions.create",
      "spanner.sessions.delete",
      "spanner.sessions.get",
      "spanner.sessions.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/spanner.fineGrainedAccessUser",
    "title": "Cloud Spanner Fine-grained Access User",
    "description": "Grants permissions to use Spanner's fine-grained access control framework. To grant access to specific database roles, also add the Cloud Spanner Database Role User IAM role and its necessary conditions.",
    "includedPermissions": [
      "spanner.databaseRoles.list",
      "spanner.databases.useRoleBasedAccess"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/spanner.restoreAdmin",
    "title": "Cloud Spanner Restore Admin",
    "description": "Administrator role to restore Cloud Spanner databases from Cloud Spanner backups.",
    "includedPermissions": [
      "monitoring.timeSeries.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "spanner.backups.get",
      "spanner.backups.list",
      "spanner.backups.restoreDatabase",
      "spanner.databaseOperations.cancel",
      "spanner.databaseOperations.get",
      "spanner.databaseOperations.list",
      "spanner.databases.create",
      "spanner.databases.get",
      "spanner.databases.list",
      "spanner.instances.createTagBinding",
      "spanner.instances.deleteTagBinding",
      "spanner.instances.get",
      "spanner.instances.list",
      "spanner.instances.listEffectiveTags",
      "spanner.instances.listTagBindings"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/spanner.serviceAgent",
    "title": "Cloud Spanner API Service Agent",
    "description": "Cloud Spanner API Service Agent",
    "includedPermissions": [
      "aiplatform.endpoints.get",
      "aiplatform.endpoints.list",
      "aiplatform.endpoints.predict",
      "aiplatform.models.get",
      "aiplatform.models.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/spanner.viewer",
    "title": "Cloud Spanner Viewer",
    "description": "Viewer access to Cloud Spanner resources.",
    "includedPermissions": [
      "monitoring.timeSeries.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "spanner.databases.list",
      "spanner.instanceConfigs.get",
      "spanner.instanceConfigs.list",
      "spanner.instances.get",
      "spanner.instances.list",
      "spanner.instances.listEffectiveTags",
      "spanner.instances.listTagBindings"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/speakerid.admin",
    "title": "Speaker ID Admin",
    "description": "Grants full access to all Speaker ID resources, including project settings.",
    "includedPermissions": [
      "speakerid.phrases.create",
      "speakerid.phrases.delete",
      "speakerid.phrases.get",
      "speakerid.phrases.list",
      "speakerid.settings.get",
      "speakerid.settings.update",
      "speakerid.speakers.create",
      "speakerid.speakers.delete",
      "speakerid.speakers.get",
      "speakerid.speakers.list",
      "speakerid.speakers.verify"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/speakerid.editor",
    "title": "Speaker ID Editor",
    "description": "Grants access to read and write all Speaker ID resources.",
    "includedPermissions": [
      "speakerid.phrases.create",
      "speakerid.phrases.delete",
      "speakerid.phrases.get",
      "speakerid.phrases.list",
      "speakerid.speakers.create",
      "speakerid.speakers.delete",
      "speakerid.speakers.get",
      "speakerid.speakers.list",
      "speakerid.speakers.verify"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/speakerid.verifier",
    "title": "Speaker ID Verifier",
    "description": "Grants read access to all Speaker ID resources, and allows verification.",
    "includedPermissions": [
      "speakerid.phrases.get",
      "speakerid.phrases.list",
      "speakerid.speakers.get",
      "speakerid.speakers.list",
      "speakerid.speakers.verify"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/speakerid.viewer",
    "title": "Speaker ID Viewer",
    "description": "Grants read access to all Speaker ID resources.",
    "includedPermissions": [
      "speakerid.phrases.get",
      "speakerid.phrases.list",
      "speakerid.speakers.get",
      "speakerid.speakers.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/speech.admin",
    "title": "Cloud Speech Administrator",
    "description": "Grants full access to all resources in Speech-to-text",
    "includedPermissions": [
      "speech.adaptations.execute",
      "speech.config.get",
      "speech.config.update",
      "speech.customClasses.create",
      "speech.customClasses.delete",
      "speech.customClasses.get",
      "speech.customClasses.list",
      "speech.customClasses.undelete",
      "speech.customClasses.update",
      "speech.locations.get",
      "speech.locations.list",
      "speech.operations.cancel",
      "speech.operations.delete",
      "speech.operations.get",
      "speech.operations.list",
      "speech.operations.wait",
      "speech.phraseSets.create",
      "speech.phraseSets.delete",
      "speech.phraseSets.get",
      "speech.phraseSets.list",
      "speech.phraseSets.undelete",
      "speech.phraseSets.update",
      "speech.recognizers.create",
      "speech.recognizers.delete",
      "speech.recognizers.get",
      "speech.recognizers.list",
      "speech.recognizers.recognize",
      "speech.recognizers.undelete",
      "speech.recognizers.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/speech.client",
    "title": "Cloud Speech Client",
    "description": "Grants access to the recognition APIs.",
    "includedPermissions": [
      "speech.adaptations.execute",
      "speech.customClasses.get",
      "speech.customClasses.list",
      "speech.locations.get",
      "speech.locations.list",
      "speech.operations.get",
      "speech.operations.list",
      "speech.operations.wait",
      "speech.phraseSets.get",
      "speech.phraseSets.list",
      "speech.recognizers.get",
      "speech.recognizers.list",
      "speech.recognizers.recognize"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/speech.editor",
    "title": "Cloud Speech Editor",
    "description": "Grants access to edit resources in Speech-to-text",
    "includedPermissions": [
      "speech.adaptations.execute",
      "speech.customClasses.create",
      "speech.customClasses.delete",
      "speech.customClasses.get",
      "speech.customClasses.list",
      "speech.customClasses.undelete",
      "speech.customClasses.update",
      "speech.locations.get",
      "speech.locations.list",
      "speech.operations.cancel",
      "speech.operations.delete",
      "speech.operations.get",
      "speech.operations.list",
      "speech.operations.wait",
      "speech.phraseSets.create",
      "speech.phraseSets.delete",
      "speech.phraseSets.get",
      "speech.phraseSets.list",
      "speech.phraseSets.undelete",
      "speech.phraseSets.update",
      "speech.recognizers.create",
      "speech.recognizers.delete",
      "speech.recognizers.get",
      "speech.recognizers.list",
      "speech.recognizers.recognize",
      "speech.recognizers.undelete",
      "speech.recognizers.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/speech.serviceAgent",
    "title": "Cloud Speech-to-Text Service Agent",
    "description": "Gives Speech-to-Text service account access to GCS resources.",
    "includedPermissions": [
      "storage.buckets.get",
      "storage.buckets.list",
      "storage.objects.create",
      "storage.objects.get",
      "storage.objects.list",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/stackdriver.accounts.editor",
    "title": "Stackdriver Accounts Editor",
    "description": "Read/write access to manage Stackdriver account structure.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "serviceusage.services.enable",
      "stackdriver.projects.edit",
      "stackdriver.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/stackdriver.accounts.viewer",
    "title": "Stackdriver Accounts Viewer",
    "description": "Read-only access to get and list information about Stackdriver account structure.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "stackdriver.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/stackdriver.resourceMetadata.writer",
    "title": "Stackdriver Resource Metadata Writer",
    "description": "Write-only access to resource metadata.  This provides exactly the permissions needed by the Stackdriver metadata agent and other systems that send metadata.",
    "includedPermissions": [
      "stackdriver.resourceMetadata.write"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/storage.admin",
    "title": "Storage Admin",
    "description": "Grants full control of buckets and objects.",
    "includedPermissions": [
      "firebase.projects.get",
      "orgpolicy.policy.get",
      "recommender.iamPolicyInsights.get",
      "recommender.iamPolicyInsights.list",
      "recommender.iamPolicyInsights.update",
      "recommender.iamPolicyRecommendations.get",
      "recommender.iamPolicyRecommendations.list",
      "recommender.iamPolicyRecommendations.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storage.buckets.create",
      "storage.buckets.createTagBinding",
      "storage.buckets.delete",
      "storage.buckets.deleteTagBinding",
      "storage.buckets.get",
      "storage.buckets.getIamPolicy",
      "storage.buckets.getObjectInsights",
      "storage.buckets.list",
      "storage.buckets.listEffectiveTags",
      "storage.buckets.listTagBindings",
      "storage.buckets.setIamPolicy",
      "storage.buckets.update",
      "storage.multipartUploads.abort",
      "storage.multipartUploads.create",
      "storage.multipartUploads.list",
      "storage.multipartUploads.listParts",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.getIamPolicy",
      "storage.objects.list",
      "storage.objects.setIamPolicy",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/storage.hmacKeyAdmin",
    "title": "Storage HMAC Key Admin",
    "description": "Grants full control over HMAC keys in a project.",
    "includedPermissions": [
      "firebase.projects.get",
      "orgpolicy.policy.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storage.hmacKeys.create",
      "storage.hmacKeys.delete",
      "storage.hmacKeys.get",
      "storage.hmacKeys.list",
      "storage.hmacKeys.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/storage.insightsCollectorService",
    "title": "Storage Insights Collector Service",
    "description": "Grants read access to object metadata in inventory reports.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storage.buckets.get",
      "storage.buckets.getObjectInsights"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/storage.legacyBucketOwner",
    "title": "Storage Legacy Bucket Owner",
    "description": "Grants permission to create, replace, and delete objects; list objects in a bucket; create, delete, and list tag bindings; read object metadata when listing (excluding IAM policies); and read and edit bucket metadata, including IAM policies.",
    "includedPermissions": [
      "storage.buckets.createTagBinding",
      "storage.buckets.deleteTagBinding",
      "storage.buckets.get",
      "storage.buckets.getIamPolicy",
      "storage.buckets.listEffectiveTags",
      "storage.buckets.listTagBindings",
      "storage.buckets.setIamPolicy",
      "storage.buckets.update",
      "storage.multipartUploads.abort",
      "storage.multipartUploads.create",
      "storage.multipartUploads.list",
      "storage.multipartUploads.listParts",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/storage.legacyBucketReader",
    "title": "Storage Legacy Bucket Reader",
    "description": "Grants permission to list a bucket's contents and read bucket metadata, excluding IAM policies. Also grants permission to read object metadata when listing objects (excluding IAM policies).",
    "includedPermissions": [
      "storage.buckets.get",
      "storage.multipartUploads.list",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/storage.legacyBucketWriter",
    "title": "Storage Legacy Bucket Writer",
    "description": "Grants permission to create, replace, and delete objects; list objects in a bucket; read object metadata when listing (excluding IAM policies); and read bucket metadata, excluding IAM policies.",
    "includedPermissions": [
      "storage.buckets.get",
      "storage.multipartUploads.abort",
      "storage.multipartUploads.create",
      "storage.multipartUploads.list",
      "storage.multipartUploads.listParts",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/storage.legacyObjectOwner",
    "title": "Storage Legacy Object Owner",
    "description": "Grants permission to view and edit objects and their metadata, including ACLs.",
    "includedPermissions": [
      "storage.objects.get",
      "storage.objects.getIamPolicy",
      "storage.objects.setIamPolicy",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/storage.legacyObjectReader",
    "title": "Storage Legacy Object Reader",
    "description": "Grants permission to view objects and their metadata, excluding ACLs.",
    "includedPermissions": [
      "storage.objects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/storage.objectAdmin",
    "title": "Storage Object Admin",
    "description": "Grants full control over objects, including listing, creating, viewing, and deleting objects.",
    "includedPermissions": [
      "orgpolicy.policy.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storage.multipartUploads.abort",
      "storage.multipartUploads.create",
      "storage.multipartUploads.list",
      "storage.multipartUploads.listParts",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.getIamPolicy",
      "storage.objects.list",
      "storage.objects.setIamPolicy",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/storage.objectCreator",
    "title": "Storage Object Creator",
    "description": "Allows users to create objects. Does not give permission to view, delete, or replace objects.",
    "includedPermissions": [
      "orgpolicy.policy.get",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storage.multipartUploads.abort",
      "storage.multipartUploads.create",
      "storage.multipartUploads.listParts",
      "storage.objects.create"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/storage.objectViewer",
    "title": "Storage Object Viewer",
    "description": "Grants access to view objects and their metadata, excluding ACLs. Can also list the objects in a bucket.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storage.objects.get",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/storageinsights.admin",
    "title": "Storage Insights Admin",
    "description": "Full access to Storage Insights resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storageinsights.locations.get",
      "storageinsights.locations.list",
      "storageinsights.operations.cancel",
      "storageinsights.operations.delete",
      "storageinsights.operations.get",
      "storageinsights.operations.list",
      "storageinsights.reportConfigs.create",
      "storageinsights.reportConfigs.delete",
      "storageinsights.reportConfigs.get",
      "storageinsights.reportConfigs.list",
      "storageinsights.reportConfigs.update",
      "storageinsights.reportDetails.get",
      "storageinsights.reportDetails.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/storageinsights.serviceAgent",
    "title": "StorageInsights Service Agent",
    "description": "Permissions for Insights to write reports into customer project",
    "includedPermissions": [
      "storageinsights.reportDetails.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/storageinsights.viewer",
    "title": "Storage Insights Viewer",
    "description": "Readonly access to Storage Insights resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storageinsights.locations.get",
      "storageinsights.locations.list",
      "storageinsights.operations.get",
      "storageinsights.operations.list",
      "storageinsights.reportConfigs.get",
      "storageinsights.reportConfigs.list",
      "storageinsights.reportDetails.get",
      "storageinsights.reportDetails.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/storagetransfer.admin",
    "title": "Storage Transfer Admin",
    "description": "Create, update and manage transfer jobs and operations.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storagetransfer.agentpools.create",
      "storagetransfer.agentpools.delete",
      "storagetransfer.agentpools.get",
      "storagetransfer.agentpools.list",
      "storagetransfer.agentpools.report",
      "storagetransfer.agentpools.update",
      "storagetransfer.jobs.create",
      "storagetransfer.jobs.delete",
      "storagetransfer.jobs.get",
      "storagetransfer.jobs.list",
      "storagetransfer.jobs.run",
      "storagetransfer.jobs.update",
      "storagetransfer.operations.assign",
      "storagetransfer.operations.cancel",
      "storagetransfer.operations.get",
      "storagetransfer.operations.list",
      "storagetransfer.operations.pause",
      "storagetransfer.operations.report",
      "storagetransfer.operations.resume",
      "storagetransfer.projects.getServiceAccount"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/storagetransfer.serviceAgent",
    "title": "Storage Transfer Service Agent",
    "description": "Grants Storage Transfer Service Agent permissions required to run transfers",
    "includedPermissions": [
      "pubsub.subscriptions.consume",
      "pubsub.subscriptions.create",
      "pubsub.subscriptions.delete",
      "pubsub.subscriptions.get",
      "pubsub.subscriptions.update",
      "pubsub.topics.attachSubscription",
      "pubsub.topics.create",
      "pubsub.topics.delete",
      "pubsub.topics.get",
      "pubsub.topics.publish",
      "pubsub.topics.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/storagetransfer.transferAgent",
    "title": "Storage Transfer Agent",
    "description": "Perform transfers from an agent.",
    "includedPermissions": [
      "monitoring.timeSeries.create",
      "pubsub.subscriptions.consume",
      "pubsub.subscriptions.create",
      "pubsub.subscriptions.delete",
      "pubsub.subscriptions.get",
      "pubsub.topics.attachSubscription",
      "pubsub.topics.create",
      "pubsub.topics.get",
      "pubsub.topics.list",
      "pubsub.topics.publish",
      "storagetransfer.agentpools.report",
      "storagetransfer.operations.assign",
      "storagetransfer.operations.get",
      "storagetransfer.operations.report"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/storagetransfer.user",
    "title": "Storage Transfer User",
    "description": "Create and update storage transfer jobs and operations.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storagetransfer.agentpools.create",
      "storagetransfer.agentpools.get",
      "storagetransfer.agentpools.list",
      "storagetransfer.agentpools.report",
      "storagetransfer.agentpools.update",
      "storagetransfer.jobs.create",
      "storagetransfer.jobs.get",
      "storagetransfer.jobs.list",
      "storagetransfer.jobs.run",
      "storagetransfer.jobs.update",
      "storagetransfer.operations.assign",
      "storagetransfer.operations.cancel",
      "storagetransfer.operations.get",
      "storagetransfer.operations.list",
      "storagetransfer.operations.pause",
      "storagetransfer.operations.report",
      "storagetransfer.operations.resume",
      "storagetransfer.projects.getServiceAccount"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/storagetransfer.viewer",
    "title": "Storage Transfer Viewer",
    "description": "Read access to storage transfer jobs and operations.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storagetransfer.agentpools.get",
      "storagetransfer.agentpools.list",
      "storagetransfer.jobs.get",
      "storagetransfer.jobs.list",
      "storagetransfer.operations.get",
      "storagetransfer.operations.list",
      "storagetransfer.projects.getServiceAccount"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/stream.admin",
    "title": "Stream Admin",
    "description": "Full access to Stream all resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "stream.locations.get",
      "stream.locations.list",
      "stream.operations.cancel",
      "stream.operations.delete",
      "stream.operations.get",
      "stream.operations.list",
      "stream.streamContents.build",
      "stream.streamContents.create",
      "stream.streamContents.delete",
      "stream.streamContents.get",
      "stream.streamContents.list",
      "stream.streamContents.update",
      "stream.streamInstances.create",
      "stream.streamInstances.delete",
      "stream.streamInstances.get",
      "stream.streamInstances.list",
      "stream.streamInstances.rollout",
      "stream.streamInstances.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/stream.contentAdmin",
    "title": "Stream Content Admin",
    "description": "Full access to all StreamContent resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "stream.streamContents.build",
      "stream.streamContents.create",
      "stream.streamContents.delete",
      "stream.streamContents.get",
      "stream.streamContents.list",
      "stream.streamContents.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/stream.contentBuilder",
    "title": "Stream Content Builder",
    "description": "Read and build access to StreamContent resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "stream.streamContents.build",
      "stream.streamContents.get",
      "stream.streamContents.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/stream.instanceAdmin",
    "title": "Stream Instance Admin",
    "description": "Full access to all StreamInstance resources and Read access to all StreamContent resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "stream.streamContents.get",
      "stream.streamContents.list",
      "stream.streamInstances.create",
      "stream.streamInstances.delete",
      "stream.streamInstances.get",
      "stream.streamInstances.list",
      "stream.streamInstances.rollout",
      "stream.streamInstances.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/stream.serviceAgent",
    "title": "Stream Service Agent",
    "description": "Gives Immersive Stream for XR access to the required resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storage.buckets.create",
      "storage.buckets.get",
      "storage.objects.create",
      "storage.objects.get",
      "storage.objects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/stream.viewer",
    "title": "Stream Viewer",
    "description": "Read-only access to Stream all resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "stream.locations.get",
      "stream.locations.list",
      "stream.operations.get",
      "stream.operations.list",
      "stream.streamContents.get",
      "stream.streamContents.list",
      "stream.streamInstances.get",
      "stream.streamInstances.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/subscribewithgoogledeveloper.developer",
    "title": "Subscribe with Google Developer",
    "description": "Access DevTools for Subscribe with Google",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "subscribewithgoogledeveloper.tools.get"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/timeseriesinsights.datasetsEditor",
    "title": "Timeseries Insights DataSet Editor",
    "description": "Edit access to DataSets.",
    "includedPermissions": [
      "timeseriesinsights.datasets.create",
      "timeseriesinsights.datasets.delete",
      "timeseriesinsights.datasets.evaluate",
      "timeseriesinsights.datasets.list",
      "timeseriesinsights.datasets.query",
      "timeseriesinsights.datasets.update",
      "timeseriesinsights.locations.get",
      "timeseriesinsights.locations.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/timeseriesinsights.datasetsOwner",
    "title": "Timeseries Insights DataSet Owner",
    "description": "Full access to DataSets.",
    "includedPermissions": [
      "timeseriesinsights.datasets.create",
      "timeseriesinsights.datasets.delete",
      "timeseriesinsights.datasets.evaluate",
      "timeseriesinsights.datasets.list",
      "timeseriesinsights.datasets.query",
      "timeseriesinsights.datasets.update",
      "timeseriesinsights.locations.get",
      "timeseriesinsights.locations.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/timeseriesinsights.datasetsViewer",
    "title": "Timeseries Insights DataSet Viewer",
    "description": "Read-only access (List and Query) to DataSets.",
    "includedPermissions": [
      "timeseriesinsights.datasets.evaluate",
      "timeseriesinsights.datasets.list",
      "timeseriesinsights.datasets.query",
      "timeseriesinsights.locations.get",
      "timeseriesinsights.locations.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/tpu.admin",
    "title": "TPU Admin",
    "description": "Full access to TPU nodes and related resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "tpu.acceleratortypes.get",
      "tpu.acceleratortypes.list",
      "tpu.locations.get",
      "tpu.locations.list",
      "tpu.nodes.create",
      "tpu.nodes.delete",
      "tpu.nodes.get",
      "tpu.nodes.list",
      "tpu.nodes.reimage",
      "tpu.nodes.reset",
      "tpu.nodes.simulateMaintenanceEvent",
      "tpu.nodes.start",
      "tpu.nodes.stop",
      "tpu.nodes.update",
      "tpu.operations.get",
      "tpu.operations.list",
      "tpu.runtimeversions.get",
      "tpu.runtimeversions.list",
      "tpu.tensorflowversions.get",
      "tpu.tensorflowversions.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/tpu.serviceAgent",
    "title": "Cloud TPU API Service Agent",
    "description": "Give Cloud TPUs service account access to managed resources",
    "includedPermissions": [
      "compute.globalOperations.get",
      "compute.networks.addPeering",
      "compute.networks.get",
      "compute.networks.removePeering",
      "compute.networks.update",
      "compute.routes.get",
      "compute.routes.list",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "compute.zones.get",
      "compute.zones.list",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.timeSeries.create",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/tpu.viewer",
    "title": "TPU Viewer",
    "description": "Read-only access to TPU nodes and related resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "tpu.acceleratortypes.get",
      "tpu.acceleratortypes.list",
      "tpu.locations.get",
      "tpu.locations.list",
      "tpu.nodes.get",
      "tpu.nodes.list",
      "tpu.operations.get",
      "tpu.operations.list",
      "tpu.runtimeversions.get",
      "tpu.runtimeversions.list",
      "tpu.tensorflowversions.get",
      "tpu.tensorflowversions.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/tpu.xpnAgent",
    "title": "TPU Shared VPC Agent",
    "description": "Can use shared VPC network (XPN) for the TPU VMs.",
    "includedPermissions": [
      "compute.addresses.createInternal",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.addresses.use",
      "compute.addresses.useInternal",
      "compute.firewalls.create",
      "compute.firewalls.delete",
      "compute.firewalls.get",
      "compute.firewalls.update",
      "compute.globalOperations.get",
      "compute.networks.get",
      "compute.networks.list",
      "compute.networks.updatePolicy",
      "compute.networks.use",
      "compute.networks.useExternalIp",
      "compute.routes.list",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.zoneOperations.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/trafficdirector.client",
    "title": "Traffic Director Client",
    "description": "Traffic Director Client to fetch service configurations and report metrics",
    "includedPermissions": [
      "trafficdirector.networks.getConfigs",
      "trafficdirector.networks.reportMetrics"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/transcoder.admin",
    "title": "Transcoder Admin",
    "description": "Full access to all transcoder resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "transcoder.jobTemplates.create",
      "transcoder.jobTemplates.delete",
      "transcoder.jobTemplates.get",
      "transcoder.jobTemplates.list",
      "transcoder.jobs.create",
      "transcoder.jobs.delete",
      "transcoder.jobs.get",
      "transcoder.jobs.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/transcoder.serviceAgent",
    "title": "Transcoder Service Agent",
    "description": "Downloads and uploads media files from and to customer GCS buckets. Publishes status updates to customer Pub/Sub.",
    "includedPermissions": [
      "pubsub.topics.publish",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "transcoder.jobs.delete"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/transcoder.viewer",
    "title": "Transcoder Viewer",
    "description": "Viewer of all transcoder resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "transcoder.jobTemplates.get",
      "transcoder.jobTemplates.list",
      "transcoder.jobs.get",
      "transcoder.jobs.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/transferappliance.admin",
    "title": "Transfer Appliance Admin",
    "description": "Full access to Transfer Appliance all resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "transferappliance.appliances.create",
      "transferappliance.appliances.delete",
      "transferappliance.appliances.get",
      "transferappliance.appliances.list",
      "transferappliance.appliances.update",
      "transferappliance.credentials.get",
      "transferappliance.locations.get",
      "transferappliance.locations.list",
      "transferappliance.operations.cancel",
      "transferappliance.operations.delete",
      "transferappliance.operations.get",
      "transferappliance.operations.list",
      "transferappliance.orders.create",
      "transferappliance.orders.delete",
      "transferappliance.orders.get",
      "transferappliance.orders.list",
      "transferappliance.orders.update",
      "transferappliance.savedAddresses.create",
      "transferappliance.savedAddresses.delete",
      "transferappliance.savedAddresses.get",
      "transferappliance.savedAddresses.list",
      "transferappliance.savedAddresses.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/transferappliance.viewer",
    "title": "Transfer Appliance Viewer",
    "description": "Read-only access to Transfer Appliance all resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "transferappliance.appliances.get",
      "transferappliance.appliances.list",
      "transferappliance.locations.get",
      "transferappliance.locations.list",
      "transferappliance.operations.get",
      "transferappliance.operations.list",
      "transferappliance.orders.get",
      "transferappliance.orders.list",
      "transferappliance.savedAddresses.get",
      "transferappliance.savedAddresses.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/translationhub.admin",
    "title": "Translation Hub Admin",
    "description": "Admin of Translation Hub",
    "includedPermissions": [
      "automl.models.get",
      "automl.models.list",
      "automl.models.predict",
      "cloudtranslate.customModels.get",
      "cloudtranslate.customModels.list",
      "cloudtranslate.customModels.predict",
      "cloudtranslate.glossaries.create",
      "cloudtranslate.glossaries.delete",
      "cloudtranslate.glossaries.get",
      "cloudtranslate.glossaries.list",
      "cloudtranslate.glossaries.predict",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "translationhub.portals.create",
      "translationhub.portals.delete",
      "translationhub.portals.get",
      "translationhub.portals.list",
      "translationhub.portals.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/translationhub.portalUser",
    "title": "Translation Hub Portal User",
    "description": "Portal user of Translation Hub",
    "includedPermissions": [
      "automl.models.get",
      "automl.models.list",
      "automl.models.predict",
      "cloudtranslate.customModels.get",
      "cloudtranslate.customModels.list",
      "cloudtranslate.customModels.predict",
      "cloudtranslate.glossaries.get",
      "cloudtranslate.glossaries.list",
      "cloudtranslate.glossaries.predict",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "translationhub.portals.get",
      "translationhub.portals.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/videostitcher.admin",
    "title": "Video Stitcher Admin",
    "description": "Full access to all video stitcher resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "videostitcher.cdnKeys.create",
      "videostitcher.cdnKeys.delete",
      "videostitcher.cdnKeys.get",
      "videostitcher.cdnKeys.list",
      "videostitcher.cdnKeys.update",
      "videostitcher.liveAdTagDetails.get",
      "videostitcher.liveAdTagDetails.list",
      "videostitcher.liveSessions.create",
      "videostitcher.liveSessions.get",
      "videostitcher.slates.create",
      "videostitcher.slates.delete",
      "videostitcher.slates.get",
      "videostitcher.slates.list",
      "videostitcher.slates.update",
      "videostitcher.vodAdTagDetails.get",
      "videostitcher.vodAdTagDetails.list",
      "videostitcher.vodSessions.create",
      "videostitcher.vodSessions.get",
      "videostitcher.vodStitchDetails.get",
      "videostitcher.vodStitchDetails.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/videostitcher.user",
    "title": "Video Stitcher User",
    "description": "Full access to video stitcher sessions.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "videostitcher.liveSessions.create",
      "videostitcher.liveSessions.get",
      "videostitcher.vodSessions.create",
      "videostitcher.vodSessions.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/videostitcher.viewer",
    "title": "Video Stitcher Viewer",
    "description": "Read-only access to video stitcher resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "videostitcher.cdnKeys.get",
      "videostitcher.cdnKeys.list",
      "videostitcher.liveAdTagDetails.get",
      "videostitcher.liveAdTagDetails.list",
      "videostitcher.liveSessions.get",
      "videostitcher.slates.get",
      "videostitcher.slates.list",
      "videostitcher.vodAdTagDetails.get",
      "videostitcher.vodAdTagDetails.list",
      "videostitcher.vodSessions.get",
      "videostitcher.vodStitchDetails.get",
      "videostitcher.vodStitchDetails.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/viewer",
    "title": "Viewer",
    "description": "View most Google Cloud resources. See the list of included permissions.",
    "includedPermissions": [
      "accessapproval.requests.get",
      "accessapproval.requests.list",
      "accessapproval.serviceAccounts.get",
      "accessapproval.settings.get",
      "accesscontextmanager.accessLevels.get",
      "accesscontextmanager.accessLevels.list",
      "accesscontextmanager.accessPolicies.get",
      "accesscontextmanager.accessPolicies.getIamPolicy",
      "accesscontextmanager.accessPolicies.list",
      "accesscontextmanager.accessZones.get",
      "accesscontextmanager.accessZones.list",
      "accesscontextmanager.authorizedOrgsDescs.get",
      "accesscontextmanager.authorizedOrgsDescs.list",
      "accesscontextmanager.gcpUserAccessBindings.get",
      "accesscontextmanager.gcpUserAccessBindings.list",
      "accesscontextmanager.policies.get",
      "accesscontextmanager.policies.getIamPolicy",
      "accesscontextmanager.policies.list",
      "accesscontextmanager.servicePerimeters.get",
      "accesscontextmanager.servicePerimeters.list",
      "actions.agent.get",
      "actions.agentVersions.get",
      "actions.agentVersions.list",
      "advisorynotifications.notifications.get",
      "advisorynotifications.notifications.list",
      "aiplatform.annotationSpecs.get",
      "aiplatform.annotationSpecs.list",
      "aiplatform.annotations.get",
      "aiplatform.annotations.list",
      "aiplatform.artifacts.get",
      "aiplatform.artifacts.list",
      "aiplatform.batchPredictionJobs.get",
      "aiplatform.batchPredictionJobs.list",
      "aiplatform.contexts.get",
      "aiplatform.contexts.list",
      "aiplatform.contexts.queryContextLineageSubgraph",
      "aiplatform.customJobs.get",
      "aiplatform.customJobs.list",
      "aiplatform.dataItems.get",
      "aiplatform.dataItems.list",
      "aiplatform.dataLabelingJobs.get",
      "aiplatform.dataLabelingJobs.list",
      "aiplatform.datasets.get",
      "aiplatform.datasets.list",
      "aiplatform.deploymentResourcePools.get",
      "aiplatform.deploymentResourcePools.list",
      "aiplatform.deploymentResourcePools.queryDeployedModels",
      "aiplatform.edgeDeploymentJobs.get",
      "aiplatform.edgeDeploymentJobs.list",
      "aiplatform.edgeDeviceDebugInfo.get",
      "aiplatform.edgeDevices.get",
      "aiplatform.edgeDevices.list",
      "aiplatform.endpoints.explain",
      "aiplatform.endpoints.get",
      "aiplatform.endpoints.list",
      "aiplatform.endpoints.predict",
      "aiplatform.entityTypes.exportFeatureValues",
      "aiplatform.entityTypes.get",
      "aiplatform.entityTypes.getIamPolicy",
      "aiplatform.entityTypes.list",
      "aiplatform.entityTypes.readFeatureValues",
      "aiplatform.entityTypes.streamingReadFeatureValues",
      "aiplatform.executions.get",
      "aiplatform.executions.list",
      "aiplatform.executions.queryExecutionInputsAndOutputs",
      "aiplatform.featureOnlineStores.get",
      "aiplatform.featureOnlineStores.list",
      "aiplatform.featureViewSyncs.get",
      "aiplatform.featureViewSyncs.list",
      "aiplatform.featureViews.fetchFeatureValues",
      "aiplatform.featureViews.get",
      "aiplatform.featureViews.list",
      "aiplatform.featureViews.searchNearestEntities",
      "aiplatform.features.get",
      "aiplatform.features.list",
      "aiplatform.featurestores.batchReadFeatureValues",
      "aiplatform.featurestores.get",
      "aiplatform.featurestores.getIamPolicy",
      "aiplatform.featurestores.list",
      "aiplatform.featurestores.readFeatures",
      "aiplatform.humanInTheLoops.get",
      "aiplatform.humanInTheLoops.list",
      "aiplatform.humanInTheLoops.queryAnnotationStats",
      "aiplatform.hyperparameterTuningJobs.get",
      "aiplatform.hyperparameterTuningJobs.list",
      "aiplatform.indexEndpoints.get",
      "aiplatform.indexEndpoints.list",
      "aiplatform.indexEndpoints.queryVectors",
      "aiplatform.indexes.get",
      "aiplatform.indexes.list",
      "aiplatform.locations.get",
      "aiplatform.locations.list",
      "aiplatform.metadataSchemas.get",
      "aiplatform.metadataSchemas.list",
      "aiplatform.metadataStores.get",
      "aiplatform.metadataStores.list",
      "aiplatform.migratableResources.search",
      "aiplatform.modelDeploymentMonitoringJobs.get",
      "aiplatform.modelDeploymentMonitoringJobs.list",
      "aiplatform.modelDeploymentMonitoringJobs.searchStatsAnomalies",
      "aiplatform.modelEvaluationSlices.get",
      "aiplatform.modelEvaluationSlices.list",
      "aiplatform.modelEvaluations.get",
      "aiplatform.modelEvaluations.list",
      "aiplatform.models.get",
      "aiplatform.models.list",
      "aiplatform.nasJobs.get",
      "aiplatform.nasJobs.list",
      "aiplatform.nasTrialDetails.get",
      "aiplatform.nasTrialDetails.list",
      "aiplatform.operations.list",
      "aiplatform.persistentResources.get",
      "aiplatform.persistentResources.list",
      "aiplatform.pipelineJobs.get",
      "aiplatform.pipelineJobs.list",
      "aiplatform.schedules.get",
      "aiplatform.schedules.list",
      "aiplatform.specialistPools.get",
      "aiplatform.specialistPools.list",
      "aiplatform.studies.get",
      "aiplatform.studies.list",
      "aiplatform.tensorboardExperiments.get",
      "aiplatform.tensorboardExperiments.list",
      "aiplatform.tensorboardRuns.get",
      "aiplatform.tensorboardRuns.list",
      "aiplatform.tensorboardTimeSeries.batchRead",
      "aiplatform.tensorboardTimeSeries.get",
      "aiplatform.tensorboardTimeSeries.list",
      "aiplatform.tensorboardTimeSeries.read",
      "aiplatform.tensorboards.get",
      "aiplatform.tensorboards.list",
      "aiplatform.trainingPipelines.get",
      "aiplatform.trainingPipelines.list",
      "aiplatform.trials.get",
      "aiplatform.trials.list",
      "alloydb.backups.get",
      "alloydb.backups.list",
      "alloydb.clusters.get",
      "alloydb.clusters.list",
      "alloydb.instances.get",
      "alloydb.instances.list",
      "alloydb.locations.get",
      "alloydb.locations.list",
      "alloydb.operations.get",
      "alloydb.operations.list",
      "alloydb.supportedDatabaseFlags.get",
      "alloydb.supportedDatabaseFlags.list",
      "alloydb.users.get",
      "alloydb.users.list",
      "analyticshub.dataExchanges.get",
      "analyticshub.dataExchanges.getIamPolicy",
      "analyticshub.dataExchanges.list",
      "analyticshub.listings.get",
      "analyticshub.listings.getIamPolicy",
      "analyticshub.listings.list",
      "analyticshub.subscriptions.get",
      "analyticshub.subscriptions.list",
      "apigateway.apiconfigs.get",
      "apigateway.apiconfigs.getIamPolicy",
      "apigateway.apiconfigs.list",
      "apigateway.apis.get",
      "apigateway.apis.getIamPolicy",
      "apigateway.apis.list",
      "apigateway.gateways.get",
      "apigateway.gateways.getIamPolicy",
      "apigateway.gateways.list",
      "apigateway.locations.get",
      "apigateway.locations.list",
      "apigateway.operations.get",
      "apigateway.operations.list",
      "apigee.apiproductattributes.get",
      "apigee.apiproductattributes.list",
      "apigee.apiproducts.get",
      "apigee.apiproducts.list",
      "apigee.appgroupapps.get",
      "apigee.appgroupapps.list",
      "apigee.appgroups.get",
      "apigee.appgroups.list",
      "apigee.appkeys.get",
      "apigee.apps.get",
      "apigee.apps.list",
      "apigee.archivedeployments.download",
      "apigee.archivedeployments.get",
      "apigee.archivedeployments.list",
      "apigee.caches.list",
      "apigee.canaryevaluations.get",
      "apigee.datacollectors.get",
      "apigee.datacollectors.list",
      "apigee.datalocation.get",
      "apigee.datastores.get",
      "apigee.datastores.list",
      "apigee.deployments.get",
      "apigee.deployments.list",
      "apigee.developerappattributes.get",
      "apigee.developerappattributes.list",
      "apigee.developerapps.get",
      "apigee.developerapps.list",
      "apigee.developerattributes.get",
      "apigee.developerattributes.list",
      "apigee.developerbalances.get",
      "apigee.developermonetizationconfigs.get",
      "apigee.developers.get",
      "apigee.developers.list",
      "apigee.developersubscriptions.get",
      "apigee.developersubscriptions.list",
      "apigee.endpointattachments.get",
      "apigee.endpointattachments.list",
      "apigee.entitlements.get",
      "apigee.envgroupattachments.get",
      "apigee.envgroupattachments.list",
      "apigee.envgroups.get",
      "apigee.envgroups.list",
      "apigee.environments.get",
      "apigee.environments.getDataLocation",
      "apigee.environments.getIamPolicy",
      "apigee.environments.list",
      "apigee.exports.get",
      "apigee.exports.list",
      "apigee.flowhooks.getSharedFlow",
      "apigee.flowhooks.list",
      "apigee.hostqueries.get",
      "apigee.hostqueries.list",
      "apigee.hostsecurityreports.get",
      "apigee.hostsecurityreports.list",
      "apigee.hoststats.get",
      "apigee.ingressconfigs.get",
      "apigee.instanceattachments.get",
      "apigee.instanceattachments.list",
      "apigee.instances.get",
      "apigee.instances.list",
      "apigee.keystorealiases.generateCSR",
      "apigee.keystorealiases.get",
      "apigee.keystorealiases.list",
      "apigee.keystores.export",
      "apigee.keystores.get",
      "apigee.keystores.list",
      "apigee.keyvaluemapentries.get",
      "apigee.keyvaluemapentries.list",
      "apigee.keyvaluemaps.list",
      "apigee.maskconfigs.get",
      "apigee.nataddresses.get",
      "apigee.nataddresses.list",
      "apigee.operations.get",
      "apigee.operations.list",
      "apigee.organizations.get",
      "apigee.organizations.list",
      "apigee.portals.get",
      "apigee.portals.list",
      "apigee.projectorganizations.get",
      "apigee.projects.previewMigration",
      "apigee.proxies.get",
      "apigee.proxies.list",
      "apigee.proxyrevisions.get",
      "apigee.proxyrevisions.list",
      "apigee.queries.get",
      "apigee.queries.list",
      "apigee.rateplans.get",
      "apigee.rateplans.list",
      "apigee.references.get",
      "apigee.references.list",
      "apigee.reports.get",
      "apigee.reports.list",
      "apigee.resourcefiles.get",
      "apigee.resourcefiles.list",
      "apigee.runtimeconfigs.get",
      "apigee.securityActions.get",
      "apigee.securityActions.list",
      "apigee.securityActionsConfig.get",
      "apigee.securityIncidents.get",
      "apigee.securityIncidents.list",
      "apigee.securityProfileEnvironments.computeScore",
      "apigee.securityProfiles.get",
      "apigee.securityProfiles.list",
      "apigee.securityStats.queryTabularStats",
      "apigee.securityStats.queryTimeSeriesStats",
      "apigee.securityreports.get",
      "apigee.securityreports.list",
      "apigee.setupcontexts.get",
      "apigee.sharedflowrevisions.get",
      "apigee.sharedflowrevisions.list",
      "apigee.sharedflows.get",
      "apigee.sharedflows.list",
      "apigee.targetservers.get",
      "apigee.targetservers.list",
      "apigee.traceconfig.get",
      "apigee.traceconfigoverrides.get",
      "apigee.traceconfigoverrides.list",
      "apigee.tracesessions.get",
      "apigee.tracesessions.list",
      "apigeeconnect.connections.list",
      "apigeeregistry.apis.get",
      "apigeeregistry.apis.getIamPolicy",
      "apigeeregistry.apis.list",
      "apigeeregistry.artifacts.get",
      "apigeeregistry.artifacts.getIamPolicy",
      "apigeeregistry.artifacts.list",
      "apigeeregistry.deployments.get",
      "apigeeregistry.deployments.list",
      "apigeeregistry.instances.get",
      "apigeeregistry.locations.get",
      "apigeeregistry.locations.list",
      "apigeeregistry.operations.get",
      "apigeeregistry.operations.list",
      "apigeeregistry.specs.get",
      "apigeeregistry.specs.getIamPolicy",
      "apigeeregistry.specs.list",
      "apigeeregistry.versions.get",
      "apigeeregistry.versions.getIamPolicy",
      "apigeeregistry.versions.list",
      "apikeys.keys.get",
      "apikeys.keys.getKeyString",
      "apikeys.keys.list",
      "apikeys.keys.lookup",
      "appengine.applications.get",
      "appengine.instances.get",
      "appengine.instances.list",
      "appengine.memcache.get",
      "appengine.memcache.getKey",
      "appengine.memcache.list",
      "appengine.operations.get",
      "appengine.operations.list",
      "appengine.runtimes.actAsAdmin",
      "appengine.services.get",
      "appengine.services.list",
      "appengine.versions.get",
      "appengine.versions.list",
      "applianceactivation.rttCommands.get",
      "applianceactivation.rttCommands.list",
      "artifactregistry.dockerimages.get",
      "artifactregistry.dockerimages.list",
      "artifactregistry.files.get",
      "artifactregistry.files.list",
      "artifactregistry.locations.get",
      "artifactregistry.locations.list",
      "artifactregistry.mavenartifacts.get",
      "artifactregistry.mavenartifacts.list",
      "artifactregistry.npmpackages.get",
      "artifactregistry.npmpackages.list",
      "artifactregistry.packages.get",
      "artifactregistry.packages.list",
      "artifactregistry.projectsettings.get",
      "artifactregistry.pythonpackages.get",
      "artifactregistry.pythonpackages.list",
      "artifactregistry.repositories.downloadArtifacts",
      "artifactregistry.repositories.get",
      "artifactregistry.repositories.getIamPolicy",
      "artifactregistry.repositories.list",
      "artifactregistry.repositories.listEffectiveTags",
      "artifactregistry.repositories.listTagBindings",
      "artifactregistry.repositories.readViaVirtualRepository",
      "artifactregistry.tags.get",
      "artifactregistry.tags.list",
      "artifactregistry.versions.get",
      "artifactregistry.versions.list",
      "assuredworkloads.operations.get",
      "assuredworkloads.operations.list",
      "assuredworkloads.violations.get",
      "assuredworkloads.violations.list",
      "assuredworkloads.workload.get",
      "assuredworkloads.workload.list",
      "automl.annotationSpecs.get",
      "automl.annotationSpecs.list",
      "automl.annotations.list",
      "automl.columnSpecs.get",
      "automl.columnSpecs.list",
      "automl.datasets.export",
      "automl.datasets.get",
      "automl.datasets.getIamPolicy",
      "automl.datasets.list",
      "automl.examples.get",
      "automl.examples.list",
      "automl.files.list",
      "automl.humanAnnotationTasks.get",
      "automl.humanAnnotationTasks.list",
      "automl.locations.get",
      "automl.locations.getIamPolicy",
      "automl.locations.list",
      "automl.modelEvaluations.get",
      "automl.modelEvaluations.list",
      "automl.models.export",
      "automl.models.get",
      "automl.models.getIamPolicy",
      "automl.models.list",
      "automl.models.predict",
      "automl.operations.get",
      "automl.operations.list",
      "automl.tableSpecs.get",
      "automl.tableSpecs.list",
      "automlrecommendations.catalogItems.get",
      "automlrecommendations.catalogItems.list",
      "automlrecommendations.catalogs.getStats",
      "automlrecommendations.catalogs.list",
      "automlrecommendations.eventStores.getStats",
      "automlrecommendations.eventStores.list",
      "automlrecommendations.events.get",
      "automlrecommendations.events.list",
      "automlrecommendations.placements.getStats",
      "automlrecommendations.placements.list",
      "automlrecommendations.recommendations.list",
      "autoscaling.sites.getIamPolicy",
      "autoscaling.sites.readRecommendations",
      "backupdr.locations.get",
      "backupdr.locations.list",
      "backupdr.managementServers.access",
      "backupdr.managementServers.backupAccess",
      "backupdr.managementServers.get",
      "backupdr.managementServers.getIamPolicy",
      "backupdr.managementServers.list",
      "backupdr.managementServers.viewBackupPlans",
      "backupdr.managementServers.viewBackupServers",
      "backupdr.managementServers.viewReports",
      "backupdr.managementServers.viewStorage",
      "backupdr.managementServers.viewSystem",
      "backupdr.managementServers.viewWorkflows",
      "backupdr.operations.get",
      "backupdr.operations.list",
      "baremetalsolution.instancequotas.list",
      "baremetalsolution.instances.get",
      "baremetalsolution.instances.list",
      "baremetalsolution.luns.get",
      "baremetalsolution.luns.list",
      "baremetalsolution.maintenanceevents.get",
      "baremetalsolution.maintenanceevents.list",
      "baremetalsolution.networkquotas.list",
      "baremetalsolution.networks.get",
      "baremetalsolution.networks.list",
      "baremetalsolution.nfsshares.get",
      "baremetalsolution.nfsshares.list",
      "baremetalsolution.operations.get",
      "baremetalsolution.osimages.list",
      "baremetalsolution.procurements.get",
      "baremetalsolution.procurements.list",
      "baremetalsolution.skus.list",
      "baremetalsolution.snapshotschedulepolicies.get",
      "baremetalsolution.snapshotschedulepolicies.list",
      "baremetalsolution.sshKeys.list",
      "baremetalsolution.storageaggregatepools.list",
      "baremetalsolution.volumequotas.list",
      "baremetalsolution.volumes.get",
      "baremetalsolution.volumes.list",
      "baremetalsolution.volumesnapshots.get",
      "baremetalsolution.volumesnapshots.list",
      "batch.jobs.get",
      "batch.jobs.list",
      "batch.locations.get",
      "batch.locations.list",
      "batch.operations.get",
      "batch.operations.list",
      "batch.tasks.get",
      "batch.tasks.list",
      "beyondcorp.appConnections.get",
      "beyondcorp.appConnections.getIamPolicy",
      "beyondcorp.appConnections.list",
      "beyondcorp.appConnectors.get",
      "beyondcorp.appConnectors.getIamPolicy",
      "beyondcorp.appConnectors.list",
      "beyondcorp.appGateways.get",
      "beyondcorp.appGateways.getIamPolicy",
      "beyondcorp.appGateways.list",
      "beyondcorp.clientConnectorServices.get",
      "beyondcorp.clientConnectorServices.getIamPolicy",
      "beyondcorp.clientConnectorServices.list",
      "beyondcorp.clientGateways.get",
      "beyondcorp.clientGateways.getIamPolicy",
      "beyondcorp.clientGateways.list",
      "beyondcorp.locations.get",
      "beyondcorp.locations.list",
      "beyondcorp.operations.get",
      "beyondcorp.operations.list",
      "beyondcorp.subscriptions.get",
      "beyondcorp.subscriptions.list",
      "biglake.catalogs.get",
      "biglake.catalogs.list",
      "biglake.databases.get",
      "biglake.databases.list",
      "biglake.locks.list",
      "biglake.tables.get",
      "biglake.tables.list",
      "bigquery.bireservations.get",
      "bigquery.capacityCommitments.get",
      "bigquery.capacityCommitments.list",
      "bigquery.config.get",
      "bigquery.connections.get",
      "bigquery.connections.getIamPolicy",
      "bigquery.connections.list",
      "bigquery.connections.use",
      "bigquery.dataPolicies.get",
      "bigquery.dataPolicies.getIamPolicy",
      "bigquery.dataPolicies.list",
      "bigquery.datasets.get",
      "bigquery.datasets.getIamPolicy",
      "bigquery.datasets.listEffectiveTags",
      "bigquery.datasets.listTagBindings",
      "bigquery.jobs.create",
      "bigquery.jobs.get",
      "bigquery.jobs.list",
      "bigquery.jobs.listExecutionMetadata",
      "bigquery.models.export",
      "bigquery.models.getData",
      "bigquery.models.getMetadata",
      "bigquery.models.list",
      "bigquery.readsessions.create",
      "bigquery.readsessions.getData",
      "bigquery.readsessions.update",
      "bigquery.reservationAssignments.list",
      "bigquery.reservationAssignments.search",
      "bigquery.reservations.get",
      "bigquery.reservations.list",
      "bigquery.routines.get",
      "bigquery.routines.list",
      "bigquery.rowAccessPolicies.getIamPolicy",
      "bigquery.rowAccessPolicies.list",
      "bigquery.savedqueries.get",
      "bigquery.savedqueries.list",
      "bigquery.tables.createSnapshot",
      "bigquery.tables.getIamPolicy",
      "bigquery.tables.replicateData",
      "bigquery.transfers.get",
      "bigquerymigration.locations.get",
      "bigquerymigration.locations.list",
      "bigquerymigration.subtasks.get",
      "bigquerymigration.subtasks.list",
      "bigquerymigration.workflows.get",
      "bigquerymigration.workflows.list",
      "bigtable.appProfiles.get",
      "bigtable.appProfiles.list",
      "bigtable.backups.get",
      "bigtable.backups.getIamPolicy",
      "bigtable.backups.list",
      "bigtable.backups.read",
      "bigtable.clusters.get",
      "bigtable.clusters.list",
      "bigtable.hotTablets.list",
      "bigtable.instances.get",
      "bigtable.instances.getIamPolicy",
      "bigtable.instances.list",
      "bigtable.instances.listEffectiveTags",
      "bigtable.instances.listTagBindings",
      "bigtable.instances.ping",
      "bigtable.keyvisualizer.get",
      "bigtable.keyvisualizer.list",
      "bigtable.locations.list",
      "bigtable.tables.checkConsistency",
      "bigtable.tables.generateConsistencyToken",
      "bigtable.tables.get",
      "bigtable.tables.getIamPolicy",
      "bigtable.tables.list",
      "bigtable.tables.readRows",
      "bigtable.tables.sampleRowKeys",
      "billing.billingAccountPrice.get",
      "billing.billingAccountServices.get",
      "billing.billingAccountServices.list",
      "billing.billingAccountSkuGroupSkus.get",
      "billing.billingAccountSkuGroupSkus.list",
      "billing.billingAccountSkuGroups.get",
      "billing.billingAccountSkuGroups.list",
      "billing.billingAccountSkus.get",
      "billing.billingAccountSkus.list",
      "billing.finOpsBenchmarkInformation.get",
      "billing.finOpsHealthInformation.get",
      "billing.resourceCosts.get",
      "binaryauthorization.attestors.get",
      "binaryauthorization.attestors.getIamPolicy",
      "binaryauthorization.attestors.list",
      "binaryauthorization.attestors.verifyImageAttested",
      "binaryauthorization.continuousValidationConfig.get",
      "binaryauthorization.continuousValidationConfig.getIamPolicy",
      "binaryauthorization.platformPolicies.evaluatePolicy",
      "binaryauthorization.platformPolicies.get",
      "binaryauthorization.platformPolicies.list",
      "binaryauthorization.policy.evaluatePolicy",
      "binaryauthorization.policy.get",
      "binaryauthorization.policy.getIamPolicy",
      "blockchainnodeengine.blockchainNodes.get",
      "blockchainnodeengine.blockchainNodes.list",
      "blockchainnodeengine.locations.get",
      "blockchainnodeengine.locations.list",
      "blockchainnodeengine.operations.get",
      "blockchainnodeengine.operations.list",
      "carestudio.patients.get",
      "carestudio.patients.list",
      "certificatemanager.certissuanceconfigs.get",
      "certificatemanager.certissuanceconfigs.list",
      "certificatemanager.certmapentries.get",
      "certificatemanager.certmapentries.getIamPolicy",
      "certificatemanager.certmapentries.list",
      "certificatemanager.certmaps.get",
      "certificatemanager.certmaps.getIamPolicy",
      "certificatemanager.certmaps.list",
      "certificatemanager.certs.get",
      "certificatemanager.certs.getIamPolicy",
      "certificatemanager.certs.list",
      "certificatemanager.dnsauthorizations.get",
      "certificatemanager.dnsauthorizations.getIamPolicy",
      "certificatemanager.dnsauthorizations.list",
      "certificatemanager.locations.get",
      "certificatemanager.locations.list",
      "certificatemanager.operations.get",
      "certificatemanager.operations.list",
      "certificatemanager.trustconfigs.get",
      "certificatemanager.trustconfigs.list",
      "chat.bots.get",
      "chronicle.collectors.get",
      "chronicle.collectors.list",
      "chronicle.curatedRuleSetCategories.countAllCuratedRuleSetDetections",
      "chronicle.curatedRuleSetCategories.get",
      "chronicle.curatedRuleSetCategories.list",
      "chronicle.curatedRuleSetDeployments.get",
      "chronicle.curatedRuleSetDeployments.list",
      "chronicle.curatedRuleSets.countCuratedRuleSetDetections",
      "chronicle.curatedRuleSets.get",
      "chronicle.curatedRuleSets.list",
      "chronicle.curatedRules.get",
      "chronicle.curatedRules.list",
      "chronicle.dashboards.get",
      "chronicle.dashboards.list",
      "chronicle.forwarders.generate",
      "chronicle.forwarders.get",
      "chronicle.forwarders.list",
      "chronicle.instances.get",
      "chronicle.instances.report",
      "chronicle.legacies.legacyGetCuratedRulesTrends",
      "chronicle.legacies.legacyGetRuleCounts",
      "chronicle.legacies.legacyGetRulesTrends",
      "chronicle.multitenantDirectories.get",
      "chronicle.operations.get",
      "chronicle.operations.list",
      "chronicle.operations.wait",
      "chronicle.referenceLists.get",
      "chronicle.referenceLists.list",
      "chronicle.referenceLists.verifyReferenceList",
      "chronicle.retrohunts.get",
      "chronicle.retrohunts.list",
      "chronicle.ruleDeployments.get",
      "chronicle.ruleDeployments.list",
      "chronicle.ruleExecutionErrors.list",
      "chronicle.rules.get",
      "chronicle.rules.list",
      "chronicle.rules.listRevisions",
      "chronicle.rules.verifyRuleText",
      "chroniclesm.gcpAssociations.get",
      "chroniclesm.gcpSettings.get",
      "clientauthconfig.brands.get",
      "clientauthconfig.brands.list",
      "clientauthconfig.clients.get",
      "clientauthconfig.clients.list",
      "cloud.locations.get",
      "cloud.locations.list",
      "cloudasset.assets.analyzeIamPolicy",
      "cloudasset.assets.analyzeMove",
      "cloudasset.assets.analyzeOrgPolicy",
      "cloudasset.assets.exportAppengineApplications",
      "cloudasset.assets.exportAppengineServices",
      "cloudasset.assets.exportAppengineVersions",
      "cloudasset.assets.exportBigqueryDatasets",
      "cloudasset.assets.exportBigqueryModels",
      "cloudasset.assets.exportBigqueryTables",
      "cloudasset.assets.exportCloudDocumentAIEvaluation",
      "cloudasset.assets.exportCloudDocumentAIHumanReviewConfig",
      "cloudasset.assets.exportCloudDocumentAILabelerPool",
      "cloudasset.assets.exportCloudDocumentAIProcessor",
      "cloudasset.assets.exportCloudDocumentAIProcessorVersion",
      "cloudasset.assets.exportCloudbillingBillingAccounts",
      "cloudasset.assets.exportCloudkmsCryptoKeyVersions",
      "cloudasset.assets.exportCloudkmsCryptoKeys",
      "cloudasset.assets.exportCloudkmsKeyRings",
      "cloudasset.assets.exportCloudmemcacheInstances",
      "cloudasset.assets.exportCloudresourcemanagerFolders",
      "cloudasset.assets.exportCloudresourcemanagerOrganizations",
      "cloudasset.assets.exportCloudresourcemanagerProjects",
      "cloudasset.assets.exportCloudresourcemanagerTagBindings",
      "cloudasset.assets.exportCloudresourcemanagerTagKeys",
      "cloudasset.assets.exportCloudresourcemanagerTagValues",
      "cloudasset.assets.exportComputeAddress",
      "cloudasset.assets.exportComputeAutoscalers",
      "cloudasset.assets.exportComputeBackendBuckets",
      "cloudasset.assets.exportComputeBackendServices",
      "cloudasset.assets.exportComputeDisks",
      "cloudasset.assets.exportComputeFirewalls",
      "cloudasset.assets.exportComputeForwardingRules",
      "cloudasset.assets.exportComputeGlobalForwardingRules",
      "cloudasset.assets.exportComputeHealthChecks",
      "cloudasset.assets.exportComputeHttpHealthChecks",
      "cloudasset.assets.exportComputeHttpsHealthChecks",
      "cloudasset.assets.exportComputeImages",
      "cloudasset.assets.exportComputeInstanceGroupManagers",
      "cloudasset.assets.exportComputeInstanceGroups",
      "cloudasset.assets.exportComputeInstanceTemplates",
      "cloudasset.assets.exportComputeInstances",
      "cloudasset.assets.exportComputeInterconnect",
      "cloudasset.assets.exportComputeInterconnectAttachment",
      "cloudasset.assets.exportComputeLicenses",
      "cloudasset.assets.exportComputeNetworkEndpointGroups",
      "cloudasset.assets.exportComputeNetworks",
      "cloudasset.assets.exportComputeProjects",
      "cloudasset.assets.exportComputeRegionBackendServices",
      "cloudasset.assets.exportComputeRouters",
      "cloudasset.assets.exportComputeRoutes",
      "cloudasset.assets.exportComputeSecurityPolicy",
      "cloudasset.assets.exportComputeSnapshots",
      "cloudasset.assets.exportComputeSslCertificates",
      "cloudasset.assets.exportComputeSslPolicies",
      "cloudasset.assets.exportComputeSubnetworks",
      "cloudasset.assets.exportComputeTargetHttpProxies",
      "cloudasset.assets.exportComputeTargetHttpsProxies",
      "cloudasset.assets.exportComputeTargetInstances",
      "cloudasset.assets.exportComputeTargetPools",
      "cloudasset.assets.exportComputeTargetSslProxies",
      "cloudasset.assets.exportComputeTargetTcpProxies",
      "cloudasset.assets.exportComputeTargetVpnGateways",
      "cloudasset.assets.exportComputeUrlMaps",
      "cloudasset.assets.exportComputeVpnTunnels",
      "cloudasset.assets.exportContainerClusters",
      "cloudasset.assets.exportDataprocClusters",
      "cloudasset.assets.exportDataprocJobs",
      "cloudasset.assets.exportDnsManagedZones",
      "cloudasset.assets.exportDnsPolicies",
      "cloudasset.assets.exportIamRoles",
      "cloudasset.assets.exportIamServiceAccountKeys",
      "cloudasset.assets.exportIamServiceAccounts",
      "cloudasset.assets.exportIapTunnel",
      "cloudasset.assets.exportIapTunnelInstances",
      "cloudasset.assets.exportIapTunnelZones",
      "cloudasset.assets.exportIapWeb",
      "cloudasset.assets.exportIapWebServiceVersion",
      "cloudasset.assets.exportIapWebServices",
      "cloudasset.assets.exportIapWebType",
      "cloudasset.assets.exportOSConfigOSPolicyAssignmentReports",
      "cloudasset.assets.exportOSConfigOSPolicyAssignments",
      "cloudasset.assets.exportPubsubSnapshots",
      "cloudasset.assets.exportPubsubSubscriptions",
      "cloudasset.assets.exportPubsubTopics",
      "cloudasset.assets.exportServicemanagementServices",
      "cloudasset.assets.exportSpannerBackups",
      "cloudasset.assets.exportSpannerDatabases",
      "cloudasset.assets.exportSpannerInstances",
      "cloudasset.assets.exportSqladminBackupRuns",
      "cloudasset.assets.exportSqladminInstances",
      "cloudasset.assets.exportStorageBuckets",
      "cloudasset.assets.listCloudDocumentAIEvaluation",
      "cloudasset.assets.listCloudDocumentAIHumanReviewConfig",
      "cloudasset.assets.listCloudDocumentAILabelerPool",
      "cloudasset.assets.listCloudDocumentAIProcessor",
      "cloudasset.assets.listCloudDocumentAIProcessorVersion",
      "cloudasset.assets.listSqladminBackupRuns",
      "cloudasset.assets.searchAllIamPolicies",
      "cloudasset.assets.searchAllResources",
      "cloudasset.savedqueries.get",
      "cloudasset.savedqueries.list",
      "cloudbuild.builds.get",
      "cloudbuild.builds.list",
      "cloudbuild.connections.fetchLinkableRepositories",
      "cloudbuild.connections.get",
      "cloudbuild.connections.getIamPolicy",
      "cloudbuild.connections.list",
      "cloudbuild.integrations.get",
      "cloudbuild.integrations.list",
      "cloudbuild.operations.get",
      "cloudbuild.operations.list",
      "cloudbuild.repositories.fetchGitRefs",
      "cloudbuild.repositories.get",
      "cloudbuild.repositories.list",
      "cloudbuild.workerpools.get",
      "cloudbuild.workerpools.list",
      "cloudconfig.configs.get",
      "cloudcontrolspartner.customers.get",
      "cloudcontrolspartner.customers.list",
      "cloudcontrolspartner.ekmconnections.get",
      "cloudcontrolspartner.inspectabilityevents.get",
      "cloudcontrolspartner.partners.get",
      "cloudcontrolspartner.platformcontrols.get",
      "cloudcontrolspartner.violations.get",
      "cloudcontrolspartner.violations.list",
      "cloudcontrolspartner.workloads.get",
      "cloudcontrolspartner.workloads.list",
      "clouddeploy.config.get",
      "clouddeploy.deliveryPipelines.get",
      "clouddeploy.deliveryPipelines.getIamPolicy",
      "clouddeploy.deliveryPipelines.list",
      "clouddeploy.jobRuns.get",
      "clouddeploy.jobRuns.list",
      "clouddeploy.locations.get",
      "clouddeploy.locations.list",
      "clouddeploy.operations.get",
      "clouddeploy.operations.list",
      "clouddeploy.releases.get",
      "clouddeploy.releases.list",
      "clouddeploy.rollouts.get",
      "clouddeploy.rollouts.list",
      "clouddeploy.targets.get",
      "clouddeploy.targets.getIamPolicy",
      "clouddeploy.targets.list",
      "cloudfunctions.functions.get",
      "cloudfunctions.functions.getIamPolicy",
      "cloudfunctions.functions.list",
      "cloudfunctions.functions.sourceCodeGet",
      "cloudfunctions.locations.get",
      "cloudfunctions.locations.list",
      "cloudfunctions.operations.get",
      "cloudfunctions.operations.list",
      "cloudfunctions.runtimes.list",
      "cloudiot.devices.get",
      "cloudiot.devices.list",
      "cloudiot.registries.get",
      "cloudiot.registries.getIamPolicy",
      "cloudiot.registries.list",
      "cloudiottoken.tokensettings.get",
      "cloudjobdiscovery.companies.get",
      "cloudjobdiscovery.companies.list",
      "cloudjobdiscovery.jobs.get",
      "cloudjobdiscovery.jobs.search",
      "cloudjobdiscovery.profiles.get",
      "cloudjobdiscovery.profiles.search",
      "cloudjobdiscovery.tenants.get",
      "cloudkms.cryptoKeyVersions.get",
      "cloudkms.cryptoKeyVersions.list",
      "cloudkms.cryptoKeys.get",
      "cloudkms.cryptoKeys.getIamPolicy",
      "cloudkms.cryptoKeys.list",
      "cloudkms.ekmConfigs.get",
      "cloudkms.ekmConfigs.getIamPolicy",
      "cloudkms.ekmConnections.get",
      "cloudkms.ekmConnections.getIamPolicy",
      "cloudkms.ekmConnections.list",
      "cloudkms.ekmConnections.verifyConnectivity",
      "cloudkms.importJobs.get",
      "cloudkms.importJobs.getIamPolicy",
      "cloudkms.importJobs.list",
      "cloudkms.keyRings.get",
      "cloudkms.keyRings.getIamPolicy",
      "cloudkms.keyRings.list",
      "cloudkms.keyRings.listEffectiveTags",
      "cloudkms.keyRings.listTagBindings",
      "cloudkms.locations.generateRandomBytes",
      "cloudkms.locations.get",
      "cloudkms.locations.list",
      "cloudkms.protectedResources.search",
      "cloudnotifications.activities.list",
      "cloudonefs.isiloncloud.com/clusters.get",
      "cloudonefs.isiloncloud.com/clusters.list",
      "cloudonefs.isiloncloud.com/fileshares.get",
      "cloudonefs.isiloncloud.com/fileshares.list",
      "cloudoptimization.operations.get",
      "cloudprivatecatalog.targets.get",
      "cloudprivatecatalogproducer.associations.get",
      "cloudprivatecatalogproducer.associations.list",
      "cloudprivatecatalogproducer.catalogAssociations.get",
      "cloudprivatecatalogproducer.catalogAssociations.list",
      "cloudprivatecatalogproducer.catalogs.get",
      "cloudprivatecatalogproducer.catalogs.getIamPolicy",
      "cloudprivatecatalogproducer.catalogs.list",
      "cloudprivatecatalogproducer.producerCatalogs.get",
      "cloudprivatecatalogproducer.producerCatalogs.getIamPolicy",
      "cloudprivatecatalogproducer.producerCatalogs.list",
      "cloudprivatecatalogproducer.products.get",
      "cloudprivatecatalogproducer.products.getIamPolicy",
      "cloudprivatecatalogproducer.products.list",
      "cloudprivatecatalogproducer.settings.get",
      "cloudprofiler.profiles.list",
      "cloudscheduler.jobs.fullView",
      "cloudscheduler.jobs.get",
      "cloudscheduler.jobs.list",
      "cloudscheduler.locations.get",
      "cloudscheduler.locations.list",
      "cloudsql.backupRuns.get",
      "cloudsql.backupRuns.list",
      "cloudsql.databases.get",
      "cloudsql.databases.list",
      "cloudsql.instances.export",
      "cloudsql.instances.get",
      "cloudsql.instances.getDiskShrinkConfig",
      "cloudsql.instances.list",
      "cloudsql.instances.listEffectiveTags",
      "cloudsql.instances.listServerCas",
      "cloudsql.instances.listTagBindings",
      "cloudsql.sslCerts.get",
      "cloudsql.sslCerts.list",
      "cloudsql.users.get",
      "cloudsql.users.list",
      "cloudsupport.accounts.get",
      "cloudsupport.accounts.getIamPolicy",
      "cloudsupport.accounts.getUserRoles",
      "cloudsupport.accounts.list",
      "cloudsupport.operations.get",
      "cloudsupport.properties.get",
      "cloudsupport.techCases.get",
      "cloudsupport.techCases.list",
      "cloudtasks.locations.get",
      "cloudtasks.locations.list",
      "cloudtasks.queues.get",
      "cloudtasks.queues.list",
      "cloudtasks.tasks.fullView",
      "cloudtasks.tasks.get",
      "cloudtasks.tasks.list",
      "cloudtestservice.environmentcatalog.get",
      "cloudtestservice.matrices.get",
      "cloudtoolresults.executions.get",
      "cloudtoolresults.executions.list",
      "cloudtoolresults.histories.get",
      "cloudtoolresults.histories.list",
      "cloudtoolresults.settings.get",
      "cloudtoolresults.steps.get",
      "cloudtoolresults.steps.list",
      "cloudtrace.insights.get",
      "cloudtrace.insights.list",
      "cloudtrace.stats.get",
      "cloudtrace.tasks.create",
      "cloudtrace.tasks.get",
      "cloudtrace.tasks.list",
      "cloudtrace.traces.get",
      "cloudtrace.traces.list",
      "cloudtranslate.customModels.get",
      "cloudtranslate.customModels.list",
      "cloudtranslate.customModels.predict",
      "cloudtranslate.datasets.export",
      "cloudtranslate.datasets.get",
      "cloudtranslate.datasets.list",
      "cloudtranslate.generalModels.batchDocPredict",
      "cloudtranslate.generalModels.batchPredict",
      "cloudtranslate.generalModels.docPredict",
      "cloudtranslate.generalModels.get",
      "cloudtranslate.generalModels.predict",
      "cloudtranslate.glossaries.batchDocPredict",
      "cloudtranslate.glossaries.batchPredict",
      "cloudtranslate.glossaries.docPredict",
      "cloudtranslate.glossaries.get",
      "cloudtranslate.glossaries.list",
      "cloudtranslate.glossaries.predict",
      "cloudtranslate.glossaryentries.get",
      "cloudtranslate.glossaryentries.list",
      "cloudtranslate.languageDetectionModels.predict",
      "cloudtranslate.locations.get",
      "cloudtranslate.locations.list",
      "cloudtranslate.operations.get",
      "cloudtranslate.operations.list",
      "cloudtranslate.operations.wait",
      "cloudvolumesgcp-api.netapp.com/activeDirectories.get",
      "cloudvolumesgcp-api.netapp.com/activeDirectories.list",
      "cloudvolumesgcp-api.netapp.com/ipRanges.list",
      "cloudvolumesgcp-api.netapp.com/jobs.get",
      "cloudvolumesgcp-api.netapp.com/jobs.list",
      "cloudvolumesgcp-api.netapp.com/regions.list",
      "cloudvolumesgcp-api.netapp.com/serviceLevels.list",
      "cloudvolumesgcp-api.netapp.com/snapshots.get",
      "cloudvolumesgcp-api.netapp.com/snapshots.list",
      "cloudvolumesgcp-api.netapp.com/volumereplication.get",
      "cloudvolumesgcp-api.netapp.com/volumereplication.list",
      "cloudvolumesgcp-api.netapp.com/volumes.get",
      "cloudvolumesgcp-api.netapp.com/volumes.list",
      "commerceagreementpublishing.agreements.get",
      "commerceagreementpublishing.agreements.list",
      "commerceagreementpublishing.documents.get",
      "commerceagreementpublishing.documents.list",
      "commercebusinessenablement.leadgenConfig.get",
      "commercebusinessenablement.partnerAccounts.get",
      "commercebusinessenablement.partnerAccounts.list",
      "commercebusinessenablement.partnerInfo.get",
      "commercebusinessenablement.paymentConfig.get",
      "commercebusinessenablement.resellerConfig.get",
      "commercebusinessenablement.resellerDiscountOffers.list",
      "commerceoffercatalog.agreements.get",
      "commerceoffercatalog.agreements.list",
      "commerceoffercatalog.documents.get",
      "commerceoffercatalog.documents.list",
      "commerceoffercatalog.offers.get",
      "commerceorggovernance.collections.get",
      "commerceorggovernance.collections.list",
      "commerceorggovernance.consumerSharingPolicies.get",
      "commerceorggovernance.organizationSettings.get",
      "commerceorggovernance.services.list",
      "commerceprice.privateoffers.get",
      "commerceprice.privateoffers.list",
      "composer.dags.get",
      "composer.dags.getSourceCode",
      "composer.dags.list",
      "composer.environments.get",
      "composer.environments.list",
      "composer.imageversions.list",
      "composer.operations.get",
      "composer.operations.list",
      "compute.acceleratorTypes.get",
      "compute.acceleratorTypes.list",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.backendBuckets.get",
      "compute.backendBuckets.getIamPolicy",
      "compute.backendBuckets.list",
      "compute.backendBuckets.listEffectiveTags",
      "compute.backendBuckets.listTagBindings",
      "compute.backendServices.get",
      "compute.backendServices.getIamPolicy",
      "compute.backendServices.list",
      "compute.backendServices.listEffectiveTags",
      "compute.backendServices.listTagBindings",
      "compute.commitments.get",
      "compute.commitments.list",
      "compute.diskTypes.get",
      "compute.diskTypes.list",
      "compute.disks.createSnapshot",
      "compute.disks.get",
      "compute.disks.getIamPolicy",
      "compute.disks.list",
      "compute.disks.listEffectiveTags",
      "compute.disks.listTagBindings",
      "compute.disks.useReadOnly",
      "compute.externalVpnGateways.get",
      "compute.externalVpnGateways.list",
      "compute.firewallPolicies.get",
      "compute.firewallPolicies.getIamPolicy",
      "compute.firewallPolicies.list",
      "compute.firewallPolicies.listEffectiveTags",
      "compute.firewallPolicies.listTagBindings",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.listEffectiveTags",
      "compute.firewalls.listTagBindings",
      "compute.forwardingRules.get",
      "compute.forwardingRules.list",
      "compute.forwardingRules.listEffectiveTags",
      "compute.forwardingRules.listTagBindings",
      "compute.futureReservations.get",
      "compute.futureReservations.getIamPolicy",
      "compute.futureReservations.list",
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalForwardingRules.get",
      "compute.globalForwardingRules.list",
      "compute.globalForwardingRules.listEffectiveTags",
      "compute.globalForwardingRules.listTagBindings",
      "compute.globalForwardingRules.pscGet",
      "compute.globalNetworkEndpointGroups.get",
      "compute.globalNetworkEndpointGroups.list",
      "compute.globalNetworkEndpointGroups.listEffectiveTags",
      "compute.globalNetworkEndpointGroups.listTagBindings",
      "compute.globalOperations.get",
      "compute.globalOperations.getIamPolicy",
      "compute.globalOperations.list",
      "compute.globalPublicDelegatedPrefixes.get",
      "compute.globalPublicDelegatedPrefixes.list",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.listEffectiveTags",
      "compute.healthChecks.listTagBindings",
      "compute.healthChecks.useReadOnly",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.listEffectiveTags",
      "compute.httpHealthChecks.listTagBindings",
      "compute.httpHealthChecks.useReadOnly",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.list",
      "compute.httpsHealthChecks.listEffectiveTags",
      "compute.httpsHealthChecks.listTagBindings",
      "compute.httpsHealthChecks.useReadOnly",
      "compute.images.get",
      "compute.images.getFromFamily",
      "compute.images.getIamPolicy",
      "compute.images.list",
      "compute.images.listEffectiveTags",
      "compute.images.listTagBindings",
      "compute.images.useReadOnly",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.list",
      "compute.instanceGroups.get",
      "compute.instanceGroups.list",
      "compute.instanceTemplates.get",
      "compute.instanceTemplates.getIamPolicy",
      "compute.instanceTemplates.list",
      "compute.instanceTemplates.useReadOnly",
      "compute.instances.get",
      "compute.instances.getEffectiveFirewalls",
      "compute.instances.getGuestAttributes",
      "compute.instances.getIamPolicy",
      "compute.instances.getScreenshot",
      "compute.instances.getSerialPortOutput",
      "compute.instances.getShieldedInstanceIdentity",
      "compute.instances.getShieldedVmIdentity",
      "compute.instances.list",
      "compute.instances.listEffectiveTags",
      "compute.instances.listReferrers",
      "compute.instances.listTagBindings",
      "compute.instances.useReadOnly",
      "compute.instantSnapshots.get",
      "compute.instantSnapshots.getIamPolicy",
      "compute.instantSnapshots.list",
      "compute.instantSnapshots.useReadOnly",
      "compute.interconnectAttachments.get",
      "compute.interconnectAttachments.list",
      "compute.interconnectLocations.get",
      "compute.interconnectLocations.list",
      "compute.interconnectRemoteLocations.get",
      "compute.interconnectRemoteLocations.list",
      "compute.interconnects.get",
      "compute.interconnects.list",
      "compute.licenseCodes.get",
      "compute.licenseCodes.getIamPolicy",
      "compute.licenseCodes.list",
      "compute.licenses.get",
      "compute.licenses.getIamPolicy",
      "compute.licenses.list",
      "compute.machineImages.get",
      "compute.machineImages.getIamPolicy",
      "compute.machineImages.list",
      "compute.machineImages.useReadOnly",
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.maintenancePolicies.get",
      "compute.maintenancePolicies.getIamPolicy",
      "compute.maintenancePolicies.list",
      "compute.networkAttachments.get",
      "compute.networkAttachments.getIamPolicy",
      "compute.networkAttachments.list",
      "compute.networkEdgeSecurityServices.get",
      "compute.networkEdgeSecurityServices.list",
      "compute.networkEndpointGroups.get",
      "compute.networkEndpointGroups.getIamPolicy",
      "compute.networkEndpointGroups.list",
      "compute.networkEndpointGroups.listEffectiveTags",
      "compute.networkEndpointGroups.listTagBindings",
      "compute.networks.get",
      "compute.networks.getEffectiveFirewalls",
      "compute.networks.getRegionEffectiveFirewalls",
      "compute.networks.list",
      "compute.networks.listEffectiveTags",
      "compute.networks.listPeeringRoutes",
      "compute.networks.listTagBindings",
      "compute.nodeGroups.get",
      "compute.nodeGroups.getIamPolicy",
      "compute.nodeGroups.list",
      "compute.nodeTemplates.get",
      "compute.nodeTemplates.getIamPolicy",
      "compute.nodeTemplates.list",
      "compute.nodeTypes.get",
      "compute.nodeTypes.list",
      "compute.organizations.listAssociations",
      "compute.packetMirrorings.get",
      "compute.packetMirrorings.list",
      "compute.projects.get",
      "compute.publicAdvertisedPrefixes.get",
      "compute.publicAdvertisedPrefixes.list",
      "compute.publicDelegatedPrefixes.get",
      "compute.publicDelegatedPrefixes.list",
      "compute.regionBackendServices.get",
      "compute.regionBackendServices.getIamPolicy",
      "compute.regionBackendServices.list",
      "compute.regionBackendServices.listEffectiveTags",
      "compute.regionBackendServices.listTagBindings",
      "compute.regionFirewallPolicies.get",
      "compute.regionFirewallPolicies.getIamPolicy",
      "compute.regionFirewallPolicies.list",
      "compute.regionFirewallPolicies.listEffectiveTags",
      "compute.regionFirewallPolicies.listTagBindings",
      "compute.regionHealthCheckServices.get",
      "compute.regionHealthCheckServices.list",
      "compute.regionHealthChecks.get",
      "compute.regionHealthChecks.list",
      "compute.regionHealthChecks.listEffectiveTags",
      "compute.regionHealthChecks.listTagBindings",
      "compute.regionHealthChecks.useReadOnly",
      "compute.regionNetworkEndpointGroups.get",
      "compute.regionNetworkEndpointGroups.list",
      "compute.regionNetworkEndpointGroups.listEffectiveTags",
      "compute.regionNetworkEndpointGroups.listTagBindings",
      "compute.regionNotificationEndpoints.get",
      "compute.regionNotificationEndpoints.list",
      "compute.regionOperations.get",
      "compute.regionOperations.getIamPolicy",
      "compute.regionOperations.list",
      "compute.regionSecurityPolicies.get",
      "compute.regionSecurityPolicies.list",
      "compute.regionSecurityPolicies.listEffectiveTags",
      "compute.regionSecurityPolicies.listTagBindings",
      "compute.regionSslCertificates.get",
      "compute.regionSslCertificates.list",
      "compute.regionSslCertificates.listEffectiveTags",
      "compute.regionSslCertificates.listTagBindings",
      "compute.regionSslPolicies.get",
      "compute.regionSslPolicies.list",
      "compute.regionSslPolicies.listAvailableFeatures",
      "compute.regionTargetHttpProxies.get",
      "compute.regionTargetHttpProxies.list",
      "compute.regionTargetHttpProxies.listEffectiveTags",
      "compute.regionTargetHttpProxies.listTagBindings",
      "compute.regionTargetHttpsProxies.get",
      "compute.regionTargetHttpsProxies.list",
      "compute.regionTargetHttpsProxies.listEffectiveTags",
      "compute.regionTargetHttpsProxies.listTagBindings",
      "compute.regionTargetTcpProxies.get",
      "compute.regionTargetTcpProxies.list",
      "compute.regionUrlMaps.get",
      "compute.regionUrlMaps.list",
      "compute.regionUrlMaps.listEffectiveTags",
      "compute.regionUrlMaps.listTagBindings",
      "compute.regionUrlMaps.validate",
      "compute.regions.get",
      "compute.regions.list",
      "compute.reservations.get",
      "compute.reservations.list",
      "compute.resourcePolicies.get",
      "compute.resourcePolicies.getIamPolicy",
      "compute.resourcePolicies.list",
      "compute.resourcePolicies.useReadOnly",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routes.get",
      "compute.routes.list",
      "compute.routes.listEffectiveTags",
      "compute.routes.listTagBindings",
      "compute.securityPolicies.get",
      "compute.securityPolicies.getIamPolicy",
      "compute.securityPolicies.list",
      "compute.securityPolicies.listEffectiveTags",
      "compute.securityPolicies.listTagBindings",
      "compute.serviceAttachments.get",
      "compute.serviceAttachments.getIamPolicy",
      "compute.serviceAttachments.list",
      "compute.snapshots.get",
      "compute.snapshots.getIamPolicy",
      "compute.snapshots.list",
      "compute.snapshots.listEffectiveTags",
      "compute.snapshots.listTagBindings",
      "compute.snapshots.useReadOnly",
      "compute.sslCertificates.get",
      "compute.sslCertificates.list",
      "compute.sslCertificates.listEffectiveTags",
      "compute.sslCertificates.listTagBindings",
      "compute.sslPolicies.get",
      "compute.sslPolicies.list",
      "compute.sslPolicies.listAvailableFeatures",
      "compute.sslPolicies.listEffectiveTags",
      "compute.sslPolicies.listTagBindings",
      "compute.subnetworks.get",
      "compute.subnetworks.getIamPolicy",
      "compute.subnetworks.list",
      "compute.subnetworks.listEffectiveTags",
      "compute.subnetworks.listTagBindings",
      "compute.targetGrpcProxies.get",
      "compute.targetGrpcProxies.list",
      "compute.targetHttpProxies.get",
      "compute.targetHttpProxies.list",
      "compute.targetHttpProxies.listEffectiveTags",
      "compute.targetHttpProxies.listTagBindings",
      "compute.targetHttpsProxies.get",
      "compute.targetHttpsProxies.list",
      "compute.targetHttpsProxies.listEffectiveTags",
      "compute.targetHttpsProxies.listTagBindings",
      "compute.targetInstances.get",
      "compute.targetInstances.list",
      "compute.targetInstances.listEffectiveTags",
      "compute.targetInstances.listTagBindings",
      "compute.targetPools.get",
      "compute.targetPools.list",
      "compute.targetPools.listEffectiveTags",
      "compute.targetPools.listTagBindings",
      "compute.targetSslProxies.get",
      "compute.targetSslProxies.list",
      "compute.targetSslProxies.listEffectiveTags",
      "compute.targetSslProxies.listTagBindings",
      "compute.targetTcpProxies.get",
      "compute.targetTcpProxies.list",
      "compute.targetTcpProxies.listEffectiveTags",
      "compute.targetTcpProxies.listTagBindings",
      "compute.targetVpnGateways.get",
      "compute.targetVpnGateways.list",
      "compute.urlMaps.get",
      "compute.urlMaps.list",
      "compute.urlMaps.listEffectiveTags",
      "compute.urlMaps.listTagBindings",
      "compute.urlMaps.validate",
      "compute.vpnGateways.get",
      "compute.vpnGateways.list",
      "compute.vpnTunnels.get",
      "compute.vpnTunnels.list",
      "compute.zoneOperations.get",
      "compute.zoneOperations.getIamPolicy",
      "compute.zoneOperations.list",
      "compute.zones.get",
      "compute.zones.list",
      "confidentialcomputing.locations.get",
      "confidentialcomputing.locations.list",
      "config.deployments.get",
      "config.deployments.getIamPolicy",
      "config.deployments.list",
      "config.locations.get",
      "config.locations.list",
      "config.operations.get",
      "config.operations.list",
      "config.resources.get",
      "config.resources.list",
      "config.revisions.get",
      "config.revisions.list",
      "connectors.actions.list",
      "connectors.connections.get",
      "connectors.connections.getConnectionSchemaMetadata",
      "connectors.connections.getIamPolicy",
      "connectors.connections.getRuntimeActionSchema",
      "connectors.connections.getRuntimeEntitySchema",
      "connectors.connections.list",
      "connectors.connectors.get",
      "connectors.connectors.list",
      "connectors.endpointAttachments.get",
      "connectors.endpointAttachments.getIamPolicy",
      "connectors.endpointAttachments.list",
      "connectors.entities.get",
      "connectors.entities.list",
      "connectors.entityTypes.list",
      "connectors.eventSubscriptions.get",
      "connectors.eventSubscriptions.list",
      "connectors.eventtypes.get",
      "connectors.eventtypes.list",
      "connectors.locations.get",
      "connectors.locations.list",
      "connectors.managedZones.get",
      "connectors.managedZones.getIamPolicy",
      "connectors.managedZones.list",
      "connectors.operations.get",
      "connectors.operations.list",
      "connectors.providers.get",
      "connectors.providers.list",
      "connectors.runtimeconfig.get",
      "connectors.settings.get",
      "connectors.versions.get",
      "connectors.versions.list",
      "consumerprocurement.accounts.get",
      "consumerprocurement.accounts.list",
      "consumerprocurement.consents.check",
      "consumerprocurement.consents.list",
      "consumerprocurement.entitlements.get",
      "consumerprocurement.entitlements.list",
      "consumerprocurement.freeTrials.get",
      "consumerprocurement.freeTrials.list",
      "consumerprocurement.orderAttributions.get",
      "consumerprocurement.orderAttributions.list",
      "consumerprocurement.orders.get",
      "consumerprocurement.orders.list",
      "contactcenteraiplatform.contactCenters.get",
      "contactcenteraiplatform.contactCenters.list",
      "contactcenteraiplatform.contactCenters.queryQuota",
      "contactcenteraiplatform.locations.get",
      "contactcenteraiplatform.locations.list",
      "contactcenteraiplatform.operations.get",
      "contactcenteraiplatform.operations.list",
      "contactcenterinsights.analyses.get",
      "contactcenterinsights.analyses.list",
      "contactcenterinsights.conversations.get",
      "contactcenterinsights.conversations.list",
      "contactcenterinsights.issueModels.get",
      "contactcenterinsights.issueModels.list",
      "contactcenterinsights.issues.get",
      "contactcenterinsights.issues.list",
      "contactcenterinsights.operations.get",
      "contactcenterinsights.operations.list",
      "contactcenterinsights.phraseMatchers.get",
      "contactcenterinsights.phraseMatchers.list",
      "contactcenterinsights.settings.get",
      "contactcenterinsights.views.get",
      "contactcenterinsights.views.list",
      "container.apiServices.get",
      "container.apiServices.getStatus",
      "container.apiServices.list",
      "container.auditSinks.get",
      "container.auditSinks.list",
      "container.backendConfigs.get",
      "container.backendConfigs.list",
      "container.bindings.get",
      "container.bindings.list",
      "container.certificateSigningRequests.get",
      "container.certificateSigningRequests.getStatus",
      "container.certificateSigningRequests.list",
      "container.clusterRoleBindings.get",
      "container.clusterRoleBindings.list",
      "container.clusterRoles.get",
      "container.clusterRoles.list",
      "container.clusters.get",
      "container.clusters.list",
      "container.clusters.listEffectiveTags",
      "container.clusters.listTagBindings",
      "container.componentStatuses.get",
      "container.componentStatuses.list",
      "container.configMaps.get",
      "container.configMaps.list",
      "container.controllerRevisions.get",
      "container.controllerRevisions.list",
      "container.cronJobs.get",
      "container.cronJobs.getStatus",
      "container.cronJobs.list",
      "container.csiDrivers.get",
      "container.csiDrivers.list",
      "container.csiNodeInfos.get",
      "container.csiNodeInfos.list",
      "container.csiNodes.get",
      "container.csiNodes.list",
      "container.customResourceDefinitions.get",
      "container.customResourceDefinitions.getStatus",
      "container.customResourceDefinitions.list",
      "container.daemonSets.get",
      "container.daemonSets.getStatus",
      "container.daemonSets.list",
      "container.deployments.get",
      "container.deployments.getStatus",
      "container.deployments.list",
      "container.endpointSlices.get",
      "container.endpointSlices.list",
      "container.endpoints.get",
      "container.endpoints.list",
      "container.events.get",
      "container.events.list",
      "container.frontendConfigs.get",
      "container.frontendConfigs.list",
      "container.horizontalPodAutoscalers.get",
      "container.horizontalPodAutoscalers.getStatus",
      "container.horizontalPodAutoscalers.list",
      "container.ingresses.get",
      "container.ingresses.getStatus",
      "container.ingresses.list",
      "container.initializerConfigurations.get",
      "container.initializerConfigurations.list",
      "container.jobs.get",
      "container.jobs.getStatus",
      "container.jobs.list",
      "container.leases.get",
      "container.leases.list",
      "container.limitRanges.get",
      "container.limitRanges.list",
      "container.localSubjectAccessReviews.list",
      "container.managedCertificates.get",
      "container.managedCertificates.list",
      "container.mutatingWebhookConfigurations.get",
      "container.mutatingWebhookConfigurations.list",
      "container.namespaces.get",
      "container.namespaces.getStatus",
      "container.namespaces.list",
      "container.networkPolicies.get",
      "container.networkPolicies.list",
      "container.nodes.get",
      "container.nodes.getStatus",
      "container.nodes.list",
      "container.operations.get",
      "container.operations.list",
      "container.persistentVolumeClaims.get",
      "container.persistentVolumeClaims.getStatus",
      "container.persistentVolumeClaims.list",
      "container.persistentVolumes.get",
      "container.persistentVolumes.getStatus",
      "container.persistentVolumes.list",
      "container.petSets.get",
      "container.petSets.list",
      "container.podDisruptionBudgets.get",
      "container.podDisruptionBudgets.getStatus",
      "container.podDisruptionBudgets.list",
      "container.podPresets.get",
      "container.podPresets.list",
      "container.podSecurityPolicies.get",
      "container.podSecurityPolicies.list",
      "container.podTemplates.get",
      "container.podTemplates.list",
      "container.pods.get",
      "container.pods.getLogs",
      "container.pods.getStatus",
      "container.pods.list",
      "container.priorityClasses.get",
      "container.priorityClasses.list",
      "container.replicaSets.get",
      "container.replicaSets.getScale",
      "container.replicaSets.getStatus",
      "container.replicaSets.list",
      "container.replicationControllers.get",
      "container.replicationControllers.getScale",
      "container.replicationControllers.getStatus",
      "container.replicationControllers.list",
      "container.resourceQuotas.get",
      "container.resourceQuotas.getStatus",
      "container.resourceQuotas.list",
      "container.roleBindings.get",
      "container.roleBindings.list",
      "container.roles.get",
      "container.roles.list",
      "container.runtimeClasses.get",
      "container.runtimeClasses.list",
      "container.scheduledJobs.get",
      "container.scheduledJobs.list",
      "container.selfSubjectAccessReviews.create",
      "container.selfSubjectAccessReviews.list",
      "container.selfSubjectRulesReviews.create",
      "container.serviceAccounts.get",
      "container.serviceAccounts.list",
      "container.services.get",
      "container.services.getStatus",
      "container.services.list",
      "container.statefulSets.get",
      "container.statefulSets.getScale",
      "container.statefulSets.getStatus",
      "container.statefulSets.list",
      "container.storageClasses.get",
      "container.storageClasses.list",
      "container.storageStates.get",
      "container.storageStates.getStatus",
      "container.storageStates.list",
      "container.storageVersionMigrations.get",
      "container.storageVersionMigrations.getStatus",
      "container.storageVersionMigrations.list",
      "container.subjectAccessReviews.list",
      "container.thirdPartyObjects.get",
      "container.thirdPartyObjects.list",
      "container.thirdPartyResources.get",
      "container.thirdPartyResources.list",
      "container.tokenReviews.create",
      "container.updateInfos.get",
      "container.updateInfos.list",
      "container.validatingWebhookConfigurations.get",
      "container.validatingWebhookConfigurations.list",
      "container.volumeAttachments.get",
      "container.volumeAttachments.getStatus",
      "container.volumeAttachments.list",
      "container.volumeSnapshotClasses.get",
      "container.volumeSnapshotClasses.list",
      "container.volumeSnapshotContents.get",
      "container.volumeSnapshotContents.getStatus",
      "container.volumeSnapshotContents.list",
      "container.volumeSnapshots.get",
      "container.volumeSnapshots.getStatus",
      "container.volumeSnapshots.list",
      "containeranalysis.notes.get",
      "containeranalysis.notes.getIamPolicy",
      "containeranalysis.notes.list",
      "containeranalysis.occurrences.get",
      "containeranalysis.occurrences.getIamPolicy",
      "containeranalysis.occurrences.list",
      "containersecurity.locations.get",
      "containersecurity.locations.list",
      "contentwarehouse.documentSchemas.get",
      "contentwarehouse.documentSchemas.list",
      "contentwarehouse.documents.get",
      "contentwarehouse.documents.getIamPolicy",
      "contentwarehouse.links.get",
      "contentwarehouse.operations.get",
      "contentwarehouse.rawDocuments.download",
      "contentwarehouse.ruleSets.get",
      "contentwarehouse.ruleSets.list",
      "contentwarehouse.schemas.get",
      "contentwarehouse.schemas.list",
      "contentwarehouse.synonymSets.get",
      "contentwarehouse.synonymSets.list",
      "datacatalog.catalogs.searchAll",
      "datacatalog.categories.getIamPolicy",
      "datacatalog.entries.get",
      "datacatalog.entries.getIamPolicy",
      "datacatalog.entries.list",
      "datacatalog.entryGroups.get",
      "datacatalog.entryGroups.getIamPolicy",
      "datacatalog.entryGroups.list",
      "datacatalog.operations.list",
      "datacatalog.relationships.list",
      "datacatalog.tagTemplates.get",
      "datacatalog.tagTemplates.getIamPolicy",
      "datacatalog.tagTemplates.getTag",
      "datacatalog.taxonomies.get",
      "datacatalog.taxonomies.getIamPolicy",
      "datacatalog.taxonomies.list",
      "dataconnectors.connectors.get",
      "dataconnectors.connectors.getIamPolicy",
      "dataconnectors.connectors.list",
      "dataconnectors.locations.get",
      "dataconnectors.locations.list",
      "dataconnectors.operations.get",
      "dataconnectors.operations.list",
      "dataflow.jobs.get",
      "dataflow.jobs.list",
      "dataflow.messages.list",
      "dataflow.metrics.get",
      "dataflow.snapshots.get",
      "dataflow.snapshots.list",
      "dataform.compilationResults.get",
      "dataform.compilationResults.list",
      "dataform.compilationResults.query",
      "dataform.locations.get",
      "dataform.locations.list",
      "dataform.releaseConfigs.get",
      "dataform.releaseConfigs.list",
      "dataform.repositories.computeAccessTokenStatus",
      "dataform.repositories.fetchHistory",
      "dataform.repositories.fetchRemoteBranches",
      "dataform.repositories.get",
      "dataform.repositories.getIamPolicy",
      "dataform.repositories.list",
      "dataform.repositories.queryDirectoryContents",
      "dataform.repositories.readFile",
      "dataform.workflowConfigs.get",
      "dataform.workflowConfigs.list",
      "dataform.workflowInvocations.get",
      "dataform.workflowInvocations.list",
      "dataform.workflowInvocations.query",
      "dataform.workspaces.fetchFileDiff",
      "dataform.workspaces.fetchFileGitStatuses",
      "dataform.workspaces.fetchGitAheadBehind",
      "dataform.workspaces.get",
      "dataform.workspaces.getIamPolicy",
      "dataform.workspaces.list",
      "dataform.workspaces.queryDirectoryContents",
      "dataform.workspaces.readFile",
      "datafusion.artifacts.get",
      "datafusion.artifacts.list",
      "datafusion.instances.get",
      "datafusion.instances.getIamPolicy",
      "datafusion.instances.list",
      "datafusion.instances.runtime",
      "datafusion.locations.get",
      "datafusion.locations.list",
      "datafusion.operations.get",
      "datafusion.operations.list",
      "datafusion.pipelineConnections.get",
      "datafusion.pipelineConnections.list",
      "datafusion.pipelines.get",
      "datafusion.pipelines.list",
      "datafusion.profiles.get",
      "datafusion.profiles.list",
      "datafusion.secureKeys.list",
      "datalabeling.annotateddatasets.get",
      "datalabeling.annotateddatasets.label",
      "datalabeling.annotateddatasets.list",
      "datalabeling.annotationspecsets.get",
      "datalabeling.annotationspecsets.list",
      "datalabeling.dataitems.get",
      "datalabeling.dataitems.list",
      "datalabeling.datasets.export",
      "datalabeling.datasets.get",
      "datalabeling.datasets.list",
      "datalabeling.examples.get",
      "datalabeling.examples.list",
      "datalabeling.instructions.get",
      "datalabeling.instructions.list",
      "datalabeling.operations.get",
      "datalabeling.operations.list",
      "datalineage.events.get",
      "datalineage.events.list",
      "datalineage.locations.searchLinks",
      "datalineage.operations.get",
      "datalineage.processes.get",
      "datalineage.processes.list",
      "datalineage.runs.get",
      "datalineage.runs.list",
      "datamigration.connectionprofiles.get",
      "datamigration.connectionprofiles.getIamPolicy",
      "datamigration.connectionprofiles.list",
      "datamigration.conversionworkspaces.commit",
      "datamigration.conversionworkspaces.get",
      "datamigration.conversionworkspaces.getIamPolicy",
      "datamigration.conversionworkspaces.list",
      "datamigration.locations.fetchStaticIps",
      "datamigration.locations.get",
      "datamigration.locations.list",
      "datamigration.mappingrules.getIamPolicy",
      "datamigration.migrationjobs.get",
      "datamigration.migrationjobs.getIamPolicy",
      "datamigration.migrationjobs.list",
      "datamigration.migrationjobs.verify",
      "datamigration.operations.get",
      "datamigration.operations.list",
      "datamigration.privateconnections.get",
      "datamigration.privateconnections.getIamPolicy",
      "datamigration.privateconnections.list",
      "datapipelines.jobs.list",
      "datapipelines.pipelines.get",
      "datapipelines.pipelines.list",
      "dataplex.assetActions.list",
      "dataplex.assets.get",
      "dataplex.assets.getIamPolicy",
      "dataplex.assets.list",
      "dataplex.assets.readData",
      "dataplex.content.get",
      "dataplex.content.getIamPolicy",
      "dataplex.content.list",
      "dataplex.dataAttributeBindings.get",
      "dataplex.dataAttributeBindings.getIamPolicy",
      "dataplex.dataAttributeBindings.list",
      "dataplex.dataAttributes.get",
      "dataplex.dataAttributes.getIamPolicy",
      "dataplex.dataAttributes.list",
      "dataplex.dataTaxonomies.get",
      "dataplex.dataTaxonomies.getIamPolicy",
      "dataplex.dataTaxonomies.list",
      "dataplex.datascans.get",
      "dataplex.datascans.getData",
      "dataplex.datascans.getIamPolicy",
      "dataplex.datascans.list",
      "dataplex.entities.get",
      "dataplex.entities.list",
      "dataplex.environments.get",
      "dataplex.environments.getIamPolicy",
      "dataplex.environments.list",
      "dataplex.lakeActions.list",
      "dataplex.lakes.get",
      "dataplex.lakes.getIamPolicy",
      "dataplex.lakes.list",
      "dataplex.locations.get",
      "dataplex.locations.list",
      "dataplex.operations.get",
      "dataplex.operations.list",
      "dataplex.partitions.get",
      "dataplex.partitions.list",
      "dataplex.tasks.get",
      "dataplex.tasks.getIamPolicy",
      "dataplex.tasks.list",
      "dataplex.zoneActions.list",
      "dataplex.zones.get",
      "dataplex.zones.getIamPolicy",
      "dataplex.zones.list",
      "dataproc.agents.get",
      "dataproc.agents.list",
      "dataproc.autoscalingPolicies.get",
      "dataproc.autoscalingPolicies.getIamPolicy",
      "dataproc.autoscalingPolicies.list",
      "dataproc.autoscalingPolicies.use",
      "dataproc.batches.get",
      "dataproc.batches.list",
      "dataproc.clusters.get",
      "dataproc.clusters.getIamPolicy",
      "dataproc.clusters.list",
      "dataproc.jobs.get",
      "dataproc.jobs.getIamPolicy",
      "dataproc.jobs.list",
      "dataproc.nodeGroups.get",
      "dataproc.operations.get",
      "dataproc.operations.getIamPolicy",
      "dataproc.operations.list",
      "dataproc.tasks.listInvalidatedLeases",
      "dataproc.workflowTemplates.get",
      "dataproc.workflowTemplates.getIamPolicy",
      "dataproc.workflowTemplates.list",
      "dataprocessing.datasources.get",
      "dataprocessing.datasources.list",
      "dataprocessing.featurecontrols.list",
      "dataprocessing.groupcontrols.get",
      "dataprocessing.groupcontrols.list",
      "datastore.databases.get",
      "datastore.databases.getMetadata",
      "datastore.databases.list",
      "datastore.databases.listEffectiveTags",
      "datastore.databases.listTagBindings",
      "datastore.entities.get",
      "datastore.entities.list",
      "datastore.indexes.get",
      "datastore.indexes.list",
      "datastore.keyVisualizerScans.get",
      "datastore.keyVisualizerScans.list",
      "datastore.namespaces.get",
      "datastore.namespaces.list",
      "datastore.operations.get",
      "datastore.operations.list",
      "datastore.statistics.get",
      "datastore.statistics.list",
      "datastream.connectionProfiles.destinationTypes",
      "datastream.connectionProfiles.discover",
      "datastream.connectionProfiles.get",
      "datastream.connectionProfiles.getIamPolicy",
      "datastream.connectionProfiles.list",
      "datastream.connectionProfiles.listEffectiveTags",
      "datastream.connectionProfiles.listStaticServiceIps",
      "datastream.connectionProfiles.listTagBindings",
      "datastream.connectionProfiles.sourceTypes",
      "datastream.locations.fetchStaticIps",
      "datastream.locations.get",
      "datastream.locations.list",
      "datastream.objects.get",
      "datastream.objects.list",
      "datastream.operations.get",
      "datastream.operations.list",
      "datastream.privateConnections.get",
      "datastream.privateConnections.getIamPolicy",
      "datastream.privateConnections.list",
      "datastream.privateConnections.listEffectiveTags",
      "datastream.privateConnections.listTagBindings",
      "datastream.routes.get",
      "datastream.routes.getIamPolicy",
      "datastream.routes.list",
      "datastream.streams.fetchErrors",
      "datastream.streams.get",
      "datastream.streams.getIamPolicy",
      "datastream.streams.list",
      "datastream.streams.listEffectiveTags",
      "datastream.streams.listTagBindings",
      "datastudio.datasources.get",
      "datastudio.datasources.getIamPolicy",
      "datastudio.datasources.search",
      "datastudio.reports.get",
      "datastudio.reports.getIamPolicy",
      "datastudio.reports.search",
      "datastudio.workspaces.get",
      "datastudio.workspaces.getIamPolicy",
      "datastudio.workspaces.search",
      "deploymentmanager.compositeTypes.get",
      "deploymentmanager.compositeTypes.list",
      "deploymentmanager.deployments.get",
      "deploymentmanager.deployments.list",
      "deploymentmanager.manifests.get",
      "deploymentmanager.manifests.list",
      "deploymentmanager.operations.get",
      "deploymentmanager.operations.list",
      "deploymentmanager.resources.get",
      "deploymentmanager.resources.list",
      "deploymentmanager.typeProviders.get",
      "deploymentmanager.typeProviders.getType",
      "deploymentmanager.typeProviders.list",
      "deploymentmanager.typeProviders.listTypes",
      "deploymentmanager.types.get",
      "deploymentmanager.types.list",
      "dialogflow.agents.export",
      "dialogflow.agents.get",
      "dialogflow.agents.list",
      "dialogflow.agents.search",
      "dialogflow.agents.searchResources",
      "dialogflow.answerrecords.get",
      "dialogflow.answerrecords.list",
      "dialogflow.callMatchers.list",
      "dialogflow.changelogs.get",
      "dialogflow.changelogs.list",
      "dialogflow.contexts.get",
      "dialogflow.contexts.list",
      "dialogflow.conversationDatasets.get",
      "dialogflow.conversationDatasets.list",
      "dialogflow.conversationModels.get",
      "dialogflow.conversationModels.list",
      "dialogflow.conversationProfiles.get",
      "dialogflow.conversationProfiles.list",
      "dialogflow.conversations.get",
      "dialogflow.conversations.list",
      "dialogflow.deployments.get",
      "dialogflow.deployments.list",
      "dialogflow.documents.get",
      "dialogflow.documents.list",
      "dialogflow.entityTypes.get",
      "dialogflow.entityTypes.list",
      "dialogflow.environments.get",
      "dialogflow.environments.getHistory",
      "dialogflow.environments.list",
      "dialogflow.environments.lookupHistory",
      "dialogflow.experiments.get",
      "dialogflow.experiments.list",
      "dialogflow.flows.get",
      "dialogflow.flows.list",
      "dialogflow.fulfillments.get",
      "dialogflow.integrations.get",
      "dialogflow.integrations.list",
      "dialogflow.intents.get",
      "dialogflow.intents.list",
      "dialogflow.knowledgeBases.get",
      "dialogflow.knowledgeBases.list",
      "dialogflow.messages.list",
      "dialogflow.modelEvaluations.get",
      "dialogflow.modelEvaluations.list",
      "dialogflow.operations.get",
      "dialogflow.pages.get",
      "dialogflow.pages.list",
      "dialogflow.participants.get",
      "dialogflow.participants.list",
      "dialogflow.participants.suggest",
      "dialogflow.phoneNumberOrders.get",
      "dialogflow.phoneNumberOrders.list",
      "dialogflow.phoneNumbers.list",
      "dialogflow.securitySettings.get",
      "dialogflow.securitySettings.list",
      "dialogflow.sessionEntityTypes.get",
      "dialogflow.sessionEntityTypes.list",
      "dialogflow.sessions.detectIntent",
      "dialogflow.sessions.streamingDetectIntent",
      "dialogflow.smartMessagingEntries.get",
      "dialogflow.smartMessagingEntries.list",
      "dialogflow.testcases.calculateCoverage",
      "dialogflow.testcases.export",
      "dialogflow.testcases.get",
      "dialogflow.testcases.list",
      "dialogflow.transitionRouteGroups.get",
      "dialogflow.transitionRouteGroups.list",
      "dialogflow.versions.get",
      "dialogflow.versions.list",
      "dialogflow.webhooks.get",
      "dialogflow.webhooks.list",
      "discoveryengine.completionConfigs.get",
      "discoveryengine.controls.get",
      "discoveryengine.controls.list",
      "discoveryengine.conversations.get",
      "discoveryengine.conversations.list",
      "discoveryengine.dataStores.completeQuery",
      "discoveryengine.dataStores.get",
      "discoveryengine.dataStores.list",
      "discoveryengine.documents.get",
      "discoveryengine.documents.list",
      "discoveryengine.engines.get",
      "discoveryengine.engines.list",
      "discoveryengine.models.get",
      "discoveryengine.models.list",
      "discoveryengine.operations.get",
      "discoveryengine.operations.list",
      "discoveryengine.projects.get",
      "discoveryengine.schemas.get",
      "discoveryengine.schemas.list",
      "discoveryengine.servingConfigs.get",
      "discoveryengine.servingConfigs.list",
      "discoveryengine.servingConfigs.recommend",
      "discoveryengine.servingConfigs.search",
      "discoveryengine.siteSearchEngines.get",
      "discoveryengine.targetSites.get",
      "discoveryengine.targetSites.list",
      "discoveryengine.userEvents.fetchStats",
      "discoveryengine.widgetConfigs.get",
      "dlp.analyzeRiskTemplates.get",
      "dlp.analyzeRiskTemplates.list",
      "dlp.columnDataProfiles.get",
      "dlp.columnDataProfiles.list",
      "dlp.deidentifyTemplates.get",
      "dlp.deidentifyTemplates.list",
      "dlp.estimates.get",
      "dlp.estimates.list",
      "dlp.inspectFindings.list",
      "dlp.inspectTemplates.get",
      "dlp.inspectTemplates.list",
      "dlp.jobTriggers.get",
      "dlp.jobTriggers.list",
      "dlp.jobs.get",
      "dlp.jobs.list",
      "dlp.locations.get",
      "dlp.locations.list",
      "dlp.projectDataProfiles.get",
      "dlp.projectDataProfiles.list",
      "dlp.storedInfoTypes.get",
      "dlp.storedInfoTypes.list",
      "dlp.subscriptions.get",
      "dlp.subscriptions.list",
      "dlp.tableDataProfiles.get",
      "dlp.tableDataProfiles.list",
      "dns.changes.get",
      "dns.changes.list",
      "dns.dnsKeys.get",
      "dns.dnsKeys.list",
      "dns.managedZoneOperations.get",
      "dns.managedZoneOperations.list",
      "dns.managedZones.get",
      "dns.managedZones.getIamPolicy",
      "dns.managedZones.list",
      "dns.policies.get",
      "dns.policies.getIamPolicy",
      "dns.policies.list",
      "dns.projects.get",
      "dns.resourceRecordSets.get",
      "dns.resourceRecordSets.list",
      "dns.responsePolicies.get",
      "dns.responsePolicies.list",
      "dns.responsePolicyRules.get",
      "dns.responsePolicyRules.list",
      "documentai.dataLabelingJobs.list",
      "documentai.datasetSchemas.get",
      "documentai.datasets.get",
      "documentai.datasets.getDocuments",
      "documentai.datasets.listDocuments",
      "documentai.evaluationDocuments.get",
      "documentai.evaluations.get",
      "documentai.evaluations.list",
      "documentai.humanReviewConfigs.get",
      "documentai.humanReviewConfigs.review",
      "documentai.labelerPools.get",
      "documentai.labelerPools.list",
      "documentai.locations.get",
      "documentai.locations.list",
      "documentai.operations.getLegacy",
      "documentai.processedDocumentsSets.get",
      "documentai.processedDocumentsSets.getDocuments",
      "documentai.processedDocumentsSets.listDocuments",
      "documentai.processorTypes.get",
      "documentai.processorTypes.list",
      "documentai.processorVersions.get",
      "documentai.processorVersions.list",
      "documentai.processorVersions.processBatch",
      "documentai.processorVersions.processOnline",
      "documentai.processors.fetchHumanReviewDetails",
      "documentai.processors.get",
      "documentai.processors.list",
      "documentai.processors.processBatch",
      "documentai.processors.processOnline",
      "domains.locations.get",
      "domains.locations.list",
      "domains.operations.get",
      "domains.operations.list",
      "domains.registrations.get",
      "domains.registrations.getIamPolicy",
      "domains.registrations.list",
      "domains.registrations.listEffectiveTags",
      "domains.registrations.listTagBindings",
      "earthengine.assets.get",
      "earthengine.assets.getIamPolicy",
      "earthengine.assets.list",
      "earthengine.config.get",
      "earthengine.filmstripthumbnails.get",
      "earthengine.maps.get",
      "earthengine.operations.get",
      "earthengine.operations.list",
      "earthengine.tables.get",
      "earthengine.thumbnails.get",
      "earthengine.videothumbnails.get",
      "edgecontainer.clusters.generateAccessToken",
      "edgecontainer.clusters.get",
      "edgecontainer.clusters.getIamPolicy",
      "edgecontainer.clusters.list",
      "edgecontainer.locations.get",
      "edgecontainer.locations.list",
      "edgecontainer.machines.get",
      "edgecontainer.machines.getIamPolicy",
      "edgecontainer.machines.list",
      "edgecontainer.nodePools.get",
      "edgecontainer.nodePools.getIamPolicy",
      "edgecontainer.nodePools.list",
      "edgecontainer.operations.get",
      "edgecontainer.operations.list",
      "edgecontainer.vpnConnections.get",
      "edgecontainer.vpnConnections.getIamPolicy",
      "edgecontainer.vpnConnections.list",
      "edgenetwork.interconnectAttachments.get",
      "edgenetwork.interconnectAttachments.getIamPolicy",
      "edgenetwork.interconnectAttachments.list",
      "edgenetwork.interconnects.get",
      "edgenetwork.interconnects.getDiagnostics",
      "edgenetwork.interconnects.getIamPolicy",
      "edgenetwork.interconnects.list",
      "edgenetwork.locations.get",
      "edgenetwork.locations.list",
      "edgenetwork.networks.get",
      "edgenetwork.networks.getIamPolicy",
      "edgenetwork.networks.getStatus",
      "edgenetwork.networks.list",
      "edgenetwork.operations.get",
      "edgenetwork.operations.list",
      "edgenetwork.routers.get",
      "edgenetwork.routers.getIamPolicy",
      "edgenetwork.routers.getRouterStatus",
      "edgenetwork.routers.list",
      "edgenetwork.routes.get",
      "edgenetwork.routes.list",
      "edgenetwork.subnetworks.get",
      "edgenetwork.subnetworks.getIamPolicy",
      "edgenetwork.subnetworks.getStatus",
      "edgenetwork.subnetworks.list",
      "edgenetwork.zones.get",
      "edgenetwork.zones.list",
      "enterpriseknowledgegraph.cloudKnowledgeGraphEntities.lookup",
      "enterpriseknowledgegraph.cloudKnowledgeGraphEntities.search",
      "enterpriseknowledgegraph.entityReconciliationJobs.get",
      "enterpriseknowledgegraph.entityReconciliationJobs.list",
      "enterpriseknowledgegraph.publicKnowledgeGraphEntities.lookup",
      "enterpriseknowledgegraph.publicKnowledgeGraphEntities.search",
      "errorreporting.applications.list",
      "errorreporting.errorEvents.list",
      "errorreporting.groupMetadata.get",
      "errorreporting.groups.list",
      "essentialcontacts.contacts.get",
      "essentialcontacts.contacts.list",
      "eventarc.channelConnections.get",
      "eventarc.channelConnections.getIamPolicy",
      "eventarc.channelConnections.list",
      "eventarc.channels.get",
      "eventarc.channels.getIamPolicy",
      "eventarc.channels.list",
      "eventarc.googleChannelConfigs.get",
      "eventarc.locations.get",
      "eventarc.locations.list",
      "eventarc.operations.get",
      "eventarc.operations.list",
      "eventarc.providers.get",
      "eventarc.providers.list",
      "eventarc.triggers.get",
      "eventarc.triggers.getIamPolicy",
      "eventarc.triggers.list",
      "fcmdata.deliverydata.list",
      "file.backups.get",
      "file.backups.list",
      "file.backups.listEffectiveTags",
      "file.backups.listTagBindings",
      "file.instances.get",
      "file.instances.list",
      "file.instances.listEffectiveTags",
      "file.instances.listTagBindings",
      "file.locations.get",
      "file.locations.list",
      "file.operations.get",
      "file.operations.list",
      "file.snapshots.get",
      "file.snapshots.list",
      "file.snapshots.listEffectiveTags",
      "file.snapshots.listTagBindings",
      "firebase.billingPlans.get",
      "firebase.clients.get",
      "firebase.clients.list",
      "firebase.links.list",
      "firebase.playLinks.get",
      "firebase.playLinks.list",
      "firebase.projects.get",
      "firebaseabt.experimentresults.get",
      "firebaseabt.experiments.get",
      "firebaseabt.experiments.list",
      "firebaseabt.projectmetadata.get",
      "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze",
      "firebaseappcheck.appAttestConfig.get",
      "firebaseappcheck.debugTokens.get",
      "firebaseappcheck.deviceCheckConfig.get",
      "firebaseappcheck.playIntegrityConfig.get",
      "firebaseappcheck.recaptchaEnterpriseConfig.get",
      "firebaseappcheck.recaptchaV3Config.get",
      "firebaseappcheck.safetyNetConfig.get",
      "firebaseappcheck.services.get",
      "firebaseappdistro.groups.list",
      "firebaseappdistro.releases.list",
      "firebaseappdistro.testers.list",
      "firebaseauth.configs.get",
      "firebaseauth.users.get",
      "firebasecrash.reports.get",
      "firebasecrashlytics.config.get",
      "firebasecrashlytics.data.get",
      "firebasecrashlytics.issues.get",
      "firebasecrashlytics.issues.list",
      "firebasecrashlytics.sessions.get",
      "firebasedatabase.instances.get",
      "firebasedatabase.instances.list",
      "firebasedynamiclinks.destinations.list",
      "firebasedynamiclinks.domains.get",
      "firebasedynamiclinks.domains.list",
      "firebasedynamiclinks.links.get",
      "firebasedynamiclinks.links.list",
      "firebasedynamiclinks.stats.get",
      "firebaseextensions.configs.list",
      "firebaseextensionspublisher.extensions.get",
      "firebaseextensionspublisher.extensions.list",
      "firebasehosting.sites.get",
      "firebasehosting.sites.list",
      "firebaseinappmessaging.campaigns.get",
      "firebaseinappmessaging.campaigns.list",
      "firebasemessagingcampaigns.campaigns.get",
      "firebasemessagingcampaigns.campaigns.list",
      "firebaseml.models.get",
      "firebaseml.models.list",
      "firebaseml.modelversions.get",
      "firebaseml.modelversions.list",
      "firebasenotifications.messages.get",
      "firebasenotifications.messages.list",
      "firebaseperformance.data.get",
      "firebaserules.releases.get",
      "firebaserules.releases.getExecutable",
      "firebaserules.releases.list",
      "firebaserules.rulesets.list",
      "firebaserules.rulesets.test",
      "firebasestorage.buckets.get",
      "firebasestorage.buckets.list",
      "fleetengine.deliveryvehicles.get",
      "fleetengine.deliveryvehicles.list",
      "fleetengine.tasks.get",
      "fleetengine.tasks.list",
      "fleetengine.tasks.searchWithTrackingId",
      "fleetengine.tasktrackinginfo.get",
      "fleetengine.trips.get",
      "fleetengine.trips.search",
      "fleetengine.vehicles.get",
      "fleetengine.vehicles.list",
      "fleetengine.vehicles.search",
      "fleetengine.vehicles.searchFuzzed",
      "gameservices.gameServerClusters.get",
      "gameservices.gameServerClusters.list",
      "gameservices.gameServerConfigs.get",
      "gameservices.gameServerConfigs.list",
      "gameservices.gameServerDeployments.get",
      "gameservices.gameServerDeployments.list",
      "gameservices.locations.get",
      "gameservices.locations.list",
      "gameservices.operations.get",
      "gameservices.operations.list",
      "gameservices.realms.get",
      "gameservices.realms.list",
      "gcp.redisenterprise.com/databases.get",
      "gcp.redisenterprise.com/databases.list",
      "gcp.redisenterprise.com/subscriptions.get",
      "gcp.redisenterprise.com/subscriptions.list",
      "genomics.datasets.get",
      "genomics.datasets.list",
      "genomics.operations.get",
      "genomics.operations.list",
      "gkebackup.backupPlans.get",
      "gkebackup.backupPlans.getIamPolicy",
      "gkebackup.backupPlans.list",
      "gkebackup.backups.get",
      "gkebackup.backups.list",
      "gkebackup.locations.get",
      "gkebackup.locations.list",
      "gkebackup.operations.get",
      "gkebackup.operations.list",
      "gkebackup.restorePlans.get",
      "gkebackup.restorePlans.getIamPolicy",
      "gkebackup.restorePlans.list",
      "gkebackup.restores.get",
      "gkebackup.restores.list",
      "gkebackup.volumeBackups.get",
      "gkebackup.volumeBackups.list",
      "gkebackup.volumeRestores.get",
      "gkebackup.volumeRestores.list",
      "gkehub.features.get",
      "gkehub.features.getIamPolicy",
      "gkehub.features.list",
      "gkehub.fleet.get",
      "gkehub.gateway.get",
      "gkehub.gateway.getIamPolicy",
      "gkehub.locations.get",
      "gkehub.locations.list",
      "gkehub.membershipbindings.get",
      "gkehub.membershipbindings.list",
      "gkehub.memberships.generateConnectManifest",
      "gkehub.memberships.get",
      "gkehub.memberships.getIamPolicy",
      "gkehub.memberships.list",
      "gkehub.namespaces.get",
      "gkehub.namespaces.list",
      "gkehub.operations.get",
      "gkehub.operations.list",
      "gkehub.rbacrolebindings.get",
      "gkehub.rbacrolebindings.list",
      "gkehub.scopes.get",
      "gkehub.scopes.getIamPolicy",
      "gkehub.scopes.list",
      "gkemulticloud.attachedClusters.generateInstallManifest",
      "gkemulticloud.attachedClusters.get",
      "gkemulticloud.attachedClusters.list",
      "gkemulticloud.attachedServerConfigs.get",
      "gkemulticloud.awsClusters.generateAccessToken",
      "gkemulticloud.awsClusters.get",
      "gkemulticloud.awsClusters.list",
      "gkemulticloud.awsNodePools.get",
      "gkemulticloud.awsNodePools.list",
      "gkemulticloud.awsServerConfigs.get",
      "gkemulticloud.azureClients.get",
      "gkemulticloud.azureClients.list",
      "gkemulticloud.azureClusters.generateAccessToken",
      "gkemulticloud.azureClusters.get",
      "gkemulticloud.azureClusters.list",
      "gkemulticloud.azureNodePools.get",
      "gkemulticloud.azureNodePools.list",
      "gkemulticloud.azureServerConfigs.get",
      "gkemulticloud.operations.get",
      "gkemulticloud.operations.list",
      "gkemulticloud.operations.wait",
      "gkeonprem.bareMetalAdminClusters.connect",
      "gkeonprem.bareMetalAdminClusters.get",
      "gkeonprem.bareMetalAdminClusters.getIamPolicy",
      "gkeonprem.bareMetalAdminClusters.list",
      "gkeonprem.bareMetalAdminClusters.queryVersionConfig",
      "gkeonprem.bareMetalClusters.get",
      "gkeonprem.bareMetalClusters.getIamPolicy",
      "gkeonprem.bareMetalClusters.list",
      "gkeonprem.bareMetalClusters.queryVersionConfig",
      "gkeonprem.bareMetalNodePools.get",
      "gkeonprem.bareMetalNodePools.getIamPolicy",
      "gkeonprem.bareMetalNodePools.list",
      "gkeonprem.locations.get",
      "gkeonprem.locations.list",
      "gkeonprem.operations.get",
      "gkeonprem.operations.list",
      "gkeonprem.vmwareAdminClusters.connect",
      "gkeonprem.vmwareAdminClusters.get",
      "gkeonprem.vmwareAdminClusters.getIamPolicy",
      "gkeonprem.vmwareAdminClusters.list",
      "gkeonprem.vmwareClusters.get",
      "gkeonprem.vmwareClusters.getIamPolicy",
      "gkeonprem.vmwareClusters.list",
      "gkeonprem.vmwareClusters.queryVersionConfig",
      "gkeonprem.vmwareNodePools.get",
      "gkeonprem.vmwareNodePools.getIamPolicy",
      "gkeonprem.vmwareNodePools.list",
      "gsuiteaddons.authorizations.get",
      "gsuiteaddons.deployments.get",
      "gsuiteaddons.deployments.list",
      "healthcare.annotationStores.evaluate",
      "healthcare.annotationStores.export",
      "healthcare.annotationStores.get",
      "healthcare.annotationStores.getIamPolicy",
      "healthcare.annotationStores.list",
      "healthcare.annotations.get",
      "healthcare.annotations.list",
      "healthcare.attributeDefinitions.get",
      "healthcare.attributeDefinitions.list",
      "healthcare.consentArtifacts.get",
      "healthcare.consentArtifacts.list",
      "healthcare.consentStores.checkDataAccess",
      "healthcare.consentStores.evaluateUserConsents",
      "healthcare.consentStores.get",
      "healthcare.consentStores.getIamPolicy",
      "healthcare.consentStores.list",
      "healthcare.consentStores.queryAccessibleData",
      "healthcare.consents.get",
      "healthcare.consents.list",
      "healthcare.datasets.get",
      "healthcare.datasets.getIamPolicy",
      "healthcare.datasets.list",
      "healthcare.dicomStores.dicomWebRead",
      "healthcare.dicomStores.export",
      "healthcare.dicomStores.get",
      "healthcare.dicomStores.getIamPolicy",
      "healthcare.dicomStores.list",
      "healthcare.fhirResources.get",
      "healthcare.fhirResources.translateConceptMap",
      "healthcare.fhirStores.executeBundle",
      "healthcare.fhirStores.export",
      "healthcare.fhirStores.get",
      "healthcare.fhirStores.getIamPolicy",
      "healthcare.fhirStores.list",
      "healthcare.fhirStores.searchResources",
      "healthcare.hl7V2Messages.get",
      "healthcare.hl7V2Messages.list",
      "healthcare.hl7V2Stores.get",
      "healthcare.hl7V2Stores.getIamPolicy",
      "healthcare.hl7V2Stores.list",
      "healthcare.locations.get",
      "healthcare.locations.list",
      "healthcare.nlpservice.analyzeEntities",
      "healthcare.operations.get",
      "healthcare.operations.list",
      "healthcare.userDataMappings.get",
      "healthcare.userDataMappings.list",
      "iam.denypolicies.get",
      "iam.denypolicies.list",
      "iam.googleapis.com/workforcePoolProviderKeys.get",
      "iam.googleapis.com/workforcePoolProviderKeys.list",
      "iam.googleapis.com/workforcePoolProviders.get",
      "iam.googleapis.com/workforcePoolProviders.list",
      "iam.googleapis.com/workforcePools.get",
      "iam.googleapis.com/workforcePools.getIamPolicy",
      "iam.googleapis.com/workforcePools.list",
      "iam.googleapis.com/workloadIdentityPoolProviderKeys.get",
      "iam.googleapis.com/workloadIdentityPoolProviderKeys.list",
      "iam.googleapis.com/workloadIdentityPoolProviders.get",
      "iam.googleapis.com/workloadIdentityPoolProviders.list",
      "iam.googleapis.com/workloadIdentityPools.get",
      "iam.googleapis.com/workloadIdentityPools.list",
      "iam.roles.get",
      "iam.roles.list",
      "iam.serviceAccountKeys.get",
      "iam.serviceAccountKeys.list",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.getIamPolicy",
      "iam.serviceAccounts.list",
      "iap.projects.getSettings",
      "iap.tunnelDestGroups.get",
      "iap.tunnelDestGroups.list",
      "iap.web.getSettings",
      "iap.webServiceVersions.getSettings",
      "iap.webServices.getSettings",
      "iap.webTypes.getSettings",
      "identitytoolkit.tenants.get",
      "identitytoolkit.tenants.getIamPolicy",
      "identitytoolkit.tenants.list",
      "ids.endpoints.get",
      "ids.endpoints.getIamPolicy",
      "ids.endpoints.list",
      "ids.locations.get",
      "ids.locations.list",
      "ids.operations.get",
      "ids.operations.list",
      "integrations.apigeeAuthConfigs.get",
      "integrations.apigeeAuthConfigs.list",
      "integrations.apigeeCertificates.get",
      "integrations.apigeeCertificates.list",
      "integrations.apigeeExecutions.list",
      "integrations.apigeeIntegrationVers.get",
      "integrations.apigeeIntegrationVers.list",
      "integrations.apigeeIntegrations.list",
      "integrations.apigeeSfdcChannels.get",
      "integrations.apigeeSfdcChannels.list",
      "integrations.apigeeSfdcInstances.get",
      "integrations.apigeeSfdcInstances.list",
      "integrations.apigeeSuspensions.list",
      "integrations.authConfigs.get",
      "integrations.authConfigs.list",
      "integrations.certificates.get",
      "integrations.certificates.list",
      "integrations.executions.get",
      "integrations.executions.list",
      "integrations.integrationVersions.get",
      "integrations.integrationVersions.list",
      "integrations.integrations.get",
      "integrations.integrations.list",
      "integrations.securityAuthConfigs.get",
      "integrations.securityAuthConfigs.list",
      "integrations.securityExecutions.get",
      "integrations.securityExecutions.list",
      "integrations.securityIntegTempVers.get",
      "integrations.securityIntegTempVers.list",
      "integrations.securityIntegrationVers.get",
      "integrations.securityIntegrationVers.list",
      "integrations.securityIntegrations.list",
      "integrations.sfdcChannels.get",
      "integrations.sfdcChannels.list",
      "integrations.sfdcInstances.get",
      "integrations.sfdcInstances.list",
      "integrations.suspensions.list",
      "issuerswitch.accountManagerTransactions.list",
      "issuerswitch.complaintTransactions.list",
      "issuerswitch.financialTransactions.list",
      "issuerswitch.issuerParticipants.get",
      "issuerswitch.mandateTransactions.list",
      "issuerswitch.metadataTransactions.list",
      "issuerswitch.operations.get",
      "issuerswitch.operations.list",
      "issuerswitch.operations.wait",
      "issuerswitch.ruleMetadata.list",
      "issuerswitch.ruleMetadataValues.list",
      "issuerswitch.rules.list",
      "krmapihosting.krmApiHosts.get",
      "krmapihosting.krmApiHosts.getIamPolicy",
      "krmapihosting.krmApiHosts.list",
      "krmapihosting.locations.get",
      "krmapihosting.locations.list",
      "krmapihosting.operations.get",
      "krmapihosting.operations.list",
      "lifesciences.operations.get",
      "lifesciences.operations.list",
      "livestream.channels.get",
      "livestream.channels.list",
      "livestream.events.get",
      "livestream.events.list",
      "livestream.inputs.get",
      "livestream.inputs.list",
      "livestream.locations.get",
      "livestream.locations.list",
      "livestream.operations.get",
      "livestream.operations.list",
      "logging.buckets.copyLogEntries",
      "logging.buckets.get",
      "logging.buckets.list",
      "logging.exclusions.get",
      "logging.exclusions.list",
      "logging.links.get",
      "logging.links.list",
      "logging.locations.get",
      "logging.locations.list",
      "logging.logEntries.download",
      "logging.logEntries.list",
      "logging.logMetrics.get",
      "logging.logMetrics.list",
      "logging.logServiceIndexes.list",
      "logging.logServices.list",
      "logging.logs.list",
      "logging.notificationRules.get",
      "logging.notificationRules.list",
      "logging.operations.get",
      "logging.operations.list",
      "logging.queries.create",
      "logging.queries.delete",
      "logging.queries.get",
      "logging.queries.list",
      "logging.queries.listShared",
      "logging.queries.update",
      "logging.settings.get",
      "logging.sinks.get",
      "logging.sinks.list",
      "logging.usage.get",
      "logging.views.get",
      "logging.views.list",
      "logging.views.listLogs",
      "logging.views.listResourceKeys",
      "logging.views.listResourceValues",
      "looker.backups.get",
      "looker.backups.list",
      "looker.instances.get",
      "looker.instances.list",
      "looker.instances.login",
      "looker.locations.get",
      "looker.locations.list",
      "looker.operations.get",
      "looker.operations.list",
      "managedidentities.backups.get",
      "managedidentities.backups.getIamPolicy",
      "managedidentities.backups.list",
      "managedidentities.domains.checkMigrationPermission",
      "managedidentities.domains.get",
      "managedidentities.domains.getIamPolicy",
      "managedidentities.domains.list",
      "managedidentities.domains.listEffectiveTags",
      "managedidentities.domains.listTagBindings",
      "managedidentities.domains.validateTrust",
      "managedidentities.locations.get",
      "managedidentities.locations.list",
      "managedidentities.operations.get",
      "managedidentities.operations.list",
      "managedidentities.peerings.get",
      "managedidentities.peerings.getIamPolicy",
      "managedidentities.peerings.list",
      "managedidentities.sqlintegrations.get",
      "managedidentities.sqlintegrations.list",
      "mapsadmin.clientMaps.get",
      "mapsadmin.clientMaps.list",
      "mapsadmin.clientStyleSheetSnapshots.list",
      "mapsadmin.clientStyles.get",
      "mapsadmin.clientStyles.list",
      "mapsadmin.styleEditorConfigs.get",
      "mapsadmin.styleSnapshots.list",
      "mapsplatformdatasets.datasets.export",
      "mapsplatformdatasets.datasets.get",
      "mapsplatformdatasets.datasets.list",
      "memcache.instances.get",
      "memcache.instances.list",
      "memcache.locations.get",
      "memcache.locations.list",
      "memcache.operations.get",
      "memcache.operations.list",
      "meshconfig.projects.get",
      "metastore.backups.get",
      "metastore.backups.getIamPolicy",
      "metastore.backups.list",
      "metastore.backups.use",
      "metastore.databases.get",
      "metastore.databases.getIamPolicy",
      "metastore.databases.list",
      "metastore.federations.get",
      "metastore.federations.getIamPolicy",
      "metastore.federations.list",
      "metastore.imports.get",
      "metastore.imports.list",
      "metastore.locations.get",
      "metastore.locations.list",
      "metastore.operations.get",
      "metastore.operations.list",
      "metastore.services.export",
      "metastore.services.get",
      "metastore.services.getIamPolicy",
      "metastore.services.list",
      "metastore.tables.get",
      "metastore.tables.getIamPolicy",
      "metastore.tables.list",
      "migrationcenter.assets.get",
      "migrationcenter.assets.list",
      "migrationcenter.errorFrames.get",
      "migrationcenter.errorFrames.list",
      "migrationcenter.groups.get",
      "migrationcenter.groups.list",
      "migrationcenter.importDataFiles.get",
      "migrationcenter.importDataFiles.list",
      "migrationcenter.importJobs.get",
      "migrationcenter.importJobs.list",
      "migrationcenter.locations.get",
      "migrationcenter.locations.list",
      "migrationcenter.operations.get",
      "migrationcenter.operations.list",
      "migrationcenter.preferenceSets.get",
      "migrationcenter.preferenceSets.list",
      "migrationcenter.reportConfigs.get",
      "migrationcenter.reportConfigs.list",
      "migrationcenter.reports.get",
      "migrationcenter.reports.list",
      "migrationcenter.settings.get",
      "migrationcenter.sources.get",
      "migrationcenter.sources.list",
      "ml.jobs.get",
      "ml.jobs.getIamPolicy",
      "ml.jobs.list",
      "ml.locations.get",
      "ml.locations.list",
      "ml.models.get",
      "ml.models.getIamPolicy",
      "ml.models.list",
      "ml.models.predict",
      "ml.operations.get",
      "ml.operations.list",
      "ml.projects.getConfig",
      "ml.studies.get",
      "ml.studies.getIamPolicy",
      "ml.studies.list",
      "ml.trials.get",
      "ml.trials.list",
      "ml.versions.get",
      "ml.versions.list",
      "ml.versions.predict",
      "monitoring.alertPolicies.get",
      "monitoring.alertPolicies.list",
      "monitoring.dashboards.get",
      "monitoring.dashboards.list",
      "monitoring.groups.get",
      "monitoring.groups.list",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.notificationChannelDescriptors.get",
      "monitoring.notificationChannelDescriptors.list",
      "monitoring.notificationChannels.get",
      "monitoring.notificationChannels.list",
      "monitoring.publicWidgets.get",
      "monitoring.publicWidgets.list",
      "monitoring.services.get",
      "monitoring.services.list",
      "monitoring.slos.get",
      "monitoring.slos.list",
      "monitoring.snoozes.get",
      "monitoring.snoozes.list",
      "monitoring.timeSeries.list",
      "monitoring.uptimeCheckConfigs.get",
      "monitoring.uptimeCheckConfigs.list",
      "nestconsole.smarthomeProjects.get",
      "nestconsole.smarthomeVersions.get",
      "netapp.activeDirectories.get",
      "netapp.activeDirectories.list",
      "netapp.kmsConfigs.get",
      "netapp.kmsConfigs.list",
      "netapp.replications.get",
      "netapp.replications.list",
      "netapp.snapshots.get",
      "netapp.snapshots.list",
      "netapp.storagePools.get",
      "netapp.storagePools.list",
      "netapp.volumes.get",
      "netapp.volumes.list",
      "networkconnectivity.groups.get",
      "networkconnectivity.groups.getIamPolicy",
      "networkconnectivity.groups.list",
      "networkconnectivity.hubRouteTables.get",
      "networkconnectivity.hubRouteTables.getIamPolicy",
      "networkconnectivity.hubRouteTables.list",
      "networkconnectivity.hubRoutes.get",
      "networkconnectivity.hubRoutes.getIamPolicy",
      "networkconnectivity.hubRoutes.list",
      "networkconnectivity.hubs.get",
      "networkconnectivity.hubs.getIamPolicy",
      "networkconnectivity.hubs.list",
      "networkconnectivity.hubs.listSpokes",
      "networkconnectivity.internalRanges.get",
      "networkconnectivity.internalRanges.getIamPolicy",
      "networkconnectivity.internalRanges.list",
      "networkconnectivity.locations.get",
      "networkconnectivity.locations.list",
      "networkconnectivity.operations.get",
      "networkconnectivity.operations.list",
      "networkconnectivity.policyBasedRoutes.get",
      "networkconnectivity.policyBasedRoutes.getIamPolicy",
      "networkconnectivity.policyBasedRoutes.list",
      "networkconnectivity.serviceClasses.get",
      "networkconnectivity.serviceClasses.list",
      "networkconnectivity.serviceConnectionMaps.get",
      "networkconnectivity.serviceConnectionMaps.list",
      "networkconnectivity.serviceConnectionPolicies.get",
      "networkconnectivity.serviceConnectionPolicies.list",
      "networkconnectivity.spokes.get",
      "networkconnectivity.spokes.getIamPolicy",
      "networkconnectivity.spokes.list",
      "networkmanagement.config.get",
      "networkmanagement.connectivitytests.get",
      "networkmanagement.connectivitytests.getIamPolicy",
      "networkmanagement.connectivitytests.list",
      "networkmanagement.locations.get",
      "networkmanagement.locations.list",
      "networkmanagement.operations.get",
      "networkmanagement.operations.list",
      "networkmanagement.topologygraphs.read",
      "networksecurity.authorizationPolicies.get",
      "networksecurity.authorizationPolicies.getIamPolicy",
      "networksecurity.authorizationPolicies.list",
      "networksecurity.clientTlsPolicies.get",
      "networksecurity.clientTlsPolicies.getIamPolicy",
      "networksecurity.clientTlsPolicies.list",
      "networksecurity.firewallEndpointAssociations.get",
      "networksecurity.firewallEndpointAssociations.list",
      "networksecurity.firewallEndpoints.get",
      "networksecurity.firewallEndpoints.list",
      "networksecurity.gatewaySecurityPolicies.get",
      "networksecurity.gatewaySecurityPolicies.list",
      "networksecurity.gatewaySecurityPolicyRules.get",
      "networksecurity.gatewaySecurityPolicyRules.list",
      "networksecurity.locations.get",
      "networksecurity.locations.list",
      "networksecurity.operations.get",
      "networksecurity.operations.list",
      "networksecurity.securityProfileGroups.get",
      "networksecurity.securityProfileGroups.list",
      "networksecurity.securityProfiles.get",
      "networksecurity.securityProfiles.list",
      "networksecurity.serverTlsPolicies.get",
      "networksecurity.serverTlsPolicies.getIamPolicy",
      "networksecurity.serverTlsPolicies.list",
      "networksecurity.tlsInspectionPolicies.get",
      "networksecurity.tlsInspectionPolicies.list",
      "networksecurity.urlLists.get",
      "networksecurity.urlLists.list",
      "networkservices.endpointConfigSelectors.get",
      "networkservices.endpointConfigSelectors.getIamPolicy",
      "networkservices.endpointConfigSelectors.list",
      "networkservices.endpointPolicies.get",
      "networkservices.endpointPolicies.getIamPolicy",
      "networkservices.endpointPolicies.list",
      "networkservices.gateways.get",
      "networkservices.gateways.list",
      "networkservices.grpcRoutes.get",
      "networkservices.grpcRoutes.getIamPolicy",
      "networkservices.grpcRoutes.list",
      "networkservices.httpFilters.get",
      "networkservices.httpFilters.getIamPolicy",
      "networkservices.httpFilters.list",
      "networkservices.httpRoutes.get",
      "networkservices.httpRoutes.getIamPolicy",
      "networkservices.httpRoutes.list",
      "networkservices.httpfilters.get",
      "networkservices.httpfilters.getIamPolicy",
      "networkservices.httpfilters.list",
      "networkservices.locations.get",
      "networkservices.locations.list",
      "networkservices.meshes.get",
      "networkservices.meshes.getIamPolicy",
      "networkservices.meshes.list",
      "networkservices.operations.get",
      "networkservices.operations.list",
      "networkservices.serviceBindings.get",
      "networkservices.serviceBindings.list",
      "networkservices.tcpRoutes.get",
      "networkservices.tcpRoutes.getIamPolicy",
      "networkservices.tcpRoutes.list",
      "networkservices.tlsRoutes.get",
      "networkservices.tlsRoutes.list",
      "notebooks.environments.get",
      "notebooks.environments.getIamPolicy",
      "notebooks.environments.list",
      "notebooks.executions.get",
      "notebooks.executions.getIamPolicy",
      "notebooks.executions.list",
      "notebooks.instances.checkUpgradability",
      "notebooks.instances.get",
      "notebooks.instances.getHealth",
      "notebooks.instances.getIamPolicy",
      "notebooks.instances.list",
      "notebooks.locations.get",
      "notebooks.locations.list",
      "notebooks.operations.get",
      "notebooks.operations.list",
      "notebooks.runtimes.get",
      "notebooks.runtimes.getIamPolicy",
      "notebooks.runtimes.list",
      "notebooks.schedules.get",
      "notebooks.schedules.getIamPolicy",
      "notebooks.schedules.list",
      "oauthconfig.clientpolicy.get",
      "oauthconfig.testusers.get",
      "oauthconfig.verification.get",
      "ondemandscanning.operations.get",
      "ondemandscanning.operations.list",
      "ondemandscanning.operations.wait",
      "ondemandscanning.scans.listVulnerabilities",
      "opsconfigmonitoring.resourceMetadata.list",
      "orgpolicy.constraints.list",
      "orgpolicy.customConstraints.get",
      "orgpolicy.customConstraints.list",
      "orgpolicy.policies.list",
      "orgpolicy.policy.get",
      "osconfig.guestPolicies.get",
      "osconfig.guestPolicies.list",
      "osconfig.instanceOSPoliciesCompliances.get",
      "osconfig.instanceOSPoliciesCompliances.list",
      "osconfig.inventories.get",
      "osconfig.inventories.list",
      "osconfig.osPolicyAssignmentReports.get",
      "osconfig.osPolicyAssignmentReports.list",
      "osconfig.osPolicyAssignments.get",
      "osconfig.osPolicyAssignments.list",
      "osconfig.patchDeployments.get",
      "osconfig.patchDeployments.list",
      "osconfig.patchJobs.get",
      "osconfig.patchJobs.list",
      "osconfig.vulnerabilityReports.get",
      "osconfig.vulnerabilityReports.list",
      "paymentsresellersubscription.products.list",
      "paymentsresellersubscription.promotions.list",
      "paymentsresellersubscription.subscriptions.get",
      "policyanalyzer.serviceAccountKeyLastAuthenticationActivities.query",
      "policyanalyzer.serviceAccountLastAuthenticationActivities.query",
      "policysimulator.orgPolicyViolations.list",
      "policysimulator.orgPolicyViolationsPreviews.get",
      "policysimulator.orgPolicyViolationsPreviews.list",
      "policysimulator.replayResults.list",
      "policysimulator.replays.get",
      "policysimulator.replays.list",
      "privateca.caPools.get",
      "privateca.caPools.getIamPolicy",
      "privateca.caPools.list",
      "privateca.certificateAuthorities.get",
      "privateca.certificateAuthorities.getIamPolicy",
      "privateca.certificateAuthorities.list",
      "privateca.certificateRevocationLists.get",
      "privateca.certificateRevocationLists.getIamPolicy",
      "privateca.certificateRevocationLists.list",
      "privateca.certificateTemplates.get",
      "privateca.certificateTemplates.getIamPolicy",
      "privateca.certificateTemplates.list",
      "privateca.certificateTemplates.use",
      "privateca.certificates.get",
      "privateca.certificates.getIamPolicy",
      "privateca.certificates.list",
      "privateca.locations.get",
      "privateca.locations.list",
      "privateca.operations.get",
      "privateca.operations.list",
      "privateca.reusableConfigs.get",
      "privateca.reusableConfigs.getIamPolicy",
      "privateca.reusableConfigs.list",
      "proximitybeacon.attachments.get",
      "proximitybeacon.attachments.list",
      "proximitybeacon.beacons.get",
      "proximitybeacon.beacons.list",
      "proximitybeacon.namespaces.get",
      "proximitybeacon.namespaces.list",
      "pubsub.schemas.attach",
      "pubsub.schemas.get",
      "pubsub.schemas.getIamPolicy",
      "pubsub.schemas.list",
      "pubsub.schemas.listRevisions",
      "pubsub.schemas.validate",
      "pubsub.snapshots.get",
      "pubsub.snapshots.list",
      "pubsub.snapshots.seek",
      "pubsub.subscriptions.get",
      "pubsub.subscriptions.list",
      "pubsub.topics.get",
      "pubsub.topics.list",
      "pubsublite.locations.openKafkaStream",
      "pubsublite.operations.get",
      "pubsublite.operations.list",
      "pubsublite.reservations.get",
      "pubsublite.reservations.list",
      "pubsublite.reservations.listTopics",
      "pubsublite.subscriptions.get",
      "pubsublite.subscriptions.getCursor",
      "pubsublite.subscriptions.list",
      "pubsublite.subscriptions.subscribe",
      "pubsublite.topics.computeHeadCursor",
      "pubsublite.topics.computeMessageStats",
      "pubsublite.topics.computeTimeCursor",
      "pubsublite.topics.get",
      "pubsublite.topics.getPartitions",
      "pubsublite.topics.list",
      "pubsublite.topics.listSubscriptions",
      "pubsublite.topics.subscribe",
      "recaptchaenterprise.keys.get",
      "recaptchaenterprise.keys.list",
      "recaptchaenterprise.metrics.get",
      "recaptchaenterprise.projectmetadata.get",
      "recaptchaenterprise.relatedaccountgroupmemberships.list",
      "recaptchaenterprise.relatedaccountgroups.list",
      "recommender.bigqueryCapacityCommitmentsInsights.get",
      "recommender.bigqueryCapacityCommitmentsInsights.list",
      "recommender.bigqueryCapacityCommitmentsRecommendations.get",
      "recommender.bigqueryCapacityCommitmentsRecommendations.list",
      "recommender.bigqueryPartitionClusterRecommendations.get",
      "recommender.bigqueryPartitionClusterRecommendations.list",
      "recommender.bigqueryTableStatsInsights.get",
      "recommender.bigqueryTableStatsInsights.list",
      "recommender.cloudAssetInsights.get",
      "recommender.cloudAssetInsights.list",
      "recommender.cloudCostGeneralInsights.get",
      "recommender.cloudCostGeneralInsights.list",
      "recommender.cloudCostGeneralRecommendations.get",
      "recommender.cloudCostGeneralRecommendations.list",
      "recommender.cloudFunctionsPerformanceInsights.get",
      "recommender.cloudFunctionsPerformanceInsights.list",
      "recommender.cloudFunctionsPerformanceRecommendations.get",
      "recommender.cloudFunctionsPerformanceRecommendations.list",
      "recommender.cloudManageabilityGeneralInsights.get",
      "recommender.cloudManageabilityGeneralInsights.list",
      "recommender.cloudManageabilityGeneralRecommendations.get",
      "recommender.cloudManageabilityGeneralRecommendations.list",
      "recommender.cloudPerformanceGeneralInsights.get",
      "recommender.cloudPerformanceGeneralInsights.list",
      "recommender.cloudPerformanceGeneralRecommendations.get",
      "recommender.cloudPerformanceGeneralRecommendations.list",
      "recommender.cloudReliabilityGeneralInsights.get",
      "recommender.cloudReliabilityGeneralInsights.list",
      "recommender.cloudReliabilityGeneralRecommendations.get",
      "recommender.cloudReliabilityGeneralRecommendations.list",
      "recommender.cloudSecurityGeneralInsights.get",
      "recommender.cloudSecurityGeneralInsights.list",
      "recommender.cloudSecurityGeneralRecommendations.get",
      "recommender.cloudSecurityGeneralRecommendations.list",
      "recommender.cloudsqlIdleInstanceRecommendations.get",
      "recommender.cloudsqlIdleInstanceRecommendations.list",
      "recommender.cloudsqlInstanceActivityInsights.get",
      "recommender.cloudsqlInstanceActivityInsights.list",
      "recommender.cloudsqlInstanceCpuUsageInsights.get",
      "recommender.cloudsqlInstanceCpuUsageInsights.list",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.get",
      "recommender.cloudsqlInstanceDiskUsageTrendInsights.list",
      "recommender.cloudsqlInstanceMemoryUsageInsights.get",
      "recommender.cloudsqlInstanceMemoryUsageInsights.list",
      "recommender.cloudsqlInstanceOomProbabilityInsights.get",
      "recommender.cloudsqlInstanceOomProbabilityInsights.list",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.get",
      "recommender.cloudsqlInstanceOutOfDiskRecommendations.list",
      "recommender.cloudsqlInstancePerformanceInsights.get",
      "recommender.cloudsqlInstancePerformanceInsights.list",
      "recommender.cloudsqlInstancePerformanceRecommendations.get",
      "recommender.cloudsqlInstancePerformanceRecommendations.list",
      "recommender.cloudsqlInstanceReliabilityInsights.get",
      "recommender.cloudsqlInstanceReliabilityInsights.list",
      "recommender.cloudsqlInstanceReliabilityRecommendations.get",
      "recommender.cloudsqlInstanceReliabilityRecommendations.list",
      "recommender.cloudsqlInstanceSecurityInsights.get",
      "recommender.cloudsqlInstanceSecurityInsights.list",
      "recommender.cloudsqlInstanceSecurityRecommendations.get",
      "recommender.cloudsqlInstanceSecurityRecommendations.list",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.get",
      "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.list",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.get",
      "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.list",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.get",
      "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.get",
      "recommender.cloudsqlUnderProvisionedInstanceRecommendations.list",
      "recommender.commitmentUtilizationInsights.get",
      "recommender.commitmentUtilizationInsights.list",
      "recommender.computeAddressIdleResourceInsights.get",
      "recommender.computeAddressIdleResourceInsights.list",
      "recommender.computeAddressIdleResourceRecommendations.get",
      "recommender.computeAddressIdleResourceRecommendations.list",
      "recommender.computeDiskIdleResourceInsights.get",
      "recommender.computeDiskIdleResourceInsights.list",
      "recommender.computeDiskIdleResourceRecommendations.get",
      "recommender.computeDiskIdleResourceRecommendations.list",
      "recommender.computeFirewallInsightTypeConfigs.get",
      "recommender.computeFirewallInsights.get",
      "recommender.computeFirewallInsights.list",
      "recommender.computeImageIdleResourceInsights.get",
      "recommender.computeImageIdleResourceInsights.list",
      "recommender.computeImageIdleResourceRecommendations.get",
      "recommender.computeImageIdleResourceRecommendations.list",
      "recommender.computeInstanceCpuUsageInsights.get",
      "recommender.computeInstanceCpuUsageInsights.list",
      "recommender.computeInstanceCpuUsagePredictionInsights.get",
      "recommender.computeInstanceCpuUsagePredictionInsights.list",
      "recommender.computeInstanceCpuUsageTrendInsights.get",
      "recommender.computeInstanceCpuUsageTrendInsights.list",
      "recommender.computeInstanceGroupManagerCpuUsageInsights.get",
      "recommender.computeInstanceGroupManagerCpuUsageInsights.list",
      "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.get",
      "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.list",
      "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.get",
      "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.list",
      "recommender.computeInstanceGroupManagerMachineTypeRecommendations.get",
      "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list",
      "recommender.computeInstanceGroupManagerMemoryUsageInsights.get",
      "recommender.computeInstanceGroupManagerMemoryUsageInsights.list",
      "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.get",
      "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.list",
      "recommender.computeInstanceIdleResourceRecommendations.get",
      "recommender.computeInstanceIdleResourceRecommendations.list",
      "recommender.computeInstanceIdleResourceRecommenderConfig.get",
      "recommender.computeInstanceMachineTypeRecommendations.get",
      "recommender.computeInstanceMachineTypeRecommendations.list",
      "recommender.computeInstanceMemoryUsageInsights.get",
      "recommender.computeInstanceMemoryUsageInsights.list",
      "recommender.computeInstanceMemoryUsagePredictionInsights.get",
      "recommender.computeInstanceMemoryUsagePredictionInsights.list",
      "recommender.computeInstanceNetworkThroughputInsights.get",
      "recommender.computeInstanceNetworkThroughputInsights.list",
      "recommender.containerDiagnosisInsights.get",
      "recommender.containerDiagnosisInsights.list",
      "recommender.containerDiagnosisRecommendations.get",
      "recommender.containerDiagnosisRecommendations.list",
      "recommender.costInsights.get",
      "recommender.costInsights.list",
      "recommender.dataflowDiagnosticsInsights.get",
      "recommender.dataflowDiagnosticsInsights.list",
      "recommender.errorReportingInsights.get",
      "recommender.errorReportingInsights.list",
      "recommender.errorReportingRecommendations.get",
      "recommender.errorReportingRecommendations.list",
      "recommender.gmpGuidedExperienceInsights.get",
      "recommender.gmpGuidedExperienceInsights.list",
      "recommender.gmpGuidedExperienceRecommendations.get",
      "recommender.gmpGuidedExperienceRecommendations.list",
      "recommender.gmpProjectManagementInsights.get",
      "recommender.gmpProjectManagementInsights.list",
      "recommender.gmpProjectManagementRecommendations.get",
      "recommender.gmpProjectManagementRecommendations.list",
      "recommender.gmpProjectProductSuggestionsInsights.get",
      "recommender.gmpProjectProductSuggestionsInsights.list",
      "recommender.gmpProjectProductSuggestionsRecommendations.get",
      "recommender.gmpProjectProductSuggestionsRecommendations.list",
      "recommender.gmpProjectQuotaInsights.get",
      "recommender.gmpProjectQuotaInsights.list",
      "recommender.gmpProjectQuotaRecommendations.get",
      "recommender.gmpProjectQuotaRecommendations.list",
      "recommender.iamPolicyInsights.get",
      "recommender.iamPolicyInsights.list",
      "recommender.iamPolicyLateralMovementInsights.get",
      "recommender.iamPolicyLateralMovementInsights.list",
      "recommender.iamPolicyRecommendations.get",
      "recommender.iamPolicyRecommendations.list",
      "recommender.iamPolicyRecommenderConfig.get",
      "recommender.iamServiceAccountInsights.get",
      "recommender.iamServiceAccountInsights.list",
      "recommender.locations.get",
      "recommender.locations.list",
      "recommender.loggingProductSuggestionContainerInsights.get",
      "recommender.loggingProductSuggestionContainerInsights.list",
      "recommender.loggingProductSuggestionContainerRecommendations.get",
      "recommender.loggingProductSuggestionContainerRecommendations.list",
      "recommender.monitoringProductSuggestionComputeInsights.get",
      "recommender.monitoringProductSuggestionComputeInsights.list",
      "recommender.monitoringProductSuggestionComputeRecommendations.get",
      "recommender.monitoringProductSuggestionComputeRecommendations.list",
      "recommender.networkAnalyzerCloudSqlInsights.get",
      "recommender.networkAnalyzerCloudSqlInsights.list",
      "recommender.networkAnalyzerDynamicRouteInsights.get",
      "recommender.networkAnalyzerDynamicRouteInsights.list",
      "recommender.networkAnalyzerGkeConnectivityInsights.get",
      "recommender.networkAnalyzerGkeConnectivityInsights.list",
      "recommender.networkAnalyzerGkeIpAddressInsights.get",
      "recommender.networkAnalyzerGkeIpAddressInsights.list",
      "recommender.networkAnalyzerIpAddressInsights.get",
      "recommender.networkAnalyzerIpAddressInsights.list",
      "recommender.networkAnalyzerLoadBalancerInsights.get",
      "recommender.networkAnalyzerLoadBalancerInsights.list",
      "recommender.networkAnalyzerVpcConnectivityInsights.get",
      "recommender.networkAnalyzerVpcConnectivityInsights.list",
      "recommender.resourcemanagerProjectUtilizationInsightTypeConfigs.get",
      "recommender.resourcemanagerProjectUtilizationInsights.get",
      "recommender.resourcemanagerProjectUtilizationInsights.list",
      "recommender.resourcemanagerProjectUtilizationRecommendations.get",
      "recommender.resourcemanagerProjectUtilizationRecommendations.list",
      "recommender.resourcemanagerProjectUtilizationRecommenderConfigs.get",
      "recommender.resourcemanagerServiceLimitInsights.get",
      "recommender.resourcemanagerServiceLimitInsights.list",
      "recommender.resourcemanagerServiceLimitRecommendations.get",
      "recommender.resourcemanagerServiceLimitRecommendations.list",
      "recommender.runServiceCostInsights.get",
      "recommender.runServiceCostInsights.list",
      "recommender.runServiceCostRecommendations.get",
      "recommender.runServiceCostRecommendations.list",
      "recommender.runServiceIdentityInsights.get",
      "recommender.runServiceIdentityInsights.list",
      "recommender.runServiceIdentityRecommendations.get",
      "recommender.runServiceIdentityRecommendations.list",
      "recommender.runServiceSecurityInsights.get",
      "recommender.runServiceSecurityInsights.list",
      "recommender.runServiceSecurityRecommendations.get",
      "recommender.runServiceSecurityRecommendations.list",
      "recommender.spendBasedCommitmentInsights.get",
      "recommender.spendBasedCommitmentInsights.list",
      "recommender.spendBasedCommitmentRecommendations.get",
      "recommender.spendBasedCommitmentRecommendations.list",
      "recommender.spendBasedCommitmentRecommenderConfig.get",
      "recommender.usageCommitmentRecommendations.get",
      "recommender.usageCommitmentRecommendations.list",
      "redis.clusters.get",
      "redis.clusters.list",
      "redis.instances.get",
      "redis.instances.list",
      "redis.locations.get",
      "redis.locations.list",
      "redis.operations.get",
      "redis.operations.list",
      "remotebuildexecution.actions.get",
      "remotebuildexecution.blobs.get",
      "remotebuildexecution.instances.get",
      "remotebuildexecution.instances.list",
      "remotebuildexecution.logstreams.get",
      "remotebuildexecution.workerpools.get",
      "remotebuildexecution.workerpools.list",
      "resourcemanager.hierarchyNodes.listEffectiveTags",
      "resourcemanager.hierarchyNodes.listTagBindings",
      "resourcemanager.projects.get",
      "resourcemanager.projects.getIamPolicy",
      "resourcemanager.projects.list",
      "resourcemanager.tagHolds.list",
      "resourcemanager.tagKeys.get",
      "resourcemanager.tagKeys.getIamPolicy",
      "resourcemanager.tagKeys.list",
      "resourcemanager.tagValues.get",
      "resourcemanager.tagValues.getIamPolicy",
      "resourcemanager.tagValues.list",
      "resourcesettings.settings.get",
      "resourcesettings.settings.list",
      "retail.attributesConfigs.exportCatalogAttributes",
      "retail.attributesConfigs.get",
      "retail.catalogs.completeQuery",
      "retail.catalogs.list",
      "retail.controls.export",
      "retail.controls.get",
      "retail.controls.list",
      "retail.models.get",
      "retail.models.list",
      "retail.models.pause",
      "retail.models.resume",
      "retail.models.tune",
      "retail.operations.get",
      "retail.operations.list",
      "retail.placements.predict",
      "retail.placements.search",
      "retail.products.export",
      "retail.products.get",
      "retail.products.list",
      "retail.retailProjects.get",
      "retail.servingConfigs.get",
      "retail.servingConfigs.list",
      "retail.servingConfigs.predict",
      "retail.servingConfigs.search",
      "riscconfigurationservice.riscconfigs.get",
      "riskmanager.controlScoreBreakdowns.get",
      "riskmanager.controlScoreBreakdowns.list",
      "riskmanager.operations.get",
      "riskmanager.operations.list",
      "riskmanager.policies.get",
      "riskmanager.policies.list",
      "riskmanager.reports.get",
      "riskmanager.reports.list",
      "riskmanager.settings.get",
      "rma.annotations.get",
      "rma.collectors.get",
      "rma.collectors.list",
      "rma.locations.get",
      "rma.locations.list",
      "rma.operations.get",
      "rma.operations.list",
      "run.configurations.get",
      "run.configurations.list",
      "run.executions.get",
      "run.executions.list",
      "run.jobs.get",
      "run.jobs.getIamPolicy",
      "run.jobs.list",
      "run.locations.list",
      "run.operations.get",
      "run.operations.list",
      "run.revisions.get",
      "run.revisions.list",
      "run.routes.get",
      "run.routes.list",
      "run.services.get",
      "run.services.getIamPolicy",
      "run.services.list",
      "run.services.listEffectiveTags",
      "run.services.listTagBindings",
      "run.tasks.get",
      "run.tasks.list",
      "runapps.applications.get",
      "runapps.applications.getStatus",
      "runapps.applications.list",
      "runapps.deployments.get",
      "runapps.deployments.list",
      "runapps.locations.get",
      "runapps.locations.list",
      "runapps.operations.get",
      "runapps.operations.list",
      "runtimeconfig.configs.get",
      "runtimeconfig.configs.list",
      "runtimeconfig.operations.get",
      "runtimeconfig.operations.list",
      "runtimeconfig.variables.get",
      "runtimeconfig.variables.list",
      "runtimeconfig.variables.watch",
      "runtimeconfig.waiters.get",
      "runtimeconfig.waiters.list",
      "secretmanager.locations.get",
      "secretmanager.locations.list",
      "secretmanager.secrets.get",
      "secretmanager.secrets.getIamPolicy",
      "secretmanager.secrets.list",
      "secretmanager.versions.get",
      "secretmanager.versions.list",
      "securedlandingzone.operations.get",
      "securedlandingzone.overwatches.get",
      "securedlandingzone.overwatches.list",
      "securitycenter.assets.group",
      "securitycenter.assets.list",
      "securitycenter.assets.listAssetPropertyNames",
      "securitycenter.attackpaths.list",
      "securitycenter.bigQueryExports.get",
      "securitycenter.bigQueryExports.list",
      "securitycenter.containerthreatdetectionsettings.calculate",
      "securitycenter.containerthreatdetectionsettings.get",
      "securitycenter.effectivesecurityhealthanalyticscustommodules.get",
      "securitycenter.effectivesecurityhealthanalyticscustommodules.list",
      "securitycenter.eventthreatdetectionsettings.calculate",
      "securitycenter.eventthreatdetectionsettings.get",
      "securitycenter.findings.group",
      "securitycenter.findings.list",
      "securitycenter.findings.listFindingPropertyNames",
      "securitycenter.integratedvulnerabilityscannersettings.calculate",
      "securitycenter.integratedvulnerabilityscannersettings.get",
      "securitycenter.muteconfigs.get",
      "securitycenter.muteconfigs.list",
      "securitycenter.notificationconfig.get",
      "securitycenter.notificationconfig.list",
      "securitycenter.organizationsettings.get",
      "securitycenter.rapidvulnerabilitydetectionsettings.calculate",
      "securitycenter.rapidvulnerabilitydetectionsettings.get",
      "securitycenter.resourcevalueconfigs.get",
      "securitycenter.resourcevalueconfigs.list",
      "securitycenter.securitycentersettings.get",
      "securitycenter.securityhealthanalyticscustommodules.get",
      "securitycenter.securityhealthanalyticscustommodules.list",
      "securitycenter.securityhealthanalyticscustommodules.simulate",
      "securitycenter.securityhealthanalyticscustommodules.test",
      "securitycenter.securityhealthanalyticssettings.calculate",
      "securitycenter.securityhealthanalyticssettings.get",
      "securitycenter.simulations.get",
      "securitycenter.sources.get",
      "securitycenter.sources.getIamPolicy",
      "securitycenter.sources.list",
      "securitycenter.subscription.get",
      "securitycenter.userinterfacemetadata.get",
      "securitycenter.valuedresources.list",
      "securitycenter.virtualmachinethreatdetectionsettings.calculate",
      "securitycenter.virtualmachinethreatdetectionsettings.get",
      "securitycenter.websecurityscannersettings.calculate",
      "securitycenter.websecurityscannersettings.get",
      "servicebroker.bindingoperations.get",
      "servicebroker.bindingoperations.list",
      "servicebroker.bindings.get",
      "servicebroker.bindings.getIamPolicy",
      "servicebroker.bindings.list",
      "servicebroker.catalogs.get",
      "servicebroker.catalogs.getIamPolicy",
      "servicebroker.catalogs.list",
      "servicebroker.instanceoperations.get",
      "servicebroker.instanceoperations.list",
      "servicebroker.instances.get",
      "servicebroker.instances.getIamPolicy",
      "servicebroker.instances.list",
      "serviceconsumermanagement.consumers.get",
      "serviceconsumermanagement.quota.get",
      "serviceconsumermanagement.tenancyu.list",
      "servicedirectory.endpoints.get",
      "servicedirectory.endpoints.getIamPolicy",
      "servicedirectory.endpoints.list",
      "servicedirectory.locations.get",
      "servicedirectory.locations.list",
      "servicedirectory.namespaces.get",
      "servicedirectory.namespaces.getIamPolicy",
      "servicedirectory.namespaces.list",
      "servicedirectory.services.get",
      "servicedirectory.services.getIamPolicy",
      "servicedirectory.services.list",
      "servicedirectory.services.resolve",
      "servicehealth.events.get",
      "servicehealth.events.list",
      "servicehealth.locations.get",
      "servicehealth.locations.list",
      "servicehealth.organizationEvents.get",
      "servicehealth.organizationEvents.list",
      "servicehealth.organizationImpacts.get",
      "servicehealth.organizationImpacts.list",
      "servicemanagement.services.get",
      "servicemanagement.services.list",
      "servicenetworking.operations.get",
      "servicenetworking.operations.list",
      "servicenetworking.services.get",
      "servicenetworking.services.getConsumerConfig",
      "servicesecurityinsights.clusterSecurityInfo.get",
      "servicesecurityinsights.clusterSecurityInfo.list",
      "servicesecurityinsights.policies.get",
      "servicesecurityinsights.projectStates.get",
      "servicesecurityinsights.securityInfo.list",
      "servicesecurityinsights.securityViews.get",
      "servicesecurityinsights.workloadPolicies.list",
      "servicesecurityinsights.workloadSecurityInfo.get",
      "serviceusage.operations.get",
      "serviceusage.operations.list",
      "serviceusage.quotas.get",
      "serviceusage.services.get",
      "serviceusage.services.list",
      "source.repos.get",
      "source.repos.getIamPolicy",
      "source.repos.list",
      "spanner.backupOperations.get",
      "spanner.backupOperations.list",
      "spanner.backups.get",
      "spanner.backups.getIamPolicy",
      "spanner.backups.list",
      "spanner.databaseOperations.get",
      "spanner.databaseOperations.list",
      "spanner.databaseRoles.list",
      "spanner.databases.beginReadOnlyTransaction",
      "spanner.databases.get",
      "spanner.databases.getDdl",
      "spanner.databases.getIamPolicy",
      "spanner.databases.list",
      "spanner.databases.partitionQuery",
      "spanner.databases.partitionRead",
      "spanner.databases.read",
      "spanner.databases.select",
      "spanner.databases.useDataBoost",
      "spanner.instanceConfigOperations.get",
      "spanner.instanceConfigOperations.list",
      "spanner.instanceConfigs.get",
      "spanner.instanceConfigs.list",
      "spanner.instanceOperations.get",
      "spanner.instanceOperations.list",
      "spanner.instances.get",
      "spanner.instances.getIamPolicy",
      "spanner.instances.list",
      "spanner.instances.listEffectiveTags",
      "spanner.instances.listTagBindings",
      "spanner.sessions.create",
      "spanner.sessions.delete",
      "spanner.sessions.get",
      "spanner.sessions.list",
      "speakerid.phrases.get",
      "speakerid.phrases.list",
      "speakerid.settings.get",
      "speakerid.speakers.get",
      "speakerid.speakers.list",
      "speech.adaptations.execute",
      "speech.config.get",
      "speech.customClasses.get",
      "speech.customClasses.list",
      "speech.locations.get",
      "speech.locations.list",
      "speech.operations.get",
      "speech.operations.list",
      "speech.operations.wait",
      "speech.phraseSets.get",
      "speech.phraseSets.list",
      "speech.recognizers.get",
      "speech.recognizers.list",
      "speech.recognizers.recognize",
      "stackdriver.projects.get",
      "stackdriver.resourceMetadata.list",
      "storage.buckets.list",
      "storage.buckets.listEffectiveTags",
      "storage.buckets.listTagBindings",
      "storage.hmacKeys.get",
      "storage.hmacKeys.list",
      "storageinsights.locations.get",
      "storageinsights.locations.list",
      "storageinsights.operations.get",
      "storageinsights.operations.list",
      "storageinsights.reportConfigs.get",
      "storageinsights.reportConfigs.list",
      "storageinsights.reportDetails.get",
      "storageinsights.reportDetails.list",
      "storagetransfer.agentpools.get",
      "storagetransfer.agentpools.list",
      "storagetransfer.jobs.get",
      "storagetransfer.jobs.list",
      "storagetransfer.operations.get",
      "storagetransfer.operations.list",
      "storagetransfer.projects.getServiceAccount",
      "stream.locations.get",
      "stream.locations.list",
      "stream.operations.get",
      "stream.operations.list",
      "stream.streamContents.get",
      "stream.streamContents.list",
      "stream.streamInstances.get",
      "stream.streamInstances.list",
      "subscribewithgoogledeveloper.tools.get",
      "timeseriesinsights.datasets.evaluate",
      "timeseriesinsights.datasets.list",
      "timeseriesinsights.datasets.query",
      "timeseriesinsights.locations.get",
      "timeseriesinsights.locations.list",
      "tpu.acceleratortypes.get",
      "tpu.acceleratortypes.list",
      "tpu.locations.get",
      "tpu.locations.list",
      "tpu.nodes.get",
      "tpu.nodes.list",
      "tpu.operations.get",
      "tpu.operations.list",
      "tpu.runtimeversions.get",
      "tpu.runtimeversions.list",
      "tpu.tensorflowversions.get",
      "tpu.tensorflowversions.list",
      "trafficdirector.networks.getConfigs",
      "transcoder.jobTemplates.get",
      "transcoder.jobTemplates.list",
      "transcoder.jobs.get",
      "transcoder.jobs.list",
      "transferappliance.appliances.get",
      "transferappliance.appliances.list",
      "transferappliance.credentials.get",
      "transferappliance.locations.get",
      "transferappliance.locations.list",
      "transferappliance.operations.get",
      "transferappliance.operations.list",
      "transferappliance.orders.get",
      "transferappliance.orders.list",
      "transferappliance.savedAddresses.get",
      "transferappliance.savedAddresses.list",
      "translationhub.portals.get",
      "translationhub.portals.list",
      "videostitcher.cdnKeys.get",
      "videostitcher.cdnKeys.list",
      "videostitcher.liveAdTagDetails.get",
      "videostitcher.liveAdTagDetails.list",
      "videostitcher.liveSessions.get",
      "videostitcher.slates.get",
      "videostitcher.slates.list",
      "videostitcher.vodAdTagDetails.get",
      "videostitcher.vodAdTagDetails.list",
      "videostitcher.vodSessions.get",
      "videostitcher.vodStitchDetails.get",
      "videostitcher.vodStitchDetails.list",
      "visionai.analyses.get",
      "visionai.analyses.getIamPolicy",
      "visionai.analyses.list",
      "visionai.annotations.get",
      "visionai.annotations.list",
      "visionai.applications.get",
      "visionai.applications.list",
      "visionai.assets.clip",
      "visionai.assets.generateHlsUri",
      "visionai.assets.get",
      "visionai.assets.list",
      "visionai.assets.search",
      "visionai.clusters.get",
      "visionai.clusters.getIamPolicy",
      "visionai.clusters.list",
      "visionai.clusters.watch",
      "visionai.corpora.get",
      "visionai.corpora.list",
      "visionai.corpora.suggest",
      "visionai.dataSchemas.get",
      "visionai.dataSchemas.list",
      "visionai.dataSchemas.validate",
      "visionai.drafts.get",
      "visionai.drafts.list",
      "visionai.events.get",
      "visionai.events.getIamPolicy",
      "visionai.events.list",
      "visionai.instances.get",
      "visionai.instances.list",
      "visionai.locations.get",
      "visionai.locations.list",
      "visionai.operations.get",
      "visionai.operations.list",
      "visionai.operations.wait",
      "visionai.operators.get",
      "visionai.operators.getIamPolicy",
      "visionai.operators.list",
      "visionai.processors.get",
      "visionai.processors.list",
      "visionai.processors.listPrebuilt",
      "visionai.searchConfigs.get",
      "visionai.searchConfigs.list",
      "visionai.series.acquireLease",
      "visionai.series.get",
      "visionai.series.getIamPolicy",
      "visionai.series.list",
      "visionai.series.receive",
      "visionai.streams.get",
      "visionai.streams.getIamPolicy",
      "visionai.streams.list",
      "visionai.streams.receive",
      "visionai.uistreams.generateStreamThumbnails",
      "visionai.uistreams.get",
      "visionai.uistreams.list",
      "visualinspection.annotationSets.get",
      "visualinspection.annotationSets.list",
      "visualinspection.annotationSpecs.get",
      "visualinspection.annotationSpecs.list",
      "visualinspection.annotations.get",
      "visualinspection.annotations.list",
      "visualinspection.datasets.export",
      "visualinspection.datasets.get",
      "visualinspection.datasets.list",
      "visualinspection.images.get",
      "visualinspection.images.list",
      "visualinspection.locations.get",
      "visualinspection.locations.list",
      "visualinspection.modelEvaluations.get",
      "visualinspection.modelEvaluations.list",
      "visualinspection.models.get",
      "visualinspection.models.list",
      "visualinspection.modules.get",
      "visualinspection.modules.list",
      "visualinspection.operations.get",
      "visualinspection.operations.list",
      "visualinspection.solutionArtifacts.get",
      "visualinspection.solutionArtifacts.list",
      "visualinspection.solutionArtifacts.predict",
      "visualinspection.solutions.get",
      "visualinspection.solutions.list",
      "vmmigration.cloneJobs.get",
      "vmmigration.cloneJobs.list",
      "vmmigration.cutoverJobs.get",
      "vmmigration.cutoverJobs.list",
      "vmmigration.datacenterConnectors.get",
      "vmmigration.datacenterConnectors.list",
      "vmmigration.deployments.get",
      "vmmigration.deployments.list",
      "vmmigration.groups.get",
      "vmmigration.groups.list",
      "vmmigration.locations.get",
      "vmmigration.locations.list",
      "vmmigration.migratingVms.get",
      "vmmigration.migratingVms.list",
      "vmmigration.operations.get",
      "vmmigration.operations.list",
      "vmmigration.replicationCycles.get",
      "vmmigration.replicationCycles.list",
      "vmmigration.sources.get",
      "vmmigration.sources.list",
      "vmmigration.targets.get",
      "vmmigration.targets.list",
      "vmmigration.utilizationReports.get",
      "vmmigration.utilizationReports.list",
      "vmwareengine.clusters.get",
      "vmwareengine.clusters.getIamPolicy",
      "vmwareengine.clusters.list",
      "vmwareengine.hcxActivationKeys.get",
      "vmwareengine.hcxActivationKeys.getIamPolicy",
      "vmwareengine.hcxActivationKeys.list",
      "vmwareengine.locations.get",
      "vmwareengine.locations.list",
      "vmwareengine.networkPolicies.get",
      "vmwareengine.networkPolicies.list",
      "vmwareengine.nodeTypes.get",
      "vmwareengine.nodeTypes.list",
      "vmwareengine.operations.get",
      "vmwareengine.operations.list",
      "vmwareengine.privateClouds.get",
      "vmwareengine.privateClouds.getIamPolicy",
      "vmwareengine.privateClouds.list",
      "vmwareengine.privateConnections.get",
      "vmwareengine.privateConnections.list",
      "vmwareengine.privateConnections.listPeeringRoutes",
      "vmwareengine.services.view",
      "vmwareengine.subnets.get",
      "vmwareengine.subnets.list",
      "vmwareengine.vmwareEngineNetworks.get",
      "vmwareengine.vmwareEngineNetworks.list",
      "vpcaccess.connectors.get",
      "vpcaccess.connectors.list",
      "vpcaccess.connectors.use",
      "vpcaccess.locations.list",
      "vpcaccess.operations.get",
      "vpcaccess.operations.list",
      "workflows.executions.get",
      "workflows.executions.list",
      "workflows.locations.get",
      "workflows.locations.list",
      "workflows.operations.get",
      "workflows.operations.list",
      "workflows.workflows.get",
      "workflows.workflows.list",
      "workloadcertificate.locations.get",
      "workloadcertificate.locations.list",
      "workloadcertificate.operations.get",
      "workloadcertificate.operations.list",
      "workloadcertificate.workloadCertificateFeature.get",
      "workloadcertificate.workloadRegistrations.get",
      "workloadcertificate.workloadRegistrations.list",
      "workloadmanager.evaluations.get",
      "workloadmanager.evaluations.list",
      "workloadmanager.executions.get",
      "workloadmanager.executions.list",
      "workloadmanager.locations.get",
      "workloadmanager.locations.list",
      "workloadmanager.operations.get",
      "workloadmanager.operations.list",
      "workloadmanager.results.list",
      "workloadmanager.rules.list",
      "workstations.operations.get",
      "workstations.workstationClusters.get",
      "workstations.workstationClusters.list",
      "workstations.workstationConfigs.get",
      "workstations.workstationConfigs.getIamPolicy",
      "workstations.workstationConfigs.list",
      "workstations.workstations.get",
      "workstations.workstations.getIamPolicy",
      "workstations.workstations.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.admin",
    "title": "VisionAI Admin",
    "description": "Full access to Vision AI all resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "visionai.analyses.create",
      "visionai.analyses.delete",
      "visionai.analyses.get",
      "visionai.analyses.getIamPolicy",
      "visionai.analyses.list",
      "visionai.analyses.setIamPolicy",
      "visionai.analyses.update",
      "visionai.annotations.create",
      "visionai.annotations.delete",
      "visionai.annotations.get",
      "visionai.annotations.list",
      "visionai.annotations.update",
      "visionai.applications.create",
      "visionai.applications.delete",
      "visionai.applications.deploy",
      "visionai.applications.get",
      "visionai.applications.list",
      "visionai.applications.undeploy",
      "visionai.applications.update",
      "visionai.assets.clip",
      "visionai.assets.create",
      "visionai.assets.delete",
      "visionai.assets.generateHlsUri",
      "visionai.assets.get",
      "visionai.assets.ingest",
      "visionai.assets.list",
      "visionai.assets.search",
      "visionai.assets.update",
      "visionai.clusters.create",
      "visionai.clusters.delete",
      "visionai.clusters.get",
      "visionai.clusters.getIamPolicy",
      "visionai.clusters.list",
      "visionai.clusters.setIamPolicy",
      "visionai.clusters.update",
      "visionai.clusters.watch",
      "visionai.corpora.create",
      "visionai.corpora.delete",
      "visionai.corpora.get",
      "visionai.corpora.list",
      "visionai.corpora.suggest",
      "visionai.corpora.update",
      "visionai.dataSchemas.create",
      "visionai.dataSchemas.delete",
      "visionai.dataSchemas.get",
      "visionai.dataSchemas.list",
      "visionai.dataSchemas.update",
      "visionai.dataSchemas.validate",
      "visionai.drafts.create",
      "visionai.drafts.delete",
      "visionai.drafts.get",
      "visionai.drafts.list",
      "visionai.drafts.update",
      "visionai.events.create",
      "visionai.events.delete",
      "visionai.events.get",
      "visionai.events.getIamPolicy",
      "visionai.events.list",
      "visionai.events.setIamPolicy",
      "visionai.events.update",
      "visionai.instances.get",
      "visionai.instances.list",
      "visionai.locations.get",
      "visionai.locations.list",
      "visionai.operations.cancel",
      "visionai.operations.delete",
      "visionai.operations.get",
      "visionai.operations.list",
      "visionai.operations.wait",
      "visionai.operators.create",
      "visionai.operators.delete",
      "visionai.operators.get",
      "visionai.operators.getIamPolicy",
      "visionai.operators.list",
      "visionai.operators.setIamPolicy",
      "visionai.operators.update",
      "visionai.processors.create",
      "visionai.processors.delete",
      "visionai.processors.get",
      "visionai.processors.list",
      "visionai.processors.listPrebuilt",
      "visionai.processors.update",
      "visionai.searchConfigs.create",
      "visionai.searchConfigs.delete",
      "visionai.searchConfigs.get",
      "visionai.searchConfigs.list",
      "visionai.searchConfigs.update",
      "visionai.series.acquireLease",
      "visionai.series.create",
      "visionai.series.delete",
      "visionai.series.get",
      "visionai.series.getIamPolicy",
      "visionai.series.list",
      "visionai.series.receive",
      "visionai.series.releaseLease",
      "visionai.series.renewLease",
      "visionai.series.send",
      "visionai.series.setIamPolicy",
      "visionai.series.update",
      "visionai.streams.create",
      "visionai.streams.delete",
      "visionai.streams.get",
      "visionai.streams.getIamPolicy",
      "visionai.streams.list",
      "visionai.streams.receive",
      "visionai.streams.send",
      "visionai.streams.setIamPolicy",
      "visionai.streams.update",
      "visionai.uistreams.create",
      "visionai.uistreams.delete",
      "visionai.uistreams.generateStreamThumbnails",
      "visionai.uistreams.get",
      "visionai.uistreams.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.analysisEditor",
    "title": "Vision AI Analysis Editor",
    "description": "Access to read and write Vision AI Analyses.",
    "includedPermissions": [
      "visionai.analyses.create",
      "visionai.analyses.delete",
      "visionai.analyses.get",
      "visionai.analyses.list",
      "visionai.analyses.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.analysisViewer",
    "title": "Vision AI Analysis Viewer",
    "description": "Access to read Vision AI Analyses.",
    "includedPermissions": [
      "visionai.analyses.get",
      "visionai.analyses.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.applicationEditor",
    "title": "Vision AI Application Editor",
    "description": "Access to read and write Vision AI Applications.",
    "includedPermissions": [
      "visionai.applications.create",
      "visionai.applications.delete",
      "visionai.applications.deploy",
      "visionai.applications.get",
      "visionai.applications.list",
      "visionai.applications.undeploy",
      "visionai.applications.update",
      "visionai.drafts.create",
      "visionai.drafts.delete",
      "visionai.drafts.get",
      "visionai.drafts.list",
      "visionai.drafts.update",
      "visionai.instances.get",
      "visionai.instances.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.applicationViewer",
    "title": "Vision AI Application Viewer",
    "description": "Access to read Vision AI Applications.",
    "includedPermissions": [
      "visionai.applications.get",
      "visionai.applications.list",
      "visionai.drafts.get",
      "visionai.drafts.list",
      "visionai.instances.get",
      "visionai.instances.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.assetCreator",
    "title": "VisionAI Warehouse Asset Creator",
    "description": "Grants access to ingest media assets into the Warehouse.",
    "includedPermissions": [
      "visionai.assets.create",
      "visionai.assets.ingest"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.clusterEditor",
    "title": "Vision AI Cluster Editor",
    "description": "Access to read and write Vision AI Cluster.",
    "includedPermissions": [
      "visionai.clusters.create",
      "visionai.clusters.delete",
      "visionai.clusters.get",
      "visionai.clusters.list",
      "visionai.clusters.update",
      "visionai.clusters.watch"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.clusterViewer",
    "title": "Vision AI Cluster Viewer",
    "description": "Access to read Vision AI Clusters.",
    "includedPermissions": [
      "visionai.clusters.get",
      "visionai.clusters.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.corpusAdmin",
    "title": "VisionAI Warehouse Corpus Administrator",
    "description": "Full control to everything in a corpus including corpus access control.",
    "includedPermissions": [
      "visionai.annotations.create",
      "visionai.annotations.delete",
      "visionai.annotations.get",
      "visionai.annotations.list",
      "visionai.annotations.update",
      "visionai.assets.clip",
      "visionai.assets.create",
      "visionai.assets.delete",
      "visionai.assets.generateHlsUri",
      "visionai.assets.get",
      "visionai.assets.ingest",
      "visionai.assets.list",
      "visionai.assets.search",
      "visionai.assets.update",
      "visionai.corpora.create",
      "visionai.corpora.delete",
      "visionai.corpora.get",
      "visionai.corpora.list",
      "visionai.corpora.suggest",
      "visionai.corpora.update",
      "visionai.dataSchemas.create",
      "visionai.dataSchemas.delete",
      "visionai.dataSchemas.get",
      "visionai.dataSchemas.list",
      "visionai.dataSchemas.update",
      "visionai.dataSchemas.validate",
      "visionai.operations.get",
      "visionai.operations.list",
      "visionai.searchConfigs.create",
      "visionai.searchConfigs.delete",
      "visionai.searchConfigs.get",
      "visionai.searchConfigs.list",
      "visionai.searchConfigs.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.corpusEditor",
    "title": "VisionAI Warehouse Corpus Editor",
    "description": "Read-write access to everything in a corpus.",
    "includedPermissions": [
      "visionai.annotations.create",
      "visionai.annotations.delete",
      "visionai.annotations.get",
      "visionai.annotations.list",
      "visionai.annotations.update",
      "visionai.assets.clip",
      "visionai.assets.create",
      "visionai.assets.delete",
      "visionai.assets.generateHlsUri",
      "visionai.assets.get",
      "visionai.assets.ingest",
      "visionai.assets.list",
      "visionai.assets.search",
      "visionai.assets.update",
      "visionai.corpora.create",
      "visionai.corpora.delete",
      "visionai.corpora.get",
      "visionai.corpora.list",
      "visionai.corpora.suggest",
      "visionai.corpora.update",
      "visionai.dataSchemas.create",
      "visionai.dataSchemas.delete",
      "visionai.dataSchemas.get",
      "visionai.dataSchemas.list",
      "visionai.dataSchemas.update",
      "visionai.dataSchemas.validate",
      "visionai.operations.get",
      "visionai.operations.list",
      "visionai.searchConfigs.create",
      "visionai.searchConfigs.delete",
      "visionai.searchConfigs.get",
      "visionai.searchConfigs.list",
      "visionai.searchConfigs.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.corpusViewer",
    "title": "VisionAI Warehouse Corpus Viewer",
    "description": "Grants access to view everything in a corpus.",
    "includedPermissions": [
      "visionai.annotations.get",
      "visionai.annotations.list",
      "visionai.assets.clip",
      "visionai.assets.generateHlsUri",
      "visionai.assets.get",
      "visionai.assets.list",
      "visionai.assets.search",
      "visionai.corpora.get",
      "visionai.corpora.list",
      "visionai.corpora.suggest",
      "visionai.dataSchemas.get",
      "visionai.dataSchemas.list",
      "visionai.dataSchemas.validate",
      "visionai.operations.get",
      "visionai.operations.list",
      "visionai.searchConfigs.get",
      "visionai.searchConfigs.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.corpusWriter",
    "title": "VisionAI Warehouse Corpus Writer",
    "description": "Grants access to create/update/delete everything in a corpus.",
    "includedPermissions": [
      "visionai.annotations.create",
      "visionai.annotations.delete",
      "visionai.annotations.get",
      "visionai.annotations.list",
      "visionai.annotations.update",
      "visionai.assets.clip",
      "visionai.assets.create",
      "visionai.assets.delete",
      "visionai.assets.generateHlsUri",
      "visionai.assets.get",
      "visionai.assets.ingest",
      "visionai.assets.list",
      "visionai.assets.search",
      "visionai.assets.update",
      "visionai.corpora.delete",
      "visionai.corpora.update",
      "visionai.dataSchemas.create",
      "visionai.dataSchemas.delete",
      "visionai.dataSchemas.update",
      "visionai.operations.get",
      "visionai.operations.list",
      "visionai.searchConfigs.create",
      "visionai.searchConfigs.delete",
      "visionai.searchConfigs.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.editor",
    "title": "VisionAI Editor",
    "description": "Edit access to Vision AI all resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "visionai.analyses.create",
      "visionai.analyses.delete",
      "visionai.analyses.get",
      "visionai.analyses.getIamPolicy",
      "visionai.analyses.list",
      "visionai.analyses.update",
      "visionai.annotations.create",
      "visionai.annotations.delete",
      "visionai.annotations.get",
      "visionai.annotations.list",
      "visionai.annotations.update",
      "visionai.applications.create",
      "visionai.applications.delete",
      "visionai.applications.deploy",
      "visionai.applications.get",
      "visionai.applications.list",
      "visionai.applications.undeploy",
      "visionai.applications.update",
      "visionai.assets.clip",
      "visionai.assets.create",
      "visionai.assets.delete",
      "visionai.assets.generateHlsUri",
      "visionai.assets.get",
      "visionai.assets.ingest",
      "visionai.assets.list",
      "visionai.assets.search",
      "visionai.assets.update",
      "visionai.clusters.create",
      "visionai.clusters.delete",
      "visionai.clusters.get",
      "visionai.clusters.getIamPolicy",
      "visionai.clusters.list",
      "visionai.clusters.update",
      "visionai.clusters.watch",
      "visionai.corpora.create",
      "visionai.corpora.delete",
      "visionai.corpora.get",
      "visionai.corpora.list",
      "visionai.corpora.suggest",
      "visionai.corpora.update",
      "visionai.dataSchemas.create",
      "visionai.dataSchemas.delete",
      "visionai.dataSchemas.get",
      "visionai.dataSchemas.list",
      "visionai.dataSchemas.update",
      "visionai.dataSchemas.validate",
      "visionai.drafts.create",
      "visionai.drafts.delete",
      "visionai.drafts.get",
      "visionai.drafts.list",
      "visionai.drafts.update",
      "visionai.events.create",
      "visionai.events.delete",
      "visionai.events.get",
      "visionai.events.getIamPolicy",
      "visionai.events.list",
      "visionai.events.update",
      "visionai.instances.get",
      "visionai.instances.list",
      "visionai.locations.get",
      "visionai.locations.list",
      "visionai.operations.cancel",
      "visionai.operations.delete",
      "visionai.operations.get",
      "visionai.operations.list",
      "visionai.operations.wait",
      "visionai.operators.create",
      "visionai.operators.delete",
      "visionai.operators.get",
      "visionai.operators.getIamPolicy",
      "visionai.operators.list",
      "visionai.operators.update",
      "visionai.processors.create",
      "visionai.processors.delete",
      "visionai.processors.get",
      "visionai.processors.list",
      "visionai.processors.listPrebuilt",
      "visionai.processors.update",
      "visionai.searchConfigs.create",
      "visionai.searchConfigs.delete",
      "visionai.searchConfigs.get",
      "visionai.searchConfigs.list",
      "visionai.searchConfigs.update",
      "visionai.series.acquireLease",
      "visionai.series.create",
      "visionai.series.delete",
      "visionai.series.get",
      "visionai.series.getIamPolicy",
      "visionai.series.list",
      "visionai.series.receive",
      "visionai.series.releaseLease",
      "visionai.series.renewLease",
      "visionai.series.send",
      "visionai.series.update",
      "visionai.streams.create",
      "visionai.streams.delete",
      "visionai.streams.get",
      "visionai.streams.getIamPolicy",
      "visionai.streams.list",
      "visionai.streams.receive",
      "visionai.streams.send",
      "visionai.streams.update",
      "visionai.uistreams.create",
      "visionai.uistreams.delete",
      "visionai.uistreams.generateStreamThumbnails",
      "visionai.uistreams.get",
      "visionai.uistreams.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.eventEditor",
    "title": "Vision AI Event Editor",
    "description": "Access to read and write Vision AI Events.",
    "includedPermissions": [
      "visionai.events.create",
      "visionai.events.delete",
      "visionai.events.get",
      "visionai.events.list",
      "visionai.events.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.eventViewer",
    "title": "Vision AI Event Viewer",
    "description": "Access to read Vision AI Events.",
    "includedPermissions": [
      "visionai.events.get",
      "visionai.events.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.operatorEditor",
    "title": "Vision AI Operator Editor",
    "description": "Access to read and write Vision AI Operators.",
    "includedPermissions": [
      "visionai.operators.create",
      "visionai.operators.delete",
      "visionai.operators.get",
      "visionai.operators.list",
      "visionai.operators.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.operatorViewer",
    "title": "Vision AI Operator Viewer",
    "description": "Access to read Vision AI Operators.",
    "includedPermissions": [
      "visionai.operators.get",
      "visionai.operators.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.packetReceiver",
    "title": "Vision AI Packet Receiver",
    "description": "Access to read Vision AI Series.",
    "includedPermissions": [
      "visionai.clusters.watch",
      "visionai.series.acquireLease",
      "visionai.series.receive",
      "visionai.series.releaseLease",
      "visionai.series.renewLease",
      "visionai.streams.receive"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.packetSender",
    "title": "Vision AI Packet Sender",
    "description": "Packet sender to the series.",
    "includedPermissions": [
      "visionai.series.acquireLease",
      "visionai.series.releaseLease",
      "visionai.series.renewLease",
      "visionai.series.send",
      "visionai.streams.send"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.processorEditor",
    "title": "Vision AI Processor Editor",
    "description": "Access to read and write Vision AI Processors.",
    "includedPermissions": [
      "visionai.processors.create",
      "visionai.processors.delete",
      "visionai.processors.get",
      "visionai.processors.list",
      "visionai.processors.listPrebuilt",
      "visionai.processors.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.processorViewer",
    "title": "Vision AI Processor Viewer",
    "description": "Access to read Vision AI Processors.",
    "includedPermissions": [
      "visionai.processors.get",
      "visionai.processors.list",
      "visionai.processors.listPrebuilt"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.retailcatalogEditor",
    "title": "Vision AI RetailCatalog Editor",
    "description": "Access to read and write Vision AI RetailCatalogs.",
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.retailcatalogViewer",
    "title": "Vision AI RetailCatalog Viewer",
    "description": "Access to read Vision AI RetailCatalogs.",
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.retailendpointEditor",
    "title": "Vision AI RetailEndpoint Editor",
    "description": "Access to read and write Vision AI RetailEndpoints.",
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.retailendpointViewer",
    "title": "Vision AI RetailEndpoint Viewer",
    "description": "Access to read Vision AI RetailEndpoints.",
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.seriesEditor",
    "title": "Vision AI Series Editor",
    "description": "Access to read and write Vision AI Series.",
    "includedPermissions": [
      "visionai.clusters.watch",
      "visionai.series.acquireLease",
      "visionai.series.create",
      "visionai.series.delete",
      "visionai.series.get",
      "visionai.series.list",
      "visionai.series.receive",
      "visionai.series.releaseLease",
      "visionai.series.renewLease",
      "visionai.series.send",
      "visionai.series.update",
      "visionai.streams.receive",
      "visionai.streams.send"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.seriesViewer",
    "title": "Vision AI Series Viewer",
    "description": "Access to read Vision AI Series.",
    "includedPermissions": [
      "visionai.series.get",
      "visionai.series.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.serviceAgent",
    "title": "Cloud Vision AI Service Agent",
    "description": "Grants Cloud Vision AI service account permissions to manage resources in consumer project",
    "includedPermissions": [
      "aiplatform.models.export",
      "aiplatform.models.get",
      "bigquery.datasets.create",
      "bigquery.datasets.get",
      "bigquery.jobs.create",
      "bigquery.jobs.get",
      "bigquery.models.export",
      "bigquery.readsessions.create",
      "bigquery.tables.create",
      "bigquery.tables.export",
      "bigquery.tables.get",
      "bigquery.tables.getData",
      "bigquery.tables.update",
      "bigquery.tables.updateData",
      "bigtable.tables.get",
      "bigtable.tables.list",
      "bigtable.tables.readRows",
      "cloudfunctions.functions.get",
      "cloudfunctions.functions.invoke",
      "cloudfunctions.functions.list",
      "compute.machineTypes.get",
      "logging.logEntries.create",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.timeSeries.create",
      "pubsub.subscriptions.consume",
      "pubsub.subscriptions.create",
      "pubsub.subscriptions.delete",
      "pubsub.subscriptions.get",
      "pubsub.subscriptions.list",
      "pubsub.subscriptions.update",
      "pubsub.topics.attachSubscription",
      "pubsub.topics.create",
      "pubsub.topics.delete",
      "pubsub.topics.get",
      "pubsub.topics.list",
      "pubsub.topics.publish",
      "pubsub.topics.update",
      "run.jobs.run",
      "run.routes.invoke",
      "serviceusage.services.use",
      "storage.buckets.create",
      "storage.buckets.delete",
      "storage.buckets.get",
      "storage.buckets.list",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.list",
      "storage.objects.update",
      "visionai.analyses.create",
      "visionai.analyses.delete",
      "visionai.analyses.get",
      "visionai.analyses.list",
      "visionai.analyses.update",
      "visionai.annotations.create",
      "visionai.annotations.delete",
      "visionai.annotations.get",
      "visionai.annotations.list",
      "visionai.annotations.update",
      "visionai.applications.create",
      "visionai.applications.delete",
      "visionai.applications.deploy",
      "visionai.applications.get",
      "visionai.applications.list",
      "visionai.applications.undeploy",
      "visionai.applications.update",
      "visionai.assets.clip",
      "visionai.assets.create",
      "visionai.assets.delete",
      "visionai.assets.get",
      "visionai.assets.ingest",
      "visionai.assets.list",
      "visionai.assets.search",
      "visionai.assets.update",
      "visionai.clusters.create",
      "visionai.clusters.delete",
      "visionai.clusters.get",
      "visionai.clusters.list",
      "visionai.clusters.update",
      "visionai.clusters.watch",
      "visionai.corpora.delete",
      "visionai.corpora.get",
      "visionai.corpora.list",
      "visionai.corpora.update",
      "visionai.dataSchemas.create",
      "visionai.dataSchemas.delete",
      "visionai.dataSchemas.get",
      "visionai.dataSchemas.list",
      "visionai.dataSchemas.update",
      "visionai.dataSchemas.validate",
      "visionai.drafts.create",
      "visionai.drafts.delete",
      "visionai.drafts.get",
      "visionai.drafts.list",
      "visionai.drafts.update",
      "visionai.events.create",
      "visionai.events.delete",
      "visionai.events.get",
      "visionai.events.list",
      "visionai.events.update",
      "visionai.instances.get",
      "visionai.instances.list",
      "visionai.operations.get",
      "visionai.operations.list",
      "visionai.operators.create",
      "visionai.operators.delete",
      "visionai.operators.get",
      "visionai.operators.list",
      "visionai.operators.update",
      "visionai.processors.create",
      "visionai.processors.delete",
      "visionai.processors.get",
      "visionai.processors.list",
      "visionai.processors.update",
      "visionai.searchConfigs.create",
      "visionai.searchConfigs.delete",
      "visionai.searchConfigs.get",
      "visionai.searchConfigs.list",
      "visionai.searchConfigs.update",
      "visionai.series.acquireLease",
      "visionai.series.create",
      "visionai.series.delete",
      "visionai.series.get",
      "visionai.series.list",
      "visionai.series.receive",
      "visionai.series.releaseLease",
      "visionai.series.renewLease",
      "visionai.series.send",
      "visionai.series.update",
      "visionai.streams.create",
      "visionai.streams.delete",
      "visionai.streams.get",
      "visionai.streams.list",
      "visionai.streams.receive",
      "visionai.streams.send",
      "visionai.streams.update",
      "visionai.uistreams.create",
      "visionai.uistreams.delete",
      "visionai.uistreams.generateStreamThumbnails",
      "visionai.uistreams.get",
      "visionai.uistreams.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.streamEditor",
    "title": "Vision AI Stream Editor",
    "description": "Access to read and write Vision AI Streams.",
    "includedPermissions": [
      "visionai.clusters.watch",
      "visionai.series.acquireLease",
      "visionai.series.receive",
      "visionai.series.releaseLease",
      "visionai.series.renewLease",
      "visionai.series.send",
      "visionai.streams.create",
      "visionai.streams.delete",
      "visionai.streams.get",
      "visionai.streams.list",
      "visionai.streams.receive",
      "visionai.streams.send",
      "visionai.streams.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.streamViewer",
    "title": "Vision AI Stream Viewer",
    "description": "Access to read Vision AI Streams.",
    "includedPermissions": [
      "visionai.streams.get",
      "visionai.streams.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.uiStreamEditor",
    "title": "Vision AI UI Stream Editor",
    "description": "Access to read & write Vision AI UI Streams.",
    "includedPermissions": [
      "visionai.uistreams.create",
      "visionai.uistreams.delete",
      "visionai.uistreams.generateStreamThumbnails",
      "visionai.uistreams.get",
      "visionai.uistreams.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.uiStreamViewer",
    "title": "Vision AI UI Stream Viewer",
    "description": "Access to read Vision AI UI Streams.",
    "includedPermissions": [
      "visionai.uistreams.get",
      "visionai.uistreams.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visionai.viewer",
    "title": "VisionAI Viewer",
    "description": "View access to Vision AI all resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "visionai.analyses.get",
      "visionai.analyses.getIamPolicy",
      "visionai.analyses.list",
      "visionai.annotations.get",
      "visionai.annotations.list",
      "visionai.applications.get",
      "visionai.applications.list",
      "visionai.assets.clip",
      "visionai.assets.generateHlsUri",
      "visionai.assets.get",
      "visionai.assets.list",
      "visionai.assets.search",
      "visionai.clusters.get",
      "visionai.clusters.getIamPolicy",
      "visionai.clusters.list",
      "visionai.corpora.get",
      "visionai.corpora.list",
      "visionai.corpora.suggest",
      "visionai.dataSchemas.get",
      "visionai.dataSchemas.list",
      "visionai.dataSchemas.validate",
      "visionai.drafts.get",
      "visionai.drafts.list",
      "visionai.events.get",
      "visionai.events.getIamPolicy",
      "visionai.events.list",
      "visionai.instances.get",
      "visionai.instances.list",
      "visionai.locations.get",
      "visionai.locations.list",
      "visionai.operations.get",
      "visionai.operations.list",
      "visionai.operators.get",
      "visionai.operators.getIamPolicy",
      "visionai.operators.list",
      "visionai.processors.get",
      "visionai.processors.list",
      "visionai.processors.listPrebuilt",
      "visionai.searchConfigs.get",
      "visionai.searchConfigs.list",
      "visionai.series.get",
      "visionai.series.getIamPolicy",
      "visionai.series.list",
      "visionai.streams.get",
      "visionai.streams.getIamPolicy",
      "visionai.streams.list",
      "visionai.uistreams.get",
      "visionai.uistreams.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/visualinspection.editor",
    "title": "Visual Inspection AI Solution Editor",
    "description": "Read and write access to all Visual Inspection AI resources except visualinspection.locations.reportUsageMetrics",
    "includedPermissions": [
      "visualinspection.annotationSets.create",
      "visualinspection.annotationSets.delete",
      "visualinspection.annotationSets.get",
      "visualinspection.annotationSets.list",
      "visualinspection.annotationSets.update",
      "visualinspection.annotationSpecs.create",
      "visualinspection.annotationSpecs.delete",
      "visualinspection.annotationSpecs.get",
      "visualinspection.annotationSpecs.list",
      "visualinspection.annotations.create",
      "visualinspection.annotations.delete",
      "visualinspection.annotations.get",
      "visualinspection.annotations.list",
      "visualinspection.annotations.update",
      "visualinspection.datasets.create",
      "visualinspection.datasets.delete",
      "visualinspection.datasets.export",
      "visualinspection.datasets.get",
      "visualinspection.datasets.import",
      "visualinspection.datasets.list",
      "visualinspection.datasets.update",
      "visualinspection.images.delete",
      "visualinspection.images.get",
      "visualinspection.images.list",
      "visualinspection.images.update",
      "visualinspection.locations.get",
      "visualinspection.locations.list",
      "visualinspection.modelEvaluations.get",
      "visualinspection.modelEvaluations.list",
      "visualinspection.models.create",
      "visualinspection.models.delete",
      "visualinspection.models.get",
      "visualinspection.models.list",
      "visualinspection.models.update",
      "visualinspection.models.writePrediction",
      "visualinspection.modules.create",
      "visualinspection.modules.delete",
      "visualinspection.modules.get",
      "visualinspection.modules.list",
      "visualinspection.modules.update",
      "visualinspection.operations.get",
      "visualinspection.operations.list",
      "visualinspection.solutionArtifacts.create",
      "visualinspection.solutionArtifacts.delete",
      "visualinspection.solutionArtifacts.get",
      "visualinspection.solutionArtifacts.list",
      "visualinspection.solutionArtifacts.predict",
      "visualinspection.solutionArtifacts.update",
      "visualinspection.solutions.create",
      "visualinspection.solutions.delete",
      "visualinspection.solutions.get",
      "visualinspection.solutions.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/visualinspection.serviceAgent",
    "title": "Visual Inspection AI Service Agent",
    "description": "Grants Visual Inspection AI Service Agent admin roles for accessing/exporting training data, pushing containers artifacts to GCR and ArtifactsRegistry, and Vertex AI for storing data and running training jobs.",
    "includedPermissions": [
      "aiplatform.annotationSpecs.create",
      "aiplatform.annotationSpecs.delete",
      "aiplatform.annotationSpecs.get",
      "aiplatform.annotationSpecs.list",
      "aiplatform.annotationSpecs.update",
      "aiplatform.annotations.create",
      "aiplatform.annotations.delete",
      "aiplatform.annotations.get",
      "aiplatform.annotations.list",
      "aiplatform.annotations.update",
      "aiplatform.artifacts.create",
      "aiplatform.artifacts.delete",
      "aiplatform.artifacts.get",
      "aiplatform.artifacts.list",
      "aiplatform.artifacts.update",
      "aiplatform.batchPredictionJobs.cancel",
      "aiplatform.batchPredictionJobs.create",
      "aiplatform.batchPredictionJobs.delete",
      "aiplatform.batchPredictionJobs.get",
      "aiplatform.batchPredictionJobs.list",
      "aiplatform.contexts.addContextArtifactsAndExecutions",
      "aiplatform.contexts.addContextChildren",
      "aiplatform.contexts.create",
      "aiplatform.contexts.delete",
      "aiplatform.contexts.get",
      "aiplatform.contexts.list",
      "aiplatform.contexts.queryContextLineageSubgraph",
      "aiplatform.contexts.update",
      "aiplatform.customJobs.cancel",
      "aiplatform.customJobs.create",
      "aiplatform.customJobs.delete",
      "aiplatform.customJobs.get",
      "aiplatform.customJobs.list",
      "aiplatform.dataItems.create",
      "aiplatform.dataItems.delete",
      "aiplatform.dataItems.get",
      "aiplatform.dataItems.list",
      "aiplatform.dataItems.update",
      "aiplatform.dataLabelingJobs.cancel",
      "aiplatform.dataLabelingJobs.create",
      "aiplatform.dataLabelingJobs.delete",
      "aiplatform.dataLabelingJobs.get",
      "aiplatform.dataLabelingJobs.list",
      "aiplatform.datasets.create",
      "aiplatform.datasets.delete",
      "aiplatform.datasets.export",
      "aiplatform.datasets.get",
      "aiplatform.datasets.import",
      "aiplatform.datasets.list",
      "aiplatform.datasets.update",
      "aiplatform.deploymentResourcePools.create",
      "aiplatform.deploymentResourcePools.delete",
      "aiplatform.deploymentResourcePools.get",
      "aiplatform.deploymentResourcePools.list",
      "aiplatform.deploymentResourcePools.queryDeployedModels",
      "aiplatform.deploymentResourcePools.update",
      "aiplatform.edgeDeploymentJobs.create",
      "aiplatform.edgeDeploymentJobs.delete",
      "aiplatform.edgeDeploymentJobs.get",
      "aiplatform.edgeDeploymentJobs.list",
      "aiplatform.edgeDeviceDebugInfo.get",
      "aiplatform.edgeDevices.create",
      "aiplatform.edgeDevices.delete",
      "aiplatform.edgeDevices.get",
      "aiplatform.edgeDevices.list",
      "aiplatform.edgeDevices.update",
      "aiplatform.endpoints.create",
      "aiplatform.endpoints.delete",
      "aiplatform.endpoints.deploy",
      "aiplatform.endpoints.explain",
      "aiplatform.endpoints.get",
      "aiplatform.endpoints.list",
      "aiplatform.endpoints.predict",
      "aiplatform.endpoints.undeploy",
      "aiplatform.endpoints.update",
      "aiplatform.entityTypes.create",
      "aiplatform.entityTypes.delete",
      "aiplatform.entityTypes.deleteFeatureValues",
      "aiplatform.entityTypes.exportFeatureValues",
      "aiplatform.entityTypes.get",
      "aiplatform.entityTypes.getIamPolicy",
      "aiplatform.entityTypes.importFeatureValues",
      "aiplatform.entityTypes.list",
      "aiplatform.entityTypes.readFeatureValues",
      "aiplatform.entityTypes.setIamPolicy",
      "aiplatform.entityTypes.streamingReadFeatureValues",
      "aiplatform.entityTypes.update",
      "aiplatform.entityTypes.writeFeatureValues",
      "aiplatform.executions.addExecutionEvents",
      "aiplatform.executions.create",
      "aiplatform.executions.delete",
      "aiplatform.executions.get",
      "aiplatform.executions.list",
      "aiplatform.executions.queryExecutionInputsAndOutputs",
      "aiplatform.executions.update",
      "aiplatform.featureOnlineStores.create",
      "aiplatform.featureOnlineStores.delete",
      "aiplatform.featureOnlineStores.get",
      "aiplatform.featureOnlineStores.list",
      "aiplatform.featureOnlineStores.update",
      "aiplatform.featureViewSyncs.get",
      "aiplatform.featureViewSyncs.list",
      "aiplatform.featureViews.create",
      "aiplatform.featureViews.delete",
      "aiplatform.featureViews.fetchFeatureValues",
      "aiplatform.featureViews.get",
      "aiplatform.featureViews.list",
      "aiplatform.featureViews.searchNearestEntities",
      "aiplatform.featureViews.sync",
      "aiplatform.featureViews.update",
      "aiplatform.features.create",
      "aiplatform.features.delete",
      "aiplatform.features.get",
      "aiplatform.features.list",
      "aiplatform.features.update",
      "aiplatform.featurestores.batchReadFeatureValues",
      "aiplatform.featurestores.create",
      "aiplatform.featurestores.delete",
      "aiplatform.featurestores.exportFeatures",
      "aiplatform.featurestores.get",
      "aiplatform.featurestores.getIamPolicy",
      "aiplatform.featurestores.importFeatures",
      "aiplatform.featurestores.list",
      "aiplatform.featurestores.readFeatures",
      "aiplatform.featurestores.setIamPolicy",
      "aiplatform.featurestores.update",
      "aiplatform.featurestores.writeFeatures",
      "aiplatform.humanInTheLoops.cancel",
      "aiplatform.humanInTheLoops.create",
      "aiplatform.humanInTheLoops.delete",
      "aiplatform.humanInTheLoops.get",
      "aiplatform.humanInTheLoops.list",
      "aiplatform.humanInTheLoops.queryAnnotationStats",
      "aiplatform.humanInTheLoops.send",
      "aiplatform.humanInTheLoops.update",
      "aiplatform.hyperparameterTuningJobs.cancel",
      "aiplatform.hyperparameterTuningJobs.create",
      "aiplatform.hyperparameterTuningJobs.delete",
      "aiplatform.hyperparameterTuningJobs.get",
      "aiplatform.hyperparameterTuningJobs.list",
      "aiplatform.indexEndpoints.create",
      "aiplatform.indexEndpoints.delete",
      "aiplatform.indexEndpoints.deploy",
      "aiplatform.indexEndpoints.get",
      "aiplatform.indexEndpoints.list",
      "aiplatform.indexEndpoints.queryVectors",
      "aiplatform.indexEndpoints.undeploy",
      "aiplatform.indexEndpoints.update",
      "aiplatform.indexes.create",
      "aiplatform.indexes.delete",
      "aiplatform.indexes.get",
      "aiplatform.indexes.list",
      "aiplatform.indexes.update",
      "aiplatform.locations.get",
      "aiplatform.locations.list",
      "aiplatform.metadataSchemas.create",
      "aiplatform.metadataSchemas.delete",
      "aiplatform.metadataSchemas.get",
      "aiplatform.metadataSchemas.list",
      "aiplatform.metadataStores.create",
      "aiplatform.metadataStores.delete",
      "aiplatform.metadataStores.get",
      "aiplatform.metadataStores.list",
      "aiplatform.migratableResources.migrate",
      "aiplatform.migratableResources.search",
      "aiplatform.modelDeploymentMonitoringJobs.create",
      "aiplatform.modelDeploymentMonitoringJobs.delete",
      "aiplatform.modelDeploymentMonitoringJobs.get",
      "aiplatform.modelDeploymentMonitoringJobs.list",
      "aiplatform.modelDeploymentMonitoringJobs.pause",
      "aiplatform.modelDeploymentMonitoringJobs.resume",
      "aiplatform.modelDeploymentMonitoringJobs.searchStatsAnomalies",
      "aiplatform.modelDeploymentMonitoringJobs.update",
      "aiplatform.modelEvaluationSlices.get",
      "aiplatform.modelEvaluationSlices.import",
      "aiplatform.modelEvaluationSlices.list",
      "aiplatform.modelEvaluations.exportEvaluatedDataItems",
      "aiplatform.modelEvaluations.get",
      "aiplatform.modelEvaluations.import",
      "aiplatform.modelEvaluations.list",
      "aiplatform.models.delete",
      "aiplatform.models.export",
      "aiplatform.models.get",
      "aiplatform.models.list",
      "aiplatform.models.update",
      "aiplatform.models.upload",
      "aiplatform.nasJobs.cancel",
      "aiplatform.nasJobs.create",
      "aiplatform.nasJobs.delete",
      "aiplatform.nasJobs.get",
      "aiplatform.nasJobs.list",
      "aiplatform.nasTrialDetails.get",
      "aiplatform.nasTrialDetails.list",
      "aiplatform.operations.list",
      "aiplatform.persistentResources.create",
      "aiplatform.persistentResources.delete",
      "aiplatform.persistentResources.get",
      "aiplatform.persistentResources.list",
      "aiplatform.pipelineJobs.cancel",
      "aiplatform.pipelineJobs.create",
      "aiplatform.pipelineJobs.delete",
      "aiplatform.pipelineJobs.get",
      "aiplatform.pipelineJobs.list",
      "aiplatform.schedules.create",
      "aiplatform.schedules.delete",
      "aiplatform.schedules.get",
      "aiplatform.schedules.list",
      "aiplatform.schedules.update",
      "aiplatform.specialistPools.create",
      "aiplatform.specialistPools.delete",
      "aiplatform.specialistPools.get",
      "aiplatform.specialistPools.list",
      "aiplatform.specialistPools.update",
      "aiplatform.studies.create",
      "aiplatform.studies.delete",
      "aiplatform.studies.get",
      "aiplatform.studies.list",
      "aiplatform.studies.update",
      "aiplatform.tensorboardExperiments.create",
      "aiplatform.tensorboardExperiments.delete",
      "aiplatform.tensorboardExperiments.get",
      "aiplatform.tensorboardExperiments.list",
      "aiplatform.tensorboardExperiments.update",
      "aiplatform.tensorboardExperiments.write",
      "aiplatform.tensorboardRuns.batchCreate",
      "aiplatform.tensorboardRuns.create",
      "aiplatform.tensorboardRuns.delete",
      "aiplatform.tensorboardRuns.get",
      "aiplatform.tensorboardRuns.list",
      "aiplatform.tensorboardRuns.update",
      "aiplatform.tensorboardRuns.write",
      "aiplatform.tensorboardTimeSeries.batchCreate",
      "aiplatform.tensorboardTimeSeries.batchRead",
      "aiplatform.tensorboardTimeSeries.create",
      "aiplatform.tensorboardTimeSeries.delete",
      "aiplatform.tensorboardTimeSeries.get",
      "aiplatform.tensorboardTimeSeries.list",
      "aiplatform.tensorboardTimeSeries.read",
      "aiplatform.tensorboardTimeSeries.update",
      "aiplatform.tensorboards.create",
      "aiplatform.tensorboards.delete",
      "aiplatform.tensorboards.get",
      "aiplatform.tensorboards.list",
      "aiplatform.tensorboards.recordAccess",
      "aiplatform.tensorboards.update",
      "aiplatform.trainingPipelines.cancel",
      "aiplatform.trainingPipelines.create",
      "aiplatform.trainingPipelines.delete",
      "aiplatform.trainingPipelines.get",
      "aiplatform.trainingPipelines.list",
      "aiplatform.trials.create",
      "aiplatform.trials.delete",
      "aiplatform.trials.get",
      "aiplatform.trials.list",
      "aiplatform.trials.update",
      "artifactregistry.aptartifacts.create",
      "artifactregistry.dockerimages.get",
      "artifactregistry.dockerimages.list",
      "artifactregistry.files.get",
      "artifactregistry.files.list",
      "artifactregistry.kfpartifacts.create",
      "artifactregistry.locations.get",
      "artifactregistry.locations.list",
      "artifactregistry.mavenartifacts.get",
      "artifactregistry.mavenartifacts.list",
      "artifactregistry.npmpackages.get",
      "artifactregistry.npmpackages.list",
      "artifactregistry.packages.delete",
      "artifactregistry.packages.get",
      "artifactregistry.packages.list",
      "artifactregistry.projectsettings.get",
      "artifactregistry.projectsettings.update",
      "artifactregistry.pythonpackages.get",
      "artifactregistry.pythonpackages.list",
      "artifactregistry.repositories.create",
      "artifactregistry.repositories.createTagBinding",
      "artifactregistry.repositories.delete",
      "artifactregistry.repositories.deleteArtifacts",
      "artifactregistry.repositories.deleteTagBinding",
      "artifactregistry.repositories.downloadArtifacts",
      "artifactregistry.repositories.get",
      "artifactregistry.repositories.getIamPolicy",
      "artifactregistry.repositories.list",
      "artifactregistry.repositories.listEffectiveTags",
      "artifactregistry.repositories.listTagBindings",
      "artifactregistry.repositories.readViaVirtualRepository",
      "artifactregistry.repositories.setIamPolicy",
      "artifactregistry.repositories.update",
      "artifactregistry.repositories.uploadArtifacts",
      "artifactregistry.tags.create",
      "artifactregistry.tags.delete",
      "artifactregistry.tags.get",
      "artifactregistry.tags.list",
      "artifactregistry.tags.update",
      "artifactregistry.versions.delete",
      "artifactregistry.versions.get",
      "artifactregistry.versions.list",
      "artifactregistry.yumartifacts.create",
      "firebase.projects.get",
      "orgpolicy.policy.get",
      "recommender.iamPolicyInsights.get",
      "recommender.iamPolicyInsights.list",
      "recommender.iamPolicyInsights.update",
      "recommender.iamPolicyRecommendations.get",
      "recommender.iamPolicyRecommendations.list",
      "recommender.iamPolicyRecommendations.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storage.buckets.create",
      "storage.buckets.createTagBinding",
      "storage.buckets.delete",
      "storage.buckets.deleteTagBinding",
      "storage.buckets.get",
      "storage.buckets.getIamPolicy",
      "storage.buckets.getObjectInsights",
      "storage.buckets.list",
      "storage.buckets.listEffectiveTags",
      "storage.buckets.listTagBindings",
      "storage.buckets.setIamPolicy",
      "storage.buckets.update",
      "storage.multipartUploads.abort",
      "storage.multipartUploads.create",
      "storage.multipartUploads.list",
      "storage.multipartUploads.listParts",
      "storage.objects.create",
      "storage.objects.delete",
      "storage.objects.get",
      "storage.objects.getIamPolicy",
      "storage.objects.list",
      "storage.objects.setIamPolicy",
      "storage.objects.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/visualinspection.usageMetricsReporter",
    "title": "Visual Inspection AI Usage Metrics Reporter",
    "description": "ReportUsageMetric access to Visual Inspection AI Service",
    "includedPermissions": [
      "visualinspection.locations.reportUsageMetrics"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/visualinspection.viewer",
    "title": "Visual Inspection AI Viewer",
    "description": "Read access to Visual Inspection AI resources",
    "includedPermissions": [
      "visualinspection.annotationSets.get",
      "visualinspection.annotationSets.list",
      "visualinspection.annotationSpecs.get",
      "visualinspection.annotationSpecs.list",
      "visualinspection.annotations.get",
      "visualinspection.annotations.list",
      "visualinspection.datasets.export",
      "visualinspection.datasets.get",
      "visualinspection.datasets.list",
      "visualinspection.images.get",
      "visualinspection.images.list",
      "visualinspection.locations.get",
      "visualinspection.locations.list",
      "visualinspection.modelEvaluations.get",
      "visualinspection.modelEvaluations.list",
      "visualinspection.models.get",
      "visualinspection.models.list",
      "visualinspection.modules.get",
      "visualinspection.modules.list",
      "visualinspection.operations.get",
      "visualinspection.operations.list",
      "visualinspection.solutionArtifacts.get",
      "visualinspection.solutionArtifacts.list",
      "visualinspection.solutionArtifacts.predict",
      "visualinspection.solutions.get",
      "visualinspection.solutions.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/vmmigration.admin",
    "title": "VM Migration Administrator",
    "description": "Ability to view and edit all VM Migration objects",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "vmmigration.cloneJobs.create",
      "vmmigration.cloneJobs.get",
      "vmmigration.cloneJobs.list",
      "vmmigration.cloneJobs.update",
      "vmmigration.cutoverJobs.create",
      "vmmigration.cutoverJobs.get",
      "vmmigration.cutoverJobs.list",
      "vmmigration.cutoverJobs.update",
      "vmmigration.datacenterConnectors.create",
      "vmmigration.datacenterConnectors.delete",
      "vmmigration.datacenterConnectors.get",
      "vmmigration.datacenterConnectors.list",
      "vmmigration.datacenterConnectors.update",
      "vmmigration.deployments.create",
      "vmmigration.deployments.get",
      "vmmigration.deployments.list",
      "vmmigration.groups.create",
      "vmmigration.groups.delete",
      "vmmigration.groups.get",
      "vmmigration.groups.list",
      "vmmigration.groups.update",
      "vmmigration.locations.get",
      "vmmigration.locations.list",
      "vmmigration.migratingVms.create",
      "vmmigration.migratingVms.delete",
      "vmmigration.migratingVms.get",
      "vmmigration.migratingVms.list",
      "vmmigration.migratingVms.update",
      "vmmigration.operations.cancel",
      "vmmigration.operations.delete",
      "vmmigration.operations.get",
      "vmmigration.operations.list",
      "vmmigration.replicationCycles.get",
      "vmmigration.replicationCycles.list",
      "vmmigration.sources.create",
      "vmmigration.sources.delete",
      "vmmigration.sources.get",
      "vmmigration.sources.list",
      "vmmigration.sources.update",
      "vmmigration.targets.create",
      "vmmigration.targets.delete",
      "vmmigration.targets.get",
      "vmmigration.targets.list",
      "vmmigration.targets.update",
      "vmmigration.utilizationReports.create",
      "vmmigration.utilizationReports.delete",
      "vmmigration.utilizationReports.get",
      "vmmigration.utilizationReports.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/vmmigration.serviceAgent",
    "title": "VM Migration Service Agent",
    "description": "Grants VM Migration Service Account access to create migrated VMs and disks in the user project.",
    "includedPermissions": [
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.addresses.use",
      "compute.addresses.useInternal",
      "compute.disks.create",
      "compute.disks.delete",
      "compute.disks.get",
      "compute.disks.setLabels",
      "compute.disks.use",
      "compute.disks.useReadOnly",
      "compute.instances.create",
      "compute.instances.delete",
      "compute.instances.get",
      "compute.instances.setLabels",
      "compute.instances.setMetadata",
      "compute.instances.setServiceAccount",
      "compute.instances.setTags",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.zoneOperations.get",
      "compute.zoneOperations.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/vmmigration.viewer",
    "title": "VM Migration Viewer",
    "description": "Ability to view all VM Migration objects",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "vmmigration.cloneJobs.get",
      "vmmigration.cloneJobs.list",
      "vmmigration.cutoverJobs.get",
      "vmmigration.cutoverJobs.list",
      "vmmigration.datacenterConnectors.get",
      "vmmigration.datacenterConnectors.list",
      "vmmigration.deployments.get",
      "vmmigration.deployments.list",
      "vmmigration.groups.get",
      "vmmigration.groups.list",
      "vmmigration.locations.get",
      "vmmigration.locations.list",
      "vmmigration.migratingVms.get",
      "vmmigration.migratingVms.list",
      "vmmigration.operations.get",
      "vmmigration.operations.list",
      "vmmigration.replicationCycles.get",
      "vmmigration.replicationCycles.list",
      "vmmigration.sources.get",
      "vmmigration.sources.list",
      "vmmigration.targets.get",
      "vmmigration.targets.list",
      "vmmigration.utilizationReports.get",
      "vmmigration.utilizationReports.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/vmwareengine.serviceAgent",
    "title": "VMware Engine Service Agent",
    "description": "Gives permission to manage network configuration, such as establishing network peering, necessary for GCVE",
    "includedPermissions": [
      "compute.globalAddresses.get",
      "compute.globalAddresses.list",
      "compute.globalOperations.get",
      "compute.networks.addPeering",
      "compute.networks.get",
      "compute.networks.list",
      "compute.networks.listPeeringRoutes",
      "compute.networks.removePeering",
      "compute.networks.update",
      "compute.networks.updatePeering",
      "compute.networks.updatePolicy",
      "compute.projects.get",
      "compute.regionOperations.get",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routes.list",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "dns.changes.create",
      "dns.changes.get",
      "dns.changes.list",
      "dns.dnsKeys.get",
      "dns.dnsKeys.list",
      "dns.gkeClusters.bindDNSResponsePolicy",
      "dns.gkeClusters.bindPrivateDNSZone",
      "dns.managedZoneOperations.get",
      "dns.managedZoneOperations.list",
      "dns.managedZones.create",
      "dns.managedZones.delete",
      "dns.managedZones.get",
      "dns.managedZones.getIamPolicy",
      "dns.managedZones.list",
      "dns.managedZones.update",
      "dns.networks.bindDNSResponsePolicy",
      "dns.networks.bindPrivateDNSPolicy",
      "dns.networks.bindPrivateDNSZone",
      "dns.networks.targetWithPeeringZone",
      "dns.networks.useHealthSignals",
      "dns.policies.create",
      "dns.policies.delete",
      "dns.policies.get",
      "dns.policies.getIamPolicy",
      "dns.policies.list",
      "dns.policies.update",
      "dns.projects.get",
      "dns.resourceRecordSets.create",
      "dns.resourceRecordSets.delete",
      "dns.resourceRecordSets.get",
      "dns.resourceRecordSets.list",
      "dns.resourceRecordSets.update",
      "dns.responsePolicies.create",
      "dns.responsePolicies.delete",
      "dns.responsePolicies.get",
      "dns.responsePolicies.list",
      "dns.responsePolicies.update",
      "dns.responsePolicyRules.create",
      "dns.responsePolicyRules.delete",
      "dns.responsePolicyRules.get",
      "dns.responsePolicyRules.list",
      "dns.responsePolicyRules.update",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/vmwareengine.vmwareengineAdmin",
    "title": "VMware Engine Service Admin",
    "description": "Admin has full access to VMware Engine Service",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "vmwareengine.clusters.create",
      "vmwareengine.clusters.delete",
      "vmwareengine.clusters.get",
      "vmwareengine.clusters.getIamPolicy",
      "vmwareengine.clusters.list",
      "vmwareengine.clusters.setIamPolicy",
      "vmwareengine.clusters.update",
      "vmwareengine.hcxActivationKeys.create",
      "vmwareengine.hcxActivationKeys.get",
      "vmwareengine.hcxActivationKeys.getIamPolicy",
      "vmwareengine.hcxActivationKeys.list",
      "vmwareengine.hcxActivationKeys.setIamPolicy",
      "vmwareengine.locations.get",
      "vmwareengine.locations.list",
      "vmwareengine.networkPolicies.create",
      "vmwareengine.networkPolicies.delete",
      "vmwareengine.networkPolicies.get",
      "vmwareengine.networkPolicies.list",
      "vmwareengine.networkPolicies.update",
      "vmwareengine.nodeTypes.get",
      "vmwareengine.nodeTypes.list",
      "vmwareengine.operations.delete",
      "vmwareengine.operations.get",
      "vmwareengine.operations.list",
      "vmwareengine.privateClouds.create",
      "vmwareengine.privateClouds.delete",
      "vmwareengine.privateClouds.get",
      "vmwareengine.privateClouds.getIamPolicy",
      "vmwareengine.privateClouds.list",
      "vmwareengine.privateClouds.resetNsxCredentials",
      "vmwareengine.privateClouds.resetVcenterCredentials",
      "vmwareengine.privateClouds.setIamPolicy",
      "vmwareengine.privateClouds.showNsxCredentials",
      "vmwareengine.privateClouds.showVcenterCredentials",
      "vmwareengine.privateClouds.undelete",
      "vmwareengine.privateClouds.update",
      "vmwareengine.privateConnections.create",
      "vmwareengine.privateConnections.delete",
      "vmwareengine.privateConnections.get",
      "vmwareengine.privateConnections.list",
      "vmwareengine.privateConnections.listPeeringRoutes",
      "vmwareengine.privateConnections.update",
      "vmwareengine.services.use",
      "vmwareengine.services.view",
      "vmwareengine.subnets.get",
      "vmwareengine.subnets.list",
      "vmwareengine.subnets.update",
      "vmwareengine.vmwareEngineNetworks.create",
      "vmwareengine.vmwareEngineNetworks.delete",
      "vmwareengine.vmwareEngineNetworks.get",
      "vmwareengine.vmwareEngineNetworks.list",
      "vmwareengine.vmwareEngineNetworks.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/vmwareengine.vmwareengineViewer",
    "title": "VMware Engine Service Viewer",
    "description": "Viewer has read-only access to VMware Engine Service",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "vmwareengine.clusters.get",
      "vmwareengine.clusters.getIamPolicy",
      "vmwareengine.clusters.list",
      "vmwareengine.hcxActivationKeys.get",
      "vmwareengine.hcxActivationKeys.getIamPolicy",
      "vmwareengine.hcxActivationKeys.list",
      "vmwareengine.locations.get",
      "vmwareengine.locations.list",
      "vmwareengine.networkPolicies.get",
      "vmwareengine.networkPolicies.list",
      "vmwareengine.nodeTypes.get",
      "vmwareengine.nodeTypes.list",
      "vmwareengine.operations.get",
      "vmwareengine.operations.list",
      "vmwareengine.privateClouds.get",
      "vmwareengine.privateClouds.getIamPolicy",
      "vmwareengine.privateClouds.list",
      "vmwareengine.privateConnections.get",
      "vmwareengine.privateConnections.list",
      "vmwareengine.privateConnections.listPeeringRoutes",
      "vmwareengine.services.view",
      "vmwareengine.subnets.get",
      "vmwareengine.subnets.list",
      "vmwareengine.vmwareEngineNetworks.get",
      "vmwareengine.vmwareEngineNetworks.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/vpcaccess.admin",
    "title": "Serverless VPC Access Admin",
    "description": "Full access to all Serverless VPC Access resources",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "vpcaccess.connectors.create",
      "vpcaccess.connectors.delete",
      "vpcaccess.connectors.get",
      "vpcaccess.connectors.list",
      "vpcaccess.connectors.update",
      "vpcaccess.connectors.use",
      "vpcaccess.locations.list",
      "vpcaccess.operations.get",
      "vpcaccess.operations.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/vpcaccess.serviceAgent",
    "title": "Serverless VPC Access Service Agent",
    "description": "Can create and manage resources to support serverless application to connect to virtual private cloud.",
    "includedPermissions": [
      "billing.accounts.get",
      "compute.autoscalers.create",
      "compute.autoscalers.delete",
      "compute.autoscalers.get",
      "compute.autoscalers.list",
      "compute.autoscalers.update",
      "compute.disks.create",
      "compute.firewalls.create",
      "compute.firewalls.delete",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.update",
      "compute.healthChecks.create",
      "compute.healthChecks.delete",
      "compute.healthChecks.get",
      "compute.healthChecks.list",
      "compute.healthChecks.update",
      "compute.healthChecks.use",
      "compute.healthChecks.useReadOnly",
      "compute.httpHealthChecks.create",
      "compute.httpHealthChecks.delete",
      "compute.httpHealthChecks.get",
      "compute.httpHealthChecks.list",
      "compute.httpHealthChecks.use",
      "compute.httpHealthChecks.useReadOnly",
      "compute.httpsHealthChecks.create",
      "compute.httpsHealthChecks.delete",
      "compute.httpsHealthChecks.get",
      "compute.httpsHealthChecks.update",
      "compute.httpsHealthChecks.use",
      "compute.httpsHealthChecks.useReadOnly",
      "compute.images.get",
      "compute.images.useReadOnly",
      "compute.instanceGroupManagers.create",
      "compute.instanceGroupManagers.delete",
      "compute.instanceGroupManagers.get",
      "compute.instanceGroupManagers.update",
      "compute.instanceGroupManagers.use",
      "compute.instanceGroups.create",
      "compute.instanceGroups.delete",
      "compute.instanceGroups.get",
      "compute.instanceGroups.update",
      "compute.instanceTemplates.create",
      "compute.instanceTemplates.delete",
      "compute.instanceTemplates.get",
      "compute.instanceTemplates.useReadOnly",
      "compute.instances.create",
      "compute.instances.delete",
      "compute.instances.get",
      "compute.instances.getGuestAttributes",
      "compute.instances.list",
      "compute.instances.reset",
      "compute.instances.setLabels",
      "compute.instances.setMetadata",
      "compute.instances.setTags",
      "compute.instances.start",
      "compute.instances.stop",
      "compute.instances.use",
      "compute.machineTypes.get",
      "compute.networks.get",
      "compute.networks.use",
      "compute.projects.get",
      "compute.projects.setCommonInstanceMetadata",
      "compute.regionOperations.get",
      "compute.regionOperations.list",
      "compute.regions.get",
      "compute.regions.list",
      "compute.subnetworks.create",
      "compute.subnetworks.delete",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "compute.subnetworks.use",
      "compute.zoneOperations.get",
      "compute.zoneOperations.list",
      "compute.zones.get",
      "compute.zones.list",
      "deploymentmanager.compositeTypes.get",
      "deploymentmanager.deployments.create",
      "deploymentmanager.deployments.delete",
      "deploymentmanager.deployments.get",
      "deploymentmanager.deployments.list",
      "deploymentmanager.deployments.update",
      "deploymentmanager.manifests.get",
      "deploymentmanager.manifests.list",
      "deploymentmanager.operations.get",
      "deploymentmanager.operations.list",
      "deploymentmanager.typeProviders.create",
      "deploymentmanager.typeProviders.get",
      "logging.logEntries.create",
      "logging.logMetrics.create",
      "logging.logMetrics.delete",
      "logging.logMetrics.get",
      "logging.logMetrics.update",
      "resourcemanager.projects.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/vpcaccess.user",
    "title": "Serverless VPC Access User",
    "description": "User of Serverless VPC Access connectors",
    "includedPermissions": [
      "compute.networks.access",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "vpcaccess.connectors.get",
      "vpcaccess.connectors.list",
      "vpcaccess.connectors.use",
      "vpcaccess.locations.list",
      "vpcaccess.operations.get",
      "vpcaccess.operations.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/vpcaccess.viewer",
    "title": "Serverless VPC Access Viewer",
    "description": "Viewer of all Serverless VPC Access resources",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "vpcaccess.connectors.get",
      "vpcaccess.connectors.list",
      "vpcaccess.locations.list",
      "vpcaccess.operations.get",
      "vpcaccess.operations.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/websecurityscanner.serviceAgent",
    "title": "Cloud Web Security Scanner Service Agent",
    "description": "Gives the Cloud Web Security Scanner service account access to compute engine details and app engine details.",
    "includedPermissions": [
      "appengine.applications.get",
      "cloudasset.assets.listResource",
      "compute.addresses.list",
      "compute.backendServices.get",
      "compute.forwardingRules.get",
      "compute.globalForwardingRules.get",
      "compute.sslCertificates.list",
      "compute.targetHttpProxies.get",
      "compute.targetHttpsProxies.get",
      "compute.urlMaps.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/workflows.admin",
    "title": "Workflows Admin",
    "description": "Full access to workflows and related resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "workflows.callbacks.send",
      "workflows.executions.cancel",
      "workflows.executions.create",
      "workflows.executions.get",
      "workflows.executions.list",
      "workflows.locations.get",
      "workflows.locations.list",
      "workflows.operations.cancel",
      "workflows.operations.get",
      "workflows.operations.list",
      "workflows.workflows.create",
      "workflows.workflows.delete",
      "workflows.workflows.get",
      "workflows.workflows.list",
      "workflows.workflows.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/workflows.editor",
    "title": "Workflows Editor",
    "description": "Read and write access to workflows and related resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "workflows.callbacks.send",
      "workflows.executions.cancel",
      "workflows.executions.create",
      "workflows.executions.get",
      "workflows.executions.list",
      "workflows.locations.get",
      "workflows.locations.list",
      "workflows.operations.cancel",
      "workflows.operations.get",
      "workflows.operations.list",
      "workflows.workflows.create",
      "workflows.workflows.delete",
      "workflows.workflows.get",
      "workflows.workflows.list",
      "workflows.workflows.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/workflows.invoker",
    "title": "Workflows Invoker",
    "description": "Access to execute workflows and manage the executions.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "workflows.callbacks.send",
      "workflows.executions.cancel",
      "workflows.executions.create",
      "workflows.executions.get",
      "workflows.executions.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/workflows.serviceAgent",
    "title": "Cloud Workflows Service Agent",
    "description": "Gives Cloud Workflows service account access to managed resources.",
    "includedPermissions": [
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.getAccessToken",
      "iam.serviceAccounts.getOpenIdToken",
      "serviceusage.services.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/workflows.viewer",
    "title": "Workflows Viewer",
    "description": "Read-only access to workflows and related resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "workflows.executions.get",
      "workflows.executions.list",
      "workflows.locations.get",
      "workflows.locations.list",
      "workflows.operations.get",
      "workflows.operations.list",
      "workflows.workflows.get",
      "workflows.workflows.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/workloadcertificate.admin",
    "title": "Workload Certificate Admin",
    "description": "Full access to all Workload Certificate API resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "workloadcertificate.locations.get",
      "workloadcertificate.locations.list",
      "workloadcertificate.operations.cancel",
      "workloadcertificate.operations.delete",
      "workloadcertificate.operations.get",
      "workloadcertificate.operations.list",
      "workloadcertificate.workloadCertificateFeature.get",
      "workloadcertificate.workloadCertificateFeature.update",
      "workloadcertificate.workloadRegistrations.create",
      "workloadcertificate.workloadRegistrations.delete",
      "workloadcertificate.workloadRegistrations.get",
      "workloadcertificate.workloadRegistrations.list",
      "workloadcertificate.workloadRegistrations.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/workloadcertificate.registrationAdmin",
    "title": "Workload Certificate Registration Admin",
    "description": "Full access to WorkloadRegistration resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "workloadcertificate.locations.get",
      "workloadcertificate.locations.list",
      "workloadcertificate.operations.cancel",
      "workloadcertificate.operations.delete",
      "workloadcertificate.operations.get",
      "workloadcertificate.operations.list",
      "workloadcertificate.workloadRegistrations.create",
      "workloadcertificate.workloadRegistrations.delete",
      "workloadcertificate.workloadRegistrations.get",
      "workloadcertificate.workloadRegistrations.list",
      "workloadcertificate.workloadRegistrations.update"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/workloadcertificate.registrationViewer",
    "title": "Workload Certificate Registration Viewer",
    "description": "Read-only access to WorkloadRegistration resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "workloadcertificate.locations.get",
      "workloadcertificate.locations.list",
      "workloadcertificate.operations.get",
      "workloadcertificate.operations.list",
      "workloadcertificate.workloadRegistrations.get",
      "workloadcertificate.workloadRegistrations.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/workloadcertificate.serviceAgent",
    "title": "Workload Certificate Service Agent",
    "description": "Gives the Workload Certificate service agent access to Cloud Platform resources.",
    "includedPermissions": [
      "container.clusterRoleBindings.get",
      "container.clusterRoleBindings.list",
      "container.clusters.get",
      "container.clusters.update",
      "container.customResourceDefinitions.create",
      "container.customResourceDefinitions.get",
      "container.customResourceDefinitions.list",
      "container.operations.get",
      "container.thirdPartyObjects.update",
      "gkehub.features.get",
      "gkehub.fleet.create",
      "gkehub.fleet.get",
      "gkehub.locations.get",
      "gkehub.locations.list",
      "gkehub.memberships.get",
      "gkehub.memberships.list",
      "gkehub.operations.get",
      "serviceconsumermanagement.tenancyu.addResource",
      "serviceconsumermanagement.tenancyu.create",
      "serviceconsumermanagement.tenancyu.delete",
      "serviceconsumermanagement.tenancyu.removeResource",
      "serviceusage.services.use",
      "workloadcertificate.workloadCertificateFeature.get",
      "workloadcertificate.workloadRegistrations.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/workloadcertificate.viewer",
    "title": "Workload Certificate Viewer",
    "description": "Read-only access to Workload Certificate all resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "workloadcertificate.locations.get",
      "workloadcertificate.locations.list",
      "workloadcertificate.operations.get",
      "workloadcertificate.operations.list",
      "workloadcertificate.workloadCertificateFeature.get",
      "workloadcertificate.workloadRegistrations.get",
      "workloadcertificate.workloadRegistrations.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/workloadmanager.admin",
    "title": "Workload Manager Admin",
    "description": "Full access to Workload Manager all resources.",
    "includedPermissions": [
      "compute.acceleratorTypes.list",
      "compute.diskTypes.list",
      "compute.machineTypes.list",
      "compute.networks.list",
      "compute.projects.get",
      "compute.regions.list",
      "compute.subnetworks.list",
      "compute.zones.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "storage.buckets.list",
      "workloadmanager.evaluations.create",
      "workloadmanager.evaluations.delete",
      "workloadmanager.evaluations.get",
      "workloadmanager.evaluations.list",
      "workloadmanager.evaluations.run",
      "workloadmanager.evaluations.update",
      "workloadmanager.executions.delete",
      "workloadmanager.executions.get",
      "workloadmanager.executions.list",
      "workloadmanager.locations.get",
      "workloadmanager.locations.list",
      "workloadmanager.operations.cancel",
      "workloadmanager.operations.delete",
      "workloadmanager.operations.get",
      "workloadmanager.operations.list",
      "workloadmanager.results.list",
      "workloadmanager.rules.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/workloadmanager.serviceAgent",
    "title": "Workload Manager Service Agent",
    "description": "Gives Workload Manager Service Agent access to CAI export functions and Cloud Monitoring.",
    "includedPermissions": [
      "cloudasset.assets.exportAccessPolicy",
      "cloudasset.assets.exportIamPolicy",
      "cloudasset.assets.exportOSInventories",
      "cloudasset.assets.exportOrgPolicy",
      "cloudasset.assets.exportResource",
      "cloudasset.assets.searchAllResources",
      "config.deployments.create",
      "config.deployments.delete",
      "config.deployments.get",
      "config.deployments.list",
      "config.deployments.update",
      "config.locations.get",
      "config.locations.list",
      "config.operations.cancel",
      "config.operations.delete",
      "config.operations.get",
      "config.operations.list",
      "config.resources.list",
      "config.revisions.get",
      "config.revisions.list",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.timeSeries.list"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/workloadmanager.viewer",
    "title": "Workload Manager Viewer",
    "description": "Read-only access to Workload Manager all resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "workloadmanager.evaluations.get",
      "workloadmanager.evaluations.list",
      "workloadmanager.executions.get",
      "workloadmanager.executions.list",
      "workloadmanager.results.list",
      "workloadmanager.rules.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/workloadmanager.worker",
    "title": "Workload Manager Worker",
    "description": "The role used by Workload Manager application runners to read and update workloads.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "workloadmanager.evaluations.create",
      "workloadmanager.evaluations.delete",
      "workloadmanager.evaluations.get",
      "workloadmanager.evaluations.list",
      "workloadmanager.evaluations.run",
      "workloadmanager.evaluations.update",
      "workloadmanager.executions.delete",
      "workloadmanager.executions.get",
      "workloadmanager.executions.list",
      "workloadmanager.results.list",
      "workloadmanager.rules.list"
    ],
    "stage": "BETA",
    "etag": "AA=="
  },
  {
    "name": "roles/workstations.admin",
    "title": "Cloud Workstations Admin",
    "description": "Grants CRUD access to all Workstation resources.",
    "includedPermissions": [
      "compute.machineTypes.get",
      "compute.machineTypes.list",
      "compute.networks.get",
      "compute.networks.list",
      "compute.subnetworks.get",
      "compute.subnetworks.list",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.list",
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "workstations.operations.get",
      "workstations.workstationClusters.create",
      "workstations.workstationClusters.delete",
      "workstations.workstationClusters.get",
      "workstations.workstationClusters.list",
      "workstations.workstationClusters.update",
      "workstations.workstationConfigs.create",
      "workstations.workstationConfigs.delete",
      "workstations.workstationConfigs.get",
      "workstations.workstationConfigs.getIamPolicy",
      "workstations.workstationConfigs.list",
      "workstations.workstationConfigs.setIamPolicy",
      "workstations.workstationConfigs.update",
      "workstations.workstations.create",
      "workstations.workstations.delete",
      "workstations.workstations.get",
      "workstations.workstations.getIamPolicy",
      "workstations.workstations.list",
      "workstations.workstations.setIamPolicy",
      "workstations.workstations.start",
      "workstations.workstations.stop",
      "workstations.workstations.update"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/workstations.networkAdmin",
    "title": "Cloud Workstations Network Admin",
    "description": "Grants ability to connect a Workstation Cluster to a shared VPC network.",
    "includedPermissions": [
      "compute.addresses.create",
      "compute.addresses.createInternal",
      "compute.addresses.delete",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.use",
      "compute.forwardingRules.create",
      "compute.forwardingRules.delete",
      "compute.forwardingRules.get",
      "compute.forwardingRules.pscCreate",
      "compute.forwardingRules.pscDelete",
      "compute.globalOperations.get",
      "compute.networks.get",
      "compute.networks.updatePolicy",
      "compute.networks.use",
      "compute.networks.useExternalIp",
      "compute.regionOperations.get",
      "compute.subnetworks.get",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.zoneOperations.get",
      "servicedirectory.namespaces.create",
      "servicedirectory.namespaces.delete",
      "servicedirectory.services.create",
      "servicedirectory.services.delete"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/workstations.operationViewer",
    "title": "Cloud Workstations Operation Viewer",
    "description": "Grants ability to view Cloud Workstations API operations.",
    "includedPermissions": [
      "workstations.operations.get"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/workstations.serviceAgent",
    "title": "Workstations Service Agent",
    "description": "Grants the Workstations Service Account access to manage resources in consumer project.",
    "includedPermissions": [
      "compute.addresses.create",
      "compute.addresses.createInternal",
      "compute.addresses.delete",
      "compute.addresses.deleteInternal",
      "compute.addresses.get",
      "compute.addresses.use",
      "compute.disks.create",
      "compute.disks.createSnapshot",
      "compute.disks.delete",
      "compute.disks.get",
      "compute.disks.list",
      "compute.disks.setLabels",
      "compute.disks.use",
      "compute.firewalls.create",
      "compute.firewalls.delete",
      "compute.firewalls.get",
      "compute.firewalls.update",
      "compute.forwardingRules.create",
      "compute.forwardingRules.delete",
      "compute.forwardingRules.get",
      "compute.forwardingRules.pscCreate",
      "compute.forwardingRules.pscDelete",
      "compute.globalOperations.get",
      "compute.instances.attachDisk",
      "compute.instances.create",
      "compute.instances.delete",
      "compute.instances.detachDisk",
      "compute.instances.get",
      "compute.instances.getGuestAttributes",
      "compute.instances.setLabels",
      "compute.instances.setMetadata",
      "compute.instances.setServiceAccount",
      "compute.instances.setTags",
      "compute.networks.addPeering",
      "compute.networks.get",
      "compute.networks.removePeering",
      "compute.networks.updatePolicy",
      "compute.networks.use",
      "compute.networks.useExternalIp",
      "compute.regionOperations.get",
      "compute.regions.get",
      "compute.snapshots.create",
      "compute.snapshots.delete",
      "compute.snapshots.get",
      "compute.snapshots.setLabels",
      "compute.snapshots.useReadOnly",
      "compute.subnetworks.get",
      "compute.subnetworks.use",
      "compute.subnetworks.useExternalIp",
      "compute.zoneOperations.get",
      "dns.networks.bindPrivateDNSZone",
      "dns.networks.targetWithPeeringZone",
      "iam.serviceAccounts.actAs",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.list",
      "servicedirectory.namespaces.create",
      "servicedirectory.namespaces.delete",
      "servicedirectory.services.create",
      "servicedirectory.services.delete"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/workstations.user",
    "title": "Cloud Workstations User",
    "description": "Grants runtime access to Workstation resources.",
    "includedPermissions": [
      "workstations.operations.get",
      "workstations.workstations.delete",
      "workstations.workstations.get",
      "workstations.workstations.start",
      "workstations.workstations.stop",
      "workstations.workstations.update",
      "workstations.workstations.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/workstations.workstationCreator",
    "title": "Cloud Workstations Creator",
    "description": "Grants ability to create Workstation resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "workstations.operations.get",
      "workstations.workstationClusters.get",
      "workstations.workstationClusters.list",
      "workstations.workstationConfigs.get",
      "workstations.workstations.create"
    ],
    "stage": "GA",
    "etag": "AA=="
  },
  {
    "name": "roles/workstations.workstationUser",
    "title": "Cloud Workstations User (Deprecated)",
    "description": "Grants runtime access to Workstation resources.",
    "includedPermissions": [
      "resourcemanager.projects.get",
      "resourcemanager.projects.list",
      "workstations.operations.get",
      "workstations.workstationClusters.get",
      "workstations.workstationClusters.list",
      "workstations.workstations.delete",
      "workstations.workstations.get",
      "workstations.workstations.start",
      "workstations.workstations.stop",
      "workstations.workstations.use"
    ],
    "stage": "GA",
    "etag": "AA=="
  }
]